{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"lesson1/Lesson1%20C%2B%2B/","text":"Lesson 1 C++\u7684\u73af\u5883\u8bbe\u7f6e\u3001\u6570\u636e\u7c7b\u578b\u3001\u8fd0\u7b97\u7b26\u548c\u8f93\u5165\u548c\u8f93\u51fa \u524d\u8a00\uff1a\u4e3a\u4ec0\u4e48\u8981\u5b66\u4e60C++ C++\u662f\u4e00\u95e8\u529f\u80fd\u5f3a\u5927\u4e14\u7075\u6d3b\u591a\u6837\u7684\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u8bed\u8a00\uff0c\u200c\u5b83\u5177\u6709\u591a\u79cd\u7279\u70b9\uff0c\u200c\u5305\u62ec\u590d\u6742\u6027\u3001\u200c\u9762\u5411\u5bf9\u8c61\u3001\u200c\u9ad8\u6548\u6027\u80fd\u3001\u200c\u4f4e\u7ea7\u5185\u5b58\u64cd\u4f5c\u3001\u200c\u8de8\u5e73\u53f0\u652f\u6301\u3001\u200c\u591a\u7ebf\u7a0b\u4ee5\u53ca\u6cdb\u578b\u7f16\u7a0b\u3002 C++\u53ef\u4ee5\u7528\u4e8e\u7f16\u5199\u684c\u9762\u5e94\u7528\u7a0b\u5e8f\u3001\u200c\u7cfb\u7edf\u8f6f\u4ef6\u3001\u200c\u6e38\u620f\u5f00\u53d1\u3001\u200c\u5b9e\u65f6\u7cfb\u7edf\u548c\u5d4c\u5165\u5f0f\u7cfb\u7edf\u5e94\u7528\u7a0b\u5e8f\u7b49\u591a\u79cd\u7c7b\u578b\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u5c3d\u7ba1C++\u5728\u5176\u4f20\u7edf\u9886\u57df\u4e2d\u53d7\u5230\u5176\u4ed6\u7ade\u4e89\u8bed\u8a00\u7684\u51b2\u51fb\uff0c\u4f46\u5176\u4e3b\u8981\u4f18\u52bf\u5728\u4e8e\u5f3a\u5927\u7684\u62bd\u8c61\u80fd\u529b\u3001\u9ad8\u6027\u80fd\u4ee5\u53ca\u4f4e\u529f\u8017\u3002 \u5b9e\u7528\u573a\u666f\u793a\u4f8b\uff1a \u6e38\u620f\u5f00\u53d1 \uff1a\u8bb8\u591a\u5927\u578b\u6e38\u620f\u548c\u6e38\u620f\u5f15\u64ce\uff0c\u5982Unreal Engine\u548cUnity\u7684\u5e95\u5c42\u90e8\u5206\uff0c\u90fd\u662f\u7528C++\u7f16\u5199\u7684\u3002C++\u7684\u9ad8\u6027\u80fd\u548c\u5bf9\u786c\u4ef6\u8d44\u6e90\u7684\u76f4\u63a5\u63a7\u5236\u4f7f\u5176\u6210\u4e3a\u6e38\u620f\u5f00\u53d1\u7684\u7406\u60f3\u9009\u62e9\u3002 \u7cfb\u7edf\u8f6f\u4ef6 \uff1a\u64cd\u4f5c\u7cfb\u7edf\u3001\u9a71\u52a8\u7a0b\u5e8f\u548c\u5d4c\u5165\u5f0f\u7cfb\u7edf\u7b49\u9700\u8981\u9ad8\u6548\u6027\u80fd\u548c\u4f4e\u7ea7\u786c\u4ef6\u8bbf\u95ee\u7684\u8f6f\u4ef6\uff0c\u901a\u5e38\u4f7f\u7528C++\u7f16\u5199\u3002\u4f8b\u5982\uff0cWindows\u64cd\u4f5c\u7cfb\u7edf\u7684\u8bb8\u591a\u90e8\u5206\u90fd\u662f\u7528C++\u5b9e\u73b0\u7684\u3002 \u91d1\u878d\u884c\u4e1a \uff1a\u9ad8\u9891\u4ea4\u6613\u7cfb\u7edf\u548c\u5b9e\u65f6\u5206\u6790\u5de5\u5177\u7b49\u5bf9\u6027\u80fd\u8981\u6c42\u6781\u9ad8\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u7ecf\u5e38\u7528C++\u5f00\u53d1\u3002C++\u7684\u4f4e\u5ef6\u8fdf\u7279\u6027\u5728\u91d1\u878d\u9886\u57df\u5c24\u5176\u91cd\u8981\u3002 \u5d4c\u5165\u5f0f\u7cfb\u7edf \uff1a\u8bb8\u591a\u5d4c\u5165\u5f0f\u8bbe\u5907\uff0c\u5982\u5bb6\u7528\u7535\u5668\u3001\u6c7d\u8f66\u63a7\u5236\u7cfb\u7edf\u548c\u7269\u8054\u7f51\u8bbe\u5907\uff0c\u90fd\u4f7f\u7528C++\u7f16\u7a0b\u3002C++\u5141\u8bb8\u5f00\u53d1\u8005\u5728\u53d7\u9650\u7684\u786c\u4ef6\u8d44\u6e90\u73af\u5883\u4e2d\u7f16\u5199\u9ad8\u6548\u7684\u4ee3\u7801\u3002 \u79d1\u5b66\u8ba1\u7b97 \uff1a\u5728\u9700\u8981\u5904\u7406\u5927\u91cf\u6570\u636e\u548c\u590d\u6742\u8ba1\u7b97\u7684\u79d1\u5b66\u7814\u7a76\u9886\u57df\uff0cC++\u7ecf\u5e38\u88ab\u7528\u6765\u5f00\u53d1\u9ad8\u6027\u80fd\u8ba1\u7b97\u7a0b\u5e8f\u3002\u8bf8\u5982CERN\u7684\u5927\u578b\u5f3a\u5b50\u5bf9\u649e\u673a\u6570\u636e\u5206\u6790\u8f6f\u4ef6\u5c31\u662f\u7528C++\u7f16\u5199\u7684\u3002 \u901a\u8fc7\u8fd9\u4e9b\u5b9e\u9645\u6848\u4f8b\uff0c\u53ef\u4ee5\u66f4\u597d\u5730\u7406\u89e3C++\u5728\u4e0d\u540c\u9886\u57df\u7684\u5e94\u7528\u548c\u91cd\u8981\u6027\u3002\u5b66\u4e60C++\u4e0d\u4ec5\u53ef\u4ee5\u589e\u5f3a\u7f16\u7a0b\u80fd\u529b\uff0c\u8fd8\u80fd\u4e3a\u8fdb\u5165\u591a\u4e2a\u9ad8\u9700\u6c42\u884c\u4e1a\u6253\u4e0b\u575a\u5b9e\u7684\u57fa\u7840\u3002 \u672c\u6587\u6863\u6d89\u53ca\u8303\u56f4\u5bf9\u6807\u5927\u5b66\u8ba1\u7b97\u673a\u5927\u4e00\u5165\u95e8\u8bfe\u7a0b\uff0c\u5e2e\u52a9\u5927\u5b66\u5b66\u751f\u4ee5\u53ca\u51c6\u5907\u5b66\u4e60\u7b97\u6cd5\u7ade\u8d5b\u7684\u521d\u9ad8\u4e2d\u751f\uff0c\u5165\u95e8C++\u7f16\u7a0b\u8bed\u8a00\uff0c\u901a\u8fc7\u9488\u5bf9\u6027\u7b97\u6cd5\u8bad\u7ec3\u638c\u63e1\u8bed\u6cd5\u548c\u57fa\u7840\u7b97\u6cd5\uff0c\u4e3a\u4e0b\u4e00\u9636\u6bb5\u5b66\u4e60\u505a\u51c6\u5907\u3002 1. C++\u73af\u5883\u914d\u7f6e 1.1 \u4e0b\u8f7d VS Code \u8bbf\u95ee Visual Studio Code \u5b98\u65b9\u7f51\u7ad9 https://code.visualstudio.com/ \u70b9\u51fb\u201cDownload\u201d\u6309\u94ae\uff0c\u9009\u62e9\u9002\u5408\u4f60\u64cd\u4f5c\u7cfb\u7edf\u7684\u5b89\u88c5\u7a0b\u5e8f\uff08Windows\u3001macOS \u6216 Linux\uff09\u3002 1.2 \u5b89\u88c5 VS Code \u4e0b\u8f7d\u5b8c\u6210\u540e\uff0c\u8fd0\u884c\u5b89\u88c5\u7a0b\u5e8f\u3002 \u6309\u7167\u5b89\u88c5\u5411\u5bfc\u5b8c\u6210\u5b89\u88c5\u8fc7\u7a0b\u3002 1.3 \u5b89\u88c5 C++ \u63d2\u4ef6 1.3.1 \u542f\u52a8 VS Code \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u542f\u52a8 VS Code\u3002 1.3.2 \u5b89\u88c5 C++ \u63d2\u4ef6 \u70b9\u51fb\u5de6\u4fa7\u6d3b\u52a8\u680f\u4e2d\u7684\u201cExtensions\u201d\u56fe\u6807\uff08\u6216\u6309 Ctrl+Shift+X\uff09\u3002 \u5728\u641c\u7d22\u6846\u4e2d\u8f93\u5165 C++\u3002 \u627e\u5230\u5e76\u5b89\u88c5\u7531 Microsoft \u53d1\u5e03\u7684\u201cC/C++\u201d\u6269\u5c55\u3002 \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u70b9\u51fb\"\u91cd\u65b0\u52a0\u8f7d\"\u6309\u94ae\u91cd\u65b0\u52a0\u8f7dVSCode\u6216\u91cd\u542fVSCode 1.4 \u5b89\u88c5C++\u7f16\u8bd1\u5668 1.4.1 \u68c0\u67e5\u662f\u5426\u5df2\u5b89\u88c5\u7f16\u8bd1\u5668 \u5982\u679c\u4f60\u60f3\u8981\u68c0\u67e5\u4f60\u7684\u7535\u8111\u4e0a\u662f\u5426\u5df2\u7ecf\u5b89\u88c5\u4e86 GNU Compiler Collection (GCC) \u6216\u8005 Clang \u7f16\u8bd1\u5668\uff0c\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u64cd\u4f5c\uff1a 1. \u6253\u5f00 VSCode\uff0c\u7136\u540e\u6253\u5f00\u4e00\u4e2a\u65b0\u7684\u7ec8\u7aef\u7a97\u53e3\uff08\u4f7f\u7528\u5feb\u6377\u952e \u2303\u21e7` \u6216 \u70b9\u51fb\u5de6\u4e0a\u89d2\u67e5\u770b->\u7ec8\u7aef\uff09\u3002 2. \u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\u6765\u68c0\u67e5 GCC \u7f16\u8bd1\u5668 g++ \u7684\u7248\u672c: g++ --version \u6216\u8005\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u6765\u68c0\u67e5 Clang \u7f16\u8bd1\u5668 clang \u7684\u7248\u672c\uff1a clang --version 3. \u5982\u679c\u4f60\u7684\u7535\u8111\u5df2\u7ecf\u5b89\u88c5\u4e86\u5bf9\u5e94\u7684\u7f16\u8bd1\u5668\uff0c\u547d\u4ee4\u4f1a\u663e\u793a\u7f16\u8bd1\u5668\u7684\u7248\u672c\u4fe1\u606f\u548c\u8be6\u7ec6\u5185\u5bb9\u3002 4. \u5982\u679c\u6ca1\u6709\u627e\u5230\u5bf9\u5e94\u7684\u7f16\u8bd1\u5668\uff0c\u786e\u4fdd\u4f60\u7684\u7f16\u8bd1\u5668\u53ef\u6267\u884c\u6587\u4ef6\u5728\u7cfb\u7edf\u7684\u8def\u5f84\u4e2d\uff08\u5728 Windows \u4e0b\u662f %PATH \uff0cLinux \u548c macOS \u4e0b\u662f $PATH \uff09\uff0c\u8fd9\u6837 C/C++ \u6269\u5c55\u5c31\u53ef\u4ee5\u627e\u5230\u5b83\u3002 \u5982\u679c\u6ca1\u6709\u5b89\u88c5\u5bf9\u5e94\u7684\u7f16\u8bd1\u5668 \uff0c\u53ef\u4ee5\u6309\u7167\u4e0b\u9762\u7684\u6b65\u9aa4\u5b89\u88c5\u4e00\u4e2a\u7f16\u8bd1\u5668\u3002 1.4.2 \u5bf9\u4e8e Windows \u7528\u6237\uff1a Windows \u5e38\u7528\u7684C/C++\u7f16\u8bd1\u5668\u662f MSVC \u548c MinGW \u3002\u4f60\u53ef\u4ee5\u9009\u62e9\u5176\u4e2d\u4e00\u79cd\u8fdb\u884c\u5b89\u88c5,\u6b64\u5904\u5c55\u793aMSVC\u5b89\u88c5\u6559\u7a0b MSVC \u5b89\u88c5\u548c\u914d\u7f6e\u6559\u7a0b \u5b89\u88c5\u6b65\u9aa4\uff1a \u6253\u5f00\u94fe\u63a5 https://visualstudio.microsoft.com/zh-hans/downloads/ \u5c06\u9875\u9762\u5212\u5230\u6700\u5e95\u4e0b\u7684\u201c\u6240\u6709\u4e0b\u8f7d\u201d\uff0c\u5e76\u627e\u5230\u201c\u7528\u4e8e Visual Studio \u7684\u5de5\u5177\u201d \u70b9\u51fb\u4e0b\u8f7dVisual Stuio 2022 \u751f\u6210\u5de5\u5177 \u4e0b\u8f7d\u5b8c\u6210\u540e\u6253\u5f00\uff0c\u8fd9\u5c06\u542f\u52a8 Visual Studio \u5b89\u88c5\u7a0b\u5e8f\uff0c\u52fe\u9009 \u201c\u4f7f\u7528C++\u7684\u684c\u9762\u5f00\u53d1\u201d\uff0c\u7136\u540e\u9009\u62e9\u5b89\u88c5\u6309\u94ae\u8fdb\u884c\u5b89\u88c5\u3002 \u68c0\u67e5\u4f60\u7684 Microsoft Visual C++ \u5b89\u88c5\u662f\u5426\u6210\u529f \u5728 Windows \u5f00\u59cb\u83dc\u5355\u4e2d\u641c\u7d22 \"developer\"\uff0c\u9009\u62e9\u5408\u9002\u7684 Visual Studio \u5f00\u53d1\u4eba\u5458\u547d\u4ee4\u63d0\u793a\u7b26\u7248\u672c\uff08\u6839\u636e\u4f60\u5b89\u88c5\u7684 Visual Studio \u6216 Build Tools \u7248\u672c\u9009\u62e9\uff09\u3002 \u5728\u6253\u5f00\u7684\u547d\u4ee4\u63d0\u793a\u7b26\u7a97\u53e3\u4e2d\uff0c\u8f93\u5165 cl \u5e76\u6309\u4e0b Enter \u952e\u3002 \u5982\u679c\u7f16\u8bd1\u5668\u6b63\u786e\u5b89\u88c5\uff0c\u4f60\u5e94\u8be5\u4f1a\u770b\u5230\u4e00\u4e2a\u5305\u542b\u7248\u672c\u53f7\u548c\u57fa\u672c\u4f7f\u7528\u8bf4\u660e\u7684\u7248\u6743\u4fe1\u606f. 1.4.2 \u5bf9\u4e8e macOS \u7528\u6237\uff1a \u68c0\u67e5\u662f\u5426\u5df2\u5b89\u88c5Clang \u6253\u5f00\u7ec8\u7aef\uff0c\u8fd0\u884c\u547d\u4ee4 clang --version \u5982\u679c\u6ca1\u6709\uff0c\u5219\u5b89\u88c5Clang: \u6253\u5f00\u7ec8\u7aef\uff0c\u8fd0\u884c\u547d\u4ee4 xcode-select --install \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u8fd0\u884c\u547d\u4ee4\u68c0\u67e5 clang --version 1.5 C++\u7f16\u8bd1&\u8fd0\u884c C++\u7684\u8fd0\u884c\u8fc7\u7a0b C++\u7a0b\u5e8f\u7684\u8fd0\u884c\u5fc5\u987b\u7ecf\u8fc7\u7f16\u5199\u3001\u7f16\u8bd1\u548c\u8fd0\u884c 3 \u4e2a\u6b65\u9aa4\u3002 \u7f16\u5199\uff1a\u5728 C++ \u5f00\u53d1\u73af\u5883\u4e2d\u7f16\u5199\u7a0b\u5e8f\u4ee3\u7801\uff0c\u5f62\u6210\u540e\u7f00\u540d\u4e3a .cpp \u7684 C++ \u6e90\u6587\u4ef6 \u7f16\u8bd1\uff1a\u4f7f\u7528 C++ \u7f16\u8bd1\u5668\uff08\u5982 g++ \u547d\u4ee4\uff09\u5bf9\u6e90\u6587\u4ef6\u8fdb\u884c\u7f16\u8bd1\u3002\u5982\u679c\u6e90\u4ee3\u7801\u4e2d\u6ca1\u6709\u8bed\u6cd5\u9519\u8bef\uff0c\u7f16\u8bd1\u5668\u4f1a\u751f\u6210\u76ee\u6807\u6587\u4ef6\uff08\u901a\u5e38\u662f\u540e\u7f00\u4e3a .o \u6216 .obj \u7684\u6587\u4ef6\uff09\u4ee5\u53ca\u6700\u7ec8\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff08\u5728 Linux \u4e0a\u901a\u5e38\u6ca1\u6709\u540e\u7f00\uff0c\u5728 Windows \u4e0a\u901a\u5e38\u662f .exe \u6587\u4ef6\uff09\u3002 \u8fd0\u884c\uff1a\u901a\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u76f4\u63a5\u8fd0\u884c\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002C++ \u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u662f\u5e73\u53f0\u76f8\u5173\u7684\uff0c\u5fc5\u987b\u5728\u751f\u6210\u8be5\u6587\u4ef6\u7684\u5e73\u53f0\u4e0a\u8fd0\u884c\uff0c\u6216\u8005\u4f7f\u7528\u76f8\u5e94\u7684\u5de5\u5177\u8fdb\u884c\u8de8\u5e73\u53f0\u6267\u884c\u3002 2. \u7b2c\u4e00\u4e2a\u7a0b\u5e8f\uff1aHello World\uff01 C++\u5e38\u7528\u7684\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff08IDE\uff09 \u96c6\u6210\u5f00\u53d1\u73af\u5883\uff08Integrated Development Environment\uff0c\u7b80\u79f0IDE\uff09\u662f\u4e00\u79cd\u8f6f\u4ef6\u5de5\u5177\uff0c\u63d0\u4f9b\u4e86\u4e00\u5957\u96c6\u6210\u7684\u529f\u80fd\u548c\u5de5\u5177\uff0c\u7528\u4e8e\u5f00\u53d1\u3001\u7f16\u5199\u3001\u6d4b\u8bd5\u548c\u8c03\u8bd5\u8f6f\u4ef6\u5e94\u7528\u7a0b\u5e8f\u3002 IDE\u901a\u5e38\u5305\u62ec\u4ee5\u4e0b\u6838\u5fc3\u7ec4\u4ef6\uff1a\u4ee3\u7801\u7f16\u8f91\u5668\u3001\u7f16\u8bd1\u5668/\u89e3\u91ca\u5668\u3001\u8c03\u8bd5\u5668\u3001\u6784\u5efa\u5de5\u5177\u3001\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u96c6\u6210\u3001\u56fe\u5f62\u7528\u6237\u754c\u9762\u8bbe\u8ba1\u5668\u3001\u9879\u76ee\u7ba1\u7406\u5de5\u5177\u3002 \u901a\u8fc7\u96c6\u6210\u8fd9\u4e9b\u529f\u80fd\u548c\u5de5\u5177\uff0cIDE\u53ef\u4ee5\u63d0\u9ad8\u5f00\u53d1\u4eba\u5458\u7684\u751f\u4ea7\u529b\uff0c\u7b80\u5316\u5f00\u53d1\u8fc7\u7a0b\uff0c\u5e76\u63d0\u4f9b\u66f4\u597d\u7684\u4ee3\u7801\u8d28\u91cf\u548c\u53ef\u7ef4\u62a4\u6027\u3002IDE\u901a\u5e38\u4e0e\u7279\u5b9a\u7684\u7f16\u7a0b\u8bed\u8a00\u6216\u5f00\u53d1\u5e73\u53f0\u76f8\u5173\uff0c\u4f8b\u5982C++\u5f00\u53d1\u4e2d\u5e38\u7528\u7684Visual Studio\u3001CLion\u548cEclipse CDT\u7b49\u3002 \u8fd9\u4e9b IDE \u90fd\u5177\u6709\u4e30\u5bcc\u7684\u529f\u80fd\u96c6\uff0c\u80fd\u591f\u663e\u8457\u63d0\u9ad8 C++ \u5f00\u53d1\u4eba\u5458\u7684\u751f\u4ea7\u529b\uff0c\u7b80\u5316\u5f00\u53d1\u8fc7\u7a0b\uff0c\u5e76\u901a\u8fc7\u5f3a\u5927\u7684\u5de5\u5177\u548c\u96c6\u6210\u73af\u5883\u63d0\u9ad8\u4ee3\u7801\u8d28\u91cf\u548c\u53ef\u7ef4\u62a4\u6027\u3002\u9009\u62e9\u9002\u5408\u7684 IDE \u53d6\u51b3\u4e8e\u4e2a\u4eba\u504f\u597d\u3001\u56e2\u961f\u9700\u6c42\u4ee5\u53ca\u9879\u76ee\u7279\u70b9\u3002 \u9488\u5bf9 C++ \u5f00\u53d1\uff0c\u4ee5\u4e0b\u662f\u51e0\u4e2a\u5e38\u7528\u7684\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff08IDE\uff09\uff1a Visual Studio (Microsoft) \u5b98\u7f51: https://visualstudio.microsoft.com/ Visual Studio \u63d0\u4f9b\u4e86\u591a\u4e2a\u7248\u672c\uff0c\u5305\u62ec Community\uff08\u514d\u8d39\uff09\u3001Professional \u548c Enterprise\u3002 \u5b83\u662f\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684 IDE\uff0c\u652f\u6301\u591a\u79cd\u8bed\u8a00\uff0c\u5305\u62ec C++\u3002Visual Studio \u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u8c03\u8bd5\u5de5\u5177\u3001\u56fe\u5f62\u5316\u754c\u9762\u8bbe\u8ba1\u3001\u4ee3\u7801\u5206\u6790\u548c\u4f18\u5316\u7b49\u529f\u80fd\uff0c\u7279\u522b\u9002\u5408 Windows \u5e73\u53f0\u7684 C++ \u5f00\u53d1\u3002 CLion (JetBrains) \u5b98\u7f51: https://www.jetbrains.com/clion/ CLion \u662f JetBrains \u516c\u53f8\u4e13\u95e8\u4e3a C++ \u5f00\u53d1\u8005\u8bbe\u8ba1\u7684 IDE\u3002\u5b83\u96c6\u6210\u4e86\u667a\u80fd\u4ee3\u7801\u7f16\u8f91\u3001\u5f3a\u5927\u7684\u8c03\u8bd5\u5668\u3001\u7248\u672c\u63a7\u5236\u7b49\u529f\u80fd\uff0c\u652f\u6301\u8de8\u5e73\u53f0\u5f00\u53d1\uff08Windows\u3001macOS \u548c Linux\uff09\u3002 CLion \u63d0\u4f9b\u4e86\u8bb8\u591a\u73b0\u4ee3\u5316\u7684\u5de5\u5177\u548c\u529f\u80fd\uff0c\u80fd\u591f\u663e\u8457\u63d0\u9ad8 C++ \u5f00\u53d1\u7684\u6548\u7387\u548c\u4ee3\u7801\u8d28\u91cf\u3002 Eclipse CDT (Eclipse) \u5b98\u7f51: https://www.eclipse.org/cdt/ Eclipse CDT \u662f Eclipse \u7684 C/C++ \u5f00\u53d1\u5de5\u5177\u96c6\u6210\uff0c\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u529f\u80fd\u5982\u4ee3\u7801\u7f16\u8f91\u3001\u8c03\u8bd5\u3001\u7248\u672c\u63a7\u5236\u7b49\u3002\u5b83\u662f\u4e00\u4e2a\u5f00\u6e90\u3001\u8de8\u5e73\u53f0\u7684 IDE\uff0c\u9002\u5408\u9700\u8981\u7075\u6d3b\u914d\u7f6e\u548c\u4e30\u5bcc\u63d2\u4ef6\u652f\u6301\u7684\u5f00\u53d1\u8005\u4f7f\u7528\u3002 \u8fd9\u91cc\u4ee5 VSCode\u4e3a\u4f8b\u5c55\u793a\u5982\u4f55\u4f7f\u7528IDE\u7f16\u5199\u4f60\u7684\u7b2c\u4e00\u4e2aHello World \u7a0b\u5e8f\uff1a \u6253\u5f00\u7ec8\u7aef\uff08MacOS\uff09/ Developer Command Prompt for VS\uff08Windows\uff09\u5e76\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff1a mkdir projects cd projects mkdir helloworld cd helloworld code . \u4ee5\u4e0a\u547d\u4ee4\u4f1a\u4f9d\u6b21\u5728\u9ed8\u8ba4\u8def\u5f84\u4e0b\u521b\u5efa projects \u6587\u4ef6\u5939\u3001helloworld \u5b50\u6587\u4ef6\u5939\uff0c\u5e76\u5728 helloworld \u6587\u4ef6\u5939\u4e2d\u6253\u5f00 VS Code\u3002 \u5e38\u89c1\u95ee\u9898\uff1a \u5982\u679c\u5728 Windows \u4e0a mkdir \u540e\u663e\u793a\u201c\u62d2\u7edd\u8bbf\u95ee\u201d\uff1a - \u53ef\u4ee5\u5c1d\u8bd5\u9000\u51fa\u540e\u53f3\u952e\u5355\u51fb \"Developer Command Prompt for VS\" - \u9009\u62e9 \"\u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u8fd0\u884c\"\u3002 - \u5728\u7ba1\u7406\u5458\u6743\u9650\u7684\u7a97\u53e3\u4e2d\u5c1d\u8bd5\u518d\u6b21\u8fd0\u884c\u4ee5\u4e0a mkdir \u547d\u4ee4 \u5982\u679c\u5728 Mac \u4e0a\u8f93\u5165 code . \u540e\u663e\u793a command not found : - \u6253\u5f00 VSCode\uff0c\u6309\u4e0b Command + Shift + P \u6253\u5f00\u547d\u4ee4\u9762\u677f\u3002 \u8f93\u5165 \"shell command\" \u5e76\u9009\u62e9 \"Shell Command: Install 'code' command in PATH\" \u9009\u9879\u3002\u8fd9\u4f1a\u5728\u7ec8\u7aef\u4e2d\u914d\u7f6e code \u547d\u4ee4\u7684\u8def\u5f84\u3002 - \u5728\u7ec8\u7aef\u518d\u6b21\u5c1d\u8bd5\u8fd0\u884c\u4ee5\u4e0a mkdir \u547d\u4ee4 \u6dfb\u52a0\u6e90\u4ee3\u7801\u6587\u4ef6 \u5728 VS Code \u7684\u8d44\u6e90\u7ba1\u7406\u5668\u6807\u9898\u680f\u4e2d\uff0c\u9009\u62e9\u201c\u65b0\u6587\u4ef6\u201d\u6309\u94ae\uff0c\u5e76\u547d\u540d\u4e3a helloworld.cpp \u3002 \u6dfb\u52a0 Hello World \u6e90\u4ee3\u7801 \u5c06\u4ee5\u4e0b\u4ee3\u7801\u7c98\u8d34\u5230 helloworld.cpp \u6587\u4ef6\u4e2d\uff1a #include <iostream> using namespace std; int main(){ cout << \"Hello World! \" << endl; } \u6309 \u2318S (Mac) \u6216 Ctrl+S (Windows) \u4fdd\u5b58\u6587\u4ef6\u3002\u4fdd\u5b58\u540e\uff0c\u6587\u4ef6\u8d44\u6e90\u7ba1\u7406\u5668\u89c6\u56fe\u4e2d\u4f1a\u663e\u793a\u65b0\u6dfb\u52a0\u7684\u6587\u4ef6\u3002 \u8fd0\u884c helloworld.cpp \u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 \u201c\u8fd0\u884c C/C++\u201c \u9009\u62e9\u8fd0\u884c\u914d\u7f6e \u5bf9\u4e8eWindows\u7528\u6237\uff1a \u9009\u62e9 C/C++: cl.exe build and debug active file \u8fd0\u884c\u7684\u7ed3\u679c\u5c06\u4f1a\u663e\u793a\u5728\u96c6\u6210\u7ec8\u7aef\u4e2d \u5bf9\u4e8eMac\u7528\u6237\uff1a \u9009\u62e9 C/C++: clang++ build and debug active file \u8fd0\u884c\u7684\u7ed3\u679c\u5c06\u4f1a\u663e\u793a\u5728\u8c03\u8bd5\u63a7\u5236\u53f0 \u81f3\u6b64\uff0c\u606d\u559c\u4f60\u5b8c\u6210\u4e86\u4f60\u7684\u7b2c\u4e00\u4e2aC++\u7a0b\u5e8f\uff01:) 4. C++\u4e2d\u7684\u6807\u8bc6\u7b26 4.1 \u6807\u8bc6\u7b26 \u6807\u8bc6\u7b26\u662f\u6307\u7528\u6765\u6807\u8bc6\u67d0\u4e2a\u5b9e\u4f53\u7684\u4e00\u4e2a\u7b26\u53f7\u3002\u5728C++\u8bed\u8a00\u4e2d\uff0c\u6807\u8bc6\u7b26\u4e3b\u8981\u662f\u6307\u5728\u7f16\u7a0b\u65f6\u4f7f\u7528\u7684\u540d\u5b57\u3002\u6807\u8bc6\u7b26\u7684\u4f7f\u7528\u987b\u9075\u5faa\u4e00\u5b9a\u7684\u89c4\u5219\uff1aC++\u4e2d\u7684\u6807\u8bc6\u7b26\u7531\u5b57\u6bcd\u3001\u6570\u5b57\u548c\u4e0b\u5212\u7ebf\u7ec4\u6210\uff0c\u4e14\u5fc5\u987b\u4ee5\u5b57\u6bcd\u6216\u4e0b\u5212\u7ebf\uff08_\uff09\u5f00\u5934\u3002\u89c4\u5219\u603b\u7ed3\u5982\u4e0b\uff1a \u53ef\u4ee5\u5305\u542b\u6570\u5b57\uff0c\u4f46\u4e0d\u80fd\u4ee5\u6570\u5b57\u5f00\u5934\u3002 \u9664\u4e0b\u5212\u7ebf\uff08_\uff09\u4ee5\u5916\uff0c\u4e0d\u5305\u542b\u4efb\u4f55\u5176\u4ed6\u7279\u6b8a\u5b57\u7b26\uff0c\u5982\u7a7a\u683c\u3002 \u4e0d\u80fd\u7528C++\u5173\u952e\u5b57\u6216\u4fdd\u7559\u5b57\u505a\u6807\u8bc6\u7b26\u3002 C++\u6807\u8bc6\u7b26\u5927\u5c0f\u5199\u654f\u611f\u3002 \u5408\u6cd5\u7684\u6807\u8bc6\u7b26\uff0c\u5982\uff1a int a = 3; int _123 = 3; int myVar = 3; int \u53d8\u91cf1 = 3; //\u867d\u7136\u5408\u6cd5\uff0c\u4f46\u4e0d\u63a8\u8350\u4f7f\u7528\u4e2d\u6587 \u4e0d\u5408\u6cd5\u7684\u6807\u8bc6\u7b26\uff0c\u5982\uff1a int 1a = 3; //\u4e0d\u80fd\u4f7f\u7528\u6570\u5b57\u5f00\u5934 int a# = 3; //\u4e0d\u80fd\u5305\u542b#\u8fd9\u6837\u7684\u7279\u6b8a\u5b57\u7b26 int int = 3; //\u4e0d\u80fd\u4f7f\u7528\u5173\u952e\u5b57 \u6ce8\u610f\uff1a\u867d\u7136C++\u7684\u8bed\u6cd5\u5141\u8bb8\u4f7f\u7528\u4e0b\u5212\u7ebf\uff08_\uff09\u4f5c\u4e3a\u6807\u8bc6\u7b26\u7684\u5f00\u59cb\uff0c\u4f46\u662f\u5728\u5f88\u591a\u4f01\u4e1a\u7684\u5f00\u53d1\u89c4\u8303\u4e2d\u7ea6\u5b9a\uff0c\u4e0d\u80fd\u4f7f\u7528\u4e0b\u5212\u7ebf\u4f5c\u4e3a\u6807\u8bc6\u7b26\u7684\u5f00\u59cb\uff0c\u4ee5\u8fbe\u5230\u7edf\u4e00\u6807\u8bc6\u7b26\u683c\u5f0f\uff0c\u51cf\u5c11\u6b67\u4e49\u7684\u6548\u679c\u3002 4.2 \u5173\u952e\u5b57\u548c\u4fdd\u7559\u5b57 \u5173\u952e\u5b57\u548c\u4fdd\u7559\u5b57\u662fC++\u8bed\u8a00\u4e2d\u5177\u6709\u7279\u6b8a\u542b\u4e49\u7684\u5355\u8bcd\u6216\u7b26\u53f7\u3002\u5173\u952e\u5b57\u662fC++\u8bed\u8a00\u672c\u8eab\u5b9a\u4e49\u7684\uff0c\u7528\u4e8e\u8868\u793a\u7279\u5b9a\u7684\u8bed\u6cd5\u7ed3\u6784\u548c\u64cd\u4f5c\uff0c\u4e0d\u80fd\u7528\u4f5c\u6807\u8bc6\u7b26\uff0c\u5982\u53d8\u91cf\u540d\u3001\u7c7b\u540d\u7b49\u3002 C++\u8bed\u8a00\u5173\u952e\u5b57\u5982\u4e0b\u6240\u793a\uff1a \u8fd9\u4e9b\u5173\u952e\u5b57\u5177\u6709\u56fa\u5b9a\u7684\u8bed\u6cd5\u542b\u4e49\uff0c\u4e0d\u80fd\u88ab\u7528\u4f5c\u53d8\u91cf\u540d\u6216\u5176\u4ed6\u6807\u8bc6\u7b26\u3002 \u4fdd\u7559\u5b57\u662f\u6307\u88ab\u4fdd\u7559\u4f46\u76ee\u524d\u672a\u88ab\u4f7f\u7528\u7684\u5173\u952e\u5b57\uff0c\u5b83\u4eec\u5728C++\u8bed\u8a00\u4e2d\u6ca1\u6709\u7279\u5b9a\u7684\u529f\u80fd\uff0c\u4f46\u4e3a\u4e86\u4fdd\u7559\u672a\u6765\u53ef\u80fd\u4f7f\u7528\u7684\u5173\u952e\u5b57\u800c\u88ab\u4fdd\u7559\u3002 \u6211\u4eec\u5728\u7f16\u5199\u4ee3\u7801\u65f6\u5e94\u907f\u514d\u4f7f\u7528\u5173\u952e\u5b57\u4f5c\u4e3a\u6807\u8bc6\u7b26\uff0c\u4ee5\u514d\u5f15\u53d1\u7f16\u8bd1\u9519\u8bef\u6216\u8bed\u6cd5\u6df7\u6dc6\u3002 5. C++\u4e2d\u7684\u53d8\u91cf 5.1 \u4ec0\u4e48\u662f\u53d8\u91cf \u53d8\u91cf\u662fC++\u7a0b\u5e8f\u4e2d\u7684\u57fa\u672c\u5b58\u50a8\u5355\u5143\uff0c\u7528\u4e8e\u5b58\u50a8\u6570\u636e\u3002\u53d8\u91cf\u672c\u8d28\u4e0a\u4ee3\u8868\u4e86\u5185\u5b58\u4e2d\u7684\u4e00\u4e2a\u5b58\u50a8\u533a\u57df\uff0c\u5728\u8fd9\u4e2a\u533a\u57df\u4e2d\u7684\u6570\u636e\u53ef\u4ee5\u5728\u540c\u4e00\u6570\u636e\u7c7b\u578b\u8303\u56f4\u5185\u4e0d\u65ad\u53d8\u5316\u3002\u901a\u8fc7\u53d8\u91cf\uff0c\u7a0b\u5e8f\u53ef\u4ee5\u65b9\u4fbf\u5730\u8bfb\u53d6\u548c\u64cd\u4f5c\u8be5\u533a\u57df\u4e2d\u7684\u6570\u636e\u3002 - \u53d8\u91cf\uff1a\u987e\u540d\u601d\u4e49\uff0c\u4f1a\u53d8\u7684\u91cf\u3002 - \u5e38\u91cf\uff1a\u81ea\u7136\u754c\u4e2d\u89c4\u5b9a\u597d\u4e86\u7684\u3001\u4e0d\u4f1a\u53d8\u7684\u503c\u3002 5.2 \u53d8\u91cf\u7684\u58f0\u660e \u5728C++\u4e2d\uff0c\u9700\u8981\u5148\u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\uff0c\u624d\u80fd\u4f7f\u7528\u8fd9\u4e2a\u53d8\u91cf\u3002\u53d8\u91cf\u7684\u58f0\u660e\u5305\u542b\u4e24\u70b9\uff1a\u53d8\u91cf\u7684\u6570\u636e\u7c7b\u578b\u548c\u53d8\u91cf\u540d\uff0c\u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a \u6570\u636e\u7c7b\u578b \u53d8\u91cf\u540d\uff1b \u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u662fC++\u7684\u4efb\u610f\u6570\u636e\u7c7b\u578b\u4e4b\u4e00\uff1b\u53d8\u91cf\u540d\u5373\u53d8\u91cf\u7684\u540d\u79f0\uff0c\u7528\u4e8e\u5b58\u50a8\u53d8\u91cf\u503c\uff1a int a; char b; \u53ef\u4ee5\u540c\u65f6\u58f0\u660e\u591a\u4e2a\u540c\u4e00\u6570\u636e\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u53d8\u91cf\u4e4b\u95f4\u7528\u201c,\u201d\u9694\u5f00\uff0c\u4f8b\u5982\uff1a int c\uff0cd\uff0ce; \u7b49\u540c\u4e8e\uff1a int c; int d; int e; 5.3 \u53d8\u91cf\u7684\u521d\u59cb\u5316 C++\u8bed\u6cd5\u89c4\u5b9a\uff1a\u53d8\u91cf\u53ef\u4ee5\u4e0d\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u53ea\u58f0\u660e\u540e\u5728\u4f7f\u7528\u524d\u8fdb\u884c\u8d4b\u503c\u3002\u867d\u7136C++\u5141\u8bb8\u672a\u521d\u59cb\u5316\u7684\u53d8\u91cf\uff0c\u4f46\u4f7f\u7528\u672a\u521d\u59cb\u5316\u7684\u53d8\u91cf\u4f1a\u5bfc\u81f4\u4e0d\u786e\u5b9a\u7684\u884c\u4e3a\u3002\u53d8\u91cf\u7684\u7b2c\u4e00\u6b21\u8d4b\u503c\u5373\u5bf9\u53d8\u91cf\u7684\u521d\u59cb\u5316\u3002\u5728C++\u4e2d\uff0c\u4f7f\u7528\u7b49\u53f7(=)\u5b9e\u73b0\u53d8\u91cf\u7684\u8d4b\u503c\u3002 \u53d8\u91cf\u7684\u521d\u59cb\u5316\u6709\u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\uff1a 1\u3001\u5728\u58f0\u660e\u53d8\u91cf\u65f6\uff0c\u540c\u65f6\u5bf9\u53d8\u91cf\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u8bed\u6cd5\u5982\u4e0b\uff1a \u6570\u636e\u7c7b\u578b \u53d8\u91cf\u540d = \u521d\u59cb\u503c\uff1b \u4f8b\u5982\uff1a int f = 5; 2\u3001\u7b2c\u4e00\u6b21\u4f7f\u7528\u53d8\u91cf\u524d\uff0c\u5bf9\u53d8\u91cf\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u8bed\u6cd5\u5982\u4e0b\uff1a \u6570\u636e\u7c7b\u578b \u53d8\u91cf\u540d\uff1b \u2026\u2026 \u53d8\u91cf\u540d = \u521d\u59cb\u503c\uff1b \u4f8b\u5982\uff1a int sum; // \u58f0\u660e\u53d8\u91cfsum cout << sum << endl; // \u62a5\u9519\uff0c\u4e0d\u80fd\u4f7f\u7528\u672a\u8d4b\u503c\u7684\u53d8\u91cf sum = 100; // \u7ed9\u53d8\u91cfsum\u8d4b\u503c cout << sum << endl; // \u6b63\u786e\uff0c\u8f93\u51fa100 5.4 \u53d8\u91cf\u7684\u8bbf\u95ee \u53d8\u91cf\u5728\u58f0\u660e\u548c\u521d\u59cb\u5316\u540e\uff0c\u53ef\u4ee5\u5bf9\u53d8\u91cf\u8fdb\u884c\u8bbf\u95ee\uff0c\u5305\u62ec\u8bfb\u53d6\u53d8\u91cf\u7684\u503c\u548c\u4fee\u6539\u53d8\u91cf\u7684\u503c\u3002\u4ee3\u7801\u5982\u4e0b\uff1a int sum = 100; // \u58f0\u660e\u53d8\u91cfsum\u5e76\u521d\u59cb\u5316 cout << sum << endl; // \u8f93\u51fa\u53d8\u91cf\u7684\u503c -> 100 sum = 200; // \u4fee\u6539\u53d8\u91cfsum\u7684\u503c cout << sum << endl; // \u518d\u6b21\u8f93\u51fa\u53d8\u91cf\u7684\u503c -> 200 \u53d8\u91cf\u7684\u8bbf\u95ee\u5e94\u6ce8\u610f\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\uff1a 1\u3001\u53d8\u91cf\u7684\u64cd\u4f5c\u5fc5\u987b\u4e0e\u7c7b\u578b\u5339\u914d\u3002 \u53d8\u91cf\u5728\u58f0\u660e\u65f6\u6307\u5b9a\u4e86\u7c7b\u578b\uff0cC++\u7f16\u8bd1\u5668\u4f1a\u68c0\u6d4b\u5bf9\u8be5\u53d8\u91cf\u7684\u64cd\u4f5c\u662f\u5426\u4e0e\u5176\u4ed6\u7c7b\u578b\u5339\u914d\uff0c\u5982\u679c\u5bf9\u53d8\u91cf\u7684\u8d4b\u503c\u6216\u8005\u64cd\u4f5c\u4e0e\u5176\u7c7b\u578b\u4e0d\u5339\u914d\uff0c\u4f1a\u4ea7\u751f\u7f16\u8bd1\u9519\u8bef\uff0c\u4f8b\u5982\uff1a //\u7f16\u8bd1\u9519\u8bef\uff0c\u53d8\u91cfa\u7684\u7c7b\u578b\u4e3aint\u6574\u578b\uff0c\u4e0d\u80fd\u8d4b\u503c\u4e3a\u6d6e\u70b9\u7c7b\u578b\u7684\u503c int a = 3.14; 2\u3001\u53d8\u91cf\u7684\u6570\u636e\u7c7b\u578b\u53ea\u5199\u4e00\u6b21\u3002 \u53d8\u91cf\u5728\u7b2c\u4e00\u6b21\u58f0\u660e\u7684\u65f6\u5019\u5199\u6570\u636e\u7c7b\u578b\uff0c\u518d\u6b21\u4f7f\u7528\u65f6\u4e0d\u5199\u6570\u636e\u7c7b\u578b\uff0c\u4f8b\u5982\uff1a int n; n = 5; // \u6b63\u786e\uff0c\u518d\u6b21\u4f7f\u7528\u53d8\u91cfn\u65f6\u4e0d\u5199\u6570\u636e\u7c7b\u578b int n = 10; // \u9519\u8bef\uff0c\u518d\u6b21\u6307\u5b9a\u53d8\u91cf\u7684\u6570\u636e\u7c7b\u578b\u4f1a\u51fa\u73b0\u7f16\u8bd1\u9519\u8bef 3\u3001\u672a\u7ecf\u58f0\u660e\u7684\u53d8\u91cf\u4e0d\u80fd\u4f7f\u7528\u3002 \u53d8\u91cf\u5fc5\u987b\u5148\u58f0\u660e\uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u7f16\u8bd1\u9519\u8bef\uff0c\u4f8b\u5982\uff1a k = 5; cout << k << endl; // \u7f16\u8bd1\u9519\u8bef\uff0c\u53d8\u91cfk\u6ca1\u6709\u58f0\u660e 4\u3001\u53d8\u91cf\u521d\u59cb\u5316\u540e\u624d\u53ef\u4ee5\u4f7f\u7528\u3002 C++\u5141\u8bb8\u58f0\u660e\u53d8\u91cf\u800c\u4e0d\u521d\u59cb\u5316\uff0c\u4f46\u4f7f\u7528\u672a\u521d\u59cb\u5316\u7684\u53d8\u91cf\u4f1a\u5bfc\u81f4\u4e0d\u53ef\u9884\u6d4b\u7684\u7ed3\u679c\uff0c\u4f8b\u5982\uff1a int t; cout << t << endl; // \u53d8\u91cft\u6ca1\u6709\u521d\u59cb\u5316\uff0c\u53ef\u80fd\u8f93\u51fa\u5783\u573e\u503c 6. C++\u7684\u6570\u636e\u7c7b\u578b C++\u7684\u6570\u636e\u7c7b\u578b\u5206\u4e3a\uff1a\u57fa\u672c\u6570\u636e\u7c7b\u578b\u3001\u590d\u5408\u6570\u636e\u7c7b\u578b\u548c\u6307\u9488\u7c7b\u578b\u7b49\uff0c\u672c\u6587\u6863\u9488\u5bf9\u521d\u5b66\u8005\uff0c\u4ec5\u5bf9\u57fa\u672c\u6570\u636e\u7c7b\u578b\u8fdb\u884c\u8be6\u7ec6\u4ecb\u7ecd\u3002 6.1 \u57fa\u672c\u6570\u636e\u7c7b\u578b C++\u57fa\u672c\u6570\u636e\u7c7b\u578b\u5305\u62ec4\u7c7b\uff1a\u6574\u6570\u7c7b\u578b\u3001\u6d6e\u70b9\u6570\u7c7b\u578b\u3001\u5b57\u7b26\u7c7b\u578b\u548c\u5e03\u5c14\u7c7b\u578b\u3002 6.1.1 \u6574\u6570\u7c7b\u578b C++\u4e2d\u7684\u6574\u6570\u7c7b\u578b\u5305\u62ec\uff1aint, short, long, long long\u578b\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u533a\u522b\u662f\u5bbd\u5ea6\u548c\u8303\u56f4\u7684\u4e0d\u540c\u3002 int\u7c7b\u578b\uff1a \u5927\u5c0f\uff1a\u901a\u5e38\u4e3a4\u5b57\u8282\uff0832\u4f4d\uff09\u3002 \u8303\u56f4\uff1a\u57fa\u4e8e\u7f16\u8bd1\u5668\u548c\u5e73\u53f0\uff0c\u4e00\u822c\u8303\u56f4\u4e3a\u7ea6-2,147,483,648\u52302,147,483,647\u3002 short\u7c7b\u578b\uff1a \u5927\u5c0f\uff1a\u901a\u5e38\u4e3a2\u5b57\u8282\uff0816\u4f4d\uff09\u3002 \u8303\u56f4\uff1a\u57fa\u4e8e\u7f16\u8bd1\u5668\u548c\u5e73\u53f0\uff0c\u4e00\u822c\u8303\u56f4\u4e3a\u7ea6-32,768\u523032,767\u3002 long\u7c7b\u578b\uff1a \u5927\u5c0f\uff1a\u901a\u5e38\u4e3a4\u5b57\u8282\uff0832\u4f4d\uff09\uff0c\u4f46\u5728\u4e00\u4e9b\u5e73\u53f0\u4e0a\u53ef\u80fd\u4e3a8\u5b57\u8282\uff0864\u4f4d\uff09\u3002 \u8303\u56f4\uff1a\u57fa\u4e8e\u7f16\u8bd1\u5668\u548c\u5e73\u53f0\uff0c32\u4f4dlong\u7c7b\u578b\u7684\u8303\u56f4\u7ea6\u4e3a-2,147,483,648\u52302,147,483,647\uff0c64\u4f4dlong\u7c7b\u578b\u7684\u8303\u56f4\u66f4\u5927\u3002 long long\u7c7b\u578b\uff1a \u5927\u5c0f\uff1a\u901a\u5e38\u4e3a8\u5b57\u8282\uff0864\u4f4d\uff09\u3002 \u8303\u56f4\uff1a\u57fa\u4e8e\u7f16\u8bd1\u5668\u548c\u5e73\u53f0\uff0c\u8303\u56f4\u7ea6\u4e3a-9,223,372,036,854,775,808\u52309,223,372,036,854,775,807\u3002 6.1.2 \u6d6e\u70b9\u7c7b\u578b \u5728C++\u4e2d\uff0c\u6d6e\u70b9\u6570\u7c7b\u578b\u4e3b\u8981\u7531 float \u548c double \u4e24\u79cd\u8868\u793a\u3002 \u4ee5\u4e0b\u662f\u5173\u4e8e\u8fd9\u4e24\u79cd\u6d6e\u70b9\u6570\u7c7b\u578b\u7684\u8bf4\u660e\uff1a float \u7c7b\u578b\uff1a \u5b57\u8282\u6570\uff1a\u901a\u5e38\u4e3a4\u5b57\u8282\uff0832\u4f4d\uff09\u3002 \u8868\u793a\u8303\u56f4\uff1a\u7ea6 \u00b13.402823466e+38F \uff0814\u4f4d\u6709\u6548\u6570\u5b57\uff09\u3002 \u7cbe\u5ea6\uff1a\u901a\u5e38\u4e3a6\u4f4d\u6709\u6548\u6570\u5b57\u3002 \u521d\u59cb\u5316\uff1a\u53ef\u4ee5\u4f7f\u7528\u6d6e\u70b9\u6570\u5e38\u91cf\u3001\u6574\u6570\u5e38\u91cf\u6216\u8f6c\u6362\u6765\u521d\u59cb\u5316\u3002 float f1 = 3.14f; // \u4f7f\u7528\u6d6e\u70b9\u6570\u5e38\u91cf\u521d\u59cb\u5316 float f2 = 10; // \u4f7f\u7528\u6574\u6570\u521d\u59cb\u5316\uff0c\u4f1a\u8fdb\u884c\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362 float f3 = static_cast<float>(5); // \u4f7f\u7528\u663e\u5f0f\u7c7b\u578b\u8f6c\u6362\u521d\u59cb\u5316 double \u7c7b\u578b\uff1a \u5b57\u8282\u6570\uff1a\u901a\u5e38\u4e3a8\u5b57\u8282\uff0864\u4f4d\uff09\u3002 \u8868\u793a\u8303\u56f4\uff1a\u7ea6 \u00b11.7976931348623158e+308 \uff0815\u4f4d\u6709\u6548\u6570\u5b57\uff09\u3002 \u7cbe\u5ea6\uff1a\u901a\u5e38\u4e3a15\u4f4d\u6709\u6548\u6570\u5b57\u3002 \u521d\u59cb\u5316\uff1a\u53ef\u4ee5\u4f7f\u7528\u6d6e\u70b9\u6570\u5e38\u91cf\u3001\u6574\u6570\u5e38\u91cf\u6216\u8f6c\u6362\u6765\u521d\u59cb\u5316\u3002 double d1 = 3.14; // \u4f7f\u7528\u6d6e\u70b9\u6570\u5e38\u91cf\u521d\u59cb\u5316 double d2 = 10; // \u4f7f\u7528\u6574\u6570\u521d\u59cb\u5316\uff0c\u4f1a\u8fdb\u884c\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362 double d3 = static_cast<double>(5); // \u4f7f\u7528\u663e\u5f0f\u7c7b\u578b\u8f6c\u6362\u521d\u59cb\u5316 \u6ce8\u610f\u4e8b\u9879\uff1a \u6d6e\u70b9\u6570\u7c7b\u578b\u7684\u7cbe\u5ea6\u662f\u6709\u9650\u7684\uff0c\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u5b58\u5728\u820d\u5165\u8bef\u5dee\u3002 \u4f7f\u7528\u6d6e\u70b9\u6570\u8fdb\u884c\u8ba1\u7b97\u65f6\uff0c\u5c24\u5176\u662f\u6bd4\u8f83\u5927\u5c0f\u6216\u5224\u65ad\u76f8\u7b49\u65f6\uff0c\u5e94\u8003\u8651\u820d\u5165\u8bef\u5dee\u53ef\u80fd\u5bfc\u81f4\u7684\u4e0d\u7cbe\u786e\u6027\u3002\u53ef\u4ee5\u4f7f\u7528\u9002\u5f53\u7684\u5bb9\u5dee\u503c\u8fdb\u884c\u6bd4\u8f83\u3002 \u5728\u4f7f\u7528\u6d6e\u70b9\u6570\u65f6\uff0c\u5e94\u6ce8\u610f\u907f\u514d\u9664\u4ee5\u96f6\u6216\u8fdb\u884c\u65e0\u6548\u7684\u8fd0\u7b97\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4NaN\uff08\u975e\u6570\u5b57\uff09\u7684\u7ed3\u679c\u3002 \u6839\u636e\u5177\u4f53\u9700\u6c42\u548c\u7cbe\u786e\u6027\u8981\u6c42\uff0c\u9009\u62e9\u9002\u5f53\u7684\u6d6e\u70b9\u6570\u7c7b\u578b\u3002\u5982\u679c\u9700\u8981\u66f4\u9ad8\u7684\u7cbe\u5ea6\uff0c\u5219\u53ef\u4ee5\u8003\u8651\u4f7f\u7528 long double \u7c7b\u578b\uff0c\u5b83\u7684\u5b57\u8282\u6570\u901a\u5e38\u4e3a10\u621616\u5b57\u8282\u3002 6.1.3 \u5b57\u7b26\u7c7b\u578b \u5728C++\u4e2d\uff0c\u5b57\u7b26\u7c7b\u578b char \u7528\u4e8e\u8868\u793a\u5355\u4e2a\u5b57\u7b26\uff0c\u5e76\u4f7f\u7528ASCII\u7f16\u7801\u3002\u5b83\u662f\u4e00\u79cd\u6574\u6570\u7c7b\u578b\uff0c\u901a\u5e38\u5360\u75281\u4e2a\u5b57\u8282\uff088\u4f4d\uff09\u3002\u4ee5\u4e0b\u662f\u5173\u4e8e char \u7c7b\u578b\u7684\u4e00\u4e9b\u8bf4\u660e\uff1a \u521d\u59cb\u5316\uff1a - char \u7c7b\u578b\u53ef\u4ee5\u901a\u8fc7\u5355\u4e2a\u5b57\u7b26\u6765\u8fdb\u884c\u521d\u59cb\u5316\u3002\u4f8b\u5982\uff1a char ch1 = 'A'; // \u4f7f\u7528\u5355\u5f15\u53f7\u521d\u59cb\u5316 char ch2 = 65; // \u4f7f\u7528\u6574\u6570\u503c\u521d\u59cb\u5316\uff0c\u5bf9\u5e94ASCII\u7801\u4e2d\u7684\u5b57\u7b26 'A' char ch3 = '\\n'; // \u4f7f\u7528\u8f6c\u4e49\u5b57\u7b26\u521d\u59cb\u5316\uff0c\u8868\u793a\u6362\u884c\u7b26 \u5b57\u7b26\u4e32\uff1a - \u5728C++\u4e2d\uff0cchar \u7c7b\u578b\u4e5f\u53ef\u4ee5\u7528\u4e8e\u8868\u793a\u5b57\u7b26\u6570\u7ec4\uff0c\u5373\u5b57\u7b26\u4e32\u3002\u5b57\u7b26\u4e32\u662f\u7531\u591a\u4e2a\u5b57\u7b26\u7ec4\u6210\u7684\u5b57\u7b26\u5e8f\u5217\uff0c\u4ee5null\u7ec8\u6b62\u3002\u4f8b\u5982\uff1a char str1[] = \"Hello\"; // \u58f0\u660e\u5e76\u521d\u59cb\u5316\u4e00\u4e2a\u5b57\u7b26\u4e32 char str2[10]; // \u58f0\u660e\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4\uff08\u5b57\u7b26\u4e32\uff09 strcpy(str2, \"World\"); // \u5c06\u5b57\u7b26\u4e32\u590d\u5236\u5230\u5b57\u7b26\u6570\u7ec4\u4e2d 6.1.4 \u5e03\u5c14\u7c7b\u578b \u5728C++\u4e2d\uff0c\u5e03\u5c14\u7c7b\u578b bool \u7528\u4e8e\u8868\u793a\u903b\u8f91\u503c\uff0c\u53ea\u6709\u4e24\u4e2a\u53d6\u503c\uff1atrue \u548c false\u3002bool \u7c7b\u578b\u4e3b\u8981\u7528\u4e8e\u63a7\u5236\u6d41\u7a0b\u548c\u6761\u4ef6\u5224\u65ad\u3002 \u4ee5\u4e0b\u662f\u5e03\u5c14\u7c7b\u578b\u7684\u4e00\u4e9b\u8bf4\u660e\uff1a \u521d\u59cb\u5316\uff1a - bool \u7c7b\u578b\u53ef\u4ee5\u901a\u8fc7 true \u6216\u8005 false \u6765\u8fdb\u884c\u521d\u59cb\u5316\u3002\u4f8b\u5982\uff1a bool flag1 = true; // \u521d\u59cb\u5316\u4e3atrue bool flag2 = false; // \u521d\u59cb\u5316\u4e3afalse \u6761\u4ef6\u5224\u65ad\uff1a - \u5e03\u5c14\u7c7b\u578b\u5e38\u7528\u4e8e\u6761\u4ef6\u5224\u65ad\uff0c\u4f8b\u5982 if \u8bed\u53e5\u548c\u5faa\u73af\u8bed\u53e5\u4e2d\u3002\u53ea\u6709\u5f53\u6761\u4ef6\u4e3a true \u65f6\uff0c\u76f8\u5e94\u7684\u4ee3\u7801\u5757\u624d\u4f1a\u6267\u884c\u3002\u4f8b\u5982\uff1a bool isTrue = true; if (isTrue) { // \u6761\u4ef6\u4e3a\u771f\uff0c\u6267\u884c\u8fd9\u91cc\u7684\u4ee3\u7801 cout << \"Condition is true!\"; } \u903b\u8f91\u8fd0\u7b97\uff1a - \u5e03\u5c14\u7c7b\u578b\u53ef\u4ee5\u8fdb\u884c\u903b\u8f91\u8fd0\u7b97\uff0c\u5305\u62ec\u903b\u8f91\u4e0e &&\u3001\u903b\u8f91\u6216 || \u548c\u903b\u8f91\u975e !\u3002\u903b\u8f91\u8fd0\u7b97\u7684\u7ed3\u679c\u4e5f\u662f\u5e03\u5c14\u7c7b\u578b\u3002\u4f8b\u5982\uff1a bool condition1 = true; bool condition2 = false; bool result1 = condition1 && condition2; // \u903b\u8f91\u4e0e\uff0c\u7ed3\u679c\u4e3afalse bool result2 = condition1 || condition2; // \u903b\u8f91\u6216\uff0c\u7ed3\u679c\u4e3atrue bool result3 = !condition1; // \u903b\u8f91\u975e\uff0c\u7ed3\u679c\u4e3afalse \u6bd4\u8f83\u8fd0\u7b97\uff1a - \u5e03\u5c14\u7c7b\u578b\u53ef\u4ee5\u8fdb\u884c\u6bd4\u8f83\u8fd0\u7b97\uff0c\u5982\u7b49\u4e8e == \u548c\u4e0d\u7b49\u4e8e !=\u3002\u6bd4\u8f83\u8fd0\u7b97\u7684\u7ed3\u679c\u4e5f\u662f\u5e03\u5c14\u7c7b\u578b\u3002\u4f8b\u5982\uff1a bool result1 = (10 == 5); // \u7ed3\u679c\u4e3afalse bool result2 = (10 != 5); // \u7ed3\u679c\u4e3atrue \u5e03\u5c14\u7c7b\u578b\u5728\u5185\u5b58\u4e2d\u901a\u5e38\u5360\u75281\u4e2a\u5b57\u8282\u7684\u7a7a\u95f4\uff0c\u4f46\u5b9e\u9645\u4e0a\u5176\u503c\u53ea\u80fd\u662f true \u6216\u8005 false\u3002\u5728\u8fdb\u884c\u503c\u7684\u8d4b\u503c\u3001\u8ba1\u7b97\u6216\u6bd4\u8f83\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u5e03\u5c14\u7c7b\u578b\u6765\u7b80\u6d01\u5730\u8868\u8fbe\u903b\u8f91\u5173\u7cfb\u3002 6.2 \u5b57\u7b26\u4e32 \u5728C++\u4e2d\uff0c\u5b57\u7b26\u4e32\u6709\u4e24\u79cd\u4e3b\u8981\u8868\u793a\u65b9\u5f0f\uff1aC\u98ce\u683c\u5b57\u7b26\u4e32\uff08\u5b57\u7b26\u6570\u7ec4\uff09\u548cC++\u98ce\u683c\u5b57\u7b26\u4e32\uff08 std::string \uff09\u3002 1. C++\u98ce\u683c\u5b57\u7b26\u4e32\uff08 std::string \uff09 C++\u6807\u51c6\u5e93\u63d0\u4f9b\u4e86 std::string \u7c7b\uff0c\u7528\u4e8e\u66f4\u65b9\u4fbf\u548c\u5b89\u5168\u5730\u5904\u7406\u5b57\u7b26\u4e32\u3002\u4f7f\u7528 std::string \u65f6\uff0c\u9700\u8981\u5305\u542b <string> \u5934\u6587\u4ef6\u3002 \u793a\u4f8b\uff1a #include <iostream> #include <string> int main() { std::string str = \"abc\"; std::cout << str << std::endl; return 0; } \u4f18\u70b9\uff1a - \u63d0\u4f9b\u4e30\u5bcc\u7684\u6210\u5458\u51fd\u6570\uff0c\u652f\u6301\u5b57\u7b26\u4e32\u7684\u5404\u79cd\u64cd\u4f5c\uff08\u4f8b\u5982\u62fc\u63a5\u3001\u67e5\u627e\u3001\u66ff\u6362\u7b49\uff09\u3002 - \u81ea\u52a8\u7ba1\u7406\u5185\u5b58\uff0c\u907f\u514d\u624b\u52a8\u7ba1\u7406\u5b57\u7b26\u6570\u7ec4\u5e26\u6765\u7684\u590d\u6742\u6027\u548c\u6f5c\u5728\u9519\u8bef\u3002 - \u652f\u6301\u4f7f\u7528 + \u64cd\u4f5c\u7b26\u8fdb\u884c\u5b57\u7b26\u4e32\u62fc\u63a5\u3002 \u9002\u7528\u573a\u666f\uff1a - \u9700\u8981\u9891\u7e41\u8fdb\u884c\u5b57\u7b26\u4e32\u64cd\u4f5c\uff08\u5982\u62fc\u63a5\u3001\u67e5\u627e\u3001\u66ff\u6362\u7b49\uff09\u3002 - \u9700\u8981\u52a8\u6001\u957f\u5ea6\u7684\u5b57\u7b26\u4e32\u3002 - \u5e0c\u671b\u4ee3\u7801\u66f4\u7b80\u6d01\u3001\u6613\u8bfb\u4e14\u4e0d\u6613\u51fa\u9519\u3002 2. C\u98ce\u683c\u5b57\u7b26\u4e32\uff08\u5b57\u7b26\u6570\u7ec4\uff09 C\u98ce\u683c\u5b57\u7b26\u4e32\u662f\u4e00\u4e2a\u4ee5 '\\0' \uff08\u7a7a\u5b57\u7b26\uff09\u7ed3\u5c3e\u7684\u5b57\u7b26\u6570\u7ec4\u3002\u5b57\u7b26\u6570\u7ec4\u4f7f\u7528 char \u7c7b\u578b\uff0c\u5e76\u9700\u8981\u624b\u52a8\u7ba1\u7406\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u548c\u5185\u5b58\u3002 \u793a\u4f8b\uff1a #include <iostream> int main() { char str[] = \"abc\"; std::cout << str << std::endl; return 0; } \u4f18\u70b9\uff1a - \u66f4\u63a5\u8fd1\u5e95\u5c42\uff0c\u53ef\u4ee5\u66f4\u9ad8\u6548\u5730\u64cd\u4f5c\u5185\u5b58\u3002 - \u5728\u67d0\u4e9b\u4f4e\u7ea7\u7f16\u7a0b\u573a\u666f\u4e0b\uff08\u5982\u5d4c\u5165\u5f0f\u7f16\u7a0b\uff09\u66f4\u52a0\u5e38\u7528\u3002 \u9002\u7528\u573a\u666f\uff1a - \u9700\u8981\u4e0eC\u8bed\u8a00\u4ee3\u7801\u517c\u5bb9\u3002 - \u5185\u5b58\u548c\u6027\u80fd\u8981\u6c42\u975e\u5e38\u9ad8\u7684\u4f4e\u7ea7\u7f16\u7a0b\u573a\u666f\u3002 - \u5b57\u7b26\u4e32\u957f\u5ea6\u56fa\u5b9a\uff0c\u4e14\u4e0d\u9700\u8981\u590d\u6742\u7684\u5b57\u7b26\u4e32\u64cd\u4f5c\u3002 \u6bd4\u8f83\u4e0e\u9009\u62e9 \u7279\u6027 std::string \u5b57\u7b26\u6570\u7ec4\uff08C\u98ce\u683c\u5b57\u7b26\u4e32\uff09 \u5185\u5b58\u7ba1\u7406 \u81ea\u52a8\u7ba1\u7406 \u624b\u52a8\u7ba1\u7406 \u64cd\u4f5c\u4fbf\u5229\u6027 \u63d0\u4f9b\u4e30\u5bcc\u7684\u6210\u5458\u51fd\u6570 \u9700\u8981\u624b\u52a8\u5b9e\u73b0\u5f88\u591a\u64cd\u4f5c \u5b89\u5168\u6027 \u9ad8 \u4f4e\uff0c\u5bb9\u6613\u51fa\u73b0\u7f13\u51b2\u533a\u6ea2\u51fa \u52a8\u6001\u957f\u5ea6 \u652f\u6301 \u4e0d\u652f\u6301 \u62fc\u63a5\u64cd\u4f5c \u4f7f\u7528 + \u64cd\u4f5c\u7b26 \u4f7f\u7528 strcat \u7b49\u51fd\u6570 \u9002\u7528\u573a\u666f \u590d\u6742\u5b57\u7b26\u4e32\u64cd\u4f5c\uff0c\u6613\u7528\u6027 \u4e0eC\u517c\u5bb9\uff0c\u6027\u80fd\u548c\u5185\u5b58\u4f18\u5316 \u9009\u62e9\u6307\u5357 \u5982\u679c\u4f60\u9700\u8981\u5904\u7406\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e0d\u56fa\u5b9a\uff0c\u6216\u8005\u9700\u8981\u9891\u7e41\u64cd\u4f5c\u5b57\u7b26\u4e32\uff08\u5982\u62fc\u63a5\u3001\u67e5\u627e\u3001\u66ff\u6362\u7b49\uff09\uff0c\u5efa\u8bae\u4f7f\u7528 std::string \u3002 \u5982\u679c\u4f60\u5728\u8fdb\u884c\u5e95\u5c42\u7f16\u7a0b\uff0c\u6216\u8005\u9700\u8981\u4e0eC\u8bed\u8a00\u4ee3\u7801\u517c\u5bb9\uff0c\u4e14\u5b57\u7b26\u4e32\u957f\u5ea6\u662f\u56fa\u5b9a\u7684\uff0c\u53ef\u4ee5\u4f7f\u7528\u5b57\u7b26\u6570\u7ec4\u3002 \u901a\u8fc7\u7406\u89e3\u8fd9\u4e24\u79cd\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u533a\u522b\u548c\u9002\u7528\u573a\u666f\uff0c\u4f60\u53ef\u4ee5\u66f4\u597d\u5730\u9009\u62e9\u5408\u9002\u7684\u7c7b\u578b\u6765\u6ee1\u8db3\u7f16\u7a0b\u9700\u6c42\u3002 6.3 \u590d\u5408\u6570\u636e\u7c7b\u578b\uff1a \u6570\u7ec4\u7c7b\u578b\uff1a\u7528\u4e8e\u5b58\u50a8\u76f8\u540c\u7c7b\u578b\u7684\u4e00\u7cfb\u5217\u5143\u7d20 \u7ed3\u6784\u4f53\u7c7b\u578b\uff1a\u7528\u4e8e\u5b9a\u4e49\u4e00\u7ec4\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\u4f5c\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684\u5b9e\u4f53 \u679a\u4e3e\u7c7b\u578b\uff1a\u7528\u4e8e\u5b9a\u4e49\u4e00\u7ec4\u5177\u6709\u79bb\u6563\u503c\u7684\u5e38\u91cf 6.4 \u6307\u9488\u7c7b\u578b \u7528\u4e8e\u5b58\u50a8\u5185\u5b58\u5730\u5740 6.5 \u5176\u4ed6\u6570\u636e\u7c7b\u578b\uff1a \u7a7a\u7c7b\u578b\uff1avoid\uff0c\u7528\u4e8e\u8868\u793a\u65e0\u7c7b\u578b\u6216\u65e0\u8fd4\u56de\u503c\u7684\u51fd\u6570 6.6 \u5e38\u7528\u6570\u636e\u7c7b\u578b\u7684\u4f7f\u7528\u5b9e\u4f8b #include <iostream> #include <string> using namespace std; int main() { // \u5b66\u751f\u4fe1\u606f int studentId = 12345; string studentName = \"\u8d75\u9547\"; int age = 20; double score = 92.5; char gender = '\u7537'; bool isMarried = false; // \u8f93\u51fa\u5b66\u751f\u4fe1\u606f cout << \"\u5b66\u751f\u4fe1\u606f\uff1a\" << endl; cout << \"\u5b66\u53f7\uff1a\" << studentId << endl; cout << \"\u59d3\u540d\uff1a\" << studentName << endl; cout << \"\u5e74\u9f84\uff1a\" << age << endl; cout << \"\u6210\u7ee9\uff1a\" << score << endl; cout << \"\u6027\u522b\uff1a\" << gender << endl; cout << \"\u5a5a\u5426\uff1a\" << boolalpha << isMarried << endl; return 0; } 7. C++\u4e2d\u7684\u8fd0\u7b97\u7b26 C++\u4e2d\u7684\u8fd0\u7b97\u7b26\u79cd\u7c7b\u4e30\u5bcc\uff0c\u5305\u62ec\u7b97\u672f\u8fd0\u7b97\u7b26\u3001\u8d4b\u503c\u8fd0\u7b97\u7b26\u3001\u6bd4\u8f83\u8fd0\u7b97\u7b26\u3001\u903b\u8f91\u8fd0\u7b97\u7b26\u3001\u6761\u4ef6\uff08\u4e09\u76ee\uff09\u8fd0\u7b97\u7b26\u548c\u4f4d\u8fd0\u7b97\u7b26 \u7b97\u672f\u8fd0\u7b97\u7b26\uff1a \u7b97\u672f\u8fd0\u7b97\u7b26\u7528\u4e8e\u6267\u884c\u57fa\u672c\u7684\u6570\u5b66\u8fd0\u7b97\uff0c\u5305\u62ec\uff1a + \uff08\u52a0\uff09 - \uff08\u51cf\uff09 * \uff08\u4e58\uff09 / \uff08\u9664\uff09 % \uff08\u6c42\u4f59\uff09 ++ \uff08\u81ea\u589e\uff09 -- \uff08\u81ea\u51cf\uff09 ++ \u548c -- \u53ef\u4ee5\u4f5c\u4e3a\u524d\u7f00\u6216\u540e\u7f00\u5f62\u5f0f\u51fa\u73b0\uff0c\u5f71\u54cd\u53d8\u91cf\u7684\u503c\u3002 cpp int a = 10; int b = 20; int result = a + b; // 30 a++; // 11 \u8d4b\u503c\u8fd0\u7b97\u7b26\uff1a \u8d4b\u503c\u8fd0\u7b97\u7b26\u7528\u4e8e\u5c06\u8ba1\u7b97\u7ed3\u679c\u8d4b\u503c\u7ed9\u53d8\u91cf\uff0c\u5305\u62ec\uff1a = \uff08\u7b49\u4e8e\uff09 += \uff08\u81ea\u52a0\u4e00\u6b21\u7b49\u4e8e\uff09 -= \uff08\u81ea\u51cf\u4e00\u6b21\u7b49\u4e8e\uff09 *= \uff08\u81ea\u4e58\u4e00\u6b21\u7b49\u4e8e\uff09 /= \uff08\u81ea\u9664\u4e00\u6b21\u7b49\u4e8e\uff09 %= \uff08\u6c42\u6a21\u5e76\u8d4b\u503c\uff09 cpp int x = 10; x += 5; // \u7b49\u540c\u4e8e x = x + 5; \u6bd4\u8f83\u8fd0\u7b97\u7b26\uff1a \u6bd4\u8f83\u8fd0\u7b97\u7b26\u7528\u4e8e\u6bd4\u8f83\u4e24\u4e2a\u503c\u7684\u5927\u5c0f\u6216\u76f8\u7b49\u6027\uff0c\u5305\u62ec\uff1a < \uff08\u5c0f\u4e8e\uff09 > \uff08\u5927\u4e8e\uff09 >= \uff08\u5927\u4e8e\u7b49\u4e8e\uff09 <= \uff08\u5c0f\u4e8e\u7b49\u4e8e\uff09 == \uff08\u7b49\u4e8e\uff09 != \uff08\u4e0d\u7b49\u4e8e\uff09 cpp int m = 10; int n = 20; bool result = (m > n); // \u6bd4\u8f83 m \u662f\u5426\u5927\u4e8e n - \u903b\u8f91\u8fd0\u7b97\u7b26\uff1a \u903b\u8f91\u8fd0\u7b97\u7b26\u7528\u4e8e\u7ec4\u5408\u5e03\u5c14\u8868\u8fbe\u5f0f\uff0c\u5b9e\u73b0\u903b\u8f91\u8fd0\u7b97\uff0c\u5305\u62ec\uff1a - && \uff08\u903b\u8f91\u4e0e\uff09 - || \uff08\u903b\u8f91\u6216\uff09 - ! \uff08\u903b\u8f91\u975e\uff09 cpp bool condition1 = true; bool condition2 = false; bool result = condition1 && condition2; // \u4f7f\u7528\u903b\u8f91\u4e0e\u8fd0\u7b97\u7b26 - \u6761\u4ef6\uff08\u4e09\u76ee\uff09\u8fd0\u7b97\u7b26 ?: \uff1a \u6761\u4ef6\u8fd0\u7b97\u7b26 ?: \u662f\u4e00\u4e2a\u4e09\u5143\u8fd0\u7b97\u7b26\uff0c\u7528\u4e8e\u6839\u636e\u6761\u4ef6\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u9009\u62e9\u4e24\u4e2a\u503c\u4e2d\u7684\u4e00\u4e2a\u3002\u8bed\u6cd5\u5f62\u5f0f\u4e3a result = (condition) ? value1 : value2; \u5176\u4e2d\uff0c condition \u662f\u8981\u8bc4\u4f30\u7684\u5e03\u5c14\u8868\u8fbe\u5f0f\uff0c value1 \u662f\u5982\u679c condition \u4e3a true \u5219\u8fd4\u56de\u7684\u503c\uff0c\u800c value2 \u662f\u5982\u679c condition \u4e3a false \u5219\u8fd4\u56de\u7684\u503c\u3002 cpp int age = 20; string message = (age >= 18) ? \"\u6210\u5e74\u4eba\" : \"\u672a\u6210\u5e74\u4eba\"; // \u6839\u636e\u5e74\u9f84\u5224\u65ad\u6210\u5e74\u4eba\u6216\u672a\u6210\u5e74\u4eba - \u4f4d\u8fd0\u7b97\u7b26\uff1a \u4f4d\u8fd0\u7b97\u7b26\u7528\u4e8e\u5bf9\u4e8c\u8fdb\u5236\u4f4d\u8fdb\u884c\u64cd\u4f5c\uff0c\u5305\u62ec\uff1a - & \uff08\u6309\u4f4d\u4e0e\uff09 - | \uff08\u6309\u4f4d\u6216\uff09 - ^ \uff08\u6309\u4f4d\u5f02\u6216\uff09 - ~ \uff08\u6309\u4f4d\u53d6\u53cd\uff09 - << \uff08\u5de6\u79fb\uff09 - >> \uff08\u53f3\u79fb\uff09 cpp int a = 5; // \u4e8c\u8fdb\u5236\u4e3a 101 int b = 3; // \u4e8c\u8fdb\u5236\u4e3a 011 int result = a & b; // \u6309\u4f4d\u4e0e\u64cd\u4f5c\uff0c\u7ed3\u679c\u4e3a 001\uff0c\u5373 1 C++\u4e2d\u7684\u8fd0\u7b97\u7b26\u4e0d\u4ec5\u5305\u62ec\u4e0a\u8ff0\u57fa\u672c\u7c7b\u578b\uff0c\u8fd8\u5305\u62ec\u5176\u4ed6\u8fd0\u7b97\u7b26\u4f8b\u5982 sizeof , typeid \u7b49\u3002\u6b64\u5916\uff0cC++\u8fd8\u652f\u6301\u5b57\u7b26\u4e32\u8fde\u63a5\u64cd\u4f5c\uff0c\u5176\u4e2d + \u8fd0\u7b97\u7b26\u53ef\u4ee5\u7528\u4e8e\u8fde\u63a5 std::string \u7c7b\u578b\u7684\u5b57\u7b26\u4e32\u3002 8. C++\u7684\u8f93\u5165\u4e0e\u8f93\u51fa 8.1 \u4f7f\u7528 cin \u8bfb\u53d6\u5b57\u7b26\u4e32/\u6574\u6570/\u6d6e\u70b9\u6570 cin \u53ef\u4ee5\u8bfb\u53d6\u7528\u6237\u7684\u952e\u76d8\u8f93\u5165\u3002\u4f8b\u5982\uff1a \u4f8b\u5982\uff1a #include <iostream> using namespace std; int main() { string name; int age; float salary; cout << \"\u8bf7\u8f93\u5165\u4f60\u7684\u59d3\u540d\uff1a\" << endl; getline(cin, name); // \u8bfb\u53d6\u6574\u884c\u5b57\u7b26\u4e32\uff0c\u5305\u62ec\u7a7a\u683c cout << \"\u8bf7\u8f93\u5165\u4f60\u7684\u5e74\u9f84\uff1a\" << endl; cin >> age; // \u8bfb\u53d6\u6574\u6570 cout << \"\u8bf7\u8f93\u5165\u4f60\u7684\u5de5\u8d44\uff1a\" << endl; cin >> salary; // \u8bfb\u53d6\u6d6e\u70b9\u6570 cout << \"\u4f60\u7684\u4fe1\u606f\u5982\u4e0b\uff1a\" << endl; cout << \"\u59d3\u540d: \" << name << \"\\n\" << \"\u5e74\u9f84\uff1a\" << age << \"\\n\" << \"\u5de5\u8d44\uff1a\" << salary << endl; return 0; } 8.2 cout cout \u53ef\u4ee5\u6253\u5370\u4e00\u884c\u5185\u5bb9\uff0c\u82e5\u52a0\u4e0a endl \u6253\u5370\u5b8c\u4f1a\u81ea\u52a8\u6362\u884c\uff0c\u4e0d\u52a0\u5219\u4e0d\u4f1a\u6362\u884c #include <iostream> using namespace std; int main() { cout << \"hello, C++!\" << endl; int a = 9; cout << \"output: \" << a << endl; return 0; } 8.3 printf printf \u7528\u4e8e\u683c\u5f0f\u5316\u8f93\u51fa\uff0c\u53ef\u4ee5\u8f93\u51fa\u5404\u79cd\u7c7b\u578b\u7684\u6570\u636e\uff0c\u4f46\u4e0d\u4f1a\u81ea\u52a8\u6362\u884c\u3002 #include <iostream> using namespace std; int main() { string a = \"wniuniu\"; string b = \"brilliantgby\"; printf(\"%s\", a.c_str()); printf(\"%s\", b.c_str()); printf(\"\\n\"); printf(\"OvO\\n\"); return 0; } 8.4 \u8f93\u5165\u8f93\u51fa\u6d41\uff08 ifstream / ofstream \uff09 \u5728 C++ \u4e2d\uff0c ifstream \u548c ofstream \u662f\u4e24\u4e2a\u57fa\u672c\u7684 I/O \u7c7b\uff0c\u7528\u4e8e\u5904\u7406\u6587\u4ef6\u6d41\u7684\u8f93\u5165\u548c\u8f93\u51fa\u3002\u5b83\u4eec\u5206\u522b\u662f\u8f93\u5165\u548c\u8f93\u51fa\u64cd\u4f5c\u7684\u7c7b\uff0c\u5e76\u4e14\u6709\u591a\u4e2a\u5b50\u7c7b\uff0c\u652f\u6301\u4ece\u5404\u79cd\u6570\u636e\u6e90\u8bfb\u53d6\u6570\u636e\u548c\u5c06\u6570\u636e\u5199\u5165\u5404\u79cd\u6570\u636e\u76ee\u6807\u3002 ifstream \u548c ofstream \u7684\u5173\u7cfb \u5728 C++ \u4e2d\uff0c ifstream \u548c ofstream \u5206\u522b\u7ee7\u627f\u81ea\u62bd\u8c61\u7c7b istream \u548c ostream \u5e76\u63d0\u4f9b\u4e86\u5904\u7406\u6587\u4ef6\u6d41\u7684\u5177\u4f53\u5b9e\u73b0\u3002\u867d\u7136 ifstream \u548c ofstream \u6ca1\u6709\u76f4\u63a5\u7684\u7ee7\u627f\u5173\u7cfb\uff0c\u4f46\u5b83\u4eec\u662f\u4e92\u8865\u7684\uff0c\u5206\u522b\u5904\u7406\u6587\u4ef6\u7684\u8f93\u5165\u548c\u8f93\u51fa\u64cd\u4f5c\u3002 - ifstream \uff1a\u7ee7\u627f\u81ea istream \uff0c\u7528\u4e8e\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u6570\u636e\u3002\u8868\u793a\u6587\u4ef6\u8f93\u5165\u6d41\u3002 - ofstream \uff1a\u7ee7\u627f\u81ea ostream \uff0c\u7528\u4e8e\u5411\u6587\u4ef6\u4e2d\u5199\u5165\u6570\u636e\u3002\u8868\u793a\u6587\u4ef6\u8f93\u51fa\u6d41\u3002 - fstream \uff1a\u7ee7\u627f\u81ea iostream \uff0c\u7ed3\u5408\u4e86 ifstream \u548c ofstream \u7684\u529f\u80fd\uff0c\u65e2\u53ef\u4ee5\u8fdb\u884c\u6587\u4ef6\u7684\u8f93\u5165\u64cd\u4f5c\u4e5f\u53ef\u4ee5\u8fdb\u884c\u6587\u4ef6\u7684\u8f93\u51fa\u64cd\u4f5c\u3002 \u4f8b\u5982\uff1a \u4f7f\u7528 ifstream \u8bfb\u53d6\u6587\u4ef6 ifstream \u7528\u4e8e\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u8fdb\u884c\u8bfb\u53d6\u64cd\u4f5c\uff0c\u5e76\u7ee7\u627f\u4e86 istream \u7684\u6240\u6709\u529f\u80fd\uff0c\u53ef\u4ee5\u4f7f\u7528\u5404\u79cd\u8f93\u5165\u64cd\u4f5c\u7b26\u548c\u65b9\u6cd5\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\u3002 #include <iostream> #include <fstream> using namespace std; int main() { ifstream inputFile(\"example.txt\"); // \u6253\u5f00\u6587\u4ef6\u8fdb\u884c\u8bfb\u53d6 if (!inputFile) { cerr << \"\u65e0\u6cd5\u6253\u5f00\u6587\u4ef6\" << endl; return 1; } string line; while (getline(inputFile, line)) { // \u9010\u884c\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9 cout << line << endl; } inputFile.close(); // \u5173\u95ed\u6587\u4ef6 return 0; } \u4f7f\u7528 ofstream \u5199\u5165\u6587\u4ef6 ofstream \u7528\u4e8e\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u8fdb\u884c\u5199\u5165\u64cd\u4f5c\uff0c\u5e76\u7ee7\u627f\u4e86 ostream \u7684\u6240\u6709\u529f\u80fd\uff0c\u53ef\u4ee5\u4f7f\u7528\u5404\u79cd\u8f93\u51fa\u64cd\u4f5c\u7b26\u548c\u65b9\u6cd5\u5199\u5165\u6587\u4ef6\u5185\u5bb9\u3002 #include <iostream> #include <fstream> using namespace std; int main() { ofstream outputFile(\"example.txt\"); // \u6253\u5f00\u6587\u4ef6\u8fdb\u884c\u5199\u5165 if (!outputFile) { cerr << \"\u65e0\u6cd5\u6253\u5f00\u6587\u4ef6\" << endl; return 1; } string data = \"Hello, World!\"; outputFile << data << endl; // \u5199\u5165\u6570\u636e\u5230\u6587\u4ef6 outputFile.close(); // \u5173\u95ed\u6587\u4ef6 return 0; } \u4f7f\u7528 fstream \u8fdb\u884c\u540c\u65f6\u8bfb\u5199\u64cd\u4f5c fstream \u7ed3\u5408\u4e86 ifstream \u548c ofstream \u7684\u529f\u80fd\uff0c\u53ef\u4ee5\u540c\u65f6\u8fdb\u884c\u6587\u4ef6\u7684\u8bfb\u5199\u64cd\u4f5c\u3002 #include <iostream> #include <fstream> using namespace std; int main() { fstream file(\"example.txt\", ios::in | ios::out | ios::trunc); // \u6253\u5f00\u6587\u4ef6\u8fdb\u884c\u8bfb\u5199 if (!file) { cerr << \"\u65e0\u6cd5\u6253\u5f00\u6587\u4ef6\" << endl; return 1; } file << \"Hello, World!\" << endl; // \u5199\u5165\u6570\u636e\u5230\u6587\u4ef6 file.seekg(0); // \u79fb\u52a8\u5230\u6587\u4ef6\u5f00\u5934 string line; while (getline(file, line)) { // \u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9 cout << line << endl; } file.close(); // \u5173\u95ed\u6587\u4ef6 return 0; } 9. \u8bfe\u7a0b\u603b\u7ed3 C++\u73af\u5883\u5b89\u88c5\u6b63\u5e38\u3002 \u5b8c\u6210\u7b2c\u4e00\u4e2aHello World\u7a0b\u5e8f\u3002 \u8ba4\u8bc6\u53d8\u91cf\u7c7b\u578b\u548c\u547d\u540d\u65b9\u5f0f\u3002 C++\u4e2d\u7684\u8fd0\u7b97\u7b26\u3002 C++\u7684\u8f93\u5165\u4e0e\u8f93\u51fa\u3002 \u8bfe\u540e\u7ec3\u4e60 1.\u7f16\u5199\u4e00\u4e2aC++\u7a0b\u5e8f\u6765\u627e\u51fa\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u7684\u6700\u5c0f\u6b63\u6574\u6570\uff1a \u8be5\u6570\u9664\u4ee512\u4f591 \u8be5\u6570\u9664\u4ee523\u4e5f\u4f591 \u8be5\u6570\u9664\u4ee531\u4e5f\u4f591 \u8bf7\u5728\u4ee5\u4e0b\u9009\u9879\u4e2d\u9009\u62e9\u4e00\u4e2a\u6b63\u786e\u7684\u7b54\u6848\uff0c\u8be5\u7b54\u6848\u6ee1\u8db3\u4e0a\u8ff0\u6240\u6709\u6761\u4ef6\uff1a (A) 4191 (B) 3232 (C) 8577 (D) 9233 \u53c2\u8003\u7a0b\u5e8f\uff1a #include <iostream> using namespace std; int main() { // \u83b7\u53d6\u7528\u6237\u8f93\u5165\u7684\u9009\u9879 cout << \"\u8bf7\u8f93\u5165\u4e00\u4e2a\u9009\u9879\uff1a\"; int option; cin >> option; // \u8ba1\u7b97\u4f59\u6570 int a = option % 12; int b = option % 23; int c = option % 31; // \u6253\u5370\u4f59\u6570\u7ed3\u679c cout << \"For option \" << option << \":\" << endl; cout << \"a = \" << a << \", b = \" << b << \", c = \" << c << endl; // \u5224\u65ad\u662f\u5426\u6ee1\u8db3\u6761\u4ef6 if (a == 1 && b == 1 && c == 1) { cout << \"Correct, That's what I find!! The number is: \" << option << endl; } else { cout << \"Wrong, Please try another Answer!\" << endl; } return 0; } 2.\u7f16\u5199\u4e00\u4e2aC++\u7a0b\u5e8f\uff0c\u7528\u4e8e\u6a21\u62df\u9910\u5385\u7684\u70b9\u5355\u8fc7\u7a0b\u3002\u7a0b\u5e8f\u5e94\u63d0\u524d\u544a\u77e5\u7528\u6237\u6c49\u5821\u3001\u85af\u6761\u548c\u53ef\u4e50\u7684\u4ef7\u683c\uff0c\u5e76\u901a\u8fc7\u7528\u6237\u8f93\u5165\u83b7\u5f97\u70b9\u5355\u4fe1\u606f\u3002\u6700\u540e\uff0c\u7a0b\u5e8f\u5e94\u5206\u884c\u8f93\u51fa\u5ba2\u6237\u70b9\u7684\u5185\u5bb9\uff0c\u5e76\u6253\u5370\u51fa\u603b\u4ef7\u3002 \u4ef7\u683c\u4fe1\u606f\uff1a \u6c49\u5821\uff1a$5 \u85af\u6761\uff1a$2 \u53ef\u4e50\uff1a$1 \u529f\u80fd\u8981\u6c42\uff1a \u663e\u793a\u5404\u9879\u98df\u7269\u7684\u4ef7\u683c\u3002 \u63d0\u793a\u7528\u6237\u8f93\u5165\u6bcf\u79cd\u98df\u7269\u7684\u6570\u91cf\u3002 \u8ba1\u7b97\u5e76\u663e\u793a\u6bcf\u79cd\u98df\u7269\u7684\u70b9\u5355\u6570\u91cf\u3002 \u8ba1\u7b97\u5e76\u663e\u793a\u603b\u4ef7\u3002 \u8f93\u5165\u8f93\u51fa\u793a\u4f8b\uff1a \u793a\u4f8b\u8f93\u51fa\uff1a \u6c49\u5821\uff1a$5 \u85af\u6761\uff1a$2 \u53ef\u4e50\uff1a$1 \u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf\uff1a2 \u8bf7\u8f93\u5165\u85af\u6761\u7684\u6570\u91cf\uff1a1 \u8bf7\u8f93\u5165\u53ef\u4e50\u7684\u6570\u91cf\uff1a3 \u60a8\u7684\u70b9\u5355\u5982\u4e0b\uff1a \u6c49\u5821 X 2 \u85af\u6761 X 1 \u53ef\u4e50 X 3 \u603b\u4ef7\uff1a$15 \u63d0\u793a\uff1a \u4f7f\u7528 cin >> \u51fd\u6570\u83b7\u53d6\u7528\u6237\u8f93\u5165\u3002 \u4f7f\u7528\u7b97\u672f\u8fd0\u7b97\u8ba1\u7b97\u603b\u4ef7\u3002 \u4f7f\u7528 cout << \u51fd\u6570\u8f93\u51fa\u7ed3\u679c\u3002 \u793a\u4f8b\u4ee3\u7801\uff1a #include <iostream> using namespace std; int main() { // \u5b9a\u4e49\u98df\u7269\u7684\u4ef7\u683c int burger_price = 5; int fries_price = 2; int cola_price = 1; // \u663e\u793a\u4ef7\u683c\u4fe1\u606f cout << \"\u6c49\u5821\uff1a$\" << burger_price << endl; cout << \"\u85af\u6761\uff1a$\" << fries_price << endl; cout << \"\u53ef\u4e50\uff1a$\" << cola_price << endl << endl; // \u83b7\u53d6\u7528\u6237\u8f93\u5165\u7684\u70b9\u5355\u6570\u91cf int burger_count, fries_count, cola_count; cout << \"\u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf\uff1a\"; cin >> burger_count; cout << \"\u8bf7\u8f93\u5165\u85af\u6761\u7684\u6570\u91cf\uff1a\"; cin >> fries_count; cout << \"\u8bf7\u8f93\u5165\u53ef\u4e50\u7684\u6570\u91cf\uff1a\"; cin >> cola_count; // \u8ba1\u7b97\u603b\u4ef7 int total_price = burger_count * burger_price + fries_count * fries_price + cola_count * cola_price; // \u8f93\u51fa\u70b9\u5355\u5185\u5bb9\u548c\u603b\u4ef7 cout << \"\\n\u60a8\u7684\u70b9\u5355\u5982\u4e0b\uff1a\" << endl; cout << \"\u6c49\u5821 X \" << burger_count << endl; cout << \"\u85af\u6761 X \" << fries_count << endl; cout << \"\u53ef\u4e50 X \" << cola_count << endl; cout << \"\\n\u603b\u4ef7\uff1a$\" << total_price << endl; return 0; }","title":"Lesson 1 C++\u7684\u73af\u5883\u8bbe\u7f6e\u3001\u6570\u636e\u7c7b\u578b\u3001\u8fd0\u7b97\u7b26\u548c\u8f93\u5165\u548c\u8f93\u51fa"},{"location":"lesson1/Lesson1%20C%2B%2B/#lesson-1-c","text":"","title":"Lesson 1 C++\u7684\u73af\u5883\u8bbe\u7f6e\u3001\u6570\u636e\u7c7b\u578b\u3001\u8fd0\u7b97\u7b26\u548c\u8f93\u5165\u548c\u8f93\u51fa"},{"location":"lesson1/Lesson1%20C%2B%2B/#c","text":"C++\u662f\u4e00\u95e8\u529f\u80fd\u5f3a\u5927\u4e14\u7075\u6d3b\u591a\u6837\u7684\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u8bed\u8a00\uff0c\u200c\u5b83\u5177\u6709\u591a\u79cd\u7279\u70b9\uff0c\u200c\u5305\u62ec\u590d\u6742\u6027\u3001\u200c\u9762\u5411\u5bf9\u8c61\u3001\u200c\u9ad8\u6548\u6027\u80fd\u3001\u200c\u4f4e\u7ea7\u5185\u5b58\u64cd\u4f5c\u3001\u200c\u8de8\u5e73\u53f0\u652f\u6301\u3001\u200c\u591a\u7ebf\u7a0b\u4ee5\u53ca\u6cdb\u578b\u7f16\u7a0b\u3002 C++\u53ef\u4ee5\u7528\u4e8e\u7f16\u5199\u684c\u9762\u5e94\u7528\u7a0b\u5e8f\u3001\u200c\u7cfb\u7edf\u8f6f\u4ef6\u3001\u200c\u6e38\u620f\u5f00\u53d1\u3001\u200c\u5b9e\u65f6\u7cfb\u7edf\u548c\u5d4c\u5165\u5f0f\u7cfb\u7edf\u5e94\u7528\u7a0b\u5e8f\u7b49\u591a\u79cd\u7c7b\u578b\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u5c3d\u7ba1C++\u5728\u5176\u4f20\u7edf\u9886\u57df\u4e2d\u53d7\u5230\u5176\u4ed6\u7ade\u4e89\u8bed\u8a00\u7684\u51b2\u51fb\uff0c\u4f46\u5176\u4e3b\u8981\u4f18\u52bf\u5728\u4e8e\u5f3a\u5927\u7684\u62bd\u8c61\u80fd\u529b\u3001\u9ad8\u6027\u80fd\u4ee5\u53ca\u4f4e\u529f\u8017\u3002 \u5b9e\u7528\u573a\u666f\u793a\u4f8b\uff1a \u6e38\u620f\u5f00\u53d1 \uff1a\u8bb8\u591a\u5927\u578b\u6e38\u620f\u548c\u6e38\u620f\u5f15\u64ce\uff0c\u5982Unreal Engine\u548cUnity\u7684\u5e95\u5c42\u90e8\u5206\uff0c\u90fd\u662f\u7528C++\u7f16\u5199\u7684\u3002C++\u7684\u9ad8\u6027\u80fd\u548c\u5bf9\u786c\u4ef6\u8d44\u6e90\u7684\u76f4\u63a5\u63a7\u5236\u4f7f\u5176\u6210\u4e3a\u6e38\u620f\u5f00\u53d1\u7684\u7406\u60f3\u9009\u62e9\u3002 \u7cfb\u7edf\u8f6f\u4ef6 \uff1a\u64cd\u4f5c\u7cfb\u7edf\u3001\u9a71\u52a8\u7a0b\u5e8f\u548c\u5d4c\u5165\u5f0f\u7cfb\u7edf\u7b49\u9700\u8981\u9ad8\u6548\u6027\u80fd\u548c\u4f4e\u7ea7\u786c\u4ef6\u8bbf\u95ee\u7684\u8f6f\u4ef6\uff0c\u901a\u5e38\u4f7f\u7528C++\u7f16\u5199\u3002\u4f8b\u5982\uff0cWindows\u64cd\u4f5c\u7cfb\u7edf\u7684\u8bb8\u591a\u90e8\u5206\u90fd\u662f\u7528C++\u5b9e\u73b0\u7684\u3002 \u91d1\u878d\u884c\u4e1a \uff1a\u9ad8\u9891\u4ea4\u6613\u7cfb\u7edf\u548c\u5b9e\u65f6\u5206\u6790\u5de5\u5177\u7b49\u5bf9\u6027\u80fd\u8981\u6c42\u6781\u9ad8\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u7ecf\u5e38\u7528C++\u5f00\u53d1\u3002C++\u7684\u4f4e\u5ef6\u8fdf\u7279\u6027\u5728\u91d1\u878d\u9886\u57df\u5c24\u5176\u91cd\u8981\u3002 \u5d4c\u5165\u5f0f\u7cfb\u7edf \uff1a\u8bb8\u591a\u5d4c\u5165\u5f0f\u8bbe\u5907\uff0c\u5982\u5bb6\u7528\u7535\u5668\u3001\u6c7d\u8f66\u63a7\u5236\u7cfb\u7edf\u548c\u7269\u8054\u7f51\u8bbe\u5907\uff0c\u90fd\u4f7f\u7528C++\u7f16\u7a0b\u3002C++\u5141\u8bb8\u5f00\u53d1\u8005\u5728\u53d7\u9650\u7684\u786c\u4ef6\u8d44\u6e90\u73af\u5883\u4e2d\u7f16\u5199\u9ad8\u6548\u7684\u4ee3\u7801\u3002 \u79d1\u5b66\u8ba1\u7b97 \uff1a\u5728\u9700\u8981\u5904\u7406\u5927\u91cf\u6570\u636e\u548c\u590d\u6742\u8ba1\u7b97\u7684\u79d1\u5b66\u7814\u7a76\u9886\u57df\uff0cC++\u7ecf\u5e38\u88ab\u7528\u6765\u5f00\u53d1\u9ad8\u6027\u80fd\u8ba1\u7b97\u7a0b\u5e8f\u3002\u8bf8\u5982CERN\u7684\u5927\u578b\u5f3a\u5b50\u5bf9\u649e\u673a\u6570\u636e\u5206\u6790\u8f6f\u4ef6\u5c31\u662f\u7528C++\u7f16\u5199\u7684\u3002 \u901a\u8fc7\u8fd9\u4e9b\u5b9e\u9645\u6848\u4f8b\uff0c\u53ef\u4ee5\u66f4\u597d\u5730\u7406\u89e3C++\u5728\u4e0d\u540c\u9886\u57df\u7684\u5e94\u7528\u548c\u91cd\u8981\u6027\u3002\u5b66\u4e60C++\u4e0d\u4ec5\u53ef\u4ee5\u589e\u5f3a\u7f16\u7a0b\u80fd\u529b\uff0c\u8fd8\u80fd\u4e3a\u8fdb\u5165\u591a\u4e2a\u9ad8\u9700\u6c42\u884c\u4e1a\u6253\u4e0b\u575a\u5b9e\u7684\u57fa\u7840\u3002 \u672c\u6587\u6863\u6d89\u53ca\u8303\u56f4\u5bf9\u6807\u5927\u5b66\u8ba1\u7b97\u673a\u5927\u4e00\u5165\u95e8\u8bfe\u7a0b\uff0c\u5e2e\u52a9\u5927\u5b66\u5b66\u751f\u4ee5\u53ca\u51c6\u5907\u5b66\u4e60\u7b97\u6cd5\u7ade\u8d5b\u7684\u521d\u9ad8\u4e2d\u751f\uff0c\u5165\u95e8C++\u7f16\u7a0b\u8bed\u8a00\uff0c\u901a\u8fc7\u9488\u5bf9\u6027\u7b97\u6cd5\u8bad\u7ec3\u638c\u63e1\u8bed\u6cd5\u548c\u57fa\u7840\u7b97\u6cd5\uff0c\u4e3a\u4e0b\u4e00\u9636\u6bb5\u5b66\u4e60\u505a\u51c6\u5907\u3002","title":"\u524d\u8a00\uff1a\u4e3a\u4ec0\u4e48\u8981\u5b66\u4e60C++"},{"location":"lesson1/Lesson1%20C%2B%2B/#1-c","text":"","title":"1. C++\u73af\u5883\u914d\u7f6e"},{"location":"lesson1/Lesson1%20C%2B%2B/#11-vs-code","text":"\u8bbf\u95ee Visual Studio Code \u5b98\u65b9\u7f51\u7ad9 https://code.visualstudio.com/ \u70b9\u51fb\u201cDownload\u201d\u6309\u94ae\uff0c\u9009\u62e9\u9002\u5408\u4f60\u64cd\u4f5c\u7cfb\u7edf\u7684\u5b89\u88c5\u7a0b\u5e8f\uff08Windows\u3001macOS \u6216 Linux\uff09\u3002","title":"1.1 \u4e0b\u8f7d VS Code"},{"location":"lesson1/Lesson1%20C%2B%2B/#12-vs-code","text":"\u4e0b\u8f7d\u5b8c\u6210\u540e\uff0c\u8fd0\u884c\u5b89\u88c5\u7a0b\u5e8f\u3002 \u6309\u7167\u5b89\u88c5\u5411\u5bfc\u5b8c\u6210\u5b89\u88c5\u8fc7\u7a0b\u3002","title":"1.2 \u5b89\u88c5 VS Code"},{"location":"lesson1/Lesson1%20C%2B%2B/#13-c","text":"","title":"1.3 \u5b89\u88c5 C++ \u63d2\u4ef6"},{"location":"lesson1/Lesson1%20C%2B%2B/#131-vs-code","text":"\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u542f\u52a8 VS Code\u3002","title":"1.3.1 \u542f\u52a8 VS Code"},{"location":"lesson1/Lesson1%20C%2B%2B/#132-c","text":"\u70b9\u51fb\u5de6\u4fa7\u6d3b\u52a8\u680f\u4e2d\u7684\u201cExtensions\u201d\u56fe\u6807\uff08\u6216\u6309 Ctrl+Shift+X\uff09\u3002 \u5728\u641c\u7d22\u6846\u4e2d\u8f93\u5165 C++\u3002 \u627e\u5230\u5e76\u5b89\u88c5\u7531 Microsoft \u53d1\u5e03\u7684\u201cC/C++\u201d\u6269\u5c55\u3002 \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u70b9\u51fb\"\u91cd\u65b0\u52a0\u8f7d\"\u6309\u94ae\u91cd\u65b0\u52a0\u8f7dVSCode\u6216\u91cd\u542fVSCode","title":"1.3.2 \u5b89\u88c5 C++ \u63d2\u4ef6"},{"location":"lesson1/Lesson1%20C%2B%2B/#14-c","text":"","title":"1.4 \u5b89\u88c5C++\u7f16\u8bd1\u5668"},{"location":"lesson1/Lesson1%20C%2B%2B/#141","text":"\u5982\u679c\u4f60\u60f3\u8981\u68c0\u67e5\u4f60\u7684\u7535\u8111\u4e0a\u662f\u5426\u5df2\u7ecf\u5b89\u88c5\u4e86 GNU Compiler Collection (GCC) \u6216\u8005 Clang \u7f16\u8bd1\u5668\uff0c\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u64cd\u4f5c\uff1a 1. \u6253\u5f00 VSCode\uff0c\u7136\u540e\u6253\u5f00\u4e00\u4e2a\u65b0\u7684\u7ec8\u7aef\u7a97\u53e3\uff08\u4f7f\u7528\u5feb\u6377\u952e \u2303\u21e7` \u6216 \u70b9\u51fb\u5de6\u4e0a\u89d2\u67e5\u770b->\u7ec8\u7aef\uff09\u3002 2. \u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\u6765\u68c0\u67e5 GCC \u7f16\u8bd1\u5668 g++ \u7684\u7248\u672c: g++ --version \u6216\u8005\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u6765\u68c0\u67e5 Clang \u7f16\u8bd1\u5668 clang \u7684\u7248\u672c\uff1a clang --version 3. \u5982\u679c\u4f60\u7684\u7535\u8111\u5df2\u7ecf\u5b89\u88c5\u4e86\u5bf9\u5e94\u7684\u7f16\u8bd1\u5668\uff0c\u547d\u4ee4\u4f1a\u663e\u793a\u7f16\u8bd1\u5668\u7684\u7248\u672c\u4fe1\u606f\u548c\u8be6\u7ec6\u5185\u5bb9\u3002 4. \u5982\u679c\u6ca1\u6709\u627e\u5230\u5bf9\u5e94\u7684\u7f16\u8bd1\u5668\uff0c\u786e\u4fdd\u4f60\u7684\u7f16\u8bd1\u5668\u53ef\u6267\u884c\u6587\u4ef6\u5728\u7cfb\u7edf\u7684\u8def\u5f84\u4e2d\uff08\u5728 Windows \u4e0b\u662f %PATH \uff0cLinux \u548c macOS \u4e0b\u662f $PATH \uff09\uff0c\u8fd9\u6837 C/C++ \u6269\u5c55\u5c31\u53ef\u4ee5\u627e\u5230\u5b83\u3002 \u5982\u679c\u6ca1\u6709\u5b89\u88c5\u5bf9\u5e94\u7684\u7f16\u8bd1\u5668 \uff0c\u53ef\u4ee5\u6309\u7167\u4e0b\u9762\u7684\u6b65\u9aa4\u5b89\u88c5\u4e00\u4e2a\u7f16\u8bd1\u5668\u3002","title":"1.4.1 \u68c0\u67e5\u662f\u5426\u5df2\u5b89\u88c5\u7f16\u8bd1\u5668"},{"location":"lesson1/Lesson1%20C%2B%2B/#142-windows","text":"Windows \u5e38\u7528\u7684C/C++\u7f16\u8bd1\u5668\u662f MSVC \u548c MinGW \u3002\u4f60\u53ef\u4ee5\u9009\u62e9\u5176\u4e2d\u4e00\u79cd\u8fdb\u884c\u5b89\u88c5,\u6b64\u5904\u5c55\u793aMSVC\u5b89\u88c5\u6559\u7a0b","title":"1.4.2 \u5bf9\u4e8e Windows \u7528\u6237\uff1a"},{"location":"lesson1/Lesson1%20C%2B%2B/#msvc","text":"\u5b89\u88c5\u6b65\u9aa4\uff1a \u6253\u5f00\u94fe\u63a5 https://visualstudio.microsoft.com/zh-hans/downloads/ \u5c06\u9875\u9762\u5212\u5230\u6700\u5e95\u4e0b\u7684\u201c\u6240\u6709\u4e0b\u8f7d\u201d\uff0c\u5e76\u627e\u5230\u201c\u7528\u4e8e Visual Studio \u7684\u5de5\u5177\u201d \u70b9\u51fb\u4e0b\u8f7dVisual Stuio 2022 \u751f\u6210\u5de5\u5177 \u4e0b\u8f7d\u5b8c\u6210\u540e\u6253\u5f00\uff0c\u8fd9\u5c06\u542f\u52a8 Visual Studio \u5b89\u88c5\u7a0b\u5e8f\uff0c\u52fe\u9009 \u201c\u4f7f\u7528C++\u7684\u684c\u9762\u5f00\u53d1\u201d\uff0c\u7136\u540e\u9009\u62e9\u5b89\u88c5\u6309\u94ae\u8fdb\u884c\u5b89\u88c5\u3002 \u68c0\u67e5\u4f60\u7684 Microsoft Visual C++ \u5b89\u88c5\u662f\u5426\u6210\u529f \u5728 Windows \u5f00\u59cb\u83dc\u5355\u4e2d\u641c\u7d22 \"developer\"\uff0c\u9009\u62e9\u5408\u9002\u7684 Visual Studio \u5f00\u53d1\u4eba\u5458\u547d\u4ee4\u63d0\u793a\u7b26\u7248\u672c\uff08\u6839\u636e\u4f60\u5b89\u88c5\u7684 Visual Studio \u6216 Build Tools \u7248\u672c\u9009\u62e9\uff09\u3002 \u5728\u6253\u5f00\u7684\u547d\u4ee4\u63d0\u793a\u7b26\u7a97\u53e3\u4e2d\uff0c\u8f93\u5165 cl \u5e76\u6309\u4e0b Enter \u952e\u3002 \u5982\u679c\u7f16\u8bd1\u5668\u6b63\u786e\u5b89\u88c5\uff0c\u4f60\u5e94\u8be5\u4f1a\u770b\u5230\u4e00\u4e2a\u5305\u542b\u7248\u672c\u53f7\u548c\u57fa\u672c\u4f7f\u7528\u8bf4\u660e\u7684\u7248\u6743\u4fe1\u606f.","title":"MSVC \u5b89\u88c5\u548c\u914d\u7f6e\u6559\u7a0b"},{"location":"lesson1/Lesson1%20C%2B%2B/#142-macos","text":"","title":"1.4.2 \u5bf9\u4e8e macOS \u7528\u6237\uff1a"},{"location":"lesson1/Lesson1%20C%2B%2B/#clang","text":"\u6253\u5f00\u7ec8\u7aef\uff0c\u8fd0\u884c\u547d\u4ee4 clang --version","title":"\u68c0\u67e5\u662f\u5426\u5df2\u5b89\u88c5Clang"},{"location":"lesson1/Lesson1%20C%2B%2B/#clang_1","text":"\u6253\u5f00\u7ec8\u7aef\uff0c\u8fd0\u884c\u547d\u4ee4 xcode-select --install \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u8fd0\u884c\u547d\u4ee4\u68c0\u67e5 clang --version","title":"\u5982\u679c\u6ca1\u6709\uff0c\u5219\u5b89\u88c5Clang:"},{"location":"lesson1/Lesson1%20C%2B%2B/#15-c","text":"","title":"1.5 C++\u7f16\u8bd1&amp;\u8fd0\u884c"},{"location":"lesson1/Lesson1%20C%2B%2B/#c_1","text":"C++\u7a0b\u5e8f\u7684\u8fd0\u884c\u5fc5\u987b\u7ecf\u8fc7\u7f16\u5199\u3001\u7f16\u8bd1\u548c\u8fd0\u884c 3 \u4e2a\u6b65\u9aa4\u3002 \u7f16\u5199\uff1a\u5728 C++ \u5f00\u53d1\u73af\u5883\u4e2d\u7f16\u5199\u7a0b\u5e8f\u4ee3\u7801\uff0c\u5f62\u6210\u540e\u7f00\u540d\u4e3a .cpp \u7684 C++ \u6e90\u6587\u4ef6 \u7f16\u8bd1\uff1a\u4f7f\u7528 C++ \u7f16\u8bd1\u5668\uff08\u5982 g++ \u547d\u4ee4\uff09\u5bf9\u6e90\u6587\u4ef6\u8fdb\u884c\u7f16\u8bd1\u3002\u5982\u679c\u6e90\u4ee3\u7801\u4e2d\u6ca1\u6709\u8bed\u6cd5\u9519\u8bef\uff0c\u7f16\u8bd1\u5668\u4f1a\u751f\u6210\u76ee\u6807\u6587\u4ef6\uff08\u901a\u5e38\u662f\u540e\u7f00\u4e3a .o \u6216 .obj \u7684\u6587\u4ef6\uff09\u4ee5\u53ca\u6700\u7ec8\u7684\u53ef\u6267\u884c\u6587\u4ef6\uff08\u5728 Linux \u4e0a\u901a\u5e38\u6ca1\u6709\u540e\u7f00\uff0c\u5728 Windows \u4e0a\u901a\u5e38\u662f .exe \u6587\u4ef6\uff09\u3002 \u8fd0\u884c\uff1a\u901a\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u76f4\u63a5\u8fd0\u884c\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002C++ \u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u662f\u5e73\u53f0\u76f8\u5173\u7684\uff0c\u5fc5\u987b\u5728\u751f\u6210\u8be5\u6587\u4ef6\u7684\u5e73\u53f0\u4e0a\u8fd0\u884c\uff0c\u6216\u8005\u4f7f\u7528\u76f8\u5e94\u7684\u5de5\u5177\u8fdb\u884c\u8de8\u5e73\u53f0\u6267\u884c\u3002","title":"C++\u7684\u8fd0\u884c\u8fc7\u7a0b"},{"location":"lesson1/Lesson1%20C%2B%2B/#2-hello-world","text":"","title":"2. \u7b2c\u4e00\u4e2a\u7a0b\u5e8f\uff1aHello World\uff01"},{"location":"lesson1/Lesson1%20C%2B%2B/#cide","text":"\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff08Integrated Development Environment\uff0c\u7b80\u79f0IDE\uff09\u662f\u4e00\u79cd\u8f6f\u4ef6\u5de5\u5177\uff0c\u63d0\u4f9b\u4e86\u4e00\u5957\u96c6\u6210\u7684\u529f\u80fd\u548c\u5de5\u5177\uff0c\u7528\u4e8e\u5f00\u53d1\u3001\u7f16\u5199\u3001\u6d4b\u8bd5\u548c\u8c03\u8bd5\u8f6f\u4ef6\u5e94\u7528\u7a0b\u5e8f\u3002 IDE\u901a\u5e38\u5305\u62ec\u4ee5\u4e0b\u6838\u5fc3\u7ec4\u4ef6\uff1a\u4ee3\u7801\u7f16\u8f91\u5668\u3001\u7f16\u8bd1\u5668/\u89e3\u91ca\u5668\u3001\u8c03\u8bd5\u5668\u3001\u6784\u5efa\u5de5\u5177\u3001\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u96c6\u6210\u3001\u56fe\u5f62\u7528\u6237\u754c\u9762\u8bbe\u8ba1\u5668\u3001\u9879\u76ee\u7ba1\u7406\u5de5\u5177\u3002 \u901a\u8fc7\u96c6\u6210\u8fd9\u4e9b\u529f\u80fd\u548c\u5de5\u5177\uff0cIDE\u53ef\u4ee5\u63d0\u9ad8\u5f00\u53d1\u4eba\u5458\u7684\u751f\u4ea7\u529b\uff0c\u7b80\u5316\u5f00\u53d1\u8fc7\u7a0b\uff0c\u5e76\u63d0\u4f9b\u66f4\u597d\u7684\u4ee3\u7801\u8d28\u91cf\u548c\u53ef\u7ef4\u62a4\u6027\u3002IDE\u901a\u5e38\u4e0e\u7279\u5b9a\u7684\u7f16\u7a0b\u8bed\u8a00\u6216\u5f00\u53d1\u5e73\u53f0\u76f8\u5173\uff0c\u4f8b\u5982C++\u5f00\u53d1\u4e2d\u5e38\u7528\u7684Visual Studio\u3001CLion\u548cEclipse CDT\u7b49\u3002 \u8fd9\u4e9b IDE \u90fd\u5177\u6709\u4e30\u5bcc\u7684\u529f\u80fd\u96c6\uff0c\u80fd\u591f\u663e\u8457\u63d0\u9ad8 C++ \u5f00\u53d1\u4eba\u5458\u7684\u751f\u4ea7\u529b\uff0c\u7b80\u5316\u5f00\u53d1\u8fc7\u7a0b\uff0c\u5e76\u901a\u8fc7\u5f3a\u5927\u7684\u5de5\u5177\u548c\u96c6\u6210\u73af\u5883\u63d0\u9ad8\u4ee3\u7801\u8d28\u91cf\u548c\u53ef\u7ef4\u62a4\u6027\u3002\u9009\u62e9\u9002\u5408\u7684 IDE \u53d6\u51b3\u4e8e\u4e2a\u4eba\u504f\u597d\u3001\u56e2\u961f\u9700\u6c42\u4ee5\u53ca\u9879\u76ee\u7279\u70b9\u3002 \u9488\u5bf9 C++ \u5f00\u53d1\uff0c\u4ee5\u4e0b\u662f\u51e0\u4e2a\u5e38\u7528\u7684\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff08IDE\uff09\uff1a","title":"C++\u5e38\u7528\u7684\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff08IDE\uff09"},{"location":"lesson1/Lesson1%20C%2B%2B/#visual-studio-microsoft","text":"\u5b98\u7f51: https://visualstudio.microsoft.com/ Visual Studio \u63d0\u4f9b\u4e86\u591a\u4e2a\u7248\u672c\uff0c\u5305\u62ec Community\uff08\u514d\u8d39\uff09\u3001Professional \u548c Enterprise\u3002 \u5b83\u662f\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684 IDE\uff0c\u652f\u6301\u591a\u79cd\u8bed\u8a00\uff0c\u5305\u62ec C++\u3002Visual Studio \u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u8c03\u8bd5\u5de5\u5177\u3001\u56fe\u5f62\u5316\u754c\u9762\u8bbe\u8ba1\u3001\u4ee3\u7801\u5206\u6790\u548c\u4f18\u5316\u7b49\u529f\u80fd\uff0c\u7279\u522b\u9002\u5408 Windows \u5e73\u53f0\u7684 C++ \u5f00\u53d1\u3002","title":"Visual Studio (Microsoft)"},{"location":"lesson1/Lesson1%20C%2B%2B/#clion-jetbrains","text":"\u5b98\u7f51: https://www.jetbrains.com/clion/ CLion \u662f JetBrains \u516c\u53f8\u4e13\u95e8\u4e3a C++ \u5f00\u53d1\u8005\u8bbe\u8ba1\u7684 IDE\u3002\u5b83\u96c6\u6210\u4e86\u667a\u80fd\u4ee3\u7801\u7f16\u8f91\u3001\u5f3a\u5927\u7684\u8c03\u8bd5\u5668\u3001\u7248\u672c\u63a7\u5236\u7b49\u529f\u80fd\uff0c\u652f\u6301\u8de8\u5e73\u53f0\u5f00\u53d1\uff08Windows\u3001macOS \u548c Linux\uff09\u3002 CLion \u63d0\u4f9b\u4e86\u8bb8\u591a\u73b0\u4ee3\u5316\u7684\u5de5\u5177\u548c\u529f\u80fd\uff0c\u80fd\u591f\u663e\u8457\u63d0\u9ad8 C++ \u5f00\u53d1\u7684\u6548\u7387\u548c\u4ee3\u7801\u8d28\u91cf\u3002","title":"CLion (JetBrains)"},{"location":"lesson1/Lesson1%20C%2B%2B/#eclipse-cdt-eclipse","text":"\u5b98\u7f51: https://www.eclipse.org/cdt/ Eclipse CDT \u662f Eclipse \u7684 C/C++ \u5f00\u53d1\u5de5\u5177\u96c6\u6210\uff0c\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u529f\u80fd\u5982\u4ee3\u7801\u7f16\u8f91\u3001\u8c03\u8bd5\u3001\u7248\u672c\u63a7\u5236\u7b49\u3002\u5b83\u662f\u4e00\u4e2a\u5f00\u6e90\u3001\u8de8\u5e73\u53f0\u7684 IDE\uff0c\u9002\u5408\u9700\u8981\u7075\u6d3b\u914d\u7f6e\u548c\u4e30\u5bcc\u63d2\u4ef6\u652f\u6301\u7684\u5f00\u53d1\u8005\u4f7f\u7528\u3002 \u8fd9\u91cc\u4ee5 VSCode\u4e3a\u4f8b\u5c55\u793a\u5982\u4f55\u4f7f\u7528IDE\u7f16\u5199\u4f60\u7684\u7b2c\u4e00\u4e2aHello World \u7a0b\u5e8f\uff1a \u6253\u5f00\u7ec8\u7aef\uff08MacOS\uff09/ Developer Command Prompt for VS\uff08Windows\uff09\u5e76\u8f93\u5165\u4ee5\u4e0b\u547d\u4ee4\uff1a mkdir projects cd projects mkdir helloworld cd helloworld code . \u4ee5\u4e0a\u547d\u4ee4\u4f1a\u4f9d\u6b21\u5728\u9ed8\u8ba4\u8def\u5f84\u4e0b\u521b\u5efa projects \u6587\u4ef6\u5939\u3001helloworld \u5b50\u6587\u4ef6\u5939\uff0c\u5e76\u5728 helloworld \u6587\u4ef6\u5939\u4e2d\u6253\u5f00 VS Code\u3002","title":"Eclipse CDT (Eclipse)"},{"location":"lesson1/Lesson1%20C%2B%2B/#_1","text":"\u5982\u679c\u5728 Windows \u4e0a mkdir \u540e\u663e\u793a\u201c\u62d2\u7edd\u8bbf\u95ee\u201d\uff1a - \u53ef\u4ee5\u5c1d\u8bd5\u9000\u51fa\u540e\u53f3\u952e\u5355\u51fb \"Developer Command Prompt for VS\" - \u9009\u62e9 \"\u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u8fd0\u884c\"\u3002 - \u5728\u7ba1\u7406\u5458\u6743\u9650\u7684\u7a97\u53e3\u4e2d\u5c1d\u8bd5\u518d\u6b21\u8fd0\u884c\u4ee5\u4e0a mkdir \u547d\u4ee4 \u5982\u679c\u5728 Mac \u4e0a\u8f93\u5165 code . \u540e\u663e\u793a command not found : - \u6253\u5f00 VSCode\uff0c\u6309\u4e0b Command + Shift + P \u6253\u5f00\u547d\u4ee4\u9762\u677f\u3002 \u8f93\u5165 \"shell command\" \u5e76\u9009\u62e9 \"Shell Command: Install 'code' command in PATH\" \u9009\u9879\u3002\u8fd9\u4f1a\u5728\u7ec8\u7aef\u4e2d\u914d\u7f6e code \u547d\u4ee4\u7684\u8def\u5f84\u3002 - \u5728\u7ec8\u7aef\u518d\u6b21\u5c1d\u8bd5\u8fd0\u884c\u4ee5\u4e0a mkdir \u547d\u4ee4","title":"\u5e38\u89c1\u95ee\u9898\uff1a"},{"location":"lesson1/Lesson1%20C%2B%2B/#_2","text":"\u5728 VS Code \u7684\u8d44\u6e90\u7ba1\u7406\u5668\u6807\u9898\u680f\u4e2d\uff0c\u9009\u62e9\u201c\u65b0\u6587\u4ef6\u201d\u6309\u94ae\uff0c\u5e76\u547d\u540d\u4e3a helloworld.cpp \u3002","title":"\u6dfb\u52a0\u6e90\u4ee3\u7801\u6587\u4ef6"},{"location":"lesson1/Lesson1%20C%2B%2B/#hello-world","text":"\u5c06\u4ee5\u4e0b\u4ee3\u7801\u7c98\u8d34\u5230 helloworld.cpp \u6587\u4ef6\u4e2d\uff1a #include <iostream> using namespace std; int main(){ cout << \"Hello World! \" << endl; } \u6309 \u2318S (Mac) \u6216 Ctrl+S (Windows) \u4fdd\u5b58\u6587\u4ef6\u3002\u4fdd\u5b58\u540e\uff0c\u6587\u4ef6\u8d44\u6e90\u7ba1\u7406\u5668\u89c6\u56fe\u4e2d\u4f1a\u663e\u793a\u65b0\u6dfb\u52a0\u7684\u6587\u4ef6\u3002","title":"\u6dfb\u52a0 Hello World \u6e90\u4ee3\u7801"},{"location":"lesson1/Lesson1%20C%2B%2B/#helloworldcpp","text":"\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684 \u201c\u8fd0\u884c C/C++\u201c \u9009\u62e9\u8fd0\u884c\u914d\u7f6e \u5bf9\u4e8eWindows\u7528\u6237\uff1a \u9009\u62e9 C/C++: cl.exe build and debug active file \u8fd0\u884c\u7684\u7ed3\u679c\u5c06\u4f1a\u663e\u793a\u5728\u96c6\u6210\u7ec8\u7aef\u4e2d \u5bf9\u4e8eMac\u7528\u6237\uff1a \u9009\u62e9 C/C++: clang++ build and debug active file \u8fd0\u884c\u7684\u7ed3\u679c\u5c06\u4f1a\u663e\u793a\u5728\u8c03\u8bd5\u63a7\u5236\u53f0 \u81f3\u6b64\uff0c\u606d\u559c\u4f60\u5b8c\u6210\u4e86\u4f60\u7684\u7b2c\u4e00\u4e2aC++\u7a0b\u5e8f\uff01:)","title":"\u8fd0\u884c helloworld.cpp"},{"location":"lesson1/Lesson1%20C%2B%2B/#4-c","text":"","title":"4. C++\u4e2d\u7684\u6807\u8bc6\u7b26"},{"location":"lesson1/Lesson1%20C%2B%2B/#41","text":"\u6807\u8bc6\u7b26\u662f\u6307\u7528\u6765\u6807\u8bc6\u67d0\u4e2a\u5b9e\u4f53\u7684\u4e00\u4e2a\u7b26\u53f7\u3002\u5728C++\u8bed\u8a00\u4e2d\uff0c\u6807\u8bc6\u7b26\u4e3b\u8981\u662f\u6307\u5728\u7f16\u7a0b\u65f6\u4f7f\u7528\u7684\u540d\u5b57\u3002\u6807\u8bc6\u7b26\u7684\u4f7f\u7528\u987b\u9075\u5faa\u4e00\u5b9a\u7684\u89c4\u5219\uff1aC++\u4e2d\u7684\u6807\u8bc6\u7b26\u7531\u5b57\u6bcd\u3001\u6570\u5b57\u548c\u4e0b\u5212\u7ebf\u7ec4\u6210\uff0c\u4e14\u5fc5\u987b\u4ee5\u5b57\u6bcd\u6216\u4e0b\u5212\u7ebf\uff08_\uff09\u5f00\u5934\u3002\u89c4\u5219\u603b\u7ed3\u5982\u4e0b\uff1a \u53ef\u4ee5\u5305\u542b\u6570\u5b57\uff0c\u4f46\u4e0d\u80fd\u4ee5\u6570\u5b57\u5f00\u5934\u3002 \u9664\u4e0b\u5212\u7ebf\uff08_\uff09\u4ee5\u5916\uff0c\u4e0d\u5305\u542b\u4efb\u4f55\u5176\u4ed6\u7279\u6b8a\u5b57\u7b26\uff0c\u5982\u7a7a\u683c\u3002 \u4e0d\u80fd\u7528C++\u5173\u952e\u5b57\u6216\u4fdd\u7559\u5b57\u505a\u6807\u8bc6\u7b26\u3002 C++\u6807\u8bc6\u7b26\u5927\u5c0f\u5199\u654f\u611f\u3002 \u5408\u6cd5\u7684\u6807\u8bc6\u7b26\uff0c\u5982\uff1a int a = 3; int _123 = 3; int myVar = 3; int \u53d8\u91cf1 = 3; //\u867d\u7136\u5408\u6cd5\uff0c\u4f46\u4e0d\u63a8\u8350\u4f7f\u7528\u4e2d\u6587 \u4e0d\u5408\u6cd5\u7684\u6807\u8bc6\u7b26\uff0c\u5982\uff1a int 1a = 3; //\u4e0d\u80fd\u4f7f\u7528\u6570\u5b57\u5f00\u5934 int a# = 3; //\u4e0d\u80fd\u5305\u542b#\u8fd9\u6837\u7684\u7279\u6b8a\u5b57\u7b26 int int = 3; //\u4e0d\u80fd\u4f7f\u7528\u5173\u952e\u5b57 \u6ce8\u610f\uff1a\u867d\u7136C++\u7684\u8bed\u6cd5\u5141\u8bb8\u4f7f\u7528\u4e0b\u5212\u7ebf\uff08_\uff09\u4f5c\u4e3a\u6807\u8bc6\u7b26\u7684\u5f00\u59cb\uff0c\u4f46\u662f\u5728\u5f88\u591a\u4f01\u4e1a\u7684\u5f00\u53d1\u89c4\u8303\u4e2d\u7ea6\u5b9a\uff0c\u4e0d\u80fd\u4f7f\u7528\u4e0b\u5212\u7ebf\u4f5c\u4e3a\u6807\u8bc6\u7b26\u7684\u5f00\u59cb\uff0c\u4ee5\u8fbe\u5230\u7edf\u4e00\u6807\u8bc6\u7b26\u683c\u5f0f\uff0c\u51cf\u5c11\u6b67\u4e49\u7684\u6548\u679c\u3002","title":"4.1 \u6807\u8bc6\u7b26"},{"location":"lesson1/Lesson1%20C%2B%2B/#42","text":"\u5173\u952e\u5b57\u548c\u4fdd\u7559\u5b57\u662fC++\u8bed\u8a00\u4e2d\u5177\u6709\u7279\u6b8a\u542b\u4e49\u7684\u5355\u8bcd\u6216\u7b26\u53f7\u3002\u5173\u952e\u5b57\u662fC++\u8bed\u8a00\u672c\u8eab\u5b9a\u4e49\u7684\uff0c\u7528\u4e8e\u8868\u793a\u7279\u5b9a\u7684\u8bed\u6cd5\u7ed3\u6784\u548c\u64cd\u4f5c\uff0c\u4e0d\u80fd\u7528\u4f5c\u6807\u8bc6\u7b26\uff0c\u5982\u53d8\u91cf\u540d\u3001\u7c7b\u540d\u7b49\u3002 C++\u8bed\u8a00\u5173\u952e\u5b57\u5982\u4e0b\u6240\u793a\uff1a \u8fd9\u4e9b\u5173\u952e\u5b57\u5177\u6709\u56fa\u5b9a\u7684\u8bed\u6cd5\u542b\u4e49\uff0c\u4e0d\u80fd\u88ab\u7528\u4f5c\u53d8\u91cf\u540d\u6216\u5176\u4ed6\u6807\u8bc6\u7b26\u3002 \u4fdd\u7559\u5b57\u662f\u6307\u88ab\u4fdd\u7559\u4f46\u76ee\u524d\u672a\u88ab\u4f7f\u7528\u7684\u5173\u952e\u5b57\uff0c\u5b83\u4eec\u5728C++\u8bed\u8a00\u4e2d\u6ca1\u6709\u7279\u5b9a\u7684\u529f\u80fd\uff0c\u4f46\u4e3a\u4e86\u4fdd\u7559\u672a\u6765\u53ef\u80fd\u4f7f\u7528\u7684\u5173\u952e\u5b57\u800c\u88ab\u4fdd\u7559\u3002 \u6211\u4eec\u5728\u7f16\u5199\u4ee3\u7801\u65f6\u5e94\u907f\u514d\u4f7f\u7528\u5173\u952e\u5b57\u4f5c\u4e3a\u6807\u8bc6\u7b26\uff0c\u4ee5\u514d\u5f15\u53d1\u7f16\u8bd1\u9519\u8bef\u6216\u8bed\u6cd5\u6df7\u6dc6\u3002","title":"4.2 \u5173\u952e\u5b57\u548c\u4fdd\u7559\u5b57"},{"location":"lesson1/Lesson1%20C%2B%2B/#5-c","text":"","title":"5. C++\u4e2d\u7684\u53d8\u91cf"},{"location":"lesson1/Lesson1%20C%2B%2B/#51","text":"\u53d8\u91cf\u662fC++\u7a0b\u5e8f\u4e2d\u7684\u57fa\u672c\u5b58\u50a8\u5355\u5143\uff0c\u7528\u4e8e\u5b58\u50a8\u6570\u636e\u3002\u53d8\u91cf\u672c\u8d28\u4e0a\u4ee3\u8868\u4e86\u5185\u5b58\u4e2d\u7684\u4e00\u4e2a\u5b58\u50a8\u533a\u57df\uff0c\u5728\u8fd9\u4e2a\u533a\u57df\u4e2d\u7684\u6570\u636e\u53ef\u4ee5\u5728\u540c\u4e00\u6570\u636e\u7c7b\u578b\u8303\u56f4\u5185\u4e0d\u65ad\u53d8\u5316\u3002\u901a\u8fc7\u53d8\u91cf\uff0c\u7a0b\u5e8f\u53ef\u4ee5\u65b9\u4fbf\u5730\u8bfb\u53d6\u548c\u64cd\u4f5c\u8be5\u533a\u57df\u4e2d\u7684\u6570\u636e\u3002 - \u53d8\u91cf\uff1a\u987e\u540d\u601d\u4e49\uff0c\u4f1a\u53d8\u7684\u91cf\u3002 - \u5e38\u91cf\uff1a\u81ea\u7136\u754c\u4e2d\u89c4\u5b9a\u597d\u4e86\u7684\u3001\u4e0d\u4f1a\u53d8\u7684\u503c\u3002","title":"5.1 \u4ec0\u4e48\u662f\u53d8\u91cf"},{"location":"lesson1/Lesson1%20C%2B%2B/#52","text":"\u5728C++\u4e2d\uff0c\u9700\u8981\u5148\u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\uff0c\u624d\u80fd\u4f7f\u7528\u8fd9\u4e2a\u53d8\u91cf\u3002\u53d8\u91cf\u7684\u58f0\u660e\u5305\u542b\u4e24\u70b9\uff1a\u53d8\u91cf\u7684\u6570\u636e\u7c7b\u578b\u548c\u53d8\u91cf\u540d\uff0c\u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a \u6570\u636e\u7c7b\u578b \u53d8\u91cf\u540d\uff1b \u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u662fC++\u7684\u4efb\u610f\u6570\u636e\u7c7b\u578b\u4e4b\u4e00\uff1b\u53d8\u91cf\u540d\u5373\u53d8\u91cf\u7684\u540d\u79f0\uff0c\u7528\u4e8e\u5b58\u50a8\u53d8\u91cf\u503c\uff1a int a; char b; \u53ef\u4ee5\u540c\u65f6\u58f0\u660e\u591a\u4e2a\u540c\u4e00\u6570\u636e\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u53d8\u91cf\u4e4b\u95f4\u7528\u201c,\u201d\u9694\u5f00\uff0c\u4f8b\u5982\uff1a int c\uff0cd\uff0ce; \u7b49\u540c\u4e8e\uff1a int c; int d; int e;","title":"5.2 \u53d8\u91cf\u7684\u58f0\u660e"},{"location":"lesson1/Lesson1%20C%2B%2B/#53","text":"C++\u8bed\u6cd5\u89c4\u5b9a\uff1a\u53d8\u91cf\u53ef\u4ee5\u4e0d\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u53ea\u58f0\u660e\u540e\u5728\u4f7f\u7528\u524d\u8fdb\u884c\u8d4b\u503c\u3002\u867d\u7136C++\u5141\u8bb8\u672a\u521d\u59cb\u5316\u7684\u53d8\u91cf\uff0c\u4f46\u4f7f\u7528\u672a\u521d\u59cb\u5316\u7684\u53d8\u91cf\u4f1a\u5bfc\u81f4\u4e0d\u786e\u5b9a\u7684\u884c\u4e3a\u3002\u53d8\u91cf\u7684\u7b2c\u4e00\u6b21\u8d4b\u503c\u5373\u5bf9\u53d8\u91cf\u7684\u521d\u59cb\u5316\u3002\u5728C++\u4e2d\uff0c\u4f7f\u7528\u7b49\u53f7(=)\u5b9e\u73b0\u53d8\u91cf\u7684\u8d4b\u503c\u3002 \u53d8\u91cf\u7684\u521d\u59cb\u5316\u6709\u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\uff1a 1\u3001\u5728\u58f0\u660e\u53d8\u91cf\u65f6\uff0c\u540c\u65f6\u5bf9\u53d8\u91cf\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u8bed\u6cd5\u5982\u4e0b\uff1a \u6570\u636e\u7c7b\u578b \u53d8\u91cf\u540d = \u521d\u59cb\u503c\uff1b \u4f8b\u5982\uff1a int f = 5; 2\u3001\u7b2c\u4e00\u6b21\u4f7f\u7528\u53d8\u91cf\u524d\uff0c\u5bf9\u53d8\u91cf\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u8bed\u6cd5\u5982\u4e0b\uff1a \u6570\u636e\u7c7b\u578b \u53d8\u91cf\u540d\uff1b \u2026\u2026 \u53d8\u91cf\u540d = \u521d\u59cb\u503c\uff1b \u4f8b\u5982\uff1a int sum; // \u58f0\u660e\u53d8\u91cfsum cout << sum << endl; // \u62a5\u9519\uff0c\u4e0d\u80fd\u4f7f\u7528\u672a\u8d4b\u503c\u7684\u53d8\u91cf sum = 100; // \u7ed9\u53d8\u91cfsum\u8d4b\u503c cout << sum << endl; // \u6b63\u786e\uff0c\u8f93\u51fa100","title":"5.3 \u53d8\u91cf\u7684\u521d\u59cb\u5316"},{"location":"lesson1/Lesson1%20C%2B%2B/#54","text":"\u53d8\u91cf\u5728\u58f0\u660e\u548c\u521d\u59cb\u5316\u540e\uff0c\u53ef\u4ee5\u5bf9\u53d8\u91cf\u8fdb\u884c\u8bbf\u95ee\uff0c\u5305\u62ec\u8bfb\u53d6\u53d8\u91cf\u7684\u503c\u548c\u4fee\u6539\u53d8\u91cf\u7684\u503c\u3002\u4ee3\u7801\u5982\u4e0b\uff1a int sum = 100; // \u58f0\u660e\u53d8\u91cfsum\u5e76\u521d\u59cb\u5316 cout << sum << endl; // \u8f93\u51fa\u53d8\u91cf\u7684\u503c -> 100 sum = 200; // \u4fee\u6539\u53d8\u91cfsum\u7684\u503c cout << sum << endl; // \u518d\u6b21\u8f93\u51fa\u53d8\u91cf\u7684\u503c -> 200 \u53d8\u91cf\u7684\u8bbf\u95ee\u5e94\u6ce8\u610f\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\uff1a 1\u3001\u53d8\u91cf\u7684\u64cd\u4f5c\u5fc5\u987b\u4e0e\u7c7b\u578b\u5339\u914d\u3002 \u53d8\u91cf\u5728\u58f0\u660e\u65f6\u6307\u5b9a\u4e86\u7c7b\u578b\uff0cC++\u7f16\u8bd1\u5668\u4f1a\u68c0\u6d4b\u5bf9\u8be5\u53d8\u91cf\u7684\u64cd\u4f5c\u662f\u5426\u4e0e\u5176\u4ed6\u7c7b\u578b\u5339\u914d\uff0c\u5982\u679c\u5bf9\u53d8\u91cf\u7684\u8d4b\u503c\u6216\u8005\u64cd\u4f5c\u4e0e\u5176\u7c7b\u578b\u4e0d\u5339\u914d\uff0c\u4f1a\u4ea7\u751f\u7f16\u8bd1\u9519\u8bef\uff0c\u4f8b\u5982\uff1a //\u7f16\u8bd1\u9519\u8bef\uff0c\u53d8\u91cfa\u7684\u7c7b\u578b\u4e3aint\u6574\u578b\uff0c\u4e0d\u80fd\u8d4b\u503c\u4e3a\u6d6e\u70b9\u7c7b\u578b\u7684\u503c int a = 3.14; 2\u3001\u53d8\u91cf\u7684\u6570\u636e\u7c7b\u578b\u53ea\u5199\u4e00\u6b21\u3002 \u53d8\u91cf\u5728\u7b2c\u4e00\u6b21\u58f0\u660e\u7684\u65f6\u5019\u5199\u6570\u636e\u7c7b\u578b\uff0c\u518d\u6b21\u4f7f\u7528\u65f6\u4e0d\u5199\u6570\u636e\u7c7b\u578b\uff0c\u4f8b\u5982\uff1a int n; n = 5; // \u6b63\u786e\uff0c\u518d\u6b21\u4f7f\u7528\u53d8\u91cfn\u65f6\u4e0d\u5199\u6570\u636e\u7c7b\u578b int n = 10; // \u9519\u8bef\uff0c\u518d\u6b21\u6307\u5b9a\u53d8\u91cf\u7684\u6570\u636e\u7c7b\u578b\u4f1a\u51fa\u73b0\u7f16\u8bd1\u9519\u8bef 3\u3001\u672a\u7ecf\u58f0\u660e\u7684\u53d8\u91cf\u4e0d\u80fd\u4f7f\u7528\u3002 \u53d8\u91cf\u5fc5\u987b\u5148\u58f0\u660e\uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u7f16\u8bd1\u9519\u8bef\uff0c\u4f8b\u5982\uff1a k = 5; cout << k << endl; // \u7f16\u8bd1\u9519\u8bef\uff0c\u53d8\u91cfk\u6ca1\u6709\u58f0\u660e 4\u3001\u53d8\u91cf\u521d\u59cb\u5316\u540e\u624d\u53ef\u4ee5\u4f7f\u7528\u3002 C++\u5141\u8bb8\u58f0\u660e\u53d8\u91cf\u800c\u4e0d\u521d\u59cb\u5316\uff0c\u4f46\u4f7f\u7528\u672a\u521d\u59cb\u5316\u7684\u53d8\u91cf\u4f1a\u5bfc\u81f4\u4e0d\u53ef\u9884\u6d4b\u7684\u7ed3\u679c\uff0c\u4f8b\u5982\uff1a int t; cout << t << endl; // \u53d8\u91cft\u6ca1\u6709\u521d\u59cb\u5316\uff0c\u53ef\u80fd\u8f93\u51fa\u5783\u573e\u503c","title":"5.4 \u53d8\u91cf\u7684\u8bbf\u95ee"},{"location":"lesson1/Lesson1%20C%2B%2B/#6-c","text":"C++\u7684\u6570\u636e\u7c7b\u578b\u5206\u4e3a\uff1a\u57fa\u672c\u6570\u636e\u7c7b\u578b\u3001\u590d\u5408\u6570\u636e\u7c7b\u578b\u548c\u6307\u9488\u7c7b\u578b\u7b49\uff0c\u672c\u6587\u6863\u9488\u5bf9\u521d\u5b66\u8005\uff0c\u4ec5\u5bf9\u57fa\u672c\u6570\u636e\u7c7b\u578b\u8fdb\u884c\u8be6\u7ec6\u4ecb\u7ecd\u3002","title":"6. C++\u7684\u6570\u636e\u7c7b\u578b"},{"location":"lesson1/Lesson1%20C%2B%2B/#61","text":"C++\u57fa\u672c\u6570\u636e\u7c7b\u578b\u5305\u62ec4\u7c7b\uff1a\u6574\u6570\u7c7b\u578b\u3001\u6d6e\u70b9\u6570\u7c7b\u578b\u3001\u5b57\u7b26\u7c7b\u578b\u548c\u5e03\u5c14\u7c7b\u578b\u3002","title":"6.1 \u57fa\u672c\u6570\u636e\u7c7b\u578b"},{"location":"lesson1/Lesson1%20C%2B%2B/#611","text":"C++\u4e2d\u7684\u6574\u6570\u7c7b\u578b\u5305\u62ec\uff1aint, short, long, long long\u578b\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u533a\u522b\u662f\u5bbd\u5ea6\u548c\u8303\u56f4\u7684\u4e0d\u540c\u3002","title":"6.1.1 \u6574\u6570\u7c7b\u578b"},{"location":"lesson1/Lesson1%20C%2B%2B/#int","text":"\u5927\u5c0f\uff1a\u901a\u5e38\u4e3a4\u5b57\u8282\uff0832\u4f4d\uff09\u3002 \u8303\u56f4\uff1a\u57fa\u4e8e\u7f16\u8bd1\u5668\u548c\u5e73\u53f0\uff0c\u4e00\u822c\u8303\u56f4\u4e3a\u7ea6-2,147,483,648\u52302,147,483,647\u3002","title":"int\u7c7b\u578b\uff1a"},{"location":"lesson1/Lesson1%20C%2B%2B/#short","text":"\u5927\u5c0f\uff1a\u901a\u5e38\u4e3a2\u5b57\u8282\uff0816\u4f4d\uff09\u3002 \u8303\u56f4\uff1a\u57fa\u4e8e\u7f16\u8bd1\u5668\u548c\u5e73\u53f0\uff0c\u4e00\u822c\u8303\u56f4\u4e3a\u7ea6-32,768\u523032,767\u3002","title":"short\u7c7b\u578b\uff1a"},{"location":"lesson1/Lesson1%20C%2B%2B/#long","text":"\u5927\u5c0f\uff1a\u901a\u5e38\u4e3a4\u5b57\u8282\uff0832\u4f4d\uff09\uff0c\u4f46\u5728\u4e00\u4e9b\u5e73\u53f0\u4e0a\u53ef\u80fd\u4e3a8\u5b57\u8282\uff0864\u4f4d\uff09\u3002 \u8303\u56f4\uff1a\u57fa\u4e8e\u7f16\u8bd1\u5668\u548c\u5e73\u53f0\uff0c32\u4f4dlong\u7c7b\u578b\u7684\u8303\u56f4\u7ea6\u4e3a-2,147,483,648\u52302,147,483,647\uff0c64\u4f4dlong\u7c7b\u578b\u7684\u8303\u56f4\u66f4\u5927\u3002","title":"long\u7c7b\u578b\uff1a"},{"location":"lesson1/Lesson1%20C%2B%2B/#long-long","text":"\u5927\u5c0f\uff1a\u901a\u5e38\u4e3a8\u5b57\u8282\uff0864\u4f4d\uff09\u3002 \u8303\u56f4\uff1a\u57fa\u4e8e\u7f16\u8bd1\u5668\u548c\u5e73\u53f0\uff0c\u8303\u56f4\u7ea6\u4e3a-9,223,372,036,854,775,808\u52309,223,372,036,854,775,807\u3002","title":"long long\u7c7b\u578b\uff1a"},{"location":"lesson1/Lesson1%20C%2B%2B/#612","text":"\u5728C++\u4e2d\uff0c\u6d6e\u70b9\u6570\u7c7b\u578b\u4e3b\u8981\u7531 float \u548c double \u4e24\u79cd\u8868\u793a\u3002 \u4ee5\u4e0b\u662f\u5173\u4e8e\u8fd9\u4e24\u79cd\u6d6e\u70b9\u6570\u7c7b\u578b\u7684\u8bf4\u660e\uff1a","title":"6.1.2 \u6d6e\u70b9\u7c7b\u578b"},{"location":"lesson1/Lesson1%20C%2B%2B/#float","text":"\u5b57\u8282\u6570\uff1a\u901a\u5e38\u4e3a4\u5b57\u8282\uff0832\u4f4d\uff09\u3002 \u8868\u793a\u8303\u56f4\uff1a\u7ea6 \u00b13.402823466e+38F \uff0814\u4f4d\u6709\u6548\u6570\u5b57\uff09\u3002 \u7cbe\u5ea6\uff1a\u901a\u5e38\u4e3a6\u4f4d\u6709\u6548\u6570\u5b57\u3002 \u521d\u59cb\u5316\uff1a\u53ef\u4ee5\u4f7f\u7528\u6d6e\u70b9\u6570\u5e38\u91cf\u3001\u6574\u6570\u5e38\u91cf\u6216\u8f6c\u6362\u6765\u521d\u59cb\u5316\u3002 float f1 = 3.14f; // \u4f7f\u7528\u6d6e\u70b9\u6570\u5e38\u91cf\u521d\u59cb\u5316 float f2 = 10; // \u4f7f\u7528\u6574\u6570\u521d\u59cb\u5316\uff0c\u4f1a\u8fdb\u884c\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362 float f3 = static_cast<float>(5); // \u4f7f\u7528\u663e\u5f0f\u7c7b\u578b\u8f6c\u6362\u521d\u59cb\u5316","title":"float \u7c7b\u578b\uff1a"},{"location":"lesson1/Lesson1%20C%2B%2B/#double","text":"\u5b57\u8282\u6570\uff1a\u901a\u5e38\u4e3a8\u5b57\u8282\uff0864\u4f4d\uff09\u3002 \u8868\u793a\u8303\u56f4\uff1a\u7ea6 \u00b11.7976931348623158e+308 \uff0815\u4f4d\u6709\u6548\u6570\u5b57\uff09\u3002 \u7cbe\u5ea6\uff1a\u901a\u5e38\u4e3a15\u4f4d\u6709\u6548\u6570\u5b57\u3002 \u521d\u59cb\u5316\uff1a\u53ef\u4ee5\u4f7f\u7528\u6d6e\u70b9\u6570\u5e38\u91cf\u3001\u6574\u6570\u5e38\u91cf\u6216\u8f6c\u6362\u6765\u521d\u59cb\u5316\u3002 double d1 = 3.14; // \u4f7f\u7528\u6d6e\u70b9\u6570\u5e38\u91cf\u521d\u59cb\u5316 double d2 = 10; // \u4f7f\u7528\u6574\u6570\u521d\u59cb\u5316\uff0c\u4f1a\u8fdb\u884c\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362 double d3 = static_cast<double>(5); // \u4f7f\u7528\u663e\u5f0f\u7c7b\u578b\u8f6c\u6362\u521d\u59cb\u5316","title":"double \u7c7b\u578b\uff1a"},{"location":"lesson1/Lesson1%20C%2B%2B/#_3","text":"\u6d6e\u70b9\u6570\u7c7b\u578b\u7684\u7cbe\u5ea6\u662f\u6709\u9650\u7684\uff0c\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u5b58\u5728\u820d\u5165\u8bef\u5dee\u3002 \u4f7f\u7528\u6d6e\u70b9\u6570\u8fdb\u884c\u8ba1\u7b97\u65f6\uff0c\u5c24\u5176\u662f\u6bd4\u8f83\u5927\u5c0f\u6216\u5224\u65ad\u76f8\u7b49\u65f6\uff0c\u5e94\u8003\u8651\u820d\u5165\u8bef\u5dee\u53ef\u80fd\u5bfc\u81f4\u7684\u4e0d\u7cbe\u786e\u6027\u3002\u53ef\u4ee5\u4f7f\u7528\u9002\u5f53\u7684\u5bb9\u5dee\u503c\u8fdb\u884c\u6bd4\u8f83\u3002 \u5728\u4f7f\u7528\u6d6e\u70b9\u6570\u65f6\uff0c\u5e94\u6ce8\u610f\u907f\u514d\u9664\u4ee5\u96f6\u6216\u8fdb\u884c\u65e0\u6548\u7684\u8fd0\u7b97\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4NaN\uff08\u975e\u6570\u5b57\uff09\u7684\u7ed3\u679c\u3002 \u6839\u636e\u5177\u4f53\u9700\u6c42\u548c\u7cbe\u786e\u6027\u8981\u6c42\uff0c\u9009\u62e9\u9002\u5f53\u7684\u6d6e\u70b9\u6570\u7c7b\u578b\u3002\u5982\u679c\u9700\u8981\u66f4\u9ad8\u7684\u7cbe\u5ea6\uff0c\u5219\u53ef\u4ee5\u8003\u8651\u4f7f\u7528 long double \u7c7b\u578b\uff0c\u5b83\u7684\u5b57\u8282\u6570\u901a\u5e38\u4e3a10\u621616\u5b57\u8282\u3002","title":"\u6ce8\u610f\u4e8b\u9879\uff1a"},{"location":"lesson1/Lesson1%20C%2B%2B/#613","text":"\u5728C++\u4e2d\uff0c\u5b57\u7b26\u7c7b\u578b char \u7528\u4e8e\u8868\u793a\u5355\u4e2a\u5b57\u7b26\uff0c\u5e76\u4f7f\u7528ASCII\u7f16\u7801\u3002\u5b83\u662f\u4e00\u79cd\u6574\u6570\u7c7b\u578b\uff0c\u901a\u5e38\u5360\u75281\u4e2a\u5b57\u8282\uff088\u4f4d\uff09\u3002\u4ee5\u4e0b\u662f\u5173\u4e8e char \u7c7b\u578b\u7684\u4e00\u4e9b\u8bf4\u660e\uff1a \u521d\u59cb\u5316\uff1a - char \u7c7b\u578b\u53ef\u4ee5\u901a\u8fc7\u5355\u4e2a\u5b57\u7b26\u6765\u8fdb\u884c\u521d\u59cb\u5316\u3002\u4f8b\u5982\uff1a char ch1 = 'A'; // \u4f7f\u7528\u5355\u5f15\u53f7\u521d\u59cb\u5316 char ch2 = 65; // \u4f7f\u7528\u6574\u6570\u503c\u521d\u59cb\u5316\uff0c\u5bf9\u5e94ASCII\u7801\u4e2d\u7684\u5b57\u7b26 'A' char ch3 = '\\n'; // \u4f7f\u7528\u8f6c\u4e49\u5b57\u7b26\u521d\u59cb\u5316\uff0c\u8868\u793a\u6362\u884c\u7b26 \u5b57\u7b26\u4e32\uff1a - \u5728C++\u4e2d\uff0cchar \u7c7b\u578b\u4e5f\u53ef\u4ee5\u7528\u4e8e\u8868\u793a\u5b57\u7b26\u6570\u7ec4\uff0c\u5373\u5b57\u7b26\u4e32\u3002\u5b57\u7b26\u4e32\u662f\u7531\u591a\u4e2a\u5b57\u7b26\u7ec4\u6210\u7684\u5b57\u7b26\u5e8f\u5217\uff0c\u4ee5null\u7ec8\u6b62\u3002\u4f8b\u5982\uff1a char str1[] = \"Hello\"; // \u58f0\u660e\u5e76\u521d\u59cb\u5316\u4e00\u4e2a\u5b57\u7b26\u4e32 char str2[10]; // \u58f0\u660e\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4\uff08\u5b57\u7b26\u4e32\uff09 strcpy(str2, \"World\"); // \u5c06\u5b57\u7b26\u4e32\u590d\u5236\u5230\u5b57\u7b26\u6570\u7ec4\u4e2d","title":"6.1.3 \u5b57\u7b26\u7c7b\u578b"},{"location":"lesson1/Lesson1%20C%2B%2B/#614","text":"\u5728C++\u4e2d\uff0c\u5e03\u5c14\u7c7b\u578b bool \u7528\u4e8e\u8868\u793a\u903b\u8f91\u503c\uff0c\u53ea\u6709\u4e24\u4e2a\u53d6\u503c\uff1atrue \u548c false\u3002bool \u7c7b\u578b\u4e3b\u8981\u7528\u4e8e\u63a7\u5236\u6d41\u7a0b\u548c\u6761\u4ef6\u5224\u65ad\u3002 \u4ee5\u4e0b\u662f\u5e03\u5c14\u7c7b\u578b\u7684\u4e00\u4e9b\u8bf4\u660e\uff1a \u521d\u59cb\u5316\uff1a - bool \u7c7b\u578b\u53ef\u4ee5\u901a\u8fc7 true \u6216\u8005 false \u6765\u8fdb\u884c\u521d\u59cb\u5316\u3002\u4f8b\u5982\uff1a bool flag1 = true; // \u521d\u59cb\u5316\u4e3atrue bool flag2 = false; // \u521d\u59cb\u5316\u4e3afalse \u6761\u4ef6\u5224\u65ad\uff1a - \u5e03\u5c14\u7c7b\u578b\u5e38\u7528\u4e8e\u6761\u4ef6\u5224\u65ad\uff0c\u4f8b\u5982 if \u8bed\u53e5\u548c\u5faa\u73af\u8bed\u53e5\u4e2d\u3002\u53ea\u6709\u5f53\u6761\u4ef6\u4e3a true \u65f6\uff0c\u76f8\u5e94\u7684\u4ee3\u7801\u5757\u624d\u4f1a\u6267\u884c\u3002\u4f8b\u5982\uff1a bool isTrue = true; if (isTrue) { // \u6761\u4ef6\u4e3a\u771f\uff0c\u6267\u884c\u8fd9\u91cc\u7684\u4ee3\u7801 cout << \"Condition is true!\"; } \u903b\u8f91\u8fd0\u7b97\uff1a - \u5e03\u5c14\u7c7b\u578b\u53ef\u4ee5\u8fdb\u884c\u903b\u8f91\u8fd0\u7b97\uff0c\u5305\u62ec\u903b\u8f91\u4e0e &&\u3001\u903b\u8f91\u6216 || \u548c\u903b\u8f91\u975e !\u3002\u903b\u8f91\u8fd0\u7b97\u7684\u7ed3\u679c\u4e5f\u662f\u5e03\u5c14\u7c7b\u578b\u3002\u4f8b\u5982\uff1a bool condition1 = true; bool condition2 = false; bool result1 = condition1 && condition2; // \u903b\u8f91\u4e0e\uff0c\u7ed3\u679c\u4e3afalse bool result2 = condition1 || condition2; // \u903b\u8f91\u6216\uff0c\u7ed3\u679c\u4e3atrue bool result3 = !condition1; // \u903b\u8f91\u975e\uff0c\u7ed3\u679c\u4e3afalse \u6bd4\u8f83\u8fd0\u7b97\uff1a - \u5e03\u5c14\u7c7b\u578b\u53ef\u4ee5\u8fdb\u884c\u6bd4\u8f83\u8fd0\u7b97\uff0c\u5982\u7b49\u4e8e == \u548c\u4e0d\u7b49\u4e8e !=\u3002\u6bd4\u8f83\u8fd0\u7b97\u7684\u7ed3\u679c\u4e5f\u662f\u5e03\u5c14\u7c7b\u578b\u3002\u4f8b\u5982\uff1a bool result1 = (10 == 5); // \u7ed3\u679c\u4e3afalse bool result2 = (10 != 5); // \u7ed3\u679c\u4e3atrue \u5e03\u5c14\u7c7b\u578b\u5728\u5185\u5b58\u4e2d\u901a\u5e38\u5360\u75281\u4e2a\u5b57\u8282\u7684\u7a7a\u95f4\uff0c\u4f46\u5b9e\u9645\u4e0a\u5176\u503c\u53ea\u80fd\u662f true \u6216\u8005 false\u3002\u5728\u8fdb\u884c\u503c\u7684\u8d4b\u503c\u3001\u8ba1\u7b97\u6216\u6bd4\u8f83\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u5e03\u5c14\u7c7b\u578b\u6765\u7b80\u6d01\u5730\u8868\u8fbe\u903b\u8f91\u5173\u7cfb\u3002","title":"6.1.4 \u5e03\u5c14\u7c7b\u578b"},{"location":"lesson1/Lesson1%20C%2B%2B/#62","text":"\u5728C++\u4e2d\uff0c\u5b57\u7b26\u4e32\u6709\u4e24\u79cd\u4e3b\u8981\u8868\u793a\u65b9\u5f0f\uff1aC\u98ce\u683c\u5b57\u7b26\u4e32\uff08\u5b57\u7b26\u6570\u7ec4\uff09\u548cC++\u98ce\u683c\u5b57\u7b26\u4e32\uff08 std::string \uff09\u3002","title":"6.2 \u5b57\u7b26\u4e32"},{"location":"lesson1/Lesson1%20C%2B%2B/#1-cstdstring","text":"C++\u6807\u51c6\u5e93\u63d0\u4f9b\u4e86 std::string \u7c7b\uff0c\u7528\u4e8e\u66f4\u65b9\u4fbf\u548c\u5b89\u5168\u5730\u5904\u7406\u5b57\u7b26\u4e32\u3002\u4f7f\u7528 std::string \u65f6\uff0c\u9700\u8981\u5305\u542b <string> \u5934\u6587\u4ef6\u3002 \u793a\u4f8b\uff1a #include <iostream> #include <string> int main() { std::string str = \"abc\"; std::cout << str << std::endl; return 0; } \u4f18\u70b9\uff1a - \u63d0\u4f9b\u4e30\u5bcc\u7684\u6210\u5458\u51fd\u6570\uff0c\u652f\u6301\u5b57\u7b26\u4e32\u7684\u5404\u79cd\u64cd\u4f5c\uff08\u4f8b\u5982\u62fc\u63a5\u3001\u67e5\u627e\u3001\u66ff\u6362\u7b49\uff09\u3002 - \u81ea\u52a8\u7ba1\u7406\u5185\u5b58\uff0c\u907f\u514d\u624b\u52a8\u7ba1\u7406\u5b57\u7b26\u6570\u7ec4\u5e26\u6765\u7684\u590d\u6742\u6027\u548c\u6f5c\u5728\u9519\u8bef\u3002 - \u652f\u6301\u4f7f\u7528 + \u64cd\u4f5c\u7b26\u8fdb\u884c\u5b57\u7b26\u4e32\u62fc\u63a5\u3002 \u9002\u7528\u573a\u666f\uff1a - \u9700\u8981\u9891\u7e41\u8fdb\u884c\u5b57\u7b26\u4e32\u64cd\u4f5c\uff08\u5982\u62fc\u63a5\u3001\u67e5\u627e\u3001\u66ff\u6362\u7b49\uff09\u3002 - \u9700\u8981\u52a8\u6001\u957f\u5ea6\u7684\u5b57\u7b26\u4e32\u3002 - \u5e0c\u671b\u4ee3\u7801\u66f4\u7b80\u6d01\u3001\u6613\u8bfb\u4e14\u4e0d\u6613\u51fa\u9519\u3002","title":"1. C++\u98ce\u683c\u5b57\u7b26\u4e32\uff08std::string\uff09"},{"location":"lesson1/Lesson1%20C%2B%2B/#2-c","text":"C\u98ce\u683c\u5b57\u7b26\u4e32\u662f\u4e00\u4e2a\u4ee5 '\\0' \uff08\u7a7a\u5b57\u7b26\uff09\u7ed3\u5c3e\u7684\u5b57\u7b26\u6570\u7ec4\u3002\u5b57\u7b26\u6570\u7ec4\u4f7f\u7528 char \u7c7b\u578b\uff0c\u5e76\u9700\u8981\u624b\u52a8\u7ba1\u7406\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u548c\u5185\u5b58\u3002 \u793a\u4f8b\uff1a #include <iostream> int main() { char str[] = \"abc\"; std::cout << str << std::endl; return 0; } \u4f18\u70b9\uff1a - \u66f4\u63a5\u8fd1\u5e95\u5c42\uff0c\u53ef\u4ee5\u66f4\u9ad8\u6548\u5730\u64cd\u4f5c\u5185\u5b58\u3002 - \u5728\u67d0\u4e9b\u4f4e\u7ea7\u7f16\u7a0b\u573a\u666f\u4e0b\uff08\u5982\u5d4c\u5165\u5f0f\u7f16\u7a0b\uff09\u66f4\u52a0\u5e38\u7528\u3002 \u9002\u7528\u573a\u666f\uff1a - \u9700\u8981\u4e0eC\u8bed\u8a00\u4ee3\u7801\u517c\u5bb9\u3002 - \u5185\u5b58\u548c\u6027\u80fd\u8981\u6c42\u975e\u5e38\u9ad8\u7684\u4f4e\u7ea7\u7f16\u7a0b\u573a\u666f\u3002 - \u5b57\u7b26\u4e32\u957f\u5ea6\u56fa\u5b9a\uff0c\u4e14\u4e0d\u9700\u8981\u590d\u6742\u7684\u5b57\u7b26\u4e32\u64cd\u4f5c\u3002","title":"2. C\u98ce\u683c\u5b57\u7b26\u4e32\uff08\u5b57\u7b26\u6570\u7ec4\uff09"},{"location":"lesson1/Lesson1%20C%2B%2B/#_4","text":"\u7279\u6027 std::string \u5b57\u7b26\u6570\u7ec4\uff08C\u98ce\u683c\u5b57\u7b26\u4e32\uff09 \u5185\u5b58\u7ba1\u7406 \u81ea\u52a8\u7ba1\u7406 \u624b\u52a8\u7ba1\u7406 \u64cd\u4f5c\u4fbf\u5229\u6027 \u63d0\u4f9b\u4e30\u5bcc\u7684\u6210\u5458\u51fd\u6570 \u9700\u8981\u624b\u52a8\u5b9e\u73b0\u5f88\u591a\u64cd\u4f5c \u5b89\u5168\u6027 \u9ad8 \u4f4e\uff0c\u5bb9\u6613\u51fa\u73b0\u7f13\u51b2\u533a\u6ea2\u51fa \u52a8\u6001\u957f\u5ea6 \u652f\u6301 \u4e0d\u652f\u6301 \u62fc\u63a5\u64cd\u4f5c \u4f7f\u7528 + \u64cd\u4f5c\u7b26 \u4f7f\u7528 strcat \u7b49\u51fd\u6570 \u9002\u7528\u573a\u666f \u590d\u6742\u5b57\u7b26\u4e32\u64cd\u4f5c\uff0c\u6613\u7528\u6027 \u4e0eC\u517c\u5bb9\uff0c\u6027\u80fd\u548c\u5185\u5b58\u4f18\u5316","title":"\u6bd4\u8f83\u4e0e\u9009\u62e9"},{"location":"lesson1/Lesson1%20C%2B%2B/#_5","text":"\u5982\u679c\u4f60\u9700\u8981\u5904\u7406\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e0d\u56fa\u5b9a\uff0c\u6216\u8005\u9700\u8981\u9891\u7e41\u64cd\u4f5c\u5b57\u7b26\u4e32\uff08\u5982\u62fc\u63a5\u3001\u67e5\u627e\u3001\u66ff\u6362\u7b49\uff09\uff0c\u5efa\u8bae\u4f7f\u7528 std::string \u3002 \u5982\u679c\u4f60\u5728\u8fdb\u884c\u5e95\u5c42\u7f16\u7a0b\uff0c\u6216\u8005\u9700\u8981\u4e0eC\u8bed\u8a00\u4ee3\u7801\u517c\u5bb9\uff0c\u4e14\u5b57\u7b26\u4e32\u957f\u5ea6\u662f\u56fa\u5b9a\u7684\uff0c\u53ef\u4ee5\u4f7f\u7528\u5b57\u7b26\u6570\u7ec4\u3002 \u901a\u8fc7\u7406\u89e3\u8fd9\u4e24\u79cd\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u533a\u522b\u548c\u9002\u7528\u573a\u666f\uff0c\u4f60\u53ef\u4ee5\u66f4\u597d\u5730\u9009\u62e9\u5408\u9002\u7684\u7c7b\u578b\u6765\u6ee1\u8db3\u7f16\u7a0b\u9700\u6c42\u3002","title":"\u9009\u62e9\u6307\u5357"},{"location":"lesson1/Lesson1%20C%2B%2B/#63","text":"\u6570\u7ec4\u7c7b\u578b\uff1a\u7528\u4e8e\u5b58\u50a8\u76f8\u540c\u7c7b\u578b\u7684\u4e00\u7cfb\u5217\u5143\u7d20 \u7ed3\u6784\u4f53\u7c7b\u578b\uff1a\u7528\u4e8e\u5b9a\u4e49\u4e00\u7ec4\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\u4f5c\u4e3a\u4e00\u4e2a\u5355\u72ec\u7684\u5b9e\u4f53 \u679a\u4e3e\u7c7b\u578b\uff1a\u7528\u4e8e\u5b9a\u4e49\u4e00\u7ec4\u5177\u6709\u79bb\u6563\u503c\u7684\u5e38\u91cf","title":"6.3 \u590d\u5408\u6570\u636e\u7c7b\u578b\uff1a"},{"location":"lesson1/Lesson1%20C%2B%2B/#64","text":"\u7528\u4e8e\u5b58\u50a8\u5185\u5b58\u5730\u5740","title":"6.4 \u6307\u9488\u7c7b\u578b"},{"location":"lesson1/Lesson1%20C%2B%2B/#65","text":"\u7a7a\u7c7b\u578b\uff1avoid\uff0c\u7528\u4e8e\u8868\u793a\u65e0\u7c7b\u578b\u6216\u65e0\u8fd4\u56de\u503c\u7684\u51fd\u6570","title":"6.5 \u5176\u4ed6\u6570\u636e\u7c7b\u578b\uff1a"},{"location":"lesson1/Lesson1%20C%2B%2B/#66","text":"#include <iostream> #include <string> using namespace std; int main() { // \u5b66\u751f\u4fe1\u606f int studentId = 12345; string studentName = \"\u8d75\u9547\"; int age = 20; double score = 92.5; char gender = '\u7537'; bool isMarried = false; // \u8f93\u51fa\u5b66\u751f\u4fe1\u606f cout << \"\u5b66\u751f\u4fe1\u606f\uff1a\" << endl; cout << \"\u5b66\u53f7\uff1a\" << studentId << endl; cout << \"\u59d3\u540d\uff1a\" << studentName << endl; cout << \"\u5e74\u9f84\uff1a\" << age << endl; cout << \"\u6210\u7ee9\uff1a\" << score << endl; cout << \"\u6027\u522b\uff1a\" << gender << endl; cout << \"\u5a5a\u5426\uff1a\" << boolalpha << isMarried << endl; return 0; }","title":"6.6 \u5e38\u7528\u6570\u636e\u7c7b\u578b\u7684\u4f7f\u7528\u5b9e\u4f8b"},{"location":"lesson1/Lesson1%20C%2B%2B/#7-c","text":"C++\u4e2d\u7684\u8fd0\u7b97\u7b26\u79cd\u7c7b\u4e30\u5bcc\uff0c\u5305\u62ec\u7b97\u672f\u8fd0\u7b97\u7b26\u3001\u8d4b\u503c\u8fd0\u7b97\u7b26\u3001\u6bd4\u8f83\u8fd0\u7b97\u7b26\u3001\u903b\u8f91\u8fd0\u7b97\u7b26\u3001\u6761\u4ef6\uff08\u4e09\u76ee\uff09\u8fd0\u7b97\u7b26\u548c\u4f4d\u8fd0\u7b97\u7b26 \u7b97\u672f\u8fd0\u7b97\u7b26\uff1a \u7b97\u672f\u8fd0\u7b97\u7b26\u7528\u4e8e\u6267\u884c\u57fa\u672c\u7684\u6570\u5b66\u8fd0\u7b97\uff0c\u5305\u62ec\uff1a + \uff08\u52a0\uff09 - \uff08\u51cf\uff09 * \uff08\u4e58\uff09 / \uff08\u9664\uff09 % \uff08\u6c42\u4f59\uff09 ++ \uff08\u81ea\u589e\uff09 -- \uff08\u81ea\u51cf\uff09 ++ \u548c -- \u53ef\u4ee5\u4f5c\u4e3a\u524d\u7f00\u6216\u540e\u7f00\u5f62\u5f0f\u51fa\u73b0\uff0c\u5f71\u54cd\u53d8\u91cf\u7684\u503c\u3002 cpp int a = 10; int b = 20; int result = a + b; // 30 a++; // 11 \u8d4b\u503c\u8fd0\u7b97\u7b26\uff1a \u8d4b\u503c\u8fd0\u7b97\u7b26\u7528\u4e8e\u5c06\u8ba1\u7b97\u7ed3\u679c\u8d4b\u503c\u7ed9\u53d8\u91cf\uff0c\u5305\u62ec\uff1a = \uff08\u7b49\u4e8e\uff09 += \uff08\u81ea\u52a0\u4e00\u6b21\u7b49\u4e8e\uff09 -= \uff08\u81ea\u51cf\u4e00\u6b21\u7b49\u4e8e\uff09 *= \uff08\u81ea\u4e58\u4e00\u6b21\u7b49\u4e8e\uff09 /= \uff08\u81ea\u9664\u4e00\u6b21\u7b49\u4e8e\uff09 %= \uff08\u6c42\u6a21\u5e76\u8d4b\u503c\uff09 cpp int x = 10; x += 5; // \u7b49\u540c\u4e8e x = x + 5; \u6bd4\u8f83\u8fd0\u7b97\u7b26\uff1a \u6bd4\u8f83\u8fd0\u7b97\u7b26\u7528\u4e8e\u6bd4\u8f83\u4e24\u4e2a\u503c\u7684\u5927\u5c0f\u6216\u76f8\u7b49\u6027\uff0c\u5305\u62ec\uff1a < \uff08\u5c0f\u4e8e\uff09 > \uff08\u5927\u4e8e\uff09 >= \uff08\u5927\u4e8e\u7b49\u4e8e\uff09 <= \uff08\u5c0f\u4e8e\u7b49\u4e8e\uff09 == \uff08\u7b49\u4e8e\uff09 != \uff08\u4e0d\u7b49\u4e8e\uff09 cpp int m = 10; int n = 20; bool result = (m > n); // \u6bd4\u8f83 m \u662f\u5426\u5927\u4e8e n - \u903b\u8f91\u8fd0\u7b97\u7b26\uff1a \u903b\u8f91\u8fd0\u7b97\u7b26\u7528\u4e8e\u7ec4\u5408\u5e03\u5c14\u8868\u8fbe\u5f0f\uff0c\u5b9e\u73b0\u903b\u8f91\u8fd0\u7b97\uff0c\u5305\u62ec\uff1a - && \uff08\u903b\u8f91\u4e0e\uff09 - || \uff08\u903b\u8f91\u6216\uff09 - ! \uff08\u903b\u8f91\u975e\uff09 cpp bool condition1 = true; bool condition2 = false; bool result = condition1 && condition2; // \u4f7f\u7528\u903b\u8f91\u4e0e\u8fd0\u7b97\u7b26 - \u6761\u4ef6\uff08\u4e09\u76ee\uff09\u8fd0\u7b97\u7b26 ?: \uff1a \u6761\u4ef6\u8fd0\u7b97\u7b26 ?: \u662f\u4e00\u4e2a\u4e09\u5143\u8fd0\u7b97\u7b26\uff0c\u7528\u4e8e\u6839\u636e\u6761\u4ef6\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u9009\u62e9\u4e24\u4e2a\u503c\u4e2d\u7684\u4e00\u4e2a\u3002\u8bed\u6cd5\u5f62\u5f0f\u4e3a result = (condition) ? value1 : value2; \u5176\u4e2d\uff0c condition \u662f\u8981\u8bc4\u4f30\u7684\u5e03\u5c14\u8868\u8fbe\u5f0f\uff0c value1 \u662f\u5982\u679c condition \u4e3a true \u5219\u8fd4\u56de\u7684\u503c\uff0c\u800c value2 \u662f\u5982\u679c condition \u4e3a false \u5219\u8fd4\u56de\u7684\u503c\u3002 cpp int age = 20; string message = (age >= 18) ? \"\u6210\u5e74\u4eba\" : \"\u672a\u6210\u5e74\u4eba\"; // \u6839\u636e\u5e74\u9f84\u5224\u65ad\u6210\u5e74\u4eba\u6216\u672a\u6210\u5e74\u4eba - \u4f4d\u8fd0\u7b97\u7b26\uff1a \u4f4d\u8fd0\u7b97\u7b26\u7528\u4e8e\u5bf9\u4e8c\u8fdb\u5236\u4f4d\u8fdb\u884c\u64cd\u4f5c\uff0c\u5305\u62ec\uff1a - & \uff08\u6309\u4f4d\u4e0e\uff09 - | \uff08\u6309\u4f4d\u6216\uff09 - ^ \uff08\u6309\u4f4d\u5f02\u6216\uff09 - ~ \uff08\u6309\u4f4d\u53d6\u53cd\uff09 - << \uff08\u5de6\u79fb\uff09 - >> \uff08\u53f3\u79fb\uff09 cpp int a = 5; // \u4e8c\u8fdb\u5236\u4e3a 101 int b = 3; // \u4e8c\u8fdb\u5236\u4e3a 011 int result = a & b; // \u6309\u4f4d\u4e0e\u64cd\u4f5c\uff0c\u7ed3\u679c\u4e3a 001\uff0c\u5373 1 C++\u4e2d\u7684\u8fd0\u7b97\u7b26\u4e0d\u4ec5\u5305\u62ec\u4e0a\u8ff0\u57fa\u672c\u7c7b\u578b\uff0c\u8fd8\u5305\u62ec\u5176\u4ed6\u8fd0\u7b97\u7b26\u4f8b\u5982 sizeof , typeid \u7b49\u3002\u6b64\u5916\uff0cC++\u8fd8\u652f\u6301\u5b57\u7b26\u4e32\u8fde\u63a5\u64cd\u4f5c\uff0c\u5176\u4e2d + \u8fd0\u7b97\u7b26\u53ef\u4ee5\u7528\u4e8e\u8fde\u63a5 std::string \u7c7b\u578b\u7684\u5b57\u7b26\u4e32\u3002","title":"7. C++\u4e2d\u7684\u8fd0\u7b97\u7b26"},{"location":"lesson1/Lesson1%20C%2B%2B/#8-c","text":"","title":"8. C++\u7684\u8f93\u5165\u4e0e\u8f93\u51fa"},{"location":"lesson1/Lesson1%20C%2B%2B/#81-cin","text":"cin \u53ef\u4ee5\u8bfb\u53d6\u7528\u6237\u7684\u952e\u76d8\u8f93\u5165\u3002\u4f8b\u5982\uff1a \u4f8b\u5982\uff1a #include <iostream> using namespace std; int main() { string name; int age; float salary; cout << \"\u8bf7\u8f93\u5165\u4f60\u7684\u59d3\u540d\uff1a\" << endl; getline(cin, name); // \u8bfb\u53d6\u6574\u884c\u5b57\u7b26\u4e32\uff0c\u5305\u62ec\u7a7a\u683c cout << \"\u8bf7\u8f93\u5165\u4f60\u7684\u5e74\u9f84\uff1a\" << endl; cin >> age; // \u8bfb\u53d6\u6574\u6570 cout << \"\u8bf7\u8f93\u5165\u4f60\u7684\u5de5\u8d44\uff1a\" << endl; cin >> salary; // \u8bfb\u53d6\u6d6e\u70b9\u6570 cout << \"\u4f60\u7684\u4fe1\u606f\u5982\u4e0b\uff1a\" << endl; cout << \"\u59d3\u540d: \" << name << \"\\n\" << \"\u5e74\u9f84\uff1a\" << age << \"\\n\" << \"\u5de5\u8d44\uff1a\" << salary << endl; return 0; }","title":"8.1 \u4f7f\u7528 cin \u8bfb\u53d6\u5b57\u7b26\u4e32/\u6574\u6570/\u6d6e\u70b9\u6570"},{"location":"lesson1/Lesson1%20C%2B%2B/#82-cout","text":"cout \u53ef\u4ee5\u6253\u5370\u4e00\u884c\u5185\u5bb9\uff0c\u82e5\u52a0\u4e0a endl \u6253\u5370\u5b8c\u4f1a\u81ea\u52a8\u6362\u884c\uff0c\u4e0d\u52a0\u5219\u4e0d\u4f1a\u6362\u884c #include <iostream> using namespace std; int main() { cout << \"hello, C++!\" << endl; int a = 9; cout << \"output: \" << a << endl; return 0; }","title":"8.2 cout"},{"location":"lesson1/Lesson1%20C%2B%2B/#83-printf","text":"printf \u7528\u4e8e\u683c\u5f0f\u5316\u8f93\u51fa\uff0c\u53ef\u4ee5\u8f93\u51fa\u5404\u79cd\u7c7b\u578b\u7684\u6570\u636e\uff0c\u4f46\u4e0d\u4f1a\u81ea\u52a8\u6362\u884c\u3002 #include <iostream> using namespace std; int main() { string a = \"wniuniu\"; string b = \"brilliantgby\"; printf(\"%s\", a.c_str()); printf(\"%s\", b.c_str()); printf(\"\\n\"); printf(\"OvO\\n\"); return 0; }","title":"8.3 printf"},{"location":"lesson1/Lesson1%20C%2B%2B/#84-ifstreamofstream","text":"\u5728 C++ \u4e2d\uff0c ifstream \u548c ofstream \u662f\u4e24\u4e2a\u57fa\u672c\u7684 I/O \u7c7b\uff0c\u7528\u4e8e\u5904\u7406\u6587\u4ef6\u6d41\u7684\u8f93\u5165\u548c\u8f93\u51fa\u3002\u5b83\u4eec\u5206\u522b\u662f\u8f93\u5165\u548c\u8f93\u51fa\u64cd\u4f5c\u7684\u7c7b\uff0c\u5e76\u4e14\u6709\u591a\u4e2a\u5b50\u7c7b\uff0c\u652f\u6301\u4ece\u5404\u79cd\u6570\u636e\u6e90\u8bfb\u53d6\u6570\u636e\u548c\u5c06\u6570\u636e\u5199\u5165\u5404\u79cd\u6570\u636e\u76ee\u6807\u3002 ifstream \u548c ofstream \u7684\u5173\u7cfb \u5728 C++ \u4e2d\uff0c ifstream \u548c ofstream \u5206\u522b\u7ee7\u627f\u81ea\u62bd\u8c61\u7c7b istream \u548c ostream \u5e76\u63d0\u4f9b\u4e86\u5904\u7406\u6587\u4ef6\u6d41\u7684\u5177\u4f53\u5b9e\u73b0\u3002\u867d\u7136 ifstream \u548c ofstream \u6ca1\u6709\u76f4\u63a5\u7684\u7ee7\u627f\u5173\u7cfb\uff0c\u4f46\u5b83\u4eec\u662f\u4e92\u8865\u7684\uff0c\u5206\u522b\u5904\u7406\u6587\u4ef6\u7684\u8f93\u5165\u548c\u8f93\u51fa\u64cd\u4f5c\u3002 - ifstream \uff1a\u7ee7\u627f\u81ea istream \uff0c\u7528\u4e8e\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u6570\u636e\u3002\u8868\u793a\u6587\u4ef6\u8f93\u5165\u6d41\u3002 - ofstream \uff1a\u7ee7\u627f\u81ea ostream \uff0c\u7528\u4e8e\u5411\u6587\u4ef6\u4e2d\u5199\u5165\u6570\u636e\u3002\u8868\u793a\u6587\u4ef6\u8f93\u51fa\u6d41\u3002 - fstream \uff1a\u7ee7\u627f\u81ea iostream \uff0c\u7ed3\u5408\u4e86 ifstream \u548c ofstream \u7684\u529f\u80fd\uff0c\u65e2\u53ef\u4ee5\u8fdb\u884c\u6587\u4ef6\u7684\u8f93\u5165\u64cd\u4f5c\u4e5f\u53ef\u4ee5\u8fdb\u884c\u6587\u4ef6\u7684\u8f93\u51fa\u64cd\u4f5c\u3002 \u4f8b\u5982\uff1a","title":"8.4 \u8f93\u5165\u8f93\u51fa\u6d41\uff08ifstream/ofstream\uff09"},{"location":"lesson1/Lesson1%20C%2B%2B/#ifstream","text":"ifstream \u7528\u4e8e\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u8fdb\u884c\u8bfb\u53d6\u64cd\u4f5c\uff0c\u5e76\u7ee7\u627f\u4e86 istream \u7684\u6240\u6709\u529f\u80fd\uff0c\u53ef\u4ee5\u4f7f\u7528\u5404\u79cd\u8f93\u5165\u64cd\u4f5c\u7b26\u548c\u65b9\u6cd5\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\u3002 #include <iostream> #include <fstream> using namespace std; int main() { ifstream inputFile(\"example.txt\"); // \u6253\u5f00\u6587\u4ef6\u8fdb\u884c\u8bfb\u53d6 if (!inputFile) { cerr << \"\u65e0\u6cd5\u6253\u5f00\u6587\u4ef6\" << endl; return 1; } string line; while (getline(inputFile, line)) { // \u9010\u884c\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9 cout << line << endl; } inputFile.close(); // \u5173\u95ed\u6587\u4ef6 return 0; }","title":"\u4f7f\u7528 ifstream \u8bfb\u53d6\u6587\u4ef6"},{"location":"lesson1/Lesson1%20C%2B%2B/#ofstream","text":"ofstream \u7528\u4e8e\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u8fdb\u884c\u5199\u5165\u64cd\u4f5c\uff0c\u5e76\u7ee7\u627f\u4e86 ostream \u7684\u6240\u6709\u529f\u80fd\uff0c\u53ef\u4ee5\u4f7f\u7528\u5404\u79cd\u8f93\u51fa\u64cd\u4f5c\u7b26\u548c\u65b9\u6cd5\u5199\u5165\u6587\u4ef6\u5185\u5bb9\u3002 #include <iostream> #include <fstream> using namespace std; int main() { ofstream outputFile(\"example.txt\"); // \u6253\u5f00\u6587\u4ef6\u8fdb\u884c\u5199\u5165 if (!outputFile) { cerr << \"\u65e0\u6cd5\u6253\u5f00\u6587\u4ef6\" << endl; return 1; } string data = \"Hello, World!\"; outputFile << data << endl; // \u5199\u5165\u6570\u636e\u5230\u6587\u4ef6 outputFile.close(); // \u5173\u95ed\u6587\u4ef6 return 0; }","title":"\u4f7f\u7528 ofstream \u5199\u5165\u6587\u4ef6"},{"location":"lesson1/Lesson1%20C%2B%2B/#fstream","text":"fstream \u7ed3\u5408\u4e86 ifstream \u548c ofstream \u7684\u529f\u80fd\uff0c\u53ef\u4ee5\u540c\u65f6\u8fdb\u884c\u6587\u4ef6\u7684\u8bfb\u5199\u64cd\u4f5c\u3002 #include <iostream> #include <fstream> using namespace std; int main() { fstream file(\"example.txt\", ios::in | ios::out | ios::trunc); // \u6253\u5f00\u6587\u4ef6\u8fdb\u884c\u8bfb\u5199 if (!file) { cerr << \"\u65e0\u6cd5\u6253\u5f00\u6587\u4ef6\" << endl; return 1; } file << \"Hello, World!\" << endl; // \u5199\u5165\u6570\u636e\u5230\u6587\u4ef6 file.seekg(0); // \u79fb\u52a8\u5230\u6587\u4ef6\u5f00\u5934 string line; while (getline(file, line)) { // \u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9 cout << line << endl; } file.close(); // \u5173\u95ed\u6587\u4ef6 return 0; }","title":"\u4f7f\u7528 fstream \u8fdb\u884c\u540c\u65f6\u8bfb\u5199\u64cd\u4f5c"},{"location":"lesson1/Lesson1%20C%2B%2B/#9","text":"C++\u73af\u5883\u5b89\u88c5\u6b63\u5e38\u3002 \u5b8c\u6210\u7b2c\u4e00\u4e2aHello World\u7a0b\u5e8f\u3002 \u8ba4\u8bc6\u53d8\u91cf\u7c7b\u578b\u548c\u547d\u540d\u65b9\u5f0f\u3002 C++\u4e2d\u7684\u8fd0\u7b97\u7b26\u3002 C++\u7684\u8f93\u5165\u4e0e\u8f93\u51fa\u3002","title":"9. \u8bfe\u7a0b\u603b\u7ed3"},{"location":"lesson1/Lesson1%20C%2B%2B/#_6","text":"1.\u7f16\u5199\u4e00\u4e2aC++\u7a0b\u5e8f\u6765\u627e\u51fa\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u7684\u6700\u5c0f\u6b63\u6574\u6570\uff1a \u8be5\u6570\u9664\u4ee512\u4f591 \u8be5\u6570\u9664\u4ee523\u4e5f\u4f591 \u8be5\u6570\u9664\u4ee531\u4e5f\u4f591 \u8bf7\u5728\u4ee5\u4e0b\u9009\u9879\u4e2d\u9009\u62e9\u4e00\u4e2a\u6b63\u786e\u7684\u7b54\u6848\uff0c\u8be5\u7b54\u6848\u6ee1\u8db3\u4e0a\u8ff0\u6240\u6709\u6761\u4ef6\uff1a (A) 4191 (B) 3232 (C) 8577 (D) 9233 \u53c2\u8003\u7a0b\u5e8f\uff1a #include <iostream> using namespace std; int main() { // \u83b7\u53d6\u7528\u6237\u8f93\u5165\u7684\u9009\u9879 cout << \"\u8bf7\u8f93\u5165\u4e00\u4e2a\u9009\u9879\uff1a\"; int option; cin >> option; // \u8ba1\u7b97\u4f59\u6570 int a = option % 12; int b = option % 23; int c = option % 31; // \u6253\u5370\u4f59\u6570\u7ed3\u679c cout << \"For option \" << option << \":\" << endl; cout << \"a = \" << a << \", b = \" << b << \", c = \" << c << endl; // \u5224\u65ad\u662f\u5426\u6ee1\u8db3\u6761\u4ef6 if (a == 1 && b == 1 && c == 1) { cout << \"Correct, That's what I find!! The number is: \" << option << endl; } else { cout << \"Wrong, Please try another Answer!\" << endl; } return 0; } 2.\u7f16\u5199\u4e00\u4e2aC++\u7a0b\u5e8f\uff0c\u7528\u4e8e\u6a21\u62df\u9910\u5385\u7684\u70b9\u5355\u8fc7\u7a0b\u3002\u7a0b\u5e8f\u5e94\u63d0\u524d\u544a\u77e5\u7528\u6237\u6c49\u5821\u3001\u85af\u6761\u548c\u53ef\u4e50\u7684\u4ef7\u683c\uff0c\u5e76\u901a\u8fc7\u7528\u6237\u8f93\u5165\u83b7\u5f97\u70b9\u5355\u4fe1\u606f\u3002\u6700\u540e\uff0c\u7a0b\u5e8f\u5e94\u5206\u884c\u8f93\u51fa\u5ba2\u6237\u70b9\u7684\u5185\u5bb9\uff0c\u5e76\u6253\u5370\u51fa\u603b\u4ef7\u3002 \u4ef7\u683c\u4fe1\u606f\uff1a \u6c49\u5821\uff1a$5 \u85af\u6761\uff1a$2 \u53ef\u4e50\uff1a$1 \u529f\u80fd\u8981\u6c42\uff1a \u663e\u793a\u5404\u9879\u98df\u7269\u7684\u4ef7\u683c\u3002 \u63d0\u793a\u7528\u6237\u8f93\u5165\u6bcf\u79cd\u98df\u7269\u7684\u6570\u91cf\u3002 \u8ba1\u7b97\u5e76\u663e\u793a\u6bcf\u79cd\u98df\u7269\u7684\u70b9\u5355\u6570\u91cf\u3002 \u8ba1\u7b97\u5e76\u663e\u793a\u603b\u4ef7\u3002 \u8f93\u5165\u8f93\u51fa\u793a\u4f8b\uff1a \u793a\u4f8b\u8f93\u51fa\uff1a \u6c49\u5821\uff1a$5 \u85af\u6761\uff1a$2 \u53ef\u4e50\uff1a$1 \u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf\uff1a2 \u8bf7\u8f93\u5165\u85af\u6761\u7684\u6570\u91cf\uff1a1 \u8bf7\u8f93\u5165\u53ef\u4e50\u7684\u6570\u91cf\uff1a3 \u60a8\u7684\u70b9\u5355\u5982\u4e0b\uff1a \u6c49\u5821 X 2 \u85af\u6761 X 1 \u53ef\u4e50 X 3 \u603b\u4ef7\uff1a$15 \u63d0\u793a\uff1a \u4f7f\u7528 cin >> \u51fd\u6570\u83b7\u53d6\u7528\u6237\u8f93\u5165\u3002 \u4f7f\u7528\u7b97\u672f\u8fd0\u7b97\u8ba1\u7b97\u603b\u4ef7\u3002 \u4f7f\u7528 cout << \u51fd\u6570\u8f93\u51fa\u7ed3\u679c\u3002 \u793a\u4f8b\u4ee3\u7801\uff1a #include <iostream> using namespace std; int main() { // \u5b9a\u4e49\u98df\u7269\u7684\u4ef7\u683c int burger_price = 5; int fries_price = 2; int cola_price = 1; // \u663e\u793a\u4ef7\u683c\u4fe1\u606f cout << \"\u6c49\u5821\uff1a$\" << burger_price << endl; cout << \"\u85af\u6761\uff1a$\" << fries_price << endl; cout << \"\u53ef\u4e50\uff1a$\" << cola_price << endl << endl; // \u83b7\u53d6\u7528\u6237\u8f93\u5165\u7684\u70b9\u5355\u6570\u91cf int burger_count, fries_count, cola_count; cout << \"\u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf\uff1a\"; cin >> burger_count; cout << \"\u8bf7\u8f93\u5165\u85af\u6761\u7684\u6570\u91cf\uff1a\"; cin >> fries_count; cout << \"\u8bf7\u8f93\u5165\u53ef\u4e50\u7684\u6570\u91cf\uff1a\"; cin >> cola_count; // \u8ba1\u7b97\u603b\u4ef7 int total_price = burger_count * burger_price + fries_count * fries_price + cola_count * cola_price; // \u8f93\u51fa\u70b9\u5355\u5185\u5bb9\u548c\u603b\u4ef7 cout << \"\\n\u60a8\u7684\u70b9\u5355\u5982\u4e0b\uff1a\" << endl; cout << \"\u6c49\u5821 X \" << burger_count << endl; cout << \"\u85af\u6761 X \" << fries_count << endl; cout << \"\u53ef\u4e50 X \" << cola_count << endl; cout << \"\\n\u603b\u4ef7\uff1a$\" << total_price << endl; return 0; }","title":"\u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson1/Lesson1%20Java/","text":"Lesson 1 Java\u7684\u73af\u5883\u8bbe\u7f6e\u3001\u6570\u636e\u7c7b\u578b\u3001\u8fd0\u7b97\u7b26\u548c\u8f93\u5165\u548c\u8f93\u51fa \u76ee\u5f55 Java\u73af\u5883\u914d\u7f6e 1.1 Java\u4e0b\u8f7d 1.2 Java\u5b89\u88c5 1.3 Java\u914d\u7f6e 1.3.1 Mac \u7cfb\u7edf\u7535\u8111 1.3.2 Windows \u7cfb\u7edf\u7535\u8111 1.4 \u9a8c\u8bc1\u7ed3\u679c 1.5 Java\u7f16\u8bd1&\u8fd0\u884c \u7b2c\u4e00\u4e2a\u7a0b\u5e8f\uff1aHello World\uff01 Java\u5e38\u7528\u7684\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff08IDE\uff09 3.1 IntelliJ IDEA\uff08\u63a8\u8350\uff09 3.2 Eclipse 3.3 \u6837\u4f8b\u5c55\u793a Java\u4e2d\u7684\u6807\u8bc6\u7b26 4.1 \u6807\u8bc6\u7b26 4.2 \u5173\u952e\u5b57\u548c\u4fdd\u7559\u5b57 Java\u4e2d\u7684\u53d8\u91cf 5.1 \u4ec0\u4e48\u662f\u53d8\u91cf 5.2 \u53d8\u91cf\u7684\u58f0\u660e 5.3 \u53d8\u91cf\u7684\u521d\u59cb\u5316 5.4 \u53d8\u91cf\u7684\u8bbf\u95ee Java\u7684\u6570\u636e\u7c7b\u578b 6.1 \u57fa\u672c\u6570\u636e\u7c7b\u578b 6.1.1 \u6574\u6570\u7c7b\u578b 6.1.2 \u6d6e\u70b9\u7c7b\u578b 6.1.3 \u5b57\u7b26\u7c7b\u578b 6.1.4 \u5e03\u5c14\u7c7b\u578b 6.2 \u5f15\u7528\u6570\u636e\u7c7b\u578b 6.2.1 \u5b57\u7b26\u4e32\u7c7b\u578b 6.3 \u5e38\u7528\u6570\u636e\u7c7b\u578b\u7684\u4f7f\u7528\u5b9e\u4f8b Java\u4e2d\u7684\u8fd0\u7b97\u7b26 7.1 \u7b97\u672f\u8fd0\u7b97\u7b26 7.2 \u8d4b\u503c\u8fd0\u7b97\u7b26 7.3 \u6bd4\u8f83\u8fd0\u7b97\u7b26 7.4 \u903b\u8f91\u8fd0\u7b97\u7b26 7.5 \u6761\u4ef6\uff08\u4e09\u76ee\uff09\u8fd0\u7b97\u7b26 7.6 \u4f4d\u8fd0\u7b97\u7b26 Java\u7684\u8f93\u5165\u4e0e\u8f93\u51fa 8.1 \u4f7f\u7528scanner\u8bfb\u53d6\u5b57\u7b26\u4e32\u6574\u6570\u6d6e\u70b9\u6570 8.2 System.out.println() 8.3 System.out.print() 8.4 InputStream/OutputStream \u8bfe\u540e\u603b\u7ed3\u53ca\u7ec3\u4e60 \u524d\u8a00\uff1a\u4e3a\u4ec0\u4e48\u8981\u5b66\u4e60Java Java\u662f\u4e00\u95e8\u529f\u80fd\u5f3a\u5927\u4e14\u7b80\u5355\u6613\u7528\u7684\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u8bed\u8a00**\uff0c\u200c\u5b83\u5177\u6709\u591a\u79cd\u7279\u70b9\uff0c\u200c\u5305\u62ec\u7b80\u5355\u6027\u3001\u200c\u9762\u5411\u5bf9\u8c61\u3001\u200c\u5206\u5e03\u5f0f\u3001\u200c\u5065\u58ee\u6027\u3001\u200c\u5b89\u5168\u6027\u3001\u200c\u5e73\u53f0\u72ec\u7acb\u4e0e\u53ef\u79fb\u690d\u6027\u3001\u200c\u591a\u7ebf\u7a0b\u4ee5\u53ca\u52a8\u6001\u6027\u3002\u200c Java\u53ef\u4ee5\u7528\u4e8e\u7f16\u5199\u684c\u9762\u5e94\u7528\u7a0b\u5e8f\u3001\u200cWeb\u5e94\u7528\u7a0b\u5e8f\u3001\u200c\u5206\u5e03\u5f0f\u7cfb\u7edf\u548c\u5d4c\u5165\u5f0f\u7cfb\u7edf\u5e94\u7528\u7a0b\u5e8f\u7b49\u591a\u79cd\u7c7b\u578b\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u200cJava\u7684\u72ec\u7acb\u4e8e\u5e73\u53f0\u7684\u7279\u70b9\uff0c\u200c\u5373\u201c\u4e00\u6b21\u7f16\u5199\uff0c\u200c\u5230\u5904\u8fd0\u884c\u201d\uff08\u200cWrite Once, Run Anywhere\uff0c\u200c\u7b80\u79f0WORA\uff09\u200c\uff0c\u200c\u662f\u5176\u6700\u5927\u7684\u4f18\u52bf\u4e4b\u4e00\uff0c\u200c\u8fd9\u4f7f\u5f97Java\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u5728\u591a\u4e2a\u5e73\u53f0\u4e0a\u8fd0\u884c\uff0c\u200c\u800c\u65e0\u9700\u5bf9\u6bcf\u4e2a\u5e73\u53f0\u8fdb\u884c\u5355\u72ec\u7684\u7f16\u8bd1\u3002 \u672c\u6587\u6863\u6d89\u53ca\u8303\u56f4\u5bf9\u6807\u5927\u5b66\u8ba1\u7b97\u673a\u5927\u4e00\u5165\u95e8\u8bfe\u7a0b\uff0c\u5e2e\u52a9\u5927\u5b66\u5b66\u751f\u4ee5\u53ca\u51c6\u5907\u5b66\u4e60\u7b97\u6cd5\u7ade\u8d5b\u7684\u521d\u9ad8\u4e2d\u751f\uff0c\u5165\u95e8Java\u7f16\u7a0b\u8bed\u8a00\uff0c\u901a\u8fc7\u9488\u5bf9\u6027\u7b97\u6cd5\u8bad\u7ec3\u638c\u63e1\u8bed\u6cd5\u548c\u57fa\u7840\u7b97\u6cd5\uff0c\u4e3a\u4e0b\u4e00\u9636\u6bb5\u5b66\u4e60\u505a\u51c6\u5907\u3002 1. Java\u73af\u5883\u914d\u7f6e 1.1 Java\u4e0b\u8f7d Java \u5b98\u65b9\u4e0b\u8f7d\u5730\u5740\uff1a https://www.oracle.com/java/technologies/downloads/ \u70b9\u51fb\u4e0a\u65b9\u94fe\u63a5\u5373\u53ef\u8df3\u8f6c\u5230\u5b98\u7f51\u4e0b\u8f7d\u754c\u9762\uff0c\u6839\u636e\u9700\u8981\u9009\u62e9\u5bf9\u5e94\u914d\u7f6e\u8fdb\u884c\u4e0b\u8f7d\uff01 1.2 Java\u5b89\u88c5 \u5bf9\u4e8e Windows \u548c Mac \u6765\u8bf4\uff0cJava \u7684\u5b89\u88c5\u6b65\u9aa4\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u5bf9\u5e94\u7684\u5b89\u88c5\u7a0b\u5e8f\uff08.exe/.dmg\uff09\u7136\u540e\u6839\u636e\u6b65\u9aa4\u6765\u8fdb\u884c\u5b89\u88c5\uff1a Mac \u7cfb\u7edf\u7684\u9ed8\u8ba4\u5b89\u88c5\u8def\u5f84\u4e3a\u4e0b\u8ff0\u5730\u5740\uff1a shell ~/Library/Java/JavaVirtualMachines/ Windows \u5728\u5b89\u88c5\u65f6\u6ce8\u610f\u6307\u5b9a\u597d\u5b89\u88c5\u8def\u5f84\u5373\u53ef 1.3 Java\u914d\u7f6e 1.3.1 Mac \u7cfb\u7edf\u7535\u8111 \u5bf9\u4e8eMac \u7cfb\u5217\u7535\u8111\uff0c\u5982\u679c\u662f\u7b2c\u4e00\u6b21\u5b89\u88c5\uff0c\u5728\u4e0b\u8f7d\u5b89\u88c5JDK\u540e\u7cfb\u7edf\u4f1a\u81ea\u52a8\u8fdb\u884c\u914d\u7f6eJava\u73af\u5883\uff0c\u76f4\u63a5\u6839\u636e\u6307\u5f15\u5b89\u88c5\u5373\u53ef\uff0c\u5b89\u88c5\u5b8c\u6bd5\u540e\u8df3\u8f6c\u81f3\u6b65\u9aa41.4\u3002 \u6ce8\u610f\uff0c\u5982\u679c\u5b89\u88c5\u4e86\u591a\u4e2a\u7248\u672c\u7684JDK\uff0c\u5c31\u9700\u8981\u624b\u52a8\u914d\u7f6eJava\u7684\u73af\u5883\u53d8\u91cf\u3002\u8981\u914d\u7f6e $JAVA_HOME \u73af\u5883\u53d8\u91cf\uff0c\u627e\u5230\u4ee5\u4e0b\u4e09\u4e2a\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\uff1a ~/.bash_profile ~/.bashrc ~/.zshrc \u6dfb\u52a0\u4e0b\u9762\u8fd9\u884c\u4ee3\u7801\uff1a shell # \u4ee5 Java8 \u4e3e\u4f8b\uff0c\u5176\u4e2d \"JAVA_HOME=\" \u540e\u9762\u662f \u4f60\u7684Java JDK \u7684\u5b9e\u9645\u5b89\u88c5\u5730\u5740\uff0c\u9700\u8981\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u4fee\u6539 export JAVA_HOME=/Users/xxx/Library/Java/JavaVirtualMachines/corretto-1.8.0_332 export PATH=$JAVA_HOME/bin:$PATH:. export CLASSPATH=$CLASSPATH:$JAVA_HOME/lib 1.3.2 Windows \u7cfb\u7edf\u7535\u8111 \u5bf9\u4e8e windows \u7cfb\u7edf\uff1a \u6253\u5f00\u7cfb\u7edf\u8bbe\u7f6e\uff0c\u70b9\u51fb\u9ad8\u7ea7\u7cfb\u7edf\u8bbe\u7f6e\uff0c\u6253\u5f00\u73af\u5883\u53d8\u91cf\u4ee5\u540e\u70b9\u51fb\u7cfb\u7edf\u53d8\u91cf\u7684\u65b0\u5efa\uff1a\u65b0\u5efa JAVA_HOME \u53d8\u91cf\uff08\u5355\u8bcd\u5927\u5199\uff0c\u7b26\u5408\u662f\u82f1\u6587\uff09\uff0c\u5982\u679c\u662f\u7528\u9ed8\u8ba4\u5b89\u88c5\u8def\u5f84\u53ef\u4ee5\u76f4\u63a5\u590d\u5236\u4f7f\u7528\uff1a \u627e\u5230\u7cfb\u7edf\u53d8\u91cf\u4e2d\u7684 Path \u53d8\u91cf\uff0c\u9009\u4e2d\u7136\u540e\u70b9\u51fb\u7f16\u8f91\uff0c\u7136\u540e\u70b9\u51fb\u65b0\u5efa\uff0c\u8fd9\u91cc\u90fd\u4e00\u6837\uff0c\u53ef\u4ee5\u76f4\u63a5\u590d\u5236\u4f7f\u7528\uff1a shell %JAVA_HOME%\\bin %JAVA_HOME%\\jre\\bin 1.4 \u9a8c\u8bc1\u7ed3\u679c \u6253\u5f00\u7ec8\u7aef\uff0c\u8f93\u5165 java -version \uff0c\u67e5\u770b\u5b89\u88c5\u7248\u672c\uff0c\u8f93\u5165 javac -version \u9a8c\u8bc1JRE\u73af\u5883\uff0c\u4ee3\u8868\u914d\u7f6e\u5b89\u88c5\u5b8c\u6210\u3002 1.5 Java\u7f16\u8bd1&\u8fd0\u884c Java\u7684\u8fd0\u884c\u8fc7\u7a0b Java \u7a0b\u5e8f\u7684\u8fd0\u884c\u5fc5\u987b\u7ecf\u8fc7\u7f16\u5199\u3001\u7f16\u8bd1\u548c\u8fd0\u884c 3 \u4e2a\u6b65\u9aa4\u3002 \u7f16\u5199\uff1a\u5728 Java \u5f00\u53d1\u73af\u5883\u4e2d\u7f16\u5199\u7a0b\u5e8f\u4ee3\u7801\uff0c\u5f62\u6210\u540e\u7f00\u540d\u4e3a .java \u7684 Java \u6e90\u6587\u4ef6\u3002 \u7f16\u8bd1\uff1a\u4f7f\u7528 Java \u7f16\u8bd1\u5668\uff08javac \u547d\u4ee4\uff09\u5bf9\u6e90\u6587\u4ef6\u8fdb\u884c\u7f16\u8bd1\uff0c\u5982\u679c\u6e90\u4ee3\u7801\u4e2d\u6ca1\u6709\u8bed\u6cd5\u9519\u8bef\uff0c\u7f16\u8bd1\u5668\u4f1a\u751f\u6210\u540e\u7f00\u540d\u4e3a .class \u7684\u5b57\u8282\u7801\u6587\u4ef6\u3002\u8fd9\u4e2a\u5b57\u8282\u7801\u6587\u4ef6\u662f\u8de8\u5e73\u53f0\u7684\uff0c\u53ef\u4ee5\u5728\u4efb\u4f55\u5b89\u88c5\u4e86 Java \u8fd0\u884c\u73af\u5883\uff08JRE\uff09\u7684\u673a\u5668\u4e0a\u8fd0\u884c\u3002 \u8fd0\u884c\uff1a\u4f7f\u7528 Java \u89e3\u91ca\u5668\uff08java \u547d\u4ee4\uff09\u5bf9\u5b57\u8282\u7801\u6587\u4ef6\u8fdb\u884c\u89e3\u91ca\u8fd0\u884c\uff0c\u5c06\u5b57\u8282\u7801\u7ffb\u8bd1\u6210\u673a\u5668\u4ee3\u7801\u5e76\u6267\u884c\uff0c\u6700\u540e\u663e\u793a\u8fd0\u884c\u7ed3\u679c\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0cJava \u7684\u8de8\u5e73\u53f0\u7279\u6027\u5f97\u5230\u4e86\u5145\u5206\u4f53\u73b0\uff0c\u5373\"\u4e00\u6b21\u7f16\u5199\uff0c\u5230\u5904\u8fd0\u884c\"\u3002 2. \u7b2c\u4e00\u4e2a\u7a0b\u5e8f\uff1aHello World\uff01 public class HelloWorld { public static void main(String[] args) { System.out.println(\"Hello, World!\"); } } \u5c06\u4ee5\u4e0a\u4ee3\u7801\u4fdd\u5b58\u4e3a HelloWorld.java \u6587\u4ef6\u3002 \u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528 Java \u7f16\u8bd1\u5668 javac \u5bf9\u6e90\u6587\u4ef6\u8fdb\u884c\u7f16\u8bd1\uff1a \u5bf9\u4e8eMac\u7cfb\u7edf\uff0c\u6253\u5f00 \u7ec8\u7aef \u8f6f\u4ef6\uff0c\u5bf9\u4e8eWindows\u7cfb\u7edf\uff0c\u6253\u5f00 \u547d\u4ee4\u884c \u8f6f\u4ef6 javac HelloWorld.java \u968f\u540e\u5f53\u524d\u76ee\u5f55\u4f1a\u65b0\u751f\u6210\u4e00\u4e2aHelloWorld.class\u6587\u4ef6\uff0c\u8981\u8fd0\u884cJava\u6587\u4ef6\uff0c\u4f7f\u7528\uff1a java HelloWorld \u8fd0\u884c\u6210\u529f\u540e\uff0c\u63a7\u5236\u53f0\u4f1a\u8f93\u51fa \u201cHello, World!\u201d\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u7684\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u679c\u3002 3. Java\u5e38\u7528\u7684\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff08IDE\uff09 \u96c6\u6210\u5f00\u53d1\u73af\u5883\uff08Integrated Development Environment\uff0c\u7b80\u79f0IDE\uff09\u662f\u4e00\u79cd\u8f6f\u4ef6\u5de5\u5177\uff0c\u63d0\u4f9b\u4e86\u4e00\u5957\u96c6\u6210\u7684\u529f\u80fd\u548c\u5de5\u5177\uff0c\u7528\u4e8e\u5f00\u53d1\u3001\u7f16\u5199\u3001\u6d4b\u8bd5\u548c\u8c03\u8bd5\u8f6f\u4ef6\u5e94\u7528\u7a0b\u5e8f\u3002 IDE\u901a\u5e38\u5305\u62ec\u4ee5\u4e0b\u6838\u5fc3\u7ec4\u4ef6\uff1a\u4ee3\u7801\u7f16\u8f91\u5668\u3001\u7f16\u8bd1\u5668/\u89e3\u91ca\u5668\u3001\u8c03\u8bd5\u5668\u3001\u6784\u5efa\u5de5\u5177\u3001\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u96c6\u6210\u3001\u56fe\u5f62\u7528\u6237\u754c\u9762\u8bbe\u8ba1\u5668\u3001\u9879\u76ee\u7ba1\u7406\u5de5\u5177\u3002 \u901a\u8fc7\u96c6\u6210\u8fd9\u4e9b\u529f\u80fd\u548c\u5de5\u5177\uff0cIDE\u53ef\u4ee5\u63d0\u9ad8\u5f00\u53d1\u4eba\u5458\u7684\u751f\u4ea7\u529b\uff0c\u7b80\u5316\u5f00\u53d1\u8fc7\u7a0b\uff0c\u5e76\u63d0\u4f9b\u66f4\u597d\u7684\u4ee3\u7801\u8d28\u91cf\u548c\u53ef\u7ef4\u62a4\u6027\u3002IDE\u901a\u5e38\u4e0e\u7279\u5b9a\u7684\u7f16\u7a0b\u8bed\u8a00\u6216\u5f00\u53d1\u5e73\u53f0\u76f8\u5173\uff0c\u4f8b\u5982Java\u5f00\u53d1\u4e2d\u5e38\u7528\u7684Eclipse\u3001IntelliJ IDEA\u548cNetBeans\u7b49\u3002 \u4f01\u4e1a\u4e2d\u4e00\u822c\u91c7\u7528\u96c6\u6210\u5f00\u53d1\u73af\u5883\u8f6f\u4ef6\u4f5c\u4e3aJava\u5f00\u53d1\u5e73\u53f0\u4f7f\u7528\uff0c\u5176\u81ea\u52a8\u5316\u7a0b\u5ea6\u597d\u3001\u7f16\u7a0b\u6548\u7387\u9ad8\uff0c\u53ef\u4ee5\u5927\u5927\u7b80\u5316\u5f00\u53d1\u6d41\u7a0b\uff0c\u63d0\u9ad8\u5f00\u53d1\u6548\u7387\u3002 \u76ee\u524d\u6bd4\u8f83\u5e38\u7528\u7684Java\u96c6\u6210\u5f00\u53d1\u73af\u5883\u6709\uff1a 3.1 IntelliJ IDEA\uff08\u63a8\u8350\uff09 IntelliJ IDEA\u5b98\u7f51\u4e3a https://www.jetbrains.com.cn/idea/download/ IntelliJ IDEA \u6709\u4e24\u4e2a\u7248\u672c\uff1a\u65d7\u8230\u7248(ULtimate) \u793e\u533a\u7248(Community)\uff0c\u5176\u4e2d\u793e\u533a\u7248\u662f\u514d\u8d39\u7248\u672c\u3002 3.2 Eclipse Eclipse\u5b98\u7f51\u4e3a https://www.eclipse.org/ Eclipse\u6709\u7740\u591a\u4e2a\u7248\u672c\uff0c\u6bcf\u4e2a\u7248\u672c\u90fd\u6709\u81ea\u5df1\u7279\u5b9a\u7684\u7528\u9014\u548c\u529f\u80fd\uff0c\u4e3b\u8981\u5305\u62ec\u4ee5\u4e0b\u7248\u672c\uff1a \u2460Eclipse for Java Developers\uff1a\u8fd9\u4e2a\u7248\u672c\u9002\u5408Java\u5f00\u53d1\u8005\uff0c\u96c6\u6210\u4e86CVS\uff0cGit\uff0cXML\u7f16\u8f91\u5668\uff0cMylyn\uff0cMaven integration\u548cWindowBuilder\u7b49\u63d2\u4ef6\u3002 \u2461Eclipse for Java EE Developers\uff1a\u8fd9\u4e2a\u7248\u672c\u96c6\u6210\u4e86Java EE\u5f00\u53d1\u5e38\u7528\u63d2\u4ef6\uff0c\u65b9\u4fbf\u52a8\u6001web\u7f51\u7ad9\u5f00\u53d1\uff0c\u9002\u5408Java web\u5f00\u53d1\u8005\u4f7f\u7528\u3002\u96c6\u6210\u4e86XML\u7f16\u8f91\u5668\u3001\u6570\u636e\u5e93\u67e5\u770b\u5de5\u5177\uff0c\u63d0\u4f9bjsp\u53ef\u89c6\u5316\u7f16\u8f91\u5668\u3002 \u2462Eclipse Standard\uff1a\u8fd9\u4e2a\u7248\u672c\u662fEclipse\u6700\u57fa\u7840\u7684\u7248\u672c\uff0c\u9002\u5408Java se\u4e2a\u4eba\u5f00\u53d1\u8005\u3001\u6216\u5e0c\u671b\u6839\u636e\u81ea\u5df1\u9700\u6c42\u914d\u7f6e\u63d2\u4ef6\u7684\u5f00\u53d1\u8005\u4f7f\u7528\u3002 3.3 \u6837\u4f8b\u5c55\u793a \u8fd9\u91cc\u4ee5IntelliJ IDEA \u4e3a\u4f8b\u5c55\u793a\u5982\u4f55\u4f7f\u7528IDE\u7f16\u5199\u4f60\u7684\u7b2c\u4e00\u4e2aHello World \u7a0b\u5e8f\uff1a \u9009\u62e9\u65b0\u5efa\u9879\u76ee\uff0c\u5982\u679c\u524d\u5e8f\u6b65\u9aa4\u7684Java JDK\u5b89\u88c5\u6210\u529f\uff0c\u5219\u53ef\u4ee5\u5728JDK\u680f\u6210\u529f\u627e\u5230\u76f8\u5e94JDK\uff0c\u9009\u62e9\u53ef\u4f7f\u7528\u7684JDK\u5e76\u65b0\u5efa\u9879\u76ee\u3002 \u8fdb\u5165\u9879\u76ee\u754c\u9762\uff0c\u53f3\u51fbsrc\u6587\u4ef6\u5939\u5e76\u65b0\u5efa\u4e00\u4e2a\u540d\u4e3aHelloWorld\u7684\u7c7b(class)\uff0csrc\u6587\u4ef6\u5939\u662f\u5b58\u653e\u6e90\u4ee3\u7801\u7684\u4f4d\u7f6e\u3002 \u590d\u5236\u4ee5\u4e0b\u4ee3\u7801\uff1a java public class HelloWorld { public static void main(String[] args) { System.out.println(\"Hello, World!\"); } } \u70b9\u51fb\u8fd0\u884c\u56fe\u6807\u8fd0\u884c\u8be5\u6bb5\u4ee3\u7801\uff1a \u5f53\u70b9\u51fb\u8fd0\u884c\u56fe\u6807\u540e\uff0cIDE\u5b9e\u9645\u4e0a\u5e2e\u52a9\u6211\u4eec\u5b8c\u6210\u4e86\u7f16\u8bd1\u548c\u8fd0\u884c\u4e24\u4e2a\u6b65\u9aa4\uff0c\u5373\u4e0a\u6587\u4e2d\u63d0\u5230\u7684 javac \u548c java \u547d\u4ee4\u3002 \u6210\u529f\u7f16\u8bd1\u5e76\u8fd0\u884c\u540e\uff0c\u63a7\u5236\u53f0\u8f93\u51fa\u5982\u4e0b\u4fe1\u606f\uff1a \u81f3\u6b64\uff0c\u4f60\u5df2\u7ecf\u5b8c\u6210Java\u73af\u5883\u7684\u6240\u6709\u914d\u7f6e\u3002 4. Java\u4e2d\u7684\u6807\u8bc6\u7b26 4.1 \u6807\u8bc6\u7b26 \u6807\u8bc6\u7b26\u662f\u6307\u7528\u6765\u6807\u8bc6\u67d0\u4e2a\u5b9e\u4f53\u7684\u4e00\u4e2a\u7b26\u53f7\u3002\u5728Java\u8bed\u8a00\u4e2d\uff0c\u4e3b\u8981\u662f\u6307\u5728\u7f16\u7a0b\u65f6\u4f7f\u7528\u7684\u540d\u5b57\u3002\u6807\u8bc6\u7b26\u7684\u4f7f\u7528\u987b\u9075\u5faa\u4e00\u5b9a\u7684\u89c4\u5219\uff1aJava\u4e2d\u7684\u6807\u8bc6\u7b26\u7531\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u4e0b\u5212\u7ebf\u6216\u7f8e\u5143\u7b26\u53f7\u7ec4\u6210\uff0c\u4e14\u5fc5\u987b\u4ee5\u5b57\u6bcd\u3001\u4e0b\u5212\u7ebf\uff08_\uff09\u6216\u7f8e\u5143\u7b26\u53f7\uff08$\uff09\u5f00\u5934\u3002\u89c4\u5219\u603b\u7ed3\u5982\u4e0b\uff1a \u53ef\u4ee5\u5305\u542b\u6570\u5b57\uff0c\u4f46\u4e0d\u80fd\u4ee5\u6570\u5b57\u5f00\u5934\u3002 \u9664\u4e0b\u5212\u7ebf\uff08_\uff09\u548c\u7f8e\u5143\u7b26\u53f7\uff08$\uff09\u4ee5\u5916\uff0c\u4e0d\u5305\u542b\u4efb\u4f55\u5176\u4ed6\u7279\u6b8a\u5b57\u7b26\uff0c\u5982\u7a7a\u683c\u3002 \u4e0d\u80fd\u7528Java\u5173\u952e\u5b57\u6216\u4fdd\u7559\u5b57\u505a\u6807\u8bc6\u7b26\u3002 Java\u6807\u8bc6\u7b26\u5927\u5c0f\u5199\u654f\u611f\u3002 \u5408\u6cd5\u7684\u6807\u8bc6\u7b26\uff0c\u5982\uff1a int a = 3; int _123 = 3; int $12aa = 3; int \u53d8\u91cf1 = 3; //\u4e0d\u5efa\u8bae\u4f7f\u7528\u4e2d\u6587 \u4e0d\u5408\u6cd5\u7684\u6807\u8bc6\u7b26\uff0c\u5982\uff1a int 1a = 3; //\u4e0d\u80fd\u4f7f\u7528\u6570\u5b57\u5f00\u5934 int a# = 3; //\u4e0d\u80fd\u5305\u542b#\u8fd9\u6837\u7684\u7279\u6b8a\u5b57\u7b26 int int = 3; //\u4e0d\u80fd\u4f7f\u7528\u5173\u952e\u5b57 \u6ce8\u610f\uff1a\u867d\u7136Java\u7684\u8bed\u6cd5\u5141\u8bb8\u4f7f\u7528\u4e0b\u5212\u7ebf\uff08_\uff09\u548c\u7f8e\u5143\u7b26\u53f7\uff08$\uff09\u4f5c\u4e3a\u6807\u8bc6\u7b26\u7684\u5f00\u59cb\uff0c\u4f46\u662f\u5728\u5f88\u591a\u4f01\u4e1a\u7684\u5f00\u53d1\u89c4\u8303\u4e2d\u7ea6\u5b9a\uff0c\u4e0d\u80fd\u4f7f\u7528\u8fd9\u4e24\u8005\u4f5c\u4e3a\u6807\u8bc6\u7b26\u7684\u5f00\u59cb\uff0c\u4ee5\u8fbe\u5230\u7edf\u4e00\u6807\u8bc6\u7b26\u683c\u5f0f\uff0c\u51cf\u5c11\u6b67\u4e49\u7684\u6548\u679c\u3002 4.2 \u5173\u952e\u5b57\u548c\u4fdd\u7559\u5b57 \u5173\u952e\u5b57\u548c\u4fdd\u7559\u5b57\u662fJava\u8bed\u8a00\u4e2d\u5177\u6709\u7279\u6b8a\u542b\u4e49\u7684\u5355\u8bcd\u6216\u7b26\u53f7\u3002\u5173\u952e\u5b57\u662fJava\u8bed\u8a00\u672c\u8eab\u5b9a\u4e49\u7684\uff0c\u7528\u4e8e\u8868\u793a\u7279\u5b9a\u7684\u8bed\u6cd5\u7ed3\u6784\u548c\u64cd\u4f5c\uff0c\u4e0d\u80fd\u7528\u4f5c\u6807\u8bc6\u7b26\uff0c\u5982\u53d8\u91cf\u540d\u3001\u7c7b\u540d\u7b49\u3002 Java\u8bed\u8a00\u5171\u670950\u4e2a\u5173\u952e\u5b57\uff0c\u5982\u4e0b\u6240\u793a\uff1a abstract continue for new switch assert default if package synchronized boolean do goto private this break double implements protected throw byte else import public throws case enum instanceof return transient catch extends int short try char final interface static void class finally long strictfp volatile const float native super while \u8fd9\u4e9b\u5173\u952e\u5b57\u5177\u6709\u56fa\u5b9a\u7684\u8bed\u6cd5\u542b\u4e49\uff0c\u4e0d\u80fd\u88ab\u7528\u4f5c\u53d8\u91cf\u540d\u6216\u5176\u4ed6\u6807\u8bc6\u7b26\u3002 \u4fdd\u7559\u5b57\u662f\u6307\u88ab\u4fdd\u7559\u4f46\u76ee\u524d\u672a\u88ab\u4f7f\u7528\u7684\u5173\u952e\u5b57\uff0c\u5b83\u4eec\u5728Java\u8bed\u8a00\u4e2d\u6ca1\u6709\u7279\u5b9a\u7684\u529f\u80fd\uff0c\u4f46\u4e3a\u4e86\u4fdd\u7559\u672a\u6765\u53ef\u80fd\u4f7f\u7528\u7684\u5173\u952e\u5b57\u800c\u88ab\u4fdd\u7559\u3002 \u6211\u4eec\u5728\u7f16\u5199\u4ee3\u7801\u65f6\u5e94\u907f\u514d\u4f7f\u7528\u5173\u952e\u5b57\u4f5c\u4e3a\u6807\u8bc6\u7b26\uff0c\u4ee5\u514d\u5f15\u53d1\u7f16\u8bd1\u9519\u8bef\u6216\u8bed\u6cd5\u6df7\u6dc6\u3002 5. Java\u4e2d\u7684\u53d8\u91cf 5.1 \u4ec0\u4e48\u662f\u53d8\u91cf \u53d8\u91cf\u662fJava\u7a0b\u5e8f\u4e2d\u7684\u57fa\u672c\u5b58\u50a8\u5355\u5143\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u7528\u6765\u5b58\u50a8\u6570\u636e\u3002\u53d8\u91cf\u672c\u8d28\u4e0a\u4ee3\u8868\u4e86\u5185\u5b58\u4e2d\u7684\u4e00\u4e2a\u5b58\u50a8\u7684\u533a\u57df\uff0c\u8fd9\u4e2a\u533a\u57df\u91cc\u7684\u6570\u636e\u5728\u540c\u4e00\u6570\u636e\u7c7b\u578b\u4e2d\u53ef\u4ee5\u4e0d\u65ad\u7684\u53d8\u5316\u3002\u901a\u8fc7\u53d8\u91cf\u53ef\u4ee5\u65b9\u4fbf\u7684\u8bfb\u53d6\u548c\u64cd\u4f5c\u8be5\u533a\u57df\u4e2d\u7684\u6570\u636e\u3002 - \u53d8\u91cf\uff1a\u987e\u540d\u601d\u4e49\uff0c\u4f1a\u53d8\u7684\u91cf\u3002 - \u5e38\u91cf\uff1a\u81ea\u7136\u754c\u4e2d\u89c4\u5b9a\u597d\u4e86\u7684\u3001\u4e0d\u4f1a\u53d8\u7684\u503c\u3002 5.2 \u53d8\u91cf\u7684\u58f0\u660e \u5728Java\u4e2d\uff0c\u9700\u8981\u5148\u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\uff0c\u624d\u80fd\u4f7f\u7528\u8fd9\u4e2a\u53d8\u91cf\u3002\u53d8\u91cf\u7684\u58f0\u660e\u5305\u542b\u4e24\u70b9\uff1a\u53d8\u91cf\u7684\u6570\u636e\u7c7b\u578b\u548c\u53d8\u91cf\u540d\uff0c\u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a \u6570\u636e\u7c7b\u578b \u53d8\u91cf\u540d\uff1b \u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u662fJava\u7684\u4efb\u610f\u6570\u636e\u7c7b\u578b\u4e4b\u4e00\uff1b\u53d8\u91cf\u540d\u5373\u53d8\u91cf\u7684\u540d\u79f0\uff0c\u7528\u4e8e\u5b58\u50a8\u53d8\u91cf\u503c\uff1a int a; char b; \u53ef\u4ee5\u540c\u65f6\u58f0\u660e\u591a\u4e2a\u540c\u4e00\u6570\u636e\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u53d8\u91cf\u4e4b\u95f4\u7528\u201c,\u201d\u9694\u5f00\uff0c\u4f8b\u5982\uff1a int c\uff0cd\uff0ce; \u7b49\u540c\u4e8e\uff1a int c; int d; int e; 5.3 \u53d8\u91cf\u7684\u521d\u59cb\u5316 Java\u8bed\u6cd5\u89c4\u5b9a\uff1a\u53d8\u91cf\u5728\u4f7f\u7528\u4e4b\u524d\u5fc5\u987b\u521d\u59cb\u5316\uff0c\u5373\u5fc5\u987b\u7ed9\u8be5\u53d8\u91cf\u8d4b\u4e88\u7279\u5b9a\u7684\u503c\u3002 \u53d8\u91cf\u7684\u7b2c\u4e00\u6b21\u8d4b\u503c\u5373\u5bf9\u53d8\u91cf\u7684\u521d\u59cb\u5316\u3002\u5728Java\u4e2d\uff0c\u4f7f\u7528\u7b49\u53f7(=)\u5b9e\u73b0\u53d8\u91cf\u7684\u8d4b\u503c\u3002 \u53d8\u91cf\u7684\u521d\u59cb\u5316\u6709\u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\uff1a 1\u3001\u5728\u58f0\u660e\u53d8\u91cf\u65f6\uff0c\u540c\u65f6\u5bf9\u53d8\u91cf\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u8bed\u6cd5\u5982\u4e0b\uff1a \u6570\u636e\u7c7b\u578b \u53d8\u91cf\u540d = \u521d\u59cb\u503c\uff1b \u4f8b\u5982\uff1a int f = 5; 2\u3001\u7b2c\u4e00\u6b21\u4f7f\u7528\u53d8\u91cf\u524d\uff0c\u5bf9\u53d8\u91cf\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u8bed\u6cd5\u5982\u4e0b\uff1a \u6570\u636e\u7c7b\u578b \u53d8\u91cf\u540d\uff1b \u2026\u2026 \u53d8\u91cf\u540d = \u521d\u59cb\u503c\uff1b \u4f8b\u5982\uff1a int sum; // \u58f0\u660e\u53d8\u91cfsum System.out.println(sum); // \u62a5\u9519\uff0c\u4e0d\u80fd\u4f7f\u7528\u672a\u8d4b\u503c\u7684\u53d8\u91cf sum = 100; // \u7ed9\u53d8\u91cfsum\u8d4b\u503c System.out.println(sum); // \u6b63\u786e\uff0c\u8f93\u51fa100 5.4 \u53d8\u91cf\u7684\u8bbf\u95ee \u53d8\u91cf\u5728\u58f0\u660e\u548c\u521d\u59cb\u5316\u540e\uff0c\u53ef\u4ee5\u5bf9\u53d8\u91cf\u8fdb\u884c\u8bbf\u95ee\uff0c\u5305\u62ec\u8bfb\u53d6\u53d8\u91cf\u7684\u503c\u548c\u4fee\u6539\u53d8\u91cf\u7684\u503c\u3002\u4ee3\u7801\u5982\u4e0b\uff1a int sum = 100; // \u58f0\u660e\u53d8\u91cfsum System.out.println(sum); // \u8f93\u51fa\u53d8\u91cf\u7684\u503c -> 100 sum = 200; // \u4fee\u6539\u53d8\u91cfsum\u7684\u503c System.out.println(sum); // \u518d\u6b21\u8f93\u51fa\u53d8\u91cf\u7684\u503c -> 200 \u53d8\u91cf\u7684\u8bbf\u95ee\u5e94\u6ce8\u610f\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\uff1a 1\u3001\u53d8\u91cf\u7684\u64cd\u4f5c\u5fc5\u987b\u4e0e\u7c7b\u578b\u5339\u914d\u3002 \u53d8\u91cf\u5728\u58f0\u660e\u65f6\u6307\u5b9a\u4e86\u7c7b\u578b\uff0cJava\u7f16\u8bd1\u5668\u4f1a\u68c0\u6d4b\u5bf9\u8be5\u53d8\u91cf\u7684\u64cd\u4f5c\u662f\u5426\u4e0e\u5176\u4ed6\u7c7b\u578b\u5339\u914d\uff0c\u5982\u679c\u5bf9\u53d8\u91cf\u7684\u8d4b\u503c\u6216\u8005\u64cd\u4f5c\u4e0e\u5176\u7c7b\u578b\u4e0d\u5339\u914d\uff0c\u4f1a\u4ea7\u751f\u7f16\u8bd1\u9519\u8bef\uff0c\u4f8b\u5982\uff1a //\u7f16\u8bd1\u9519\u8bef\uff0c\u53d8\u91cfa\u7684\u7c7b\u578b\u4e3aint\u6574\u578b\uff0c\u4e0d\u80fd\u8d4b\u503c\u4e3a\u6d6e\u70b9\u7c7b\u578b\u7684\u503c int a = 3.14; 2\u3001\u53d8\u91cf\u7684\u6570\u636e\u7c7b\u578b\u53ea\u5199\u4e00\u6b21\u3002 \u53d8\u91cf\u5728\u7b2c\u4e00\u6b21\u58f0\u660e\u7684\u65f6\u5019\u5199\u6570\u636e\u7c7b\u578b\uff0c\u518d\u6b21\u4f7f\u7528\u65f6\u4e0d\u5199\u6570\u636e\u7c7b\u578b\uff0c\u4f8b\u5982\uff1a int n; n = 5; // \u6b63\u786e\uff0c\u518d\u6b21\u4f7f\u7528\u53d8\u91cfn\u65f6\u4e0d\u5199\u6570\u636e\u7c7b\u578b int n = 10; // \u518d\u6b21\u6307\u5b9a\u53d8\u91cf\u7684\u6570\u636e\u7c7b\u578b\u4f1a\u51fa\u73b0\u7f16\u8bd1\u9519\u8bef 3\u3001\u672a\u7ecf\u58f0\u660e\u7684\u53d8\u91cf\u4e0d\u80fd\u4f7f\u7528\u3002 \u53d8\u91cf\u5fc5\u987b\u5148\u58f0\u660e\uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u7f16\u8bd1\u9519\u8bef\uff0c\u4f8b\u5982\uff1a k=5; System.out.println(p); // \u7f16\u8bd1\u9519\u8bef\uff0c\u53d8\u91cf\u6ca1\u6709\u58f0\u660e 4\u3001\u53d8\u91cf\u521d\u59cb\u5316\u540e\u624d\u53ef\u4ee5\u4f7f\u7528\u3002 \u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\uff0c\u5fc5\u987b\u521d\u59cb\u5316\u540e\u624d\u80fd\u4f7f\u7528\uff0c\u4f8b\u5982\uff1a int t; System.out.println(t); // \u53d8\u91cft\u6ca1\u6709\u521d\u59cb\u5316\uff0c\u51fa\u73b0\u7f16\u8bd1\u9519\u8bef 6. Java\u7684\u6570\u636e\u7c7b\u578b Java\u7684\u6570\u636e\u7c7b\u578b\u5206\u4e3a\u4e24\u5927\u7c7b\uff1a\u57fa\u672c\u6570\u636e\u7c7b\u578b\u548c\u5f15\u7528\u6570\u636e\u7c7b\u578b\u3002 6.1 \u57fa\u672c\u6570\u636e\u7c7b\u578b Java\u57fa\u672c\u6570\u636e\u7c7b\u578b\u5305\u62ec4\u7c7b8\u79cd\u30024\u7c7b\u5206\u522b\u662f\u6574\u6570\u7c7b\u578b\u3001\u6d6e\u70b9\u6570\u7c7b\u578b\u3001\u5b57\u7b26\u7c7b\u578b\u548c\u5e03\u5c14\u7c7b\u578b\u3002 Java\u4e2d\u6574\u6570\u7c7b\u578b\u5305\u62ec\uff1abyte\u3001short\u3001int \u548clong\u578b\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u533a\u522b\u4ec5\u4ec5\u662f\u5bbd\u5ea6\u548c\u8303\u56f4\u7684\u4e0d\u540c\u3002 6.1.1 \u6574\u6570\u7c7b\u578b \u4e00\u4e2abyte\u7c7b\u578b\u7684\u53d8\u91cf\u4ee3\u8868\u7684\u503c\u5360\u75281\u4e2a\u5b57\u8282\u7684\u5185\u5b58\u7a7a\u95f4\uff088\u4f4d\uff09\uff0c\u80fd\u591f\u8868\u793a\u768410\u8fdb\u5236\u6574\u6570\u6570\u636e\u8303\u56f4\u662f\u8d1f128\u5230\u6b63127\uff0c\u5305\u542b0\u3002 \u4e00\u4e2aint\u7c7b\u578b\u7684\u53d8\u91cf\u4ee3\u8868\u7684\u503c\u5360\u75284\u4e2a\u5b57\u8282\u7684\u5185\u5b58\u7a7a\u95f4\uff0832\uff09\u4f4d\uff0c\u80fd\u591f\u8868\u793a\u768410\u8fdb\u5236\u6574\u6570\u6570\u636e\u8303\u56f4\u662f\u8d1f2147483648\u5230\u6b632147483647\uff0c\u5305\u542b0\u3002 6.1.2 \u6d6e\u70b9\u7c7b\u578b \u6d6e\u70b9\u7c7b\u578b\u4e3b\u8981\u7528\u6765\u50a8\u5b58\u5c0f\u6570\u6570\u503c\uff0c\u4e5f\u53ef\u4ee5\u7528\u6765\u50a8\u5b58\u8303\u56f4\u8f83\u5927\u7684\u6574\u6570\u3002 \u5b83\u5206\u4e3a\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff08float\uff09\u548c\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff08double\uff09\u4e24\u79cd\uff0c\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u6bd4\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\u6240\u4f7f\u7528\u7684\u5185\u5b58\u7a7a\u95f4\u66f4\u5927\uff0c\u53ef\u8868\u793a\u7684\u6570\u503c\u8303\u56f4\u4e0e\u7cbe\u786e\u5ea6\u4e5f\u6bd4\u8f83\u5927\u3002 6.1.3 \u5b57\u7b26\u7c7b\u578b \u5b57\u7b26\u7c7b\u578b\u8868\u793a\u5355\u4e2a\u5b57\u7b26\uff0cJava\u4e2d\u7684\u5b57\u7b26\u7c7b\u578b\u53d8\u91cf\u4f7f\u7528char\u5173\u952e\u5b57\u8fdb\u884c\u58f0\u660e\uff0c\u800c\u5b57\u7b26\u578b\u5b57\u9762\u91cf\u5fc5\u987b\u7528\u5355\u5f15\u53f7\u62ec\u8d77\u6765\uff0c\u4f8b\u5982\uff1a char c = 'A'; 6.1.4 \u5e03\u5c14\u7c7b\u578b \u5e03\u5c14\u7c7b\u578b\u5728Java\u8bed\u8a00\u4e2d\u4f7f\u7528\u5173\u952e\u5b57boolean \u58f0\u660e\uff0c\u5b83\u53ea\u6709\u4e24\u4e2a\u5b57\u9762\u91cf\uff1atrue\u548cfalse\u3002 \u4e0eC\u8bed\u8a00\u4e0d\u540c\uff0cJava\u4e0d\u5141\u8bb8\u4f7f\u75280\u6216\u975e0\u7684\u6574\u6570\u6765\u4ee3\u66fftrue\u548cfalse\uff0c\u4e5f\u4e0d\u80fd\u5c06\u5176\u4ed6\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u503c\u76f4\u63a5\u8f6c\u6362\u4e3a\u5e03\u5c14\u7c7b\u578b\u3002 \u5e03\u5c14\u7c7b\u578b\u7528\u4e8e\u5224\u65ad\u903b\u8f91\u6761\u4ef6\u7684\u7ed3\u679c\uff0c\u901a\u5e38\u5728\u7a0b\u5e8f\u7684\u5206\u652f\u548c\u5faa\u73af\u63a7\u5236\u8bed\u53e5\u4e2d\u4f7f\u7528\uff0c\u6839\u636e\u903b\u8f91\u5224\u65ad\u7684\u7ed3\u679c\u6765\u51b3\u5b9a\u7a0b\u5e8f\u7684\u6267\u884c\u6d41\u7a0b\u3002 boolean isBig = true; boolean isSmall = false; 6.2 \u5f15\u7528\u6570\u636e\u7c7b\u578b \u5f15\u7528\u7c7b\u578b\u662f\u6307\u9664\u57fa\u672c\u6570\u636e\u7c7b\u578b\u4ee5\u5916\u7684\u6240\u6709\u7c7b\u578b\uff0c\u5305\u62ec\u7c7b\u3001\u63a5\u53e3\u3001\u6570\u7ec4\u3001\u679a\u4e3e\u7b49\uff0c\u662f\u9ad8\u9636\u5185\u5bb9\uff0c\u4e0d\u5728\u672c\u6b21\u6559\u5b66\u8303\u56f4\u5185\uff0c\u8fd9\u91cc\u53ea\u9009\u53d6Java\u4e2d\u5e38\u7528\u7684\u4e00\u79cd\u5f15\u7528\u6570\u636e\u7c7b\u578b\u8fdb\u884c\u4ecb\u7ecd\u3002 6.2.1 \u5b57\u7b26\u4e32\u7c7b\u578b \u5b57\u7b26\u4e32\u7c7b\u578b\u662fJava\u4e2d\u7528\u4e8e\u5b58\u50a8\u591a\u4e2a\u5b57\u7b26\u7684\u6570\u636e\u7c7b\u578b\uff0c\u4f7f\u7528String\u5173\u952e\u5b57\u58f0\u660e\u5b57\u7b26\u4e32\u53d8\u91cf\u3002\u4f8b\u5982\uff1a String str = \"abc\"; \u9700\u8981\u5f3a\u8c03\u4e24\u70b9\uff1a Java\u4e2d\u7684\u5b57\u7b26\u4e32\u7c7b\u578b\u5b57\u9762\u91cf\u662fString\u7c7b\u578b\u7684\uff0c\u800c\u4e0d\u662fchar\u7c7b\u578b\u7684\u3002 String\u7c7b\u578b\u4e0d\u662f\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u800c\u662f\u5f15\u7528\u7c7b\u578b\u3002 6.3 \u5e38\u7528\u6570\u636e\u7c7b\u578b\u7684\u4f7f\u7528\u5b9e\u4f8b public class StudentInformation { public static void main(String[] args) { // \u5b66\u751f\u4fe1\u606f int studentId = 12345; String studentName = \"\u8d75\u9547\"; int age = 20; double score = 92.5; char gender = '\u7537'; boolean isMarried = false; // \u8f93\u51fa\u5b66\u751f\u4fe1\u606f System.out.println(\"\u5b66\u751f\u4fe1\u606f\uff1a\"); System.out.println(\"\u5b66\u53f7\uff1a\" + studentId); System.out.println(\"\u59d3\u540d\uff1a\" + studentName); System.out.println(\"\u5e74\u9f84\uff1a\" + age); System.out.println(\"\u6210\u7ee9\uff1a\" + score); System.out.println(\"\u6027\u522b\uff1a\" + gender); System.out.println(\"\u5a5a\u5426\uff1a\" + isMarried); } } 7. Java\u4e2d\u7684\u8fd0\u7b97\u7b26 7.1 \u7b97\u672f\u8fd0\u7b97\u7b26 \u8fd0\u7b97\u7b26 \uff1a + \uff08\u52a0\uff09\u3001 - \uff08\u51cf\uff09\u3001 * \uff08\u4e58\uff09\u3001 / \uff08\u9664\uff09\u3001 % \uff08\u6c42\u4f59\uff09\u3001 ++ \uff08\u81ea\u589e\uff09\u3001 -- \uff08\u81ea\u51cf\uff09 \u7528\u9014 \uff1a\u6267\u884c\u57fa\u672c\u7684\u6570\u5b66\u8fd0\u7b97 \u793a\u4f8b\u4ee3\u7801 \uff1a java int a = 10; int b = 20; int result = a + b; // 30 a++; // 11 7.2 \u8d4b\u503c\u8fd0\u7b97\u7b26 \u8fd0\u7b97\u7b26 \uff1a = \uff08\u7b49\u4e8e\uff09\u3001 += \uff08\u81ea\u52a0\u4e00\u6b21\u7b49\u4e8e\uff09\u3001 -= \uff08\u81ea\u51cf\u4e00\u6b21\u7b49\u4e8e\uff09\u3001 *= \uff08\u81ea\u4e58\u4e00\u6b21\u7b49\u4e8e\uff09\u3001 /= \uff08\u81ea\u9664\u4e00\u6b21\u7b49\u4e8e\uff09\u3001 %= \uff08\u6c42\u6a21\u5e76\u8d4b\u503c\uff09 \u7528\u9014 \uff1a\u5c06\u8ba1\u7b97\u7ed3\u679c\u8d4b\u503c\u7ed9\u53d8\u91cf \u793a\u4f8b\u4ee3\u7801 \uff1a java int x = 10; x += 5; // \u7b49\u540c\u4e8e x = x + 5; 7.3 \u6bd4\u8f83\u8fd0\u7b97\u7b26 \u8fd0\u7b97\u7b26 \uff1a < \uff08\u5c0f\u4e8e\uff09\u3001 > \uff08\u5927\u4e8e\uff09\u3001 >= \uff08\u5927\u4e8e\u7b49\u4e8e\uff09\u3001 <= \uff08\u5c0f\u4e8e\u7b49\u4e8e\uff09\u3001 == \uff08\u7b49\u4e8e\uff09\u3001 != \uff08\u4e0d\u7b49\u4e8e\uff09 \u7528\u9014 \uff1a\u6bd4\u8f83\u4e24\u4e2a\u503c\u7684\u5927\u5c0f\u6216\u76f8\u7b49\u6027 \u793a\u4f8b\u4ee3\u7801 \uff1a java int m = 10; int n = 20; boolean result = (m > n); // \u6bd4\u8f83 m \u662f\u5426\u5927\u4e8e n 7.4 \u903b\u8f91\u8fd0\u7b97\u7b26 \u8fd0\u7b97\u7b26 \uff1a && \uff08\u77ed\u8def\u4e0e\uff09\u3001 || \uff08\u77ed\u8def\u6216\uff09\u3001 ! \uff08\u975e\uff09 \u7528\u9014 \uff1a\u7ec4\u5408\u5e03\u5c14\u8868\u8fbe\u5f0f\uff0c\u5b9e\u73b0\u903b\u8f91\u8fd0\u7b97 \u793a\u4f8b\u4ee3\u7801 \uff1a java boolean condition1 = true; boolean condition2 = false; boolean result = condition1 && condition2; // \u4f7f\u7528\u77ed\u8def\u4e0e\u8fd0\u7b97\u7b26 7.5 \u6761\u4ef6\uff08\u4e09\u76ee\uff09\u8fd0\u7b97\u7b26 \u8fd0\u7b97\u7b26 \uff1a ?: \u7528\u9014 \uff1a\u6839\u636e\u6761\u4ef6\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u9009\u62e9\u4e24\u4e2a\u503c\u4e2d\u7684\u4e00\u4e2a \u8bed\u6cd5 \uff1a result = (condition) ? value1 : value2; \u793a\u4f8b\u4ee3\u7801 \uff1a java int age = 20; String message = (age >= 18) ? \"\u6210\u5e74\u4eba\" : \"\u672a\u6210\u5e74\u4eba\"; // \u6839\u636e\u5e74\u9f84\u5224\u65ad\u6210\u5e74\u4eba\u6216\u672a\u6210\u5e74\u4eba 7.6 \u4f4d\u8fd0\u7b97\u7b26 \u8fd0\u7b97\u7b26 \uff1a & \uff08\u6309\u4f4d\u4e0e\uff09\u3001 | \uff08\u6309\u4f4d\u6216\uff09\u3001 ^ \uff08\u5f02\u6216\uff09\u3001 ~ \uff08\u975e\u3001\u53d6\u53cd\uff09 \u7528\u9014 \uff1a\u5bf9\u4e8c\u8fdb\u5236\u4f4d\u8fdb\u884c\u64cd\u4f5c \u793a\u4f8b\u4ee3\u7801 \uff1a java int a = 5; // \u4e8c\u8fdb\u5236\u4e3a 101 int b = 3; // \u4e8c\u8fdb\u5236\u4e3a 011 int result = a & b; // \u6309\u4f4d\u4e0e\u64cd\u4f5c 7.7 \u590d\u5408\u8d4b\u503c\u8fd0\u7b97\u7b26 \u8fd0\u7b97\u7b26 \uff1a += , -= , \u7b49 \u7528\u9014 \uff1a\u5c06\u64cd\u4f5c\u7b80\u5316 \u793a\u4f8b \uff1a x += 5 \u7b49\u4ef7\u4e8e x = x + 5 7.8 \u5b57\u7b26\u4e32\u8fde\u63a5\u8fd0\u7b97\u7b26 \u8fd0\u7b97\u7b26 \uff1a + \u7528\u9014 \uff1a\u7528\u4e8e\u8fde\u63a5\u5b57\u7b26\u4e32 \u793a\u4f8b\u4ee3\u7801 \uff1a java String str1 = \"Hello, \"; String str2 = \"World!\"; String result = str1 + str2; // \"Hello, World!\" Java\u4e2d\u7684\u8fd0\u7b97\u7b26\u4e0d\u4ec5\u5305\u62ec\u4e0a\u8ff0\u57fa\u672c\u7c7b\u578b\uff0c\u8fd8\u5305\u62ec\u590d\u5408\u8d4b\u503c\u8fd0\u7b97\u7b26\uff0c\u5982 +=, -= \u7b49\uff0c\u6b64\u5916\uff0cJava\u8fd8\u652f\u6301\u5b57\u7b26\u4e32\u8fde\u63a5\u64cd\u4f5c\uff0c\u5176\u4e2d + \u8fd0\u7b97\u7b26\u9664\u4e86\u7528\u4e8e\u6570\u503c\u7684\u52a0\u6cd5\u8fd0\u7b97\u5916\uff0c\u8fd8\u53ef\u4ee5\u7528\u4e8e\u8fde\u63a5\u5b57\u7b26\u4e32\u3002 8. Java\u7684\u8f93\u5165\u4e0e\u8f93\u51fa 8.1 \u4f7f\u7528 Scanner \u8bfb\u53d6\u5b57\u7b26\u4e32/\u6574\u6570/\u6d6e\u70b9\u6570 Scanner \u53ef\u4ee5\u8bfb\u53d6\u7528\u6237\u7684\u952e\u76d8\u8f93\u5165\u3002 \u4f8b\u5982\uff1a import java.util.Scanner; // \u5bfc\u5165 util \u5305 public class scannerReader { public static void main(String[] args) { Scanner sc = new Scanner(System.in); System.out.println(\"\u8bf7\u8f93\u5165\u4f60\u7684\u59d3\u540d\uff1a\"); String name = sc.nextLine(); System.out.println(\"\u8bf7\u8f93\u5165\u4f60\u7684\u5e74\u9f84\uff1a\"); int age = sc.nextInt(); System.out.println(\"\u8bf7\u8f93\u5165\u4f60\u7684\u5de5\u8d44\uff1a\"); float salary = sc.nextFloat(); System.out.println(\"\u4f60\u7684\u4fe1\u606f\u5982\u4e0b\uff1a\"); System.out.println(\"\u59d3\u540d: \" + name + \"\\n\" + \"\u5e74\u9f84\uff1a\" + age + \"\\n\" + \"\u5de5\u8d44\uff1a\" + salary); sc.close(); //\u8c03\u7528\u5173\u95ed\u65b9\u6cd5 } } 8.2 System.out.println() System.out.println() \u53ef\u4ee5\u6253\u5370\u4e00\u884c\u5185\u5bb9\uff0c\u8f93\u51fa\u5b8c\u81ea\u52a8\u6362\u884c\u3002 public class Inputoutput { public static void main(String[] args){ System.out.println(\"hello,java!\"); int a=9; System.out.println(\"output:\"+a); } } 8.3 System.out.print() System.out.print() \u53ef\u4ee5\u6253\u5370\u5b57\u7b26\u4e32\u4ee5\u53ca\u5176\u4ed6\u7684\u7c7b\u578b\u3002 public class Inputoutput { public static void main(String[] args){ char c='\u6211';//\u5728Java\u4e2dchar\u6709\u4e24\u5b57\u8282\uff0c\u6240\u4ee5\u53ef\u4ee5\u5b58\u4e2d\u6587 int a=2187; byte b=127; System.out.print(c); System.out.print('\\n'); System.out.print(a); System.out.print(\"output:\"+b); } } 8.4 InputStream/OutputStream \u5728 Java \u4e2d\uff0cInputStream \u548c OutputStream \u662f\u4e24\u4e2a\u57fa\u672c\u7684 I/O \u7c7b\uff0c\u7528\u4e8e\u5904\u7406\u5b57\u8282\u6d41\u7684\u8f93\u5165\u548c\u8f93\u51fa\u3002\u5b83\u4eec\u5206\u522b\u662f\u8f93\u5165\u548c\u8f93\u51fa\u64cd\u4f5c\u7684\u57fa\u7c7b\uff0c\u5e76\u4e14\u90fd\u6709\u591a\u4e2a\u5b50\u7c7b\uff0c\u652f\u6301\u4ece\u5404\u79cd\u6570\u636e\u6e90\u8bfb\u53d6\u6570\u636e\u548c\u5c06\u6570\u636e\u5199\u5165\u5404\u79cd\u6570\u636e\u76ee\u6807\u3002\u4ee5\u4e0b\u662f\u5b83\u4eec\u7684\u5173\u7cfb\u3001\u57fa\u7c7b\u3001\u5b50\u7c7b\u53ca\u5176\u5e38\u89c1\u7528\u9014\u7684\u8be6\u7ec6\u4ecb\u7ecd\u3002 InputStream \u548c OutputStream \u7684\u5173\u7cfb\uff1a - InputStream\uff1a\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u8868\u793a\u5b57\u8282\u8f93\u5165\u6d41\u7684\u6240\u6709\u7c7b\u7684\u8d85\u7c7b\u3002\u5b83\u5b9a\u4e49\u4e86\u4ece\u4e0d\u540c\u8f93\u5165\u6e90\uff08\u5982\u6587\u4ef6\u3001\u5185\u5b58\u7f13\u51b2\u533a\u3001\u7f51\u7edc\u8fde\u63a5\uff09\u8bfb\u53d6\u5b57\u8282\u6570\u636e\u7684\u57fa\u672c\u65b9\u6cd5\u3002 - OutputStream\uff1a\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u8868\u793a\u5b57\u8282\u8f93\u51fa\u6d41\u7684\u6240\u6709\u7c7b\u7684\u8d85\u7c7b\u3002\u5b83\u5b9a\u4e49\u4e86\u5411\u4e0d\u540c\u8f93\u51fa\u76ee\u6807\uff08\u5982\u6587\u4ef6\u3001\u5185\u5b58\u7f13\u51b2\u533a\u3001\u7f51\u7edc\u8fde\u63a5\uff09\u5199\u5165\u5b57\u8282\u6570\u636e\u7684\u57fa\u672c\u65b9\u6cd5\u3002 - InputStream \u548c OutputStream \u5e76\u6ca1\u6709\u76f4\u63a5\u7684\u7ee7\u627f\u5173\u7cfb\uff0c\u4f46\u5b83\u4eec\u662f\u4e92\u8865\u7684\uff0c\u5206\u522b\u5904\u7406\u8f93\u5165\u548c\u8f93\u51fa\u64cd\u4f5c\u3002 \u4f8b\u5982\uff1a \u4f7f\u7528 InputStream \u8bfb\u53d6\u6587\u4ef6 import java.io.FileInputStream; import java.io.IOException; import java.io.InputStream; public class InputStreamExample { public static void main(String[] args) { try (InputStream inputStream = new FileInputStream(\"example.txt\")) { int data; while ((data = inputStream.read()) != -1) { System.out.print((char) data); } } catch (IOException e) { e.printStackTrace(); } } } \u4f7f\u7528 OutputStream \u5199\u5165\u6587\u4ef6 import java.io.FileOutputStream; import java.io.IOException; import java.io.OutputStream; public class OutputStreamExample { public static void main(String[] args) { String data = \"Hello, World!\"; try (OutputStream outputStream = new FileOutputStream(\"example.txt\")) { outputStream.write(data.getBytes()); } catch (IOException e) { e.printStackTrace(); } } } 9. \u8bfe\u7a0b\u603b\u7ed3 Java\u73af\u5883\u5b89\u88c5\u6b63\u5e38\u3002 \u5b8c\u6210\u7b2c\u4e00\u4e2aHello World\u7a0b\u5e8f\u3002 \u8ba4\u8bc6\u53d8\u91cf\u7c7b\u578b\u548c\u547d\u540d\u65b9\u5f0f\u3002 Java\u4e2d\u7684\u8fd0\u7b97\u7b26\u3002 Java\u7684\u8f93\u5165\u4e0e\u8f93\u51fa\u3002 \u8bfe\u540e\u7ec3\u4e60 \u8bfe\u540e\u7ec3\u4e60 1.\u7f16\u5199\u4e00\u4e2aPython\u7a0b\u5e8f\u6765\u627e\u51fa\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u7684\u6700\u5c0f\u6b63\u6574\u6570\uff1a -\u8be5\u6570\u9664\u4ee512\u4f591 -\u8be5\u6570\u9664\u4ee523\u4e5f\u4f591 -\u8be5\u6570\u9664\u4ee531\u4e5f\u4f591 \u8bf7\u5728\u4ee5\u4e0b\u9009\u9879\u4e2d\u9009\u62e9\u4e00\u4e2a\u6b63\u786e\u7684\u7b54\u6848\uff0c\u8be5\u7b54\u6848\u6ee1\u8db3\u4e0a\u8ff0\u6240\u6709\u6761\u4ef6\uff1a (A) 4191 (B) 3232 (C) 8577 (D) 9233 \u53c2\u8003\u7a0b\u5e8f\uff1a import java.util.Scanner; public class FindNumber { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); // \u83b7\u53d6\u7528\u6237\u8f93\u5165\u7684\u9009\u9879 System.out.print(\"\u8bf7\u8f93\u5165\u4e00\u4e2a\u9009\u9879\uff1a\"); int option = scanner.nextInt(); // \u8ba1\u7b97\u4f59\u6570 int a = option % 12; int b = option % 23; int c = option % 31; // \u6253\u5370\u4f59\u6570\u7ed3\u679c System.out.println(\"For option \" + option + \":\"); System.out.println(\"a = \" + a + \", b = \" + b + \", c = \" + c); // \u5224\u65ad\u662f\u5426\u6ee1\u8db3\u6761\u4ef6 if (a == 1 && b == 1 && c == 1) { System.out.println(\"Correct, That's what I find!! The number is: \" + option); } else { System.out.println(\"Wrong, Please try another Answer!\"); } scanner.close(); } } 2.\u7f16\u5199\u4e00\u4e2aJava\u7a0b\u5e8f\uff0c\u7528\u4e8e\u6a21\u62df\u9910\u5385\u7684\u70b9\u5355\u8fc7\u7a0b\u3002\u7a0b\u5e8f\u5e94\u63d0\u524d\u544a\u77e5\u7528\u6237\u6c49\u5821\u3001\u85af\u6761\u548c\u53ef\u4e50\u7684\u4ef7\u683c\uff0c\u5e76\u901a\u8fc7\u7528\u6237\u8f93\u5165\u83b7\u5f97\u70b9\u5355\u4fe1\u606f\u3002\u6700\u540e\uff0c\u7a0b\u5e8f\u5e94\u5206\u884c\u8f93\u51fa\u5ba2\u6237\u70b9\u7684\u5185\u5bb9\uff0c\u5e76\u6253\u5370\u51fa\u603b\u4ef7\u3002 \u4ef7\u683c\u4fe1\u606f\uff1a -\u6c49\u5821\uff1a$5 -\u85af\u6761\uff1a$2 -\u53ef\u4e50\uff1a$1 \u529f\u80fd\u8981\u6c42\uff1a 1.\u663e\u793a\u5404\u9879\u98df\u7269\u7684\u4ef7\u683c\u3002 2.\u63d0\u793a\u7528\u6237\u8f93\u5165\u6bcf\u79cd\u98df\u7269\u7684\u6570\u91cf\u3002 3.\u8ba1\u7b97\u5e76\u663e\u793a\u6bcf\u79cd\u98df\u7269\u7684\u70b9\u5355\u6570\u91cf\u3002 4.\u8ba1\u7b97\u5e76\u663e\u793a\u603b\u4ef7\u3002 \u8f93\u5165\u8f93\u51fa\u793a\u4f8b\uff1a \u793a\u4f8b\u8f93\u51fa\uff1a \u6c49\u5821\uff1a$5 \u85af\u6761\uff1a$2 \u53ef\u4e50\uff1a$1 \u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf\uff1a2 \u8bf7\u8f93\u5165\u85af\u6761\u7684\u6570\u91cf\uff1a1 \u8bf7\u8f93\u5165\u53ef\u4e50\u7684\u6570\u91cf\uff1a3 \u60a8\u7684\u70b9\u5355\u5982\u4e0b\uff1a \u6c49\u5821X 2 \u85af\u6761X 1 \u53ef\u4e50X 3 \u603b\u4ef7\uff1a$15 \u63d0\u793a\uff1a \u4f7f\u7528 Scanner \u51fd\u6570\u83b7\u53d6\u7528\u6237\u8f93\u5165\u3002 \u4f7f\u7528\u7b97\u672f\u8fd0\u7b97\u8ba1\u7b97\u603b\u4ef7\u3002 \u4f7f\u7528 System.out.println() \u51fd\u6570\u8f93\u51fa\u7ed3\u679c\u3002 \u793a\u4f8b\u4ee3\u7801\uff1a import java.util.Scanner; public class RestaurantOrder { public static void main(String[] args) { // \u5b9a\u4e49\u98df\u7269\u7684\u4ef7\u683c int burgerPrice = 5; int friesPrice = 2; int colaPrice = 1; // \u663e\u793a\u4ef7\u683c\u4fe1\u606f System.out.println(\"\u6c49\u5821\uff1a$\" + burgerPrice); System.out.println(\"\u85af\u6761\uff1a$\" + friesPrice); System.out.println(\"\u53ef\u4e50\uff1a$\" + colaPrice + \"\\n\"); // \u83b7\u53d6\u7528\u6237\u8f93\u5165\u7684\u70b9\u5355\u6570\u91cf Scanner scanner = new Scanner(System.in); System.out.print(\"\u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf\uff1a\"); int burgerCount = scanner.nextInt(); System.out.print(\"\u8bf7\u8f93\u5165\u85af\u6761\u7684\u6570\u91cf\uff1a\"); int friesCount = scanner.nextInt(); System.out.print(\"\u8bf7\u8f93\u5165\u53ef\u4e50\u7684\u6570\u91cf\uff1a\"); int colaCount = scanner.nextInt(); // \u8ba1\u7b97\u603b\u4ef7 int totalPrice = burgerCount * burgerPrice + friesCount * friesPrice + colaCount * colaPrice; // \u8f93\u51fa\u70b9\u5355\u5185\u5bb9\u548c\u603b\u4ef7 System.out.println(\"\\n\u60a8\u7684\u70b9\u5355\u5982\u4e0b\uff1a\"); System.out.println(\"\u6c49\u5821 X \" + burgerCount); System.out.println(\"\u85af\u6761 X \" + friesCount); System.out.println(\"\u53ef\u4e50 X \" + colaCount); System.out.println(\"\\n\u603b\u4ef7\uff1a$\" + totalPrice); scanner.close(); } }","title":"Lesson 1 Java\u7684\u73af\u5883\u8bbe\u7f6e\u3001\u6570\u636e\u7c7b\u578b\u3001\u8fd0\u7b97\u7b26\u548c\u8f93\u5165\u548c\u8f93\u51fa"},{"location":"lesson1/Lesson1%20Java/#lesson-1-java","text":"","title":"Lesson 1 Java\u7684\u73af\u5883\u8bbe\u7f6e\u3001\u6570\u636e\u7c7b\u578b\u3001\u8fd0\u7b97\u7b26\u548c\u8f93\u5165\u548c\u8f93\u51fa"},{"location":"lesson1/Lesson1%20Java/#_1","text":"Java\u73af\u5883\u914d\u7f6e 1.1 Java\u4e0b\u8f7d 1.2 Java\u5b89\u88c5 1.3 Java\u914d\u7f6e 1.3.1 Mac \u7cfb\u7edf\u7535\u8111 1.3.2 Windows \u7cfb\u7edf\u7535\u8111 1.4 \u9a8c\u8bc1\u7ed3\u679c 1.5 Java\u7f16\u8bd1&\u8fd0\u884c \u7b2c\u4e00\u4e2a\u7a0b\u5e8f\uff1aHello World\uff01 Java\u5e38\u7528\u7684\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff08IDE\uff09 3.1 IntelliJ IDEA\uff08\u63a8\u8350\uff09 3.2 Eclipse 3.3 \u6837\u4f8b\u5c55\u793a Java\u4e2d\u7684\u6807\u8bc6\u7b26 4.1 \u6807\u8bc6\u7b26 4.2 \u5173\u952e\u5b57\u548c\u4fdd\u7559\u5b57 Java\u4e2d\u7684\u53d8\u91cf 5.1 \u4ec0\u4e48\u662f\u53d8\u91cf 5.2 \u53d8\u91cf\u7684\u58f0\u660e 5.3 \u53d8\u91cf\u7684\u521d\u59cb\u5316 5.4 \u53d8\u91cf\u7684\u8bbf\u95ee Java\u7684\u6570\u636e\u7c7b\u578b 6.1 \u57fa\u672c\u6570\u636e\u7c7b\u578b 6.1.1 \u6574\u6570\u7c7b\u578b 6.1.2 \u6d6e\u70b9\u7c7b\u578b 6.1.3 \u5b57\u7b26\u7c7b\u578b 6.1.4 \u5e03\u5c14\u7c7b\u578b 6.2 \u5f15\u7528\u6570\u636e\u7c7b\u578b 6.2.1 \u5b57\u7b26\u4e32\u7c7b\u578b 6.3 \u5e38\u7528\u6570\u636e\u7c7b\u578b\u7684\u4f7f\u7528\u5b9e\u4f8b Java\u4e2d\u7684\u8fd0\u7b97\u7b26 7.1 \u7b97\u672f\u8fd0\u7b97\u7b26 7.2 \u8d4b\u503c\u8fd0\u7b97\u7b26 7.3 \u6bd4\u8f83\u8fd0\u7b97\u7b26 7.4 \u903b\u8f91\u8fd0\u7b97\u7b26 7.5 \u6761\u4ef6\uff08\u4e09\u76ee\uff09\u8fd0\u7b97\u7b26 7.6 \u4f4d\u8fd0\u7b97\u7b26 Java\u7684\u8f93\u5165\u4e0e\u8f93\u51fa 8.1 \u4f7f\u7528scanner\u8bfb\u53d6\u5b57\u7b26\u4e32\u6574\u6570\u6d6e\u70b9\u6570 8.2 System.out.println() 8.3 System.out.print() 8.4 InputStream/OutputStream \u8bfe\u540e\u603b\u7ed3\u53ca\u7ec3\u4e60","title":"\u76ee\u5f55"},{"location":"lesson1/Lesson1%20Java/#java","text":"Java\u662f\u4e00\u95e8\u529f\u80fd\u5f3a\u5927\u4e14\u7b80\u5355\u6613\u7528\u7684\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u8bed\u8a00**\uff0c\u200c\u5b83\u5177\u6709\u591a\u79cd\u7279\u70b9\uff0c\u200c\u5305\u62ec\u7b80\u5355\u6027\u3001\u200c\u9762\u5411\u5bf9\u8c61\u3001\u200c\u5206\u5e03\u5f0f\u3001\u200c\u5065\u58ee\u6027\u3001\u200c\u5b89\u5168\u6027\u3001\u200c\u5e73\u53f0\u72ec\u7acb\u4e0e\u53ef\u79fb\u690d\u6027\u3001\u200c\u591a\u7ebf\u7a0b\u4ee5\u53ca\u52a8\u6001\u6027\u3002\u200c Java\u53ef\u4ee5\u7528\u4e8e\u7f16\u5199\u684c\u9762\u5e94\u7528\u7a0b\u5e8f\u3001\u200cWeb\u5e94\u7528\u7a0b\u5e8f\u3001\u200c\u5206\u5e03\u5f0f\u7cfb\u7edf\u548c\u5d4c\u5165\u5f0f\u7cfb\u7edf\u5e94\u7528\u7a0b\u5e8f\u7b49\u591a\u79cd\u7c7b\u578b\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u200cJava\u7684\u72ec\u7acb\u4e8e\u5e73\u53f0\u7684\u7279\u70b9\uff0c\u200c\u5373\u201c\u4e00\u6b21\u7f16\u5199\uff0c\u200c\u5230\u5904\u8fd0\u884c\u201d\uff08\u200cWrite Once, Run Anywhere\uff0c\u200c\u7b80\u79f0WORA\uff09\u200c\uff0c\u200c\u662f\u5176\u6700\u5927\u7684\u4f18\u52bf\u4e4b\u4e00\uff0c\u200c\u8fd9\u4f7f\u5f97Java\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u5728\u591a\u4e2a\u5e73\u53f0\u4e0a\u8fd0\u884c\uff0c\u200c\u800c\u65e0\u9700\u5bf9\u6bcf\u4e2a\u5e73\u53f0\u8fdb\u884c\u5355\u72ec\u7684\u7f16\u8bd1\u3002 \u672c\u6587\u6863\u6d89\u53ca\u8303\u56f4\u5bf9\u6807\u5927\u5b66\u8ba1\u7b97\u673a\u5927\u4e00\u5165\u95e8\u8bfe\u7a0b\uff0c\u5e2e\u52a9\u5927\u5b66\u5b66\u751f\u4ee5\u53ca\u51c6\u5907\u5b66\u4e60\u7b97\u6cd5\u7ade\u8d5b\u7684\u521d\u9ad8\u4e2d\u751f\uff0c\u5165\u95e8Java\u7f16\u7a0b\u8bed\u8a00\uff0c\u901a\u8fc7\u9488\u5bf9\u6027\u7b97\u6cd5\u8bad\u7ec3\u638c\u63e1\u8bed\u6cd5\u548c\u57fa\u7840\u7b97\u6cd5\uff0c\u4e3a\u4e0b\u4e00\u9636\u6bb5\u5b66\u4e60\u505a\u51c6\u5907\u3002","title":"\u524d\u8a00\uff1a\u4e3a\u4ec0\u4e48\u8981\u5b66\u4e60Java"},{"location":"lesson1/Lesson1%20Java/#1-java","text":"","title":"1. Java\u73af\u5883\u914d\u7f6e"},{"location":"lesson1/Lesson1%20Java/#11-java","text":"Java \u5b98\u65b9\u4e0b\u8f7d\u5730\u5740\uff1a https://www.oracle.com/java/technologies/downloads/ \u70b9\u51fb\u4e0a\u65b9\u94fe\u63a5\u5373\u53ef\u8df3\u8f6c\u5230\u5b98\u7f51\u4e0b\u8f7d\u754c\u9762\uff0c\u6839\u636e\u9700\u8981\u9009\u62e9\u5bf9\u5e94\u914d\u7f6e\u8fdb\u884c\u4e0b\u8f7d\uff01","title":"1.1 Java\u4e0b\u8f7d"},{"location":"lesson1/Lesson1%20Java/#12-java","text":"\u5bf9\u4e8e Windows \u548c Mac \u6765\u8bf4\uff0cJava \u7684\u5b89\u88c5\u6b65\u9aa4\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u5bf9\u5e94\u7684\u5b89\u88c5\u7a0b\u5e8f\uff08.exe/.dmg\uff09\u7136\u540e\u6839\u636e\u6b65\u9aa4\u6765\u8fdb\u884c\u5b89\u88c5\uff1a Mac \u7cfb\u7edf\u7684\u9ed8\u8ba4\u5b89\u88c5\u8def\u5f84\u4e3a\u4e0b\u8ff0\u5730\u5740\uff1a shell ~/Library/Java/JavaVirtualMachines/ Windows \u5728\u5b89\u88c5\u65f6\u6ce8\u610f\u6307\u5b9a\u597d\u5b89\u88c5\u8def\u5f84\u5373\u53ef","title":"1.2 Java\u5b89\u88c5"},{"location":"lesson1/Lesson1%20Java/#13-java","text":"","title":"1.3 Java\u914d\u7f6e"},{"location":"lesson1/Lesson1%20Java/#131-mac","text":"\u5bf9\u4e8eMac \u7cfb\u5217\u7535\u8111\uff0c\u5982\u679c\u662f\u7b2c\u4e00\u6b21\u5b89\u88c5\uff0c\u5728\u4e0b\u8f7d\u5b89\u88c5JDK\u540e\u7cfb\u7edf\u4f1a\u81ea\u52a8\u8fdb\u884c\u914d\u7f6eJava\u73af\u5883\uff0c\u76f4\u63a5\u6839\u636e\u6307\u5f15\u5b89\u88c5\u5373\u53ef\uff0c\u5b89\u88c5\u5b8c\u6bd5\u540e\u8df3\u8f6c\u81f3\u6b65\u9aa41.4\u3002 \u6ce8\u610f\uff0c\u5982\u679c\u5b89\u88c5\u4e86\u591a\u4e2a\u7248\u672c\u7684JDK\uff0c\u5c31\u9700\u8981\u624b\u52a8\u914d\u7f6eJava\u7684\u73af\u5883\u53d8\u91cf\u3002\u8981\u914d\u7f6e $JAVA_HOME \u73af\u5883\u53d8\u91cf\uff0c\u627e\u5230\u4ee5\u4e0b\u4e09\u4e2a\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\uff1a ~/.bash_profile ~/.bashrc ~/.zshrc \u6dfb\u52a0\u4e0b\u9762\u8fd9\u884c\u4ee3\u7801\uff1a shell # \u4ee5 Java8 \u4e3e\u4f8b\uff0c\u5176\u4e2d \"JAVA_HOME=\" \u540e\u9762\u662f \u4f60\u7684Java JDK \u7684\u5b9e\u9645\u5b89\u88c5\u5730\u5740\uff0c\u9700\u8981\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u4fee\u6539 export JAVA_HOME=/Users/xxx/Library/Java/JavaVirtualMachines/corretto-1.8.0_332 export PATH=$JAVA_HOME/bin:$PATH:. export CLASSPATH=$CLASSPATH:$JAVA_HOME/lib","title":"1.3.1 Mac \u7cfb\u7edf\u7535\u8111"},{"location":"lesson1/Lesson1%20Java/#132-windows","text":"\u5bf9\u4e8e windows \u7cfb\u7edf\uff1a \u6253\u5f00\u7cfb\u7edf\u8bbe\u7f6e\uff0c\u70b9\u51fb\u9ad8\u7ea7\u7cfb\u7edf\u8bbe\u7f6e\uff0c\u6253\u5f00\u73af\u5883\u53d8\u91cf\u4ee5\u540e\u70b9\u51fb\u7cfb\u7edf\u53d8\u91cf\u7684\u65b0\u5efa\uff1a\u65b0\u5efa JAVA_HOME \u53d8\u91cf\uff08\u5355\u8bcd\u5927\u5199\uff0c\u7b26\u5408\u662f\u82f1\u6587\uff09\uff0c\u5982\u679c\u662f\u7528\u9ed8\u8ba4\u5b89\u88c5\u8def\u5f84\u53ef\u4ee5\u76f4\u63a5\u590d\u5236\u4f7f\u7528\uff1a \u627e\u5230\u7cfb\u7edf\u53d8\u91cf\u4e2d\u7684 Path \u53d8\u91cf\uff0c\u9009\u4e2d\u7136\u540e\u70b9\u51fb\u7f16\u8f91\uff0c\u7136\u540e\u70b9\u51fb\u65b0\u5efa\uff0c\u8fd9\u91cc\u90fd\u4e00\u6837\uff0c\u53ef\u4ee5\u76f4\u63a5\u590d\u5236\u4f7f\u7528\uff1a shell %JAVA_HOME%\\bin %JAVA_HOME%\\jre\\bin","title":"1.3.2 Windows \u7cfb\u7edf\u7535\u8111"},{"location":"lesson1/Lesson1%20Java/#14","text":"\u6253\u5f00\u7ec8\u7aef\uff0c\u8f93\u5165 java -version \uff0c\u67e5\u770b\u5b89\u88c5\u7248\u672c\uff0c\u8f93\u5165 javac -version \u9a8c\u8bc1JRE\u73af\u5883\uff0c\u4ee3\u8868\u914d\u7f6e\u5b89\u88c5\u5b8c\u6210\u3002","title":"1.4 \u9a8c\u8bc1\u7ed3\u679c"},{"location":"lesson1/Lesson1%20Java/#15-java","text":"","title":"1.5 Java\u7f16\u8bd1&amp;\u8fd0\u884c"},{"location":"lesson1/Lesson1%20Java/#java_1","text":"Java \u7a0b\u5e8f\u7684\u8fd0\u884c\u5fc5\u987b\u7ecf\u8fc7\u7f16\u5199\u3001\u7f16\u8bd1\u548c\u8fd0\u884c 3 \u4e2a\u6b65\u9aa4\u3002 \u7f16\u5199\uff1a\u5728 Java \u5f00\u53d1\u73af\u5883\u4e2d\u7f16\u5199\u7a0b\u5e8f\u4ee3\u7801\uff0c\u5f62\u6210\u540e\u7f00\u540d\u4e3a .java \u7684 Java \u6e90\u6587\u4ef6\u3002 \u7f16\u8bd1\uff1a\u4f7f\u7528 Java \u7f16\u8bd1\u5668\uff08javac \u547d\u4ee4\uff09\u5bf9\u6e90\u6587\u4ef6\u8fdb\u884c\u7f16\u8bd1\uff0c\u5982\u679c\u6e90\u4ee3\u7801\u4e2d\u6ca1\u6709\u8bed\u6cd5\u9519\u8bef\uff0c\u7f16\u8bd1\u5668\u4f1a\u751f\u6210\u540e\u7f00\u540d\u4e3a .class \u7684\u5b57\u8282\u7801\u6587\u4ef6\u3002\u8fd9\u4e2a\u5b57\u8282\u7801\u6587\u4ef6\u662f\u8de8\u5e73\u53f0\u7684\uff0c\u53ef\u4ee5\u5728\u4efb\u4f55\u5b89\u88c5\u4e86 Java \u8fd0\u884c\u73af\u5883\uff08JRE\uff09\u7684\u673a\u5668\u4e0a\u8fd0\u884c\u3002 \u8fd0\u884c\uff1a\u4f7f\u7528 Java \u89e3\u91ca\u5668\uff08java \u547d\u4ee4\uff09\u5bf9\u5b57\u8282\u7801\u6587\u4ef6\u8fdb\u884c\u89e3\u91ca\u8fd0\u884c\uff0c\u5c06\u5b57\u8282\u7801\u7ffb\u8bd1\u6210\u673a\u5668\u4ee3\u7801\u5e76\u6267\u884c\uff0c\u6700\u540e\u663e\u793a\u8fd0\u884c\u7ed3\u679c\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0cJava \u7684\u8de8\u5e73\u53f0\u7279\u6027\u5f97\u5230\u4e86\u5145\u5206\u4f53\u73b0\uff0c\u5373\"\u4e00\u6b21\u7f16\u5199\uff0c\u5230\u5904\u8fd0\u884c\"\u3002","title":"Java\u7684\u8fd0\u884c\u8fc7\u7a0b"},{"location":"lesson1/Lesson1%20Java/#2-hello-world","text":"public class HelloWorld { public static void main(String[] args) { System.out.println(\"Hello, World!\"); } } \u5c06\u4ee5\u4e0a\u4ee3\u7801\u4fdd\u5b58\u4e3a HelloWorld.java \u6587\u4ef6\u3002 \u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528 Java \u7f16\u8bd1\u5668 javac \u5bf9\u6e90\u6587\u4ef6\u8fdb\u884c\u7f16\u8bd1\uff1a \u5bf9\u4e8eMac\u7cfb\u7edf\uff0c\u6253\u5f00 \u7ec8\u7aef \u8f6f\u4ef6\uff0c\u5bf9\u4e8eWindows\u7cfb\u7edf\uff0c\u6253\u5f00 \u547d\u4ee4\u884c \u8f6f\u4ef6 javac HelloWorld.java \u968f\u540e\u5f53\u524d\u76ee\u5f55\u4f1a\u65b0\u751f\u6210\u4e00\u4e2aHelloWorld.class\u6587\u4ef6\uff0c\u8981\u8fd0\u884cJava\u6587\u4ef6\uff0c\u4f7f\u7528\uff1a java HelloWorld \u8fd0\u884c\u6210\u529f\u540e\uff0c\u63a7\u5236\u53f0\u4f1a\u8f93\u51fa \u201cHello, World!\u201d\uff0c\u8fd9\u5c31\u662f\u6211\u4eec\u7684\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u679c\u3002","title":"2. \u7b2c\u4e00\u4e2a\u7a0b\u5e8f\uff1aHello World\uff01"},{"location":"lesson1/Lesson1%20Java/#3-javaide","text":"\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff08Integrated Development Environment\uff0c\u7b80\u79f0IDE\uff09\u662f\u4e00\u79cd\u8f6f\u4ef6\u5de5\u5177\uff0c\u63d0\u4f9b\u4e86\u4e00\u5957\u96c6\u6210\u7684\u529f\u80fd\u548c\u5de5\u5177\uff0c\u7528\u4e8e\u5f00\u53d1\u3001\u7f16\u5199\u3001\u6d4b\u8bd5\u548c\u8c03\u8bd5\u8f6f\u4ef6\u5e94\u7528\u7a0b\u5e8f\u3002 IDE\u901a\u5e38\u5305\u62ec\u4ee5\u4e0b\u6838\u5fc3\u7ec4\u4ef6\uff1a\u4ee3\u7801\u7f16\u8f91\u5668\u3001\u7f16\u8bd1\u5668/\u89e3\u91ca\u5668\u3001\u8c03\u8bd5\u5668\u3001\u6784\u5efa\u5de5\u5177\u3001\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u96c6\u6210\u3001\u56fe\u5f62\u7528\u6237\u754c\u9762\u8bbe\u8ba1\u5668\u3001\u9879\u76ee\u7ba1\u7406\u5de5\u5177\u3002 \u901a\u8fc7\u96c6\u6210\u8fd9\u4e9b\u529f\u80fd\u548c\u5de5\u5177\uff0cIDE\u53ef\u4ee5\u63d0\u9ad8\u5f00\u53d1\u4eba\u5458\u7684\u751f\u4ea7\u529b\uff0c\u7b80\u5316\u5f00\u53d1\u8fc7\u7a0b\uff0c\u5e76\u63d0\u4f9b\u66f4\u597d\u7684\u4ee3\u7801\u8d28\u91cf\u548c\u53ef\u7ef4\u62a4\u6027\u3002IDE\u901a\u5e38\u4e0e\u7279\u5b9a\u7684\u7f16\u7a0b\u8bed\u8a00\u6216\u5f00\u53d1\u5e73\u53f0\u76f8\u5173\uff0c\u4f8b\u5982Java\u5f00\u53d1\u4e2d\u5e38\u7528\u7684Eclipse\u3001IntelliJ IDEA\u548cNetBeans\u7b49\u3002 \u4f01\u4e1a\u4e2d\u4e00\u822c\u91c7\u7528\u96c6\u6210\u5f00\u53d1\u73af\u5883\u8f6f\u4ef6\u4f5c\u4e3aJava\u5f00\u53d1\u5e73\u53f0\u4f7f\u7528\uff0c\u5176\u81ea\u52a8\u5316\u7a0b\u5ea6\u597d\u3001\u7f16\u7a0b\u6548\u7387\u9ad8\uff0c\u53ef\u4ee5\u5927\u5927\u7b80\u5316\u5f00\u53d1\u6d41\u7a0b\uff0c\u63d0\u9ad8\u5f00\u53d1\u6548\u7387\u3002 \u76ee\u524d\u6bd4\u8f83\u5e38\u7528\u7684Java\u96c6\u6210\u5f00\u53d1\u73af\u5883\u6709\uff1a","title":"3. Java\u5e38\u7528\u7684\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff08IDE\uff09"},{"location":"lesson1/Lesson1%20Java/#31-intellij-idea","text":"IntelliJ IDEA\u5b98\u7f51\u4e3a https://www.jetbrains.com.cn/idea/download/ IntelliJ IDEA \u6709\u4e24\u4e2a\u7248\u672c\uff1a\u65d7\u8230\u7248(ULtimate) \u793e\u533a\u7248(Community)\uff0c\u5176\u4e2d\u793e\u533a\u7248\u662f\u514d\u8d39\u7248\u672c\u3002","title":"3.1 IntelliJ IDEA\uff08\u63a8\u8350\uff09"},{"location":"lesson1/Lesson1%20Java/#32-eclipse","text":"Eclipse\u5b98\u7f51\u4e3a https://www.eclipse.org/ Eclipse\u6709\u7740\u591a\u4e2a\u7248\u672c\uff0c\u6bcf\u4e2a\u7248\u672c\u90fd\u6709\u81ea\u5df1\u7279\u5b9a\u7684\u7528\u9014\u548c\u529f\u80fd\uff0c\u4e3b\u8981\u5305\u62ec\u4ee5\u4e0b\u7248\u672c\uff1a \u2460Eclipse for Java Developers\uff1a\u8fd9\u4e2a\u7248\u672c\u9002\u5408Java\u5f00\u53d1\u8005\uff0c\u96c6\u6210\u4e86CVS\uff0cGit\uff0cXML\u7f16\u8f91\u5668\uff0cMylyn\uff0cMaven integration\u548cWindowBuilder\u7b49\u63d2\u4ef6\u3002 \u2461Eclipse for Java EE Developers\uff1a\u8fd9\u4e2a\u7248\u672c\u96c6\u6210\u4e86Java EE\u5f00\u53d1\u5e38\u7528\u63d2\u4ef6\uff0c\u65b9\u4fbf\u52a8\u6001web\u7f51\u7ad9\u5f00\u53d1\uff0c\u9002\u5408Java web\u5f00\u53d1\u8005\u4f7f\u7528\u3002\u96c6\u6210\u4e86XML\u7f16\u8f91\u5668\u3001\u6570\u636e\u5e93\u67e5\u770b\u5de5\u5177\uff0c\u63d0\u4f9bjsp\u53ef\u89c6\u5316\u7f16\u8f91\u5668\u3002 \u2462Eclipse Standard\uff1a\u8fd9\u4e2a\u7248\u672c\u662fEclipse\u6700\u57fa\u7840\u7684\u7248\u672c\uff0c\u9002\u5408Java se\u4e2a\u4eba\u5f00\u53d1\u8005\u3001\u6216\u5e0c\u671b\u6839\u636e\u81ea\u5df1\u9700\u6c42\u914d\u7f6e\u63d2\u4ef6\u7684\u5f00\u53d1\u8005\u4f7f\u7528\u3002","title":"3.2 Eclipse"},{"location":"lesson1/Lesson1%20Java/#33","text":"\u8fd9\u91cc\u4ee5IntelliJ IDEA \u4e3a\u4f8b\u5c55\u793a\u5982\u4f55\u4f7f\u7528IDE\u7f16\u5199\u4f60\u7684\u7b2c\u4e00\u4e2aHello World \u7a0b\u5e8f\uff1a \u9009\u62e9\u65b0\u5efa\u9879\u76ee\uff0c\u5982\u679c\u524d\u5e8f\u6b65\u9aa4\u7684Java JDK\u5b89\u88c5\u6210\u529f\uff0c\u5219\u53ef\u4ee5\u5728JDK\u680f\u6210\u529f\u627e\u5230\u76f8\u5e94JDK\uff0c\u9009\u62e9\u53ef\u4f7f\u7528\u7684JDK\u5e76\u65b0\u5efa\u9879\u76ee\u3002 \u8fdb\u5165\u9879\u76ee\u754c\u9762\uff0c\u53f3\u51fbsrc\u6587\u4ef6\u5939\u5e76\u65b0\u5efa\u4e00\u4e2a\u540d\u4e3aHelloWorld\u7684\u7c7b(class)\uff0csrc\u6587\u4ef6\u5939\u662f\u5b58\u653e\u6e90\u4ee3\u7801\u7684\u4f4d\u7f6e\u3002 \u590d\u5236\u4ee5\u4e0b\u4ee3\u7801\uff1a java public class HelloWorld { public static void main(String[] args) { System.out.println(\"Hello, World!\"); } } \u70b9\u51fb\u8fd0\u884c\u56fe\u6807\u8fd0\u884c\u8be5\u6bb5\u4ee3\u7801\uff1a \u5f53\u70b9\u51fb\u8fd0\u884c\u56fe\u6807\u540e\uff0cIDE\u5b9e\u9645\u4e0a\u5e2e\u52a9\u6211\u4eec\u5b8c\u6210\u4e86\u7f16\u8bd1\u548c\u8fd0\u884c\u4e24\u4e2a\u6b65\u9aa4\uff0c\u5373\u4e0a\u6587\u4e2d\u63d0\u5230\u7684 javac \u548c java \u547d\u4ee4\u3002 \u6210\u529f\u7f16\u8bd1\u5e76\u8fd0\u884c\u540e\uff0c\u63a7\u5236\u53f0\u8f93\u51fa\u5982\u4e0b\u4fe1\u606f\uff1a \u81f3\u6b64\uff0c\u4f60\u5df2\u7ecf\u5b8c\u6210Java\u73af\u5883\u7684\u6240\u6709\u914d\u7f6e\u3002","title":"3.3 \u6837\u4f8b\u5c55\u793a"},{"location":"lesson1/Lesson1%20Java/#4-java","text":"","title":"4. Java\u4e2d\u7684\u6807\u8bc6\u7b26"},{"location":"lesson1/Lesson1%20Java/#41","text":"\u6807\u8bc6\u7b26\u662f\u6307\u7528\u6765\u6807\u8bc6\u67d0\u4e2a\u5b9e\u4f53\u7684\u4e00\u4e2a\u7b26\u53f7\u3002\u5728Java\u8bed\u8a00\u4e2d\uff0c\u4e3b\u8981\u662f\u6307\u5728\u7f16\u7a0b\u65f6\u4f7f\u7528\u7684\u540d\u5b57\u3002\u6807\u8bc6\u7b26\u7684\u4f7f\u7528\u987b\u9075\u5faa\u4e00\u5b9a\u7684\u89c4\u5219\uff1aJava\u4e2d\u7684\u6807\u8bc6\u7b26\u7531\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u4e0b\u5212\u7ebf\u6216\u7f8e\u5143\u7b26\u53f7\u7ec4\u6210\uff0c\u4e14\u5fc5\u987b\u4ee5\u5b57\u6bcd\u3001\u4e0b\u5212\u7ebf\uff08_\uff09\u6216\u7f8e\u5143\u7b26\u53f7\uff08$\uff09\u5f00\u5934\u3002\u89c4\u5219\u603b\u7ed3\u5982\u4e0b\uff1a \u53ef\u4ee5\u5305\u542b\u6570\u5b57\uff0c\u4f46\u4e0d\u80fd\u4ee5\u6570\u5b57\u5f00\u5934\u3002 \u9664\u4e0b\u5212\u7ebf\uff08_\uff09\u548c\u7f8e\u5143\u7b26\u53f7\uff08$\uff09\u4ee5\u5916\uff0c\u4e0d\u5305\u542b\u4efb\u4f55\u5176\u4ed6\u7279\u6b8a\u5b57\u7b26\uff0c\u5982\u7a7a\u683c\u3002 \u4e0d\u80fd\u7528Java\u5173\u952e\u5b57\u6216\u4fdd\u7559\u5b57\u505a\u6807\u8bc6\u7b26\u3002 Java\u6807\u8bc6\u7b26\u5927\u5c0f\u5199\u654f\u611f\u3002 \u5408\u6cd5\u7684\u6807\u8bc6\u7b26\uff0c\u5982\uff1a int a = 3; int _123 = 3; int $12aa = 3; int \u53d8\u91cf1 = 3; //\u4e0d\u5efa\u8bae\u4f7f\u7528\u4e2d\u6587 \u4e0d\u5408\u6cd5\u7684\u6807\u8bc6\u7b26\uff0c\u5982\uff1a int 1a = 3; //\u4e0d\u80fd\u4f7f\u7528\u6570\u5b57\u5f00\u5934 int a# = 3; //\u4e0d\u80fd\u5305\u542b#\u8fd9\u6837\u7684\u7279\u6b8a\u5b57\u7b26 int int = 3; //\u4e0d\u80fd\u4f7f\u7528\u5173\u952e\u5b57 \u6ce8\u610f\uff1a\u867d\u7136Java\u7684\u8bed\u6cd5\u5141\u8bb8\u4f7f\u7528\u4e0b\u5212\u7ebf\uff08_\uff09\u548c\u7f8e\u5143\u7b26\u53f7\uff08$\uff09\u4f5c\u4e3a\u6807\u8bc6\u7b26\u7684\u5f00\u59cb\uff0c\u4f46\u662f\u5728\u5f88\u591a\u4f01\u4e1a\u7684\u5f00\u53d1\u89c4\u8303\u4e2d\u7ea6\u5b9a\uff0c\u4e0d\u80fd\u4f7f\u7528\u8fd9\u4e24\u8005\u4f5c\u4e3a\u6807\u8bc6\u7b26\u7684\u5f00\u59cb\uff0c\u4ee5\u8fbe\u5230\u7edf\u4e00\u6807\u8bc6\u7b26\u683c\u5f0f\uff0c\u51cf\u5c11\u6b67\u4e49\u7684\u6548\u679c\u3002","title":"4.1 \u6807\u8bc6\u7b26"},{"location":"lesson1/Lesson1%20Java/#42","text":"\u5173\u952e\u5b57\u548c\u4fdd\u7559\u5b57\u662fJava\u8bed\u8a00\u4e2d\u5177\u6709\u7279\u6b8a\u542b\u4e49\u7684\u5355\u8bcd\u6216\u7b26\u53f7\u3002\u5173\u952e\u5b57\u662fJava\u8bed\u8a00\u672c\u8eab\u5b9a\u4e49\u7684\uff0c\u7528\u4e8e\u8868\u793a\u7279\u5b9a\u7684\u8bed\u6cd5\u7ed3\u6784\u548c\u64cd\u4f5c\uff0c\u4e0d\u80fd\u7528\u4f5c\u6807\u8bc6\u7b26\uff0c\u5982\u53d8\u91cf\u540d\u3001\u7c7b\u540d\u7b49\u3002 Java\u8bed\u8a00\u5171\u670950\u4e2a\u5173\u952e\u5b57\uff0c\u5982\u4e0b\u6240\u793a\uff1a abstract continue for new switch assert default if package synchronized boolean do goto private this break double implements protected throw byte else import public throws case enum instanceof return transient catch extends int short try char final interface static void class finally long strictfp volatile const float native super while \u8fd9\u4e9b\u5173\u952e\u5b57\u5177\u6709\u56fa\u5b9a\u7684\u8bed\u6cd5\u542b\u4e49\uff0c\u4e0d\u80fd\u88ab\u7528\u4f5c\u53d8\u91cf\u540d\u6216\u5176\u4ed6\u6807\u8bc6\u7b26\u3002 \u4fdd\u7559\u5b57\u662f\u6307\u88ab\u4fdd\u7559\u4f46\u76ee\u524d\u672a\u88ab\u4f7f\u7528\u7684\u5173\u952e\u5b57\uff0c\u5b83\u4eec\u5728Java\u8bed\u8a00\u4e2d\u6ca1\u6709\u7279\u5b9a\u7684\u529f\u80fd\uff0c\u4f46\u4e3a\u4e86\u4fdd\u7559\u672a\u6765\u53ef\u80fd\u4f7f\u7528\u7684\u5173\u952e\u5b57\u800c\u88ab\u4fdd\u7559\u3002 \u6211\u4eec\u5728\u7f16\u5199\u4ee3\u7801\u65f6\u5e94\u907f\u514d\u4f7f\u7528\u5173\u952e\u5b57\u4f5c\u4e3a\u6807\u8bc6\u7b26\uff0c\u4ee5\u514d\u5f15\u53d1\u7f16\u8bd1\u9519\u8bef\u6216\u8bed\u6cd5\u6df7\u6dc6\u3002","title":"4.2 \u5173\u952e\u5b57\u548c\u4fdd\u7559\u5b57"},{"location":"lesson1/Lesson1%20Java/#5-java","text":"","title":"5. Java\u4e2d\u7684\u53d8\u91cf"},{"location":"lesson1/Lesson1%20Java/#51","text":"\u53d8\u91cf\u662fJava\u7a0b\u5e8f\u4e2d\u7684\u57fa\u672c\u5b58\u50a8\u5355\u5143\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u7528\u6765\u5b58\u50a8\u6570\u636e\u3002\u53d8\u91cf\u672c\u8d28\u4e0a\u4ee3\u8868\u4e86\u5185\u5b58\u4e2d\u7684\u4e00\u4e2a\u5b58\u50a8\u7684\u533a\u57df\uff0c\u8fd9\u4e2a\u533a\u57df\u91cc\u7684\u6570\u636e\u5728\u540c\u4e00\u6570\u636e\u7c7b\u578b\u4e2d\u53ef\u4ee5\u4e0d\u65ad\u7684\u53d8\u5316\u3002\u901a\u8fc7\u53d8\u91cf\u53ef\u4ee5\u65b9\u4fbf\u7684\u8bfb\u53d6\u548c\u64cd\u4f5c\u8be5\u533a\u57df\u4e2d\u7684\u6570\u636e\u3002 - \u53d8\u91cf\uff1a\u987e\u540d\u601d\u4e49\uff0c\u4f1a\u53d8\u7684\u91cf\u3002 - \u5e38\u91cf\uff1a\u81ea\u7136\u754c\u4e2d\u89c4\u5b9a\u597d\u4e86\u7684\u3001\u4e0d\u4f1a\u53d8\u7684\u503c\u3002","title":"5.1 \u4ec0\u4e48\u662f\u53d8\u91cf"},{"location":"lesson1/Lesson1%20Java/#52","text":"\u5728Java\u4e2d\uff0c\u9700\u8981\u5148\u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\uff0c\u624d\u80fd\u4f7f\u7528\u8fd9\u4e2a\u53d8\u91cf\u3002\u53d8\u91cf\u7684\u58f0\u660e\u5305\u542b\u4e24\u70b9\uff1a\u53d8\u91cf\u7684\u6570\u636e\u7c7b\u578b\u548c\u53d8\u91cf\u540d\uff0c\u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a \u6570\u636e\u7c7b\u578b \u53d8\u91cf\u540d\uff1b \u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u662fJava\u7684\u4efb\u610f\u6570\u636e\u7c7b\u578b\u4e4b\u4e00\uff1b\u53d8\u91cf\u540d\u5373\u53d8\u91cf\u7684\u540d\u79f0\uff0c\u7528\u4e8e\u5b58\u50a8\u53d8\u91cf\u503c\uff1a int a; char b; \u53ef\u4ee5\u540c\u65f6\u58f0\u660e\u591a\u4e2a\u540c\u4e00\u6570\u636e\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u53d8\u91cf\u4e4b\u95f4\u7528\u201c,\u201d\u9694\u5f00\uff0c\u4f8b\u5982\uff1a int c\uff0cd\uff0ce; \u7b49\u540c\u4e8e\uff1a int c; int d; int e;","title":"5.2 \u53d8\u91cf\u7684\u58f0\u660e"},{"location":"lesson1/Lesson1%20Java/#53","text":"Java\u8bed\u6cd5\u89c4\u5b9a\uff1a\u53d8\u91cf\u5728\u4f7f\u7528\u4e4b\u524d\u5fc5\u987b\u521d\u59cb\u5316\uff0c\u5373\u5fc5\u987b\u7ed9\u8be5\u53d8\u91cf\u8d4b\u4e88\u7279\u5b9a\u7684\u503c\u3002 \u53d8\u91cf\u7684\u7b2c\u4e00\u6b21\u8d4b\u503c\u5373\u5bf9\u53d8\u91cf\u7684\u521d\u59cb\u5316\u3002\u5728Java\u4e2d\uff0c\u4f7f\u7528\u7b49\u53f7(=)\u5b9e\u73b0\u53d8\u91cf\u7684\u8d4b\u503c\u3002 \u53d8\u91cf\u7684\u521d\u59cb\u5316\u6709\u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\uff1a 1\u3001\u5728\u58f0\u660e\u53d8\u91cf\u65f6\uff0c\u540c\u65f6\u5bf9\u53d8\u91cf\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u8bed\u6cd5\u5982\u4e0b\uff1a \u6570\u636e\u7c7b\u578b \u53d8\u91cf\u540d = \u521d\u59cb\u503c\uff1b \u4f8b\u5982\uff1a int f = 5; 2\u3001\u7b2c\u4e00\u6b21\u4f7f\u7528\u53d8\u91cf\u524d\uff0c\u5bf9\u53d8\u91cf\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u8bed\u6cd5\u5982\u4e0b\uff1a \u6570\u636e\u7c7b\u578b \u53d8\u91cf\u540d\uff1b \u2026\u2026 \u53d8\u91cf\u540d = \u521d\u59cb\u503c\uff1b \u4f8b\u5982\uff1a int sum; // \u58f0\u660e\u53d8\u91cfsum System.out.println(sum); // \u62a5\u9519\uff0c\u4e0d\u80fd\u4f7f\u7528\u672a\u8d4b\u503c\u7684\u53d8\u91cf sum = 100; // \u7ed9\u53d8\u91cfsum\u8d4b\u503c System.out.println(sum); // \u6b63\u786e\uff0c\u8f93\u51fa100","title":"5.3 \u53d8\u91cf\u7684\u521d\u59cb\u5316"},{"location":"lesson1/Lesson1%20Java/#54","text":"\u53d8\u91cf\u5728\u58f0\u660e\u548c\u521d\u59cb\u5316\u540e\uff0c\u53ef\u4ee5\u5bf9\u53d8\u91cf\u8fdb\u884c\u8bbf\u95ee\uff0c\u5305\u62ec\u8bfb\u53d6\u53d8\u91cf\u7684\u503c\u548c\u4fee\u6539\u53d8\u91cf\u7684\u503c\u3002\u4ee3\u7801\u5982\u4e0b\uff1a int sum = 100; // \u58f0\u660e\u53d8\u91cfsum System.out.println(sum); // \u8f93\u51fa\u53d8\u91cf\u7684\u503c -> 100 sum = 200; // \u4fee\u6539\u53d8\u91cfsum\u7684\u503c System.out.println(sum); // \u518d\u6b21\u8f93\u51fa\u53d8\u91cf\u7684\u503c -> 200 \u53d8\u91cf\u7684\u8bbf\u95ee\u5e94\u6ce8\u610f\u4ee5\u4e0b\u51e0\u4e2a\u65b9\u9762\uff1a 1\u3001\u53d8\u91cf\u7684\u64cd\u4f5c\u5fc5\u987b\u4e0e\u7c7b\u578b\u5339\u914d\u3002 \u53d8\u91cf\u5728\u58f0\u660e\u65f6\u6307\u5b9a\u4e86\u7c7b\u578b\uff0cJava\u7f16\u8bd1\u5668\u4f1a\u68c0\u6d4b\u5bf9\u8be5\u53d8\u91cf\u7684\u64cd\u4f5c\u662f\u5426\u4e0e\u5176\u4ed6\u7c7b\u578b\u5339\u914d\uff0c\u5982\u679c\u5bf9\u53d8\u91cf\u7684\u8d4b\u503c\u6216\u8005\u64cd\u4f5c\u4e0e\u5176\u7c7b\u578b\u4e0d\u5339\u914d\uff0c\u4f1a\u4ea7\u751f\u7f16\u8bd1\u9519\u8bef\uff0c\u4f8b\u5982\uff1a //\u7f16\u8bd1\u9519\u8bef\uff0c\u53d8\u91cfa\u7684\u7c7b\u578b\u4e3aint\u6574\u578b\uff0c\u4e0d\u80fd\u8d4b\u503c\u4e3a\u6d6e\u70b9\u7c7b\u578b\u7684\u503c int a = 3.14; 2\u3001\u53d8\u91cf\u7684\u6570\u636e\u7c7b\u578b\u53ea\u5199\u4e00\u6b21\u3002 \u53d8\u91cf\u5728\u7b2c\u4e00\u6b21\u58f0\u660e\u7684\u65f6\u5019\u5199\u6570\u636e\u7c7b\u578b\uff0c\u518d\u6b21\u4f7f\u7528\u65f6\u4e0d\u5199\u6570\u636e\u7c7b\u578b\uff0c\u4f8b\u5982\uff1a int n; n = 5; // \u6b63\u786e\uff0c\u518d\u6b21\u4f7f\u7528\u53d8\u91cfn\u65f6\u4e0d\u5199\u6570\u636e\u7c7b\u578b int n = 10; // \u518d\u6b21\u6307\u5b9a\u53d8\u91cf\u7684\u6570\u636e\u7c7b\u578b\u4f1a\u51fa\u73b0\u7f16\u8bd1\u9519\u8bef 3\u3001\u672a\u7ecf\u58f0\u660e\u7684\u53d8\u91cf\u4e0d\u80fd\u4f7f\u7528\u3002 \u53d8\u91cf\u5fc5\u987b\u5148\u58f0\u660e\uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u7f16\u8bd1\u9519\u8bef\uff0c\u4f8b\u5982\uff1a k=5; System.out.println(p); // \u7f16\u8bd1\u9519\u8bef\uff0c\u53d8\u91cf\u6ca1\u6709\u58f0\u660e 4\u3001\u53d8\u91cf\u521d\u59cb\u5316\u540e\u624d\u53ef\u4ee5\u4f7f\u7528\u3002 \u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\uff0c\u5fc5\u987b\u521d\u59cb\u5316\u540e\u624d\u80fd\u4f7f\u7528\uff0c\u4f8b\u5982\uff1a int t; System.out.println(t); // \u53d8\u91cft\u6ca1\u6709\u521d\u59cb\u5316\uff0c\u51fa\u73b0\u7f16\u8bd1\u9519\u8bef","title":"5.4 \u53d8\u91cf\u7684\u8bbf\u95ee"},{"location":"lesson1/Lesson1%20Java/#6-java","text":"Java\u7684\u6570\u636e\u7c7b\u578b\u5206\u4e3a\u4e24\u5927\u7c7b\uff1a\u57fa\u672c\u6570\u636e\u7c7b\u578b\u548c\u5f15\u7528\u6570\u636e\u7c7b\u578b\u3002","title":"6. Java\u7684\u6570\u636e\u7c7b\u578b"},{"location":"lesson1/Lesson1%20Java/#61","text":"Java\u57fa\u672c\u6570\u636e\u7c7b\u578b\u5305\u62ec4\u7c7b8\u79cd\u30024\u7c7b\u5206\u522b\u662f\u6574\u6570\u7c7b\u578b\u3001\u6d6e\u70b9\u6570\u7c7b\u578b\u3001\u5b57\u7b26\u7c7b\u578b\u548c\u5e03\u5c14\u7c7b\u578b\u3002 Java\u4e2d\u6574\u6570\u7c7b\u578b\u5305\u62ec\uff1abyte\u3001short\u3001int \u548clong\u578b\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u533a\u522b\u4ec5\u4ec5\u662f\u5bbd\u5ea6\u548c\u8303\u56f4\u7684\u4e0d\u540c\u3002","title":"6.1 \u57fa\u672c\u6570\u636e\u7c7b\u578b"},{"location":"lesson1/Lesson1%20Java/#611","text":"\u4e00\u4e2abyte\u7c7b\u578b\u7684\u53d8\u91cf\u4ee3\u8868\u7684\u503c\u5360\u75281\u4e2a\u5b57\u8282\u7684\u5185\u5b58\u7a7a\u95f4\uff088\u4f4d\uff09\uff0c\u80fd\u591f\u8868\u793a\u768410\u8fdb\u5236\u6574\u6570\u6570\u636e\u8303\u56f4\u662f\u8d1f128\u5230\u6b63127\uff0c\u5305\u542b0\u3002 \u4e00\u4e2aint\u7c7b\u578b\u7684\u53d8\u91cf\u4ee3\u8868\u7684\u503c\u5360\u75284\u4e2a\u5b57\u8282\u7684\u5185\u5b58\u7a7a\u95f4\uff0832\uff09\u4f4d\uff0c\u80fd\u591f\u8868\u793a\u768410\u8fdb\u5236\u6574\u6570\u6570\u636e\u8303\u56f4\u662f\u8d1f2147483648\u5230\u6b632147483647\uff0c\u5305\u542b0\u3002","title":"6.1.1 \u6574\u6570\u7c7b\u578b"},{"location":"lesson1/Lesson1%20Java/#612","text":"\u6d6e\u70b9\u7c7b\u578b\u4e3b\u8981\u7528\u6765\u50a8\u5b58\u5c0f\u6570\u6570\u503c\uff0c\u4e5f\u53ef\u4ee5\u7528\u6765\u50a8\u5b58\u8303\u56f4\u8f83\u5927\u7684\u6574\u6570\u3002 \u5b83\u5206\u4e3a\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff08float\uff09\u548c\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff08double\uff09\u4e24\u79cd\uff0c\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570\u6bd4\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\u6240\u4f7f\u7528\u7684\u5185\u5b58\u7a7a\u95f4\u66f4\u5927\uff0c\u53ef\u8868\u793a\u7684\u6570\u503c\u8303\u56f4\u4e0e\u7cbe\u786e\u5ea6\u4e5f\u6bd4\u8f83\u5927\u3002","title":"6.1.2 \u6d6e\u70b9\u7c7b\u578b"},{"location":"lesson1/Lesson1%20Java/#613","text":"\u5b57\u7b26\u7c7b\u578b\u8868\u793a\u5355\u4e2a\u5b57\u7b26\uff0cJava\u4e2d\u7684\u5b57\u7b26\u7c7b\u578b\u53d8\u91cf\u4f7f\u7528char\u5173\u952e\u5b57\u8fdb\u884c\u58f0\u660e\uff0c\u800c\u5b57\u7b26\u578b\u5b57\u9762\u91cf\u5fc5\u987b\u7528\u5355\u5f15\u53f7\u62ec\u8d77\u6765\uff0c\u4f8b\u5982\uff1a char c = 'A';","title":"6.1.3 \u5b57\u7b26\u7c7b\u578b"},{"location":"lesson1/Lesson1%20Java/#614","text":"\u5e03\u5c14\u7c7b\u578b\u5728Java\u8bed\u8a00\u4e2d\u4f7f\u7528\u5173\u952e\u5b57boolean \u58f0\u660e\uff0c\u5b83\u53ea\u6709\u4e24\u4e2a\u5b57\u9762\u91cf\uff1atrue\u548cfalse\u3002 \u4e0eC\u8bed\u8a00\u4e0d\u540c\uff0cJava\u4e0d\u5141\u8bb8\u4f7f\u75280\u6216\u975e0\u7684\u6574\u6570\u6765\u4ee3\u66fftrue\u548cfalse\uff0c\u4e5f\u4e0d\u80fd\u5c06\u5176\u4ed6\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u503c\u76f4\u63a5\u8f6c\u6362\u4e3a\u5e03\u5c14\u7c7b\u578b\u3002 \u5e03\u5c14\u7c7b\u578b\u7528\u4e8e\u5224\u65ad\u903b\u8f91\u6761\u4ef6\u7684\u7ed3\u679c\uff0c\u901a\u5e38\u5728\u7a0b\u5e8f\u7684\u5206\u652f\u548c\u5faa\u73af\u63a7\u5236\u8bed\u53e5\u4e2d\u4f7f\u7528\uff0c\u6839\u636e\u903b\u8f91\u5224\u65ad\u7684\u7ed3\u679c\u6765\u51b3\u5b9a\u7a0b\u5e8f\u7684\u6267\u884c\u6d41\u7a0b\u3002 boolean isBig = true; boolean isSmall = false;","title":"6.1.4 \u5e03\u5c14\u7c7b\u578b"},{"location":"lesson1/Lesson1%20Java/#62","text":"\u5f15\u7528\u7c7b\u578b\u662f\u6307\u9664\u57fa\u672c\u6570\u636e\u7c7b\u578b\u4ee5\u5916\u7684\u6240\u6709\u7c7b\u578b\uff0c\u5305\u62ec\u7c7b\u3001\u63a5\u53e3\u3001\u6570\u7ec4\u3001\u679a\u4e3e\u7b49\uff0c\u662f\u9ad8\u9636\u5185\u5bb9\uff0c\u4e0d\u5728\u672c\u6b21\u6559\u5b66\u8303\u56f4\u5185\uff0c\u8fd9\u91cc\u53ea\u9009\u53d6Java\u4e2d\u5e38\u7528\u7684\u4e00\u79cd\u5f15\u7528\u6570\u636e\u7c7b\u578b\u8fdb\u884c\u4ecb\u7ecd\u3002","title":"6.2 \u5f15\u7528\u6570\u636e\u7c7b\u578b"},{"location":"lesson1/Lesson1%20Java/#621","text":"\u5b57\u7b26\u4e32\u7c7b\u578b\u662fJava\u4e2d\u7528\u4e8e\u5b58\u50a8\u591a\u4e2a\u5b57\u7b26\u7684\u6570\u636e\u7c7b\u578b\uff0c\u4f7f\u7528String\u5173\u952e\u5b57\u58f0\u660e\u5b57\u7b26\u4e32\u53d8\u91cf\u3002\u4f8b\u5982\uff1a String str = \"abc\"; \u9700\u8981\u5f3a\u8c03\u4e24\u70b9\uff1a Java\u4e2d\u7684\u5b57\u7b26\u4e32\u7c7b\u578b\u5b57\u9762\u91cf\u662fString\u7c7b\u578b\u7684\uff0c\u800c\u4e0d\u662fchar\u7c7b\u578b\u7684\u3002 String\u7c7b\u578b\u4e0d\u662f\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u800c\u662f\u5f15\u7528\u7c7b\u578b\u3002","title":"6.2.1 \u5b57\u7b26\u4e32\u7c7b\u578b"},{"location":"lesson1/Lesson1%20Java/#63","text":"public class StudentInformation { public static void main(String[] args) { // \u5b66\u751f\u4fe1\u606f int studentId = 12345; String studentName = \"\u8d75\u9547\"; int age = 20; double score = 92.5; char gender = '\u7537'; boolean isMarried = false; // \u8f93\u51fa\u5b66\u751f\u4fe1\u606f System.out.println(\"\u5b66\u751f\u4fe1\u606f\uff1a\"); System.out.println(\"\u5b66\u53f7\uff1a\" + studentId); System.out.println(\"\u59d3\u540d\uff1a\" + studentName); System.out.println(\"\u5e74\u9f84\uff1a\" + age); System.out.println(\"\u6210\u7ee9\uff1a\" + score); System.out.println(\"\u6027\u522b\uff1a\" + gender); System.out.println(\"\u5a5a\u5426\uff1a\" + isMarried); } }","title":"6.3 \u5e38\u7528\u6570\u636e\u7c7b\u578b\u7684\u4f7f\u7528\u5b9e\u4f8b"},{"location":"lesson1/Lesson1%20Java/#7-java","text":"","title":"7. Java\u4e2d\u7684\u8fd0\u7b97\u7b26"},{"location":"lesson1/Lesson1%20Java/#71","text":"\u8fd0\u7b97\u7b26 \uff1a + \uff08\u52a0\uff09\u3001 - \uff08\u51cf\uff09\u3001 * \uff08\u4e58\uff09\u3001 / \uff08\u9664\uff09\u3001 % \uff08\u6c42\u4f59\uff09\u3001 ++ \uff08\u81ea\u589e\uff09\u3001 -- \uff08\u81ea\u51cf\uff09 \u7528\u9014 \uff1a\u6267\u884c\u57fa\u672c\u7684\u6570\u5b66\u8fd0\u7b97 \u793a\u4f8b\u4ee3\u7801 \uff1a java int a = 10; int b = 20; int result = a + b; // 30 a++; // 11","title":"7.1 \u7b97\u672f\u8fd0\u7b97\u7b26"},{"location":"lesson1/Lesson1%20Java/#72","text":"\u8fd0\u7b97\u7b26 \uff1a = \uff08\u7b49\u4e8e\uff09\u3001 += \uff08\u81ea\u52a0\u4e00\u6b21\u7b49\u4e8e\uff09\u3001 -= \uff08\u81ea\u51cf\u4e00\u6b21\u7b49\u4e8e\uff09\u3001 *= \uff08\u81ea\u4e58\u4e00\u6b21\u7b49\u4e8e\uff09\u3001 /= \uff08\u81ea\u9664\u4e00\u6b21\u7b49\u4e8e\uff09\u3001 %= \uff08\u6c42\u6a21\u5e76\u8d4b\u503c\uff09 \u7528\u9014 \uff1a\u5c06\u8ba1\u7b97\u7ed3\u679c\u8d4b\u503c\u7ed9\u53d8\u91cf \u793a\u4f8b\u4ee3\u7801 \uff1a java int x = 10; x += 5; // \u7b49\u540c\u4e8e x = x + 5;","title":"7.2 \u8d4b\u503c\u8fd0\u7b97\u7b26"},{"location":"lesson1/Lesson1%20Java/#73","text":"\u8fd0\u7b97\u7b26 \uff1a < \uff08\u5c0f\u4e8e\uff09\u3001 > \uff08\u5927\u4e8e\uff09\u3001 >= \uff08\u5927\u4e8e\u7b49\u4e8e\uff09\u3001 <= \uff08\u5c0f\u4e8e\u7b49\u4e8e\uff09\u3001 == \uff08\u7b49\u4e8e\uff09\u3001 != \uff08\u4e0d\u7b49\u4e8e\uff09 \u7528\u9014 \uff1a\u6bd4\u8f83\u4e24\u4e2a\u503c\u7684\u5927\u5c0f\u6216\u76f8\u7b49\u6027 \u793a\u4f8b\u4ee3\u7801 \uff1a java int m = 10; int n = 20; boolean result = (m > n); // \u6bd4\u8f83 m \u662f\u5426\u5927\u4e8e n","title":"7.3 \u6bd4\u8f83\u8fd0\u7b97\u7b26"},{"location":"lesson1/Lesson1%20Java/#74","text":"\u8fd0\u7b97\u7b26 \uff1a && \uff08\u77ed\u8def\u4e0e\uff09\u3001 || \uff08\u77ed\u8def\u6216\uff09\u3001 ! \uff08\u975e\uff09 \u7528\u9014 \uff1a\u7ec4\u5408\u5e03\u5c14\u8868\u8fbe\u5f0f\uff0c\u5b9e\u73b0\u903b\u8f91\u8fd0\u7b97 \u793a\u4f8b\u4ee3\u7801 \uff1a java boolean condition1 = true; boolean condition2 = false; boolean result = condition1 && condition2; // \u4f7f\u7528\u77ed\u8def\u4e0e\u8fd0\u7b97\u7b26","title":"7.4 \u903b\u8f91\u8fd0\u7b97\u7b26"},{"location":"lesson1/Lesson1%20Java/#75","text":"\u8fd0\u7b97\u7b26 \uff1a ?: \u7528\u9014 \uff1a\u6839\u636e\u6761\u4ef6\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u9009\u62e9\u4e24\u4e2a\u503c\u4e2d\u7684\u4e00\u4e2a \u8bed\u6cd5 \uff1a result = (condition) ? value1 : value2; \u793a\u4f8b\u4ee3\u7801 \uff1a java int age = 20; String message = (age >= 18) ? \"\u6210\u5e74\u4eba\" : \"\u672a\u6210\u5e74\u4eba\"; // \u6839\u636e\u5e74\u9f84\u5224\u65ad\u6210\u5e74\u4eba\u6216\u672a\u6210\u5e74\u4eba","title":"7.5 \u6761\u4ef6\uff08\u4e09\u76ee\uff09\u8fd0\u7b97\u7b26"},{"location":"lesson1/Lesson1%20Java/#76","text":"\u8fd0\u7b97\u7b26 \uff1a & \uff08\u6309\u4f4d\u4e0e\uff09\u3001 | \uff08\u6309\u4f4d\u6216\uff09\u3001 ^ \uff08\u5f02\u6216\uff09\u3001 ~ \uff08\u975e\u3001\u53d6\u53cd\uff09 \u7528\u9014 \uff1a\u5bf9\u4e8c\u8fdb\u5236\u4f4d\u8fdb\u884c\u64cd\u4f5c \u793a\u4f8b\u4ee3\u7801 \uff1a java int a = 5; // \u4e8c\u8fdb\u5236\u4e3a 101 int b = 3; // \u4e8c\u8fdb\u5236\u4e3a 011 int result = a & b; // \u6309\u4f4d\u4e0e\u64cd\u4f5c","title":"7.6 \u4f4d\u8fd0\u7b97\u7b26"},{"location":"lesson1/Lesson1%20Java/#77","text":"\u8fd0\u7b97\u7b26 \uff1a += , -= , \u7b49 \u7528\u9014 \uff1a\u5c06\u64cd\u4f5c\u7b80\u5316 \u793a\u4f8b \uff1a x += 5 \u7b49\u4ef7\u4e8e x = x + 5","title":"7.7 \u590d\u5408\u8d4b\u503c\u8fd0\u7b97\u7b26"},{"location":"lesson1/Lesson1%20Java/#78","text":"\u8fd0\u7b97\u7b26 \uff1a + \u7528\u9014 \uff1a\u7528\u4e8e\u8fde\u63a5\u5b57\u7b26\u4e32 \u793a\u4f8b\u4ee3\u7801 \uff1a java String str1 = \"Hello, \"; String str2 = \"World!\"; String result = str1 + str2; // \"Hello, World!\" Java\u4e2d\u7684\u8fd0\u7b97\u7b26\u4e0d\u4ec5\u5305\u62ec\u4e0a\u8ff0\u57fa\u672c\u7c7b\u578b\uff0c\u8fd8\u5305\u62ec\u590d\u5408\u8d4b\u503c\u8fd0\u7b97\u7b26\uff0c\u5982 +=, -= \u7b49\uff0c\u6b64\u5916\uff0cJava\u8fd8\u652f\u6301\u5b57\u7b26\u4e32\u8fde\u63a5\u64cd\u4f5c\uff0c\u5176\u4e2d + \u8fd0\u7b97\u7b26\u9664\u4e86\u7528\u4e8e\u6570\u503c\u7684\u52a0\u6cd5\u8fd0\u7b97\u5916\uff0c\u8fd8\u53ef\u4ee5\u7528\u4e8e\u8fde\u63a5\u5b57\u7b26\u4e32\u3002","title":"7.8 \u5b57\u7b26\u4e32\u8fde\u63a5\u8fd0\u7b97\u7b26"},{"location":"lesson1/Lesson1%20Java/#8-java","text":"","title":"8. Java\u7684\u8f93\u5165\u4e0e\u8f93\u51fa"},{"location":"lesson1/Lesson1%20Java/#81-scanner","text":"Scanner \u53ef\u4ee5\u8bfb\u53d6\u7528\u6237\u7684\u952e\u76d8\u8f93\u5165\u3002 \u4f8b\u5982\uff1a import java.util.Scanner; // \u5bfc\u5165 util \u5305 public class scannerReader { public static void main(String[] args) { Scanner sc = new Scanner(System.in); System.out.println(\"\u8bf7\u8f93\u5165\u4f60\u7684\u59d3\u540d\uff1a\"); String name = sc.nextLine(); System.out.println(\"\u8bf7\u8f93\u5165\u4f60\u7684\u5e74\u9f84\uff1a\"); int age = sc.nextInt(); System.out.println(\"\u8bf7\u8f93\u5165\u4f60\u7684\u5de5\u8d44\uff1a\"); float salary = sc.nextFloat(); System.out.println(\"\u4f60\u7684\u4fe1\u606f\u5982\u4e0b\uff1a\"); System.out.println(\"\u59d3\u540d: \" + name + \"\\n\" + \"\u5e74\u9f84\uff1a\" + age + \"\\n\" + \"\u5de5\u8d44\uff1a\" + salary); sc.close(); //\u8c03\u7528\u5173\u95ed\u65b9\u6cd5 } }","title":"8.1 \u4f7f\u7528 Scanner \u8bfb\u53d6\u5b57\u7b26\u4e32/\u6574\u6570/\u6d6e\u70b9\u6570"},{"location":"lesson1/Lesson1%20Java/#82-systemoutprintln","text":"System.out.println() \u53ef\u4ee5\u6253\u5370\u4e00\u884c\u5185\u5bb9\uff0c\u8f93\u51fa\u5b8c\u81ea\u52a8\u6362\u884c\u3002 public class Inputoutput { public static void main(String[] args){ System.out.println(\"hello,java!\"); int a=9; System.out.println(\"output:\"+a); } }","title":"8.2 System.out.println()"},{"location":"lesson1/Lesson1%20Java/#83-systemoutprint","text":"System.out.print() \u53ef\u4ee5\u6253\u5370\u5b57\u7b26\u4e32\u4ee5\u53ca\u5176\u4ed6\u7684\u7c7b\u578b\u3002 public class Inputoutput { public static void main(String[] args){ char c='\u6211';//\u5728Java\u4e2dchar\u6709\u4e24\u5b57\u8282\uff0c\u6240\u4ee5\u53ef\u4ee5\u5b58\u4e2d\u6587 int a=2187; byte b=127; System.out.print(c); System.out.print('\\n'); System.out.print(a); System.out.print(\"output:\"+b); } }","title":"8.3 System.out.print()"},{"location":"lesson1/Lesson1%20Java/#84-inputstreamoutputstream","text":"\u5728 Java \u4e2d\uff0cInputStream \u548c OutputStream \u662f\u4e24\u4e2a\u57fa\u672c\u7684 I/O \u7c7b\uff0c\u7528\u4e8e\u5904\u7406\u5b57\u8282\u6d41\u7684\u8f93\u5165\u548c\u8f93\u51fa\u3002\u5b83\u4eec\u5206\u522b\u662f\u8f93\u5165\u548c\u8f93\u51fa\u64cd\u4f5c\u7684\u57fa\u7c7b\uff0c\u5e76\u4e14\u90fd\u6709\u591a\u4e2a\u5b50\u7c7b\uff0c\u652f\u6301\u4ece\u5404\u79cd\u6570\u636e\u6e90\u8bfb\u53d6\u6570\u636e\u548c\u5c06\u6570\u636e\u5199\u5165\u5404\u79cd\u6570\u636e\u76ee\u6807\u3002\u4ee5\u4e0b\u662f\u5b83\u4eec\u7684\u5173\u7cfb\u3001\u57fa\u7c7b\u3001\u5b50\u7c7b\u53ca\u5176\u5e38\u89c1\u7528\u9014\u7684\u8be6\u7ec6\u4ecb\u7ecd\u3002 InputStream \u548c OutputStream \u7684\u5173\u7cfb\uff1a - InputStream\uff1a\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u8868\u793a\u5b57\u8282\u8f93\u5165\u6d41\u7684\u6240\u6709\u7c7b\u7684\u8d85\u7c7b\u3002\u5b83\u5b9a\u4e49\u4e86\u4ece\u4e0d\u540c\u8f93\u5165\u6e90\uff08\u5982\u6587\u4ef6\u3001\u5185\u5b58\u7f13\u51b2\u533a\u3001\u7f51\u7edc\u8fde\u63a5\uff09\u8bfb\u53d6\u5b57\u8282\u6570\u636e\u7684\u57fa\u672c\u65b9\u6cd5\u3002 - OutputStream\uff1a\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u8868\u793a\u5b57\u8282\u8f93\u51fa\u6d41\u7684\u6240\u6709\u7c7b\u7684\u8d85\u7c7b\u3002\u5b83\u5b9a\u4e49\u4e86\u5411\u4e0d\u540c\u8f93\u51fa\u76ee\u6807\uff08\u5982\u6587\u4ef6\u3001\u5185\u5b58\u7f13\u51b2\u533a\u3001\u7f51\u7edc\u8fde\u63a5\uff09\u5199\u5165\u5b57\u8282\u6570\u636e\u7684\u57fa\u672c\u65b9\u6cd5\u3002 - InputStream \u548c OutputStream \u5e76\u6ca1\u6709\u76f4\u63a5\u7684\u7ee7\u627f\u5173\u7cfb\uff0c\u4f46\u5b83\u4eec\u662f\u4e92\u8865\u7684\uff0c\u5206\u522b\u5904\u7406\u8f93\u5165\u548c\u8f93\u51fa\u64cd\u4f5c\u3002 \u4f8b\u5982\uff1a","title":"8.4 InputStream/OutputStream"},{"location":"lesson1/Lesson1%20Java/#inputstream","text":"import java.io.FileInputStream; import java.io.IOException; import java.io.InputStream; public class InputStreamExample { public static void main(String[] args) { try (InputStream inputStream = new FileInputStream(\"example.txt\")) { int data; while ((data = inputStream.read()) != -1) { System.out.print((char) data); } } catch (IOException e) { e.printStackTrace(); } } }","title":"\u4f7f\u7528 InputStream \u8bfb\u53d6\u6587\u4ef6"},{"location":"lesson1/Lesson1%20Java/#outputstream","text":"import java.io.FileOutputStream; import java.io.IOException; import java.io.OutputStream; public class OutputStreamExample { public static void main(String[] args) { String data = \"Hello, World!\"; try (OutputStream outputStream = new FileOutputStream(\"example.txt\")) { outputStream.write(data.getBytes()); } catch (IOException e) { e.printStackTrace(); } } }","title":"\u4f7f\u7528 OutputStream \u5199\u5165\u6587\u4ef6"},{"location":"lesson1/Lesson1%20Java/#9","text":"Java\u73af\u5883\u5b89\u88c5\u6b63\u5e38\u3002 \u5b8c\u6210\u7b2c\u4e00\u4e2aHello World\u7a0b\u5e8f\u3002 \u8ba4\u8bc6\u53d8\u91cf\u7c7b\u578b\u548c\u547d\u540d\u65b9\u5f0f\u3002 Java\u4e2d\u7684\u8fd0\u7b97\u7b26\u3002 Java\u7684\u8f93\u5165\u4e0e\u8f93\u51fa\u3002","title":"9. \u8bfe\u7a0b\u603b\u7ed3"},{"location":"lesson1/Lesson1%20Java/#_2","text":"","title":"\u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson1/Lesson1%20Java/#_3","text":"1.\u7f16\u5199\u4e00\u4e2aPython\u7a0b\u5e8f\u6765\u627e\u51fa\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u7684\u6700\u5c0f\u6b63\u6574\u6570\uff1a -\u8be5\u6570\u9664\u4ee512\u4f591 -\u8be5\u6570\u9664\u4ee523\u4e5f\u4f591 -\u8be5\u6570\u9664\u4ee531\u4e5f\u4f591 \u8bf7\u5728\u4ee5\u4e0b\u9009\u9879\u4e2d\u9009\u62e9\u4e00\u4e2a\u6b63\u786e\u7684\u7b54\u6848\uff0c\u8be5\u7b54\u6848\u6ee1\u8db3\u4e0a\u8ff0\u6240\u6709\u6761\u4ef6\uff1a (A) 4191 (B) 3232 (C) 8577 (D) 9233 \u53c2\u8003\u7a0b\u5e8f\uff1a import java.util.Scanner; public class FindNumber { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); // \u83b7\u53d6\u7528\u6237\u8f93\u5165\u7684\u9009\u9879 System.out.print(\"\u8bf7\u8f93\u5165\u4e00\u4e2a\u9009\u9879\uff1a\"); int option = scanner.nextInt(); // \u8ba1\u7b97\u4f59\u6570 int a = option % 12; int b = option % 23; int c = option % 31; // \u6253\u5370\u4f59\u6570\u7ed3\u679c System.out.println(\"For option \" + option + \":\"); System.out.println(\"a = \" + a + \", b = \" + b + \", c = \" + c); // \u5224\u65ad\u662f\u5426\u6ee1\u8db3\u6761\u4ef6 if (a == 1 && b == 1 && c == 1) { System.out.println(\"Correct, That's what I find!! The number is: \" + option); } else { System.out.println(\"Wrong, Please try another Answer!\"); } scanner.close(); } } 2.\u7f16\u5199\u4e00\u4e2aJava\u7a0b\u5e8f\uff0c\u7528\u4e8e\u6a21\u62df\u9910\u5385\u7684\u70b9\u5355\u8fc7\u7a0b\u3002\u7a0b\u5e8f\u5e94\u63d0\u524d\u544a\u77e5\u7528\u6237\u6c49\u5821\u3001\u85af\u6761\u548c\u53ef\u4e50\u7684\u4ef7\u683c\uff0c\u5e76\u901a\u8fc7\u7528\u6237\u8f93\u5165\u83b7\u5f97\u70b9\u5355\u4fe1\u606f\u3002\u6700\u540e\uff0c\u7a0b\u5e8f\u5e94\u5206\u884c\u8f93\u51fa\u5ba2\u6237\u70b9\u7684\u5185\u5bb9\uff0c\u5e76\u6253\u5370\u51fa\u603b\u4ef7\u3002 \u4ef7\u683c\u4fe1\u606f\uff1a -\u6c49\u5821\uff1a$5 -\u85af\u6761\uff1a$2 -\u53ef\u4e50\uff1a$1 \u529f\u80fd\u8981\u6c42\uff1a 1.\u663e\u793a\u5404\u9879\u98df\u7269\u7684\u4ef7\u683c\u3002 2.\u63d0\u793a\u7528\u6237\u8f93\u5165\u6bcf\u79cd\u98df\u7269\u7684\u6570\u91cf\u3002 3.\u8ba1\u7b97\u5e76\u663e\u793a\u6bcf\u79cd\u98df\u7269\u7684\u70b9\u5355\u6570\u91cf\u3002 4.\u8ba1\u7b97\u5e76\u663e\u793a\u603b\u4ef7\u3002 \u8f93\u5165\u8f93\u51fa\u793a\u4f8b\uff1a \u793a\u4f8b\u8f93\u51fa\uff1a \u6c49\u5821\uff1a$5 \u85af\u6761\uff1a$2 \u53ef\u4e50\uff1a$1 \u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf\uff1a2 \u8bf7\u8f93\u5165\u85af\u6761\u7684\u6570\u91cf\uff1a1 \u8bf7\u8f93\u5165\u53ef\u4e50\u7684\u6570\u91cf\uff1a3 \u60a8\u7684\u70b9\u5355\u5982\u4e0b\uff1a \u6c49\u5821X 2 \u85af\u6761X 1 \u53ef\u4e50X 3 \u603b\u4ef7\uff1a$15 \u63d0\u793a\uff1a \u4f7f\u7528 Scanner \u51fd\u6570\u83b7\u53d6\u7528\u6237\u8f93\u5165\u3002 \u4f7f\u7528\u7b97\u672f\u8fd0\u7b97\u8ba1\u7b97\u603b\u4ef7\u3002 \u4f7f\u7528 System.out.println() \u51fd\u6570\u8f93\u51fa\u7ed3\u679c\u3002 \u793a\u4f8b\u4ee3\u7801\uff1a import java.util.Scanner; public class RestaurantOrder { public static void main(String[] args) { // \u5b9a\u4e49\u98df\u7269\u7684\u4ef7\u683c int burgerPrice = 5; int friesPrice = 2; int colaPrice = 1; // \u663e\u793a\u4ef7\u683c\u4fe1\u606f System.out.println(\"\u6c49\u5821\uff1a$\" + burgerPrice); System.out.println(\"\u85af\u6761\uff1a$\" + friesPrice); System.out.println(\"\u53ef\u4e50\uff1a$\" + colaPrice + \"\\n\"); // \u83b7\u53d6\u7528\u6237\u8f93\u5165\u7684\u70b9\u5355\u6570\u91cf Scanner scanner = new Scanner(System.in); System.out.print(\"\u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf\uff1a\"); int burgerCount = scanner.nextInt(); System.out.print(\"\u8bf7\u8f93\u5165\u85af\u6761\u7684\u6570\u91cf\uff1a\"); int friesCount = scanner.nextInt(); System.out.print(\"\u8bf7\u8f93\u5165\u53ef\u4e50\u7684\u6570\u91cf\uff1a\"); int colaCount = scanner.nextInt(); // \u8ba1\u7b97\u603b\u4ef7 int totalPrice = burgerCount * burgerPrice + friesCount * friesPrice + colaCount * colaPrice; // \u8f93\u51fa\u70b9\u5355\u5185\u5bb9\u548c\u603b\u4ef7 System.out.println(\"\\n\u60a8\u7684\u70b9\u5355\u5982\u4e0b\uff1a\"); System.out.println(\"\u6c49\u5821 X \" + burgerCount); System.out.println(\"\u85af\u6761 X \" + friesCount); System.out.println(\"\u53ef\u4e50 X \" + colaCount); System.out.println(\"\\n\u603b\u4ef7\uff1a$\" + totalPrice); scanner.close(); } }","title":"\u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson1/Lesson1%20Python/","text":"Lesson 1 Python\u7684\u73af\u5883\u8bbe\u7f6e\u3001\u6570\u636e\u7c7b\u578b\u3001\u8fd0\u7b97\u7b26\u548c\u8f93\u5165\u548c\u8f93\u51fa \u76ee\u5f55 Lesson 1 Python\u7684\u73af\u5883\u8bbe\u7f6e\u3001\u6570\u636e\u7c7b\u578b\u3001\u8fd0\u7b97\u7b26\u548c\u8f93\u5165\u548c\u8f93\u51fa \u524d\u8a00\uff1a\u4e3a\u4ec0\u4e48\u8981\u5b66\u4e60Python 1. Python\u73af\u5883\u8bbe\u7f6e 1.1 \u4e3a\u4ec0\u4e48\u9009\u62e9Anaconda 1.2 Anaconda \u5b89\u88c5 1.2.1 macOS \u5e73\u53f0 1.2.2 Win \u5e73\u53f0 1.3 Pycharm\u5b89\u88c5 2. \u7b2c\u4e00\u4e2a\u7a0b\u5e8f\uff1aHello World\uff01 3. Python\u5e38\u7528\u7684\u5f00\u53d1\u73af\u5883\uff08IDE\uff09 3.1 PyCharm 3.2 Visual Studio Code 3.3 Jupyter Notebook 4. Python\u4e2d\u7684\u6807\u8bc6\u7b26 4.1 \u6807\u8bc6\u7b26 4.2 Python \u4fdd\u7559\u5b57\u7b26 4.3 \u6ce8\u91ca 4.4 \u884c\u548c\u7f29\u8fdb 5. Python\u4e2d\u7684\u53d8\u91cf 5.1 \u591a\u4e2a\u53d8\u91cf\u8d4b\u503c 6. Python\u7684\u6570\u636e\u7c7b\u578b 6.1 \u57fa\u672c\u6570\u636e\u7c7b\u578b 6.1.1 \u6570\u5b57\u7c7b\u578b 6.1.2 \u5b57\u7b26\u4e32 6.1.3 bool\uff08\u5e03\u5c14\u7c7b\u578b\uff09 6.1.4 List\uff08\u5217\u8868\uff09 6.1.5 Tuple\uff08\u5143\u7ec4\uff09 6.1.6 Set\uff08\u96c6\u5408\uff09 6.1.7 Dictionary\uff08\u5b57\u5178\uff09 6.2 \u5e38\u7528\u6570\u636e\u7c7b\u578b\u7684\u4f7f\u7528\u5b9e\u4f8b 7. Python\u4e2d\u7684\u8fd0\u7b97\u7b26 7.1 Python\u7b97\u672f\u8fd0\u7b97\u7b26 7.2 Python \u6bd4\u8f83\u8fd0\u7b97\u7b26 7.3 Python\u8d4b\u503c\u8fd0\u7b97\u7b26 7.4 Python\u4f4d\u8fd0\u7b97\u7b26 7.5 Python\u903b\u8f91\u8fd0\u7b97\u7b26 7.6 Python\u6210\u5458\u8fd0\u7b97\u7b26 7.7 Python\u8eab\u4efd\u8fd0\u7b97\u7b26 8. Python\u7684\u8f93\u5165\u4e0e\u8f93\u51fa 8.1 \u4f7f\u7528 input \u8bfb\u53d6\u5b57\u7b26\u4e32/\u6574\u6570/\u6d6e\u70b9\u6570 8.2 print \u8f93\u51fa 9. \u8bfe\u7a0b\u603b\u7ed3 \u8bfe\u540e\u7ec3\u4e60 \u524d\u8a00\uff1a\u4e3a\u4ec0\u4e48\u8981\u5b66\u4e60Python \u6613\u4e8e\u5b66\u4e60\uff1aPython\u8bed\u6cd5\u7b80\u5355\uff0c\u9002\u5408\u521d\u5b66\u8005\u3002 \u5e94\u7528\u5e7f\u6cdb\uff1a\u53ef\u7528\u4e8e\u6570\u636e\u5206\u6790\u3001\u7f51\u7ad9\u5f00\u53d1\u3001\u81ea\u52a8\u5316\u7b49\u3002 \u4e30\u5bcc\u7684\u5e93\u652f\u6301\uff1a\u63d0\u4f9b\u5927\u91cf\u73b0\u6210\u7684\u5de5\u5177\u548c\u529f\u80fd\uff0c\u65b9\u4fbf\u5feb\u901f\u5f00\u53d1\u3002 1. Python\u73af\u5883\u8bbe\u7f6e 1.1 \u4e3a\u4ec0\u4e48\u9009\u62e9Anaconda \u65b9\u4fbf\u5b89\u88c5\uff1a \u5b89\u88c5 Anaconda\u5c31\u50cf\u5b89\u88c5\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4e00\u6837\u7b80\u5355\uff0c\u5b83\u4e3a\u60a8\u9884\u5148\u5b89\u88c5\u597d\u4e86\u8bb8\u591a\u5e38\u7528\u7684\u5de5\u5177\uff0c\u65e0\u9700\u5355\u72ec\u914d\u7f6e\u3002 \u5305\u7ba1\u7406\u5668\uff1a Anaconda \u5305\u542b\u4e00\u4e2a\u540d\u4e3a Conda \u7684\u5305\u7ba1\u7406\u5668\uff0c\u7528\u4e8e\u5b89\u88c5\u3001\u66f4\u65b0\u548c\u7ba1\u7406\u8f6f\u4ef6\u5305\u3002Conda \u4e0d\u4ec5\u9650\u4e8e Python\uff0c\u8fd8\u652f\u6301\u591a\u79cd\u5176\u4ed6\u8bed\u8a00\u7684\u5305\u7ba1\u7406\u3002 \u73af\u5883\u7ba1\u7406\uff1a \u4f7f\u7528 Anaconda\uff0c\u60a8\u53ef\u4ee5\u8f7b\u677e\u5730\u521b\u5efa\u548c\u7ba1\u7406\u591a\u4e2a\u72ec\u7acb\u7684 Python \u73af\u5883\uff0c\u7136\u540e\u5b9e\u73b0\u81ea\u7531\u5207\u6362\u3002\u8fd9\u5bf9\u4e8e\u5728\u4e0d\u540c\u9879\u76ee\u4e2d\u4f7f\u7528\u4e0d\u540c\u7684\u5e93\u548c\u5de5\u5177\u7248\u672c\u975e\u5e38\u6709\u7528\uff0c\u4ee5\u907f\u514d\u7248\u672c\u51b2\u7a81\u3002 \u96c6\u6210\u5de5\u5177\u548c\u5e93\uff1a Anaconda \u6346\u7ed1\u4e86\u8bb8\u591a\u7528\u4e8e\u6570\u636e\u79d1\u5b66\u3001\u673a\u5668\u5b66\u4e60\u548c\u79d1\u5b66\u8ba1\u7b97\u7684\u91cd\u8981\u5de5\u5177\u548c\u5e93\uff0c\u5982 NumPy\u3001Pandas\u3001Matplotlib\u3001SciPy\u3001Scikit-learn \u7b49\u3002 Jupyter \u7b14\u8bb0\u672c\uff1a Jupyter \u662f\u4e00\u4e2a\u4ea4\u4e92\u5f0f\u7684\u8ba1\u7b97\u73af\u5883\uff0c\u652f\u6301\u591a\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u4f46\u5728 Anaconda \u4e2d\u4e3b\u8981\u7528\u4e8e Python\u3002\u5b83\u5141\u8bb8\u7528\u6237\u521b\u5efa\u548c\u5171\u4eab\u5305\u542b\u5b9e\u65f6\u4ee3\u7801\u3001\u65b9\u7a0b\u5f0f\u3001\u53ef\u89c6\u5316\u548c\u53d9\u8ff0\u6587\u672c\u7684\u6587\u6863\u3002 \u8de8\u5e73\u53f0\u6027\uff1a Anaconda \u53ef\u5728 Windows\u3001macOS \u548c Linux \u7b49\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u8fd0\u884c\uff0c\u4f7f\u5176\u6210\u4e3a\u4e00\u4e2a\u8de8\u5e73\u53f0\u7684\u89e3\u51b3\u65b9\u6848\u3002 \u793e\u533a\u652f\u6301\uff1a Anaconda \u62e5\u6709\u5e9e\u5927\u7684\u793e\u533a\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u793e\u533a\u8bba\u575b\u4e0a\u83b7\u53d6\u5e2e\u52a9\u3001\u5206\u4eab\u7ecf\u9a8c\u548c\u89e3\u51b3\u95ee\u9898\u3002 1.2 Anaconda \u5b89\u88c5 Anaconda \u5b89\u88c5\u5305\u4e0b\u8f7d\u5730\u5740\uff1ahttps://www.anaconda.com/download\u3002 Anaconda \u53ef\u5728 Windows\u3001macOS \u548c Linux \u7b49\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u8fd0\u884c\uff0c\u4f60\u53ef\u4ee5\u6839\u636e\u4e0d\u540c\u5e73\u53f0\u4e0b\u8f7d\u5b89\u88c5\u5305\uff1a 1.2.1 macOS \u5e73\u53f0 \u5b89\u88c5\u8fc7\u7a0b\u4e5f\u5f88\u7b80\u5355\uff0c\u53cc\u51fb\u6253\u5f00\u4e0b\u8f7d\u7684\u5b89\u88c5\u5305\uff0c\u9009\u62e9 Install for me only : \u70b9\u51fb install \u6309\u94ae\uff1a \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u70b9\u51fb Continue \u6309\u94ae\uff0c\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u770b\u5230\u5b89\u88c5\u5b8c\u6210\u7684\u754c\u9762\uff1a macOS \u5e73\u53f0\u5b89\u88c5\u53ef\u4ee5\u53c2\u8003\u5b98\u7f51\uff1ahttps://docs.anaconda.com/free/anaconda/install/mac-os/ 1.2.2Win \u5e73\u53f0 Win \u5e73\u53f0\u4e0e macOS \u7c7b\u4f3c\uff0c\u5728\u4e0b\u8f7d\u5b89\u88c5\u5305\u540e\uff0c\u53cc\u51fb\u5b89\u88c5\u5305\uff0c\u540c\u610f\u4e00\u4e9b\u534f\u8bae\uff0c\u7b80\u5355\u7684\u5c31\u53ef\u4ee5\u6309\u9ed8\u8ba4\u8bbe\u7f6e\u4e00\u6b65\u6b65\u6309 Next \u6309\u94ae\u5c31\u53ef\u4ee5\u3002 \u9009\u62e9\u5b89\u88c5\u76ee\u5f55\uff1a \u5728 \"Advanced Installation Options\" \u4e2d\u4e0d\u8981\u52fe\u9009 \"Add Anaconda to my PATH environment variable.\"\uff08\"\u6dfb\u52a0Anaconda\u81f3\u6211\u7684\u73af\u5883\u53d8\u91cf\u3002\"\uff09\uff0c\u56e0\u4e3a\u5982\u679c\u52fe\u9009\uff0c\u5219\u5c06\u4f1a\u5f71\u54cd\u5176\u4ed6\u7a0b\u5e8f\u7684\u4f7f\u7528\u3002 \u70b9\u51fb Install \u6309\u94ae\u8fdb\u884c\u5b89\u88c5\uff0c\u5b89\u88c5\u6210\u529f\u51fa\u73b0\u5982\u4e0b\u754c\u9762\uff1a \u70b9\u51fb Next \u6309\u94ae\uff1a Win \u5e73\u53f0\u5b89\u88c5\u53ef\u4ee5\u53c2\u8003\u5b98\u7f51\uff1ahttps://docs.anaconda.com/free/anaconda/install/windows/ 1.2 Pycharm\u5b89\u88c5 \u6211\u4eec\u76f4\u63a5\u6253\u5f00pycharm\u5b98\u7f51\u8fdb\u884c\u4e0b\u8f7d\u5b89\u88c5\uff1ahttps://www.jetbrains.com/pycharm/download/ \u9875\u9762\u5f80\u4e0b\u6ed1\u5230\u5e95\uff0c\u4e0b\u8f7d\u8fd9\u4e2a\u514d\u8d39\u7684\u793e\u533a\u7248\uff0c mac\u7528\u6237\u53ea\u9700\u4e0b\u8f7d\u540e\u8fdb\u884c\u62d6\u62fd\u5b89\u88c5\u5c31\u53ef\u4ee5\u6253\u5f00\u4e86\u3002 \u5982\u679c\u662fwin\u7528\u6237\uff0c\u5b89\u88c5\u65f6\u9700\u8981\u6ce8\u610f\u81ea\u5df1\u7684\u5b89\u88c5\u4f4d\u7f6e\uff08\u5982\u679cC\u76d8\u592a\u5c0f\u4e0d\u5efa\u8bae\u653eC\u76d8\uff0c\u4e00\u822c\u9009\u62e964\u4f4d\u5b89\u88c5\uff0c\u6839\u636e\u81ea\u5df1\u7535\u8111\u5b9e\u9645\u9700\u6c42\uff09\uff0c\u5176\u4ed6\u9009\u9879\u4e00\u822c\u9ed8\u8ba4\u5373\u53ef\u3002 \u76f4\u63a5\u6253\u5f00Pycharm\uff0c\u6216\u8005\u5728Anaconda\u4e2d\u6253\u5f00Pycharm\u793e\u533a\u7248 \u4e00\u822c\u7b2c\u4e00\u6b21\u6253\u5f00\u6211\u4eec\u65b0\u5efa\u4e00\u4e2a\u9879\u76ee\u5c31\u53ef\u4ee5\uff0c\u4e00\u4e2a\u9879\u76ee\u662f\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u91cc\u9762\u521b\u5efa\u591a\u4e2a\u6587\u4ef6 \u5728Anaconda\u5b89\u88c5\u597d\u7684\u60c5\u51b5\u4e0b\uff0c\u9009\u62e9\u57fa\u4e8econda\u7684\u73af\u5883\uff0c\u5176\u4ed6\u6240\u6709\u9009\u9879\u9ed8\u8ba4\u5373\u53ef\uff0c\u70b9\u51fb\u53f3\u4e0b\u89d2\u521b\u5efa\u7b2c\u4e00\u4e2a\u9879\u76ee\u3002 \u7136\u540e\u70b9\u51fb\u521b\u5efa\uff0c\u6211\u4eec\u5728:\u6587\u4ef6\u5939\u7684\u4f4d\u7f6e\u53f3\u51fb\u521b\u5efa\u4e00\u4e2a\u65b0\u7684python\u6587\u4ef6\uff0c\u5f00\u59cb\u6211\u4eec\u7684\u7b2c\u4e00\u6bb5\u4ee3\u7801\u3002 2. \u7b2c\u4e00\u4e2a\u7a0b\u5e8f\uff1aHello World\uff01 \u5f97\u76ca\u4e8ePython\u7b80\u5355\u7684\u8bed\u6cd5\u548c\u9ad8\u7684\u53ef\u8bfb\u6027\uff0c\u53ea\u9700\u4e00\u884c\u5373\u53ef\u5b8c\u6210\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\u3002 print(\"Hello World\") \u6211\u4eec\u5728\u8f93\u5165\u8fd9\u4e00\u884c\u4ee3\u7801\u540e\uff0c\u53ea\u9700\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684\u8fd0\u884c\uff0c\u5373\u53ef\u5728\u63a7\u5236\u53f0\u770b\u5230\u6211\u4eec\u7684\u8f93\u51fa\u3002 3. Python\u5e38\u7528\u7684\u5f00\u53d1\u73af\u5883\uff08IDE\uff09 \u96c6\u6210\u5f00\u53d1\u73af\u5883\uff08IDE\uff09\u4e13\u4e3a\u8f6f\u4ef6\u5f00\u53d1\u800c\u8bbe\u8ba1\uff0c\u63d0\u4f9b\u591a\u79cd\u529f\u80fd\u4ee5\u7b80\u5316\u5f00\u53d1\u8fc7\u7a0b\u3002\u5bf9\u4e8e Python \u6765\u8bf4\uff0c\u6709\u5404\u79cd\u53ef\u7528\u7684 IDE\uff0c\u6bcf\u4e2a IDE \u90fd\u63d0\u4f9b\u72ec\u7279\u7684\u4f18\u52bf\u548c\u529f\u80fd\u6765\u6ee1\u8db3\u4e0d\u540c\u7684\u5f00\u53d1\u9700\u6c42\u3002 3.1 PyCharm PyCharm \u662f JetBrains \u5f00\u53d1\u7684\u4e00\u6b3e\u529f\u80fd\u5f3a\u5927\u7684 Python IDE\uff0c\u4e13\u4e3a Python \u5f00\u53d1\u4eba\u5458\u7684\u9700\u6c42\u800c\u91cf\u8eab\u5b9a\u5236\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u5168\u9762\u7684\u529f\u80fd\uff0c\u5305\u62ec\uff1a \u667a\u80fd\u4ee3\u7801\u5b8c\u6210 \uff1aPyCharm \u63d0\u4f9b\u4e0a\u4e0b\u6587\u611f\u77e5\u7684\u4ee3\u7801\u5b8c\u6210\uff0c\u53ef\u5efa\u8bae\u4ee3\u7801\u7247\u6bb5\u3001\u5e93\u548c\u53d8\u91cf\u540d\u79f0\u3002 \u9519\u8bef\u68c0\u6d4b\u548c\u5feb\u901f\u4fee\u590d \uff1aPyCharm \u5b9e\u65f6\u626b\u63cf\u4ee3\u7801\uff0c\u68c0\u6d4b\u9519\u8bef\u5e76\u63d0\u4f9b\u5feb\u901f\u4fee\u590d\u5efa\u8bae\u3002 \u5355\u5143\u6d4b\u8bd5\u96c6\u6210 \uff1aPyCharm \u4e0e\u6d41\u884c\u7684\u5355\u5143\u6d4b\u8bd5\u6846\u67b6\uff08\u5982 pytest \u548c nose\uff09\u96c6\u6210\uff0c\u5141\u8bb8\u8f7b\u677e\u8fd0\u884c\u548c\u8c03\u8bd5\u6d4b\u8bd5\u3002 \u7248\u672c\u63a7\u5236\u96c6\u6210 \uff1aPyCharm \u652f\u6301\u6d41\u884c\u7684\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff08\u5982 Git \u548c Mercurial\uff09\uff0c\u7b80\u5316\u4e86\u534f\u4f5c\u548c\u4ee3\u7801\u7ba1\u7406\u3002 \u5f3a\u5927\u7684\u8c03\u8bd5\u5668 \uff1aPyCharm \u63d0\u4f9b\u4e86\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684\u8c03\u8bd5\u5668\uff0c\u53ef\u7528\u4e8e\u9010\u6b65\u6267\u884c\u4ee3\u7801\u3001\u8bbe\u7f6e\u65ad\u70b9\u548c\u68c0\u67e5\u53d8\u91cf\u503c\u3002 \u4f18\u70b9 \uff1a \u5e7f\u6cdb\u7684\u529f\u80fd\u96c6 \u7528\u6237\u53cb\u597d\u754c\u9762 \u51fa\u8272\u7684\u4ee3\u7801\u5b8c\u6210\u548c\u9519\u8bef\u68c0\u6d4b \u4e0e\u5176\u4ed6\u5de5\u5177\u548c\u63d2\u4ef6\u7684\u65e0\u7f1d\u96c6\u6210 \u7f3a\u70b9 \uff1a \u53ef\u80fd\u6709\u70b9\u8d35\uff08\u4e13\u4e1a\u7248\uff09\uff0c\u5c24\u5176\u662f\u5bf9\u4e8e\u521d\u5b66\u8005 \u5927\u578b:\u53ef\u80fd\u4f1a\u51cf\u6162\u901f\u5ea6 3.2 Visual Studio Code Visual Studio Code (VSCode) \u662f Microsoft \u5f00\u53d1\u7684\u4e00\u4e2a\u514d\u8d39\u4e14\u5f00\u6e90\u7684\u8de8\u5e73\u53f0 IDE\u3002\u5b83\u662f Python \u5f00\u53d1\u4eba\u5458\u4e2d\u6700\u53d7\u6b22\u8fce\u7684\u9009\u62e9\u4e4b\u4e00\uff0c\u5176\u7279\u70b9\u5305\u62ec\uff1a \u8f7b\u91cf\u7ea7\u548c\u5feb\u901f \uff1aVSCode \u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684 IDE\uff0c\u5728\u542f\u52a8\u548c\u52a0\u8f7d:\u65f6\u975e\u5e38\u5feb\u3002 \u5b9a\u5236\u5316\u7a0b\u5ea6\u9ad8 \uff1aVSCode \u5141\u8bb8\u7528\u6237\u901a\u8fc7\u4e3b\u9898\u3001\u6269\u5c55\u548c\u8bbe\u7f6e\u5bf9 IDE \u8fdb\u884c\u9ad8\u5ea6\u5b9a\u5236\u3002 \u5185\u7f6e\u8c03\u8bd5\u5668 \uff1aVSCode \u63d0\u4f9b\u4e86\u4e00\u4e2a\u5185\u7f6e\u8c03\u8bd5\u5668\uff0c\u53ef\u7528\u4e8e\u8c03\u8bd5\u4ee3\u7801\u5e76\u8bbe\u7f6e\u65ad\u70b9\u3002 \u7ec8\u7aef\u96c6\u6210 \uff1aVSCode \u96c6\u6210\u4e86\u4e00\u4e2a\u7ec8\u7aef\uff0c\u5141\u8bb8\u7528\u6237\u5728 IDE \u4e2d\u8f7b\u677e\u8fd0\u884c\u547d\u4ee4\u548c\u811a\u672c\u3002 \u4ee3\u7801\u7247\u6bb5\u548c\u4ee3\u7801\u8f85\u52a9 \uff1aVSCode \u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u4ee3\u7801\u7247\u6bb5\u5e93\u548c\u4ee3\u7801\u8f85\u52a9\u529f\u80fd\uff0c\u4ee5\u52a0\u5feb\u5f00\u53d1\u901f\u5ea6\u3002 \u4f18\u70b9 \uff1a \u514d\u8d39\u4e14\u5f00\u6e90 \u8f7b\u91cf\u7ea7\u4e14\u5feb\u901f \u9ad8\u5ea6\u53ef\u5b9a\u5236 \u5e9e\u5927\u7684\u6269\u5c55\u751f\u6001\u7cfb\u7edf \u7f3a\u70b9 \uff1a IDE\u53ef\u80fd\u6ca1\u6709\u5305\u542b\u4e00\u4e9b\u5728\u5176\u4ed6IDE\u4e2d\u5e38\u89c1\u7684\u539f\u751f\u7279\u6027\u6216\u529f\u80fd\uff0c\u67d0\u4e9b\u9ad8\u7ea7\u529f\u80fd\u9700\u8981\u5b89\u88c5\u6269\u5c55\uff0c\u5bf9\u65b0\u624b\u4e0d\u53cb\u597d 3.3 Jupyter Notebook Jupyter Notebook \u662f\u4e00\u4e2a\u57fa\u4e8e\u6d4f\u89c8\u5668\u7684\u4ea4\u4e92\u5f0f\u7b14\u8bb0\u672c\u73af\u5883\uff0c\u975e\u5e38\u9002\u5408\u63a2\u7d22\u6570\u636e\u3001\u539f\u578b\u8bbe\u8ba1\u548c\u521b\u5efa\u53ef\u91cd\u590d\u7684\u6587\u6863\u3002Python \u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\uff1a \u6267\u884c\u4ee3\u7801\u5757 \uff1aNotebook \u5141\u8bb8\u7528\u6237\u7f16\u5199\u5e76\u6267\u884c Python \u4ee3\u7801\u5757\uff0c\u5e76\u5728\u5355\u72ec\u7684\u5355\u5143\u683c\u4e2d\u67e5\u770b\u7ed3\u679c\u3002 \u53ef\u89c6\u5316\u6570\u636e \uff1aNotebook \u96c6\u6210\u4e86\u5404\u79cd\u53ef\u89c6\u5316\u5e93\uff0c\u5141\u8bb8\u7528\u6237\u521b\u5efa\u4ea4\u4e92\u5f0f\u53ef\u89c6\u5316\u548c\u56fe\u8868\u3002 \u6587\u6863\u548c\u534f\u4f5c \uff1aNotebook \u63d0\u4f9b\u4e86\u4e00\u4e2a\u6807\u8bb0\u8bed\u8a00\uff0c\u5141\u8bb8\u7528\u6237\u521b\u5efa\u4ea4\u4e92\u5f0f\u3001\u53ef\u6587\u6863\u5316\u7684\u6587\u6863\u3002 \u5206\u4eab\u548c\u5d4c\u5165 \uff1aNotebook \u53ef\u4ee5\u8f7b\u677e\u5171\u4eab\u548c\u5d4c\u5165\u5230\u5176\u4ed6\u5e73\u53f0\u4e2d\uff0c\u4f8b\u5982\u535a\u5ba2\u548c\u7f51\u7ad9\u3002 \u4f18\u70b9 \uff1a \u4ea4\u4e92\u5f0f\u548c\u63a2\u7d22\u6027 \u6613\u4e8e\u521b\u5efa\u53ef\u91cd\u590d\u7684\u6587\u6863 \u9002\u7528\u4e8e\u6570\u636e\u79d1\u5b66\u548c\u673a\u5668\u5b66\u4e60\u4efb\u52a1 \u7f3a\u70b9 \uff1a \u5bf9\u4e8e\u5927\u578b\u9879\u76ee\u53ef\u80fd\u4e0d\u9002\u5408 \u7f3a\u4e4f\u67d0\u4e9b IDE \u4e2d\u53d1\u73b0\u7684\u8c03\u8bd5\u548c\u7248\u672c\u63a7\u5236\u529f\u80fd Pycharm\u76f8\u6bd4\u4e8eVS Code\u6700\u597d\u7684\u70b9\u5728\u4e8e\u529f\u80fd\u5168\u9762\u4e14\u5f00\u7bb1\u5373\u7528\uff0c\u800cVSCode\u53ef\u80fd\u8fd8\u8981\u4e0b\u8f7d\u4e00\u4e9b\u63d2\u4ef6\u73af\u5883\u6216\u8005\u8fdb\u884c\u989d\u5916\u914d\u7f6e\u3002VSCode\u597d\u5728\u63d2\u4ef6\u793e\u533a\u5f3a\u5927\uff0c\u56e0\u6b64\u652f\u6301\u6700\u65b0\u7684\u5982GitHub Copilot\u7684\u5927\u6a21\u578b\u81ea\u52a8\u8865\u5145\u529f\u80fd\u3002Jupyter\u7684\u7279\u70b9\u662f\u53ef\u4ee5\u6bcf\u5199\u4e00\u884c\u5c31\u770b\u5230\u6267\u884c\u7684\u7ed3\u679c\uff0c\u6bd4\u5176\u4ed6\u4e24\u4e2a\u7f16\u8f91\u5668\u66f4\u9002\u5408\u5f00\u53d1\u590d\u6742\u7684\u6d41\u7a0b\u3002 Anaconda\u56e0\u5176\u5168\u9762\u7684\u96c6\u6210\uff0c\u5bf9\u4e8e\u521d\u5b66\u8005\u662f\u6781\u5176\u53cb\u597d\u7684\uff0c\u867d\u7136\u529f\u80fd\u4e0a\u4f1a\u6709\u4e9b\u5197\u4f59\uff0c\u4f46\u5176\u7b80\u5355\u7684\u73af\u5883\u914d\u7f6e\u4ee5\u53ca\u5168\u9762\u7684\u529f\u80fd\u8d62\u5f97\u4e86\u8bb8\u591a\u4eba\u7684\u559c\u7231\u3002Anaconda\u81ea\u5e26\u6700\u65b0python\u7248\u672c\uff0c\u56e0\u6b64\u6211\u4eec\u65e0\u9700\u518d\u989d\u5916\u4e0b\u8f7d\u548c\u914d\u7f6e\u73af\u5883\uff0c\u8fd9\u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u8bf4\u662f\u53ef\u4ee5\u6781\u5927\u7684\u63d0\u5347\u4fe1\u5fc3\u7684\uff08\u914d\u7f6e\u73af\u5883\u7e41\u7410\u8fc7\u7a0b\u662f\u529d\u9000\u521d\u5b66\u8005\u7684\u4e00\u5927\u56e0\u7d20\uff09\uff0c\u5728\u5bf9\u7f16\u7a0b\u8fdb\u884c\u4e00\u5b9a\u7a0b\u5ea6\u7684\u719f\u6089\u540e\uff0c\u5927\u5bb6\u53ef\u4ee5\u63a2\u7d22\u6700\u9002\u5408\u81ea\u5df1\u7684IDE\u3002 4. Python\u4e2d\u7684\u6807\u8bc6\u7b26 4.1 \u6807\u8bc6\u7b26 \u7b2c\u4e00\u4e2a\u5b57\u7b26\u5fc5\u987b\u662f\u5b57\u6bcd\u8868\u4e2d\u5b57\u6bcd\u6216\u4e0b\u5212\u7ebf _ \u3002 \u6807\u8bc6\u7b26\u7684\u5176\u4ed6\u7684\u90e8\u5206\u7531\u5b57\u6bcd\u3001\u6570\u5b57\u548c\u4e0b\u5212\u7ebf\u7ec4\u6210\u3002 \u6807\u8bc6\u7b26\u5bf9\u5927\u5c0f\u5199\u654f\u611f\u3002 \u5728 Python 3 \u4e2d\uff0c\u53ef\u4ee5\u7528\u4e2d\u6587\u4f5c\u4e3a\u53d8\u91cf\u540d\uff0c\u975e ASCII \u6807\u8bc6\u7b26\u4e5f\u662f\u5141\u8bb8\u7684\u4e86\u3002 4.2 Python \u4fdd\u7559\u5b57\u7b26 \u4fdd\u7559\u5b57\u5373\u5173\u952e\u5b57\uff0c\u6211\u4eec\u4e0d\u80fd\u628a\u5b83\u4eec\u7528\u4f5c\u4efb\u4f55\u6807\u8bc6\u7b26\u540d\u79f0\u3002 False None True and as assert break class continue def del elif else except finally for from global if import in is lambda nonlocal not or pass raise return try while with yield 4.3 \u6ce8\u91ca Python\u4e2d\u5355\u884c\u6ce8\u91ca\u4ee5 # \u5f00\u5934\uff0c\u5b9e\u4f8b\u5982\u4e0b\uff1a # \u7b2c\u4e00\u4e2a\u6ce8\u91ca print(\"Hello, Python!\") # \u7b2c\u4e8c\u4e2a\u6ce8\u91ca \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a Hello, Python! \u591a\u884c\u6ce8\u91ca\u53ef\u4ee5\u7528\u591a\u4e2a # \u53f7\uff0c\u8fd8\u6709 ''' \u548c \" \" \" \uff1a # \u7b2c\u4e00\u4e2a\u6ce8\u91ca # \u7b2c\u4e8c\u4e2a\u6ce8\u91ca ''' \u7b2c\u4e09\u6ce8\u91ca \u7b2c\u56db\u6ce8\u91ca ''' \"\"\" \u7b2c\u4e94\u6ce8\u91ca \u7b2c\u516d\u6ce8\u91ca \"\"\" print(\"Hello, Python!\") \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a Hello, Python! 4.4 \u884c\u548c\u7f29\u8fdb python\u6700\u5177\u7279\u8272\u7684\u5c31\u662f\u4f7f\u7528\u7f29\u8fdb\u6765\u8868\u793a\u4ee3\u7801\u5757\uff0c\u4e0d\u9700\u8981\u4f7f\u7528\u5927\u62ec\u53f7 {} \u3002 \u7f29\u8fdb\u7684\u7a7a\u683c\u6570\u662f\u53ef\u53d8\u7684\uff0c\u4f46\u662f\u540c\u4e00\u4e2a\u4ee3\u7801\u5757\u7684\u8bed\u53e5\u5fc5\u987b\u5305\u542b\u76f8\u540c\u7684\u7f29\u8fdb\u7a7a\u683c\u6570\u3002\u5b9e\u4f8b\u5982\u4e0b\uff1a if True: print(\"True\") else: print(\"False\") \u4ee5\u4e0b\u4ee3\u7801\u6700\u540e\u4e00\u884c\u8bed\u53e5\u7f29\u8fdb\u6570\u7684\u7a7a\u683c\u6570\u4e0d\u4e00\u81f4\uff0c\u4f1a\u5bfc\u81f4\u8fd0\u884c\u9519\u8bef\uff1a if True: print(\"Answer\") print(\"True\") else: print(\"Answer\") print(\"False\") # \u7f29\u8fdb\u4e0d\u4e00\u81f4\uff0c\u4f1a\u5bfc\u81f4\u8fd0\u884c\u9519\u8bef \u4ee5\u4e0a\u7a0b\u5e8f\u7531\u4e8e\u7f29\u8fdb\u4e0d\u4e00\u81f4\uff0c\u6267\u884c\u540e\u4f1a\u51fa\u73b0\u7c7b\u4f3c\u4ee5\u4e0b\u9519\u8bef\uff1a File \"test.py\", line 6 print(\"False\") # \u7f29\u8fdb\u4e0d\u4e00\u81f4\uff0c\u4f1a\u5bfc\u81f4\u8fd0\u884c\u9519\u8bef ^ IndentationError: unindent does not match any outer indentation level 5 Python\u4e2d\u7684\u53d8\u91cf Python \u4e2d\u7684\u53d8\u91cf\u4e0d\u9700\u8981\u58f0\u660e\u3002\u6bcf\u4e2a\u53d8\u91cf\u5728\u4f7f\u7528\u524d\u90fd\u5fc5\u987b\u8d4b\u503c\uff0c\u53d8\u91cf\u8d4b\u503c\u4ee5\u540e\u8be5\u53d8\u91cf\u624d\u4f1a\u88ab\u521b\u5efa\u3002 \u5728 Python \u4e2d\uff0c\u53d8\u91cf\u5c31\u662f\u53d8\u91cf\uff0c\u5b83\u6ca1\u6709\u7c7b\u578b\uff0c\u6211\u4eec\u6240\u8bf4\u7684\"\u7c7b\u578b\"\u662f\u53d8\u91cf\u6240\u6307\u7684\u5185\u5b58\u4e2d\u5bf9\u8c61\u7684\u7c7b\u578b\u3002 \u7b49\u53f7\uff08=\uff09\u7528\u6765\u7ed9\u53d8\u91cf\u8d4b\u503c\u3002 \u7b49\u53f7\uff08=\uff09\u8fd0\u7b97\u7b26\u5de6\u8fb9\u662f\u4e00\u4e2a\u53d8\u91cf\u540d,\u7b49\u53f7\uff08=\uff09\u8fd0\u7b97\u7b26\u53f3\u8fb9\u662f\u5b58\u50a8\u5728\u53d8\u91cf\u4e2d\u7684\u503c\u3002\u4f8b\u5982\uff1a counter = 100 # \u6574\u578b\u53d8\u91cf miles = 1000.0 # \u6d6e\u70b9\u578b\u53d8\u91cf name = \"CodeRaft\" # \u5b57\u7b26\u4e32 print(counter) print(miles) print(name) \u6267\u884c\u4ee5\u4e0a\u7a0b\u5e8f\u4f1a\u8f93\u51fa\u5982\u4e0b\u7ed3\u679c\uff1a 100 1000.0 CodeRaft 5.1 \u591a\u4e2a\u53d8\u91cf\u8d4b\u503c Python\u5141\u8bb8\u4f60\u540c\u65f6\u4e3a\u591a\u4e2a\u53d8\u91cf\u8d4b\u503c\u3002\u4f8b\u5982\uff1a a = b = c = 1 \u4ee5\u4e0a\u5b9e\u4f8b\uff0c\u521b\u5efa\u4e00\u4e2a\u6574\u578b\u5bf9\u8c61\uff0c\u503c\u4e3a 1\uff0c\u4ece\u540e\u5411\u524d\u8d4b\u503c\uff0c\u4e09\u4e2a\u53d8\u91cf\u88ab\u8d4b\u4e88\u76f8\u540c\u7684\u6570\u503c\u3002 \u60a8\u4e5f\u53ef\u4ee5\u4e3a\u591a\u4e2a\u5bf9\u8c61\u6307\u5b9a\u591a\u4e2a\u53d8\u91cf\u3002\u4f8b\u5982\uff1a a, b, c = 1, 2, \"CodeRaft\" \u4ee5\u4e0a\u5b9e\u4f8b\uff0c\u4e24\u4e2a\u6574\u578b\u5bf9\u8c61 1 \u548c 2 \u7684\u5206\u914d\u7ed9\u53d8\u91cf a \u548c b\uff0c\u5b57\u7b26\u4e32\u5bf9\u8c61 \"CodeRaft\" \u5206\u914d\u7ed9\u53d8\u91cf c\u3002 6 Python\u7684\u6570\u636e\u7c7b\u578b Python\u4e2d\u7684\u6570\u636e\u7c7b\u578b\u6781\u4e3a\u4e30\u5bcc\uff0c\u5305\u62ec\u57fa\u672c\u6570\u636e\u7c7b\u578b\u548c\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u3002\u5728Python\u4e2d\uff0c\u53d8\u91cf\u65e0\u9700\u58f0\u660e\u5373\u53ef\u76f4\u63a5\u4f7f\u7528\uff0c\u5176\u7c7b\u578b\u7531\u8d4b\u503c\u65f6\u6240\u5b58\u50a8\u7684\u5bf9\u8c61\u51b3\u5b9a\u3002 6.1\u57fa\u672c\u6570\u636e\u7c7b\u578b 6.1.1 \u6570\u5b57\u7c7b\u578b \u6574\u578b\uff08int\uff09 \uff1a\u6ca1\u6709\u5927\u5c0f\u9650\u5236\uff0c\u7406\u8bba\u4e0a\u53d7\u9650\u4e8e\u673a\u5668\u5185\u5b58\u3002 \u6d6e\u70b9\u578b\uff08float\uff09 \uff1a\u901a\u5e38\u60c5\u51b5\u4e0b\u7684\u6d6e\u70b9\u6570\u8868\u793a\u65b9\u6cd5\uff0c\u53ef\u4ee5\u4f7f\u7528\u79d1\u5b66\u8ba1\u6570\u6cd5\uff08\u59821.23e9\uff09\u3002 \u5e03\u5c14\u578b\uff08bool\uff09 \uff1a\u5305\u62ecTrue\u548cFalse\u4e24\u79cd\u503c\uff0c\u5b9e\u9645\u4e0a\u662f\u6574\u578b\u7684\u5b50\u7c7b\u578b\uff0cTrue\u7b49\u4e8e1\uff0cFalse\u7b49\u4e8e0\u3002 a = 3 # int b = 3.14 # float c = True # bool 6.1.2 \u5b57\u7b26\u4e32 \u5b57\u7b26\u4e32\uff08str\uff09 \uff1a\u6587\u672c\u7c7b\u578b\uff0c\u4f7f\u7528\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\u5305\u56f4\u3002 \u5b57\u7b26\u4e32\u662f\u4e0d\u53ef\u53d8\u5e8f\u5217\uff0c\u53ef\u4ee5\u8fdb\u884c\u7d22\u5f15\u3001\u5207\u7247\u3001\u52a0\u6cd5\u548c\u4e58\u6cd5\u64cd\u4f5c\u3002 str1 = \"Hello\" str2 = 'World' print(str1 + \" \" + str2) # \u5b57\u7b26\u4e32\u8fde\u63a5 print(str1 * 3) # \u5b57\u7b26\u4e32\u91cd\u590d \u8fd9\u6837\u8f93\u51fa\u7684\u7ed3\u679c\u4e3a\uff1a Hello World HelloHelloHello \u5728Python\u4e2d\uff0cstr()\u51fd\u6570\u53ef\u4ee5\u5c06\u4efb\u4f55\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u800cint()\u51fd\u6570\u5219\u53ef\u4ee5\u5c06\u5b57\u7b26\u4e32\u6216\u6570\u5b57\u8f6c\u6362\u4e3a\u6574\u6570\u7c7b\u578b\uff0c\u4f46\u524d\u63d0\u662f\u8fd9\u4e2a\u5b57\u7b26\u4e32\u6216\u6570\u5b57\u5fc5\u987b\u8868\u793a\u4e00\u4e2a\u6709\u6548\u7684\u6574\u6570\u3002 # \u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u6574\u6570\u548c\u4e00\u4e2a\u5b57\u7b26\u4e32 original_int = 123 original_str = \"456\" # \u4f7f\u7528str()\u51fd\u6570\u5c06\u6574\u6570\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32 int_as_str = str(original_int) print(\"\u6574\u6570\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32:\", int_as_str) # \u4f7f\u7528int()\u51fd\u6570\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u56de\u6574\u6570 str_as_int = int(original_str) print(\"\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6574\u6570:\", str_as_int) # \u6ce8\u610f\uff1a\u5982\u679c\u5b57\u7b26\u4e32\u5305\u542b\u975e\u6570\u5b57\u5b57\u7b26\uff0cint()\u51fd\u6570\u4f1a\u629b\u51faValueError invalid_str = \"abc\" try: invalid_int = int(invalid_str) except ValueError: print(\"\u9519\u8bef\uff1a\u65e0\u6cd5\u5c06\u975e\u6570\u5b57\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6574\u6570\") \u8f93\u51fa\u7ed3\u679c\uff1a \u6574\u6570\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32: 123 \u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6574\u6570: 456 \u9519\u8bef\uff1a\u65e0\u6cd5\u5c06\u975e\u6570\u5b57\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6574\u6570 6.1.3 bool\uff08\u5e03\u5c14\u7c7b\u578b\uff09 \u5e03\u5c14\u7c7b\u578b\u5373 True \u6216 False\u3002 \u5728 Python \u4e2d\uff0cTrue \u548c False \u90fd\u662f\u5173\u952e\u5b57\uff0c\u8868\u793a\u5e03\u5c14\u503c\u3002 \u5e03\u5c14\u7c7b\u578b\u53ef\u4ee5\u7528\u6765\u63a7\u5236\u7a0b\u5e8f\u7684\u6d41\u7a0b\uff0c\u6bd4\u5982\u5224\u65ad\u67d0\u4e2a\u6761\u4ef6\u662f\u5426\u6210\u7acb\uff0c\u6216\u8005\u5728\u67d0\u4e2a\u6761\u4ef6\u6ee1\u8db3\u65f6\u6267\u884c\u67d0\u6bb5\u4ee3\u7801\u3002 \u5e03\u5c14\u7c7b\u578b\u7279\u70b9\uff1a \u5e03\u5c14\u7c7b\u578b\u53ea\u6709\u4e24\u4e2a\u503c\uff1aTrue \u548c False\u3002 bool \u662f int \u7684\u5b50\u7c7b\uff0c\u56e0\u6b64\u5e03\u5c14\u503c\u53ef\u4ee5\u88ab\u770b\u4f5c\u6574\u6570\u6765\u4f7f\u7528\uff0c\u5176\u4e2d True \u7b49\u4ef7\u4e8e 1\u3002 \u5e03\u5c14\u7c7b\u578b\u53ef\u4ee5\u548c\u5176\u4ed6\u6570\u636e\u7c7b\u578b\u8fdb\u884c\u6bd4\u8f83\uff0c\u6bd4\u5982\u6570\u5b57\u3001\u5b57\u7b26\u4e32\u7b49\u3002\u5728\u6bd4\u8f83\u65f6\uff0cPython \u4f1a\u5c06 True \u89c6\u4e3a 1\uff0cFalse \u89c6\u4e3a 0\u3002 \u5e03\u5c14\u7c7b\u578b\u53ef\u4ee5\u548c\u903b\u8f91\u8fd0\u7b97\u7b26\u4e00\u8d77\u4f7f\u7528\uff0c\u5305\u62ec and\u3001or \u548c not\u3002\u8fd9\u4e9b\u8fd0\u7b97\u7b26\u53ef\u4ee5\u7528\u6765\u7ec4\u5408\u591a\u4e2a\u5e03\u5c14\u8868\u8fbe\u5f0f\uff0c\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u5e03\u5c14\u503c\u3002 \u5e03\u5c14\u7c7b\u578b\u4e5f\u53ef\u4ee5\u88ab\u8f6c\u6362\u6210\u5176\u4ed6\u6570\u636e\u7c7b\u578b\uff0c\u6bd4\u5982\u6574\u6570\u3001\u6d6e\u70b9\u6570\u548c\u5b57\u7b26\u4e32\u3002\u5728\u8f6c\u6362\u65f6\uff0cTrue \u4f1a\u88ab\u8f6c\u6362\u6210 1\uff0cFalse \u4f1a\u88ab\u8f6c\u6362\u6210 0\u3002 \u53ef\u4ee5\u4f7f\u7528 bool() \u51fd\u6570\u5c06\u5176\u4ed6\u7c7b\u578b\u7684\u503c\u8f6c\u6362\u4e3a\u5e03\u5c14\u503c\u3002\u4ee5\u4e0b\u503c\u5728\u8f6c\u6362\u4e3a\u5e03\u5c14\u503c\u65f6\u4e3a False \uff1a None \u3001 False \u3001\u96f6 ( 0 \u3001 0.0 \u3001 0j )\u3001\u7a7a\u5e8f\u5217\uff08\u5982 '' \u3001 () \u3001 [] \uff09\u548c\u7a7a\u6620\u5c04\uff08\u5982 {} \uff09\u3002\u5176\u4ed6\u6240\u6709\u503c\u8f6c\u6362\u4e3a\u5e03\u5c14\u503c\u65f6\u5747\u4e3a True \u3002 6.1.4 List\uff08\u5217\u8868\uff09 List\uff08\u5217\u8868\uff09 \u662f Python \u4e2d\u4f7f\u7528\u6700\u9891\u7e41\u7684\u6570\u636e\u7c7b\u578b\u3002 \u5217\u8868\u53ef\u4ee5\u5b8c\u6210\u5927\u591a\u6570\u96c6\u5408\u7c7b\u7684\u6570\u636e\u7ed3\u6784\u5b9e\u73b0\u3002\u5217\u8868\u4e2d\u5143\u7d20\u7684\u7c7b\u578b\u53ef\u4ee5\u4e0d\u76f8\u540c\uff0c\u5b83\u652f\u6301\u6570\u5b57\uff0c\u5b57\u7b26\u4e32\u751a\u81f3\u53ef\u4ee5\u5305\u542b\u5217\u8868\uff08\u6240\u8c13\u5d4c\u5957\uff09\u3002 \u5217\u8868\u662f\u5199\u5728\u65b9\u62ec\u53f7 [] \u4e4b\u95f4\u3001\u7528\u9017\u53f7\u5206\u9694\u5f00\u7684\u5143\u7d20\u5217\u8868\u3002 \u548c\u5b57\u7b26\u4e32\u4e00\u6837\uff0c\u5217\u8868\u540c\u6837\u53ef\u4ee5\u88ab\u7d22\u5f15\u548c\u622a\u53d6\uff0c\u5217\u8868\u88ab\u622a\u53d6\u540e\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u6240\u9700\u5143\u7d20\u7684\u65b0\u5217\u8868\u3002 \u5217\u8868\u622a\u53d6\u7684\u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a \u53d8\u91cf[\u5934\u4e0b\u6807:\u5c3e\u4e0b\u6807] \u7d22\u5f15\u503c\u4ee5 0 \u4e3a\u5f00\u59cb\u503c\uff0c -1 \u4e3a\u4ece\u672b\u5c3e\u7684\u5f00\u59cb\u4f4d\u7f6e\u3002 \u52a0\u53f7 + \u662f\u5217\u8868\u8fde\u63a5\u8fd0\u7b97\u7b26\uff0c\u661f\u53f7 * \u662f\u91cd\u590d\u64cd\u4f5c\u3002\u5982\u4e0b\u5b9e\u4f8b\uff1a list = [ 'abcd', 786 , 2.23, 'CodeRaft', 70.2 ] # \u5b9a\u4e49\u4e00\u4e2a\u5217\u8868 tinylist = [123, 'CodeRaft'] print(list) # \u6253\u5370\u6574\u4e2a\u5217\u8868 print(list[0]) # \u6253\u5370\u5217\u8868\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20 print(list[1:3]) # \u6253\u5370\u5217\u8868\u7b2c\u4e8c\u5230\u7b2c\u56db\u4e2a\u5143\u7d20\uff08\u4e0d\u5305\u542b\u7b2c\u56db\u4e2a\u5143\u7d20\uff09 print(list[2:]) # \u6253\u5370\u5217\u8868\u4ece\u7b2c\u4e09\u4e2a\u5143\u7d20\u5f00\u59cb\u5230\u672b\u5c3e print(tinylist * 2) # \u6253\u5370tinylist\u5217\u8868\u4e24\u6b21 print(list + tinylist) # \u6253\u5370\u4e24\u4e2a\u5217\u8868\u62fc\u63a5\u5728\u4e00\u8d77\u7684\u7ed3\u679c \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a ['abcd', 786, 2.23, 'CodeRaft', 70.2] abcd [786, 2.23] [2.23, 'CodeRaft', 70.2] [123, 'CodeRaft', 123, 'CodeRaft'] ['abcd', 786, 2.23, 'CodeRaft', 70.2, 123, 'CodeRaft'] 6.1.5 Tuple\uff08\u5143\u7ec4\uff09 \u5143\u7ec4\uff08tuple\uff09\u4e0e\u5217\u8868\u7c7b\u4f3c\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5143\u7ec4\u7684\u5143\u7d20\u4e0d\u80fd\u4fee\u6539\u3002\u5143\u7ec4\u5199\u5728\u5c0f\u62ec\u53f7 () \u91cc\uff0c\u5143\u7d20\u4e4b\u95f4\u7528\u9017\u53f7\u9694\u5f00\u3002 \u5143\u7ec4\u4e2d\u7684\u5143\u7d20\u7c7b\u578b\u4e5f\u53ef\u4ee5\u4e0d\u76f8\u540c\uff1a tuple = ( 'abcd', 786 , 2.23, 'CodeRaft', 70.2 ) tinytuple = (123, 'CodeRaft') print(tuple) # \u8f93\u51fa\u5b8c\u6574\u5143\u7ec4 print(tuple[0]) # \u8f93\u51fa\u5143\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20 print(tuple[1:3]) # \u8f93\u51fa\u4ece\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5f00\u59cb\u5230\u7b2c\u4e09\u4e2a\u5143\u7d20 print(tuple[2:]) # \u8f93\u51fa\u4ece\u7b2c\u4e09\u4e2a\u5143\u7d20\u5f00\u59cb\u7684\u6240\u6709\u5143\u7d20 print(tinytuple * 2) # \u8f93\u51fa\u4e24\u6b21\u5143\u7ec4 print(tuple + tinytuple) # \u8fde\u63a5\u5143\u7ec4 \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a ('abcd', 786, 2.23, 'CodeRaft', 70.2) abcd (786, 2.23) (2.23, 'CodeRaft', 70.2) (123, 'CodeRaft', 123, 'CodeRaft') ('abcd', 786, 2.23, 'CodeRaft', 70.2, 123, 'CodeRaft') 6.1.6 Set\uff08\u96c6\u5408\uff09 Python \u4e2d\u7684\u96c6\u5408\uff08Set\uff09\u662f\u4e00\u79cd\u65e0\u5e8f\u3001\u53ef\u53d8\u7684\u6570\u636e\u7c7b\u578b\uff0c\u7528\u4e8e\u5b58\u50a8\u552f\u4e00\u7684\u5143\u7d20\u3002 \u96c6\u5408\u4e2d\u7684\u5143\u7d20\u4e0d\u4f1a\u91cd\u590d\uff0c\u5e76\u4e14\u53ef\u4ee5\u8fdb\u884c\u4ea4\u96c6\u3001\u5e76\u96c6\u3001\u5dee\u96c6\u7b49\u5e38\u89c1\u7684\u96c6\u5408\u64cd\u4f5c\u3002 \u5728 Python \u4e2d\uff0c\u96c6\u5408\u4f7f\u7528\u5927\u62ec\u53f7 {} \u8868\u793a\uff0c\u5143\u7d20\u4e4b\u95f4\u7528\u9017\u53f7 , \u5206\u9694\u3002 \u53e6\u5916\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 set() \u51fd\u6570\u521b\u5efa\u96c6\u5408\u3002 \u6ce8\u610f\uff1a \u521b\u5efa\u4e00\u4e2a\u7a7a\u96c6\u5408\u5fc5\u987b\u7528 set() \u800c\u4e0d\u662f { } \uff0c\u56e0\u4e3a { } \u662f\u7528\u6765\u521b\u5efa\u4e00\u4e2a\u7a7a\u5b57\u5178\u3002 \u521b\u5efa\u683c\u5f0f\uff1a parame = {value01,value02,...} \u6216\u8005 set(value) sites = {'Google', 'Taobao', 'Runoob', 'Facebook', 'Zhihu', 'Baidu'} print(sites) # \u8f93\u51fa\u96c6\u5408\uff0c\u91cd\u590d\u7684\u5143\u7d20\u88ab\u81ea\u52a8\u53bb\u6389 # \u6210\u5458\u6d4b\u8bd5 if 'Runoob' in sites : print('Runoob \u5728\u96c6\u5408\u4e2d') else : print('Runoob \u4e0d\u5728\u96c6\u5408\u4e2d') # set\u53ef\u4ee5\u8fdb\u884c\u96c6\u5408\u8fd0\u7b97 a = set('abracadabra') b = set('alacazam') print(a) print(a - b) # a \u548c b \u7684\u5dee\u96c6 print(a | b) # a \u548c b \u7684\u5e76\u96c6 print(a & b) # a \u548c b \u7684\u4ea4\u96c6 print(a ^ b) # a \u548c b \u4e2d\u4e0d\u540c\u65f6\u5b58\u5728\u7684\u5143\u7d20 \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a {'Zhihu', 'Baidu', 'Taobao', 'Runoob', 'Google', 'Facebook'} Runoob \u5728\u96c6\u5408\u4e2d {'b', 'c', 'a', 'r', 'd'} {'r', 'b', 'd'} {'b', 'c', 'a', 'z', 'm', 'r', 'l', 'd'} {'c', 'a'} {'z', 'b', 'm', 'r', 'l', 'd'} 6.1.7 Dictionary\uff08\u5b57\u5178\uff09 \u5b57\u5178\uff08dictionary\uff09\u662fPython\u4e2d\u53e6\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u5185\u7f6e\u6570\u636e\u7c7b\u578b\u3002 \u5217\u8868\u662f\u6709\u5e8f\u7684\u5bf9\u8c61\u96c6\u5408\uff0c\u5b57\u5178\u662f\u65e0\u5e8f\u7684\u5bf9\u8c61\u96c6\u5408\u3002\u4e24\u8005\u4e4b\u95f4\u7684\u533a\u522b\u5728\u4e8e\uff1a\u5b57\u5178\u5f53\u4e2d\u7684\u5143\u7d20\u662f\u901a\u8fc7\u952e\u6765\u5b58\u53d6\u7684\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u7d22\u5f15\u5b58\u53d6\u3002 \u5b57\u5178\u662f\u4e00\u79cd\u6620\u5c04\u7c7b\u578b\uff0c\u5b57\u5178\u7528 { } \u6807\u8bc6\uff0c\u5b83\u662f\u4e00\u4e2a\u65e0\u5e8f\u7684 \u952e(key) : \u503c(value) \u7684\u96c6\u5408\u3002 \u952e(key)\u5fc5\u987b\u4f7f\u7528\u4e0d\u53ef\u53d8\u7c7b\u578b\u3002 \u5728\u540c\u4e00\u4e2a\u5b57\u5178\u4e2d\uff0c\u952e(key)\u5fc5\u987b\u662f\u552f\u4e00\u7684\u3002 dict = {} dict['one'] = \"CodeRaft\" dict[2] = \"\u6cdb\u7f16\u7a0b\" tinydict = {'name': 'CodeRaft','code':1, 'site': 'www.CodeRaft.com'} print(dict['one']) # \u8f93\u51fa\u952e\u4e3a 'one' \u7684\u503c print(dict[2]) # \u8f93\u51fa\u952e\u4e3a 2 \u7684\u503c print(tinydict) # \u8f93\u51fa\u5b8c\u6574\u7684\u5b57\u5178 print(tinydict.keys()) # \u8f93\u51fa\u6240\u6709\u952e print(tinydict.values()) # \u8f93\u51fa\u6240\u6709\u503c \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a CodeRaft \u6cdb\u7f16\u7a0b {'name': 'CodeRaft', 'code': 1, 'site': 'www.CodeRaft.com'} dict_keys(['name', 'code', 'site']) dict_values(['CodeRaft', 1, 'www.CodeRaft.com']) 6.2 \u5e38\u7528\u6570\u636e\u7c7b\u578b\u7684\u4f7f\u7528\u5b9e\u4f8b # \u5b66\u751f\u4fe1\u606f student_id = 12345 student_name = \"\u8d75\u9547\" age = 20 score = 92.5 gender = '\u7537' is_married = False # \u8f93\u51fa\u5b66\u751f\u4fe1\u606f print(\"\u5b66\u751f\u4fe1\u606f\uff1a\") print(\"\u5b66\u53f7\uff1a\", student_id) print(\"\u59d3\u540d\uff1a\", student_name) print(\"\u5e74\u9f84\uff1a\", age) print(\"\u6210\u7ee9\uff1a\", score) print(\"\u6027\u522b\uff1a\", gender) print(\"\u5a5a\u5426\uff1a\", is_married) \u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a \u5b66\u751f\u4fe1\u606f\uff1a \u5b66\u53f7\uff1a 12345 \u59d3\u540d\uff1a \u8d75\u9547 \u5e74\u9f84\uff1a 20 \u6210\u7ee9\uff1a 92.5 \u6027\u522b\uff1a \u7537 \u5a5a\u5426\uff1a False 7.Python\u4e2d\u7684\u8fd0\u7b97\u7b26 7.1 Python\u7b97\u672f\u8fd0\u7b97\u7b26 \u4ee5\u4e0b\u5047\u8bbe\u53d8\u91cf a=10 \uff0c\u53d8\u91cf b=21 \uff1a \u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b + \u52a0 - \u4e24\u4e2a\u5bf9\u8c61\u76f8\u52a0 a + b \u8f93\u51fa\u7ed3\u679c 31 - \u51cf - \u5f97\u5230\u8d1f\u6570\u6216\u662f\u4e00\u4e2a\u6570\u51cf\u53bb\u53e6\u4e00\u4e2a\u6570 a - b \u8f93\u51fa\u7ed3\u679c -11 * \u4e58 - \u4e24\u4e2a\u6570\u76f8\u4e58\u6216\u662f\u8fd4\u56de\u4e00\u4e2a\u88ab\u91cd\u590d\u82e5\u5e72\u6b21\u7684\u5b57\u7b26\u4e32 a * b \u8f93\u51fa\u7ed3\u679c 210 / \u9664 - x \u9664\u4ee5 y b / a \u8f93\u51fa\u7ed3\u679c 2.1 % \u53d6\u6a21 - \u8fd4\u56de\u9664\u6cd5\u7684\u4f59\u6570 b % a \u8f93\u51fa\u7ed3\u679c 1 ** \u5e42 - \u8fd4\u56dex\u7684y\u6b21\u5e42 a**b \u4e3a10\u768421\u6b21\u65b9 // \u53d6\u6574\u9664 - \u5f80\u5c0f\u7684\u65b9\u5411\u53d6\u6574\u6570 >>> 9//2=4 >>> -9//2=-5 \u4ee5\u4e0b\u5b9e\u4f8b\u6f14\u793a\u4e86Python\u6240\u6709\u7b97\u672f\u8fd0\u7b97\u7b26\u7684\u64cd\u4f5c\uff1a a = 21 b = 10 c = 0 c = a + b print(\"c \u7684\u503c\u4e3a\uff1a\", c) c = a - b print(\"c \u7684\u503c\u4e3a\uff1a\", c) c = a * b print(\"c \u7684\u503c\u4e3a\uff1a\", c) c = a / b print(\"c \u7684\u503c\u4e3a\uff1a\", c) c = a % b print(\"c \u7684\u503c\u4e3a\uff1a\", c) # \u4fee\u6539\u53d8\u91cf a \u3001b \u3001c a = 2 b = 3 c = a**b print(\"c \u7684\u503c\u4e3a\uff1a\", c) a = 10 b = 5 c = a//b print(\"c \u7684\u503c\u4e3a\uff1a\", c) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a c \u7684\u503c\u4e3a\uff1a 31 c \u7684\u503c\u4e3a\uff1a 11 c \u7684\u503c\u4e3a\uff1a 210 c \u7684\u503c\u4e3a\uff1a 2.1 c \u7684\u503c\u4e3a\uff1a 1 c \u7684\u503c\u4e3a\uff1a 8 c \u7684\u503c\u4e3a\uff1a 2 7.2 Python \u6bd4\u8f83\u8fd0\u7b97\u7b26 \u4ee5\u4e0b\u5047\u8bbe\u53d8\u91cf a \u4e3a 10\uff0c\u53d8\u91cf b \u4e3a20\uff1a \u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b == \u7b49\u4e8e - \u6bd4\u8f83\u5bf9\u8c61\u662f\u5426\u76f8\u7b49 (a == b) \u8fd4\u56de False\u3002 != \u4e0d\u7b49\u4e8e - \u6bd4\u8f83\u4e24\u4e2a\u5bf9\u8c61\u662f\u5426\u4e0d\u76f8\u7b49 (a != b) \u8fd4\u56de True\u3002 > \u5927\u4e8e - \u8fd4\u56dex\u662f\u5426\u5927\u4e8ey (a > b) \u8fd4\u56de False\u3002 < \u5c0f\u4e8e - \u8fd4\u56dex\u662f\u5426\u5c0f\u4e8ey\u3002\u6240\u6709\u6bd4\u8f83\u8fd0\u7b97\u7b26\u8fd4\u56de1\u8868\u793a\u771f\uff0c\u8fd4\u56de0\u8868\u793a\u5047\u3002\u8fd9\u5206\u522b\u4e0e\u7279\u6b8a\u7684\u53d8\u91cfTrue\u548cFalse\u7b49\u4ef7\u3002\u6ce8\u610f\uff0c\u8fd9\u4e9b\u53d8\u91cf\u540d\u7684\u5927\u5199\u3002 (a < b) \u8fd4\u56de True\u3002 >= \u5927\u4e8e\u7b49\u4e8e - \u8fd4\u56dex\u662f\u5426\u5927\u4e8e\u7b49\u4e8ey\u3002 (a >= b) \u8fd4\u56de False\u3002 <= \u5c0f\u4e8e\u7b49\u4e8e - \u8fd4\u56dex\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8ey\u3002 (a <= b) \u8fd4\u56de True\u3002 \u4ee5\u4e0b\u5b9e\u4f8b\u6f14\u793a\u4e86Python\u6240\u6709\u6bd4\u8f83\u8fd0\u7b97\u7b26\u7684\u64cd\u4f5c\uff1a a = 21 b = 10 if a == b: print(\"a \u7b49\u4e8e b\") else: print(\"a \u4e0d\u7b49\u4e8e b\") if a != b: print(\"a \u4e0d\u7b49\u4e8e b\") else: print(\"a \u7b49\u4e8e b\") if a < b: print(\"a \u5c0f\u4e8e b\") else: print(\"a \u5927\u4e8e\u7b49\u4e8e b\") if a > b: print(\"a \u5927\u4e8e b\") else: print(\"a \u5c0f\u4e8e\u7b49\u4e8e b\") # \u4fee\u6539\u53d8\u91cf a \u548c b \u7684\u503c a = 5 b = 20 if a <= b: print(\"a \u5c0f\u4e8e\u7b49\u4e8e b\") else: print(\"a \u5927\u4e8e b\") if b >= a: print(\"b \u5927\u4e8e\u7b49\u4e8e a\") else: print(\"b \u5c0f\u4e8e a\") \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u4e3a\uff1a a \u4e0d\u7b49\u4e8e b a \u4e0d\u7b49\u4e8e b a \u5927\u4e8e\u7b49\u4e8e b a \u5927\u4e8e b a \u5c0f\u4e8e\u7b49\u4e8e b b \u5927\u4e8e\u7b49\u4e8e a 7.3 Python\u8d4b\u503c\u8fd0\u7b97\u7b26 \u4ee5\u4e0b\u5047\u8bbe\u53d8\u91cfa\u4e3a10\uff0c\u53d8\u91cfb\u4e3a20\uff1a \u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b = \u7b80\u5355\u7684\u8d4b\u503c\u8fd0\u7b97\u7b26 c = a + b \u5c06 a + b \u7684\u8fd0\u7b97\u7ed3\u679c\u8d4b\u503c\u4e3a c += \u52a0\u6cd5\u8d4b\u503c\u8fd0\u7b97\u7b26 c += a \u7b49\u6548\u4e8e c = c + a -= \u51cf\u6cd5\u8d4b\u503c\u8fd0\u7b97\u7b26 c -= a \u7b49\u6548\u4e8e c = c - a *= \u4e58\u6cd5\u8d4b\u503c\u8fd0\u7b97\u7b26 c *= a \u7b49\u6548\u4e8e c = c * a /= \u9664\u6cd5\u8d4b\u503c\u8fd0\u7b97\u7b26 c /= a \u7b49\u6548\u4e8e c = c / a %= \u53d6\u6a21\u8d4b\u503c\u8fd0\u7b97\u7b26 c %= a \u7b49\u6548\u4e8e c = c % a **= \u5e42\u8d4b\u503c\u8fd0\u7b97\u7b26 c **= a \u7b49\u6548\u4e8e c = c ** a //= \u53d6\u6574\u9664\u8d4b\u503c\u8fd0\u7b97\u7b26 c //= a \u7b49\u6548\u4e8e c = c // a := \u6d77\u8c61\u8fd0\u7b97\u7b26\uff0c\u8fd9\u4e2a\u8fd0\u7b97\u7b26\u7684\u4e3b\u8981\u76ee\u7684\u662f\u5728\u8868\u8fbe\u5f0f\u4e2d\u540c\u65f6\u8fdb\u884c\u8d4b\u503c\u548c\u8fd4\u56de\u8d4b\u503c\u7684\u503c\u3002 Python3.8 \u7248\u672c\u65b0\u589e\u8fd0\u7b97\u7b26 \u3002 \u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u8d4b\u503c\u8868\u8fbe\u5f0f\u53ef\u4ee5\u907f\u514d\u8c03\u7528 len() \u4e24\u6b21: if (n := len(a)) > 10: print(f\"List is too long ({n} elements, expected <= 10)\") \u4ee5\u4e0b\u5b9e\u4f8b\u6f14\u793a\u4e86Python\u6240\u6709\u8d4b\u503c\u8fd0\u7b97\u7b26\u7684\u64cd\u4f5c\uff1a a = 21 b = 10 c = 0 c = a + b print(\"c \u7684\u503c\u4e3a\uff1a\", c) c += a print(\"c \u7684\u503c\u4e3a\uff1a\", c) c *= a print(\"c \u7684\u503c\u4e3a\uff1a\", c) c /= a print(\"c \u7684\u503c\u4e3a\uff1a\", c) c = 2 c %= a print(\"c \u7684\u503c\u4e3a\uff1a\", c) c **= a print(\"c \u7684\u503c\u4e3a\uff1a\", c) c //= a print(\"c \u7684\u503c\u4e3a\uff1a\", c) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a c \u7684\u503c\u4e3a\uff1a 31 c \u7684\u503c\u4e3a\uff1a 52 c \u7684\u503c\u4e3a\uff1a 1092 c \u7684\u503c\u4e3a\uff1a 52.0 c \u7684\u503c\u4e3a\uff1a 2 c \u7684\u503c\u4e3a\uff1a 2097152 c \u7684\u503c\u4e3a\uff1a 99864 \u5728 Python 3.8 \u53ca\u66f4\u9ad8\u7248\u672c\u4e2d\uff0c\u5f15\u5165\u4e86\u4e00\u79cd\u65b0\u7684\u8bed\u6cd5\u7279\u6027\uff0c\u79f0\u4e3a\"\u6d77\u8c61\u8fd0\u7b97\u7b26\"\uff08Walrus Operator\uff09\uff0c\u5b83\u4f7f\u7528 := \u7b26\u53f7\u3002\u8fd9\u4e2a\u8fd0\u7b97\u7b26\u7684\u4e3b\u8981\u76ee\u7684\u662f\u5728\u8868\u8fbe\u5f0f\u4e2d\u540c\u65f6\u8fdb\u884c\u8d4b\u503c\u548c\u8fd4\u56de\u8d4b\u503c\u7684\u503c\u3002 \u4f7f\u7528\u6d77\u8c61\u8fd0\u7b97\u7b26\u53ef\u4ee5\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b\u7b80\u5316\u4ee3\u7801\uff0c\u5c24\u5176\u662f\u5728\u9700\u8981\u5728\u8868\u8fbe\u5f0f\u4e2d\u4f7f\u7528\u8d4b\u503c\u7ed3\u679c\u7684\u60c5\u51b5\u4e0b\u3002\u8fd9\u5bf9\u4e8e\u7b80\u5316\u5faa\u73af\u6761\u4ef6\u6216\u8868\u8fbe\u5f0f\u4e2d\u7684\u91cd\u590d\u8ba1\u7b97\u5f88\u6709\u7528\u3002 \u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u5b9e\u4f8b\uff0c\u6f14\u793a\u4e86\u6d77\u8c61\u8fd0\u7b97\u7b26\u7684\u4f7f\u7528\uff1a # \u4f20\u7edf\u5199\u6cd5 n = 10 if n > 5: print(n) # \u4f7f\u7528\u6d77\u8c61\u8fd0\u7b97\u7b26 if (n := 10) > 5: print(n) if (n := 10) > 5: \u8fd9\u662f\u4f7f\u7528\u6d77\u8c61\u8fd0\u7b97\u7b26 \uff08:=) \u7684\u5199\u6cd5\u3002\u6d77\u8c61\u8fd0\u7b97\u7b26\u5728\u8868\u8fbe\u5f0f\u4e2d\u8fdb\u884c\u8d4b\u503c\u64cd\u4f5c\u3002 (n := 10) \uff1a\u5c06\u53d8\u91cf n \u8d4b\u503c\u4e3a 10\uff0c\u540c\u65f6\u8fd4\u56de\u8fd9\u4e2a\u8d4b\u503c\u7ed3\u679c\u3002 > 5 \uff1a\u68c0\u67e5\u8d4b\u503c\u540e\u7684 n \u662f\u5426\u5927\u4e8e 5\u3002\u5982\u679c\u6761\u4ef6\u4e3a\u771f\uff0c\u5219\u6267\u884c\u63a5\u4e0b\u6765\u7684\u4ee3\u7801\u5757\u3002 print(n) \uff1a\u5982\u679c\u6761\u4ef6\u4e3a\u771f\uff0c\u6253\u5370\u53d8\u91cf n \u7684\u503c\uff08\u5373 10\uff09\u3002 \u6d77\u8c61\u8fd0\u7b97\u7b26\u7684\u4f18\u70b9\uff1a \u6d77\u8c61\u8fd0\u7b97\u7b26\uff08 := \uff09\u5141\u8bb8\u5728\u8868\u8fbe\u5f0f\u5185\u90e8\u8fdb\u884c\u8d4b\u503c\uff0c\u8fd9\u53ef\u4ee5\u51cf\u5c11\u4ee3\u7801\u7684\u91cd\u590d\uff0c\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u7b80\u6d01\u6027\u3002 \u5728\u4e0a\u8ff0\u4f8b\u5b50\u4e2d\uff0c\u4f20\u7edf\u5199\u6cd5\u9700\u8981\u5355\u72ec\u4e00\u884c\u6765\u8d4b\u503c n \uff0c\u7136\u540e\u5728 if \u8bed\u53e5\u4e2d\u8fdb\u884c\u6761\u4ef6\u68c0\u67e5\u3002\u800c\u4f7f\u7528\u6d77\u8c61\u8fd0\u7b97\u7b26\u7684\u5199\u6cd5\u53ef\u4ee5\u5728 if \u8bed\u53e5\u4e2d\u76f4\u63a5\u8fdb\u884c\u8d4b\u503c\u548c\u6761\u4ef6\u68c0\u67e5\u3002 7.4 Python\u4f4d\u8fd0\u7b97\u7b26 \u6309\u4f4d\u8fd0\u7b97\u7b26\u662f\u628a\u6570\u5b57\u770b\u4f5c\u4e8c\u8fdb\u5236\u6765\u8fdb\u884c\u8ba1\u7b97\u7684\u3002Python\u4e2d\u7684\u6309\u4f4d\u8fd0\u7b97\u6cd5\u5219\u5982\u4e0b\uff1a \u4e0b\u8868\u4e2d\u53d8\u91cf a \u4e3a 60\uff0cb \u4e3a 13\u4e8c\u8fdb\u5236\u683c\u5f0f\u5982\u4e0b\uff1a a = 0011 1100 b = 0000 1101 ----------------- a&b = 0000 1100 a|b = 0011 1101 a^b = 0011 0001 ~a = 1100 0011 \u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b & \u6309\u4f4d\u4e0e\u8fd0\u7b97\u7b26\uff1a\u53c2\u4e0e\u8fd0\u7b97\u7684\u4e24\u4e2a\u503c,\u5982\u679c\u4e24\u4e2a\u76f8\u5e94\u4f4d\u90fd\u4e3a1,\u5219\u8be5\u4f4d\u7684\u7ed3\u679c\u4e3a1,\u5426\u5219\u4e3a0 (a & b) \u8f93\u51fa\u7ed3\u679c 12 \uff0c\u4e8c\u8fdb\u5236\u89e3\u91ca\uff1a 0000 1100 | \u6309\u4f4d\u6216\u8fd0\u7b97\u7b26\uff1a\u53ea\u8981\u5bf9\u5e94\u7684\u4e8c\u4e2a\u4e8c\u8fdb\u4f4d\u6709\u4e00\u4e2a\u4e3a1\u65f6\uff0c\u7ed3\u679c\u4f4d\u5c31\u4e3a1\u3002 (a | b) \u8f93\u51fa\u7ed3\u679c 61 \uff0c\u4e8c\u8fdb\u5236\u89e3\u91ca\uff1a 0011 1101 ^ \u6309\u4f4d\u5f02\u6216\u8fd0\u7b97\u7b26\uff1a\u5f53\u4e24\u5bf9\u5e94\u7684\u4e8c\u8fdb\u4f4d\u76f8\u5f02\u65f6\uff0c\u7ed3\u679c\u4e3a1 (a ^ b) \u8f93\u51fa\u7ed3\u679c 49 \uff0c\u4e8c\u8fdb\u5236\u89e3\u91ca\uff1a 0011 0001 ~ \u6309\u4f4d\u53d6\u53cd\u8fd0\u7b97\u7b26\uff1a\u5bf9\u6570\u636e\u7684\u6bcf\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u53d6\u53cd,\u5373\u628a1\u53d8\u4e3a0,\u628a0\u53d8\u4e3a1\u3002 ~x \u7c7b\u4f3c\u4e8e -x-1 (~a ) \u8f93\u51fa\u7ed3\u679c -61 \uff0c\u4e8c\u8fdb\u5236\u89e3\u91ca\uff1a 1100 0011\uff0c \u5728\u4e00\u4e2a\u6709\u7b26\u53f7\u4e8c\u8fdb\u5236\u6570\u7684\u8865\u7801\u5f62\u5f0f\u3002 << \u5de6\u79fb\u52a8\u8fd0\u7b97\u7b26\uff1a\u8fd0\u7b97\u6570\u7684\u5404\u4e8c\u8fdb\u4f4d\u5168\u90e8\u5de6\u79fb\u82e5\u5e72\u4f4d\uff0c\u7531\"<<\"\u53f3\u8fb9\u7684\u6570\u6307\u5b9a\u79fb\u52a8\u7684\u4f4d\u6570\uff0c\u9ad8\u4f4d\u4e22\u5f03\uff0c\u4f4e\u4f4d\u88650\u3002 a << 2 \u8f93\u51fa\u7ed3\u679c 240 \uff0c\u4e8c\u8fdb\u5236\u89e3\u91ca\uff1a 1111 0000 >> \u53f3\u79fb\u52a8\u8fd0\u7b97\u7b26\uff1a\u628a\">>\"\u5de6\u8fb9\u7684\u8fd0\u7b97\u6570\u7684\u5404\u4e8c\u8fdb\u4f4d\u5168\u90e8\u53f3\u79fb\u82e5\u5e72\u4f4d\uff0c\">>\"\u53f3\u8fb9\u7684\u6570\u6307\u5b9a\u79fb\u52a8\u7684\u4f4d\u6570 a >> 2 \u8f93\u51fa\u7ed3\u679c 15 \uff0c\u4e8c\u8fdb\u5236\u89e3\u91ca\uff1a 0000 1111 \u4ee5\u4e0b\u5b9e\u4f8b\u6f14\u793a\u4e86Python\u6240\u6709\u4f4d\u8fd0\u7b97\u7b26\u7684\u64cd\u4f5c\uff1a a = 60 # 60 = 0011 1100 b = 13 # 13 = 0000 1101 c = 0 c = a & b # 12 = 0000 1100 print(\"c \u7684\u503c\u4e3a\uff1a\", c) c = a | b # 61 = 0011 1101 print(\"c \u7684\u503c\u4e3a\uff1a\", c) c = a ^ b # 49 = 0011 0001 print(\"c \u7684\u503c\u4e3a\uff1a\", c) c = ~a # -61 = 1100 0011 print(\"c \u7684\u503c\u4e3a\uff1a\", c) c = a << 2 # 240 = 1111 0000 print(\"c \u7684\u503c\u4e3a\uff1a\", c) c = a >> 2 # 15 = 0000 1111 print(\"c \u7684\u503c\u4e3a\uff1a\", c) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a c \u7684\u503c\u4e3a\uff1a 12 c \u7684\u503c\u4e3a\uff1a 61 c \u7684\u503c\u4e3a\uff1a 49 c \u7684\u503c\u4e3a\uff1a -61 c \u7684\u503c\u4e3a\uff1a 240 c \u7684\u503c\u4e3a\uff1a 15 7.5 Python\u903b\u8f91\u8fd0\u7b97\u7b26 Python\u8bed\u8a00\u652f\u6301\u903b\u8f91\u8fd0\u7b97\u7b26\uff0c\u4ee5\u4e0b\u5047\u8bbe\u53d8\u91cf a \u4e3a 10, b\u4e3a 20\uff1a \u8fd0\u7b97\u7b26 \u903b\u8f91\u8868\u8fbe\u5f0f \u63cf\u8ff0 \u5b9e\u4f8b and x and y \u5e03\u5c14\"\u4e0e\" - \u5982\u679c x \u4e3a False\uff0cx and y \u8fd4\u56de x \u7684\u503c\uff0c\u5426\u5219\u8fd4\u56de y \u7684\u8ba1\u7b97\u503c\u3002 (a and b) \u8fd4\u56de 20\u3002 or x or y \u5e03\u5c14\"\u6216\" - \u5982\u679c x \u662f True\uff0c\u5b83\u8fd4\u56de x \u7684\u503c\uff0c\u5426\u5219\u5b83\u8fd4\u56de y \u7684\u8ba1\u7b97\u503c\u3002 (a or b) \u8fd4\u56de 10\u3002 not not x \u5e03\u5c14\"\u975e\" - \u5982\u679c x \u4e3a True\uff0c\u8fd4\u56de False \u3002\u5982\u679c x \u4e3a False\uff0c\u5b83\u8fd4\u56de True\u3002 not(a and b) \u8fd4\u56de False \u4ee5\u4e0b\u5b9e\u4f8b\u6f14\u793a\u4e86Python\u6240\u6709\u903b\u8f91\u8fd0\u7b97\u7b26\u7684\u64cd\u4f5c\uff1a #!/usr/bin/python3 a = 10 b = 20 if a and b: print(\"\u53d8\u91cf a \u548c b \u90fd\u4e3a true\") else: print(\"\u53d8\u91cf a \u548c b \u6709\u4e00\u4e2a\u4e0d\u4e3a true\") if a or b: print(\"\u53d8\u91cf a \u548c b \u90fd\u4e3a true\uff0c\u6216\u5176\u4e2d\u4e00\u4e2a\u53d8\u91cf\u4e3a true\") else: print(\"\u53d8\u91cf a \u548c b \u90fd\u4e0d\u4e3a true\") # \u4fee\u6539\u53d8\u91cf a \u7684\u503c a = 0 if a and b: print(\"\u53d8\u91cf a \u548c b \u90fd\u4e3a true\") else: print(\"\u53d8\u91cf a \u548c b \u6709\u4e00\u4e2a\u4e0d\u4e3a true\") if a or b: print(\"\u53d8\u91cf a \u548c b \u90fd\u4e3a true\uff0c\u6216\u5176\u4e2d\u4e00\u4e2a\u53d8\u91cf\u4e3a true\") else: print(\"\u53d8\u91cf a \u548c b \u90fd\u4e0d\u4e3a true\") if not( a and b: print(\"\u53d8\u91cf a \u548c b \u90fd\u4e3a false\uff0c\u6216\u5176\u4e2d\u4e00\u4e2a\u53d8\u91cf\u4e3a false\") else: print(\"\u53d8\u91cf a \u548c b \u90fd\u4e3a true\") \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a \u53d8\u91cf a \u548c b \u90fd\u4e3a true \u53d8\u91cf a \u548c b \u90fd\u4e3a true\uff0c\u6216\u5176\u4e2d\u4e00\u4e2a\u53d8\u91cf\u4e3a true \u53d8\u91cf a \u548c b \u6709\u4e00\u4e2a\u4e0d\u4e3a true \u53d8\u91cf a \u548c b \u90fd\u4e3a true\uff0c\u6216\u5176\u4e2d\u4e00\u4e2a\u53d8\u91cf\u4e3a true \u53d8\u91cf a \u548c b \u90fd\u4e3a false\uff0c\u6216\u5176\u4e2d\u4e00\u4e2a\u53d8\u91cf\u4e3a false 7.6 Python\u6210\u5458\u8fd0\u7b97\u7b26 \u9664\u4e86\u4ee5\u4e0a\u7684\u4e00\u4e9b\u8fd0\u7b97\u7b26\u4e4b\u5916\uff0cPython\u8fd8\u652f\u6301\u6210\u5458\u8fd0\u7b97\u7b26\uff0c\u6d4b\u8bd5\u5b9e\u4f8b\u4e2d\u5305\u542b\u4e86\u4e00\u7cfb\u5217\u7684\u6210\u5458\uff0c\u5305\u62ec\u5b57\u7b26\u4e32\uff0c\u5217\u8868\u6216\u5143\u7ec4\u3002 \u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b in \u5982\u679c\u5728\u6307\u5b9a\u7684\u5e8f\u5217\u4e2d\u627e\u5230\u503c\u8fd4\u56de True\uff0c\u5426\u5219\u8fd4\u56de False\u3002 x \u5728 y \u5e8f\u5217\u4e2d , \u5982\u679c x \u5728 y \u5e8f\u5217\u4e2d\u8fd4\u56de True\u3002 not in \u5982\u679c\u5728\u6307\u5b9a\u7684\u5e8f\u5217\u4e2d\u6ca1\u6709\u627e\u5230\u503c\u8fd4\u56de True\uff0c\u5426\u5219\u8fd4\u56de False\u3002 x \u4e0d\u5728 y \u5e8f\u5217\u4e2d , \u5982\u679c x \u4e0d\u5728 y \u5e8f\u5217\u4e2d\u8fd4\u56de True\u3002 \u4ee5\u4e0b\u5b9e\u4f8b\u6f14\u793a\u4e86Python\u6240\u6709\u6210\u5458\u8fd0\u7b97\u7b26\u7684\u64cd\u4f5c\uff1a a = 10 b = 20 list = [1, 2, 3, 4, 5 ] if a in list: print(\"\u53d8\u91cf a \u5728\u7ed9\u5b9a\u7684\u5217\u8868\u4e2d list \u4e2d\") else: print(\"\u53d8\u91cf a \u4e0d\u5728\u7ed9\u5b9a\u7684\u5217\u8868\u4e2d list \u4e2d\") if b not in list: print(\"\u53d8\u91cf b \u4e0d\u5728\u7ed9\u5b9a\u7684\u5217\u8868\u4e2d list \u4e2d\") else: print(\"\u53d8\u91cf b \u5728\u7ed9\u5b9a\u7684\u5217\u8868\u4e2d list \u4e2d\") # \u4fee\u6539\u53d8\u91cf a \u7684\u503c a = 2 if a in list: print(\"\u53d8\u91cf a \u5728\u7ed9\u5b9a\u7684\u5217\u8868\u4e2d list \u4e2d\") else: print(\"\u53d8\u91cf a \u4e0d\u5728\u7ed9\u5b9a\u7684\u5217\u8868\u4e2d list \u4e2d\") \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a \u53d8\u91cf a \u4e0d\u5728\u7ed9\u5b9a\u7684\u5217\u8868\u4e2d list \u4e2d \u53d8\u91cf b \u4e0d\u5728\u7ed9\u5b9a\u7684\u5217\u8868\u4e2d list \u4e2d \u53d8\u91cf a \u5728\u7ed9\u5b9a\u7684\u5217\u8868\u4e2d list \u4e2d 7.7 Python\u8eab\u4efd\u8fd0\u7b97\u7b26 \u8eab\u4efd\u8fd0\u7b97\u7b26\u7528\u4e8e\u6bd4\u8f83\u4e24\u4e2a\u5bf9\u8c61\u7684\u5b58\u50a8\u5355\u5143 \u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b is is \u662f\u5224\u65ad\u4e24\u4e2a\u6807\u8bc6\u7b26\u662f\u4e0d\u662f\u5f15\u7528\u81ea\u4e00\u4e2a\u5bf9\u8c61 x is y , \u7c7b\u4f3c id(x) == id(y) , \u5982\u679c\u5f15\u7528\u7684\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\u5219\u8fd4\u56de True\uff0c\u5426\u5219\u8fd4\u56de False is not is not \u662f\u5224\u65ad\u4e24\u4e2a\u6807\u8bc6\u7b26\u662f\u4e0d\u662f\u5f15\u7528\u81ea\u4e0d\u540c\u5bf9\u8c61 x is not y \uff0c \u7c7b\u4f3c id(x) != id(y) \u3002\u5982\u679c\u5f15\u7528\u7684\u4e0d\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\u5219\u8fd4\u56de\u7ed3\u679c True\uff0c\u5426\u5219\u8fd4\u56de False\u3002 \u6ce8\uff1a id()\u51fd\u6570\u7528\u4e8e\u83b7\u53d6\u5bf9\u8c61\u5185\u5b58\u5730\u5740\u3002 \u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u8bf4\uff0c\u7528\u7684\u6bd4\u8f83\u591a\u7684\u662f\u5224\u65ad\u901a\u5e38\u5728\u5224\u65ad\u67d0\u4e2a\u53d8\u91cf\u662f\u5426\u4e3a None \u65f6\uff0c\u66f4\u63a8\u8350\u4f7f\u7528 is \u800c\u975e ==\uff0c\u56e0\u4e3a None \u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u5355\u4f8b\u5bf9\u8c61\u3002 value = None if value is None: print(\"Value is None\") \u4ee5\u4e0b\u5b9e\u4f8b\u6f14\u793a\u4e86Python\u6240\u6709\u8eab\u4efd\u8fd0\u7b97\u7b26\u7684\u64cd\u4f5c\uff1a a = 20 b = 20 if a is b: print(\"a \u548c b \u6709\u76f8\u540c\u7684\u6807\u8bc6\") else: print(\"a \u548c b \u6ca1\u6709\u76f8\u540c\u7684\u6807\u8bc6\") if id(a) == id(b): print(\"a \u548c b \u6709\u76f8\u540c\u7684\u6807\u8bc6\") else: print(\"a \u548c b \u6ca1\u6709\u76f8\u540c\u7684\u6807\u8bc6\") # \u4fee\u6539\u53d8\u91cf b \u7684\u503c b = 30 if a is b: print(\"a \u548c b \u6709\u76f8\u540c\u7684\u6807\u8bc6\") else: print(\"a \u548c b \u6ca1\u6709\u76f8\u540c\u7684\u6807\u8bc6\") if a is not b: print(\"a \u548c b \u6ca1\u6709\u76f8\u540c\u7684\u6807\u8bc6\") else: print(\"a \u548c b \u6709\u76f8\u540c\u7684\u6807\u8bc6\") \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a a \u548c b \u6709\u76f8\u540c\u7684\u6807\u8bc6 a \u548c b \u6709\u76f8\u540c\u7684\u6807\u8bc6 a \u548c b \u6ca1\u6709\u76f8\u540c\u7684\u6807\u8bc6 a \u548c b \u6ca1\u6709\u76f8\u540c\u7684\u6807\u8bc6 is \u4e0e == \u533a\u522b\uff1a is \u7528\u4e8e\u5224\u65ad\u4e24\u4e2a\u53d8\u91cf\u5f15\u7528\u5bf9\u8c61\u662f\u5426\u4e3a\u540c\u4e00\u4e2a\uff0c == \u7528\u4e8e\u5224\u65ad\u5f15\u7528\u53d8\u91cf\u7684\u503c\u662f\u5426\u76f8\u7b49\u3002 >>>a = [1, 2, 3] >>> b = a >>> b is a True >>> b == a True >>> b = a[:] >>> b is a False >>> b == a True 8 Python\u7684\u8f93\u5165\u4e0e\u8f93\u51fa 8.1 \u4f7f\u7528 input \u8bfb\u53d6\u5b57\u7b26\u4e32/\u6574\u6570/\u6d6e\u70b9\u6570 python\u4e2d\u6700\u5e38\u7528\u8bfb\u53d6\u7528\u6237\u8f93\u51fa\u7684\u51fd\u6570\u662f input() \uff0c\u4f1a\u81ea\u52a8\u8bc6\u5c06\u7528\u6237\u8f93\u5165\u5185\u5bb9\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u56e0\u6b64\u5982\u679c\u60f3\u8981\u8f93\u5165\u786e\u5b9a\u7684\u6570\u636e\u7c7b\u578b\u9700\u8981\u63d0\u524d\u7533\u660e\u3002\u4f8b\u5982\uff1a # \u83b7\u53d6\u7528\u6237\u8f93\u5165\u7684\u59d3\u540d name = input(\"\u8bf7\u8f93\u5165\u4f60\u7684\u59d3\u540d\uff1a\") # \u83b7\u53d6\u7528\u6237\u8f93\u5165\u7684\u5e74\u9f84\uff0c\u5e76\u8f6c\u6362\u4e3a\u6574\u6570 age = int(input(\"\u8bf7\u8f93\u5165\u4f60\u7684\u5e74\u9f84\uff1a\")) # \u83b7\u53d6\u7528\u6237\u8f93\u5165\u7684\u5de5\u8d44\uff0c\u5e76\u8f6c\u6362\u4e3a\u6d6e\u70b9\u6570 salary = float(input(\"\u8bf7\u8f93\u5165\u4f60\u7684\u5de5\u8d44\uff1a\")) # \u6253\u5370\u7528\u6237\u7684\u4fe1\u606f print(\"\u4f60\u7684\u4fe1\u606f\u5982\u4e0b\uff1a\") print(f\"\u59d3\u540d: {name}\\n\u5e74\u9f84\uff1a{age}\\n\u5de5\u8d44\uff1a{salary}\") \u4f8b\u5982\u8f93\u5165\u4e3a\uff1a \u8bf7\u8f93\u5165\u4f60\u7684\u59d3\u540d\uff1aCodeRaft\u6cdb\u7f16\u7a0b \u8bf7\u8f93\u5165\u4f60\u7684\u5e74\u9f84\uff1a2 \u8bf7\u8f93\u5165\u4f60\u7684\u5de5\u8d44\uff1a6666.66 \u8f93\u51fa\u5982\u4e0b\uff1a \u4f60\u7684\u4fe1\u606f\u5982\u4e0b\uff1a \u59d3\u540d: CodeRaft\u6cdb\u7f16\u7a0b \u5e74\u9f84\uff1a2 \u5de5\u8d44\uff1a6666.66 8.2 print \u8f93\u51fa print\u6bcf\u6b21\u8f93\u51fa\u540e\u81ea\u52a8\u6362\u884c\uff0c\u662fpython\u6700\u5e38\u7528\u7684\u4e00\u79cd\u8f93\u51fa\u65b9\u5f0f\uff0c\u53ef\u4ee5\u8f93\u51fa\u5404\u79cd\u7c7b\u578b\u6570\u636e\u3002 a = \"CodeRaft\" b = \"\u6cdb\u7f16\u7a0b\" c = 2 + 2 # Printing the strings print(a) print(b) print(c) print(\"\u6211\u5b9e\u73b0\u4e86\u81ea\u52a8\u6362\u884c\") print(\"OvO\") \u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a CodeRaft \u6cdb\u7f16\u7a0b 4 \u6211\u5b9e\u73b0\u4e86\u81ea\u52a8\u6362\u884c OvO 9 \u8bfe\u7a0b\u603b\u7ed3 Python\u73af\u5883\u5b89\u88c5\u6b63\u5e38\u3002 \u5b8c\u6210\u7b2c\u4e00\u4e2aHello World\u7a0b\u5e8f\u3002 \u8ba4\u8bc6\u53d8\u91cf\u7c7b\u578b\u548c\u547d\u540d\u65b9\u5f0f\u3002 Python\u4e2d\u7684\u8fd0\u7b97\u7b26\u3002 Python\u7684\u8f93\u5165\u4e0e\u8f93\u51fa\u3002 \u8bfe\u540e\u7ec3\u4e60 1.\u7f16\u5199\u4e00\u4e2aPython\u7a0b\u5e8f\u6765\u627e\u51fa\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u7684\u6700\u5c0f\u6b63\u6574\u6570\uff1a \u8be5\u6570\u9664\u4ee512\u4f591 \u8be5\u6570\u9664\u4ee523\u4e5f\u4f591 \u8be5\u6570\u9664\u4ee531\u4e5f\u4f591 \u8bf7\u5728\u4ee5\u4e0b\u9009\u9879\u4e2d\u9009\u62e9\u4e00\u4e2a\u6b63\u786e\u7684\u7b54\u6848\uff0c\u8be5\u7b54\u6848\u6ee1\u8db3\u4e0a\u8ff0\u6240\u6709\u6761\u4ef6\uff1a (A) 4191 (B) 3232 (C) 8577 (D) 9233 \u53c2\u8003\u7a0b\u5e8f\uff1a target = int(input(\"\u8f93\u5165\u76ee\u6807\u9009\u9879\u7b54\u6848:\")) a = target % 12 b = target % 23 c = target % 31 print(\"a=\",a,\"\\nb=\",b,\"\\nc=\",c) if a == b == c == 1: print(\"Correct,That's what I find!!\") else: print(\"Wrong,Please try another Answer!\") 2.\u7f16\u5199\u4e00\u4e2aPython\u7a0b\u5e8f\uff0c\u7528\u4e8e\u6a21\u62df\u9910\u5385\u7684\u70b9\u5355\u8fc7\u7a0b\u3002\u7a0b\u5e8f\u5e94\u63d0\u524d\u544a\u77e5\u7528\u6237\u6c49\u5821\u3001\u85af\u6761\u548c\u53ef\u4e50\u7684\u4ef7\u683c\uff0c\u5e76\u901a\u8fc7\u7528\u6237\u8f93\u5165\u83b7\u5f97\u70b9\u5355\u4fe1\u606f\u3002\u6700\u540e\uff0c\u7a0b\u5e8f\u5e94\u5206\u884c\u8f93\u51fa\u5ba2\u6237\u70b9\u7684\u5185\u5bb9\uff0c\u5e76\u6253\u5370\u51fa\u603b\u4ef7\u3002 \u4ef7\u683c\u4fe1\u606f\uff1a \u6c49\u5821\uff1a$5 \u85af\u6761\uff1a$2 \u53ef\u4e50\uff1a$1 \u529f\u80fd\u8981\u6c42\uff1a \u663e\u793a\u5404\u9879\u98df\u7269\u7684\u4ef7\u683c\u3002 \u63d0\u793a\u7528\u6237\u8f93\u5165\u6bcf\u79cd\u98df\u7269\u7684\u6570\u91cf\u3002 \u8ba1\u7b97\u5e76\u663e\u793a\u6bcf\u79cd\u98df\u7269\u7684\u70b9\u5355\u6570\u91cf\u3002 \u8ba1\u7b97\u5e76\u663e\u793a\u603b\u4ef7\u3002 \u8f93\u5165\u8f93\u51fa\u793a\u4f8b\uff1a \u793a\u4f8b\u8f93\u51fa\uff1a \u6c49\u5821\uff1a$5 \u85af\u6761\uff1a$2 \u53ef\u4e50\uff1a$1 \u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf\uff1a2 \u8bf7\u8f93\u5165\u85af\u6761\u7684\u6570\u91cf\uff1a1 \u8bf7\u8f93\u5165\u53ef\u4e50\u7684\u6570\u91cf\uff1a3 \u60a8\u7684\u70b9\u5355\u5982\u4e0b\uff1a \u6c49\u5821 X 2 \u85af\u6761 X 1 \u53ef\u4e50 X 3 \u603b\u4ef7\uff1a$15 \u63d0\u793a\uff1a \u4f7f\u7528 input() \u51fd\u6570\u83b7\u53d6\u7528\u6237\u8f93\u5165\u3002 \u4f7f\u7528\u7b97\u672f\u8fd0\u7b97\u8ba1\u7b97\u603b\u4ef7\u3002 \u4f7f\u7528 print() \u51fd\u6570\u8f93\u51fa\u7ed3\u679c\u3002 \u793a\u4f8b\u4ee3\u7801\uff1a # \u5b9a\u4e49\u98df\u7269\u7684\u4ef7\u683c burger_price = 5 fries_price = 2 cola_price = 1 # \u663e\u793a\u4ef7\u683c\u4fe1\u606f print(f\"\u6c49\u5821\uff1a${burger_price}\") print(f\"\u85af\u6761\uff1a${fries_price}\") print(f\"\u53ef\u4e50\uff1a${cola_price}\\n\") # \u83b7\u53d6\u7528\u6237\u8f93\u5165\u7684\u70b9\u5355\u6570\u91cf burger_count = int(input(\"\u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf\uff1a\")) fries_count = int(input(\"\u8bf7\u8f93\u5165\u85af\u6761\u7684\u6570\u91cf\uff1a\")) cola_count = int(input(\"\u8bf7\u8f93\u5165\u53ef\u4e50\u7684\u6570\u91cf\uff1a\")) # \u8ba1\u7b97\u603b\u4ef7 total_price = (burger_count * burger_price + fries_count * fries_price + cola_count * cola_price) # \u8f93\u51fa\u70b9\u5355\u5185\u5bb9\u548c\u603b\u4ef7 print(\"\\n\u60a8\u7684\u70b9\u5355\u5982\u4e0b\uff1a\") print(f\"\u6c49\u5821 X {burger_count}\") print(f\"\u85af\u6761 X {fries_count}\") print(f\"\u53ef\u4e50 X {cola_count}\") print(f\"\\n\u603b\u4ef7\uff1a${total_price}\")","title":"Lesson 1 Python\u7684\u73af\u5883\u8bbe\u7f6e\u3001\u6570\u636e\u7c7b\u578b\u3001\u8fd0\u7b97\u7b26\u548c\u8f93\u5165\u548c\u8f93\u51fa"},{"location":"lesson1/Lesson1%20Python/#lesson-1-python","text":"","title":"Lesson 1 Python\u7684\u73af\u5883\u8bbe\u7f6e\u3001\u6570\u636e\u7c7b\u578b\u3001\u8fd0\u7b97\u7b26\u548c\u8f93\u5165\u548c\u8f93\u51fa"},{"location":"lesson1/Lesson1%20Python/#_1","text":"Lesson 1 Python\u7684\u73af\u5883\u8bbe\u7f6e\u3001\u6570\u636e\u7c7b\u578b\u3001\u8fd0\u7b97\u7b26\u548c\u8f93\u5165\u548c\u8f93\u51fa \u524d\u8a00\uff1a\u4e3a\u4ec0\u4e48\u8981\u5b66\u4e60Python 1. Python\u73af\u5883\u8bbe\u7f6e 1.1 \u4e3a\u4ec0\u4e48\u9009\u62e9Anaconda 1.2 Anaconda \u5b89\u88c5 1.2.1 macOS \u5e73\u53f0 1.2.2 Win \u5e73\u53f0 1.3 Pycharm\u5b89\u88c5 2. \u7b2c\u4e00\u4e2a\u7a0b\u5e8f\uff1aHello World\uff01 3. Python\u5e38\u7528\u7684\u5f00\u53d1\u73af\u5883\uff08IDE\uff09 3.1 PyCharm 3.2 Visual Studio Code 3.3 Jupyter Notebook 4. Python\u4e2d\u7684\u6807\u8bc6\u7b26 4.1 \u6807\u8bc6\u7b26 4.2 Python \u4fdd\u7559\u5b57\u7b26 4.3 \u6ce8\u91ca 4.4 \u884c\u548c\u7f29\u8fdb 5. Python\u4e2d\u7684\u53d8\u91cf 5.1 \u591a\u4e2a\u53d8\u91cf\u8d4b\u503c 6. Python\u7684\u6570\u636e\u7c7b\u578b 6.1 \u57fa\u672c\u6570\u636e\u7c7b\u578b 6.1.1 \u6570\u5b57\u7c7b\u578b 6.1.2 \u5b57\u7b26\u4e32 6.1.3 bool\uff08\u5e03\u5c14\u7c7b\u578b\uff09 6.1.4 List\uff08\u5217\u8868\uff09 6.1.5 Tuple\uff08\u5143\u7ec4\uff09 6.1.6 Set\uff08\u96c6\u5408\uff09 6.1.7 Dictionary\uff08\u5b57\u5178\uff09 6.2 \u5e38\u7528\u6570\u636e\u7c7b\u578b\u7684\u4f7f\u7528\u5b9e\u4f8b 7. Python\u4e2d\u7684\u8fd0\u7b97\u7b26 7.1 Python\u7b97\u672f\u8fd0\u7b97\u7b26 7.2 Python \u6bd4\u8f83\u8fd0\u7b97\u7b26 7.3 Python\u8d4b\u503c\u8fd0\u7b97\u7b26 7.4 Python\u4f4d\u8fd0\u7b97\u7b26 7.5 Python\u903b\u8f91\u8fd0\u7b97\u7b26 7.6 Python\u6210\u5458\u8fd0\u7b97\u7b26 7.7 Python\u8eab\u4efd\u8fd0\u7b97\u7b26 8. Python\u7684\u8f93\u5165\u4e0e\u8f93\u51fa 8.1 \u4f7f\u7528 input \u8bfb\u53d6\u5b57\u7b26\u4e32/\u6574\u6570/\u6d6e\u70b9\u6570 8.2 print \u8f93\u51fa 9. \u8bfe\u7a0b\u603b\u7ed3 \u8bfe\u540e\u7ec3\u4e60","title":"\u76ee\u5f55"},{"location":"lesson1/Lesson1%20Python/#python","text":"\u6613\u4e8e\u5b66\u4e60\uff1aPython\u8bed\u6cd5\u7b80\u5355\uff0c\u9002\u5408\u521d\u5b66\u8005\u3002 \u5e94\u7528\u5e7f\u6cdb\uff1a\u53ef\u7528\u4e8e\u6570\u636e\u5206\u6790\u3001\u7f51\u7ad9\u5f00\u53d1\u3001\u81ea\u52a8\u5316\u7b49\u3002 \u4e30\u5bcc\u7684\u5e93\u652f\u6301\uff1a\u63d0\u4f9b\u5927\u91cf\u73b0\u6210\u7684\u5de5\u5177\u548c\u529f\u80fd\uff0c\u65b9\u4fbf\u5feb\u901f\u5f00\u53d1\u3002","title":"\u524d\u8a00\uff1a\u4e3a\u4ec0\u4e48\u8981\u5b66\u4e60Python"},{"location":"lesson1/Lesson1%20Python/#1-python","text":"","title":"1. Python\u73af\u5883\u8bbe\u7f6e"},{"location":"lesson1/Lesson1%20Python/#11-anaconda","text":"\u65b9\u4fbf\u5b89\u88c5\uff1a \u5b89\u88c5 Anaconda\u5c31\u50cf\u5b89\u88c5\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4e00\u6837\u7b80\u5355\uff0c\u5b83\u4e3a\u60a8\u9884\u5148\u5b89\u88c5\u597d\u4e86\u8bb8\u591a\u5e38\u7528\u7684\u5de5\u5177\uff0c\u65e0\u9700\u5355\u72ec\u914d\u7f6e\u3002 \u5305\u7ba1\u7406\u5668\uff1a Anaconda \u5305\u542b\u4e00\u4e2a\u540d\u4e3a Conda \u7684\u5305\u7ba1\u7406\u5668\uff0c\u7528\u4e8e\u5b89\u88c5\u3001\u66f4\u65b0\u548c\u7ba1\u7406\u8f6f\u4ef6\u5305\u3002Conda \u4e0d\u4ec5\u9650\u4e8e Python\uff0c\u8fd8\u652f\u6301\u591a\u79cd\u5176\u4ed6\u8bed\u8a00\u7684\u5305\u7ba1\u7406\u3002 \u73af\u5883\u7ba1\u7406\uff1a \u4f7f\u7528 Anaconda\uff0c\u60a8\u53ef\u4ee5\u8f7b\u677e\u5730\u521b\u5efa\u548c\u7ba1\u7406\u591a\u4e2a\u72ec\u7acb\u7684 Python \u73af\u5883\uff0c\u7136\u540e\u5b9e\u73b0\u81ea\u7531\u5207\u6362\u3002\u8fd9\u5bf9\u4e8e\u5728\u4e0d\u540c\u9879\u76ee\u4e2d\u4f7f\u7528\u4e0d\u540c\u7684\u5e93\u548c\u5de5\u5177\u7248\u672c\u975e\u5e38\u6709\u7528\uff0c\u4ee5\u907f\u514d\u7248\u672c\u51b2\u7a81\u3002 \u96c6\u6210\u5de5\u5177\u548c\u5e93\uff1a Anaconda \u6346\u7ed1\u4e86\u8bb8\u591a\u7528\u4e8e\u6570\u636e\u79d1\u5b66\u3001\u673a\u5668\u5b66\u4e60\u548c\u79d1\u5b66\u8ba1\u7b97\u7684\u91cd\u8981\u5de5\u5177\u548c\u5e93\uff0c\u5982 NumPy\u3001Pandas\u3001Matplotlib\u3001SciPy\u3001Scikit-learn \u7b49\u3002 Jupyter \u7b14\u8bb0\u672c\uff1a Jupyter \u662f\u4e00\u4e2a\u4ea4\u4e92\u5f0f\u7684\u8ba1\u7b97\u73af\u5883\uff0c\u652f\u6301\u591a\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0c\u4f46\u5728 Anaconda \u4e2d\u4e3b\u8981\u7528\u4e8e Python\u3002\u5b83\u5141\u8bb8\u7528\u6237\u521b\u5efa\u548c\u5171\u4eab\u5305\u542b\u5b9e\u65f6\u4ee3\u7801\u3001\u65b9\u7a0b\u5f0f\u3001\u53ef\u89c6\u5316\u548c\u53d9\u8ff0\u6587\u672c\u7684\u6587\u6863\u3002 \u8de8\u5e73\u53f0\u6027\uff1a Anaconda \u53ef\u5728 Windows\u3001macOS \u548c Linux \u7b49\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u8fd0\u884c\uff0c\u4f7f\u5176\u6210\u4e3a\u4e00\u4e2a\u8de8\u5e73\u53f0\u7684\u89e3\u51b3\u65b9\u6848\u3002 \u793e\u533a\u652f\u6301\uff1a Anaconda \u62e5\u6709\u5e9e\u5927\u7684\u793e\u533a\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u793e\u533a\u8bba\u575b\u4e0a\u83b7\u53d6\u5e2e\u52a9\u3001\u5206\u4eab\u7ecf\u9a8c\u548c\u89e3\u51b3\u95ee\u9898\u3002","title":"1.1 \u4e3a\u4ec0\u4e48\u9009\u62e9Anaconda"},{"location":"lesson1/Lesson1%20Python/#12-anaconda","text":"Anaconda \u5b89\u88c5\u5305\u4e0b\u8f7d\u5730\u5740\uff1ahttps://www.anaconda.com/download\u3002 Anaconda \u53ef\u5728 Windows\u3001macOS \u548c Linux \u7b49\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u8fd0\u884c\uff0c\u4f60\u53ef\u4ee5\u6839\u636e\u4e0d\u540c\u5e73\u53f0\u4e0b\u8f7d\u5b89\u88c5\u5305\uff1a","title":"1.2 Anaconda \u5b89\u88c5"},{"location":"lesson1/Lesson1%20Python/#121-macos","text":"\u5b89\u88c5\u8fc7\u7a0b\u4e5f\u5f88\u7b80\u5355\uff0c\u53cc\u51fb\u6253\u5f00\u4e0b\u8f7d\u7684\u5b89\u88c5\u5305\uff0c\u9009\u62e9 Install for me only : \u70b9\u51fb install \u6309\u94ae\uff1a \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u70b9\u51fb Continue \u6309\u94ae\uff0c\u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u770b\u5230\u5b89\u88c5\u5b8c\u6210\u7684\u754c\u9762\uff1a macOS \u5e73\u53f0\u5b89\u88c5\u53ef\u4ee5\u53c2\u8003\u5b98\u7f51\uff1ahttps://docs.anaconda.com/free/anaconda/install/mac-os/","title":"1.2.1 macOS \u5e73\u53f0"},{"location":"lesson1/Lesson1%20Python/#122win","text":"Win \u5e73\u53f0\u4e0e macOS \u7c7b\u4f3c\uff0c\u5728\u4e0b\u8f7d\u5b89\u88c5\u5305\u540e\uff0c\u53cc\u51fb\u5b89\u88c5\u5305\uff0c\u540c\u610f\u4e00\u4e9b\u534f\u8bae\uff0c\u7b80\u5355\u7684\u5c31\u53ef\u4ee5\u6309\u9ed8\u8ba4\u8bbe\u7f6e\u4e00\u6b65\u6b65\u6309 Next \u6309\u94ae\u5c31\u53ef\u4ee5\u3002 \u9009\u62e9\u5b89\u88c5\u76ee\u5f55\uff1a \u5728 \"Advanced Installation Options\" \u4e2d\u4e0d\u8981\u52fe\u9009 \"Add Anaconda to my PATH environment variable.\"\uff08\"\u6dfb\u52a0Anaconda\u81f3\u6211\u7684\u73af\u5883\u53d8\u91cf\u3002\"\uff09\uff0c\u56e0\u4e3a\u5982\u679c\u52fe\u9009\uff0c\u5219\u5c06\u4f1a\u5f71\u54cd\u5176\u4ed6\u7a0b\u5e8f\u7684\u4f7f\u7528\u3002 \u70b9\u51fb Install \u6309\u94ae\u8fdb\u884c\u5b89\u88c5\uff0c\u5b89\u88c5\u6210\u529f\u51fa\u73b0\u5982\u4e0b\u754c\u9762\uff1a \u70b9\u51fb Next \u6309\u94ae\uff1a Win \u5e73\u53f0\u5b89\u88c5\u53ef\u4ee5\u53c2\u8003\u5b98\u7f51\uff1ahttps://docs.anaconda.com/free/anaconda/install/windows/","title":"1.2.2Win \u5e73\u53f0"},{"location":"lesson1/Lesson1%20Python/#12-pycharm","text":"\u6211\u4eec\u76f4\u63a5\u6253\u5f00pycharm\u5b98\u7f51\u8fdb\u884c\u4e0b\u8f7d\u5b89\u88c5\uff1ahttps://www.jetbrains.com/pycharm/download/ \u9875\u9762\u5f80\u4e0b\u6ed1\u5230\u5e95\uff0c\u4e0b\u8f7d\u8fd9\u4e2a\u514d\u8d39\u7684\u793e\u533a\u7248\uff0c mac\u7528\u6237\u53ea\u9700\u4e0b\u8f7d\u540e\u8fdb\u884c\u62d6\u62fd\u5b89\u88c5\u5c31\u53ef\u4ee5\u6253\u5f00\u4e86\u3002 \u5982\u679c\u662fwin\u7528\u6237\uff0c\u5b89\u88c5\u65f6\u9700\u8981\u6ce8\u610f\u81ea\u5df1\u7684\u5b89\u88c5\u4f4d\u7f6e\uff08\u5982\u679cC\u76d8\u592a\u5c0f\u4e0d\u5efa\u8bae\u653eC\u76d8\uff0c\u4e00\u822c\u9009\u62e964\u4f4d\u5b89\u88c5\uff0c\u6839\u636e\u81ea\u5df1\u7535\u8111\u5b9e\u9645\u9700\u6c42\uff09\uff0c\u5176\u4ed6\u9009\u9879\u4e00\u822c\u9ed8\u8ba4\u5373\u53ef\u3002 \u76f4\u63a5\u6253\u5f00Pycharm\uff0c\u6216\u8005\u5728Anaconda\u4e2d\u6253\u5f00Pycharm\u793e\u533a\u7248 \u4e00\u822c\u7b2c\u4e00\u6b21\u6253\u5f00\u6211\u4eec\u65b0\u5efa\u4e00\u4e2a\u9879\u76ee\u5c31\u53ef\u4ee5\uff0c\u4e00\u4e2a\u9879\u76ee\u662f\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u91cc\u9762\u521b\u5efa\u591a\u4e2a\u6587\u4ef6 \u5728Anaconda\u5b89\u88c5\u597d\u7684\u60c5\u51b5\u4e0b\uff0c\u9009\u62e9\u57fa\u4e8econda\u7684\u73af\u5883\uff0c\u5176\u4ed6\u6240\u6709\u9009\u9879\u9ed8\u8ba4\u5373\u53ef\uff0c\u70b9\u51fb\u53f3\u4e0b\u89d2\u521b\u5efa\u7b2c\u4e00\u4e2a\u9879\u76ee\u3002 \u7136\u540e\u70b9\u51fb\u521b\u5efa\uff0c\u6211\u4eec\u5728:\u6587\u4ef6\u5939\u7684\u4f4d\u7f6e\u53f3\u51fb\u521b\u5efa\u4e00\u4e2a\u65b0\u7684python\u6587\u4ef6\uff0c\u5f00\u59cb\u6211\u4eec\u7684\u7b2c\u4e00\u6bb5\u4ee3\u7801\u3002","title":"1.2 Pycharm\u5b89\u88c5"},{"location":"lesson1/Lesson1%20Python/#2-hello-world","text":"\u5f97\u76ca\u4e8ePython\u7b80\u5355\u7684\u8bed\u6cd5\u548c\u9ad8\u7684\u53ef\u8bfb\u6027\uff0c\u53ea\u9700\u4e00\u884c\u5373\u53ef\u5b8c\u6210\u6211\u4eec\u7684\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\u3002 print(\"Hello World\") \u6211\u4eec\u5728\u8f93\u5165\u8fd9\u4e00\u884c\u4ee3\u7801\u540e\uff0c\u53ea\u9700\u70b9\u51fb\u53f3\u4e0a\u89d2\u7684\u8fd0\u884c\uff0c\u5373\u53ef\u5728\u63a7\u5236\u53f0\u770b\u5230\u6211\u4eec\u7684\u8f93\u51fa\u3002","title":"2. \u7b2c\u4e00\u4e2a\u7a0b\u5e8f\uff1aHello World\uff01"},{"location":"lesson1/Lesson1%20Python/#3-pythonide","text":"\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff08IDE\uff09\u4e13\u4e3a\u8f6f\u4ef6\u5f00\u53d1\u800c\u8bbe\u8ba1\uff0c\u63d0\u4f9b\u591a\u79cd\u529f\u80fd\u4ee5\u7b80\u5316\u5f00\u53d1\u8fc7\u7a0b\u3002\u5bf9\u4e8e Python \u6765\u8bf4\uff0c\u6709\u5404\u79cd\u53ef\u7528\u7684 IDE\uff0c\u6bcf\u4e2a IDE \u90fd\u63d0\u4f9b\u72ec\u7279\u7684\u4f18\u52bf\u548c\u529f\u80fd\u6765\u6ee1\u8db3\u4e0d\u540c\u7684\u5f00\u53d1\u9700\u6c42\u3002","title":"3. Python\u5e38\u7528\u7684\u5f00\u53d1\u73af\u5883\uff08IDE\uff09"},{"location":"lesson1/Lesson1%20Python/#31-pycharm","text":"PyCharm \u662f JetBrains \u5f00\u53d1\u7684\u4e00\u6b3e\u529f\u80fd\u5f3a\u5927\u7684 Python IDE\uff0c\u4e13\u4e3a Python \u5f00\u53d1\u4eba\u5458\u7684\u9700\u6c42\u800c\u91cf\u8eab\u5b9a\u5236\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u5168\u9762\u7684\u529f\u80fd\uff0c\u5305\u62ec\uff1a \u667a\u80fd\u4ee3\u7801\u5b8c\u6210 \uff1aPyCharm \u63d0\u4f9b\u4e0a\u4e0b\u6587\u611f\u77e5\u7684\u4ee3\u7801\u5b8c\u6210\uff0c\u53ef\u5efa\u8bae\u4ee3\u7801\u7247\u6bb5\u3001\u5e93\u548c\u53d8\u91cf\u540d\u79f0\u3002 \u9519\u8bef\u68c0\u6d4b\u548c\u5feb\u901f\u4fee\u590d \uff1aPyCharm \u5b9e\u65f6\u626b\u63cf\u4ee3\u7801\uff0c\u68c0\u6d4b\u9519\u8bef\u5e76\u63d0\u4f9b\u5feb\u901f\u4fee\u590d\u5efa\u8bae\u3002 \u5355\u5143\u6d4b\u8bd5\u96c6\u6210 \uff1aPyCharm \u4e0e\u6d41\u884c\u7684\u5355\u5143\u6d4b\u8bd5\u6846\u67b6\uff08\u5982 pytest \u548c nose\uff09\u96c6\u6210\uff0c\u5141\u8bb8\u8f7b\u677e\u8fd0\u884c\u548c\u8c03\u8bd5\u6d4b\u8bd5\u3002 \u7248\u672c\u63a7\u5236\u96c6\u6210 \uff1aPyCharm \u652f\u6301\u6d41\u884c\u7684\u7248\u672c\u63a7\u5236\u7cfb\u7edf\uff08\u5982 Git \u548c Mercurial\uff09\uff0c\u7b80\u5316\u4e86\u534f\u4f5c\u548c\u4ee3\u7801\u7ba1\u7406\u3002 \u5f3a\u5927\u7684\u8c03\u8bd5\u5668 \uff1aPyCharm \u63d0\u4f9b\u4e86\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684\u8c03\u8bd5\u5668\uff0c\u53ef\u7528\u4e8e\u9010\u6b65\u6267\u884c\u4ee3\u7801\u3001\u8bbe\u7f6e\u65ad\u70b9\u548c\u68c0\u67e5\u53d8\u91cf\u503c\u3002 \u4f18\u70b9 \uff1a \u5e7f\u6cdb\u7684\u529f\u80fd\u96c6 \u7528\u6237\u53cb\u597d\u754c\u9762 \u51fa\u8272\u7684\u4ee3\u7801\u5b8c\u6210\u548c\u9519\u8bef\u68c0\u6d4b \u4e0e\u5176\u4ed6\u5de5\u5177\u548c\u63d2\u4ef6\u7684\u65e0\u7f1d\u96c6\u6210 \u7f3a\u70b9 \uff1a \u53ef\u80fd\u6709\u70b9\u8d35\uff08\u4e13\u4e1a\u7248\uff09\uff0c\u5c24\u5176\u662f\u5bf9\u4e8e\u521d\u5b66\u8005 \u5927\u578b:\u53ef\u80fd\u4f1a\u51cf\u6162\u901f\u5ea6","title":"3.1 PyCharm"},{"location":"lesson1/Lesson1%20Python/#32-visual-studio-code","text":"Visual Studio Code (VSCode) \u662f Microsoft \u5f00\u53d1\u7684\u4e00\u4e2a\u514d\u8d39\u4e14\u5f00\u6e90\u7684\u8de8\u5e73\u53f0 IDE\u3002\u5b83\u662f Python \u5f00\u53d1\u4eba\u5458\u4e2d\u6700\u53d7\u6b22\u8fce\u7684\u9009\u62e9\u4e4b\u4e00\uff0c\u5176\u7279\u70b9\u5305\u62ec\uff1a \u8f7b\u91cf\u7ea7\u548c\u5feb\u901f \uff1aVSCode \u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684 IDE\uff0c\u5728\u542f\u52a8\u548c\u52a0\u8f7d:\u65f6\u975e\u5e38\u5feb\u3002 \u5b9a\u5236\u5316\u7a0b\u5ea6\u9ad8 \uff1aVSCode \u5141\u8bb8\u7528\u6237\u901a\u8fc7\u4e3b\u9898\u3001\u6269\u5c55\u548c\u8bbe\u7f6e\u5bf9 IDE \u8fdb\u884c\u9ad8\u5ea6\u5b9a\u5236\u3002 \u5185\u7f6e\u8c03\u8bd5\u5668 \uff1aVSCode \u63d0\u4f9b\u4e86\u4e00\u4e2a\u5185\u7f6e\u8c03\u8bd5\u5668\uff0c\u53ef\u7528\u4e8e\u8c03\u8bd5\u4ee3\u7801\u5e76\u8bbe\u7f6e\u65ad\u70b9\u3002 \u7ec8\u7aef\u96c6\u6210 \uff1aVSCode \u96c6\u6210\u4e86\u4e00\u4e2a\u7ec8\u7aef\uff0c\u5141\u8bb8\u7528\u6237\u5728 IDE \u4e2d\u8f7b\u677e\u8fd0\u884c\u547d\u4ee4\u548c\u811a\u672c\u3002 \u4ee3\u7801\u7247\u6bb5\u548c\u4ee3\u7801\u8f85\u52a9 \uff1aVSCode \u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u4ee3\u7801\u7247\u6bb5\u5e93\u548c\u4ee3\u7801\u8f85\u52a9\u529f\u80fd\uff0c\u4ee5\u52a0\u5feb\u5f00\u53d1\u901f\u5ea6\u3002 \u4f18\u70b9 \uff1a \u514d\u8d39\u4e14\u5f00\u6e90 \u8f7b\u91cf\u7ea7\u4e14\u5feb\u901f \u9ad8\u5ea6\u53ef\u5b9a\u5236 \u5e9e\u5927\u7684\u6269\u5c55\u751f\u6001\u7cfb\u7edf \u7f3a\u70b9 \uff1a IDE\u53ef\u80fd\u6ca1\u6709\u5305\u542b\u4e00\u4e9b\u5728\u5176\u4ed6IDE\u4e2d\u5e38\u89c1\u7684\u539f\u751f\u7279\u6027\u6216\u529f\u80fd\uff0c\u67d0\u4e9b\u9ad8\u7ea7\u529f\u80fd\u9700\u8981\u5b89\u88c5\u6269\u5c55\uff0c\u5bf9\u65b0\u624b\u4e0d\u53cb\u597d","title":"3.2 Visual Studio Code"},{"location":"lesson1/Lesson1%20Python/#33-jupyter-notebook","text":"Jupyter Notebook \u662f\u4e00\u4e2a\u57fa\u4e8e\u6d4f\u89c8\u5668\u7684\u4ea4\u4e92\u5f0f\u7b14\u8bb0\u672c\u73af\u5883\uff0c\u975e\u5e38\u9002\u5408\u63a2\u7d22\u6570\u636e\u3001\u539f\u578b\u8bbe\u8ba1\u548c\u521b\u5efa\u53ef\u91cd\u590d\u7684\u6587\u6863\u3002Python \u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\uff1a \u6267\u884c\u4ee3\u7801\u5757 \uff1aNotebook \u5141\u8bb8\u7528\u6237\u7f16\u5199\u5e76\u6267\u884c Python \u4ee3\u7801\u5757\uff0c\u5e76\u5728\u5355\u72ec\u7684\u5355\u5143\u683c\u4e2d\u67e5\u770b\u7ed3\u679c\u3002 \u53ef\u89c6\u5316\u6570\u636e \uff1aNotebook \u96c6\u6210\u4e86\u5404\u79cd\u53ef\u89c6\u5316\u5e93\uff0c\u5141\u8bb8\u7528\u6237\u521b\u5efa\u4ea4\u4e92\u5f0f\u53ef\u89c6\u5316\u548c\u56fe\u8868\u3002 \u6587\u6863\u548c\u534f\u4f5c \uff1aNotebook \u63d0\u4f9b\u4e86\u4e00\u4e2a\u6807\u8bb0\u8bed\u8a00\uff0c\u5141\u8bb8\u7528\u6237\u521b\u5efa\u4ea4\u4e92\u5f0f\u3001\u53ef\u6587\u6863\u5316\u7684\u6587\u6863\u3002 \u5206\u4eab\u548c\u5d4c\u5165 \uff1aNotebook \u53ef\u4ee5\u8f7b\u677e\u5171\u4eab\u548c\u5d4c\u5165\u5230\u5176\u4ed6\u5e73\u53f0\u4e2d\uff0c\u4f8b\u5982\u535a\u5ba2\u548c\u7f51\u7ad9\u3002 \u4f18\u70b9 \uff1a \u4ea4\u4e92\u5f0f\u548c\u63a2\u7d22\u6027 \u6613\u4e8e\u521b\u5efa\u53ef\u91cd\u590d\u7684\u6587\u6863 \u9002\u7528\u4e8e\u6570\u636e\u79d1\u5b66\u548c\u673a\u5668\u5b66\u4e60\u4efb\u52a1 \u7f3a\u70b9 \uff1a \u5bf9\u4e8e\u5927\u578b\u9879\u76ee\u53ef\u80fd\u4e0d\u9002\u5408 \u7f3a\u4e4f\u67d0\u4e9b IDE \u4e2d\u53d1\u73b0\u7684\u8c03\u8bd5\u548c\u7248\u672c\u63a7\u5236\u529f\u80fd Pycharm\u76f8\u6bd4\u4e8eVS Code\u6700\u597d\u7684\u70b9\u5728\u4e8e\u529f\u80fd\u5168\u9762\u4e14\u5f00\u7bb1\u5373\u7528\uff0c\u800cVSCode\u53ef\u80fd\u8fd8\u8981\u4e0b\u8f7d\u4e00\u4e9b\u63d2\u4ef6\u73af\u5883\u6216\u8005\u8fdb\u884c\u989d\u5916\u914d\u7f6e\u3002VSCode\u597d\u5728\u63d2\u4ef6\u793e\u533a\u5f3a\u5927\uff0c\u56e0\u6b64\u652f\u6301\u6700\u65b0\u7684\u5982GitHub Copilot\u7684\u5927\u6a21\u578b\u81ea\u52a8\u8865\u5145\u529f\u80fd\u3002Jupyter\u7684\u7279\u70b9\u662f\u53ef\u4ee5\u6bcf\u5199\u4e00\u884c\u5c31\u770b\u5230\u6267\u884c\u7684\u7ed3\u679c\uff0c\u6bd4\u5176\u4ed6\u4e24\u4e2a\u7f16\u8f91\u5668\u66f4\u9002\u5408\u5f00\u53d1\u590d\u6742\u7684\u6d41\u7a0b\u3002 Anaconda\u56e0\u5176\u5168\u9762\u7684\u96c6\u6210\uff0c\u5bf9\u4e8e\u521d\u5b66\u8005\u662f\u6781\u5176\u53cb\u597d\u7684\uff0c\u867d\u7136\u529f\u80fd\u4e0a\u4f1a\u6709\u4e9b\u5197\u4f59\uff0c\u4f46\u5176\u7b80\u5355\u7684\u73af\u5883\u914d\u7f6e\u4ee5\u53ca\u5168\u9762\u7684\u529f\u80fd\u8d62\u5f97\u4e86\u8bb8\u591a\u4eba\u7684\u559c\u7231\u3002Anaconda\u81ea\u5e26\u6700\u65b0python\u7248\u672c\uff0c\u56e0\u6b64\u6211\u4eec\u65e0\u9700\u518d\u989d\u5916\u4e0b\u8f7d\u548c\u914d\u7f6e\u73af\u5883\uff0c\u8fd9\u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u8bf4\u662f\u53ef\u4ee5\u6781\u5927\u7684\u63d0\u5347\u4fe1\u5fc3\u7684\uff08\u914d\u7f6e\u73af\u5883\u7e41\u7410\u8fc7\u7a0b\u662f\u529d\u9000\u521d\u5b66\u8005\u7684\u4e00\u5927\u56e0\u7d20\uff09\uff0c\u5728\u5bf9\u7f16\u7a0b\u8fdb\u884c\u4e00\u5b9a\u7a0b\u5ea6\u7684\u719f\u6089\u540e\uff0c\u5927\u5bb6\u53ef\u4ee5\u63a2\u7d22\u6700\u9002\u5408\u81ea\u5df1\u7684IDE\u3002","title":"3.3 Jupyter Notebook"},{"location":"lesson1/Lesson1%20Python/#4-python","text":"","title":"4. Python\u4e2d\u7684\u6807\u8bc6\u7b26"},{"location":"lesson1/Lesson1%20Python/#41","text":"\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5fc5\u987b\u662f\u5b57\u6bcd\u8868\u4e2d\u5b57\u6bcd\u6216\u4e0b\u5212\u7ebf _ \u3002 \u6807\u8bc6\u7b26\u7684\u5176\u4ed6\u7684\u90e8\u5206\u7531\u5b57\u6bcd\u3001\u6570\u5b57\u548c\u4e0b\u5212\u7ebf\u7ec4\u6210\u3002 \u6807\u8bc6\u7b26\u5bf9\u5927\u5c0f\u5199\u654f\u611f\u3002 \u5728 Python 3 \u4e2d\uff0c\u53ef\u4ee5\u7528\u4e2d\u6587\u4f5c\u4e3a\u53d8\u91cf\u540d\uff0c\u975e ASCII \u6807\u8bc6\u7b26\u4e5f\u662f\u5141\u8bb8\u7684\u4e86\u3002","title":"4.1 \u6807\u8bc6\u7b26"},{"location":"lesson1/Lesson1%20Python/#42-python","text":"\u4fdd\u7559\u5b57\u5373\u5173\u952e\u5b57\uff0c\u6211\u4eec\u4e0d\u80fd\u628a\u5b83\u4eec\u7528\u4f5c\u4efb\u4f55\u6807\u8bc6\u7b26\u540d\u79f0\u3002 False None True and as assert break class continue def del elif else except finally for from global if import in is lambda nonlocal not or pass raise return try while with yield","title":"4.2 Python \u4fdd\u7559\u5b57\u7b26"},{"location":"lesson1/Lesson1%20Python/#43","text":"Python\u4e2d\u5355\u884c\u6ce8\u91ca\u4ee5 # \u5f00\u5934\uff0c\u5b9e\u4f8b\u5982\u4e0b\uff1a # \u7b2c\u4e00\u4e2a\u6ce8\u91ca print(\"Hello, Python!\") # \u7b2c\u4e8c\u4e2a\u6ce8\u91ca \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a Hello, Python! \u591a\u884c\u6ce8\u91ca\u53ef\u4ee5\u7528\u591a\u4e2a # \u53f7\uff0c\u8fd8\u6709 ''' \u548c \" \" \" \uff1a # \u7b2c\u4e00\u4e2a\u6ce8\u91ca # \u7b2c\u4e8c\u4e2a\u6ce8\u91ca ''' \u7b2c\u4e09\u6ce8\u91ca \u7b2c\u56db\u6ce8\u91ca ''' \"\"\" \u7b2c\u4e94\u6ce8\u91ca \u7b2c\u516d\u6ce8\u91ca \"\"\" print(\"Hello, Python!\") \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a Hello, Python!","title":"4.3 \u6ce8\u91ca"},{"location":"lesson1/Lesson1%20Python/#44","text":"python\u6700\u5177\u7279\u8272\u7684\u5c31\u662f\u4f7f\u7528\u7f29\u8fdb\u6765\u8868\u793a\u4ee3\u7801\u5757\uff0c\u4e0d\u9700\u8981\u4f7f\u7528\u5927\u62ec\u53f7 {} \u3002 \u7f29\u8fdb\u7684\u7a7a\u683c\u6570\u662f\u53ef\u53d8\u7684\uff0c\u4f46\u662f\u540c\u4e00\u4e2a\u4ee3\u7801\u5757\u7684\u8bed\u53e5\u5fc5\u987b\u5305\u542b\u76f8\u540c\u7684\u7f29\u8fdb\u7a7a\u683c\u6570\u3002\u5b9e\u4f8b\u5982\u4e0b\uff1a if True: print(\"True\") else: print(\"False\") \u4ee5\u4e0b\u4ee3\u7801\u6700\u540e\u4e00\u884c\u8bed\u53e5\u7f29\u8fdb\u6570\u7684\u7a7a\u683c\u6570\u4e0d\u4e00\u81f4\uff0c\u4f1a\u5bfc\u81f4\u8fd0\u884c\u9519\u8bef\uff1a if True: print(\"Answer\") print(\"True\") else: print(\"Answer\") print(\"False\") # \u7f29\u8fdb\u4e0d\u4e00\u81f4\uff0c\u4f1a\u5bfc\u81f4\u8fd0\u884c\u9519\u8bef \u4ee5\u4e0a\u7a0b\u5e8f\u7531\u4e8e\u7f29\u8fdb\u4e0d\u4e00\u81f4\uff0c\u6267\u884c\u540e\u4f1a\u51fa\u73b0\u7c7b\u4f3c\u4ee5\u4e0b\u9519\u8bef\uff1a File \"test.py\", line 6 print(\"False\") # \u7f29\u8fdb\u4e0d\u4e00\u81f4\uff0c\u4f1a\u5bfc\u81f4\u8fd0\u884c\u9519\u8bef ^ IndentationError: unindent does not match any outer indentation level","title":"4.4 \u884c\u548c\u7f29\u8fdb"},{"location":"lesson1/Lesson1%20Python/#5-python","text":"Python \u4e2d\u7684\u53d8\u91cf\u4e0d\u9700\u8981\u58f0\u660e\u3002\u6bcf\u4e2a\u53d8\u91cf\u5728\u4f7f\u7528\u524d\u90fd\u5fc5\u987b\u8d4b\u503c\uff0c\u53d8\u91cf\u8d4b\u503c\u4ee5\u540e\u8be5\u53d8\u91cf\u624d\u4f1a\u88ab\u521b\u5efa\u3002 \u5728 Python \u4e2d\uff0c\u53d8\u91cf\u5c31\u662f\u53d8\u91cf\uff0c\u5b83\u6ca1\u6709\u7c7b\u578b\uff0c\u6211\u4eec\u6240\u8bf4\u7684\"\u7c7b\u578b\"\u662f\u53d8\u91cf\u6240\u6307\u7684\u5185\u5b58\u4e2d\u5bf9\u8c61\u7684\u7c7b\u578b\u3002 \u7b49\u53f7\uff08=\uff09\u7528\u6765\u7ed9\u53d8\u91cf\u8d4b\u503c\u3002 \u7b49\u53f7\uff08=\uff09\u8fd0\u7b97\u7b26\u5de6\u8fb9\u662f\u4e00\u4e2a\u53d8\u91cf\u540d,\u7b49\u53f7\uff08=\uff09\u8fd0\u7b97\u7b26\u53f3\u8fb9\u662f\u5b58\u50a8\u5728\u53d8\u91cf\u4e2d\u7684\u503c\u3002\u4f8b\u5982\uff1a counter = 100 # \u6574\u578b\u53d8\u91cf miles = 1000.0 # \u6d6e\u70b9\u578b\u53d8\u91cf name = \"CodeRaft\" # \u5b57\u7b26\u4e32 print(counter) print(miles) print(name) \u6267\u884c\u4ee5\u4e0a\u7a0b\u5e8f\u4f1a\u8f93\u51fa\u5982\u4e0b\u7ed3\u679c\uff1a 100 1000.0 CodeRaft","title":"5 Python\u4e2d\u7684\u53d8\u91cf"},{"location":"lesson1/Lesson1%20Python/#51","text":"Python\u5141\u8bb8\u4f60\u540c\u65f6\u4e3a\u591a\u4e2a\u53d8\u91cf\u8d4b\u503c\u3002\u4f8b\u5982\uff1a a = b = c = 1 \u4ee5\u4e0a\u5b9e\u4f8b\uff0c\u521b\u5efa\u4e00\u4e2a\u6574\u578b\u5bf9\u8c61\uff0c\u503c\u4e3a 1\uff0c\u4ece\u540e\u5411\u524d\u8d4b\u503c\uff0c\u4e09\u4e2a\u53d8\u91cf\u88ab\u8d4b\u4e88\u76f8\u540c\u7684\u6570\u503c\u3002 \u60a8\u4e5f\u53ef\u4ee5\u4e3a\u591a\u4e2a\u5bf9\u8c61\u6307\u5b9a\u591a\u4e2a\u53d8\u91cf\u3002\u4f8b\u5982\uff1a a, b, c = 1, 2, \"CodeRaft\" \u4ee5\u4e0a\u5b9e\u4f8b\uff0c\u4e24\u4e2a\u6574\u578b\u5bf9\u8c61 1 \u548c 2 \u7684\u5206\u914d\u7ed9\u53d8\u91cf a \u548c b\uff0c\u5b57\u7b26\u4e32\u5bf9\u8c61 \"CodeRaft\" \u5206\u914d\u7ed9\u53d8\u91cf c\u3002","title":"5.1 \u591a\u4e2a\u53d8\u91cf\u8d4b\u503c"},{"location":"lesson1/Lesson1%20Python/#6-python","text":"Python\u4e2d\u7684\u6570\u636e\u7c7b\u578b\u6781\u4e3a\u4e30\u5bcc\uff0c\u5305\u62ec\u57fa\u672c\u6570\u636e\u7c7b\u578b\u548c\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u3002\u5728Python\u4e2d\uff0c\u53d8\u91cf\u65e0\u9700\u58f0\u660e\u5373\u53ef\u76f4\u63a5\u4f7f\u7528\uff0c\u5176\u7c7b\u578b\u7531\u8d4b\u503c\u65f6\u6240\u5b58\u50a8\u7684\u5bf9\u8c61\u51b3\u5b9a\u3002","title":"6 Python\u7684\u6570\u636e\u7c7b\u578b"},{"location":"lesson1/Lesson1%20Python/#61","text":"","title":"6.1\u57fa\u672c\u6570\u636e\u7c7b\u578b"},{"location":"lesson1/Lesson1%20Python/#611","text":"\u6574\u578b\uff08int\uff09 \uff1a\u6ca1\u6709\u5927\u5c0f\u9650\u5236\uff0c\u7406\u8bba\u4e0a\u53d7\u9650\u4e8e\u673a\u5668\u5185\u5b58\u3002 \u6d6e\u70b9\u578b\uff08float\uff09 \uff1a\u901a\u5e38\u60c5\u51b5\u4e0b\u7684\u6d6e\u70b9\u6570\u8868\u793a\u65b9\u6cd5\uff0c\u53ef\u4ee5\u4f7f\u7528\u79d1\u5b66\u8ba1\u6570\u6cd5\uff08\u59821.23e9\uff09\u3002 \u5e03\u5c14\u578b\uff08bool\uff09 \uff1a\u5305\u62ecTrue\u548cFalse\u4e24\u79cd\u503c\uff0c\u5b9e\u9645\u4e0a\u662f\u6574\u578b\u7684\u5b50\u7c7b\u578b\uff0cTrue\u7b49\u4e8e1\uff0cFalse\u7b49\u4e8e0\u3002 a = 3 # int b = 3.14 # float c = True # bool","title":"6.1.1 \u6570\u5b57\u7c7b\u578b"},{"location":"lesson1/Lesson1%20Python/#612","text":"\u5b57\u7b26\u4e32\uff08str\uff09 \uff1a\u6587\u672c\u7c7b\u578b\uff0c\u4f7f\u7528\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\u5305\u56f4\u3002 \u5b57\u7b26\u4e32\u662f\u4e0d\u53ef\u53d8\u5e8f\u5217\uff0c\u53ef\u4ee5\u8fdb\u884c\u7d22\u5f15\u3001\u5207\u7247\u3001\u52a0\u6cd5\u548c\u4e58\u6cd5\u64cd\u4f5c\u3002 str1 = \"Hello\" str2 = 'World' print(str1 + \" \" + str2) # \u5b57\u7b26\u4e32\u8fde\u63a5 print(str1 * 3) # \u5b57\u7b26\u4e32\u91cd\u590d \u8fd9\u6837\u8f93\u51fa\u7684\u7ed3\u679c\u4e3a\uff1a Hello World HelloHelloHello \u5728Python\u4e2d\uff0cstr()\u51fd\u6570\u53ef\u4ee5\u5c06\u4efb\u4f55\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u800cint()\u51fd\u6570\u5219\u53ef\u4ee5\u5c06\u5b57\u7b26\u4e32\u6216\u6570\u5b57\u8f6c\u6362\u4e3a\u6574\u6570\u7c7b\u578b\uff0c\u4f46\u524d\u63d0\u662f\u8fd9\u4e2a\u5b57\u7b26\u4e32\u6216\u6570\u5b57\u5fc5\u987b\u8868\u793a\u4e00\u4e2a\u6709\u6548\u7684\u6574\u6570\u3002 # \u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u6574\u6570\u548c\u4e00\u4e2a\u5b57\u7b26\u4e32 original_int = 123 original_str = \"456\" # \u4f7f\u7528str()\u51fd\u6570\u5c06\u6574\u6570\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32 int_as_str = str(original_int) print(\"\u6574\u6570\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32:\", int_as_str) # \u4f7f\u7528int()\u51fd\u6570\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u56de\u6574\u6570 str_as_int = int(original_str) print(\"\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6574\u6570:\", str_as_int) # \u6ce8\u610f\uff1a\u5982\u679c\u5b57\u7b26\u4e32\u5305\u542b\u975e\u6570\u5b57\u5b57\u7b26\uff0cint()\u51fd\u6570\u4f1a\u629b\u51faValueError invalid_str = \"abc\" try: invalid_int = int(invalid_str) except ValueError: print(\"\u9519\u8bef\uff1a\u65e0\u6cd5\u5c06\u975e\u6570\u5b57\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6574\u6570\") \u8f93\u51fa\u7ed3\u679c\uff1a \u6574\u6570\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32: 123 \u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6574\u6570: 456 \u9519\u8bef\uff1a\u65e0\u6cd5\u5c06\u975e\u6570\u5b57\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6574\u6570","title":"6.1.2 \u5b57\u7b26\u4e32"},{"location":"lesson1/Lesson1%20Python/#613-bool","text":"\u5e03\u5c14\u7c7b\u578b\u5373 True \u6216 False\u3002 \u5728 Python \u4e2d\uff0cTrue \u548c False \u90fd\u662f\u5173\u952e\u5b57\uff0c\u8868\u793a\u5e03\u5c14\u503c\u3002 \u5e03\u5c14\u7c7b\u578b\u53ef\u4ee5\u7528\u6765\u63a7\u5236\u7a0b\u5e8f\u7684\u6d41\u7a0b\uff0c\u6bd4\u5982\u5224\u65ad\u67d0\u4e2a\u6761\u4ef6\u662f\u5426\u6210\u7acb\uff0c\u6216\u8005\u5728\u67d0\u4e2a\u6761\u4ef6\u6ee1\u8db3\u65f6\u6267\u884c\u67d0\u6bb5\u4ee3\u7801\u3002 \u5e03\u5c14\u7c7b\u578b\u7279\u70b9\uff1a \u5e03\u5c14\u7c7b\u578b\u53ea\u6709\u4e24\u4e2a\u503c\uff1aTrue \u548c False\u3002 bool \u662f int \u7684\u5b50\u7c7b\uff0c\u56e0\u6b64\u5e03\u5c14\u503c\u53ef\u4ee5\u88ab\u770b\u4f5c\u6574\u6570\u6765\u4f7f\u7528\uff0c\u5176\u4e2d True \u7b49\u4ef7\u4e8e 1\u3002 \u5e03\u5c14\u7c7b\u578b\u53ef\u4ee5\u548c\u5176\u4ed6\u6570\u636e\u7c7b\u578b\u8fdb\u884c\u6bd4\u8f83\uff0c\u6bd4\u5982\u6570\u5b57\u3001\u5b57\u7b26\u4e32\u7b49\u3002\u5728\u6bd4\u8f83\u65f6\uff0cPython \u4f1a\u5c06 True \u89c6\u4e3a 1\uff0cFalse \u89c6\u4e3a 0\u3002 \u5e03\u5c14\u7c7b\u578b\u53ef\u4ee5\u548c\u903b\u8f91\u8fd0\u7b97\u7b26\u4e00\u8d77\u4f7f\u7528\uff0c\u5305\u62ec and\u3001or \u548c not\u3002\u8fd9\u4e9b\u8fd0\u7b97\u7b26\u53ef\u4ee5\u7528\u6765\u7ec4\u5408\u591a\u4e2a\u5e03\u5c14\u8868\u8fbe\u5f0f\uff0c\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u5e03\u5c14\u503c\u3002 \u5e03\u5c14\u7c7b\u578b\u4e5f\u53ef\u4ee5\u88ab\u8f6c\u6362\u6210\u5176\u4ed6\u6570\u636e\u7c7b\u578b\uff0c\u6bd4\u5982\u6574\u6570\u3001\u6d6e\u70b9\u6570\u548c\u5b57\u7b26\u4e32\u3002\u5728\u8f6c\u6362\u65f6\uff0cTrue \u4f1a\u88ab\u8f6c\u6362\u6210 1\uff0cFalse \u4f1a\u88ab\u8f6c\u6362\u6210 0\u3002 \u53ef\u4ee5\u4f7f\u7528 bool() \u51fd\u6570\u5c06\u5176\u4ed6\u7c7b\u578b\u7684\u503c\u8f6c\u6362\u4e3a\u5e03\u5c14\u503c\u3002\u4ee5\u4e0b\u503c\u5728\u8f6c\u6362\u4e3a\u5e03\u5c14\u503c\u65f6\u4e3a False \uff1a None \u3001 False \u3001\u96f6 ( 0 \u3001 0.0 \u3001 0j )\u3001\u7a7a\u5e8f\u5217\uff08\u5982 '' \u3001 () \u3001 [] \uff09\u548c\u7a7a\u6620\u5c04\uff08\u5982 {} \uff09\u3002\u5176\u4ed6\u6240\u6709\u503c\u8f6c\u6362\u4e3a\u5e03\u5c14\u503c\u65f6\u5747\u4e3a True \u3002","title":"6.1.3 bool\uff08\u5e03\u5c14\u7c7b\u578b\uff09"},{"location":"lesson1/Lesson1%20Python/#614-list","text":"List\uff08\u5217\u8868\uff09 \u662f Python \u4e2d\u4f7f\u7528\u6700\u9891\u7e41\u7684\u6570\u636e\u7c7b\u578b\u3002 \u5217\u8868\u53ef\u4ee5\u5b8c\u6210\u5927\u591a\u6570\u96c6\u5408\u7c7b\u7684\u6570\u636e\u7ed3\u6784\u5b9e\u73b0\u3002\u5217\u8868\u4e2d\u5143\u7d20\u7684\u7c7b\u578b\u53ef\u4ee5\u4e0d\u76f8\u540c\uff0c\u5b83\u652f\u6301\u6570\u5b57\uff0c\u5b57\u7b26\u4e32\u751a\u81f3\u53ef\u4ee5\u5305\u542b\u5217\u8868\uff08\u6240\u8c13\u5d4c\u5957\uff09\u3002 \u5217\u8868\u662f\u5199\u5728\u65b9\u62ec\u53f7 [] \u4e4b\u95f4\u3001\u7528\u9017\u53f7\u5206\u9694\u5f00\u7684\u5143\u7d20\u5217\u8868\u3002 \u548c\u5b57\u7b26\u4e32\u4e00\u6837\uff0c\u5217\u8868\u540c\u6837\u53ef\u4ee5\u88ab\u7d22\u5f15\u548c\u622a\u53d6\uff0c\u5217\u8868\u88ab\u622a\u53d6\u540e\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u6240\u9700\u5143\u7d20\u7684\u65b0\u5217\u8868\u3002 \u5217\u8868\u622a\u53d6\u7684\u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a \u53d8\u91cf[\u5934\u4e0b\u6807:\u5c3e\u4e0b\u6807] \u7d22\u5f15\u503c\u4ee5 0 \u4e3a\u5f00\u59cb\u503c\uff0c -1 \u4e3a\u4ece\u672b\u5c3e\u7684\u5f00\u59cb\u4f4d\u7f6e\u3002 \u52a0\u53f7 + \u662f\u5217\u8868\u8fde\u63a5\u8fd0\u7b97\u7b26\uff0c\u661f\u53f7 * \u662f\u91cd\u590d\u64cd\u4f5c\u3002\u5982\u4e0b\u5b9e\u4f8b\uff1a list = [ 'abcd', 786 , 2.23, 'CodeRaft', 70.2 ] # \u5b9a\u4e49\u4e00\u4e2a\u5217\u8868 tinylist = [123, 'CodeRaft'] print(list) # \u6253\u5370\u6574\u4e2a\u5217\u8868 print(list[0]) # \u6253\u5370\u5217\u8868\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20 print(list[1:3]) # \u6253\u5370\u5217\u8868\u7b2c\u4e8c\u5230\u7b2c\u56db\u4e2a\u5143\u7d20\uff08\u4e0d\u5305\u542b\u7b2c\u56db\u4e2a\u5143\u7d20\uff09 print(list[2:]) # \u6253\u5370\u5217\u8868\u4ece\u7b2c\u4e09\u4e2a\u5143\u7d20\u5f00\u59cb\u5230\u672b\u5c3e print(tinylist * 2) # \u6253\u5370tinylist\u5217\u8868\u4e24\u6b21 print(list + tinylist) # \u6253\u5370\u4e24\u4e2a\u5217\u8868\u62fc\u63a5\u5728\u4e00\u8d77\u7684\u7ed3\u679c \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a ['abcd', 786, 2.23, 'CodeRaft', 70.2] abcd [786, 2.23] [2.23, 'CodeRaft', 70.2] [123, 'CodeRaft', 123, 'CodeRaft'] ['abcd', 786, 2.23, 'CodeRaft', 70.2, 123, 'CodeRaft']","title":"6.1.4 List\uff08\u5217\u8868\uff09"},{"location":"lesson1/Lesson1%20Python/#615-tuple","text":"\u5143\u7ec4\uff08tuple\uff09\u4e0e\u5217\u8868\u7c7b\u4f3c\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5143\u7ec4\u7684\u5143\u7d20\u4e0d\u80fd\u4fee\u6539\u3002\u5143\u7ec4\u5199\u5728\u5c0f\u62ec\u53f7 () \u91cc\uff0c\u5143\u7d20\u4e4b\u95f4\u7528\u9017\u53f7\u9694\u5f00\u3002 \u5143\u7ec4\u4e2d\u7684\u5143\u7d20\u7c7b\u578b\u4e5f\u53ef\u4ee5\u4e0d\u76f8\u540c\uff1a tuple = ( 'abcd', 786 , 2.23, 'CodeRaft', 70.2 ) tinytuple = (123, 'CodeRaft') print(tuple) # \u8f93\u51fa\u5b8c\u6574\u5143\u7ec4 print(tuple[0]) # \u8f93\u51fa\u5143\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20 print(tuple[1:3]) # \u8f93\u51fa\u4ece\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5f00\u59cb\u5230\u7b2c\u4e09\u4e2a\u5143\u7d20 print(tuple[2:]) # \u8f93\u51fa\u4ece\u7b2c\u4e09\u4e2a\u5143\u7d20\u5f00\u59cb\u7684\u6240\u6709\u5143\u7d20 print(tinytuple * 2) # \u8f93\u51fa\u4e24\u6b21\u5143\u7ec4 print(tuple + tinytuple) # \u8fde\u63a5\u5143\u7ec4 \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a ('abcd', 786, 2.23, 'CodeRaft', 70.2) abcd (786, 2.23) (2.23, 'CodeRaft', 70.2) (123, 'CodeRaft', 123, 'CodeRaft') ('abcd', 786, 2.23, 'CodeRaft', 70.2, 123, 'CodeRaft')","title":"6.1.5 Tuple\uff08\u5143\u7ec4\uff09"},{"location":"lesson1/Lesson1%20Python/#616-set","text":"Python \u4e2d\u7684\u96c6\u5408\uff08Set\uff09\u662f\u4e00\u79cd\u65e0\u5e8f\u3001\u53ef\u53d8\u7684\u6570\u636e\u7c7b\u578b\uff0c\u7528\u4e8e\u5b58\u50a8\u552f\u4e00\u7684\u5143\u7d20\u3002 \u96c6\u5408\u4e2d\u7684\u5143\u7d20\u4e0d\u4f1a\u91cd\u590d\uff0c\u5e76\u4e14\u53ef\u4ee5\u8fdb\u884c\u4ea4\u96c6\u3001\u5e76\u96c6\u3001\u5dee\u96c6\u7b49\u5e38\u89c1\u7684\u96c6\u5408\u64cd\u4f5c\u3002 \u5728 Python \u4e2d\uff0c\u96c6\u5408\u4f7f\u7528\u5927\u62ec\u53f7 {} \u8868\u793a\uff0c\u5143\u7d20\u4e4b\u95f4\u7528\u9017\u53f7 , \u5206\u9694\u3002 \u53e6\u5916\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528 set() \u51fd\u6570\u521b\u5efa\u96c6\u5408\u3002 \u6ce8\u610f\uff1a \u521b\u5efa\u4e00\u4e2a\u7a7a\u96c6\u5408\u5fc5\u987b\u7528 set() \u800c\u4e0d\u662f { } \uff0c\u56e0\u4e3a { } \u662f\u7528\u6765\u521b\u5efa\u4e00\u4e2a\u7a7a\u5b57\u5178\u3002 \u521b\u5efa\u683c\u5f0f\uff1a parame = {value01,value02,...} \u6216\u8005 set(value) sites = {'Google', 'Taobao', 'Runoob', 'Facebook', 'Zhihu', 'Baidu'} print(sites) # \u8f93\u51fa\u96c6\u5408\uff0c\u91cd\u590d\u7684\u5143\u7d20\u88ab\u81ea\u52a8\u53bb\u6389 # \u6210\u5458\u6d4b\u8bd5 if 'Runoob' in sites : print('Runoob \u5728\u96c6\u5408\u4e2d') else : print('Runoob \u4e0d\u5728\u96c6\u5408\u4e2d') # set\u53ef\u4ee5\u8fdb\u884c\u96c6\u5408\u8fd0\u7b97 a = set('abracadabra') b = set('alacazam') print(a) print(a - b) # a \u548c b \u7684\u5dee\u96c6 print(a | b) # a \u548c b \u7684\u5e76\u96c6 print(a & b) # a \u548c b \u7684\u4ea4\u96c6 print(a ^ b) # a \u548c b \u4e2d\u4e0d\u540c\u65f6\u5b58\u5728\u7684\u5143\u7d20 \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a {'Zhihu', 'Baidu', 'Taobao', 'Runoob', 'Google', 'Facebook'} Runoob \u5728\u96c6\u5408\u4e2d {'b', 'c', 'a', 'r', 'd'} {'r', 'b', 'd'} {'b', 'c', 'a', 'z', 'm', 'r', 'l', 'd'} {'c', 'a'} {'z', 'b', 'm', 'r', 'l', 'd'}","title":"6.1.6 Set\uff08\u96c6\u5408\uff09"},{"location":"lesson1/Lesson1%20Python/#617-dictionary","text":"\u5b57\u5178\uff08dictionary\uff09\u662fPython\u4e2d\u53e6\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u5185\u7f6e\u6570\u636e\u7c7b\u578b\u3002 \u5217\u8868\u662f\u6709\u5e8f\u7684\u5bf9\u8c61\u96c6\u5408\uff0c\u5b57\u5178\u662f\u65e0\u5e8f\u7684\u5bf9\u8c61\u96c6\u5408\u3002\u4e24\u8005\u4e4b\u95f4\u7684\u533a\u522b\u5728\u4e8e\uff1a\u5b57\u5178\u5f53\u4e2d\u7684\u5143\u7d20\u662f\u901a\u8fc7\u952e\u6765\u5b58\u53d6\u7684\uff0c\u800c\u4e0d\u662f\u901a\u8fc7\u7d22\u5f15\u5b58\u53d6\u3002 \u5b57\u5178\u662f\u4e00\u79cd\u6620\u5c04\u7c7b\u578b\uff0c\u5b57\u5178\u7528 { } \u6807\u8bc6\uff0c\u5b83\u662f\u4e00\u4e2a\u65e0\u5e8f\u7684 \u952e(key) : \u503c(value) \u7684\u96c6\u5408\u3002 \u952e(key)\u5fc5\u987b\u4f7f\u7528\u4e0d\u53ef\u53d8\u7c7b\u578b\u3002 \u5728\u540c\u4e00\u4e2a\u5b57\u5178\u4e2d\uff0c\u952e(key)\u5fc5\u987b\u662f\u552f\u4e00\u7684\u3002 dict = {} dict['one'] = \"CodeRaft\" dict[2] = \"\u6cdb\u7f16\u7a0b\" tinydict = {'name': 'CodeRaft','code':1, 'site': 'www.CodeRaft.com'} print(dict['one']) # \u8f93\u51fa\u952e\u4e3a 'one' \u7684\u503c print(dict[2]) # \u8f93\u51fa\u952e\u4e3a 2 \u7684\u503c print(tinydict) # \u8f93\u51fa\u5b8c\u6574\u7684\u5b57\u5178 print(tinydict.keys()) # \u8f93\u51fa\u6240\u6709\u952e print(tinydict.values()) # \u8f93\u51fa\u6240\u6709\u503c \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a CodeRaft \u6cdb\u7f16\u7a0b {'name': 'CodeRaft', 'code': 1, 'site': 'www.CodeRaft.com'} dict_keys(['name', 'code', 'site']) dict_values(['CodeRaft', 1, 'www.CodeRaft.com'])","title":"6.1.7 Dictionary\uff08\u5b57\u5178\uff09"},{"location":"lesson1/Lesson1%20Python/#62","text":"# \u5b66\u751f\u4fe1\u606f student_id = 12345 student_name = \"\u8d75\u9547\" age = 20 score = 92.5 gender = '\u7537' is_married = False # \u8f93\u51fa\u5b66\u751f\u4fe1\u606f print(\"\u5b66\u751f\u4fe1\u606f\uff1a\") print(\"\u5b66\u53f7\uff1a\", student_id) print(\"\u59d3\u540d\uff1a\", student_name) print(\"\u5e74\u9f84\uff1a\", age) print(\"\u6210\u7ee9\uff1a\", score) print(\"\u6027\u522b\uff1a\", gender) print(\"\u5a5a\u5426\uff1a\", is_married) \u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a \u5b66\u751f\u4fe1\u606f\uff1a \u5b66\u53f7\uff1a 12345 \u59d3\u540d\uff1a \u8d75\u9547 \u5e74\u9f84\uff1a 20 \u6210\u7ee9\uff1a 92.5 \u6027\u522b\uff1a \u7537 \u5a5a\u5426\uff1a False","title":"6.2 \u5e38\u7528\u6570\u636e\u7c7b\u578b\u7684\u4f7f\u7528\u5b9e\u4f8b"},{"location":"lesson1/Lesson1%20Python/#7python","text":"","title":"7.Python\u4e2d\u7684\u8fd0\u7b97\u7b26"},{"location":"lesson1/Lesson1%20Python/#71-python","text":"\u4ee5\u4e0b\u5047\u8bbe\u53d8\u91cf a=10 \uff0c\u53d8\u91cf b=21 \uff1a \u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b + \u52a0 - \u4e24\u4e2a\u5bf9\u8c61\u76f8\u52a0 a + b \u8f93\u51fa\u7ed3\u679c 31 - \u51cf - \u5f97\u5230\u8d1f\u6570\u6216\u662f\u4e00\u4e2a\u6570\u51cf\u53bb\u53e6\u4e00\u4e2a\u6570 a - b \u8f93\u51fa\u7ed3\u679c -11 * \u4e58 - \u4e24\u4e2a\u6570\u76f8\u4e58\u6216\u662f\u8fd4\u56de\u4e00\u4e2a\u88ab\u91cd\u590d\u82e5\u5e72\u6b21\u7684\u5b57\u7b26\u4e32 a * b \u8f93\u51fa\u7ed3\u679c 210 / \u9664 - x \u9664\u4ee5 y b / a \u8f93\u51fa\u7ed3\u679c 2.1 % \u53d6\u6a21 - \u8fd4\u56de\u9664\u6cd5\u7684\u4f59\u6570 b % a \u8f93\u51fa\u7ed3\u679c 1 ** \u5e42 - \u8fd4\u56dex\u7684y\u6b21\u5e42 a**b \u4e3a10\u768421\u6b21\u65b9 // \u53d6\u6574\u9664 - \u5f80\u5c0f\u7684\u65b9\u5411\u53d6\u6574\u6570 >>> 9//2=4 >>> -9//2=-5 \u4ee5\u4e0b\u5b9e\u4f8b\u6f14\u793a\u4e86Python\u6240\u6709\u7b97\u672f\u8fd0\u7b97\u7b26\u7684\u64cd\u4f5c\uff1a a = 21 b = 10 c = 0 c = a + b print(\"c \u7684\u503c\u4e3a\uff1a\", c) c = a - b print(\"c \u7684\u503c\u4e3a\uff1a\", c) c = a * b print(\"c \u7684\u503c\u4e3a\uff1a\", c) c = a / b print(\"c \u7684\u503c\u4e3a\uff1a\", c) c = a % b print(\"c \u7684\u503c\u4e3a\uff1a\", c) # \u4fee\u6539\u53d8\u91cf a \u3001b \u3001c a = 2 b = 3 c = a**b print(\"c \u7684\u503c\u4e3a\uff1a\", c) a = 10 b = 5 c = a//b print(\"c \u7684\u503c\u4e3a\uff1a\", c) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a c \u7684\u503c\u4e3a\uff1a 31 c \u7684\u503c\u4e3a\uff1a 11 c \u7684\u503c\u4e3a\uff1a 210 c \u7684\u503c\u4e3a\uff1a 2.1 c \u7684\u503c\u4e3a\uff1a 1 c \u7684\u503c\u4e3a\uff1a 8 c \u7684\u503c\u4e3a\uff1a 2","title":"7.1 Python\u7b97\u672f\u8fd0\u7b97\u7b26"},{"location":"lesson1/Lesson1%20Python/#72-python","text":"\u4ee5\u4e0b\u5047\u8bbe\u53d8\u91cf a \u4e3a 10\uff0c\u53d8\u91cf b \u4e3a20\uff1a \u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b == \u7b49\u4e8e - \u6bd4\u8f83\u5bf9\u8c61\u662f\u5426\u76f8\u7b49 (a == b) \u8fd4\u56de False\u3002 != \u4e0d\u7b49\u4e8e - \u6bd4\u8f83\u4e24\u4e2a\u5bf9\u8c61\u662f\u5426\u4e0d\u76f8\u7b49 (a != b) \u8fd4\u56de True\u3002 > \u5927\u4e8e - \u8fd4\u56dex\u662f\u5426\u5927\u4e8ey (a > b) \u8fd4\u56de False\u3002 < \u5c0f\u4e8e - \u8fd4\u56dex\u662f\u5426\u5c0f\u4e8ey\u3002\u6240\u6709\u6bd4\u8f83\u8fd0\u7b97\u7b26\u8fd4\u56de1\u8868\u793a\u771f\uff0c\u8fd4\u56de0\u8868\u793a\u5047\u3002\u8fd9\u5206\u522b\u4e0e\u7279\u6b8a\u7684\u53d8\u91cfTrue\u548cFalse\u7b49\u4ef7\u3002\u6ce8\u610f\uff0c\u8fd9\u4e9b\u53d8\u91cf\u540d\u7684\u5927\u5199\u3002 (a < b) \u8fd4\u56de True\u3002 >= \u5927\u4e8e\u7b49\u4e8e - \u8fd4\u56dex\u662f\u5426\u5927\u4e8e\u7b49\u4e8ey\u3002 (a >= b) \u8fd4\u56de False\u3002 <= \u5c0f\u4e8e\u7b49\u4e8e - \u8fd4\u56dex\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8ey\u3002 (a <= b) \u8fd4\u56de True\u3002 \u4ee5\u4e0b\u5b9e\u4f8b\u6f14\u793a\u4e86Python\u6240\u6709\u6bd4\u8f83\u8fd0\u7b97\u7b26\u7684\u64cd\u4f5c\uff1a a = 21 b = 10 if a == b: print(\"a \u7b49\u4e8e b\") else: print(\"a \u4e0d\u7b49\u4e8e b\") if a != b: print(\"a \u4e0d\u7b49\u4e8e b\") else: print(\"a \u7b49\u4e8e b\") if a < b: print(\"a \u5c0f\u4e8e b\") else: print(\"a \u5927\u4e8e\u7b49\u4e8e b\") if a > b: print(\"a \u5927\u4e8e b\") else: print(\"a \u5c0f\u4e8e\u7b49\u4e8e b\") # \u4fee\u6539\u53d8\u91cf a \u548c b \u7684\u503c a = 5 b = 20 if a <= b: print(\"a \u5c0f\u4e8e\u7b49\u4e8e b\") else: print(\"a \u5927\u4e8e b\") if b >= a: print(\"b \u5927\u4e8e\u7b49\u4e8e a\") else: print(\"b \u5c0f\u4e8e a\") \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u4e3a\uff1a a \u4e0d\u7b49\u4e8e b a \u4e0d\u7b49\u4e8e b a \u5927\u4e8e\u7b49\u4e8e b a \u5927\u4e8e b a \u5c0f\u4e8e\u7b49\u4e8e b b \u5927\u4e8e\u7b49\u4e8e a","title":"7.2 Python \u6bd4\u8f83\u8fd0\u7b97\u7b26"},{"location":"lesson1/Lesson1%20Python/#73-python","text":"\u4ee5\u4e0b\u5047\u8bbe\u53d8\u91cfa\u4e3a10\uff0c\u53d8\u91cfb\u4e3a20\uff1a \u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b = \u7b80\u5355\u7684\u8d4b\u503c\u8fd0\u7b97\u7b26 c = a + b \u5c06 a + b \u7684\u8fd0\u7b97\u7ed3\u679c\u8d4b\u503c\u4e3a c += \u52a0\u6cd5\u8d4b\u503c\u8fd0\u7b97\u7b26 c += a \u7b49\u6548\u4e8e c = c + a -= \u51cf\u6cd5\u8d4b\u503c\u8fd0\u7b97\u7b26 c -= a \u7b49\u6548\u4e8e c = c - a *= \u4e58\u6cd5\u8d4b\u503c\u8fd0\u7b97\u7b26 c *= a \u7b49\u6548\u4e8e c = c * a /= \u9664\u6cd5\u8d4b\u503c\u8fd0\u7b97\u7b26 c /= a \u7b49\u6548\u4e8e c = c / a %= \u53d6\u6a21\u8d4b\u503c\u8fd0\u7b97\u7b26 c %= a \u7b49\u6548\u4e8e c = c % a **= \u5e42\u8d4b\u503c\u8fd0\u7b97\u7b26 c **= a \u7b49\u6548\u4e8e c = c ** a //= \u53d6\u6574\u9664\u8d4b\u503c\u8fd0\u7b97\u7b26 c //= a \u7b49\u6548\u4e8e c = c // a := \u6d77\u8c61\u8fd0\u7b97\u7b26\uff0c\u8fd9\u4e2a\u8fd0\u7b97\u7b26\u7684\u4e3b\u8981\u76ee\u7684\u662f\u5728\u8868\u8fbe\u5f0f\u4e2d\u540c\u65f6\u8fdb\u884c\u8d4b\u503c\u548c\u8fd4\u56de\u8d4b\u503c\u7684\u503c\u3002 Python3.8 \u7248\u672c\u65b0\u589e\u8fd0\u7b97\u7b26 \u3002 \u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u8d4b\u503c\u8868\u8fbe\u5f0f\u53ef\u4ee5\u907f\u514d\u8c03\u7528 len() \u4e24\u6b21: if (n := len(a)) > 10: print(f\"List is too long ({n} elements, expected <= 10)\") \u4ee5\u4e0b\u5b9e\u4f8b\u6f14\u793a\u4e86Python\u6240\u6709\u8d4b\u503c\u8fd0\u7b97\u7b26\u7684\u64cd\u4f5c\uff1a a = 21 b = 10 c = 0 c = a + b print(\"c \u7684\u503c\u4e3a\uff1a\", c) c += a print(\"c \u7684\u503c\u4e3a\uff1a\", c) c *= a print(\"c \u7684\u503c\u4e3a\uff1a\", c) c /= a print(\"c \u7684\u503c\u4e3a\uff1a\", c) c = 2 c %= a print(\"c \u7684\u503c\u4e3a\uff1a\", c) c **= a print(\"c \u7684\u503c\u4e3a\uff1a\", c) c //= a print(\"c \u7684\u503c\u4e3a\uff1a\", c) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a c \u7684\u503c\u4e3a\uff1a 31 c \u7684\u503c\u4e3a\uff1a 52 c \u7684\u503c\u4e3a\uff1a 1092 c \u7684\u503c\u4e3a\uff1a 52.0 c \u7684\u503c\u4e3a\uff1a 2 c \u7684\u503c\u4e3a\uff1a 2097152 c \u7684\u503c\u4e3a\uff1a 99864 \u5728 Python 3.8 \u53ca\u66f4\u9ad8\u7248\u672c\u4e2d\uff0c\u5f15\u5165\u4e86\u4e00\u79cd\u65b0\u7684\u8bed\u6cd5\u7279\u6027\uff0c\u79f0\u4e3a\"\u6d77\u8c61\u8fd0\u7b97\u7b26\"\uff08Walrus Operator\uff09\uff0c\u5b83\u4f7f\u7528 := \u7b26\u53f7\u3002\u8fd9\u4e2a\u8fd0\u7b97\u7b26\u7684\u4e3b\u8981\u76ee\u7684\u662f\u5728\u8868\u8fbe\u5f0f\u4e2d\u540c\u65f6\u8fdb\u884c\u8d4b\u503c\u548c\u8fd4\u56de\u8d4b\u503c\u7684\u503c\u3002 \u4f7f\u7528\u6d77\u8c61\u8fd0\u7b97\u7b26\u53ef\u4ee5\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b\u7b80\u5316\u4ee3\u7801\uff0c\u5c24\u5176\u662f\u5728\u9700\u8981\u5728\u8868\u8fbe\u5f0f\u4e2d\u4f7f\u7528\u8d4b\u503c\u7ed3\u679c\u7684\u60c5\u51b5\u4e0b\u3002\u8fd9\u5bf9\u4e8e\u7b80\u5316\u5faa\u73af\u6761\u4ef6\u6216\u8868\u8fbe\u5f0f\u4e2d\u7684\u91cd\u590d\u8ba1\u7b97\u5f88\u6709\u7528\u3002 \u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u5b9e\u4f8b\uff0c\u6f14\u793a\u4e86\u6d77\u8c61\u8fd0\u7b97\u7b26\u7684\u4f7f\u7528\uff1a # \u4f20\u7edf\u5199\u6cd5 n = 10 if n > 5: print(n) # \u4f7f\u7528\u6d77\u8c61\u8fd0\u7b97\u7b26 if (n := 10) > 5: print(n) if (n := 10) > 5: \u8fd9\u662f\u4f7f\u7528\u6d77\u8c61\u8fd0\u7b97\u7b26 \uff08:=) \u7684\u5199\u6cd5\u3002\u6d77\u8c61\u8fd0\u7b97\u7b26\u5728\u8868\u8fbe\u5f0f\u4e2d\u8fdb\u884c\u8d4b\u503c\u64cd\u4f5c\u3002 (n := 10) \uff1a\u5c06\u53d8\u91cf n \u8d4b\u503c\u4e3a 10\uff0c\u540c\u65f6\u8fd4\u56de\u8fd9\u4e2a\u8d4b\u503c\u7ed3\u679c\u3002 > 5 \uff1a\u68c0\u67e5\u8d4b\u503c\u540e\u7684 n \u662f\u5426\u5927\u4e8e 5\u3002\u5982\u679c\u6761\u4ef6\u4e3a\u771f\uff0c\u5219\u6267\u884c\u63a5\u4e0b\u6765\u7684\u4ee3\u7801\u5757\u3002 print(n) \uff1a\u5982\u679c\u6761\u4ef6\u4e3a\u771f\uff0c\u6253\u5370\u53d8\u91cf n \u7684\u503c\uff08\u5373 10\uff09\u3002 \u6d77\u8c61\u8fd0\u7b97\u7b26\u7684\u4f18\u70b9\uff1a \u6d77\u8c61\u8fd0\u7b97\u7b26\uff08 := \uff09\u5141\u8bb8\u5728\u8868\u8fbe\u5f0f\u5185\u90e8\u8fdb\u884c\u8d4b\u503c\uff0c\u8fd9\u53ef\u4ee5\u51cf\u5c11\u4ee3\u7801\u7684\u91cd\u590d\uff0c\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u7b80\u6d01\u6027\u3002 \u5728\u4e0a\u8ff0\u4f8b\u5b50\u4e2d\uff0c\u4f20\u7edf\u5199\u6cd5\u9700\u8981\u5355\u72ec\u4e00\u884c\u6765\u8d4b\u503c n \uff0c\u7136\u540e\u5728 if \u8bed\u53e5\u4e2d\u8fdb\u884c\u6761\u4ef6\u68c0\u67e5\u3002\u800c\u4f7f\u7528\u6d77\u8c61\u8fd0\u7b97\u7b26\u7684\u5199\u6cd5\u53ef\u4ee5\u5728 if \u8bed\u53e5\u4e2d\u76f4\u63a5\u8fdb\u884c\u8d4b\u503c\u548c\u6761\u4ef6\u68c0\u67e5\u3002","title":"7.3 Python\u8d4b\u503c\u8fd0\u7b97\u7b26"},{"location":"lesson1/Lesson1%20Python/#74-python","text":"\u6309\u4f4d\u8fd0\u7b97\u7b26\u662f\u628a\u6570\u5b57\u770b\u4f5c\u4e8c\u8fdb\u5236\u6765\u8fdb\u884c\u8ba1\u7b97\u7684\u3002Python\u4e2d\u7684\u6309\u4f4d\u8fd0\u7b97\u6cd5\u5219\u5982\u4e0b\uff1a \u4e0b\u8868\u4e2d\u53d8\u91cf a \u4e3a 60\uff0cb \u4e3a 13\u4e8c\u8fdb\u5236\u683c\u5f0f\u5982\u4e0b\uff1a a = 0011 1100 b = 0000 1101 ----------------- a&b = 0000 1100 a|b = 0011 1101 a^b = 0011 0001 ~a = 1100 0011 \u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b & \u6309\u4f4d\u4e0e\u8fd0\u7b97\u7b26\uff1a\u53c2\u4e0e\u8fd0\u7b97\u7684\u4e24\u4e2a\u503c,\u5982\u679c\u4e24\u4e2a\u76f8\u5e94\u4f4d\u90fd\u4e3a1,\u5219\u8be5\u4f4d\u7684\u7ed3\u679c\u4e3a1,\u5426\u5219\u4e3a0 (a & b) \u8f93\u51fa\u7ed3\u679c 12 \uff0c\u4e8c\u8fdb\u5236\u89e3\u91ca\uff1a 0000 1100 | \u6309\u4f4d\u6216\u8fd0\u7b97\u7b26\uff1a\u53ea\u8981\u5bf9\u5e94\u7684\u4e8c\u4e2a\u4e8c\u8fdb\u4f4d\u6709\u4e00\u4e2a\u4e3a1\u65f6\uff0c\u7ed3\u679c\u4f4d\u5c31\u4e3a1\u3002 (a | b) \u8f93\u51fa\u7ed3\u679c 61 \uff0c\u4e8c\u8fdb\u5236\u89e3\u91ca\uff1a 0011 1101 ^ \u6309\u4f4d\u5f02\u6216\u8fd0\u7b97\u7b26\uff1a\u5f53\u4e24\u5bf9\u5e94\u7684\u4e8c\u8fdb\u4f4d\u76f8\u5f02\u65f6\uff0c\u7ed3\u679c\u4e3a1 (a ^ b) \u8f93\u51fa\u7ed3\u679c 49 \uff0c\u4e8c\u8fdb\u5236\u89e3\u91ca\uff1a 0011 0001 ~ \u6309\u4f4d\u53d6\u53cd\u8fd0\u7b97\u7b26\uff1a\u5bf9\u6570\u636e\u7684\u6bcf\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u53d6\u53cd,\u5373\u628a1\u53d8\u4e3a0,\u628a0\u53d8\u4e3a1\u3002 ~x \u7c7b\u4f3c\u4e8e -x-1 (~a ) \u8f93\u51fa\u7ed3\u679c -61 \uff0c\u4e8c\u8fdb\u5236\u89e3\u91ca\uff1a 1100 0011\uff0c \u5728\u4e00\u4e2a\u6709\u7b26\u53f7\u4e8c\u8fdb\u5236\u6570\u7684\u8865\u7801\u5f62\u5f0f\u3002 << \u5de6\u79fb\u52a8\u8fd0\u7b97\u7b26\uff1a\u8fd0\u7b97\u6570\u7684\u5404\u4e8c\u8fdb\u4f4d\u5168\u90e8\u5de6\u79fb\u82e5\u5e72\u4f4d\uff0c\u7531\"<<\"\u53f3\u8fb9\u7684\u6570\u6307\u5b9a\u79fb\u52a8\u7684\u4f4d\u6570\uff0c\u9ad8\u4f4d\u4e22\u5f03\uff0c\u4f4e\u4f4d\u88650\u3002 a << 2 \u8f93\u51fa\u7ed3\u679c 240 \uff0c\u4e8c\u8fdb\u5236\u89e3\u91ca\uff1a 1111 0000 >> \u53f3\u79fb\u52a8\u8fd0\u7b97\u7b26\uff1a\u628a\">>\"\u5de6\u8fb9\u7684\u8fd0\u7b97\u6570\u7684\u5404\u4e8c\u8fdb\u4f4d\u5168\u90e8\u53f3\u79fb\u82e5\u5e72\u4f4d\uff0c\">>\"\u53f3\u8fb9\u7684\u6570\u6307\u5b9a\u79fb\u52a8\u7684\u4f4d\u6570 a >> 2 \u8f93\u51fa\u7ed3\u679c 15 \uff0c\u4e8c\u8fdb\u5236\u89e3\u91ca\uff1a 0000 1111 \u4ee5\u4e0b\u5b9e\u4f8b\u6f14\u793a\u4e86Python\u6240\u6709\u4f4d\u8fd0\u7b97\u7b26\u7684\u64cd\u4f5c\uff1a a = 60 # 60 = 0011 1100 b = 13 # 13 = 0000 1101 c = 0 c = a & b # 12 = 0000 1100 print(\"c \u7684\u503c\u4e3a\uff1a\", c) c = a | b # 61 = 0011 1101 print(\"c \u7684\u503c\u4e3a\uff1a\", c) c = a ^ b # 49 = 0011 0001 print(\"c \u7684\u503c\u4e3a\uff1a\", c) c = ~a # -61 = 1100 0011 print(\"c \u7684\u503c\u4e3a\uff1a\", c) c = a << 2 # 240 = 1111 0000 print(\"c \u7684\u503c\u4e3a\uff1a\", c) c = a >> 2 # 15 = 0000 1111 print(\"c \u7684\u503c\u4e3a\uff1a\", c) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a c \u7684\u503c\u4e3a\uff1a 12 c \u7684\u503c\u4e3a\uff1a 61 c \u7684\u503c\u4e3a\uff1a 49 c \u7684\u503c\u4e3a\uff1a -61 c \u7684\u503c\u4e3a\uff1a 240 c \u7684\u503c\u4e3a\uff1a 15","title":"7.4 Python\u4f4d\u8fd0\u7b97\u7b26"},{"location":"lesson1/Lesson1%20Python/#75-python","text":"Python\u8bed\u8a00\u652f\u6301\u903b\u8f91\u8fd0\u7b97\u7b26\uff0c\u4ee5\u4e0b\u5047\u8bbe\u53d8\u91cf a \u4e3a 10, b\u4e3a 20\uff1a \u8fd0\u7b97\u7b26 \u903b\u8f91\u8868\u8fbe\u5f0f \u63cf\u8ff0 \u5b9e\u4f8b and x and y \u5e03\u5c14\"\u4e0e\" - \u5982\u679c x \u4e3a False\uff0cx and y \u8fd4\u56de x \u7684\u503c\uff0c\u5426\u5219\u8fd4\u56de y \u7684\u8ba1\u7b97\u503c\u3002 (a and b) \u8fd4\u56de 20\u3002 or x or y \u5e03\u5c14\"\u6216\" - \u5982\u679c x \u662f True\uff0c\u5b83\u8fd4\u56de x \u7684\u503c\uff0c\u5426\u5219\u5b83\u8fd4\u56de y \u7684\u8ba1\u7b97\u503c\u3002 (a or b) \u8fd4\u56de 10\u3002 not not x \u5e03\u5c14\"\u975e\" - \u5982\u679c x \u4e3a True\uff0c\u8fd4\u56de False \u3002\u5982\u679c x \u4e3a False\uff0c\u5b83\u8fd4\u56de True\u3002 not(a and b) \u8fd4\u56de False \u4ee5\u4e0b\u5b9e\u4f8b\u6f14\u793a\u4e86Python\u6240\u6709\u903b\u8f91\u8fd0\u7b97\u7b26\u7684\u64cd\u4f5c\uff1a #!/usr/bin/python3 a = 10 b = 20 if a and b: print(\"\u53d8\u91cf a \u548c b \u90fd\u4e3a true\") else: print(\"\u53d8\u91cf a \u548c b \u6709\u4e00\u4e2a\u4e0d\u4e3a true\") if a or b: print(\"\u53d8\u91cf a \u548c b \u90fd\u4e3a true\uff0c\u6216\u5176\u4e2d\u4e00\u4e2a\u53d8\u91cf\u4e3a true\") else: print(\"\u53d8\u91cf a \u548c b \u90fd\u4e0d\u4e3a true\") # \u4fee\u6539\u53d8\u91cf a \u7684\u503c a = 0 if a and b: print(\"\u53d8\u91cf a \u548c b \u90fd\u4e3a true\") else: print(\"\u53d8\u91cf a \u548c b \u6709\u4e00\u4e2a\u4e0d\u4e3a true\") if a or b: print(\"\u53d8\u91cf a \u548c b \u90fd\u4e3a true\uff0c\u6216\u5176\u4e2d\u4e00\u4e2a\u53d8\u91cf\u4e3a true\") else: print(\"\u53d8\u91cf a \u548c b \u90fd\u4e0d\u4e3a true\") if not( a and b: print(\"\u53d8\u91cf a \u548c b \u90fd\u4e3a false\uff0c\u6216\u5176\u4e2d\u4e00\u4e2a\u53d8\u91cf\u4e3a false\") else: print(\"\u53d8\u91cf a \u548c b \u90fd\u4e3a true\") \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a \u53d8\u91cf a \u548c b \u90fd\u4e3a true \u53d8\u91cf a \u548c b \u90fd\u4e3a true\uff0c\u6216\u5176\u4e2d\u4e00\u4e2a\u53d8\u91cf\u4e3a true \u53d8\u91cf a \u548c b \u6709\u4e00\u4e2a\u4e0d\u4e3a true \u53d8\u91cf a \u548c b \u90fd\u4e3a true\uff0c\u6216\u5176\u4e2d\u4e00\u4e2a\u53d8\u91cf\u4e3a true \u53d8\u91cf a \u548c b \u90fd\u4e3a false\uff0c\u6216\u5176\u4e2d\u4e00\u4e2a\u53d8\u91cf\u4e3a false","title":"7.5 Python\u903b\u8f91\u8fd0\u7b97\u7b26"},{"location":"lesson1/Lesson1%20Python/#76-python","text":"\u9664\u4e86\u4ee5\u4e0a\u7684\u4e00\u4e9b\u8fd0\u7b97\u7b26\u4e4b\u5916\uff0cPython\u8fd8\u652f\u6301\u6210\u5458\u8fd0\u7b97\u7b26\uff0c\u6d4b\u8bd5\u5b9e\u4f8b\u4e2d\u5305\u542b\u4e86\u4e00\u7cfb\u5217\u7684\u6210\u5458\uff0c\u5305\u62ec\u5b57\u7b26\u4e32\uff0c\u5217\u8868\u6216\u5143\u7ec4\u3002 \u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b in \u5982\u679c\u5728\u6307\u5b9a\u7684\u5e8f\u5217\u4e2d\u627e\u5230\u503c\u8fd4\u56de True\uff0c\u5426\u5219\u8fd4\u56de False\u3002 x \u5728 y \u5e8f\u5217\u4e2d , \u5982\u679c x \u5728 y \u5e8f\u5217\u4e2d\u8fd4\u56de True\u3002 not in \u5982\u679c\u5728\u6307\u5b9a\u7684\u5e8f\u5217\u4e2d\u6ca1\u6709\u627e\u5230\u503c\u8fd4\u56de True\uff0c\u5426\u5219\u8fd4\u56de False\u3002 x \u4e0d\u5728 y \u5e8f\u5217\u4e2d , \u5982\u679c x \u4e0d\u5728 y \u5e8f\u5217\u4e2d\u8fd4\u56de True\u3002 \u4ee5\u4e0b\u5b9e\u4f8b\u6f14\u793a\u4e86Python\u6240\u6709\u6210\u5458\u8fd0\u7b97\u7b26\u7684\u64cd\u4f5c\uff1a a = 10 b = 20 list = [1, 2, 3, 4, 5 ] if a in list: print(\"\u53d8\u91cf a \u5728\u7ed9\u5b9a\u7684\u5217\u8868\u4e2d list \u4e2d\") else: print(\"\u53d8\u91cf a \u4e0d\u5728\u7ed9\u5b9a\u7684\u5217\u8868\u4e2d list \u4e2d\") if b not in list: print(\"\u53d8\u91cf b \u4e0d\u5728\u7ed9\u5b9a\u7684\u5217\u8868\u4e2d list \u4e2d\") else: print(\"\u53d8\u91cf b \u5728\u7ed9\u5b9a\u7684\u5217\u8868\u4e2d list \u4e2d\") # \u4fee\u6539\u53d8\u91cf a \u7684\u503c a = 2 if a in list: print(\"\u53d8\u91cf a \u5728\u7ed9\u5b9a\u7684\u5217\u8868\u4e2d list \u4e2d\") else: print(\"\u53d8\u91cf a \u4e0d\u5728\u7ed9\u5b9a\u7684\u5217\u8868\u4e2d list \u4e2d\") \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a \u53d8\u91cf a \u4e0d\u5728\u7ed9\u5b9a\u7684\u5217\u8868\u4e2d list \u4e2d \u53d8\u91cf b \u4e0d\u5728\u7ed9\u5b9a\u7684\u5217\u8868\u4e2d list \u4e2d \u53d8\u91cf a \u5728\u7ed9\u5b9a\u7684\u5217\u8868\u4e2d list \u4e2d","title":"7.6 Python\u6210\u5458\u8fd0\u7b97\u7b26"},{"location":"lesson1/Lesson1%20Python/#77-python","text":"\u8eab\u4efd\u8fd0\u7b97\u7b26\u7528\u4e8e\u6bd4\u8f83\u4e24\u4e2a\u5bf9\u8c61\u7684\u5b58\u50a8\u5355\u5143 \u8fd0\u7b97\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b is is \u662f\u5224\u65ad\u4e24\u4e2a\u6807\u8bc6\u7b26\u662f\u4e0d\u662f\u5f15\u7528\u81ea\u4e00\u4e2a\u5bf9\u8c61 x is y , \u7c7b\u4f3c id(x) == id(y) , \u5982\u679c\u5f15\u7528\u7684\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\u5219\u8fd4\u56de True\uff0c\u5426\u5219\u8fd4\u56de False is not is not \u662f\u5224\u65ad\u4e24\u4e2a\u6807\u8bc6\u7b26\u662f\u4e0d\u662f\u5f15\u7528\u81ea\u4e0d\u540c\u5bf9\u8c61 x is not y \uff0c \u7c7b\u4f3c id(x) != id(y) \u3002\u5982\u679c\u5f15\u7528\u7684\u4e0d\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\u5219\u8fd4\u56de\u7ed3\u679c True\uff0c\u5426\u5219\u8fd4\u56de False\u3002 \u6ce8\uff1a id()\u51fd\u6570\u7528\u4e8e\u83b7\u53d6\u5bf9\u8c61\u5185\u5b58\u5730\u5740\u3002 \u5bf9\u4e8e\u521d\u5b66\u8005\u6765\u8bf4\uff0c\u7528\u7684\u6bd4\u8f83\u591a\u7684\u662f\u5224\u65ad\u901a\u5e38\u5728\u5224\u65ad\u67d0\u4e2a\u53d8\u91cf\u662f\u5426\u4e3a None \u65f6\uff0c\u66f4\u63a8\u8350\u4f7f\u7528 is \u800c\u975e ==\uff0c\u56e0\u4e3a None \u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u5355\u4f8b\u5bf9\u8c61\u3002 value = None if value is None: print(\"Value is None\") \u4ee5\u4e0b\u5b9e\u4f8b\u6f14\u793a\u4e86Python\u6240\u6709\u8eab\u4efd\u8fd0\u7b97\u7b26\u7684\u64cd\u4f5c\uff1a a = 20 b = 20 if a is b: print(\"a \u548c b \u6709\u76f8\u540c\u7684\u6807\u8bc6\") else: print(\"a \u548c b \u6ca1\u6709\u76f8\u540c\u7684\u6807\u8bc6\") if id(a) == id(b): print(\"a \u548c b \u6709\u76f8\u540c\u7684\u6807\u8bc6\") else: print(\"a \u548c b \u6ca1\u6709\u76f8\u540c\u7684\u6807\u8bc6\") # \u4fee\u6539\u53d8\u91cf b \u7684\u503c b = 30 if a is b: print(\"a \u548c b \u6709\u76f8\u540c\u7684\u6807\u8bc6\") else: print(\"a \u548c b \u6ca1\u6709\u76f8\u540c\u7684\u6807\u8bc6\") if a is not b: print(\"a \u548c b \u6ca1\u6709\u76f8\u540c\u7684\u6807\u8bc6\") else: print(\"a \u548c b \u6709\u76f8\u540c\u7684\u6807\u8bc6\") \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a a \u548c b \u6709\u76f8\u540c\u7684\u6807\u8bc6 a \u548c b \u6709\u76f8\u540c\u7684\u6807\u8bc6 a \u548c b \u6ca1\u6709\u76f8\u540c\u7684\u6807\u8bc6 a \u548c b \u6ca1\u6709\u76f8\u540c\u7684\u6807\u8bc6 is \u4e0e == \u533a\u522b\uff1a is \u7528\u4e8e\u5224\u65ad\u4e24\u4e2a\u53d8\u91cf\u5f15\u7528\u5bf9\u8c61\u662f\u5426\u4e3a\u540c\u4e00\u4e2a\uff0c == \u7528\u4e8e\u5224\u65ad\u5f15\u7528\u53d8\u91cf\u7684\u503c\u662f\u5426\u76f8\u7b49\u3002 >>>a = [1, 2, 3] >>> b = a >>> b is a True >>> b == a True >>> b = a[:] >>> b is a False >>> b == a True","title":"7.7 Python\u8eab\u4efd\u8fd0\u7b97\u7b26"},{"location":"lesson1/Lesson1%20Python/#8-python","text":"","title":"8 Python\u7684\u8f93\u5165\u4e0e\u8f93\u51fa"},{"location":"lesson1/Lesson1%20Python/#81-input","text":"python\u4e2d\u6700\u5e38\u7528\u8bfb\u53d6\u7528\u6237\u8f93\u51fa\u7684\u51fd\u6570\u662f input() \uff0c\u4f1a\u81ea\u52a8\u8bc6\u5c06\u7528\u6237\u8f93\u5165\u5185\u5bb9\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u56e0\u6b64\u5982\u679c\u60f3\u8981\u8f93\u5165\u786e\u5b9a\u7684\u6570\u636e\u7c7b\u578b\u9700\u8981\u63d0\u524d\u7533\u660e\u3002\u4f8b\u5982\uff1a # \u83b7\u53d6\u7528\u6237\u8f93\u5165\u7684\u59d3\u540d name = input(\"\u8bf7\u8f93\u5165\u4f60\u7684\u59d3\u540d\uff1a\") # \u83b7\u53d6\u7528\u6237\u8f93\u5165\u7684\u5e74\u9f84\uff0c\u5e76\u8f6c\u6362\u4e3a\u6574\u6570 age = int(input(\"\u8bf7\u8f93\u5165\u4f60\u7684\u5e74\u9f84\uff1a\")) # \u83b7\u53d6\u7528\u6237\u8f93\u5165\u7684\u5de5\u8d44\uff0c\u5e76\u8f6c\u6362\u4e3a\u6d6e\u70b9\u6570 salary = float(input(\"\u8bf7\u8f93\u5165\u4f60\u7684\u5de5\u8d44\uff1a\")) # \u6253\u5370\u7528\u6237\u7684\u4fe1\u606f print(\"\u4f60\u7684\u4fe1\u606f\u5982\u4e0b\uff1a\") print(f\"\u59d3\u540d: {name}\\n\u5e74\u9f84\uff1a{age}\\n\u5de5\u8d44\uff1a{salary}\") \u4f8b\u5982\u8f93\u5165\u4e3a\uff1a \u8bf7\u8f93\u5165\u4f60\u7684\u59d3\u540d\uff1aCodeRaft\u6cdb\u7f16\u7a0b \u8bf7\u8f93\u5165\u4f60\u7684\u5e74\u9f84\uff1a2 \u8bf7\u8f93\u5165\u4f60\u7684\u5de5\u8d44\uff1a6666.66 \u8f93\u51fa\u5982\u4e0b\uff1a \u4f60\u7684\u4fe1\u606f\u5982\u4e0b\uff1a \u59d3\u540d: CodeRaft\u6cdb\u7f16\u7a0b \u5e74\u9f84\uff1a2 \u5de5\u8d44\uff1a6666.66","title":"8.1 \u4f7f\u7528 input \u8bfb\u53d6\u5b57\u7b26\u4e32/\u6574\u6570/\u6d6e\u70b9\u6570"},{"location":"lesson1/Lesson1%20Python/#82-print","text":"print\u6bcf\u6b21\u8f93\u51fa\u540e\u81ea\u52a8\u6362\u884c\uff0c\u662fpython\u6700\u5e38\u7528\u7684\u4e00\u79cd\u8f93\u51fa\u65b9\u5f0f\uff0c\u53ef\u4ee5\u8f93\u51fa\u5404\u79cd\u7c7b\u578b\u6570\u636e\u3002 a = \"CodeRaft\" b = \"\u6cdb\u7f16\u7a0b\" c = 2 + 2 # Printing the strings print(a) print(b) print(c) print(\"\u6211\u5b9e\u73b0\u4e86\u81ea\u52a8\u6362\u884c\") print(\"OvO\") \u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a CodeRaft \u6cdb\u7f16\u7a0b 4 \u6211\u5b9e\u73b0\u4e86\u81ea\u52a8\u6362\u884c OvO","title":"8.2 print \u8f93\u51fa"},{"location":"lesson1/Lesson1%20Python/#9","text":"Python\u73af\u5883\u5b89\u88c5\u6b63\u5e38\u3002 \u5b8c\u6210\u7b2c\u4e00\u4e2aHello World\u7a0b\u5e8f\u3002 \u8ba4\u8bc6\u53d8\u91cf\u7c7b\u578b\u548c\u547d\u540d\u65b9\u5f0f\u3002 Python\u4e2d\u7684\u8fd0\u7b97\u7b26\u3002 Python\u7684\u8f93\u5165\u4e0e\u8f93\u51fa\u3002","title":"9 \u8bfe\u7a0b\u603b\u7ed3"},{"location":"lesson1/Lesson1%20Python/#_2","text":"1.\u7f16\u5199\u4e00\u4e2aPython\u7a0b\u5e8f\u6765\u627e\u51fa\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u7684\u6700\u5c0f\u6b63\u6574\u6570\uff1a \u8be5\u6570\u9664\u4ee512\u4f591 \u8be5\u6570\u9664\u4ee523\u4e5f\u4f591 \u8be5\u6570\u9664\u4ee531\u4e5f\u4f591 \u8bf7\u5728\u4ee5\u4e0b\u9009\u9879\u4e2d\u9009\u62e9\u4e00\u4e2a\u6b63\u786e\u7684\u7b54\u6848\uff0c\u8be5\u7b54\u6848\u6ee1\u8db3\u4e0a\u8ff0\u6240\u6709\u6761\u4ef6\uff1a (A) 4191 (B) 3232 (C) 8577 (D) 9233 \u53c2\u8003\u7a0b\u5e8f\uff1a target = int(input(\"\u8f93\u5165\u76ee\u6807\u9009\u9879\u7b54\u6848:\")) a = target % 12 b = target % 23 c = target % 31 print(\"a=\",a,\"\\nb=\",b,\"\\nc=\",c) if a == b == c == 1: print(\"Correct,That's what I find!!\") else: print(\"Wrong,Please try another Answer!\") 2.\u7f16\u5199\u4e00\u4e2aPython\u7a0b\u5e8f\uff0c\u7528\u4e8e\u6a21\u62df\u9910\u5385\u7684\u70b9\u5355\u8fc7\u7a0b\u3002\u7a0b\u5e8f\u5e94\u63d0\u524d\u544a\u77e5\u7528\u6237\u6c49\u5821\u3001\u85af\u6761\u548c\u53ef\u4e50\u7684\u4ef7\u683c\uff0c\u5e76\u901a\u8fc7\u7528\u6237\u8f93\u5165\u83b7\u5f97\u70b9\u5355\u4fe1\u606f\u3002\u6700\u540e\uff0c\u7a0b\u5e8f\u5e94\u5206\u884c\u8f93\u51fa\u5ba2\u6237\u70b9\u7684\u5185\u5bb9\uff0c\u5e76\u6253\u5370\u51fa\u603b\u4ef7\u3002 \u4ef7\u683c\u4fe1\u606f\uff1a \u6c49\u5821\uff1a$5 \u85af\u6761\uff1a$2 \u53ef\u4e50\uff1a$1 \u529f\u80fd\u8981\u6c42\uff1a \u663e\u793a\u5404\u9879\u98df\u7269\u7684\u4ef7\u683c\u3002 \u63d0\u793a\u7528\u6237\u8f93\u5165\u6bcf\u79cd\u98df\u7269\u7684\u6570\u91cf\u3002 \u8ba1\u7b97\u5e76\u663e\u793a\u6bcf\u79cd\u98df\u7269\u7684\u70b9\u5355\u6570\u91cf\u3002 \u8ba1\u7b97\u5e76\u663e\u793a\u603b\u4ef7\u3002 \u8f93\u5165\u8f93\u51fa\u793a\u4f8b\uff1a \u793a\u4f8b\u8f93\u51fa\uff1a \u6c49\u5821\uff1a$5 \u85af\u6761\uff1a$2 \u53ef\u4e50\uff1a$1 \u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf\uff1a2 \u8bf7\u8f93\u5165\u85af\u6761\u7684\u6570\u91cf\uff1a1 \u8bf7\u8f93\u5165\u53ef\u4e50\u7684\u6570\u91cf\uff1a3 \u60a8\u7684\u70b9\u5355\u5982\u4e0b\uff1a \u6c49\u5821 X 2 \u85af\u6761 X 1 \u53ef\u4e50 X 3 \u603b\u4ef7\uff1a$15 \u63d0\u793a\uff1a \u4f7f\u7528 input() \u51fd\u6570\u83b7\u53d6\u7528\u6237\u8f93\u5165\u3002 \u4f7f\u7528\u7b97\u672f\u8fd0\u7b97\u8ba1\u7b97\u603b\u4ef7\u3002 \u4f7f\u7528 print() \u51fd\u6570\u8f93\u51fa\u7ed3\u679c\u3002 \u793a\u4f8b\u4ee3\u7801\uff1a # \u5b9a\u4e49\u98df\u7269\u7684\u4ef7\u683c burger_price = 5 fries_price = 2 cola_price = 1 # \u663e\u793a\u4ef7\u683c\u4fe1\u606f print(f\"\u6c49\u5821\uff1a${burger_price}\") print(f\"\u85af\u6761\uff1a${fries_price}\") print(f\"\u53ef\u4e50\uff1a${cola_price}\\n\") # \u83b7\u53d6\u7528\u6237\u8f93\u5165\u7684\u70b9\u5355\u6570\u91cf burger_count = int(input(\"\u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf\uff1a\")) fries_count = int(input(\"\u8bf7\u8f93\u5165\u85af\u6761\u7684\u6570\u91cf\uff1a\")) cola_count = int(input(\"\u8bf7\u8f93\u5165\u53ef\u4e50\u7684\u6570\u91cf\uff1a\")) # \u8ba1\u7b97\u603b\u4ef7 total_price = (burger_count * burger_price + fries_count * fries_price + cola_count * cola_price) # \u8f93\u51fa\u70b9\u5355\u5185\u5bb9\u548c\u603b\u4ef7 print(\"\\n\u60a8\u7684\u70b9\u5355\u5982\u4e0b\uff1a\") print(f\"\u6c49\u5821 X {burger_count}\") print(f\"\u85af\u6761 X {fries_count}\") print(f\"\u53ef\u4e50 X {cola_count}\") print(f\"\\n\u603b\u4ef7\uff1a${total_price}\")","title":"\u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson10/Lesson10%20C%2B%2B/","text":"Lesson 10: \u96c6\u5408\u4e13\u9898 Unordered Set \u7684\u57fa\u672c\u6982\u5ff5 1.1 unordered_set \u7684\u7279\u6027 1.2 unordered_set \u7684\u5e94\u7528\u573a\u666f 1.3 \u5b8c\u6574\u5b9e\u4f8b \u4f8b\u9898\u8bb2\u89e3 2.1 LC349 \u4e24\u4e2a\u6570\u7ec4\u7684\u4ea4\u96c6 2.2 LC645 \u9519\u8bef\u7684\u96c6\u5408 \u4e3e\u4e00\u53cd\u4e09 3.1 LC575 \u5206\u7cd6\u679c 3.2 LC771 \u5b9d\u77f3\u4e0e\u77f3\u5934 \u8bfe\u540e\u7ec3\u4e60 1. Unordered Set \u7684\u57fa\u672c\u6982\u5ff5 unordered_set \u662f C++ STL \u4e2d\u7684\u4e00\u4e2a\u5bb9\u5668\u7c7b\uff0c\u7528\u4e8e\u5b58\u50a8 \u65e0\u5e8f \u7684\u3001 \u4e0d\u91cd\u590d \u7684\u5143\u7d20\u3002 unordered_set \u4e0d\u5141\u8bb8\u5305\u542b\u91cd\u590d\u7684\u5143\u7d20\uff0c\u5982\u679c\u63d2\u5165\u76f8\u540c\u7684\u5143\u7d20\uff0c\u53ea\u4f1a\u4fdd\u7559\u4e00\u4e2a\u3002\u6b64\u5916\uff0c unordered_set \u4e0d\u4fdd\u8bc1\u5143\u7d20\u7684\u5b58\u50a8\u987a\u5e8f\u3002 1.1 unordered_set \u7684\u7279\u6027\uff1a \u5143\u7d20\u552f\u4e00\u6027 \uff1a unordered_set \u4e0d\u5141\u8bb8\u91cd\u590d\u5143\u7d20\uff0c\u6bcf\u4e2a\u5143\u7d20\u5728\u96c6\u5408\u4e2d\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002 \u65e0\u5e8f \uff1a unordered_set \u4e0d\u4fdd\u8bc1\u5143\u7d20\u7684\u63d2\u5165\u987a\u5e8f\u3002 \u5e38\u7528\u65b9\u6cd5 \uff1a insert(const T& value) \uff1a\u5411\u96c6\u5408\u4e2d\u6dfb\u52a0\u5143\u7d20\uff0c\u5982\u679c\u5143\u7d20\u5df2\u7ecf\u5b58\u5728\uff0c\u5219\u4e0d\u4f1a\u63d2\u5165\u3002 erase(const T& value) \uff1a\u4ece\u96c6\u5408\u4e2d\u79fb\u9664\u6307\u5b9a\u7684\u5143\u7d20\u3002 find(const T& value) \uff1a\u67e5\u627e\u96c6\u5408\u4e2d\u662f\u5426\u5305\u542b\u67d0\u4e2a\u5143\u7d20\uff0c\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u5982\u679c\u627e\u4e0d\u5230\u5219\u8fd4\u56de end() \u3002 size() \uff1a\u8fd4\u56de\u96c6\u5408\u4e2d\u5143\u7d20\u7684\u6570\u91cf\u3002 empty() \uff1a\u5224\u65ad\u96c6\u5408\u662f\u5426\u4e3a\u7a7a\u3002 clear() \uff1a\u6e05\u7a7a\u96c6\u5408\u4e2d\u7684\u6240\u6709\u5143\u7d20\u3002 1.2 unordered_set \u7684\u5e94\u7528\u573a\u666f unordered_set \u57fa\u4e8e\u54c8\u5e0c\u8868\u5b9e\u73b0\uff0c\u63d0\u4f9b\u4e86\u63d2\u5165\u3001\u5220\u9664\u548c\u67e5\u627e\u64cd\u4f5c\uff0c\u9002\u7528\u4e8e\u4ee5\u4e0b\u573a\u666f\uff1a \u53bb\u91cd\u529f\u80fd \uff1a\u5f53\u9700\u8981\u5b58\u50a8\u4e0d\u91cd\u590d\u7684\u5143\u7d20\u65f6\uff0c unordered_set \u662f\u7406\u60f3\u7684\u9009\u62e9\u3002\u4f8b\u5982\uff0c\u7528\u4e8e\u5b58\u50a8\u552f\u4e00\u7684\u7528\u6237ID\u3001\u7528\u6237\u540d\u7b49\u3002 \u96c6\u5408\u64cd\u4f5c \uff1a unordered_set \u652f\u6301\u7ecf\u5178\u7684\u96c6\u5408\u64cd\u4f5c\uff0c\u5982\u4ea4\u96c6\u3001\u5e76\u96c6\u548c\u5dee\u96c6\uff0c\u80fd\u591f\u6709\u6548\u5904\u7406\u4e24\u4e2a\u96c6\u5408\u95f4\u7684\u8fd0\u7b97\u3002 \u4ea4\u96c6 \uff08\u4e24\u4e2a\u96c6\u5408\u5171\u6709\u7684\u5143\u7d20\uff09\uff1a ```cpp std::unordered_set set1 = {1, 2, 3}; std::unordered_set set2 = {2, 3, 4}; std::unordered_set intersection; for (int elem : set1) { if (set2.find(elem) != set2.end()) { intersection.insert(elem); } } // intersection \u73b0\u5728\u662f {2, 3} - **\u5e76\u96c6**\uff08\u4e24\u4e2a\u96c6\u5408\u7684\u6240\u6709\u5143\u7d20\uff09\uff1a cpp std::unordered_set union_set = set1; union_set.insert(set2.begin(), set2.end()); // union_set \u73b0\u5728\u662f {1, 2, 3, 4} - **\u5dee\u96c6**\uff08\u4ec5\u5b58\u5728\u4e8e\u7b2c\u4e00\u4e2a\u96c6\u5408\u7684\u5143\u7d20\uff09\uff1a cpp std::unordered_set difference; for (int elem : set1) { if (set2.find(elem) == set2.end()) { difference.insert(elem); } } // difference \u73b0\u5728\u662f {1} ``` 1.3 \u5b8c\u6574\u5b9e\u4f8b \u4ee5\u4e0b\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u4f7f\u7528 unordered_set \u5b9e\u73b0\u96c6\u5408\u64cd\u4f5c\u7684 C++ \u793a\u4f8b\uff1a #include <iostream> #include <unordered_set> int main() { // \u521b\u5efa\u4e24\u4e2a\u96c6\u5408 std::unordered_set<int> set1 = {1, 2, 3}; std::unordered_set<int> set2 = {2, 3, 4}; // \u4ea4\u96c6 std::unordered_set<int> intersection; for (int elem : set1) { if (set2.find(elem) != set2.end()) { intersection.insert(elem); } } std::cout << \"Intersection (\u4ea4\u96c6): \"; for (int elem : intersection) std::cout << elem << \" \"; std::cout << std::endl; // \u5e76\u96c6 std::unordered_set<int> union_set = set1; union_set.insert(set2.begin(), set2.end()); std::cout << \"Union (\u5e76\u96c6): \"; for (int elem : union_set) std::cout << elem << \" \"; std::cout << std::endl; // \u5dee\u96c6 std::unordered_set<int> difference; for (int elem : set1) { if (set2.find(elem) == set2.end()) { difference.insert(elem); } } std::cout << \"Difference (\u5dee\u96c6): \"; for (int elem : difference) std::cout << elem << \" \"; std::cout << std::endl; return 0; } 2. \u4f8b\u9898\u8bb2\u89e3 2.1 LC349 \u4e24\u4e2a\u6570\u7ec4\u7684\u4ea4\u96c6 \u9898\u76ee\u63cf\u8ff0 \u7ed9\u5b9a\u4e24\u4e2a\u6570\u7ec4 nums1 \u548c nums2 \uff0c\u8fd4\u56de\u5b83\u4eec\u7684\u4ea4\u96c6\u3002\u8f93\u51fa\u7ed3\u679c\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u4e00\u5b9a\u662f\u552f\u4e00\u7684\uff0c\u53ef\u4ee5\u4e0d\u8003\u8651\u8f93\u51fa\u7ed3\u679c\u7684\u987a\u5e8f\u3002 \u89e3\u6cd51\uff1a\u904d\u5386\u6cd5 \u601d\u8def\u5206\u6790 \u904d\u5386 \uff1a \u4f7f\u7528\u4e24\u4e2a\u5d4c\u5957\u7684\u5faa\u73af\uff0c\u904d\u5386 nums2 \u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\uff0c\u5e76\u68c0\u67e5\u5b83\u662f\u5426\u5728 nums1 \u4e2d\u5b58\u5728\u3002 \u53bb\u91cd\u64cd\u4f5c \uff1a \u4f7f\u7528 find() \u51fd\u6570\u6765\u786e\u4fdd\u7ed3\u679c\u4e2d\u6ca1\u6709\u91cd\u590d\u7684\u5143\u7d20\u3002 \u4ee3\u7801\u5b9e\u73b0 class Solution { public: std::vector<int> intersection(std::vector<int>& nums1, std::vector<int>& nums2) { std::vector<int> result{}; for(int i = 0; i < nums2.size(); i++) { // \u904d\u5386 nums2 \u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20 for(int j = 0; j < nums1.size(); j++) { // \u5728 nums1 \u4e2d\u67e5\u627e\u8be5\u5143\u7d20 if(nums1[j] == nums2[i]) { // \u786e\u4fdd result \u4e2d\u6ca1\u6709\u91cd\u590d\u5143\u7d20 if(std::find(result.begin(), result.end(), nums2[i]) == result.end()) { result.push_back(nums2[i]); } break; // \u627e\u5230\u540e\u8df3\u51fa\u5185\u5c42\u5faa\u73af } } } return result; } }; \u89e3\u6cd52\uff1a\u904d\u5386 + unordered_set \u601d\u8def\u5206\u6790 \u904d\u5386 \uff1a \u540c\u6837\u4f7f\u7528\u4e24\u4e2a\u5d4c\u5957\u7684\u5faa\u73af\uff0c\u904d\u5386 nums2 \u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\uff0c\u68c0\u67e5\u662f\u5426\u5b58\u5728\u4e8e nums1 \u4e2d\u3002 \u4f7f\u7528 unordered_set \u53bb\u91cd \uff1a \u4f7f\u7528 unordered_set \u5b58\u50a8\u7ed3\u679c\uff0c\u907f\u514d\u91cd\u590d\u7684\u5143\u7d20\u3002 \u5c06\u7ed3\u679c\u4ece unordered_set \u8f6c\u6362\u4e3a vector \uff1a \u6700\u540e\uff0c\u5c06 unordered_set \u4e2d\u7684\u5143\u7d20\u5b58\u5165 vector \u5e76\u8fd4\u56de\u3002 \u53c2\u8003\u89e3\u7b54 class Solution { public: std::vector<int> intersection(std::vector<int>& nums1, std::vector<int>& nums2) { std::unordered_set<int> result{}; for(int i = 0; i < nums2.size(); i++) { // \u904d\u5386 nums2 \u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20 for(int j = 0; j < nums1.size(); j++) { // \u5728 nums1 \u4e2d\u67e5\u627e\u8be5\u5143\u7d20 if(nums1[j] == nums2[i]) { result.insert(nums2[i]); // \u4f7f\u7528 unordered_set \u81ea\u52a8\u53bb\u91cd break; // \u627e\u5230\u540e\u8df3\u51fa\u5185\u5c42\u5faa\u73af } } } // \u5c06 unordered_set \u8f6c\u6362\u4e3a vector \u5e76\u8fd4\u56de std::vector<int> return_answer{}; for (auto it = result.begin(); it != result.end(); ++it) { return_answer.push_back(*it); } return return_answer; } }; 2.2 LC645 \u9519\u8bef\u7684\u96c6\u5408 \u95ee\u9898\u63cf\u8ff0 \u96c6\u5408 s \u5305\u542b\u4ece 1 \u5230 n \u7684\u6574\u6570\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u56e0\u4e3a\u6570\u636e\u9519\u8bef\uff0c\u5bfc\u81f4\u96c6\u5408\u91cc\u9762\u67d0\u4e00\u4e2a\u6570\u5b57\u590d\u5236\u4e86\u6210\u4e86\u96c6\u5408\u91cc\u9762\u7684\u53e6\u5916\u4e00\u4e2a\u6570\u5b57\u7684\u503c\uff0c\u5bfc\u81f4\u96c6\u5408\u4e22\u5931\u4e86\u4e00\u4e2a\u6570\u5b57\uff0c\u5e76\u4e14\u6709\u4e00\u4e2a\u6570\u5b57\u91cd\u590d \u3002 \u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4 nums \u4ee3\u8868\u4e86\u96c6\u5408 S \u53d1\u751f\u9519\u8bef\u540e\u7684\u7ed3\u679c\u3002 \u8bf7\u4f60\u627e\u51fa\u91cd\u590d\u51fa\u73b0\u7684\u6574\u6570\uff0c\u518d\u627e\u5230\u4e22\u5931\u7684\u6574\u6570\uff0c\u5c06\u5b83\u4eec\u4ee5\u6570\u7ec4\u7684\u5f62\u5f0f\u8fd4\u56de\u3002 \u89e3\u9898\u601d\u8def \u4f7f\u7528 unordered_set \u5b58\u50a8\u51fa\u73b0\u7684\u6570\u5b57 \uff1a \u904d\u5386 nums \uff0c\u5c06\u6570\u5b57\u6dfb\u52a0\u5230 unordered_set \u4e2d\u3002\u7531\u4e8e unordered_set \u4e0d\u5141\u8bb8\u91cd\u590d\u5143\u7d20\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u63d2\u5165\u65f6\u68c0\u67e5\u662f\u5426\u6709\u91cd\u590d\u7684\u6570\u5b57\u3002 \u8ba1\u7b97\u4e22\u5931\u7684\u6570\u5b57 \uff1a \u901a\u8fc7\u6570\u5b66\u516c\u5f0f\u8ba1\u7b97\u4ece 1 \u5230 n \u7684\u603b\u548c\uff0c\u5e76\u51cf\u53bb unordered_set \u4e2d\u7684\u5143\u7d20\u548c\uff0c\u5373\u53ef\u5f97\u51fa\u4e22\u5931\u7684\u6570\u5b57\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a \u5c06\u627e\u5230\u7684\u91cd\u590d\u6570\u5b57\u548c\u4e22\u5931\u7684\u6570\u5b57\u4ee5\u6570\u7ec4\u5f62\u5f0f\u8fd4\u56de\u3002 \u53c2\u8003\u89e3\u7b54 class Solution { public: vector<int> findErrorNums(vector<int>& nums) { unordered_set<int> arrange{}; int repeat; // \u627e\u5230\u91cd\u590d\u7684\u6570\u5b57 for(int c : nums) { bool can_insert = arrange.insert(c).second; if (!can_insert) { repeat = c; } } // \u8ba1\u7b97 1 \u5230 n \u7684\u603b\u548c int expected_sum = (1 + nums.size()) * nums.size() / 2; // \u8ba1\u7b97\u5b9e\u9645\u96c6\u5408\u4e2d\u7684\u6570\u5b57\u548c int sum = 0; for(int c : arrange) { sum += c; } // \u8ba1\u7b97\u4e22\u5931\u7684\u6570\u5b57 int difference = expected_sum - sum; // \u8fd4\u56de\u7ed3\u679c vector<int> output{repeat, difference}; return output; } }; 3. \u4e3e\u4e00\u53cd\u4e09 3.1 LC575 \u5206\u7cd6\u679c \u95ee\u9898\u63cf\u8ff0 Alice \u6709 n \u679a\u7cd6\uff0c\u5176\u4e2d\u7b2c i \u679a\u7cd6\u7684\u7c7b\u578b\u4e3a candyType[i] \u3002Alice \u6ce8\u610f\u5230\u5979\u7684\u4f53\u91cd\u6b63\u5728\u589e\u957f\uff0c\u6240\u4ee5\u524d\u53bb\u62dc\u8bbf\u4e86\u4e00\u4f4d\u533b\u751f\u3002 \u533b\u751f\u5efa\u8bae Alice \u8981\u5c11\u6444\u5165\u7cd6\u5206\uff0c\u53ea\u5403\u6389\u5979\u6240\u6709\u7cd6\u7684 n / 2 \u5373\u53ef\uff08n \u662f\u4e00\u4e2a\u5076\u6570\uff09\u3002Alice \u975e\u5e38\u559c\u6b22\u8fd9\u4e9b\u7cd6\uff0c\u5979\u60f3\u8981\u5728\u9075\u5faa\u533b\u751f\u5efa\u8bae\u7684\u60c5\u51b5\u4e0b\uff0c\u5c3d\u53ef\u80fd\u5403\u5230\u6700\u591a\u4e0d\u540c\u79cd\u7c7b\u7684\u7cd6\u3002 \u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u6574\u6570\u6570\u7ec4 candyType \u3002 \u8fd4\u56de\uff1a Alice \u5728\u4ec5\u5403\u6389 n / 2 \u679a\u7cd6\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u5403\u5230\u7cd6\u7684\u6700\u591a\u79cd\u7c7b\u6570\u3002 \u89e3\u9898\u601d\u8def \u7edf\u8ba1\u7cd6\u679c\u7684\u79cd\u7c7b \uff1a \u4f7f\u7528 unordered_set \u6765\u5b58\u50a8\u7cd6\u679c\u7684\u4e0d\u540c\u79cd\u7c7b\u3002 unordered_set \u81ea\u52a8\u53bb\u9664\u91cd\u590d\u5143\u7d20\uff0c\u4ece\u800c\u53ef\u4ee5\u8bb0\u5f55\u4e0d\u540c\u7c7b\u578b\u7684\u7cd6\u679c\u3002 \u8ba1\u7b97\u53ef\u5403\u7684\u7cd6\u679c\u6570\u91cf \uff1a \u7531\u4e8e Alice \u53ea\u80fd\u5403\u6389 n / 2 \u679a\u7cd6\u679c\uff0c\u8ba1\u7b97\u7cd6\u679c\u7684\u4e0d\u540c\u79cd\u7c7b\u6570\u91cf\u4e0e n / 2 \u7684\u6700\u5c0f\u503c\uff0c\u5373 Alice \u6700\u591a\u80fd\u5403\u5230\u7684\u79cd\u7c7b\u6570\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a \u4f7f\u7528 min \u51fd\u6570\u8fd4\u56de unordered_set \u4e2d\u7cd6\u679c\u79cd\u7c7b\u7684\u6570\u91cf\u4e0e Alice \u80fd\u5403\u6389\u7cd6\u679c\u6570\u91cf\uff08 n / 2 \uff09\u7684\u8f83\u5c0f\u503c\u3002 \u53c2\u8003\u89e3\u7b54 #include <vector> #include <unordered_set> #include <algorithm> using namespace std; class Solution { public: int distributeCandies(vector<int>& candyType) { // \u4f7f\u7528 unordered_set \u6765\u5b58\u50a8\u7cd6\u679c\u7684\u79cd\u7c7b unordered_set<int> types{}; // \u5c06\u6240\u6709\u7cd6\u679c\u7c7b\u578b\u63d2\u5165 unordered_set\uff0c\u81ea\u52a8\u53bb\u91cd for (int c : candyType) { types.insert(c); } // \u8ba1\u7b97 Alice \u53ef\u4ee5\u5403\u7684\u6700\u591a\u79cd\u7c7b\u7684\u7cd6\u679c return min(types.size(), candyType.size() / 2); } }; \u89e3\u91ca \u5b58\u50a8\u7cd6\u679c\u79cd\u7c7b \uff1a\u901a\u8fc7\u904d\u5386 candyType \u6570\u7ec4\uff0c\u5c06\u6240\u6709\u7cd6\u679c\u7c7b\u578b\u5b58\u50a8\u5728 unordered_set \u4e2d\uff0c\u81ea\u52a8\u53bb\u9664\u91cd\u590d\u7684\u7cd6\u679c\u79cd\u7c7b\u3002 \u8ba1\u7b97\u80fd\u5403\u7684\u7cd6\u679c\u79cd\u7c7b \uff1a types.size() \u8868\u793a\u7cd6\u679c\u7684\u4e0d\u540c\u79cd\u7c7b\u6570\u3002 candyType.size() / 2 \u8868\u793a Alice \u6309\u7167\u533b\u751f\u5efa\u8bae\u53ef\u4ee5\u5403\u7684\u7cd6\u679c\u603b\u6570\u3002 \u53d6\u6700\u5c0f\u503c \uff1a\u6700\u7ec8\u8fd4\u56de min(types.size(), candyType.size() / 2) \uff0c\u8868\u793a Alice \u80fd\u591f\u5403\u5230\u7684\u6700\u591a\u4e0d\u540c\u79cd\u7c7b\u7684\u7cd6\u679c\u3002 3.2 LC771 \u5b9d\u77f3\u4e0e\u77f3\u5934 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 jewels \u4ee3\u8868\u77f3\u5934\u4e2d\u5b9d\u77f3\u7684\u7c7b\u578b\uff0c\u53e6\u6709\u4e00\u4e2a\u5b57\u7b26\u4e32 stones \u4ee3\u8868\u4f60\u62e5\u6709\u7684\u77f3\u5934\u3002 stones \u4e2d\u6bcf\u4e2a\u5b57\u7b26\u4ee3\u8868\u4e86\u4e00\u79cd\u4f60\u62e5\u6709\u7684\u77f3\u5934\u7684\u7c7b\u578b\uff0c\u4f60\u60f3\u77e5\u9053\u4f60\u62e5\u6709\u7684\u77f3\u5934\u4e2d\u6709\u591a\u5c11\u662f\u5b9d\u77f3\u3002 \u5b57\u6bcd\u533a\u5206\u5927\u5c0f\u5199\uff0c\u56e0\u6b64 \"a\" \u548c \"A\" \u662f\u4e0d\u540c\u7c7b\u578b\u7684\u77f3\u5934\u3002 \u89e3\u9898\u601d\u8def \u904d\u5386\u5b9d\u77f3\u7c7b\u578b \uff1a \u4e0d\u4f7f\u7528\u989d\u5916\u7684\u5bb9\u5668\uff0c\u76f4\u63a5\u904d\u5386\u5b57\u7b26\u4e32 stones \u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\uff0c\u5e76\u5728 jewels \u5b57\u7b26\u4e32\u4e2d\u67e5\u627e\u662f\u5426\u5b58\u5728\u8be5\u5b57\u7b26\u3002 \u7edf\u8ba1\u5b9d\u77f3\u6570\u91cf \uff1a \u5982\u679c\u5728 jewels \u4e2d\u627e\u5230\u5bf9\u5e94\u7684\u5b57\u7b26\uff0c\u8ba1\u6570\u5668 count \u589e\u52a0\u3002 \u53c2\u8003\u89e3\u7b54 #include <string> using namespace std; class Solution { public: int numJewelsInStones(string jewels, string stones) { int count = 0; // \u904d\u5386 stones \u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\uff0c\u68c0\u67e5\u662f\u5426\u5728 jewels \u4e2d for (char i : stones) { if (jewels.find(i) != string::npos) { // \u5982\u679c\u5728 jewels \u4e2d\u627e\u5230\u5bf9\u5e94\u7684\u5b57\u7b26 count += 1; } } return count; // \u8fd4\u56de\u5b9d\u77f3\u7684\u6570\u91cf } }; 4. \u8bfe\u540e\u7ec3\u4e60 \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC 187 \u91cd\u590d\u7684 DNA \u5e8f\u5217 \u627e\u5230\u6240\u6709\u51fa\u73b0\u6b21\u6570\u8d85\u8fc7\u4e00\u6b21\u7684 DNA \u5e8f\u5217\u3002 LC 961 N \u6b21\u91cd\u590d\u5143\u7d20\u5728 2N \u6570\u7ec4\u4e2d \u5728\u957f\u5ea6\u4e3a 2N \u7684\u6570\u7ec4\u4e2d\u627e\u5230\u51fa\u73b0 N \u6b21\u7684\u5143\u7d20\u3002 LC 2441 \u5b58\u5728\u5176\u8d1f\u6570\u7684\u6700\u5927\u6b63\u6574\u6570 \u627e\u5230\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u5176\u8d1f\u6570\u4e5f\u5728\u6570\u7ec4\u4e2d\u5b58\u5728\u3002 LC 2357 \u901a\u8fc7\u51cf\u53bb\u76f8\u540c\u6570\u4f7f\u6570\u7ec4\u4e3a\u96f6 \u901a\u8fc7\u51cf\u53bb\u76f8\u540c\u7684\u6570\u4f7f\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u5143\u7d20\u53d8\u4e3a\u96f6\u7684\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\u3002 LC 217 \u5b58\u5728\u91cd\u590d\u5143\u7d20 \u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4nums\uff0c\u5982\u679c\u4efb\u4e00\u503c\u5728\u6570\u7ec4\u4e2d\u51fa\u73b0\u81f3\u5c11\u4e24\u6b21\uff0c\u8fd4\u56detrue\uff0c\u5426\u5219false\u3002","title":"Lesson 10: \u96c6\u5408\u4e13\u9898"},{"location":"lesson10/Lesson10%20C%2B%2B/#lesson-10","text":"Unordered Set \u7684\u57fa\u672c\u6982\u5ff5 1.1 unordered_set \u7684\u7279\u6027 1.2 unordered_set \u7684\u5e94\u7528\u573a\u666f 1.3 \u5b8c\u6574\u5b9e\u4f8b \u4f8b\u9898\u8bb2\u89e3 2.1 LC349 \u4e24\u4e2a\u6570\u7ec4\u7684\u4ea4\u96c6 2.2 LC645 \u9519\u8bef\u7684\u96c6\u5408 \u4e3e\u4e00\u53cd\u4e09 3.1 LC575 \u5206\u7cd6\u679c 3.2 LC771 \u5b9d\u77f3\u4e0e\u77f3\u5934 \u8bfe\u540e\u7ec3\u4e60","title":"Lesson 10: \u96c6\u5408\u4e13\u9898"},{"location":"lesson10/Lesson10%20C%2B%2B/#1-unordered-set","text":"unordered_set \u662f C++ STL \u4e2d\u7684\u4e00\u4e2a\u5bb9\u5668\u7c7b\uff0c\u7528\u4e8e\u5b58\u50a8 \u65e0\u5e8f \u7684\u3001 \u4e0d\u91cd\u590d \u7684\u5143\u7d20\u3002 unordered_set \u4e0d\u5141\u8bb8\u5305\u542b\u91cd\u590d\u7684\u5143\u7d20\uff0c\u5982\u679c\u63d2\u5165\u76f8\u540c\u7684\u5143\u7d20\uff0c\u53ea\u4f1a\u4fdd\u7559\u4e00\u4e2a\u3002\u6b64\u5916\uff0c unordered_set \u4e0d\u4fdd\u8bc1\u5143\u7d20\u7684\u5b58\u50a8\u987a\u5e8f\u3002","title":"1. Unordered Set \u7684\u57fa\u672c\u6982\u5ff5"},{"location":"lesson10/Lesson10%20C%2B%2B/#11-unordered_set","text":"\u5143\u7d20\u552f\u4e00\u6027 \uff1a unordered_set \u4e0d\u5141\u8bb8\u91cd\u590d\u5143\u7d20\uff0c\u6bcf\u4e2a\u5143\u7d20\u5728\u96c6\u5408\u4e2d\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002 \u65e0\u5e8f \uff1a unordered_set \u4e0d\u4fdd\u8bc1\u5143\u7d20\u7684\u63d2\u5165\u987a\u5e8f\u3002 \u5e38\u7528\u65b9\u6cd5 \uff1a insert(const T& value) \uff1a\u5411\u96c6\u5408\u4e2d\u6dfb\u52a0\u5143\u7d20\uff0c\u5982\u679c\u5143\u7d20\u5df2\u7ecf\u5b58\u5728\uff0c\u5219\u4e0d\u4f1a\u63d2\u5165\u3002 erase(const T& value) \uff1a\u4ece\u96c6\u5408\u4e2d\u79fb\u9664\u6307\u5b9a\u7684\u5143\u7d20\u3002 find(const T& value) \uff1a\u67e5\u627e\u96c6\u5408\u4e2d\u662f\u5426\u5305\u542b\u67d0\u4e2a\u5143\u7d20\uff0c\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u5982\u679c\u627e\u4e0d\u5230\u5219\u8fd4\u56de end() \u3002 size() \uff1a\u8fd4\u56de\u96c6\u5408\u4e2d\u5143\u7d20\u7684\u6570\u91cf\u3002 empty() \uff1a\u5224\u65ad\u96c6\u5408\u662f\u5426\u4e3a\u7a7a\u3002 clear() \uff1a\u6e05\u7a7a\u96c6\u5408\u4e2d\u7684\u6240\u6709\u5143\u7d20\u3002","title":"1.1 unordered_set \u7684\u7279\u6027\uff1a"},{"location":"lesson10/Lesson10%20C%2B%2B/#12-unordered_set","text":"unordered_set \u57fa\u4e8e\u54c8\u5e0c\u8868\u5b9e\u73b0\uff0c\u63d0\u4f9b\u4e86\u63d2\u5165\u3001\u5220\u9664\u548c\u67e5\u627e\u64cd\u4f5c\uff0c\u9002\u7528\u4e8e\u4ee5\u4e0b\u573a\u666f\uff1a \u53bb\u91cd\u529f\u80fd \uff1a\u5f53\u9700\u8981\u5b58\u50a8\u4e0d\u91cd\u590d\u7684\u5143\u7d20\u65f6\uff0c unordered_set \u662f\u7406\u60f3\u7684\u9009\u62e9\u3002\u4f8b\u5982\uff0c\u7528\u4e8e\u5b58\u50a8\u552f\u4e00\u7684\u7528\u6237ID\u3001\u7528\u6237\u540d\u7b49\u3002 \u96c6\u5408\u64cd\u4f5c \uff1a unordered_set \u652f\u6301\u7ecf\u5178\u7684\u96c6\u5408\u64cd\u4f5c\uff0c\u5982\u4ea4\u96c6\u3001\u5e76\u96c6\u548c\u5dee\u96c6\uff0c\u80fd\u591f\u6709\u6548\u5904\u7406\u4e24\u4e2a\u96c6\u5408\u95f4\u7684\u8fd0\u7b97\u3002 \u4ea4\u96c6 \uff08\u4e24\u4e2a\u96c6\u5408\u5171\u6709\u7684\u5143\u7d20\uff09\uff1a ```cpp std::unordered_set set1 = {1, 2, 3}; std::unordered_set set2 = {2, 3, 4}; std::unordered_set intersection; for (int elem : set1) { if (set2.find(elem) != set2.end()) { intersection.insert(elem); } } // intersection \u73b0\u5728\u662f {2, 3} - **\u5e76\u96c6**\uff08\u4e24\u4e2a\u96c6\u5408\u7684\u6240\u6709\u5143\u7d20\uff09\uff1a cpp std::unordered_set union_set = set1; union_set.insert(set2.begin(), set2.end()); // union_set \u73b0\u5728\u662f {1, 2, 3, 4} - **\u5dee\u96c6**\uff08\u4ec5\u5b58\u5728\u4e8e\u7b2c\u4e00\u4e2a\u96c6\u5408\u7684\u5143\u7d20\uff09\uff1a cpp std::unordered_set difference; for (int elem : set1) { if (set2.find(elem) == set2.end()) { difference.insert(elem); } } // difference \u73b0\u5728\u662f {1} ```","title":"1.2 unordered_set \u7684\u5e94\u7528\u573a\u666f"},{"location":"lesson10/Lesson10%20C%2B%2B/#13","text":"\u4ee5\u4e0b\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u4f7f\u7528 unordered_set \u5b9e\u73b0\u96c6\u5408\u64cd\u4f5c\u7684 C++ \u793a\u4f8b\uff1a #include <iostream> #include <unordered_set> int main() { // \u521b\u5efa\u4e24\u4e2a\u96c6\u5408 std::unordered_set<int> set1 = {1, 2, 3}; std::unordered_set<int> set2 = {2, 3, 4}; // \u4ea4\u96c6 std::unordered_set<int> intersection; for (int elem : set1) { if (set2.find(elem) != set2.end()) { intersection.insert(elem); } } std::cout << \"Intersection (\u4ea4\u96c6): \"; for (int elem : intersection) std::cout << elem << \" \"; std::cout << std::endl; // \u5e76\u96c6 std::unordered_set<int> union_set = set1; union_set.insert(set2.begin(), set2.end()); std::cout << \"Union (\u5e76\u96c6): \"; for (int elem : union_set) std::cout << elem << \" \"; std::cout << std::endl; // \u5dee\u96c6 std::unordered_set<int> difference; for (int elem : set1) { if (set2.find(elem) == set2.end()) { difference.insert(elem); } } std::cout << \"Difference (\u5dee\u96c6): \"; for (int elem : difference) std::cout << elem << \" \"; std::cout << std::endl; return 0; }","title":"1.3 \u5b8c\u6574\u5b9e\u4f8b"},{"location":"lesson10/Lesson10%20C%2B%2B/#2","text":"","title":"2. \u4f8b\u9898\u8bb2\u89e3"},{"location":"lesson10/Lesson10%20C%2B%2B/#21-lc349","text":"","title":"2.1 LC349 \u4e24\u4e2a\u6570\u7ec4\u7684\u4ea4\u96c6"},{"location":"lesson10/Lesson10%20C%2B%2B/#_1","text":"\u7ed9\u5b9a\u4e24\u4e2a\u6570\u7ec4 nums1 \u548c nums2 \uff0c\u8fd4\u56de\u5b83\u4eec\u7684\u4ea4\u96c6\u3002\u8f93\u51fa\u7ed3\u679c\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u4e00\u5b9a\u662f\u552f\u4e00\u7684\uff0c\u53ef\u4ee5\u4e0d\u8003\u8651\u8f93\u51fa\u7ed3\u679c\u7684\u987a\u5e8f\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"lesson10/Lesson10%20C%2B%2B/#1","text":"","title":"\u89e3\u6cd51\uff1a\u904d\u5386\u6cd5"},{"location":"lesson10/Lesson10%20C%2B%2B/#_2","text":"\u904d\u5386 \uff1a \u4f7f\u7528\u4e24\u4e2a\u5d4c\u5957\u7684\u5faa\u73af\uff0c\u904d\u5386 nums2 \u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\uff0c\u5e76\u68c0\u67e5\u5b83\u662f\u5426\u5728 nums1 \u4e2d\u5b58\u5728\u3002 \u53bb\u91cd\u64cd\u4f5c \uff1a \u4f7f\u7528 find() \u51fd\u6570\u6765\u786e\u4fdd\u7ed3\u679c\u4e2d\u6ca1\u6709\u91cd\u590d\u7684\u5143\u7d20\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson10/Lesson10%20C%2B%2B/#_3","text":"class Solution { public: std::vector<int> intersection(std::vector<int>& nums1, std::vector<int>& nums2) { std::vector<int> result{}; for(int i = 0; i < nums2.size(); i++) { // \u904d\u5386 nums2 \u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20 for(int j = 0; j < nums1.size(); j++) { // \u5728 nums1 \u4e2d\u67e5\u627e\u8be5\u5143\u7d20 if(nums1[j] == nums2[i]) { // \u786e\u4fdd result \u4e2d\u6ca1\u6709\u91cd\u590d\u5143\u7d20 if(std::find(result.begin(), result.end(), nums2[i]) == result.end()) { result.push_back(nums2[i]); } break; // \u627e\u5230\u540e\u8df3\u51fa\u5185\u5c42\u5faa\u73af } } } return result; } };","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"lesson10/Lesson10%20C%2B%2B/#2-unordered_set","text":"","title":"\u89e3\u6cd52\uff1a\u904d\u5386 + unordered_set"},{"location":"lesson10/Lesson10%20C%2B%2B/#_4","text":"\u904d\u5386 \uff1a \u540c\u6837\u4f7f\u7528\u4e24\u4e2a\u5d4c\u5957\u7684\u5faa\u73af\uff0c\u904d\u5386 nums2 \u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\uff0c\u68c0\u67e5\u662f\u5426\u5b58\u5728\u4e8e nums1 \u4e2d\u3002 \u4f7f\u7528 unordered_set \u53bb\u91cd \uff1a \u4f7f\u7528 unordered_set \u5b58\u50a8\u7ed3\u679c\uff0c\u907f\u514d\u91cd\u590d\u7684\u5143\u7d20\u3002 \u5c06\u7ed3\u679c\u4ece unordered_set \u8f6c\u6362\u4e3a vector \uff1a \u6700\u540e\uff0c\u5c06 unordered_set \u4e2d\u7684\u5143\u7d20\u5b58\u5165 vector \u5e76\u8fd4\u56de\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson10/Lesson10%20C%2B%2B/#_5","text":"class Solution { public: std::vector<int> intersection(std::vector<int>& nums1, std::vector<int>& nums2) { std::unordered_set<int> result{}; for(int i = 0; i < nums2.size(); i++) { // \u904d\u5386 nums2 \u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20 for(int j = 0; j < nums1.size(); j++) { // \u5728 nums1 \u4e2d\u67e5\u627e\u8be5\u5143\u7d20 if(nums1[j] == nums2[i]) { result.insert(nums2[i]); // \u4f7f\u7528 unordered_set \u81ea\u52a8\u53bb\u91cd break; // \u627e\u5230\u540e\u8df3\u51fa\u5185\u5c42\u5faa\u73af } } } // \u5c06 unordered_set \u8f6c\u6362\u4e3a vector \u5e76\u8fd4\u56de std::vector<int> return_answer{}; for (auto it = result.begin(); it != result.end(); ++it) { return_answer.push_back(*it); } return return_answer; } };","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson10/Lesson10%20C%2B%2B/#22-lc645","text":"","title":"2.2 LC645 \u9519\u8bef\u7684\u96c6\u5408"},{"location":"lesson10/Lesson10%20C%2B%2B/#_6","text":"\u96c6\u5408 s \u5305\u542b\u4ece 1 \u5230 n \u7684\u6574\u6570\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u56e0\u4e3a\u6570\u636e\u9519\u8bef\uff0c\u5bfc\u81f4\u96c6\u5408\u91cc\u9762\u67d0\u4e00\u4e2a\u6570\u5b57\u590d\u5236\u4e86\u6210\u4e86\u96c6\u5408\u91cc\u9762\u7684\u53e6\u5916\u4e00\u4e2a\u6570\u5b57\u7684\u503c\uff0c\u5bfc\u81f4\u96c6\u5408\u4e22\u5931\u4e86\u4e00\u4e2a\u6570\u5b57\uff0c\u5e76\u4e14\u6709\u4e00\u4e2a\u6570\u5b57\u91cd\u590d \u3002 \u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4 nums \u4ee3\u8868\u4e86\u96c6\u5408 S \u53d1\u751f\u9519\u8bef\u540e\u7684\u7ed3\u679c\u3002 \u8bf7\u4f60\u627e\u51fa\u91cd\u590d\u51fa\u73b0\u7684\u6574\u6570\uff0c\u518d\u627e\u5230\u4e22\u5931\u7684\u6574\u6570\uff0c\u5c06\u5b83\u4eec\u4ee5\u6570\u7ec4\u7684\u5f62\u5f0f\u8fd4\u56de\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson10/Lesson10%20C%2B%2B/#_7","text":"\u4f7f\u7528 unordered_set \u5b58\u50a8\u51fa\u73b0\u7684\u6570\u5b57 \uff1a \u904d\u5386 nums \uff0c\u5c06\u6570\u5b57\u6dfb\u52a0\u5230 unordered_set \u4e2d\u3002\u7531\u4e8e unordered_set \u4e0d\u5141\u8bb8\u91cd\u590d\u5143\u7d20\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u63d2\u5165\u65f6\u68c0\u67e5\u662f\u5426\u6709\u91cd\u590d\u7684\u6570\u5b57\u3002 \u8ba1\u7b97\u4e22\u5931\u7684\u6570\u5b57 \uff1a \u901a\u8fc7\u6570\u5b66\u516c\u5f0f\u8ba1\u7b97\u4ece 1 \u5230 n \u7684\u603b\u548c\uff0c\u5e76\u51cf\u53bb unordered_set \u4e2d\u7684\u5143\u7d20\u548c\uff0c\u5373\u53ef\u5f97\u51fa\u4e22\u5931\u7684\u6570\u5b57\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a \u5c06\u627e\u5230\u7684\u91cd\u590d\u6570\u5b57\u548c\u4e22\u5931\u7684\u6570\u5b57\u4ee5\u6570\u7ec4\u5f62\u5f0f\u8fd4\u56de\u3002","title":"\u89e3\u9898\u601d\u8def"},{"location":"lesson10/Lesson10%20C%2B%2B/#_8","text":"class Solution { public: vector<int> findErrorNums(vector<int>& nums) { unordered_set<int> arrange{}; int repeat; // \u627e\u5230\u91cd\u590d\u7684\u6570\u5b57 for(int c : nums) { bool can_insert = arrange.insert(c).second; if (!can_insert) { repeat = c; } } // \u8ba1\u7b97 1 \u5230 n \u7684\u603b\u548c int expected_sum = (1 + nums.size()) * nums.size() / 2; // \u8ba1\u7b97\u5b9e\u9645\u96c6\u5408\u4e2d\u7684\u6570\u5b57\u548c int sum = 0; for(int c : arrange) { sum += c; } // \u8ba1\u7b97\u4e22\u5931\u7684\u6570\u5b57 int difference = expected_sum - sum; // \u8fd4\u56de\u7ed3\u679c vector<int> output{repeat, difference}; return output; } };","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson10/Lesson10%20C%2B%2B/#3","text":"","title":"3. \u4e3e\u4e00\u53cd\u4e09"},{"location":"lesson10/Lesson10%20C%2B%2B/#31-lc575","text":"","title":"3.1 LC575 \u5206\u7cd6\u679c"},{"location":"lesson10/Lesson10%20C%2B%2B/#_9","text":"Alice \u6709 n \u679a\u7cd6\uff0c\u5176\u4e2d\u7b2c i \u679a\u7cd6\u7684\u7c7b\u578b\u4e3a candyType[i] \u3002Alice \u6ce8\u610f\u5230\u5979\u7684\u4f53\u91cd\u6b63\u5728\u589e\u957f\uff0c\u6240\u4ee5\u524d\u53bb\u62dc\u8bbf\u4e86\u4e00\u4f4d\u533b\u751f\u3002 \u533b\u751f\u5efa\u8bae Alice \u8981\u5c11\u6444\u5165\u7cd6\u5206\uff0c\u53ea\u5403\u6389\u5979\u6240\u6709\u7cd6\u7684 n / 2 \u5373\u53ef\uff08n \u662f\u4e00\u4e2a\u5076\u6570\uff09\u3002Alice \u975e\u5e38\u559c\u6b22\u8fd9\u4e9b\u7cd6\uff0c\u5979\u60f3\u8981\u5728\u9075\u5faa\u533b\u751f\u5efa\u8bae\u7684\u60c5\u51b5\u4e0b\uff0c\u5c3d\u53ef\u80fd\u5403\u5230\u6700\u591a\u4e0d\u540c\u79cd\u7c7b\u7684\u7cd6\u3002 \u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u6574\u6570\u6570\u7ec4 candyType \u3002 \u8fd4\u56de\uff1a Alice \u5728\u4ec5\u5403\u6389 n / 2 \u679a\u7cd6\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u5403\u5230\u7cd6\u7684\u6700\u591a\u79cd\u7c7b\u6570\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson10/Lesson10%20C%2B%2B/#_10","text":"\u7edf\u8ba1\u7cd6\u679c\u7684\u79cd\u7c7b \uff1a \u4f7f\u7528 unordered_set \u6765\u5b58\u50a8\u7cd6\u679c\u7684\u4e0d\u540c\u79cd\u7c7b\u3002 unordered_set \u81ea\u52a8\u53bb\u9664\u91cd\u590d\u5143\u7d20\uff0c\u4ece\u800c\u53ef\u4ee5\u8bb0\u5f55\u4e0d\u540c\u7c7b\u578b\u7684\u7cd6\u679c\u3002 \u8ba1\u7b97\u53ef\u5403\u7684\u7cd6\u679c\u6570\u91cf \uff1a \u7531\u4e8e Alice \u53ea\u80fd\u5403\u6389 n / 2 \u679a\u7cd6\u679c\uff0c\u8ba1\u7b97\u7cd6\u679c\u7684\u4e0d\u540c\u79cd\u7c7b\u6570\u91cf\u4e0e n / 2 \u7684\u6700\u5c0f\u503c\uff0c\u5373 Alice \u6700\u591a\u80fd\u5403\u5230\u7684\u79cd\u7c7b\u6570\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a \u4f7f\u7528 min \u51fd\u6570\u8fd4\u56de unordered_set \u4e2d\u7cd6\u679c\u79cd\u7c7b\u7684\u6570\u91cf\u4e0e Alice \u80fd\u5403\u6389\u7cd6\u679c\u6570\u91cf\uff08 n / 2 \uff09\u7684\u8f83\u5c0f\u503c\u3002","title":"\u89e3\u9898\u601d\u8def"},{"location":"lesson10/Lesson10%20C%2B%2B/#_11","text":"#include <vector> #include <unordered_set> #include <algorithm> using namespace std; class Solution { public: int distributeCandies(vector<int>& candyType) { // \u4f7f\u7528 unordered_set \u6765\u5b58\u50a8\u7cd6\u679c\u7684\u79cd\u7c7b unordered_set<int> types{}; // \u5c06\u6240\u6709\u7cd6\u679c\u7c7b\u578b\u63d2\u5165 unordered_set\uff0c\u81ea\u52a8\u53bb\u91cd for (int c : candyType) { types.insert(c); } // \u8ba1\u7b97 Alice \u53ef\u4ee5\u5403\u7684\u6700\u591a\u79cd\u7c7b\u7684\u7cd6\u679c return min(types.size(), candyType.size() / 2); } };","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson10/Lesson10%20C%2B%2B/#_12","text":"\u5b58\u50a8\u7cd6\u679c\u79cd\u7c7b \uff1a\u901a\u8fc7\u904d\u5386 candyType \u6570\u7ec4\uff0c\u5c06\u6240\u6709\u7cd6\u679c\u7c7b\u578b\u5b58\u50a8\u5728 unordered_set \u4e2d\uff0c\u81ea\u52a8\u53bb\u9664\u91cd\u590d\u7684\u7cd6\u679c\u79cd\u7c7b\u3002 \u8ba1\u7b97\u80fd\u5403\u7684\u7cd6\u679c\u79cd\u7c7b \uff1a types.size() \u8868\u793a\u7cd6\u679c\u7684\u4e0d\u540c\u79cd\u7c7b\u6570\u3002 candyType.size() / 2 \u8868\u793a Alice \u6309\u7167\u533b\u751f\u5efa\u8bae\u53ef\u4ee5\u5403\u7684\u7cd6\u679c\u603b\u6570\u3002 \u53d6\u6700\u5c0f\u503c \uff1a\u6700\u7ec8\u8fd4\u56de min(types.size(), candyType.size() / 2) \uff0c\u8868\u793a Alice \u80fd\u591f\u5403\u5230\u7684\u6700\u591a\u4e0d\u540c\u79cd\u7c7b\u7684\u7cd6\u679c\u3002","title":"\u89e3\u91ca"},{"location":"lesson10/Lesson10%20C%2B%2B/#32-lc771","text":"","title":"3.2 LC771 \u5b9d\u77f3\u4e0e\u77f3\u5934"},{"location":"lesson10/Lesson10%20C%2B%2B/#_13","text":"\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 jewels \u4ee3\u8868\u77f3\u5934\u4e2d\u5b9d\u77f3\u7684\u7c7b\u578b\uff0c\u53e6\u6709\u4e00\u4e2a\u5b57\u7b26\u4e32 stones \u4ee3\u8868\u4f60\u62e5\u6709\u7684\u77f3\u5934\u3002 stones \u4e2d\u6bcf\u4e2a\u5b57\u7b26\u4ee3\u8868\u4e86\u4e00\u79cd\u4f60\u62e5\u6709\u7684\u77f3\u5934\u7684\u7c7b\u578b\uff0c\u4f60\u60f3\u77e5\u9053\u4f60\u62e5\u6709\u7684\u77f3\u5934\u4e2d\u6709\u591a\u5c11\u662f\u5b9d\u77f3\u3002 \u5b57\u6bcd\u533a\u5206\u5927\u5c0f\u5199\uff0c\u56e0\u6b64 \"a\" \u548c \"A\" \u662f\u4e0d\u540c\u7c7b\u578b\u7684\u77f3\u5934\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson10/Lesson10%20C%2B%2B/#_14","text":"\u904d\u5386\u5b9d\u77f3\u7c7b\u578b \uff1a \u4e0d\u4f7f\u7528\u989d\u5916\u7684\u5bb9\u5668\uff0c\u76f4\u63a5\u904d\u5386\u5b57\u7b26\u4e32 stones \u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\uff0c\u5e76\u5728 jewels \u5b57\u7b26\u4e32\u4e2d\u67e5\u627e\u662f\u5426\u5b58\u5728\u8be5\u5b57\u7b26\u3002 \u7edf\u8ba1\u5b9d\u77f3\u6570\u91cf \uff1a \u5982\u679c\u5728 jewels \u4e2d\u627e\u5230\u5bf9\u5e94\u7684\u5b57\u7b26\uff0c\u8ba1\u6570\u5668 count \u589e\u52a0\u3002","title":"\u89e3\u9898\u601d\u8def"},{"location":"lesson10/Lesson10%20C%2B%2B/#_15","text":"#include <string> using namespace std; class Solution { public: int numJewelsInStones(string jewels, string stones) { int count = 0; // \u904d\u5386 stones \u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\uff0c\u68c0\u67e5\u662f\u5426\u5728 jewels \u4e2d for (char i : stones) { if (jewels.find(i) != string::npos) { // \u5982\u679c\u5728 jewels \u4e2d\u627e\u5230\u5bf9\u5e94\u7684\u5b57\u7b26 count += 1; } } return count; // \u8fd4\u56de\u5b9d\u77f3\u7684\u6570\u91cf } };","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson10/Lesson10%20C%2B%2B/#4","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC 187 \u91cd\u590d\u7684 DNA \u5e8f\u5217 \u627e\u5230\u6240\u6709\u51fa\u73b0\u6b21\u6570\u8d85\u8fc7\u4e00\u6b21\u7684 DNA \u5e8f\u5217\u3002 LC 961 N \u6b21\u91cd\u590d\u5143\u7d20\u5728 2N \u6570\u7ec4\u4e2d \u5728\u957f\u5ea6\u4e3a 2N \u7684\u6570\u7ec4\u4e2d\u627e\u5230\u51fa\u73b0 N \u6b21\u7684\u5143\u7d20\u3002 LC 2441 \u5b58\u5728\u5176\u8d1f\u6570\u7684\u6700\u5927\u6b63\u6574\u6570 \u627e\u5230\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u5176\u8d1f\u6570\u4e5f\u5728\u6570\u7ec4\u4e2d\u5b58\u5728\u3002 LC 2357 \u901a\u8fc7\u51cf\u53bb\u76f8\u540c\u6570\u4f7f\u6570\u7ec4\u4e3a\u96f6 \u901a\u8fc7\u51cf\u53bb\u76f8\u540c\u7684\u6570\u4f7f\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u5143\u7d20\u53d8\u4e3a\u96f6\u7684\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\u3002 LC 217 \u5b58\u5728\u91cd\u590d\u5143\u7d20 \u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4nums\uff0c\u5982\u679c\u4efb\u4e00\u503c\u5728\u6570\u7ec4\u4e2d\u51fa\u73b0\u81f3\u5c11\u4e24\u6b21\uff0c\u8fd4\u56detrue\uff0c\u5426\u5219false\u3002","title":"4. \u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson10/Lesson10%20Java/","text":"Lesson10 \u96c6\u5408\u4e13\u9898 \u76ee\u5f55 \u96c6\u5408\u7684\u57fa\u672c\u6982\u5ff5 1.1 Set \u63a5\u53e3\u7684\u7279\u6027 1.2 Set \u7684\u79cd\u7c7b 1.3 Set \u7684\u5e94\u7528\u573a\u666f 1.4 \u5b8c\u6574\u5b9e\u4f8b \u4f8b\u9898\u8bb2\u89e3 2.1 LC349 \u4e24\u4e2a\u6570\u7ec4\u7684\u4ea4\u96c6 2.2 LC645 \u9519\u8bef\u7684\u96c6\u5408 \u4e3e\u4e00\u53cd\u4e09 3.1 LC575 \u5206\u7cd6\u679c 3.2 LC771 \u5b9d\u77f3\u4e0e\u77f3\u5934 \u8bfe\u540e\u7ec3\u4e60 1. \u96c6\u5408\u7684\u57fa\u672c\u6982\u5ff5 Set \u662f Java \u96c6\u5408\u6846\u67b6\u4e2d\u7684\u4e00\u4e2a\u91cd\u8981\u63a5\u53e3\uff0c\u5b83\u7528\u4e8e\u5b58\u50a8 \u65e0\u5e8f \u7684\u3001 \u4e0d\u91cd\u590d \u7684\u5143\u7d20\u3002 Set \u4e0d\u5141\u8bb8\u5305\u542b\u91cd\u590d\u7684\u5143\u7d20\uff0c\u5373\u4f7f\u63d2\u5165\u76f8\u540c\u7684\u5143\u7d20\uff0c\u4e5f\u53ea\u4f1a\u4fdd\u7559\u4e00\u4e2a\u3002\u6b64\u5916\uff0c Set \u5e76\u4e0d\u4fdd\u8bc1\u5143\u7d20\u7684\u5b58\u50a8\u987a\u5e8f\u3002 1.1 Set \u63a5\u53e3\u7684\u7279\u6027\uff1a \u5143\u7d20\u552f\u4e00\u6027 \uff1a Set \u4e0d\u5141\u8bb8\u91cd\u590d\u5143\u7d20\uff0c\u8fd9\u610f\u5473\u7740\u6bcf\u4e2a\u5143\u7d20\u5728\u96c6\u5408\u4e2d\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002 \u65e0\u5e8f \uff1a Set \u4e0d\u4fdd\u8bc1\u5143\u7d20\u7684\u63d2\u5165\u987a\u5e8f\uff08\u4f46\u67d0\u4e9b\u5b9e\u73b0\uff0c\u5982 LinkedHashSet \u53ef\u4ee5\u7ef4\u62a4\u63d2\u5165\u987a\u5e8f\uff09\u3002 \u5e38\u7528\u65b9\u6cd5 \uff1a add(E e) \uff1a\u5411\u96c6\u5408\u4e2d\u6dfb\u52a0\u5143\u7d20\uff0c\u5982\u679c\u5143\u7d20\u5df2\u7ecf\u5b58\u5728\uff0c\u5219\u4e0d\u4f1a\u6dfb\u52a0\u5e76\u8fd4\u56de false \u3002 remove(Object o) \uff1a\u4ece\u96c6\u5408\u4e2d\u79fb\u9664\u6307\u5b9a\u7684\u5143\u7d20\u3002 contains(Object o) \uff1a\u68c0\u67e5\u96c6\u5408\u662f\u5426\u5305\u542b\u67d0\u4e2a\u5143\u7d20\u3002 size() \uff1a\u8fd4\u56de\u96c6\u5408\u4e2d\u5143\u7d20\u7684\u6570\u91cf\u3002 isEmpty() \uff1a\u5224\u65ad\u96c6\u5408\u662f\u5426\u4e3a\u7a7a\u3002 clear() \uff1a\u6e05\u7a7a\u96c6\u5408\u3002 1.2 Set \u7684\u79cd\u7c7b Java \u63d0\u4f9b\u4e86\u51e0\u79cd\u5e38\u89c1\u7684 Set \u5b9e\u73b0\u7c7b\uff0c\u5305\u62ec HashSet \uff0c LinkedHashSet \uff0c TreeSet \u7b49\uff0c\u672c\u7ae0\u8282\u4ec5\u5bf9\u6700\u5e38\u89c1\u7684 HashSet \u8fdb\u884c\u4ecb\u7ecd HashSet HashSet \u662f\u6700\u5e38\u7528\u7684 Set \u5b9e\u73b0\uff0c\u5b83\u57fa\u4e8e\u54c8\u5e0c\u8868\u6765\u5b58\u50a8\u5143\u7d20\uff0c\u56e0\u800c\u5177\u6709\u5f88\u597d\u7684\u6027\u80fd\u3002 \u5143\u7d20\u65e0\u5e8f\uff0c\u4e0d\u4fdd\u8bc1\u63d2\u5165\u987a\u5e8f\u3002 \u5141\u8bb8\u5b58\u50a8 null \u5143\u7d20\u3002 \u4f7f\u7528\u793a\u4f8b\uff1a import java.util.HashSet; import java.util.Set; public class HashSetExample { public static void main(String[] args) { Set<String> set = new HashSet<>(); set.add(\"Java\"); set.add(\"Python\"); set.add(\"Java\"); // \u91cd\u590d\u5143\u7d20\u4e0d\u4f1a\u88ab\u6dfb\u52a0 // \u904d\u5386\u5e76\u8f93\u51fa\u96c6\u5408\u4e2d\u7684\u5143\u7d20 for (String lang : set) { System.out.println(lang); } // \u5224\u65ad\u96c6\u5408\u4e2d\u662f\u5426\u5305\u542b\u67d0\u4e2a\u5143\u7d20 if (set.contains(\"Java\")) { System.out.println(\"Set contains Java\"); } // \u79fb\u9664\u5143\u7d20 set.remove(\"Python\"); System.out.println(\"After removing Python: \" + set); // \u8f93\u51fa\u96c6\u5408\u5927\u5c0f System.out.println(\"Set size: \" + set.size()); } } 1.3 Set \u7684\u5e94\u7528\u573a\u666f \u53bb\u91cd\u529f\u80fd \uff1a\u5f53\u9700\u8981\u5b58\u50a8\u4e0d\u91cd\u590d\u7684\u5143\u7d20\u65f6\uff0c Set \u662f\u7406\u60f3\u7684\u9009\u62e9\u3002\u4f8b\u5982\uff0c\u5728\u4e00\u4e2a\u7cfb\u7edf\u4e2d\u53bb\u9664\u91cd\u590d\u7684\u7528\u6237\u540d\u3002 \u96c6\u5408\u64cd\u4f5c \uff1a Set \u5177\u6709\u5f88\u5f3a\u7684\u96c6\u5408\u64cd\u4f5c\u80fd\u529b\uff0c\u5982\u6c42\u4ea4\u96c6\u3001\u5e76\u96c6\u548c\u5dee\u96c6\uff0c\u53ef\u4ee5\u901a\u8fc7 retainAll() \u3001 addAll() \u3001 removeAll() \u7b49\u65b9\u6cd5\u6765\u5b9e\u73b0\u3002 \u4ea4\u96c6 \uff08\u4e24\u4e2a\u96c6\u5408\u5171\u6709\u7684\u5143\u7d20\uff09\uff1a java Set<String> set1 = new HashSet<>(Arrays.asList(\"A\", \"B\", \"C\")); Set<String> set2 = new HashSet<>(Arrays.asList(\"B\", \"C\", \"D\")); set1.retainAll(set2); // set1 \u73b0\u5728\u662f [\"B\", \"C\"] \u5e76\u96c6 \uff08\u4e24\u4e2a\u96c6\u5408\u7684\u6240\u6709\u5143\u7d20\uff09\uff1a java set1.addAll(set2); // set1 \u73b0\u5728\u662f [\"A\", \"B\", \"C\", \"D\"] \u5dee\u96c6 \uff08\u4ec5\u5b58\u5728\u4e8e\u7b2c\u4e00\u4e2a\u96c6\u5408\u7684\u5143\u7d20\uff09\uff1a java set1.removeAll(set2); // set1 \u73b0\u5728\u662f [\"A\"] 1.4 \u5b8c\u6574\u5b9e\u4f8b import java.util.HashSet; import java.util.Set; public class SetOperationsExample { public static void main(String[] args) { // \u521b\u5efa\u4e24\u4e2a\u96c6\u5408 Set<String> set1 = new HashSet<>(); set1.add(\"A\"); set1.add(\"B\"); set1.add(\"C\"); Set<String> set2 = new HashSet<>(); set2.add(\"B\"); set2.add(\"C\"); set2.add(\"D\"); // \u4ea4\u96c6\uff08\u4fdd\u7559\u4e24\u4e2a\u96c6\u5408\u5171\u6709\u7684\u5143\u7d20\uff09 Set<String> intersection = new HashSet<>(set1); intersection.retainAll(set2); System.out.println(\"Intersection (\u4ea4\u96c6): \" + intersection); // \u8f93\u51fa\uff1a[B, C] // \u5e76\u96c6\uff08\u4e24\u4e2a\u96c6\u5408\u6240\u6709\u5143\u7d20\u7684\u7ec4\u5408\uff09 Set<String> union = new HashSet<>(set1); union.addAll(set2); System.out.println(\"Union (\u5e76\u96c6): \" + union); // \u8f93\u51fa\uff1a[A, B, C, D] // \u5dee\u96c6\uff08\u53ea\u5b58\u5728\u4e8e set1 \u4e2d\u7684\u5143\u7d20\uff09 Set<String> difference = new HashSet<>(set1); difference.removeAll(set2); System.out.println(\"Difference (\u5dee\u96c6): \" + difference); // \u8f93\u51fa\uff1a[A] } } 2. \u4f8b\u9898\u8bb2\u89e3 2.1 LC349 \u4e24\u4e2a\u6570\u7ec4\u7684\u4ea4\u96c6 \u9898\u76ee\u63cf\u8ff0 \u7ed9\u5b9a\u4e24\u4e2a\u6570\u7ec4 nums1 \u548c nums2 \uff0c\u8fd4\u56de\u5b83\u4eec\u7684 \u4ea4\u96c6 \u3002 \u8f93\u51fa\u7ed3\u679c\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u4e00\u5b9a\u662f\u552f\u4e00\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u4e0d\u8003\u8651\u8f93\u51fa\u7ed3\u679c\u7684\u987a\u5e8f \u3002 \u89e3\u6cd51 \u601d\u8def\u5206\u6790\uff1a \u4f7f\u7528\u4e24\u4e2a Set \u5b58\u50a8\u6570\u7ec4\u7684\u552f\u4e00\u5143\u7d20 \uff1a \u5c06 nums1 \u548c nums2 \u4e2d\u7684\u5143\u7d20\u5206\u522b\u653e\u5165\u4e24\u4e2a HashSet \uff0c\u4ee5\u53bb\u91cd\u5e76\u5b58\u50a8\u552f\u4e00\u7684\u5143\u7d20\u3002 \u6bd4\u8f83 Set \u7684\u5927\u5c0f \uff1a \u5728 intersection \u65b9\u6cd5\u4e2d\uff0c\u901a\u8fc7\u6bd4\u8f83 set1 \u548c set2 \u7684\u5927\u5c0f\uff0c\u9009\u62e9\u8f83\u5c0f\u7684\u96c6\u5408\u8fdb\u884c\u904d\u5386\u3002\u8fd9\u6837\u505a\u7684\u539f\u56e0\u662f\u8f83\u5c0f\u7684\u96c6\u5408\u4e2d\u5143\u7d20\u8f83\u5c11\uff0c\u56e0\u6b64\u80fd\u51cf\u5c11\u904d\u5386\u548c\u67e5\u627e\u7684\u6b21\u6570\uff0c\u63d0\u9ad8\u6548\u7387\u3002 \u904d\u5386\u8f83\u5c0f\u7684\u96c6\u5408 \uff1a \u4f7f\u7528 getIntersection \u65b9\u6cd5\u65f6\uff0c\u8f83\u5c0f\u7684\u96c6\u5408 smallerSet \u88ab\u904d\u5386\uff0c\u5e76\u68c0\u67e5\u5176\u4e2d\u7684\u5143\u7d20\u662f\u5426\u5b58\u5728\u4e8e\u8f83\u5927\u7684\u96c6\u5408 largerSet \u4e2d\u3002\u5982\u679c\u5b58\u5728\uff0c\u5219\u5c06\u8be5\u5143\u7d20\u52a0\u5165\u4ea4\u96c6\u96c6\u5408 intersectionSet \u3002 \u5c06\u4ea4\u96c6\u96c6\u5408\u8f6c\u6362\u4e3a\u6570\u7ec4 \uff1a \u5c06 intersectionSet \u4e2d\u7684\u4ea4\u96c6\u5143\u7d20\u5b58\u5165\u6570\u7ec4\uff0c\u6700\u7ec8\u8fd4\u56de\u8fd9\u4e2a\u6570\u7ec4\u3002 \u53c2\u8003\u89e3\u7b54 import java.util.HashSet; import java.util.Set; public class ArrayIntersection { public int[] intersection(int[] nums1, int[] nums2) { // \u5c06\u7b2c\u4e00\u4e2a\u6570\u7ec4\u7684\u5143\u7d20\u653e\u5165 Set \u4e2d Set<Integer> set1 = new HashSet<>(); for (int num : nums1) { set1.add(num); } // \u5c06\u7b2c\u4e8c\u4e2a\u6570\u7ec4\u7684\u5143\u7d20\u653e\u5165 Set \u4e2d Set<Integer> set2 = new HashSet<>(); for (int num : nums2) { set2.add(num); } // \u76f4\u63a5\u6839\u636e\u5927\u5c0f\u5224\u65ad\uff0c\u904d\u5386\u8f83\u5c0f\u7684\u96c6\u5408 if (set1.size() > set2.size()) { return getIntersection(set2, set1); } else { return getIntersection(set1, set2); } } public int[] getIntersection(Set<Integer> smallerSet, Set<Integer> largerSet) { // \u521b\u5efa\u4e00\u4e2a Set \u7528\u4e8e\u5b58\u50a8\u4ea4\u96c6 Set<Integer> intersectionSet = new HashSet<>(); for (int num : smallerSet) { if (largerSet.contains(num)) { intersectionSet.add(num); } } // \u5c06\u4ea4\u96c6\u96c6\u5408\u8f6c\u6362\u4e3a\u6570\u7ec4\u5e76\u8fd4\u56de int[] intersection = new int[intersectionSet.size()]; int index = 0; for (int num : intersectionSet) { intersection[index++] = num; } return intersection; } } \u89e3\u6cd52 \u89e3\u9898\u601d\u8def\uff1a \u5c06\u4e24\u4e2a\u6570\u7ec4\u5206\u522b\u8f6c\u6362\u4e3a HashSet \uff0c\u56e0\u4e3a Set \u80fd\u53bb\u9664\u91cd\u590d\u7684\u5143\u7d20\uff0c\u5e76\u4e14\u53ef\u4ee5\u65b9\u4fbf\u5730\u8fdb\u884c\u96c6\u5408\u8fd0\u7b97\u3002 \u4f7f\u7528 retainAll() \u65b9\u6cd5\u6765\u83b7\u53d6\u4e24\u4e2a\u96c6\u5408\u7684\u4ea4\u96c6\u3002 \u5c06\u4ea4\u96c6\u7ed3\u679c\u8f6c\u6362\u4e3a\u6570\u7ec4\u5e76\u8fd4\u56de\u3002 \u53c2\u8003\u89e3\u7b54 import java.util.HashSet; import java.util.Set; public class ArrayIntersection { public int[] intersection(int[] nums1, int[] nums2) { // \u5c06\u4e24\u4e2a\u6570\u7ec4\u8f6c\u6362\u4e3a Set Set<Integer> set1 = new HashSet<>(); for (int num : nums1) { set1.add(num); } Set<Integer> set2 = new HashSet<>(); for (int num : nums2) { set2.add(num); } // \u4f7f\u7528 retainAll() \u4fdd\u7559\u4ea4\u96c6 set1.retainAll(set2); // \u5c06\u4ea4\u96c6\u8f6c\u6362\u4e3a\u6570\u7ec4\u5e76\u8fd4\u56de int[] result = new int[set1.size()]; int index = 0; for (int num : set1) { result[index++] = num; } return result; } } 2.2 LC645 \u9519\u8bef\u7684\u96c6\u5408 \u95ee\u9898\u63cf\u8ff0 \u96c6\u5408 s \u5305\u542b\u4ece 1 \u5230 n \u7684\u6574\u6570\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u56e0\u4e3a\u6570\u636e\u9519\u8bef\uff0c\u5bfc\u81f4\u96c6\u5408\u91cc\u9762\u67d0\u4e00\u4e2a\u6570\u5b57\u590d\u5236\u4e86\u6210\u4e86\u96c6\u5408\u91cc\u9762\u7684\u53e6\u5916\u4e00\u4e2a\u6570\u5b57\u7684\u503c\uff0c\u5bfc\u81f4\u96c6\u5408\u4e22\u5931\u4e86\u4e00\u4e2a\u6570\u5b57\uff0c\u5e76\u4e14\u6709\u4e00\u4e2a\u6570\u5b57\u91cd\u590d \u3002 \u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4 nums \u4ee3\u8868\u4e86\u96c6\u5408 S \u53d1\u751f\u9519\u8bef\u540e\u7684\u7ed3\u679c\u3002 \u8bf7\u4f60\u627e\u51fa\u91cd\u590d\u51fa\u73b0\u7684\u6574\u6570\uff0c\u518d\u627e\u5230\u4e22\u5931\u7684\u6574\u6570\uff0c\u5c06\u5b83\u4eec\u4ee5\u6570\u7ec4\u7684\u5f62\u5f0f\u8fd4\u56de\u3002 \u89e3\u9898\u601d\u8def\uff1a \u4f7f\u7528 HashSet \u5b58\u50a8\u51fa\u73b0\u7684\u6570\u5b57 \uff1a \u904d\u5386\u6570\u7ec4 nums \uff0c\u5c06\u6240\u6709\u6570\u5b57\u6dfb\u52a0\u5230\u4e00\u4e2a HashSet \u4e2d\u3002\u7531\u4e8e HashSet \u4e0d\u5141\u8bb8\u91cd\u590d\u7684\u5143\u7d20\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6dfb\u52a0\u65f6\u68c0\u67e5\u662f\u5426\u5df2\u7ecf\u5b58\u5728\u8be5\u6570\u5b57\uff0c\u4ece\u800c\u627e\u5230\u91cd\u590d\u7684\u6570\u5b57\u3002 \u68c0\u67e5\u6570\u5b57\u8303\u56f4 \uff1a \u7531\u4e8e\u96c6\u5408\u5e94\u5305\u542b\u4ece 1 \u5230 n \u7684\u6240\u6709\u6570\u5b57\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u904d\u5386\u4ece 1 \u5230 n \u7684\u6bcf\u4e00\u4e2a\u6570\u5b57\uff0c\u68c0\u67e5\u8fd9\u4e9b\u6570\u5b57\u662f\u5426\u5b58\u5728\u4e8e HashSet \u4e2d\u3002\u82e5\u67d0\u4e2a\u6570\u5b57\u4e0d\u5728 HashSet \u4e2d\uff0c\u5219\u8be5\u6570\u5b57\u662f\u4e22\u5931\u7684\u6570\u5b57\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a \u5c06\u627e\u5230\u7684\u91cd\u590d\u6570\u5b57\u548c\u4e22\u5931\u6570\u5b57\u4ee5\u6570\u7ec4\u7684\u5f62\u5f0f\u8fd4\u56de\u3002 \u53c2\u8003\u89e3\u7b54 import java.util.HashSet; public class Solution { public int[] findErrorNums(int[] nums) { HashSet<Integer> set = new HashSet<>(); int duplicate = -1; int n = nums.length; // \u67e5\u627e\u91cd\u590d\u7684\u6570\u5b57\u5e76\u5c06\u6240\u6709\u6570\u5b57\u6dfb\u52a0\u5230 HashSet for (int num : nums) { if (!set.add(num)) { // add() \u8fd4\u56de false \u8868\u793a\u5df2\u7ecf\u5b58\u5728 duplicate = num; // \u627e\u5230\u91cd\u590d\u7684\u6570\u5b57 } } int missing = -1; // \u67e5\u627e\u4e22\u5931\u7684\u6570\u5b57 for (int i = 1; i <= n; i++) { if (!set.contains(i)) { // \u5982\u679c HashSet \u4e2d\u4e0d\u5305\u542b\u6570\u5b57 i missing = i; // \u8bb0\u5f55\u4e22\u5931\u7684\u6570\u5b57 break; // \u627e\u5230\u540e\u76f4\u63a5\u9000\u51fa\u5faa\u73af } } return new int[] {duplicate, missing}; } } 3. \u4e3e\u4e00\u53cd\u4e09 3.1 LC575 \u5206\u7cd6\u679c \u95ee\u9898\u63cf\u8ff0 Alice \u6709 n \u679a\u7cd6\uff0c\u5176\u4e2d\u7b2c i \u679a\u7cd6\u7684\u7c7b\u578b\u4e3a candyType[i] \u3002Alice \u6ce8\u610f\u5230\u5979\u7684\u4f53\u91cd\u6b63\u5728\u589e\u957f\uff0c\u6240\u4ee5\u524d\u53bb\u62dc\u8bbf\u4e86\u4e00\u4f4d\u533b\u751f\u3002 \u533b\u751f\u5efa\u8bae Alice \u8981\u5c11\u6444\u5165\u7cd6\u5206\uff0c\u53ea\u5403\u6389\u5979\u6240\u6709\u7cd6\u7684 n / 2 \u5373\u53ef\uff08n \u662f\u4e00\u4e2a\u5076\u6570\uff09\u3002Alice \u975e\u5e38\u559c\u6b22\u8fd9\u4e9b\u7cd6\uff0c\u5979\u60f3\u8981\u5728\u9075\u5faa\u533b\u751f\u5efa\u8bae\u7684\u60c5\u51b5\u4e0b\uff0c\u5c3d\u53ef\u80fd\u5403\u5230\u6700\u591a\u4e0d\u540c\u79cd\u7c7b\u7684\u7cd6\u3002 \u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u6574\u6570\u6570\u7ec4 candyType \u3002 \u8fd4\u56de\uff1a Alice \u5728\u4ec5\u5403\u6389 n / 2 \u679a\u7cd6\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u5403\u5230\u7cd6\u7684\u6700\u591a\u79cd\u7c7b\u6570\u3002 \u89e3\u9898\u601d\u8def \u7edf\u8ba1\u7cd6\u7684\u79cd\u7c7b \uff1a\u4f7f\u7528\u4e00\u4e2a HashSet \u6765\u5b58\u50a8\u4e0d\u540c\u7c7b\u578b\u7684\u7cd6\uff0c\u8fd9\u6837\u53ef\u4ee5\u81ea\u52a8\u53bb\u9664\u91cd\u590d\u7684\u7cd6\u7c7b\u578b\u3002 \u8ba1\u7b97\u80fd\u5403\u7684\u7cd6\u7684\u6570\u91cf \uff1a\u7531\u4e8e Alice \u53ea\u80fd\u5403\u6389 ( n / 2 ) \u679a\u7cd6\uff0c\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u4e0d\u540c\u7c7b\u578b\u7684\u7cd6\u7684\u6570\u91cf\u4e0e ( n / 2 ) \u7684\u6700\u5c0f\u503c\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u8fd4\u56de\u80fd\u5403\u5230\u7684\u6700\u591a\u79cd\u7c7b\u7684\u7cd6\u3002 \u53c2\u8003\u89e3\u7b54 import java.util.HashSet; public class Solution { public int distributeCandies(int[] candyType) { // \u4f7f\u7528 HashSet \u6765\u5b58\u50a8\u4e0d\u540c\u7684\u7cd6\u7684\u79cd\u7c7b HashSet<Integer> uniqueCandyTypes = new HashSet<>(); // \u5c06\u6240\u6709\u7cd6\u7684\u7c7b\u578b\u6dfb\u52a0\u5230 HashSet for (int candy : candyType) { uniqueCandyTypes.add(candy); } // \u8ba1\u7b97 Alice \u80fd\u5403\u7684\u7cd6\u7684\u6570\u91cf int n = candyType.length; int maxTypes = uniqueCandyTypes.size(); // \u4e0d\u540c\u7cd6\u7684\u79cd\u7c7b\u6570 int canEatCount = n / 2; // Alice \u80fd\u5403\u7684\u7cd6\u7684\u6570\u91cf // \u8fd4\u56de\u6700\u591a\u53ef\u4ee5\u5403\u5230\u7684\u79cd\u7c7b\u6570 return Math.min(maxTypes, canEatCount); } } \u903b\u8f91\u63a8\u7406 \u79cd\u7c7b\u6570 vs \u53ef\u5403\u6570\u91cf \uff1a \u79cd\u7c7b\u6570 ( maxTypes ) \uff1a\u8fd9\u662f Alice \u53ef\u4ee5\u9009\u62e9\u7684\u4e0d\u540c\u7cd6\u7684\u7c7b\u578b\u6570\u91cf\u3002\u5982\u679c maxTypes \u5c0f\u4e8e canEatCount \uff0c\u8fd9\u610f\u5473\u7740 Alice \u53ef\u4ee5\u5403\u6389\u66f4\u591a\u7684\u7cd6\uff0c\u4f46\u56e0\u4e3a\u4e0d\u540c\u79cd\u7c7b\u7684\u7cd6\u4e0d\u8db3\uff0c\u6240\u4ee5\u5979\u7684\u9009\u62e9\u53d7\u5230\u9650\u5236\u3002 \u53ef\u5403\u6570\u91cf ( canEatCount ) \uff1a\u8fd9\u662f Alice \u4f9d\u636e\u533b\u751f\u5efa\u8bae\u6240\u80fd\u5403\u6389\u7684\u7cd6\u7684\u6570\u91cf\u3002\u5982\u679c canEatCount \u5c0f\u4e8e maxTypes \uff0c\u8fd9\u610f\u5473\u7740\u867d\u7136 Alice \u62e5\u6709\u8db3\u591f\u591a\u7684\u7cd6\u79cd\u7c7b\uff0c\u4f46\u5979\u53ea\u80fd\u9009\u62e9\u4e00\u90e8\u5206\uff0c\u56e0\u4e3a\u5979\u4e0d\u80fd\u5403\u6389\u8d85\u8fc7\u5979\u7684\u914d\u989d\u3002 \u4e3a\u4ec0\u4e48\u53d6\u6700\u5c0f\u503c \u4f7f\u7528 Math.min(maxTypes, canEatCount) \u8ba1\u7b97\u6700\u7ec8\u7ed3\u679c\uff0c\u786e\u4fdd Alice \u5728\u5403\u7cd6\u7684\u6570\u91cf\u548c\u7cd6\u7684\u79cd\u7c7b\u4e4b\u95f4\u505a\u51fa\u5408\u7406\u7684\u9009\u62e9\u3002\u5177\u4f53\u6765\u8bf4\uff1a \u5982\u679c maxTypes \u5927\u4e8e canEatCount \uff0c\u5219 Alice \u53ea\u80fd\u5403\u6389 canEatCount \u7684\u7cd6\u3002\u5979\u867d\u7136\u6709\u66f4\u591a\u79cd\u7c7b\u53ef\u9009\uff0c\u4f46\u53ea\u80fd\u9009\u62e9\u5176\u4e2d\u7684 ( n/2 ) \u4e2a\u3002 \u5982\u679c maxTypes \u5c0f\u4e8e canEatCount \uff0c\u5219 Alice \u53ef\u4ee5\u9009\u62e9\u6240\u6709\u7684\u4e0d\u540c\u79cd\u7c7b\u7684\u7cd6\uff0c\u800c\u4e0d\u5fc5\u62c5\u5fc3\u6570\u91cf\u9650\u5236\uff0c\u56e0\u4e3a\u5979\u53ea\u60f3\u5403\u4e0d\u540c\u7684\u7cd6\u3002 3.2 LC771 \u5b9d\u77f3\u4e0e\u77f3\u5934 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 jewels \u4ee3\u8868\u77f3\u5934\u4e2d\u5b9d\u77f3\u7684\u7c7b\u578b\uff0c\u53e6\u6709\u4e00\u4e2a\u5b57\u7b26\u4e32 stones \u4ee3\u8868\u4f60\u62e5\u6709\u7684\u77f3\u5934\u3002 stones \u4e2d\u6bcf\u4e2a\u5b57\u7b26\u4ee3\u8868\u4e86\u4e00\u79cd\u4f60\u62e5\u6709\u7684\u77f3\u5934\u7684\u7c7b\u578b\uff0c\u4f60\u60f3\u77e5\u9053\u4f60\u62e5\u6709\u7684\u77f3\u5934\u4e2d\u6709\u591a\u5c11\u662f\u5b9d\u77f3\u3002 \u5b57\u6bcd\u533a\u5206\u5927\u5c0f\u5199\uff0c\u56e0\u6b64 \"a\" \u548c \"A\" \u662f\u4e0d\u540c\u7c7b\u578b\u7684\u77f3\u5934\u3002 \u89e3\u9898\u601d\u8def\uff1a \u6dfb\u52a0\u5b9d\u77f3\u5b57\u7b26 \uff1a \u4f7f\u7528 for \u5faa\u73af\u904d\u5386 jewels \u5b57\u7b26\u4e32\uff0c\u5c06\u6bcf\u4e2a\u5b57\u7b26\u6dfb\u52a0\u5230 HashSet \u4e2d\u3002 \u8ba1\u7b97\u5b9d\u77f3\u6570\u91cf \uff1a \u521d\u59cb\u5316\u8ba1\u6570\u5668 count \u4e3a 0\uff0c\u7136\u540e\u904d\u5386 stones \u5b57\u7b26\u4e32\uff0c\u68c0\u67e5\u6bcf\u4e2a\u5b57\u7b26\u662f\u5426\u5728 jewelSet \u4e2d\u3002 \u5982\u679c\u5b58\u5728\uff0c\u5c06\u8ba1\u6570\u5668\u52a0\u4e00\u3002 \u53c2\u8003\u89e3\u7b54 import java.util.HashSet; public class Solution { public int numJewelsInStones(String jewels, String stones) { // \u521b\u5efa\u4e00\u4e2a HashSet \u6765\u5b58\u50a8\u5b9d\u77f3\u7684\u7c7b\u578b HashSet<Character> jewelSet = new HashSet<>(); // \u5c06 jewels \u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u6dfb\u52a0\u5230 HashSet \u4e2d for (char jewel : jewels.toCharArray()) { jewelSet.add(jewel); } // \u521d\u59cb\u5316\u8ba1\u6570\u5668 int count = 0; // \u904d\u5386 stones\uff0c\u8ba1\u7b97\u5b9d\u77f3\u7684\u6570\u91cf for (char stone : stones.toCharArray()) { if (jewelSet.contains(stone)) { count++; // \u5982\u679c stone \u662f\u5b9d\u77f3\uff0c\u8ba1\u6570\u52a0\u4e00 } } return count; // \u8fd4\u56de\u5b9d\u77f3\u7684\u6570\u91cf } } 4. \u8bfe\u540e\u7ec3\u4e60 \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC 187 \u91cd\u590d\u7684 DNA \u5e8f\u5217 \u627e\u5230\u6240\u6709\u51fa\u73b0\u6b21\u6570\u8d85\u8fc7\u4e00\u6b21\u7684 DNA \u5e8f\u5217\u3002 LC 961 N \u6b21\u91cd\u590d\u5143\u7d20\u5728 2N \u6570\u7ec4\u4e2d \u5728\u957f\u5ea6\u4e3a 2N \u7684\u6570\u7ec4\u4e2d\u627e\u5230\u51fa\u73b0 N \u6b21\u7684\u5143\u7d20\u3002 LC 2441 \u5b58\u5728\u5176\u8d1f\u6570\u7684\u6700\u5927\u6b63\u6574\u6570 \u627e\u5230\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u5176\u8d1f\u6570\u4e5f\u5728\u6570\u7ec4\u4e2d\u5b58\u5728\u3002 LC 2357 \u901a\u8fc7\u51cf\u53bb\u76f8\u540c\u6570\u4f7f\u6570\u7ec4\u4e3a\u96f6 \u901a\u8fc7\u51cf\u53bb\u76f8\u540c\u7684\u6570\u4f7f\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u5143\u7d20\u53d8\u4e3a\u96f6\u7684\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\u3002 LC 217 \u5b58\u5728\u91cd\u590d\u5143\u7d20 \u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4nums\uff0c\u5982\u679c\u4efb\u4e00\u503c\u5728\u6570\u7ec4\u4e2d\u51fa\u73b0\u81f3\u5c11\u4e24\u6b21\uff0c\u8fd4\u56detrue\uff0c\u5426\u5219false\u3002","title":"Lesson10 \u96c6\u5408\u4e13\u9898"},{"location":"lesson10/Lesson10%20Java/#lesson10","text":"","title":"Lesson10 \u96c6\u5408\u4e13\u9898"},{"location":"lesson10/Lesson10%20Java/#_1","text":"\u96c6\u5408\u7684\u57fa\u672c\u6982\u5ff5 1.1 Set \u63a5\u53e3\u7684\u7279\u6027 1.2 Set \u7684\u79cd\u7c7b 1.3 Set \u7684\u5e94\u7528\u573a\u666f 1.4 \u5b8c\u6574\u5b9e\u4f8b \u4f8b\u9898\u8bb2\u89e3 2.1 LC349 \u4e24\u4e2a\u6570\u7ec4\u7684\u4ea4\u96c6 2.2 LC645 \u9519\u8bef\u7684\u96c6\u5408 \u4e3e\u4e00\u53cd\u4e09 3.1 LC575 \u5206\u7cd6\u679c 3.2 LC771 \u5b9d\u77f3\u4e0e\u77f3\u5934 \u8bfe\u540e\u7ec3\u4e60","title":"\u76ee\u5f55"},{"location":"lesson10/Lesson10%20Java/#1","text":"Set \u662f Java \u96c6\u5408\u6846\u67b6\u4e2d\u7684\u4e00\u4e2a\u91cd\u8981\u63a5\u53e3\uff0c\u5b83\u7528\u4e8e\u5b58\u50a8 \u65e0\u5e8f \u7684\u3001 \u4e0d\u91cd\u590d \u7684\u5143\u7d20\u3002 Set \u4e0d\u5141\u8bb8\u5305\u542b\u91cd\u590d\u7684\u5143\u7d20\uff0c\u5373\u4f7f\u63d2\u5165\u76f8\u540c\u7684\u5143\u7d20\uff0c\u4e5f\u53ea\u4f1a\u4fdd\u7559\u4e00\u4e2a\u3002\u6b64\u5916\uff0c Set \u5e76\u4e0d\u4fdd\u8bc1\u5143\u7d20\u7684\u5b58\u50a8\u987a\u5e8f\u3002","title":"1. \u96c6\u5408\u7684\u57fa\u672c\u6982\u5ff5"},{"location":"lesson10/Lesson10%20Java/#11-set","text":"\u5143\u7d20\u552f\u4e00\u6027 \uff1a Set \u4e0d\u5141\u8bb8\u91cd\u590d\u5143\u7d20\uff0c\u8fd9\u610f\u5473\u7740\u6bcf\u4e2a\u5143\u7d20\u5728\u96c6\u5408\u4e2d\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002 \u65e0\u5e8f \uff1a Set \u4e0d\u4fdd\u8bc1\u5143\u7d20\u7684\u63d2\u5165\u987a\u5e8f\uff08\u4f46\u67d0\u4e9b\u5b9e\u73b0\uff0c\u5982 LinkedHashSet \u53ef\u4ee5\u7ef4\u62a4\u63d2\u5165\u987a\u5e8f\uff09\u3002 \u5e38\u7528\u65b9\u6cd5 \uff1a add(E e) \uff1a\u5411\u96c6\u5408\u4e2d\u6dfb\u52a0\u5143\u7d20\uff0c\u5982\u679c\u5143\u7d20\u5df2\u7ecf\u5b58\u5728\uff0c\u5219\u4e0d\u4f1a\u6dfb\u52a0\u5e76\u8fd4\u56de false \u3002 remove(Object o) \uff1a\u4ece\u96c6\u5408\u4e2d\u79fb\u9664\u6307\u5b9a\u7684\u5143\u7d20\u3002 contains(Object o) \uff1a\u68c0\u67e5\u96c6\u5408\u662f\u5426\u5305\u542b\u67d0\u4e2a\u5143\u7d20\u3002 size() \uff1a\u8fd4\u56de\u96c6\u5408\u4e2d\u5143\u7d20\u7684\u6570\u91cf\u3002 isEmpty() \uff1a\u5224\u65ad\u96c6\u5408\u662f\u5426\u4e3a\u7a7a\u3002 clear() \uff1a\u6e05\u7a7a\u96c6\u5408\u3002","title":"1.1 Set \u63a5\u53e3\u7684\u7279\u6027\uff1a"},{"location":"lesson10/Lesson10%20Java/#12-set","text":"Java \u63d0\u4f9b\u4e86\u51e0\u79cd\u5e38\u89c1\u7684 Set \u5b9e\u73b0\u7c7b\uff0c\u5305\u62ec HashSet \uff0c LinkedHashSet \uff0c TreeSet \u7b49\uff0c\u672c\u7ae0\u8282\u4ec5\u5bf9\u6700\u5e38\u89c1\u7684 HashSet \u8fdb\u884c\u4ecb\u7ecd","title":"1.2 Set \u7684\u79cd\u7c7b"},{"location":"lesson10/Lesson10%20Java/#hashset","text":"HashSet \u662f\u6700\u5e38\u7528\u7684 Set \u5b9e\u73b0\uff0c\u5b83\u57fa\u4e8e\u54c8\u5e0c\u8868\u6765\u5b58\u50a8\u5143\u7d20\uff0c\u56e0\u800c\u5177\u6709\u5f88\u597d\u7684\u6027\u80fd\u3002 \u5143\u7d20\u65e0\u5e8f\uff0c\u4e0d\u4fdd\u8bc1\u63d2\u5165\u987a\u5e8f\u3002 \u5141\u8bb8\u5b58\u50a8 null \u5143\u7d20\u3002 \u4f7f\u7528\u793a\u4f8b\uff1a import java.util.HashSet; import java.util.Set; public class HashSetExample { public static void main(String[] args) { Set<String> set = new HashSet<>(); set.add(\"Java\"); set.add(\"Python\"); set.add(\"Java\"); // \u91cd\u590d\u5143\u7d20\u4e0d\u4f1a\u88ab\u6dfb\u52a0 // \u904d\u5386\u5e76\u8f93\u51fa\u96c6\u5408\u4e2d\u7684\u5143\u7d20 for (String lang : set) { System.out.println(lang); } // \u5224\u65ad\u96c6\u5408\u4e2d\u662f\u5426\u5305\u542b\u67d0\u4e2a\u5143\u7d20 if (set.contains(\"Java\")) { System.out.println(\"Set contains Java\"); } // \u79fb\u9664\u5143\u7d20 set.remove(\"Python\"); System.out.println(\"After removing Python: \" + set); // \u8f93\u51fa\u96c6\u5408\u5927\u5c0f System.out.println(\"Set size: \" + set.size()); } }","title":"HashSet"},{"location":"lesson10/Lesson10%20Java/#13-set","text":"\u53bb\u91cd\u529f\u80fd \uff1a\u5f53\u9700\u8981\u5b58\u50a8\u4e0d\u91cd\u590d\u7684\u5143\u7d20\u65f6\uff0c Set \u662f\u7406\u60f3\u7684\u9009\u62e9\u3002\u4f8b\u5982\uff0c\u5728\u4e00\u4e2a\u7cfb\u7edf\u4e2d\u53bb\u9664\u91cd\u590d\u7684\u7528\u6237\u540d\u3002 \u96c6\u5408\u64cd\u4f5c \uff1a Set \u5177\u6709\u5f88\u5f3a\u7684\u96c6\u5408\u64cd\u4f5c\u80fd\u529b\uff0c\u5982\u6c42\u4ea4\u96c6\u3001\u5e76\u96c6\u548c\u5dee\u96c6\uff0c\u53ef\u4ee5\u901a\u8fc7 retainAll() \u3001 addAll() \u3001 removeAll() \u7b49\u65b9\u6cd5\u6765\u5b9e\u73b0\u3002 \u4ea4\u96c6 \uff08\u4e24\u4e2a\u96c6\u5408\u5171\u6709\u7684\u5143\u7d20\uff09\uff1a java Set<String> set1 = new HashSet<>(Arrays.asList(\"A\", \"B\", \"C\")); Set<String> set2 = new HashSet<>(Arrays.asList(\"B\", \"C\", \"D\")); set1.retainAll(set2); // set1 \u73b0\u5728\u662f [\"B\", \"C\"] \u5e76\u96c6 \uff08\u4e24\u4e2a\u96c6\u5408\u7684\u6240\u6709\u5143\u7d20\uff09\uff1a java set1.addAll(set2); // set1 \u73b0\u5728\u662f [\"A\", \"B\", \"C\", \"D\"] \u5dee\u96c6 \uff08\u4ec5\u5b58\u5728\u4e8e\u7b2c\u4e00\u4e2a\u96c6\u5408\u7684\u5143\u7d20\uff09\uff1a java set1.removeAll(set2); // set1 \u73b0\u5728\u662f [\"A\"]","title":"1.3 Set \u7684\u5e94\u7528\u573a\u666f"},{"location":"lesson10/Lesson10%20Java/#14","text":"import java.util.HashSet; import java.util.Set; public class SetOperationsExample { public static void main(String[] args) { // \u521b\u5efa\u4e24\u4e2a\u96c6\u5408 Set<String> set1 = new HashSet<>(); set1.add(\"A\"); set1.add(\"B\"); set1.add(\"C\"); Set<String> set2 = new HashSet<>(); set2.add(\"B\"); set2.add(\"C\"); set2.add(\"D\"); // \u4ea4\u96c6\uff08\u4fdd\u7559\u4e24\u4e2a\u96c6\u5408\u5171\u6709\u7684\u5143\u7d20\uff09 Set<String> intersection = new HashSet<>(set1); intersection.retainAll(set2); System.out.println(\"Intersection (\u4ea4\u96c6): \" + intersection); // \u8f93\u51fa\uff1a[B, C] // \u5e76\u96c6\uff08\u4e24\u4e2a\u96c6\u5408\u6240\u6709\u5143\u7d20\u7684\u7ec4\u5408\uff09 Set<String> union = new HashSet<>(set1); union.addAll(set2); System.out.println(\"Union (\u5e76\u96c6): \" + union); // \u8f93\u51fa\uff1a[A, B, C, D] // \u5dee\u96c6\uff08\u53ea\u5b58\u5728\u4e8e set1 \u4e2d\u7684\u5143\u7d20\uff09 Set<String> difference = new HashSet<>(set1); difference.removeAll(set2); System.out.println(\"Difference (\u5dee\u96c6): \" + difference); // \u8f93\u51fa\uff1a[A] } }","title":"1.4 \u5b8c\u6574\u5b9e\u4f8b"},{"location":"lesson10/Lesson10%20Java/#2","text":"","title":"2. \u4f8b\u9898\u8bb2\u89e3"},{"location":"lesson10/Lesson10%20Java/#21-lc349","text":"","title":"2.1 LC349 \u4e24\u4e2a\u6570\u7ec4\u7684\u4ea4\u96c6"},{"location":"lesson10/Lesson10%20Java/#_2","text":"\u7ed9\u5b9a\u4e24\u4e2a\u6570\u7ec4 nums1 \u548c nums2 \uff0c\u8fd4\u56de\u5b83\u4eec\u7684 \u4ea4\u96c6 \u3002 \u8f93\u51fa\u7ed3\u679c\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u4e00\u5b9a\u662f\u552f\u4e00\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u4e0d\u8003\u8651\u8f93\u51fa\u7ed3\u679c\u7684\u987a\u5e8f \u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"lesson10/Lesson10%20Java/#1_1","text":"","title":"\u89e3\u6cd51"},{"location":"lesson10/Lesson10%20Java/#_3","text":"\u4f7f\u7528\u4e24\u4e2a Set \u5b58\u50a8\u6570\u7ec4\u7684\u552f\u4e00\u5143\u7d20 \uff1a \u5c06 nums1 \u548c nums2 \u4e2d\u7684\u5143\u7d20\u5206\u522b\u653e\u5165\u4e24\u4e2a HashSet \uff0c\u4ee5\u53bb\u91cd\u5e76\u5b58\u50a8\u552f\u4e00\u7684\u5143\u7d20\u3002 \u6bd4\u8f83 Set \u7684\u5927\u5c0f \uff1a \u5728 intersection \u65b9\u6cd5\u4e2d\uff0c\u901a\u8fc7\u6bd4\u8f83 set1 \u548c set2 \u7684\u5927\u5c0f\uff0c\u9009\u62e9\u8f83\u5c0f\u7684\u96c6\u5408\u8fdb\u884c\u904d\u5386\u3002\u8fd9\u6837\u505a\u7684\u539f\u56e0\u662f\u8f83\u5c0f\u7684\u96c6\u5408\u4e2d\u5143\u7d20\u8f83\u5c11\uff0c\u56e0\u6b64\u80fd\u51cf\u5c11\u904d\u5386\u548c\u67e5\u627e\u7684\u6b21\u6570\uff0c\u63d0\u9ad8\u6548\u7387\u3002 \u904d\u5386\u8f83\u5c0f\u7684\u96c6\u5408 \uff1a \u4f7f\u7528 getIntersection \u65b9\u6cd5\u65f6\uff0c\u8f83\u5c0f\u7684\u96c6\u5408 smallerSet \u88ab\u904d\u5386\uff0c\u5e76\u68c0\u67e5\u5176\u4e2d\u7684\u5143\u7d20\u662f\u5426\u5b58\u5728\u4e8e\u8f83\u5927\u7684\u96c6\u5408 largerSet \u4e2d\u3002\u5982\u679c\u5b58\u5728\uff0c\u5219\u5c06\u8be5\u5143\u7d20\u52a0\u5165\u4ea4\u96c6\u96c6\u5408 intersectionSet \u3002 \u5c06\u4ea4\u96c6\u96c6\u5408\u8f6c\u6362\u4e3a\u6570\u7ec4 \uff1a \u5c06 intersectionSet \u4e2d\u7684\u4ea4\u96c6\u5143\u7d20\u5b58\u5165\u6570\u7ec4\uff0c\u6700\u7ec8\u8fd4\u56de\u8fd9\u4e2a\u6570\u7ec4\u3002","title":"\u601d\u8def\u5206\u6790\uff1a"},{"location":"lesson10/Lesson10%20Java/#_4","text":"import java.util.HashSet; import java.util.Set; public class ArrayIntersection { public int[] intersection(int[] nums1, int[] nums2) { // \u5c06\u7b2c\u4e00\u4e2a\u6570\u7ec4\u7684\u5143\u7d20\u653e\u5165 Set \u4e2d Set<Integer> set1 = new HashSet<>(); for (int num : nums1) { set1.add(num); } // \u5c06\u7b2c\u4e8c\u4e2a\u6570\u7ec4\u7684\u5143\u7d20\u653e\u5165 Set \u4e2d Set<Integer> set2 = new HashSet<>(); for (int num : nums2) { set2.add(num); } // \u76f4\u63a5\u6839\u636e\u5927\u5c0f\u5224\u65ad\uff0c\u904d\u5386\u8f83\u5c0f\u7684\u96c6\u5408 if (set1.size() > set2.size()) { return getIntersection(set2, set1); } else { return getIntersection(set1, set2); } } public int[] getIntersection(Set<Integer> smallerSet, Set<Integer> largerSet) { // \u521b\u5efa\u4e00\u4e2a Set \u7528\u4e8e\u5b58\u50a8\u4ea4\u96c6 Set<Integer> intersectionSet = new HashSet<>(); for (int num : smallerSet) { if (largerSet.contains(num)) { intersectionSet.add(num); } } // \u5c06\u4ea4\u96c6\u96c6\u5408\u8f6c\u6362\u4e3a\u6570\u7ec4\u5e76\u8fd4\u56de int[] intersection = new int[intersectionSet.size()]; int index = 0; for (int num : intersectionSet) { intersection[index++] = num; } return intersection; } }","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson10/Lesson10%20Java/#2_1","text":"","title":"\u89e3\u6cd52"},{"location":"lesson10/Lesson10%20Java/#_5","text":"\u5c06\u4e24\u4e2a\u6570\u7ec4\u5206\u522b\u8f6c\u6362\u4e3a HashSet \uff0c\u56e0\u4e3a Set \u80fd\u53bb\u9664\u91cd\u590d\u7684\u5143\u7d20\uff0c\u5e76\u4e14\u53ef\u4ee5\u65b9\u4fbf\u5730\u8fdb\u884c\u96c6\u5408\u8fd0\u7b97\u3002 \u4f7f\u7528 retainAll() \u65b9\u6cd5\u6765\u83b7\u53d6\u4e24\u4e2a\u96c6\u5408\u7684\u4ea4\u96c6\u3002 \u5c06\u4ea4\u96c6\u7ed3\u679c\u8f6c\u6362\u4e3a\u6570\u7ec4\u5e76\u8fd4\u56de\u3002","title":"\u89e3\u9898\u601d\u8def\uff1a"},{"location":"lesson10/Lesson10%20Java/#_6","text":"import java.util.HashSet; import java.util.Set; public class ArrayIntersection { public int[] intersection(int[] nums1, int[] nums2) { // \u5c06\u4e24\u4e2a\u6570\u7ec4\u8f6c\u6362\u4e3a Set Set<Integer> set1 = new HashSet<>(); for (int num : nums1) { set1.add(num); } Set<Integer> set2 = new HashSet<>(); for (int num : nums2) { set2.add(num); } // \u4f7f\u7528 retainAll() \u4fdd\u7559\u4ea4\u96c6 set1.retainAll(set2); // \u5c06\u4ea4\u96c6\u8f6c\u6362\u4e3a\u6570\u7ec4\u5e76\u8fd4\u56de int[] result = new int[set1.size()]; int index = 0; for (int num : set1) { result[index++] = num; } return result; } }","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson10/Lesson10%20Java/#22-lc645","text":"","title":"2.2 LC645 \u9519\u8bef\u7684\u96c6\u5408"},{"location":"lesson10/Lesson10%20Java/#_7","text":"\u96c6\u5408 s \u5305\u542b\u4ece 1 \u5230 n \u7684\u6574\u6570\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u56e0\u4e3a\u6570\u636e\u9519\u8bef\uff0c\u5bfc\u81f4\u96c6\u5408\u91cc\u9762\u67d0\u4e00\u4e2a\u6570\u5b57\u590d\u5236\u4e86\u6210\u4e86\u96c6\u5408\u91cc\u9762\u7684\u53e6\u5916\u4e00\u4e2a\u6570\u5b57\u7684\u503c\uff0c\u5bfc\u81f4\u96c6\u5408\u4e22\u5931\u4e86\u4e00\u4e2a\u6570\u5b57\uff0c\u5e76\u4e14\u6709\u4e00\u4e2a\u6570\u5b57\u91cd\u590d \u3002 \u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4 nums \u4ee3\u8868\u4e86\u96c6\u5408 S \u53d1\u751f\u9519\u8bef\u540e\u7684\u7ed3\u679c\u3002 \u8bf7\u4f60\u627e\u51fa\u91cd\u590d\u51fa\u73b0\u7684\u6574\u6570\uff0c\u518d\u627e\u5230\u4e22\u5931\u7684\u6574\u6570\uff0c\u5c06\u5b83\u4eec\u4ee5\u6570\u7ec4\u7684\u5f62\u5f0f\u8fd4\u56de\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson10/Lesson10%20Java/#_8","text":"\u4f7f\u7528 HashSet \u5b58\u50a8\u51fa\u73b0\u7684\u6570\u5b57 \uff1a \u904d\u5386\u6570\u7ec4 nums \uff0c\u5c06\u6240\u6709\u6570\u5b57\u6dfb\u52a0\u5230\u4e00\u4e2a HashSet \u4e2d\u3002\u7531\u4e8e HashSet \u4e0d\u5141\u8bb8\u91cd\u590d\u7684\u5143\u7d20\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6dfb\u52a0\u65f6\u68c0\u67e5\u662f\u5426\u5df2\u7ecf\u5b58\u5728\u8be5\u6570\u5b57\uff0c\u4ece\u800c\u627e\u5230\u91cd\u590d\u7684\u6570\u5b57\u3002 \u68c0\u67e5\u6570\u5b57\u8303\u56f4 \uff1a \u7531\u4e8e\u96c6\u5408\u5e94\u5305\u542b\u4ece 1 \u5230 n \u7684\u6240\u6709\u6570\u5b57\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u904d\u5386\u4ece 1 \u5230 n \u7684\u6bcf\u4e00\u4e2a\u6570\u5b57\uff0c\u68c0\u67e5\u8fd9\u4e9b\u6570\u5b57\u662f\u5426\u5b58\u5728\u4e8e HashSet \u4e2d\u3002\u82e5\u67d0\u4e2a\u6570\u5b57\u4e0d\u5728 HashSet \u4e2d\uff0c\u5219\u8be5\u6570\u5b57\u662f\u4e22\u5931\u7684\u6570\u5b57\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a \u5c06\u627e\u5230\u7684\u91cd\u590d\u6570\u5b57\u548c\u4e22\u5931\u6570\u5b57\u4ee5\u6570\u7ec4\u7684\u5f62\u5f0f\u8fd4\u56de\u3002","title":"\u89e3\u9898\u601d\u8def\uff1a"},{"location":"lesson10/Lesson10%20Java/#_9","text":"import java.util.HashSet; public class Solution { public int[] findErrorNums(int[] nums) { HashSet<Integer> set = new HashSet<>(); int duplicate = -1; int n = nums.length; // \u67e5\u627e\u91cd\u590d\u7684\u6570\u5b57\u5e76\u5c06\u6240\u6709\u6570\u5b57\u6dfb\u52a0\u5230 HashSet for (int num : nums) { if (!set.add(num)) { // add() \u8fd4\u56de false \u8868\u793a\u5df2\u7ecf\u5b58\u5728 duplicate = num; // \u627e\u5230\u91cd\u590d\u7684\u6570\u5b57 } } int missing = -1; // \u67e5\u627e\u4e22\u5931\u7684\u6570\u5b57 for (int i = 1; i <= n; i++) { if (!set.contains(i)) { // \u5982\u679c HashSet \u4e2d\u4e0d\u5305\u542b\u6570\u5b57 i missing = i; // \u8bb0\u5f55\u4e22\u5931\u7684\u6570\u5b57 break; // \u627e\u5230\u540e\u76f4\u63a5\u9000\u51fa\u5faa\u73af } } return new int[] {duplicate, missing}; } }","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson10/Lesson10%20Java/#3","text":"","title":"3. \u4e3e\u4e00\u53cd\u4e09"},{"location":"lesson10/Lesson10%20Java/#31-lc575","text":"","title":"3.1 LC575 \u5206\u7cd6\u679c"},{"location":"lesson10/Lesson10%20Java/#_10","text":"Alice \u6709 n \u679a\u7cd6\uff0c\u5176\u4e2d\u7b2c i \u679a\u7cd6\u7684\u7c7b\u578b\u4e3a candyType[i] \u3002Alice \u6ce8\u610f\u5230\u5979\u7684\u4f53\u91cd\u6b63\u5728\u589e\u957f\uff0c\u6240\u4ee5\u524d\u53bb\u62dc\u8bbf\u4e86\u4e00\u4f4d\u533b\u751f\u3002 \u533b\u751f\u5efa\u8bae Alice \u8981\u5c11\u6444\u5165\u7cd6\u5206\uff0c\u53ea\u5403\u6389\u5979\u6240\u6709\u7cd6\u7684 n / 2 \u5373\u53ef\uff08n \u662f\u4e00\u4e2a\u5076\u6570\uff09\u3002Alice \u975e\u5e38\u559c\u6b22\u8fd9\u4e9b\u7cd6\uff0c\u5979\u60f3\u8981\u5728\u9075\u5faa\u533b\u751f\u5efa\u8bae\u7684\u60c5\u51b5\u4e0b\uff0c\u5c3d\u53ef\u80fd\u5403\u5230\u6700\u591a\u4e0d\u540c\u79cd\u7c7b\u7684\u7cd6\u3002 \u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u6574\u6570\u6570\u7ec4 candyType \u3002 \u8fd4\u56de\uff1a Alice \u5728\u4ec5\u5403\u6389 n / 2 \u679a\u7cd6\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u5403\u5230\u7cd6\u7684\u6700\u591a\u79cd\u7c7b\u6570\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson10/Lesson10%20Java/#_11","text":"\u7edf\u8ba1\u7cd6\u7684\u79cd\u7c7b \uff1a\u4f7f\u7528\u4e00\u4e2a HashSet \u6765\u5b58\u50a8\u4e0d\u540c\u7c7b\u578b\u7684\u7cd6\uff0c\u8fd9\u6837\u53ef\u4ee5\u81ea\u52a8\u53bb\u9664\u91cd\u590d\u7684\u7cd6\u7c7b\u578b\u3002 \u8ba1\u7b97\u80fd\u5403\u7684\u7cd6\u7684\u6570\u91cf \uff1a\u7531\u4e8e Alice \u53ea\u80fd\u5403\u6389 ( n / 2 ) \u679a\u7cd6\uff0c\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u4e0d\u540c\u7c7b\u578b\u7684\u7cd6\u7684\u6570\u91cf\u4e0e ( n / 2 ) \u7684\u6700\u5c0f\u503c\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u8fd4\u56de\u80fd\u5403\u5230\u7684\u6700\u591a\u79cd\u7c7b\u7684\u7cd6\u3002","title":"\u89e3\u9898\u601d\u8def"},{"location":"lesson10/Lesson10%20Java/#_12","text":"import java.util.HashSet; public class Solution { public int distributeCandies(int[] candyType) { // \u4f7f\u7528 HashSet \u6765\u5b58\u50a8\u4e0d\u540c\u7684\u7cd6\u7684\u79cd\u7c7b HashSet<Integer> uniqueCandyTypes = new HashSet<>(); // \u5c06\u6240\u6709\u7cd6\u7684\u7c7b\u578b\u6dfb\u52a0\u5230 HashSet for (int candy : candyType) { uniqueCandyTypes.add(candy); } // \u8ba1\u7b97 Alice \u80fd\u5403\u7684\u7cd6\u7684\u6570\u91cf int n = candyType.length; int maxTypes = uniqueCandyTypes.size(); // \u4e0d\u540c\u7cd6\u7684\u79cd\u7c7b\u6570 int canEatCount = n / 2; // Alice \u80fd\u5403\u7684\u7cd6\u7684\u6570\u91cf // \u8fd4\u56de\u6700\u591a\u53ef\u4ee5\u5403\u5230\u7684\u79cd\u7c7b\u6570 return Math.min(maxTypes, canEatCount); } }","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson10/Lesson10%20Java/#_13","text":"\u79cd\u7c7b\u6570 vs \u53ef\u5403\u6570\u91cf \uff1a \u79cd\u7c7b\u6570 ( maxTypes ) \uff1a\u8fd9\u662f Alice \u53ef\u4ee5\u9009\u62e9\u7684\u4e0d\u540c\u7cd6\u7684\u7c7b\u578b\u6570\u91cf\u3002\u5982\u679c maxTypes \u5c0f\u4e8e canEatCount \uff0c\u8fd9\u610f\u5473\u7740 Alice \u53ef\u4ee5\u5403\u6389\u66f4\u591a\u7684\u7cd6\uff0c\u4f46\u56e0\u4e3a\u4e0d\u540c\u79cd\u7c7b\u7684\u7cd6\u4e0d\u8db3\uff0c\u6240\u4ee5\u5979\u7684\u9009\u62e9\u53d7\u5230\u9650\u5236\u3002 \u53ef\u5403\u6570\u91cf ( canEatCount ) \uff1a\u8fd9\u662f Alice \u4f9d\u636e\u533b\u751f\u5efa\u8bae\u6240\u80fd\u5403\u6389\u7684\u7cd6\u7684\u6570\u91cf\u3002\u5982\u679c canEatCount \u5c0f\u4e8e maxTypes \uff0c\u8fd9\u610f\u5473\u7740\u867d\u7136 Alice \u62e5\u6709\u8db3\u591f\u591a\u7684\u7cd6\u79cd\u7c7b\uff0c\u4f46\u5979\u53ea\u80fd\u9009\u62e9\u4e00\u90e8\u5206\uff0c\u56e0\u4e3a\u5979\u4e0d\u80fd\u5403\u6389\u8d85\u8fc7\u5979\u7684\u914d\u989d\u3002","title":"\u903b\u8f91\u63a8\u7406"},{"location":"lesson10/Lesson10%20Java/#_14","text":"\u4f7f\u7528 Math.min(maxTypes, canEatCount) \u8ba1\u7b97\u6700\u7ec8\u7ed3\u679c\uff0c\u786e\u4fdd Alice \u5728\u5403\u7cd6\u7684\u6570\u91cf\u548c\u7cd6\u7684\u79cd\u7c7b\u4e4b\u95f4\u505a\u51fa\u5408\u7406\u7684\u9009\u62e9\u3002\u5177\u4f53\u6765\u8bf4\uff1a \u5982\u679c maxTypes \u5927\u4e8e canEatCount \uff0c\u5219 Alice \u53ea\u80fd\u5403\u6389 canEatCount \u7684\u7cd6\u3002\u5979\u867d\u7136\u6709\u66f4\u591a\u79cd\u7c7b\u53ef\u9009\uff0c\u4f46\u53ea\u80fd\u9009\u62e9\u5176\u4e2d\u7684 ( n/2 ) \u4e2a\u3002 \u5982\u679c maxTypes \u5c0f\u4e8e canEatCount \uff0c\u5219 Alice \u53ef\u4ee5\u9009\u62e9\u6240\u6709\u7684\u4e0d\u540c\u79cd\u7c7b\u7684\u7cd6\uff0c\u800c\u4e0d\u5fc5\u62c5\u5fc3\u6570\u91cf\u9650\u5236\uff0c\u56e0\u4e3a\u5979\u53ea\u60f3\u5403\u4e0d\u540c\u7684\u7cd6\u3002","title":"\u4e3a\u4ec0\u4e48\u53d6\u6700\u5c0f\u503c"},{"location":"lesson10/Lesson10%20Java/#32-lc771","text":"","title":"3.2 LC771 \u5b9d\u77f3\u4e0e\u77f3\u5934"},{"location":"lesson10/Lesson10%20Java/#_15","text":"\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 jewels \u4ee3\u8868\u77f3\u5934\u4e2d\u5b9d\u77f3\u7684\u7c7b\u578b\uff0c\u53e6\u6709\u4e00\u4e2a\u5b57\u7b26\u4e32 stones \u4ee3\u8868\u4f60\u62e5\u6709\u7684\u77f3\u5934\u3002 stones \u4e2d\u6bcf\u4e2a\u5b57\u7b26\u4ee3\u8868\u4e86\u4e00\u79cd\u4f60\u62e5\u6709\u7684\u77f3\u5934\u7684\u7c7b\u578b\uff0c\u4f60\u60f3\u77e5\u9053\u4f60\u62e5\u6709\u7684\u77f3\u5934\u4e2d\u6709\u591a\u5c11\u662f\u5b9d\u77f3\u3002 \u5b57\u6bcd\u533a\u5206\u5927\u5c0f\u5199\uff0c\u56e0\u6b64 \"a\" \u548c \"A\" \u662f\u4e0d\u540c\u7c7b\u578b\u7684\u77f3\u5934\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson10/Lesson10%20Java/#_16","text":"\u6dfb\u52a0\u5b9d\u77f3\u5b57\u7b26 \uff1a \u4f7f\u7528 for \u5faa\u73af\u904d\u5386 jewels \u5b57\u7b26\u4e32\uff0c\u5c06\u6bcf\u4e2a\u5b57\u7b26\u6dfb\u52a0\u5230 HashSet \u4e2d\u3002 \u8ba1\u7b97\u5b9d\u77f3\u6570\u91cf \uff1a \u521d\u59cb\u5316\u8ba1\u6570\u5668 count \u4e3a 0\uff0c\u7136\u540e\u904d\u5386 stones \u5b57\u7b26\u4e32\uff0c\u68c0\u67e5\u6bcf\u4e2a\u5b57\u7b26\u662f\u5426\u5728 jewelSet \u4e2d\u3002 \u5982\u679c\u5b58\u5728\uff0c\u5c06\u8ba1\u6570\u5668\u52a0\u4e00\u3002","title":"\u89e3\u9898\u601d\u8def\uff1a"},{"location":"lesson10/Lesson10%20Java/#_17","text":"import java.util.HashSet; public class Solution { public int numJewelsInStones(String jewels, String stones) { // \u521b\u5efa\u4e00\u4e2a HashSet \u6765\u5b58\u50a8\u5b9d\u77f3\u7684\u7c7b\u578b HashSet<Character> jewelSet = new HashSet<>(); // \u5c06 jewels \u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u6dfb\u52a0\u5230 HashSet \u4e2d for (char jewel : jewels.toCharArray()) { jewelSet.add(jewel); } // \u521d\u59cb\u5316\u8ba1\u6570\u5668 int count = 0; // \u904d\u5386 stones\uff0c\u8ba1\u7b97\u5b9d\u77f3\u7684\u6570\u91cf for (char stone : stones.toCharArray()) { if (jewelSet.contains(stone)) { count++; // \u5982\u679c stone \u662f\u5b9d\u77f3\uff0c\u8ba1\u6570\u52a0\u4e00 } } return count; // \u8fd4\u56de\u5b9d\u77f3\u7684\u6570\u91cf } }","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson10/Lesson10%20Java/#4","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC 187 \u91cd\u590d\u7684 DNA \u5e8f\u5217 \u627e\u5230\u6240\u6709\u51fa\u73b0\u6b21\u6570\u8d85\u8fc7\u4e00\u6b21\u7684 DNA \u5e8f\u5217\u3002 LC 961 N \u6b21\u91cd\u590d\u5143\u7d20\u5728 2N \u6570\u7ec4\u4e2d \u5728\u957f\u5ea6\u4e3a 2N \u7684\u6570\u7ec4\u4e2d\u627e\u5230\u51fa\u73b0 N \u6b21\u7684\u5143\u7d20\u3002 LC 2441 \u5b58\u5728\u5176\u8d1f\u6570\u7684\u6700\u5927\u6b63\u6574\u6570 \u627e\u5230\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u5176\u8d1f\u6570\u4e5f\u5728\u6570\u7ec4\u4e2d\u5b58\u5728\u3002 LC 2357 \u901a\u8fc7\u51cf\u53bb\u76f8\u540c\u6570\u4f7f\u6570\u7ec4\u4e3a\u96f6 \u901a\u8fc7\u51cf\u53bb\u76f8\u540c\u7684\u6570\u4f7f\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u5143\u7d20\u53d8\u4e3a\u96f6\u7684\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\u3002 LC 217 \u5b58\u5728\u91cd\u590d\u5143\u7d20 \u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4nums\uff0c\u5982\u679c\u4efb\u4e00\u503c\u5728\u6570\u7ec4\u4e2d\u51fa\u73b0\u81f3\u5c11\u4e24\u6b21\uff0c\u8fd4\u56detrue\uff0c\u5426\u5219false\u3002","title":"4. \u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson10/Lesson10%20Python/","text":"Lesson10 \u96c6\u5408\u4e13\u9898 \u76ee\u5f55 \u96c6\u5408\u7684\u57fa\u672c\u6982\u5ff5 1.1 \u96c6\u5408\u7684\u521b\u5efa 1.2 \u96c6\u5408\u7684\u7279\u6027 1.3 set \u7684\u5e94\u7528\u573a\u666f 1.4 \u5b8c\u6574\u5b9e\u4f8b \u4f8b\u9898\u8bb2\u89e3 2.1 LC349 \u4e24\u4e2a\u6570\u7ec4\u7684\u4ea4\u96c6 2.2 LC645 \u9519\u8bef\u7684\u96c6\u5408 \u4e3e\u4e00\u53cd\u4e09 3.1 LC575 \u5206\u7cd6\u679c 3.2 LC771 \u5b9d\u77f3\u4e0e\u77f3\u5934 \u8bfe\u540e\u7ec3\u4e60 1. \u96c6\u5408\u7684\u57fa\u672c\u6982\u5ff5 set \u662f Python \u4e2d\u4e00\u4e2a\u65e0\u5e8f\u4e14\u4e0d\u91cd\u590d\u7684\u5143\u7d20\u96c6\u5408\u3002\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u662f\u552f\u4e00\u7684\uff0c\u4e14\u5b58\u50a8\u7684\u987a\u5e8f\u4e0d\u56fa\u5b9a\u3002 1.1 \u96c6\u5408\u7684\u521b\u5efa \u96c6\u5408\u7684\u521b\u5efa \u96c6\u5408\uff08set\uff09\u662f\u4e00\u4e2a\u65e0\u5e8f\u7684\u4e0d\u91cd\u590d\u5143\u7d20\u5e8f\u5217\u3002 \u96c6\u5408\u4e2d\u7684\u5143\u7d20\u4e0d\u4f1a\u91cd\u590d\uff0c\u5e76\u4e14\u53ef\u4ee5\u8fdb\u884c\u4ea4\u96c6\u3001\u5e76\u96c6\u3001\u5dee\u96c6\u7b49\u5e38\u89c1\u7684\u96c6\u5408\u64cd\u4f5c\u3002 \u53ef\u4ee5\u4f7f\u7528\u5927\u62ec\u53f7 { } \u521b\u5efa\u96c6\u5408\uff0c\u5143\u7d20\u4e4b\u95f4\u7528\u9017\u53f7 , \u5206\u9694\uff0c \u6216\u8005\u4e5f\u53ef\u4ee5\u4f7f\u7528 set() \u51fd\u6570\u521b\u5efa\u96c6\u5408\u3002 \u521b\u5efa\u683c\u5f0f\uff1a parame = {value01,value02,...} \u6216\u8005 set(value) \u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u5b9e\u4f8b\uff1a set1 = {1, 2, 3, 4} # \u76f4\u63a5\u4f7f\u7528\u5927\u62ec\u53f7\u521b\u5efa\u96c6\u5408 set2 = set([4, 5, 6, 7]) # \u4f7f\u7528 set() \u51fd\u6570\u4ece\u5217\u8868\u521b\u5efa\u96c6\u5408 \u6ce8\u610f\uff1a \u521b\u5efa\u4e00\u4e2a\u7a7a\u96c6\u5408\u5fc5\u987b\u7528 set() \u800c\u4e0d\u662f { } \uff0c\u56e0\u4e3a { } \u662f\u7528\u6765\u521b\u5efa\u4e00\u4e2a\u7a7a\u5b57\u5178\u3002 1.2 \u96c6\u5408\u7684\u7279\u6027 \u5143\u7d20\u552f\u4e00\u6027 \uff1a\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u4e0d\u80fd\u91cd\u590d\uff0c\u6bcf\u4e2a\u5143\u7d20\u5728\u96c6\u5408\u4e2d\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002 \u65e0\u5e8f \uff1a\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u6ca1\u6709\u56fa\u5b9a\u7684\u5b58\u50a8\u987a\u5e8f\u3002 \u5e38\u7528\u65b9\u6cd5 \uff1a add() \uff1a\u5411\u96c6\u5408\u4e2d\u6dfb\u52a0\u5143\u7d20\u3002\u5982\u679c\u5143\u7d20\u5df2\u5b58\u5728\uff0c\u5219\u4e0d\u4f1a\u91cd\u590d\u6dfb\u52a0\u3002 remove() \uff1a\u4ece\u96c6\u5408\u4e2d\u5220\u9664\u6307\u5b9a\u7684\u5143\u7d20\u3002 discard() \uff1a\u5220\u9664\u5143\u7d20\uff0c\u4f46\u5982\u679c\u5143\u7d20\u4e0d\u5b58\u5728\uff0c\u5219\u4e0d\u4f1a\u62a5\u9519\u3002 clear() \uff1a\u6e05\u7a7a\u96c6\u5408\u4e2d\u7684\u6240\u6709\u5143\u7d20\u3002 len() \uff1a\u8fd4\u56de\u96c6\u5408\u4e2d\u5143\u7d20\u7684\u6570\u91cf\u3002 in \uff1a\u5224\u65ad\u67d0\u4e2a\u5143\u7d20\u662f\u5426\u5728\u96c6\u5408\u4e2d\u3002 # \u521b\u5efa\u96c6\u5408 languages = {\"Python\", \"Java\", \"JavaScript\"} # \u5411\u96c6\u5408\u4e2d\u6dfb\u52a0\u5143\u7d20 languages.add(\"Ruby\") print(languages) # \u8f93\u51fa: {'Python', 'Ruby', 'Java', 'JavaScript'} # \u5220\u9664\u5143\u7d20 languages.remove(\"JavaScript\") print(languages) # \u8f93\u51fa: {'Python', 'Ruby', 'Java'} # \u83b7\u53d6\u96c6\u5408\u7684\u957f\u5ea6 print(len(languages)) # \u8f93\u51fa: 3 # \u68c0\u67e5\u5143\u7d20\u662f\u5426\u5b58\u5728 print(\"Python\" in languages) # \u8f93\u51fa: True # \u6e05\u7a7a\u96c6\u5408 languages.clear() print(languages) # \u8f93\u51fa: set() 1.3 set \u7684\u5e94\u7528\u573a\u666f \u53bb\u91cd \uff1a\u5f53\u9700\u8981\u53bb\u9664\u91cd\u590d\u5143\u7d20\u65f6\uff0c\u96c6\u5408\u975e\u5e38\u6709\u7528\u3002\u4f8b\u5982\uff0c\u4ece\u5217\u8868\u4e2d\u5220\u9664\u91cd\u590d\u9879\u3002 \u96c6\u5408\u64cd\u4f5c \uff1a\u96c6\u5408\u652f\u6301\u5404\u79cd\u96c6\u5408\u8fd0\u7b97\uff0c\u5982\u4ea4\u96c6\u3001\u5e76\u96c6\u548c\u5dee\u96c6\u3002 \u4ea4\u96c6\uff1a\u627e\u5230\u4e24\u4e2a\u96c6\u5408\u4e2d\u5171\u540c\u7684\u5143\u7d20 set1 = {\"A\", \"B\", \"C\"} set2 = {\"B\", \"C\", \"D\"} intersection = set1 & set2 print(intersection) # \u8f93\u51fa: {'B', 'C'} \u5e76\u96c6\uff1a\u5408\u5e76\u4e24\u4e2a\u96c6\u5408\u7684\u6240\u6709\u5143\u7d20 union = set1 | set2 print(union) # \u8f93\u51fa: {'A', 'B', 'C', 'D'} \u5dee\u96c6\uff1a\u627e\u51fa\u53ea\u5b58\u5728\u4e8e\u7b2c\u4e00\u4e2a\u96c6\u5408\u4e2d\u7684\u5143\u7d20 difference = set1 - set2 print(difference) # \u8f93\u51fa: {'A'} 1.4 \u5b8c\u6574\u5b9e\u4f8b # \u96c6\u5408\u64cd\u4f5c\u7684\u793a\u4f8b set1 = {\"A\", \"B\", \"C\"} set2 = {\"B\", \"C\", \"D\"} # \u4ea4\u96c6 intersection = set1 & set2 print(\"Intersection (\u4ea4\u96c6):\", intersection) # \u8f93\u51fa: {'B', 'C'} # \u5e76\u96c6 union = set1 | set2 print(\"Union (\u5e76\u96c6):\", union) # \u8f93\u51fa: {'A', 'B', 'C', 'D'} # \u5dee\u96c6 difference = set1 - set2 print(\"Difference (\u5dee\u96c6):\", difference) # \u8f93\u51fa: {'A'} 2. \u4f8b\u9898\u8bb2\u89e3 2.1 LC349 \u4e24\u4e2a\u6570\u7ec4\u7684\u4ea4\u96c6 \u9898\u76ee\u63cf\u8ff0 \u7ed9\u5b9a\u4e24\u4e2a\u6570\u7ec4 nums1 \u548c nums2 \uff0c\u8fd4\u56de\u5b83\u4eec\u7684 \u4ea4\u96c6 \u3002 \u8f93\u51fa\u7ed3\u679c\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u4e00\u5b9a\u662f\u552f\u4e00\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u4e0d\u8003\u8651\u8f93\u51fa\u7ed3\u679c\u7684\u987a\u5e8f \u3002 \u89e3\u6cd51 \u601d\u8def\u5206\u6790 \u521d\u59cb\u5316\u96c6\u5408 \uff1a\u9996\u5148\uff0c\u5c06\u5176\u4e2d\u4e00\u4e2a\u6570\u7ec4\uff08\u4f8b\u5982 nums2 \uff09\u8f6c\u6362\u4e3a\u96c6\u5408\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u5feb\u901f\u68c0\u67e5\u5143\u7d20\u662f\u5426\u5b58\u5728\u3002 \u521b\u5efa\u7ed3\u679c\u96c6\u5408 \uff1a\u521d\u59cb\u5316\u4e00\u4e2a\u7a7a\u96c6\u5408\uff0c\u7528\u4e8e\u5b58\u50a8\u6700\u7ec8\u7684\u4ea4\u96c6\u7ed3\u679c\u3002 \u904d\u5386\u5e76\u68c0\u67e5 \uff1a\u904d\u5386\u53e6\u4e00\u4e2a\u6570\u7ec4\uff08\u4f8b\u5982 nums1 \uff09\uff0c\u5bf9\u4e8e\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\uff0c\u68c0\u67e5\u5b83\u662f\u5426\u5b58\u5728\u4e8e nums2 \u7684\u96c6\u5408\u4e2d\u3002 \u6dfb\u52a0\u5230\u7ed3\u679c\u96c6\u5408 \uff1a\u5982\u679c\u5143\u7d20\u5b58\u5728\u4e8e nums2 \u7684\u96c6\u5408\u4e2d\uff0c\u5c06\u5176\u6dfb\u52a0\u5230\u7ed3\u679c\u96c6\u5408\u4e2d\uff0c\u5e76\u4ece nums2 \u7684\u96c6\u5408\u4e2d\u79fb\u9664\u8be5\u5143\u7d20\uff0c\u4ee5\u786e\u4fdd\u7ed3\u679c\u4e2d\u7684\u5143\u7d20\u662f\u552f\u4e00\u7684\u3002 \u8f6c\u6362\u4e3a\u5217\u8868 \uff1a\u6700\u540e\uff0c\u5c06\u7ed3\u679c\u96c6\u5408\u8f6c\u6362\u4e3a\u5217\u8868\u5e76\u8fd4\u56de\u3002 \u53c2\u8003\u89e3\u7b54 class Solution: def intersection(self, nums1: List[int], nums2: List[int]) -> List[int]: # \u5c06nums2\u8f6c\u6362\u4e3a\u96c6\u5408 set2 = set(nums2) # \u4f7f\u7528\u96c6\u5408\u6765\u5b58\u50a8\u4ea4\u96c6\u7ed3\u679c intersect_set = set() # \u904d\u5386nums1\uff0c\u68c0\u67e5\u6bcf\u4e2a\u5143\u7d20\u662f\u5426\u5728set2\u4e2d for num in nums1: if num in set2: intersect_set.add(num) # \u4eceset2\u4e2d\u79fb\u9664\u8be5\u5143\u7d20\uff0c\u786e\u4fdd\u7ed3\u679c\u4e2d\u5143\u7d20\u552f\u4e00 set2.remove(num) # \u8fd4\u56de\u7ed3\u679c\u96c6\u5408\u8f6c\u6362\u4e3a\u5217\u8868 return list(intersect_set) \u89e3\u6cd52 \u601d\u8def\u5206\u6790 1.\u5c06\u4e24\u4e2a\u6570\u7ec4\u53d8\u4e3a\u4f7f\u7528set()\u53d8\u4e3a\u96c6\u5408 2.\u76f4\u63a5\u4f7f\u7528&\u8fd0\u7b97\u7b26\u6765\u83b7\u5f97\u4e24\u4e2a\u96c6\u5408\u7684\u4ea4\u96c6 3.\u8fd4\u56delist \u53c2\u8003\u7b54\u6848\uff1a class Solution: def intersection(self, nums1: List[int], nums2: List[int]) -> List[int]: set1 = set(nums1) set2 = set(nums2) # \u6c42\u4ea4\u96c6\u5e76\u8fd4\u56de return list(set1 & set2) 2.2 LC645 \u9519\u8bef\u7684\u96c6\u5408 \u95ee\u9898\u63cf\u8ff0 \u96c6\u5408 s \u5305\u542b\u4ece 1 \u5230 n \u7684\u6574\u6570\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u56e0\u4e3a\u6570\u636e\u9519\u8bef\uff0c\u5bfc\u81f4\u96c6\u5408\u91cc\u9762\u67d0\u4e00\u4e2a\u6570\u5b57\u590d\u5236\u4e86\u6210\u4e86\u96c6\u5408\u91cc\u9762\u7684\u53e6\u5916\u4e00\u4e2a\u6570\u5b57\u7684\u503c\uff0c\u5bfc\u81f4\u96c6\u5408\u4e22\u5931\u4e86\u4e00\u4e2a\u6570\u5b57\uff0c\u5e76\u4e14\u6709\u4e00\u4e2a\u6570\u5b57\u91cd\u590d \u3002 \u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4 nums \u4ee3\u8868\u4e86\u96c6\u5408 S \u53d1\u751f\u9519\u8bef\u540e\u7684\u7ed3\u679c\u3002 \u8bf7\u4f60\u627e\u51fa\u91cd\u590d\u51fa\u73b0\u7684\u6574\u6570\uff0c\u518d\u627e\u5230\u4e22\u5931\u7684\u6574\u6570\uff0c\u5c06\u5b83\u4eec\u4ee5\u6570\u7ec4\u7684\u5f62\u5f0f\u8fd4\u56de\u3002 \u601d\u8def\u5206\u6790 \u4f7f\u7528\u96c6\u5408\u6765\u5b58\u50a8\u51fa\u73b0\u8fc7\u7684\u6570\u5b57\uff0c\u627e\u5230\u91cd\u590d\u7684\u6570\u5b57\u3002 \u904d\u5386 1 \u5230 n \u7684\u6570\u5b57\uff0c\u627e\u51fa\u4e22\u5931\u7684\u90a3\u4e2a\u3002 \u8fd4\u56de\u91cd\u590d\u7684\u6570\u5b57\u548c\u4e22\u5931\u7684\u6570\u5b57\u3002 \u53c2\u8003\u89e3\u7b54 class Solution: def findErrorNums(self, nums: List[int]) -> List[int]: num_set = set() duplicate = 0 n = len(nums) # \u67e5\u627e\u91cd\u590d\u7684\u6570\u5b57 for num in nums: if num in num_set: duplicate = num else: num_set.add(num) # \u67e5\u627e\u4e22\u5931\u7684\u6570\u5b57 for i in range(1, n+1): if i not in num_set: missing = i break return [duplicate, missing] 3. \u4e3e\u4e00\u53cd\u4e09 3.1 LC575 \u5206\u7cd6\u679c \u95ee\u9898\u63cf\u8ff0 Alice \u6709 n \u679a\u7cd6\uff0c\u5176\u4e2d\u7b2c i \u679a\u7cd6\u7684\u7c7b\u578b\u4e3a candyType[i] \u3002Alice \u6ce8\u610f\u5230\u5979\u7684\u4f53\u91cd\u6b63\u5728\u589e\u957f\uff0c\u6240\u4ee5\u524d\u53bb\u62dc\u8bbf\u4e86\u4e00\u4f4d\u533b\u751f\u3002 \u533b\u751f\u5efa\u8bae Alice \u8981\u5c11\u6444\u5165\u7cd6\u5206\uff0c\u53ea\u5403\u6389\u5979\u6240\u6709\u7cd6\u7684 n / 2 \u5373\u53ef\uff08n \u662f\u4e00\u4e2a\u5076\u6570\uff09\u3002Alice \u975e\u5e38\u559c\u6b22\u8fd9\u4e9b\u7cd6\uff0c\u5979\u60f3\u8981\u5728\u9075\u5faa\u533b\u751f\u5efa\u8bae\u7684\u60c5\u51b5\u4e0b\uff0c\u5c3d\u53ef\u80fd\u5403\u5230\u6700\u591a\u4e0d\u540c\u79cd\u7c7b\u7684\u7cd6\u3002 \u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u6574\u6570\u6570\u7ec4 candyType \u3002 \u8fd4\u56de\uff1a Alice \u5728\u4ec5\u5403\u6389 n / 2 \u679a\u7cd6\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u5403\u5230\u7cd6\u7684\u6700\u591a\u79cd\u7c7b\u6570\u3002 \u89e3\u9898\u601d\u8def \u4f7f\u7528\u96c6\u5408\u53bb\u91cd\u8ba1\u7b97\u7cd6\u679c\u7684\u79cd\u7c7b\u6570\u3002 \u8fd4\u56de\u7cd6\u679c\u79cd\u7c7b\u6570\u4e0e\u53ef\u5403\u7cd6\u679c\u6570\u91cf\u4e2d\u7684\u8f83\u5c0f\u503c\u3002 \u53c2\u8003\u89e3\u7b54 class Solution: def distributeCandies(self, candyType: List[int]) -> int: # \u4f7f\u7528\u96c6\u5408\u6765\u53bb\u91cd unique_candies = set(candyType) # Alice \u80fd\u5403\u7684\u7cd6\u679c\u6570\u91cf n = len(candyType) // 2 # \u8fd4\u56de\u80fd\u5403\u7684\u6700\u591a\u79cd\u7c7b return min(len(unique_candies), n) \u903b\u8f91\u63a8\u7406 \u79cd\u7c7b\u6570 vs \u53ef\u5403\u6570\u91cf \uff1a \u79cd\u7c7b\u6570 (len(unique_candies)) \uff1a\u8fd9\u662f Alice \u53ef\u4ee5\u9009\u62e9\u7684\u4e0d\u540c\u7cd6\u7684\u7c7b\u578b\u6570\u91cf\u3002\u5982\u679c \u79cd\u7c7b\u6570 \u5c0f\u4e8e \u53ef\u5403\u6570\u91cf \uff0c\u8fd9\u610f\u5473\u7740 Alice \u53ef\u4ee5\u5403\u6389\u66f4\u591a\u7cd6\uff0c\u4f46\u7531\u4e8e\u7cd6\u7684\u79cd\u7c7b\u4e0d\u8db3\uff0c\u5979\u7684\u9009\u62e9\u4f1a\u53d7\u5230\u9650\u5236\u3002 \u53ef\u5403\u6570\u91cf (n) \uff1a\u8fd9\u662f Alice \u6839\u636e\u533b\u751f\u5efa\u8bae\u80fd\u5403\u7684\u7cd6\u7684\u6570\u91cf\u3002\u5982\u679c \u53ef\u5403\u6570\u91cf \u5c0f\u4e8e \u79cd\u7c7b\u6570 \uff0c\u8fd9\u610f\u5473\u7740\u867d\u7136 Alice \u62e5\u6709\u8db3\u591f\u591a\u7684\u7cd6\u79cd\u7c7b\uff0c\u4f46\u5979\u53ea\u80fd\u9009\u62e9\u4e00\u90e8\u5206\uff0c\u56e0\u4e3a\u5979\u4e0d\u80fd\u5403\u8d85\u8fc7\u5979\u7684\u914d\u989d\u3002 \u4e3a\u4ec0\u4e48\u53d6\u6700\u5c0f\u503c \u4f7f\u7528 Python \u5185\u7f6e\u7684 min() \u51fd\u6570\u6765\u8ba1\u7b97\u6700\u7ec8\u7ed3\u679c\uff0c\u786e\u4fdd Alice \u5728\u5403\u7cd6\u6570\u91cf\u548c\u7cd6\u79cd\u7c7b\u4e4b\u95f4\u505a\u51fa\u5408\u7406\u7684\u9009\u62e9\u3002\u5177\u4f53\u6765\u8bf4\uff1a \u5982\u679c \u79cd\u7c7b\u6570 \u5927\u4e8e \u53ef\u5403\u6570\u91cfn\uff0c\u5219 Alice \u53ea\u80fd\u5403 n \u4e2a\u7cd6\uff0c\u5373\u4f7f\u6709\u66f4\u591a\u79cd\u7c7b\uff0c\u5979\u4e5f\u53ea\u80fd\u9009\u62e9\u4e00\u90e8\u5206\u3002 \u5982\u679c \u79cd\u7c7b\u6570 \u5c0f\u4e8e \u53ef\u5403\u6570\u91cfn\uff0c\u5219 Alice \u53ef\u4ee5\u9009\u62e9\u6240\u6709\u4e0d\u540c\u79cd\u7c7b\u7684\u7cd6\uff0c\u4e0d\u7528\u62c5\u5fc3\u6570\u91cf\u9650\u5236\u3002 3.2 LC771 \u5b9d\u77f3\u4e0e\u77f3\u5934 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 jewels \u4ee3\u8868\u77f3\u5934\u4e2d\u5b9d\u77f3\u7684\u7c7b\u578b\uff0c\u53e6\u6709\u4e00\u4e2a\u5b57\u7b26\u4e32 stones \u4ee3\u8868\u4f60\u62e5\u6709\u7684\u77f3\u5934\u3002 stones \u4e2d\u6bcf\u4e2a\u5b57\u7b26\u4ee3\u8868\u4e86\u4e00\u79cd\u4f60\u62e5\u6709\u7684\u77f3\u5934\u7684\u7c7b\u578b\uff0c\u4f60\u60f3\u77e5\u9053\u4f60\u62e5\u6709\u7684\u77f3\u5934\u4e2d\u6709\u591a\u5c11\u662f\u5b9d\u77f3\u3002 \u5b57\u6bcd\u533a\u5206\u5927\u5c0f\u5199\uff0c\u56e0\u6b64 \"a\" \u548c \"A\" \u662f\u4e0d\u540c\u7c7b\u578b\u7684\u77f3\u5934\u3002 \u89e3\u9898\u601d\u8def\uff1a \u4f7f\u7528\u96c6\u5408\u5b58\u50a8\u5b9d\u77f3\u7684\u7c7b\u578b\u3002 \u904d\u5386\u77f3\u5934\u7684\u5b57\u7b26\u4e32\uff0c\u68c0\u67e5\u662f\u5426\u4e3a\u5b9d\u77f3\uff0c\u8ba1\u6570\u51fa\u73b0\u6b21\u6570\u3002 \u53c2\u8003\u89e3\u7b54 class Solution: def numJewelsInStones(self, jewels: str, stones: str) -> int: jewel_set = set(jewels) # \u8ba1\u6570\u77f3\u5934\u4e2d\u5b9d\u77f3\u7684\u6570\u91cf count = 0 for stone in stones: if stone in jewel_set: count += 1 return count 4. \u8bfe\u540e\u7ec3\u4e60 \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC 187 \u91cd\u590d\u7684 DNA \u5e8f\u5217 \u627e\u5230\u6240\u6709\u51fa\u73b0\u6b21\u6570\u8d85\u8fc7\u4e00\u6b21\u7684 DNA \u5e8f\u5217\u3002 LC 961 N \u6b21\u91cd\u590d\u5143\u7d20\u5728 2N \u6570\u7ec4\u4e2d \u5728\u957f\u5ea6\u4e3a 2N \u7684\u6570\u7ec4\u4e2d\u627e\u5230\u51fa\u73b0 N \u6b21\u7684\u5143\u7d20\u3002 LC 2441 \u5b58\u5728\u5176\u8d1f\u6570\u7684\u6700\u5927\u6b63\u6574\u6570 \u627e\u5230\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u5176\u8d1f\u6570\u4e5f\u5728\u6570\u7ec4\u4e2d\u5b58\u5728\u3002 LC 2357 \u901a\u8fc7\u51cf\u53bb\u76f8\u540c\u6570\u4f7f\u6570\u7ec4\u4e3a\u96f6 \u901a\u8fc7\u51cf\u53bb\u76f8\u540c\u7684\u6570\u4f7f\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u5143\u7d20\u53d8\u4e3a\u96f6\u7684\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\u3002 LC 217 \u5b58\u5728\u91cd\u590d\u5143\u7d20 \u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4nums\uff0c\u5982\u679c\u4efb\u4e00\u503c\u5728\u6570\u7ec4\u4e2d\u51fa\u73b0\u81f3\u5c11\u4e24\u6b21\uff0c\u8fd4\u56detrue\uff0c\u5426\u5219false\u3002","title":"Lesson10 \u96c6\u5408\u4e13\u9898"},{"location":"lesson10/Lesson10%20Python/#lesson10","text":"","title":"Lesson10 \u96c6\u5408\u4e13\u9898"},{"location":"lesson10/Lesson10%20Python/#_1","text":"\u96c6\u5408\u7684\u57fa\u672c\u6982\u5ff5 1.1 \u96c6\u5408\u7684\u521b\u5efa 1.2 \u96c6\u5408\u7684\u7279\u6027 1.3 set \u7684\u5e94\u7528\u573a\u666f 1.4 \u5b8c\u6574\u5b9e\u4f8b \u4f8b\u9898\u8bb2\u89e3 2.1 LC349 \u4e24\u4e2a\u6570\u7ec4\u7684\u4ea4\u96c6 2.2 LC645 \u9519\u8bef\u7684\u96c6\u5408 \u4e3e\u4e00\u53cd\u4e09 3.1 LC575 \u5206\u7cd6\u679c 3.2 LC771 \u5b9d\u77f3\u4e0e\u77f3\u5934 \u8bfe\u540e\u7ec3\u4e60","title":"\u76ee\u5f55"},{"location":"lesson10/Lesson10%20Python/#1","text":"set \u662f Python \u4e2d\u4e00\u4e2a\u65e0\u5e8f\u4e14\u4e0d\u91cd\u590d\u7684\u5143\u7d20\u96c6\u5408\u3002\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u662f\u552f\u4e00\u7684\uff0c\u4e14\u5b58\u50a8\u7684\u987a\u5e8f\u4e0d\u56fa\u5b9a\u3002","title":"1. \u96c6\u5408\u7684\u57fa\u672c\u6982\u5ff5"},{"location":"lesson10/Lesson10%20Python/#11","text":"","title":"1.1 \u96c6\u5408\u7684\u521b\u5efa"},{"location":"lesson10/Lesson10%20Python/#_2","text":"\u96c6\u5408\uff08set\uff09\u662f\u4e00\u4e2a\u65e0\u5e8f\u7684\u4e0d\u91cd\u590d\u5143\u7d20\u5e8f\u5217\u3002 \u96c6\u5408\u4e2d\u7684\u5143\u7d20\u4e0d\u4f1a\u91cd\u590d\uff0c\u5e76\u4e14\u53ef\u4ee5\u8fdb\u884c\u4ea4\u96c6\u3001\u5e76\u96c6\u3001\u5dee\u96c6\u7b49\u5e38\u89c1\u7684\u96c6\u5408\u64cd\u4f5c\u3002 \u53ef\u4ee5\u4f7f\u7528\u5927\u62ec\u53f7 { } \u521b\u5efa\u96c6\u5408\uff0c\u5143\u7d20\u4e4b\u95f4\u7528\u9017\u53f7 , \u5206\u9694\uff0c \u6216\u8005\u4e5f\u53ef\u4ee5\u4f7f\u7528 set() \u51fd\u6570\u521b\u5efa\u96c6\u5408\u3002 \u521b\u5efa\u683c\u5f0f\uff1a parame = {value01,value02,...} \u6216\u8005 set(value) \u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u5b9e\u4f8b\uff1a set1 = {1, 2, 3, 4} # \u76f4\u63a5\u4f7f\u7528\u5927\u62ec\u53f7\u521b\u5efa\u96c6\u5408 set2 = set([4, 5, 6, 7]) # \u4f7f\u7528 set() \u51fd\u6570\u4ece\u5217\u8868\u521b\u5efa\u96c6\u5408 \u6ce8\u610f\uff1a \u521b\u5efa\u4e00\u4e2a\u7a7a\u96c6\u5408\u5fc5\u987b\u7528 set() \u800c\u4e0d\u662f { } \uff0c\u56e0\u4e3a { } \u662f\u7528\u6765\u521b\u5efa\u4e00\u4e2a\u7a7a\u5b57\u5178\u3002","title":"\u96c6\u5408\u7684\u521b\u5efa"},{"location":"lesson10/Lesson10%20Python/#12","text":"\u5143\u7d20\u552f\u4e00\u6027 \uff1a\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u4e0d\u80fd\u91cd\u590d\uff0c\u6bcf\u4e2a\u5143\u7d20\u5728\u96c6\u5408\u4e2d\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002 \u65e0\u5e8f \uff1a\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u6ca1\u6709\u56fa\u5b9a\u7684\u5b58\u50a8\u987a\u5e8f\u3002 \u5e38\u7528\u65b9\u6cd5 \uff1a add() \uff1a\u5411\u96c6\u5408\u4e2d\u6dfb\u52a0\u5143\u7d20\u3002\u5982\u679c\u5143\u7d20\u5df2\u5b58\u5728\uff0c\u5219\u4e0d\u4f1a\u91cd\u590d\u6dfb\u52a0\u3002 remove() \uff1a\u4ece\u96c6\u5408\u4e2d\u5220\u9664\u6307\u5b9a\u7684\u5143\u7d20\u3002 discard() \uff1a\u5220\u9664\u5143\u7d20\uff0c\u4f46\u5982\u679c\u5143\u7d20\u4e0d\u5b58\u5728\uff0c\u5219\u4e0d\u4f1a\u62a5\u9519\u3002 clear() \uff1a\u6e05\u7a7a\u96c6\u5408\u4e2d\u7684\u6240\u6709\u5143\u7d20\u3002 len() \uff1a\u8fd4\u56de\u96c6\u5408\u4e2d\u5143\u7d20\u7684\u6570\u91cf\u3002 in \uff1a\u5224\u65ad\u67d0\u4e2a\u5143\u7d20\u662f\u5426\u5728\u96c6\u5408\u4e2d\u3002 # \u521b\u5efa\u96c6\u5408 languages = {\"Python\", \"Java\", \"JavaScript\"} # \u5411\u96c6\u5408\u4e2d\u6dfb\u52a0\u5143\u7d20 languages.add(\"Ruby\") print(languages) # \u8f93\u51fa: {'Python', 'Ruby', 'Java', 'JavaScript'} # \u5220\u9664\u5143\u7d20 languages.remove(\"JavaScript\") print(languages) # \u8f93\u51fa: {'Python', 'Ruby', 'Java'} # \u83b7\u53d6\u96c6\u5408\u7684\u957f\u5ea6 print(len(languages)) # \u8f93\u51fa: 3 # \u68c0\u67e5\u5143\u7d20\u662f\u5426\u5b58\u5728 print(\"Python\" in languages) # \u8f93\u51fa: True # \u6e05\u7a7a\u96c6\u5408 languages.clear() print(languages) # \u8f93\u51fa: set()","title":"1.2 \u96c6\u5408\u7684\u7279\u6027"},{"location":"lesson10/Lesson10%20Python/#13-set","text":"\u53bb\u91cd \uff1a\u5f53\u9700\u8981\u53bb\u9664\u91cd\u590d\u5143\u7d20\u65f6\uff0c\u96c6\u5408\u975e\u5e38\u6709\u7528\u3002\u4f8b\u5982\uff0c\u4ece\u5217\u8868\u4e2d\u5220\u9664\u91cd\u590d\u9879\u3002 \u96c6\u5408\u64cd\u4f5c \uff1a\u96c6\u5408\u652f\u6301\u5404\u79cd\u96c6\u5408\u8fd0\u7b97\uff0c\u5982\u4ea4\u96c6\u3001\u5e76\u96c6\u548c\u5dee\u96c6\u3002 \u4ea4\u96c6\uff1a\u627e\u5230\u4e24\u4e2a\u96c6\u5408\u4e2d\u5171\u540c\u7684\u5143\u7d20 set1 = {\"A\", \"B\", \"C\"} set2 = {\"B\", \"C\", \"D\"} intersection = set1 & set2 print(intersection) # \u8f93\u51fa: {'B', 'C'} \u5e76\u96c6\uff1a\u5408\u5e76\u4e24\u4e2a\u96c6\u5408\u7684\u6240\u6709\u5143\u7d20 union = set1 | set2 print(union) # \u8f93\u51fa: {'A', 'B', 'C', 'D'} \u5dee\u96c6\uff1a\u627e\u51fa\u53ea\u5b58\u5728\u4e8e\u7b2c\u4e00\u4e2a\u96c6\u5408\u4e2d\u7684\u5143\u7d20 difference = set1 - set2 print(difference) # \u8f93\u51fa: {'A'}","title":"1.3 set \u7684\u5e94\u7528\u573a\u666f"},{"location":"lesson10/Lesson10%20Python/#14","text":"# \u96c6\u5408\u64cd\u4f5c\u7684\u793a\u4f8b set1 = {\"A\", \"B\", \"C\"} set2 = {\"B\", \"C\", \"D\"} # \u4ea4\u96c6 intersection = set1 & set2 print(\"Intersection (\u4ea4\u96c6):\", intersection) # \u8f93\u51fa: {'B', 'C'} # \u5e76\u96c6 union = set1 | set2 print(\"Union (\u5e76\u96c6):\", union) # \u8f93\u51fa: {'A', 'B', 'C', 'D'} # \u5dee\u96c6 difference = set1 - set2 print(\"Difference (\u5dee\u96c6):\", difference) # \u8f93\u51fa: {'A'}","title":"1.4 \u5b8c\u6574\u5b9e\u4f8b"},{"location":"lesson10/Lesson10%20Python/#2","text":"","title":"2. \u4f8b\u9898\u8bb2\u89e3"},{"location":"lesson10/Lesson10%20Python/#21-lc349","text":"","title":"2.1 LC349 \u4e24\u4e2a\u6570\u7ec4\u7684\u4ea4\u96c6"},{"location":"lesson10/Lesson10%20Python/#_3","text":"\u7ed9\u5b9a\u4e24\u4e2a\u6570\u7ec4 nums1 \u548c nums2 \uff0c\u8fd4\u56de\u5b83\u4eec\u7684 \u4ea4\u96c6 \u3002 \u8f93\u51fa\u7ed3\u679c\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u4e00\u5b9a\u662f\u552f\u4e00\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u4e0d\u8003\u8651\u8f93\u51fa\u7ed3\u679c\u7684\u987a\u5e8f \u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"lesson10/Lesson10%20Python/#1_1","text":"\u521d\u59cb\u5316\u96c6\u5408 \uff1a\u9996\u5148\uff0c\u5c06\u5176\u4e2d\u4e00\u4e2a\u6570\u7ec4\uff08\u4f8b\u5982 nums2 \uff09\u8f6c\u6362\u4e3a\u96c6\u5408\uff0c\u8fd9\u6837\u6211\u4eec\u53ef\u4ee5\u5feb\u901f\u68c0\u67e5\u5143\u7d20\u662f\u5426\u5b58\u5728\u3002 \u521b\u5efa\u7ed3\u679c\u96c6\u5408 \uff1a\u521d\u59cb\u5316\u4e00\u4e2a\u7a7a\u96c6\u5408\uff0c\u7528\u4e8e\u5b58\u50a8\u6700\u7ec8\u7684\u4ea4\u96c6\u7ed3\u679c\u3002 \u904d\u5386\u5e76\u68c0\u67e5 \uff1a\u904d\u5386\u53e6\u4e00\u4e2a\u6570\u7ec4\uff08\u4f8b\u5982 nums1 \uff09\uff0c\u5bf9\u4e8e\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\uff0c\u68c0\u67e5\u5b83\u662f\u5426\u5b58\u5728\u4e8e nums2 \u7684\u96c6\u5408\u4e2d\u3002 \u6dfb\u52a0\u5230\u7ed3\u679c\u96c6\u5408 \uff1a\u5982\u679c\u5143\u7d20\u5b58\u5728\u4e8e nums2 \u7684\u96c6\u5408\u4e2d\uff0c\u5c06\u5176\u6dfb\u52a0\u5230\u7ed3\u679c\u96c6\u5408\u4e2d\uff0c\u5e76\u4ece nums2 \u7684\u96c6\u5408\u4e2d\u79fb\u9664\u8be5\u5143\u7d20\uff0c\u4ee5\u786e\u4fdd\u7ed3\u679c\u4e2d\u7684\u5143\u7d20\u662f\u552f\u4e00\u7684\u3002 \u8f6c\u6362\u4e3a\u5217\u8868 \uff1a\u6700\u540e\uff0c\u5c06\u7ed3\u679c\u96c6\u5408\u8f6c\u6362\u4e3a\u5217\u8868\u5e76\u8fd4\u56de\u3002","title":"\u89e3\u6cd51 \u601d\u8def\u5206\u6790"},{"location":"lesson10/Lesson10%20Python/#_4","text":"class Solution: def intersection(self, nums1: List[int], nums2: List[int]) -> List[int]: # \u5c06nums2\u8f6c\u6362\u4e3a\u96c6\u5408 set2 = set(nums2) # \u4f7f\u7528\u96c6\u5408\u6765\u5b58\u50a8\u4ea4\u96c6\u7ed3\u679c intersect_set = set() # \u904d\u5386nums1\uff0c\u68c0\u67e5\u6bcf\u4e2a\u5143\u7d20\u662f\u5426\u5728set2\u4e2d for num in nums1: if num in set2: intersect_set.add(num) # \u4eceset2\u4e2d\u79fb\u9664\u8be5\u5143\u7d20\uff0c\u786e\u4fdd\u7ed3\u679c\u4e2d\u5143\u7d20\u552f\u4e00 set2.remove(num) # \u8fd4\u56de\u7ed3\u679c\u96c6\u5408\u8f6c\u6362\u4e3a\u5217\u8868 return list(intersect_set)","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson10/Lesson10%20Python/#2_1","text":"1.\u5c06\u4e24\u4e2a\u6570\u7ec4\u53d8\u4e3a\u4f7f\u7528set()\u53d8\u4e3a\u96c6\u5408 2.\u76f4\u63a5\u4f7f\u7528&\u8fd0\u7b97\u7b26\u6765\u83b7\u5f97\u4e24\u4e2a\u96c6\u5408\u7684\u4ea4\u96c6 3.\u8fd4\u56delist","title":"\u89e3\u6cd52 \u601d\u8def\u5206\u6790"},{"location":"lesson10/Lesson10%20Python/#_5","text":"class Solution: def intersection(self, nums1: List[int], nums2: List[int]) -> List[int]: set1 = set(nums1) set2 = set(nums2) # \u6c42\u4ea4\u96c6\u5e76\u8fd4\u56de return list(set1 & set2)","title":"\u53c2\u8003\u7b54\u6848\uff1a"},{"location":"lesson10/Lesson10%20Python/#22-lc645","text":"","title":"2.2 LC645 \u9519\u8bef\u7684\u96c6\u5408"},{"location":"lesson10/Lesson10%20Python/#_6","text":"\u96c6\u5408 s \u5305\u542b\u4ece 1 \u5230 n \u7684\u6574\u6570\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u56e0\u4e3a\u6570\u636e\u9519\u8bef\uff0c\u5bfc\u81f4\u96c6\u5408\u91cc\u9762\u67d0\u4e00\u4e2a\u6570\u5b57\u590d\u5236\u4e86\u6210\u4e86\u96c6\u5408\u91cc\u9762\u7684\u53e6\u5916\u4e00\u4e2a\u6570\u5b57\u7684\u503c\uff0c\u5bfc\u81f4\u96c6\u5408\u4e22\u5931\u4e86\u4e00\u4e2a\u6570\u5b57\uff0c\u5e76\u4e14\u6709\u4e00\u4e2a\u6570\u5b57\u91cd\u590d \u3002 \u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4 nums \u4ee3\u8868\u4e86\u96c6\u5408 S \u53d1\u751f\u9519\u8bef\u540e\u7684\u7ed3\u679c\u3002 \u8bf7\u4f60\u627e\u51fa\u91cd\u590d\u51fa\u73b0\u7684\u6574\u6570\uff0c\u518d\u627e\u5230\u4e22\u5931\u7684\u6574\u6570\uff0c\u5c06\u5b83\u4eec\u4ee5\u6570\u7ec4\u7684\u5f62\u5f0f\u8fd4\u56de\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson10/Lesson10%20Python/#_7","text":"\u4f7f\u7528\u96c6\u5408\u6765\u5b58\u50a8\u51fa\u73b0\u8fc7\u7684\u6570\u5b57\uff0c\u627e\u5230\u91cd\u590d\u7684\u6570\u5b57\u3002 \u904d\u5386 1 \u5230 n \u7684\u6570\u5b57\uff0c\u627e\u51fa\u4e22\u5931\u7684\u90a3\u4e2a\u3002 \u8fd4\u56de\u91cd\u590d\u7684\u6570\u5b57\u548c\u4e22\u5931\u7684\u6570\u5b57\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson10/Lesson10%20Python/#_8","text":"class Solution: def findErrorNums(self, nums: List[int]) -> List[int]: num_set = set() duplicate = 0 n = len(nums) # \u67e5\u627e\u91cd\u590d\u7684\u6570\u5b57 for num in nums: if num in num_set: duplicate = num else: num_set.add(num) # \u67e5\u627e\u4e22\u5931\u7684\u6570\u5b57 for i in range(1, n+1): if i not in num_set: missing = i break return [duplicate, missing]","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson10/Lesson10%20Python/#3","text":"","title":"3. \u4e3e\u4e00\u53cd\u4e09"},{"location":"lesson10/Lesson10%20Python/#31-lc575","text":"","title":"3.1 LC575 \u5206\u7cd6\u679c"},{"location":"lesson10/Lesson10%20Python/#_9","text":"Alice \u6709 n \u679a\u7cd6\uff0c\u5176\u4e2d\u7b2c i \u679a\u7cd6\u7684\u7c7b\u578b\u4e3a candyType[i] \u3002Alice \u6ce8\u610f\u5230\u5979\u7684\u4f53\u91cd\u6b63\u5728\u589e\u957f\uff0c\u6240\u4ee5\u524d\u53bb\u62dc\u8bbf\u4e86\u4e00\u4f4d\u533b\u751f\u3002 \u533b\u751f\u5efa\u8bae Alice \u8981\u5c11\u6444\u5165\u7cd6\u5206\uff0c\u53ea\u5403\u6389\u5979\u6240\u6709\u7cd6\u7684 n / 2 \u5373\u53ef\uff08n \u662f\u4e00\u4e2a\u5076\u6570\uff09\u3002Alice \u975e\u5e38\u559c\u6b22\u8fd9\u4e9b\u7cd6\uff0c\u5979\u60f3\u8981\u5728\u9075\u5faa\u533b\u751f\u5efa\u8bae\u7684\u60c5\u51b5\u4e0b\uff0c\u5c3d\u53ef\u80fd\u5403\u5230\u6700\u591a\u4e0d\u540c\u79cd\u7c7b\u7684\u7cd6\u3002 \u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u6574\u6570\u6570\u7ec4 candyType \u3002 \u8fd4\u56de\uff1a Alice \u5728\u4ec5\u5403\u6389 n / 2 \u679a\u7cd6\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u5403\u5230\u7cd6\u7684\u6700\u591a\u79cd\u7c7b\u6570\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson10/Lesson10%20Python/#_10","text":"\u4f7f\u7528\u96c6\u5408\u53bb\u91cd\u8ba1\u7b97\u7cd6\u679c\u7684\u79cd\u7c7b\u6570\u3002 \u8fd4\u56de\u7cd6\u679c\u79cd\u7c7b\u6570\u4e0e\u53ef\u5403\u7cd6\u679c\u6570\u91cf\u4e2d\u7684\u8f83\u5c0f\u503c\u3002","title":"\u89e3\u9898\u601d\u8def"},{"location":"lesson10/Lesson10%20Python/#_11","text":"class Solution: def distributeCandies(self, candyType: List[int]) -> int: # \u4f7f\u7528\u96c6\u5408\u6765\u53bb\u91cd unique_candies = set(candyType) # Alice \u80fd\u5403\u7684\u7cd6\u679c\u6570\u91cf n = len(candyType) // 2 # \u8fd4\u56de\u80fd\u5403\u7684\u6700\u591a\u79cd\u7c7b return min(len(unique_candies), n)","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson10/Lesson10%20Python/#_12","text":"\u79cd\u7c7b\u6570 vs \u53ef\u5403\u6570\u91cf \uff1a \u79cd\u7c7b\u6570 (len(unique_candies)) \uff1a\u8fd9\u662f Alice \u53ef\u4ee5\u9009\u62e9\u7684\u4e0d\u540c\u7cd6\u7684\u7c7b\u578b\u6570\u91cf\u3002\u5982\u679c \u79cd\u7c7b\u6570 \u5c0f\u4e8e \u53ef\u5403\u6570\u91cf \uff0c\u8fd9\u610f\u5473\u7740 Alice \u53ef\u4ee5\u5403\u6389\u66f4\u591a\u7cd6\uff0c\u4f46\u7531\u4e8e\u7cd6\u7684\u79cd\u7c7b\u4e0d\u8db3\uff0c\u5979\u7684\u9009\u62e9\u4f1a\u53d7\u5230\u9650\u5236\u3002 \u53ef\u5403\u6570\u91cf (n) \uff1a\u8fd9\u662f Alice \u6839\u636e\u533b\u751f\u5efa\u8bae\u80fd\u5403\u7684\u7cd6\u7684\u6570\u91cf\u3002\u5982\u679c \u53ef\u5403\u6570\u91cf \u5c0f\u4e8e \u79cd\u7c7b\u6570 \uff0c\u8fd9\u610f\u5473\u7740\u867d\u7136 Alice \u62e5\u6709\u8db3\u591f\u591a\u7684\u7cd6\u79cd\u7c7b\uff0c\u4f46\u5979\u53ea\u80fd\u9009\u62e9\u4e00\u90e8\u5206\uff0c\u56e0\u4e3a\u5979\u4e0d\u80fd\u5403\u8d85\u8fc7\u5979\u7684\u914d\u989d\u3002","title":"\u903b\u8f91\u63a8\u7406"},{"location":"lesson10/Lesson10%20Python/#_13","text":"\u4f7f\u7528 Python \u5185\u7f6e\u7684 min() \u51fd\u6570\u6765\u8ba1\u7b97\u6700\u7ec8\u7ed3\u679c\uff0c\u786e\u4fdd Alice \u5728\u5403\u7cd6\u6570\u91cf\u548c\u7cd6\u79cd\u7c7b\u4e4b\u95f4\u505a\u51fa\u5408\u7406\u7684\u9009\u62e9\u3002\u5177\u4f53\u6765\u8bf4\uff1a \u5982\u679c \u79cd\u7c7b\u6570 \u5927\u4e8e \u53ef\u5403\u6570\u91cfn\uff0c\u5219 Alice \u53ea\u80fd\u5403 n \u4e2a\u7cd6\uff0c\u5373\u4f7f\u6709\u66f4\u591a\u79cd\u7c7b\uff0c\u5979\u4e5f\u53ea\u80fd\u9009\u62e9\u4e00\u90e8\u5206\u3002 \u5982\u679c \u79cd\u7c7b\u6570 \u5c0f\u4e8e \u53ef\u5403\u6570\u91cfn\uff0c\u5219 Alice \u53ef\u4ee5\u9009\u62e9\u6240\u6709\u4e0d\u540c\u79cd\u7c7b\u7684\u7cd6\uff0c\u4e0d\u7528\u62c5\u5fc3\u6570\u91cf\u9650\u5236\u3002","title":"\u4e3a\u4ec0\u4e48\u53d6\u6700\u5c0f\u503c"},{"location":"lesson10/Lesson10%20Python/#32-lc771","text":"","title":"3.2 LC771 \u5b9d\u77f3\u4e0e\u77f3\u5934"},{"location":"lesson10/Lesson10%20Python/#_14","text":"\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 jewels \u4ee3\u8868\u77f3\u5934\u4e2d\u5b9d\u77f3\u7684\u7c7b\u578b\uff0c\u53e6\u6709\u4e00\u4e2a\u5b57\u7b26\u4e32 stones \u4ee3\u8868\u4f60\u62e5\u6709\u7684\u77f3\u5934\u3002 stones \u4e2d\u6bcf\u4e2a\u5b57\u7b26\u4ee3\u8868\u4e86\u4e00\u79cd\u4f60\u62e5\u6709\u7684\u77f3\u5934\u7684\u7c7b\u578b\uff0c\u4f60\u60f3\u77e5\u9053\u4f60\u62e5\u6709\u7684\u77f3\u5934\u4e2d\u6709\u591a\u5c11\u662f\u5b9d\u77f3\u3002 \u5b57\u6bcd\u533a\u5206\u5927\u5c0f\u5199\uff0c\u56e0\u6b64 \"a\" \u548c \"A\" \u662f\u4e0d\u540c\u7c7b\u578b\u7684\u77f3\u5934\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson10/Lesson10%20Python/#_15","text":"\u4f7f\u7528\u96c6\u5408\u5b58\u50a8\u5b9d\u77f3\u7684\u7c7b\u578b\u3002 \u904d\u5386\u77f3\u5934\u7684\u5b57\u7b26\u4e32\uff0c\u68c0\u67e5\u662f\u5426\u4e3a\u5b9d\u77f3\uff0c\u8ba1\u6570\u51fa\u73b0\u6b21\u6570\u3002","title":"\u89e3\u9898\u601d\u8def\uff1a"},{"location":"lesson10/Lesson10%20Python/#_16","text":"class Solution: def numJewelsInStones(self, jewels: str, stones: str) -> int: jewel_set = set(jewels) # \u8ba1\u6570\u77f3\u5934\u4e2d\u5b9d\u77f3\u7684\u6570\u91cf count = 0 for stone in stones: if stone in jewel_set: count += 1 return count","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson10/Lesson10%20Python/#4","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC 187 \u91cd\u590d\u7684 DNA \u5e8f\u5217 \u627e\u5230\u6240\u6709\u51fa\u73b0\u6b21\u6570\u8d85\u8fc7\u4e00\u6b21\u7684 DNA \u5e8f\u5217\u3002 LC 961 N \u6b21\u91cd\u590d\u5143\u7d20\u5728 2N \u6570\u7ec4\u4e2d \u5728\u957f\u5ea6\u4e3a 2N \u7684\u6570\u7ec4\u4e2d\u627e\u5230\u51fa\u73b0 N \u6b21\u7684\u5143\u7d20\u3002 LC 2441 \u5b58\u5728\u5176\u8d1f\u6570\u7684\u6700\u5927\u6b63\u6574\u6570 \u627e\u5230\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u5176\u8d1f\u6570\u4e5f\u5728\u6570\u7ec4\u4e2d\u5b58\u5728\u3002 LC 2357 \u901a\u8fc7\u51cf\u53bb\u76f8\u540c\u6570\u4f7f\u6570\u7ec4\u4e3a\u96f6 \u901a\u8fc7\u51cf\u53bb\u76f8\u540c\u7684\u6570\u4f7f\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u5143\u7d20\u53d8\u4e3a\u96f6\u7684\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\u3002 LC 217 \u5b58\u5728\u91cd\u590d\u5143\u7d20 \u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4nums\uff0c\u5982\u679c\u4efb\u4e00\u503c\u5728\u6570\u7ec4\u4e2d\u51fa\u73b0\u81f3\u5c11\u4e24\u6b21\uff0c\u8fd4\u56detrue\uff0c\u5426\u5219false\u3002","title":"4. \u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson11/Lesson11%20C%2B%2B/","text":"Lesson 11: unordered_map \u4e13\u9898 \u76ee\u5f55 \u76ee\u5f55 1. \u77e5\u8bc6\u4ecb\u7ecd - 1.1 \u54c8\u5e0c\u8868\u5e38\u7528\u64cd\u4f5c - 1.2 \u54c8\u5e0c\u8868\u7b80\u5355\u5b9e\u73b0 - 1.3 \u54c8\u5e0c\u51b2\u7a81\u4e0e\u6269\u5bb9 - 1.4 unordered_map \u548c map \u7684\u533a\u522b 2. \u9891\u7387\u7edf\u8ba1\u4e0e\u8ba1\u6570 - 2.1 \u8bcd\u9891\u7edf\u8ba1\u4ecb\u7ecd - 2.2 \u4f8b\u9898\u8bb2\u89e3 - 2.2.1 LC 242 \u6709\u6548\u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd - 2.3 \u4e3e\u4e00\u53cd\u4e09 - 2.3.1 LC 387 \u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u552f\u4e00\u5b57\u7b26 3. \u5feb\u901f\u67e5\u627e - 3.1 \u5feb\u901f\u67e5\u627e\u4ecb\u7ecd - 3.2 \u4f8b\u9898\u8bb2\u89e3 - 3.2.1 LC 1 \u4e24\u6570\u4e4b\u548c - 3.3 \u4e3e\u4e00\u53cd\u4e09 - 3.3.1 LC 217 \u5b58\u5728\u91cd\u590d\u5143\u7d20 4. \u54c8\u5e0c\u6620\u5c04 - 4.1 \u54c8\u5e0c\u6620\u5c04\u4ecb\u7ecd - 4.2 \u4f8b\u9898\u8bb2\u89e3 - 4.2.1 LC 697 \u6570\u7ec4\u7684\u5ea6 - 4.3 \u4e3e\u4e00\u53cd\u4e09 - 4.3.1 LC 205 \u540c\u6784\u5b57\u7b26\u4e32 - 4.3.2 LC 219 \u5b58\u5728\u91cd\u590d\u5143\u7d20II 5. \u8bfe\u540e\u7ec3\u4e60 1 \u77e5\u8bc6\u4ecb\u7ecd \u5728 C++ \u4e2d\uff0c unordered_map \u548c map \u90fd\u662f\u7528\u4e8e\u5b58\u50a8\u952e\u503c\u5bf9\u7684\u5bb9\u5668\u3002 unordered_map \u662f\u4e00\u79cd\u9ad8\u6548\u7684\u54c8\u5e0c\u8868\u5b9e\u73b0\uff0c\u63d0\u4f9b\u4e86\u975e\u5e38\u5feb\u901f\u7684\u67e5\u627e\u3001\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\uff08\u672c\u7ae0\u91cd\u70b9\u8bb2\u89e3 unordered_map \uff09\u3002 map \u662f\u57fa\u4e8e\u7ea2\u9ed1\u6811\u5b9e\u73b0\u7684\u6709\u5e8f\u952e\u503c\u5bf9\u5bb9\u5668\u3002\u54c8\u5e0c\u8868\uff08hash table\uff09\u901a\u8fc7\u5efa\u7acb\u952e key \u4e0e\u503c value \u4e4b\u95f4\u7684\u6620\u5c04\uff0c\u5b9e\u73b0\u9ad8\u6548\u7684\u5143\u7d20\u67e5\u8be2\u3002\u5177\u4f53\u800c\u8a00\uff0c\u6211\u4eec\u5411\u54c8\u5e0c\u8868\u4e2d\u8f93\u5165\u4e00\u4e2a\u952e key \uff0c\u5219\u53ef\u4ee5\u5feb\u901f\u83b7\u53d6\u5bf9\u5e94\u7684\u503c value \u3002 \u7ed9\u5b9a n \u4e2a\u5b66\u751f\uff0c\u6bcf\u4e2a\u5b66\u751f\u90fd\u6709\u201c\u59d3\u540d\u201d\u548c\u201c\u5b66\u53f7\u201d\u4e24\u9879\u6570\u636e\u3002\u5047\u5982\u6211\u4eec\u5e0c\u671b\u5b9e\u73b0\u201c\u8f93\u5165\u4e00\u4e2a\u5b66\u53f7\uff0c\u8fd4\u56de\u5bf9\u5e94\u7684\u59d3\u540d\u201d\u7684\u67e5\u8be2\u529f\u80fd\uff0c\u5219\u53ef\u4ee5\u91c7\u7528\u4e0b\u56fe\u6240\u793a\u7684\u54c8\u5e0c\u8868\u6765\u5b9e\u73b0\u3002 1.1 \u54c8\u5e0c\u8868\u5e38\u7528\u64cd\u4f5c \u54c8\u5e0c\u8868\u7684\u5e38\u89c1\u64cd\u4f5c\u5305\u62ec\uff1a\u521d\u59cb\u5316\u3001\u67e5\u8be2\u64cd\u4f5c\u3001\u6dfb\u52a0\u952e\u503c\u5bf9\u548c\u5220\u9664\u952e\u503c\u5bf9\u7b49\u3002 #include <unordered_map> #include <iostream> using namespace std; int main() { // \u521d\u59cb\u5316\u54c8\u5e0c\u8868 unordered_map<int, string> hmap; // \u6dfb\u52a0\u64cd\u4f5c\uff1a\u5728\u54c8\u5e0c\u8868\u4e2d\u6dfb\u52a0\u952e\u503c\u5bf9 (key, value) hmap[12836] = \"\u5c0f\u54c8\"; hmap[15937] = \"\u5c0f\u5570\"; hmap[16750] = \"\u5c0f\u7b97\"; hmap[13276] = \"\u5c0f\u6cd5\"; hmap[10583] = \"\u5c0f\u9e2d\"; // \u67e5\u8be2\u64cd\u4f5c\uff1a\u5411\u54c8\u5e0c\u8868\u4e2d\u8f93\u5165\u952e key\uff0c\u5f97\u5230\u503c value string name = hmap[15937]; cout << name << endl; // \u8f93\u51fa: \u5c0f\u5570 // \u5220\u9664\u64cd\u4f5c\uff1a\u5728\u54c8\u5e0c\u8868\u4e2d\u5220\u9664\u952e\u503c\u5bf9 (key, value) hmap.erase(10583); for (const auto& pair : hmap) { cout << pair.first << \" -> \" << pair.second << endl; } // \u4fee\u6539\u64cd\u4f5c hmap[10583] = \"\u5c0f\u9e45\"; for (const auto& pair : hmap) { cout << pair.first << \" -> \" << pair.second << endl; } return 0; } \u8f93\u51fa\uff1a \u5c0f\u5570 12836 -> \u5c0f\u54c8 15937 -> \u5c0f\u5570 16750 -> \u5c0f\u7b97 13276 -> \u5c0f\u6cd5 12836 -> \u5c0f\u54c8 15937 -> \u5c0f\u5570 16750 -> \u5c0f\u7b97 13276 -> \u5c0f\u6cd5 10583 -> \u5c0f\u9e45 \u54c8\u5e0c\u8868\u7684\u904d\u5386\u6709\u4e09\u79cd\u5e38\u7528\u65b9\u5f0f\uff1a\u904d\u5386\u952e\u503c\u5bf9\u3001\u904d\u5386\u952e\u548c\u904d\u5386\u503c\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a #include <unordered_map> #include <iostream> using namespace std; int main() { unordered_map<int, string> hmap; hmap[12836] = \"\u5c0f\u54c8\"; hmap[15937] = \"\u5c0f\u5570\"; hmap[16750] = \"\u5c0f\u7b97\"; hmap[13276] = \"\u5c0f\u6cd5\"; hmap[10583] = \"\u5c0f\u9e2d\"; // \u904d\u5386\u54c8\u5e0c\u8868\uff1a\u904d\u5386\u952e\u503c\u5bf9 key->value for (const auto& pair : hmap) { cout << pair.first << \" -> \" << pair.second << endl; } // \u904d\u5386\u952e key for (const auto& pair : hmap) { cout << pair.first << endl; } // \u904d\u5386\u503c value for (const auto& pair : hmap) { cout << pair.second << endl; } return 0; } \u8f93\u51fa\uff1a 12836 -> \u5c0f\u54c8 15937 -> \u5c0f\u5570 16750 -> \u5c0f\u7b97 13276 -> \u5c0f\u6cd5 10583 -> \u5c0f\u9e2d 12836 15937 16750 13276 10583 \u5c0f\u54c8 \u5c0f\u5570 \u5c0f\u7b97 \u5c0f\u6cd5 \u5c0f\u9e2d 1.2 \u54c8\u5e0c\u8868\u7b80\u5355\u5b9e\u73b0 \u6211\u4eec\u5148\u8003\u8651\u6700\u7b80\u5355\u7684\u60c5\u51b5\uff0c \u4ec5\u7528\u4e00\u4e2a\u6570\u7ec4\u6765\u5b9e\u73b0\u54c8\u5e0c\u8868 \u3002\u5728\u54c8\u5e0c\u8868\u4e2d\uff0c\u6211\u4eec\u5c06\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u7a7a\u4f4d\u79f0\u4e3a\u6876\uff08bucket\uff09\uff0c\u6bcf\u4e2a\u6876\u53ef\u5b58\u50a8\u4e00\u4e2a\u952e\u503c\u5bf9\u3002\u56e0\u6b64\uff0c\u67e5\u8be2\u64cd\u4f5c\u5c31\u662f\u627e\u5230 key \u5bf9\u5e94\u7684\u6876\uff0c\u5e76\u5728\u6876\u4e2d\u83b7\u53d6 value \u3002 \u90a3\u4e48\uff0c\u5982\u4f55\u57fa\u4e8e key \u5b9a\u4f4d\u5bf9\u5e94\u7684\u6876\u5462\uff1f\u8fd9\u662f\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\uff08hash function\uff09\u5b9e\u73b0\u7684\u3002\u54c8\u5e0c\u51fd\u6570\u7684\u4f5c\u7528\u662f\u5c06\u4e00\u4e2a\u8f83\u5927\u7684\u8f93\u5165\u7a7a\u95f4\u6620\u5c04\u5230\u4e00\u4e2a\u8f83\u5c0f\u7684\u8f93\u51fa\u7a7a\u95f4\u3002\u5728\u54c8\u5e0c\u8868\u4e2d\uff0c\u8f93\u5165\u7a7a\u95f4\u662f\u6240\u6709 key \uff0c\u8f93\u51fa\u7a7a\u95f4\u662f\u6240\u6709\u6876\uff08\u6570\u7ec4\u7d22\u5f15\uff09\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8f93\u5165\u4e00\u4e2a key \uff0c \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u5f97\u5230\u8be5 key \u5bf9\u5e94\u7684\u952e\u503c\u5bf9\u5728\u6570\u7ec4\u4e2d\u7684\u5b58\u50a8\u4f4d\u7f6e \u3002 \u8f93\u5165\u4e00\u4e2a key \uff0c\u54c8\u5e0c\u51fd\u6570\u7684\u8ba1\u7b97\u8fc7\u7a0b\u5206\u4e3a\u4ee5\u4e0b\u4e24\u6b65\u3002 \u901a\u8fc7\u67d0\u79cd\u54c8\u5e0c\u7b97\u6cd5 hash() \u8ba1\u7b97\u5f97\u5230\u54c8\u5e0c\u503c\u3002 \u5c06\u54c8\u5e0c\u503c\u5bf9\u6876\u6570\u91cf\uff08\u6570\u7ec4\u957f\u5ea6\uff09 capacity \u53d6\u6a21\uff0c\u4ece\u800c\u83b7\u53d6\u8be5 key \u5bf9\u5e94\u7684\u6570\u7ec4\u7d22\u5f15 index \u3002 index = hash(key) % capacity \u968f\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528 index \u5728\u54c8\u5e0c\u8868\u4e2d\u8bbf\u95ee\u5bf9\u5e94\u7684\u6876\uff0c\u4ece\u800c\u83b7\u53d6 value \u3002 \u8bbe\u6570\u7ec4\u957f\u5ea6 capacity = 100 \u3001\u54c8\u5e0c\u7b97\u6cd5 hash(key) = key \uff0c\u6613\u5f97\u54c8\u5e0c\u51fd\u6570\u4e3a key % 100 \u3002\u4e0b\u56fe\u4ee5 key \u5b66\u53f7\u548c value \u59d3\u540d\u4e3a\u4f8b\uff0c\u5c55\u793a\u4e86\u54c8\u5e0c\u51fd\u6570\u7684\u5de5\u4f5c\u539f\u7406\u3002 \u4e0b\u56fe\u5c55\u793a\u4e86\u54c8\u5e0c\u51fd\u6570\u7684\u5de5\u4f5c\u539f\u7406\uff1a 1.3 \u54c8\u5e0c\u51b2\u7a81\u4e0e\u6269\u5bb9 \u4ece\u672c\u8d28\u4e0a\u770b\uff0c\u54c8\u5e0c\u51fd\u6570\u7684\u4f5c\u7528\u662f\u5c06\u6240\u6709 key \u6784\u6210\u7684\u8f93\u5165\u7a7a\u95f4\u6620\u5c04\u5230\u6570\u7ec4\u6240\u6709\u7d22\u5f15\u6784\u6210\u7684\u8f93\u51fa\u7a7a\u95f4\uff0c\u800c\u8f93\u5165\u7a7a\u95f4\u5f80\u5f80\u8fdc\u5927\u4e8e\u8f93\u51fa\u7a7a\u95f4\u3002\u56e0\u6b64\uff0c \u7406\u8bba\u4e0a\u4e00\u5b9a\u5b58\u5728\u201c\u591a\u4e2a\u8f93\u5165\u5bf9\u5e94\u76f8\u540c\u8f93\u51fa\u201d\u7684\u60c5\u51b5 \u3002 \u5bf9\u4e8e\u4e0a\u8ff0\u793a\u4f8b\u4e2d\u7684\u54c8\u5e0c\u51fd\u6570\uff0c\u5f53\u8f93\u5165\u7684 key \u540e\u4e24\u4f4d\u76f8\u540c\u65f6\uff0c\u54c8\u5e0c\u51fd\u6570\u7684\u8f93\u51fa\u7ed3\u679c\u4e5f\u76f8\u540c\u3002\u4f8b\u5982\uff0c\u67e5\u8be2\u5b66\u53f7\u4e3a 12836 \u548c 20336 \u7684\u4e24\u4e2a\u5b66\u751f\u65f6\uff0c\u6211\u4eec\u5f97\u5230\uff1a 12836 % 100 = 36 20336 % 100 = 36 \u5982\u4e0b\u56fe\u6240\u793a\uff0c\u4e24\u4e2a\u5b66\u53f7\u6307\u5411\u4e86\u540c\u4e00\u4e2a\u59d3\u540d\uff0c\u8fd9\u663e\u7136\u662f\u4e0d\u5bf9\u7684\u3002\u6211\u4eec\u5c06\u8fd9\u79cd\u591a\u4e2a\u8f93\u5165\u5bf9\u5e94\u540c\u4e00\u8f93\u51fa\u7684\u60c5\u51b5\u79f0\u4e3a\u54c8\u5e0c\u51b2\u7a81\uff08hash collision\uff09\u3002 \u5982\u679c\u51fa\u73b0\u54c8\u5e0c\u51b2\u7a81\u4e86\uff0c\u53ea\u662f\u4f1a\u964d\u4f4e\u67e5\u627e\u7684\u6027\u80fd\uff0c\u56e0\u4e3a\u540c\u4e00\u4e2a\u54c8\u5e0c\u503c\u5bf9\u5e94\u7684\u6876\u5f53\u4e2d\uff0c\u8fd8\u4f1a\u4ee5\u94fe\u8868\u7684\u5f62\u5f0f\u5b58\u50a8\u591a\u4e2a\u503c\uff0c\u5982\u679c\u53d1\u73b0\u54c8\u5e0c\u51b2\u7a81\uff0c\u5c31\u4f1a\u6cbf\u7740\u94fe\u8868\u67e5\u627e\uff0c\u56e0\u4e3a\u662f\u904d\u5386\uff0c\u6240\u4ee5\u6027\u80fd\u4f1a\u964d\u4f4e\u3002 \u5bb9\u6613\u60f3\u5230\uff0c\u54c8\u5e0c\u8868\u5bb9\u91cf n \u8d8a\u5927\uff0c\u591a\u4e2a key \u88ab\u5206\u914d\u5230\u540c\u4e00\u4e2a\u6876\u4e2d\u7684\u6982\u7387\u5c31\u8d8a\u4f4e\uff0c\u51b2\u7a81\u5c31\u8d8a\u5c11\u3002\u56e0\u6b64\uff0c \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6269\u5bb9\u54c8\u5e0c\u8868\u6765\u51cf\u5c11\u54c8\u5e0c\u51b2\u7a81 \u3002 \u5982\u4e0b\u56fe\u6240\u793a\uff0c\u6269\u5bb9\u524d\u952e\u503c\u5bf9 (136, A) \u548c (236, D) \u53d1\u751f\u51b2\u7a81\uff0c\u6269\u5bb9\u540e\u51b2\u7a81\u6d88\u5931\u3002 \u7c7b\u4f3c\u4e8e\u6570\u7ec4\u6269\u5bb9\uff0c\u54c8\u5e0c\u8868\u6269\u5bb9\u9700\u5c06\u6240\u6709\u952e\u503c\u5bf9\u4ece\u539f\u54c8\u5e0c\u8868\u8fc1\u79fb\u81f3\u65b0\u54c8\u5e0c\u8868\uff0c\u975e\u5e38\u8017\u65f6\uff1b\u5e76\u4e14\u7531\u4e8e\u54c8\u5e0c\u8868\u5bb9\u91cf capacity \u6539\u53d8\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u6765\u91cd\u65b0\u8ba1\u7b97\u6240\u6709\u952e\u503c\u5bf9\u7684\u5b58\u50a8\u4f4d\u7f6e\uff0c\u8fd9\u8fdb\u4e00\u6b65\u589e\u52a0\u4e86\u6269\u5bb9\u8fc7\u7a0b\u7684\u8ba1\u7b97\u5f00\u9500\u3002\u4e3a\u6b64\uff0c\u7f16\u7a0b\u8bed\u8a00\u901a\u5e38\u4f1a\u9884\u7559\u8db3\u591f\u5927\u7684\u54c8\u5e0c\u8868\u5bb9\u91cf\uff0c\u9632\u6b62\u9891\u7e41\u6269\u5bb9\u3002 1.4 unordered_map \u548c map \u7684\u533a\u522b \u5728\u524d\u9762\u7684\u8bb2\u89e3\u4e2d\uff0c\u6211\u4eec\u7b80\u5355\u63d0\u5230\u4e86 map \uff0c\u5b83\u662f\u57fa\u4e8e\u7ea2\u9ed1\u6811\u5b9e\u73b0\u7684\uff0c\u5e76\u4e14\u80fd\u591f\u6309\u987a\u5e8f\u5b58\u50a8\u952e\u503c\u5bf9\u3002\u800c\u5728 C++ \u4e2d\uff0c unordered_map \u548c map \u90fd\u662f\u7528\u4e8e\u5b58\u50a8\u952e\u503c\u5bf9\u7684\u5bb9\u5668\uff0c\u4f46\u5b83\u4eec\u7684\u5b9e\u73b0\u65b9\u5f0f\u548c\u4f7f\u7528\u573a\u666f\u6709\u6240\u4e0d\u540c\u3002\u8fd9\u91cc\u7b80\u5355\u63d0\u4e00\u4e0b\u5b83\u4eec\u7684\u533a\u522b\uff0c\u5927\u5bb6\u4e86\u89e3\u4e00\u4e0b\u5c31\u597d\uff0c\u4e0d\u9700\u8981\u6df1\u5165\u7406\u89e3\u3002 \u7279\u6027 unordered_map map \u5e95\u5c42\u5b9e\u73b0 \u54c8\u5e0c\u8868 \u7ea2\u9ed1\u6811 \u952e\u503c\u5bf9\u987a\u5e8f \u65e0\u5e8f\u5b58\u50a8 \u6309\u952e\u7684\u5347\u5e8f\u5b58\u50a8 \u67e5\u627e\u6548\u7387 \u67e5\u627e\u901f\u5ea6\u66f4\u5feb\uff0c\u9002\u5408\u5feb\u901f\u67e5\u627e\u7684\u573a\u666f \u67e5\u627e\u8f83\u6162\uff0c\u4f46\u952e\u503c\u5bf9\u81ea\u52a8\u6709\u5e8f\u5b58\u50a8 \u4f7f\u7528\u573a\u666f \u9002\u5408\u9891\u7e41\u67e5\u627e\u3001\u63d2\u5165\u3001\u5220\u9664\u7684\u64cd\u4f5c \u9002\u5408\u9700\u8981\u6309\u987a\u5e8f\u5b58\u50a8\u548c\u8bbf\u95ee\u7684\u573a\u666f \u4e3a\u4ec0\u4e48 unordered_map \u6bd4 map \u5feb\uff1f unordered_map \u4f7f\u7528\u54c8\u5e0c\u8868\u5b9e\u73b0 \uff1a unordered_map \u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u6765\u5904\u7406\u6bcf\u4e2a\u952e\u3002\u4f60\u53ef\u4ee5\u628a\u54c8\u5e0c\u51fd\u6570\u60f3\u8c61\u6210\u4e00\u4e2a\u667a\u80fd\u5feb\u9012\u5458\uff0c\u8d1f\u8d23\u628a\u6bcf\u4e2a\u952e\uff08\u7c7b\u4f3c\u4e8e\u5305\u88f9\uff09\u9001\u5230\u4e00\u4e2a\u7279\u5b9a\u7684\u5730\u5740\uff08\u4e5f\u5c31\u662f\u5b58\u50a8\u4f4d\u7f6e\uff09\u3002\u8fd9\u4e2a\u201c\u5730\u5740\u201d\u4e0d\u662f\u968f\u610f\u7684\uff0c\u800c\u662f\u901a\u8fc7\u4e00\u4e2a\u56fa\u5b9a\u7684\u8ba1\u7b97\u65b9\u5f0f\uff08\u54c8\u5e0c\u51fd\u6570\uff09\u6765\u786e\u5b9a\u7684\u3002 \u4e3e\u4e2a\u4f8b\u5b50 \uff1a - \u4f60\u6709\u4e00\u4e2a\u952e\u503c\u5bf9\uff0c\u952e\u662f \"apple\"\uff0c\u503c\u662f \"fruit\"\u3002 - \u54c8\u5e0c\u51fd\u6570\u4f1a\u62ff\u5230 \"apple\" \u8fd9\u4e2a\u952e\uff0c\u8fdb\u884c\u67d0\u79cd\u8ba1\u7b97\uff08\u5c31\u50cf\u5feb\u9012\u5458\u6839\u636e\u5730\u5740\u53bb\u5206\u7c7b\u5305\u88f9\u4e00\u6837\uff09\uff0c\u7136\u540e\u76f4\u63a5\u628a\u5b83\u9001\u5230\u6307\u5b9a\u7684\u4f4d\u7f6e\uff0c\u6bd4\u5982\u5185\u5b58\u7684\u67d0\u4e2a\u201c\u6876\u201d\uff08bucket\uff09\u91cc\u3002 - \u5f53\u4f60\u4e4b\u540e\u60f3\u67e5\u627e \"apple\" \u5bf9\u5e94\u7684\u503c\u65f6\uff0c\u54c8\u5e0c\u51fd\u6570\u4f1a\u518d\u6b21\u6839\u636e \"apple\" \u8fdb\u884c\u540c\u6837\u7684\u8ba1\u7b97\uff0c\u544a\u8bc9\u4f60\u5b83\u88ab\u653e\u5728\u5185\u5b58\u7684\u54ea\u4e2a\u201c\u6876\u201d\u91cc\u3002\u7531\u4e8e\u8fd9\u4e2a\u8ba1\u7b97\u975e\u5e38\u76f4\u63a5\uff0c\u901f\u5ea6\u975e\u5e38\u5feb\u3002 \u4e3a\u4ec0\u4e48\u8fd9\u6837\u5feb\uff1f - \u56e0\u4e3a\u54c8\u5e0c\u51fd\u6570\u662f\u76f4\u63a5\u8ba1\u7b97\u51fa\u7ed3\u679c\uff0c\u800c\u4e0d\u662f\u50cf map \u90a3\u6837\u6309\u987a\u5e8f\u9010\u4e2a\u6bd4\u5bf9\u952e\u3002 unordered_map \u4e0d\u9700\u8981\u6392\u5e8f\u6216\u8005\u5bf9\u6bd4\uff0c\u53ea\u8981\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u627e\u5230\u6b63\u786e\u7684\u201c\u6876\u201d\uff0c\u5c31\u80fd\u5feb\u901f\u5b9a\u4f4d\u6570\u636e\uff0c\u7c7b\u4f3c\u4e8e\u5feb\u9012\u5458\u628a\u5305\u88f9\u653e\u5230\u51c6\u786e\u7684\u4f4d\u7f6e\u3002 \u65e0\u5e8f\u5b58\u50a8\u7684\u539f\u56e0 \uff1a - \u56e0\u4e3a\u54c8\u5e0c\u8868\u4e2d\u7684\u952e\u503c\u5bf9\u662f\u6839\u636e\u54c8\u5e0c\u51fd\u6570\u7684\u7ed3\u679c\u6765\u653e\u7f6e\u7684\uff0c\u987a\u5e8f\u53d6\u51b3\u4e8e\u54c8\u5e0c\u51fd\u6570\u7684\u8ba1\u7b97\u7ed3\u679c\u3002\u56e0\u6b64\uff0c\u63d2\u5165\u548c\u67e5\u627e\u65f6\u4e0d\u9700\u8981\u5173\u5fc3\u987a\u5e8f\uff0c\u53ea\u8981\u8ba1\u7b97\u51fa\u201c\u6876\u201d\u7684\u4f4d\u7f6e\uff0c\u5c31\u80fd\u7acb\u523b\u8bbf\u95ee\u6570\u636e\u3002 map \u4f7f\u7528\u7ea2\u9ed1\u6811\u5b9e\u73b0 \uff1a map \u4f1a\u81ea\u52a8\u4fdd\u6301\u952e\u503c\u5bf9\u7684\u987a\u5e8f\uff0c\u56e0\u6b64\u6bcf\u6b21\u63d2\u5165\u3001\u5220\u9664\u548c\u67e5\u627e\u65f6\u90fd\u9700\u8981\u8fdb\u884c\u952e\u7684\u6bd4\u5bf9\u548c\u6392\u5e8f\u64cd\u4f5c\u3002\u7531\u4e8e\u8fd9\u4e9b\u64cd\u4f5c\u7684\u5b58\u5728\uff0c map \u7684\u901f\u5ea6\u6bd4 unordered_map \u7a0d\u6162\uff0c\u4f46\u5b83\u80fd\u4fdd\u8bc1\u6570\u636e\u6709\u5e8f\u3002 \u603b\u7ed3\uff1a - \u5982\u679c\u4f60\u4e0d\u9700\u8981\u6570\u636e\u6709\u5e8f\uff0c\u4e14\u9700\u8981\u5feb\u901f\u67e5\u627e\u3001\u63d2\u5165\u6216\u5220\u9664\uff0c unordered_map \u66f4\u9002\u5408\u3002 - \u5982\u679c\u4f60\u9700\u8981\u6309\u987a\u5e8f\u5b58\u50a8\u952e\u503c\u5bf9\uff0c\u90a3\u4e48 map \u66f4\u5408\u9002\uff0c\u5373\u4fbf\u67e5\u627e\u901f\u5ea6\u7a0d\u6162\u4e00\u4e9b\u3002 2 \u9891\u7387\u7edf\u8ba1\u4e0e\u8ba1\u6570 2.1 \u8bcd\u9891\u7edf\u8ba1\u4ecb\u7ecd \u54c8\u5e0c\u8868\uff08 unordered_map \uff09\u6700\u5e38\u89c1\u7684\u7528\u9014\u4e4b\u4e00\u662f \u9891\u7387\u7edf\u8ba1 \uff0c\u5373\u7528\u6765\u7edf\u8ba1\u6570\u636e\u51fa\u73b0\u7684\u6b21\u6570\u6216\u9891\u7387\u3002\u5728\u9700\u8981\u5904\u7406\u5927\u91cf\u6570\u636e\u65f6\uff0c\u54c8\u5e0c\u8868\u53ef\u4ee5\u901a\u8fc7\u952e\u503c\u5bf9\u5feb\u901f\u8bb0\u5f55\u6bcf\u4e2a\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570\u3002\u8fd9\u6837\u7684\u64cd\u4f5c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(1) \uff0c\u56e0\u6b64\u76f8\u6bd4\u4e8e\u4f7f\u7528\u6570\u7ec4\u6216\u5217\u8868\u7684 O(n) \u67e5\u627e\uff0c\u6027\u80fd\u5927\u5e45\u63d0\u5347\u3002 \u8bcd\u9891\u7edf\u8ba1\u662f\u54c8\u5e0c\u6620\u5c04\u7684\u4e00\u79cd\u7279\u6b8a\u5e94\u7528\uff0c\u91cd\u70b9\u5728\u4e8e\u5c06\u4e00\u4e2a\u503c\uff08\u5982\u5b57\u7b26\u3001\u6570\u5b57\u7b49\uff09\u6620\u5c04\u5230\u5176\u51fa\u73b0\u6b21\u6570\u4e0a\u3002\u5b83\u72ed\u4e49\u5730\u5b9a\u4e49\u4e86\u952e\u503c\u5bf9\u4e2d\u7684\u201c\u503c\u201d\u662f\u8be5\u952e\u51fa\u73b0\u7684\u9891\u7387\uff0c\u5e38\u7528\u4e8e\u7edf\u8ba1\u6570\u636e\u96c6\u4e2d\u7684\u5143\u7d20\u9891\u7387\u3002\u8bcd\u9891\u7edf\u8ba1\u901a\u5e38\u7528\u4e8e\u5b57\u7b26\u7edf\u8ba1\u3001\u5143\u7d20\u9891\u7387\u7edf\u8ba1\u7b49\u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u8bcd\u9891\u7edf\u8ba1\u662f\u4e00\u79cd\u7279\u5b9a\u7684\u54c8\u5e0c\u6620\u5c04\uff0c\u72ed\u4e49\u5730\u5c06\u952e\u503c\u5bf9\u5b9a\u4e49\u4e3a\u201c\u5143\u7d20: \u51fa\u73b0\u9891\u7387\u201d\uff0c\u7528\u4e8e\u9891\u7387\u7edf\u8ba1\u95ee\u9898\u4e2d\u3002 \u4f8b\u5982\uff0c\u5728\u5b57\u7b26\u4e32\u4e2d\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u9891\u7387\u65f6\uff0c\u54c8\u5e0c\u8868\u7684 \u952e \u662f\u5b57\u7b26\uff0c \u503c \u662f\u8be5\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\u3002 \u5e38\u89c1\u5e94\u7528\uff1a \u67e5\u627e\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u5143\u7d20 \u5224\u65ad\u6570\u636e\u96c6\u4e2d\u662f\u5426\u5b58\u5728\u91cd\u590d\u5143\u7d20 \u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26/\u6570\u5b57/\u5143\u7d20\u7684\u9891\u7387 #include <iostream> #include <unordered_map> #include <string> using namespace std; unordered_map<char, int> count_frequency(const string& s) { std::unordered_map<char, int> freq_dict; for (char c : s) { if (freq_dict.find(c) != freq_dict.end()) { freq_dict[c] += 1; } else { freq_dict[c] = 1; } } return freq_dict; } 2.2 \u4f8b\u9898\u8bb2\u89e3 2.2.1 LC 242 \u6709\u6548\u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd \u95ee\u9898\u63cf\u8ff0 \u63cf\u8ff0 \uff1a\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32s\u548ct\u3002 \u8981\u6c42 \uff1a\u5224\u65adt\u548cs\u662f\u5426\u4f7f\u7528\u4e86\u76f8\u540c\u7684\u5b57\u7b26\u6784\u6210\uff08\u5b57\u7b26\u51fa\u73b0\u7684\u79cd\u7c7b\u548c\u6570\u76ee\u90fd\u76f8\u540c \u601d\u8def\u5206\u6790 \u5982\u679c\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e0d\u540c\uff0c\u76f4\u63a5\u8fd4\u56de false \uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u53ef\u80fd\u662f\u5b57\u6bcd\u5f02\u4f4d\u8bcd\u3002 \u5982\u679c\u957f\u5ea6\u76f8\u540c\uff0c\u4f7f\u7528 unordered_map \u6765\u7edf\u8ba1\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32 s \u4e2d\u6bcf\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u7136\u540e\u904d\u5386\u5b57\u7b26\u4e32 t \uff0c\u76f8\u5e94\u5730\u51cf\u5c11\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\u3002\u5982\u679c\u5728\u67d0\u4e2a\u65f6\u523b\u5b57\u7b26\u7684\u9891\u7387\u5c0f\u4e8e 0\uff0c\u8868\u793a t \u4e2d\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\u591a\u4e8e s \uff0c\u6b64\u65f6\u76f4\u63a5\u8fd4\u56de false \u3002 \u63d0\u793a \u521b\u5efa\u4e24\u4e2a unordered_map \u50a8\u5b58\u9891\u7387\u6b21\u6570\uff0c\u8fdb\u884c\u6bd4\u8f83\u3002 \u53c2\u8003\u89e3\u7b54\uff1a class Solution { public: bool isAnagram(string s, string t) { // \u5982\u679c\u4e24\u4e2a\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u540c\uff0c\u76f4\u63a5\u8fd4\u56de false if (s.length() != t.length()) { return false; } // \u4f7f\u7528\u4e24\u4e2a unordered_map \u6765\u7edf\u8ba1\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u6bcf\u4e2a\u5b57\u7b26\u7684\u9891\u7387 unordered_map<char, int> count_s, count_t; // \u904d\u5386\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26\u7684\u9891\u7387 for (int i = 0; i < s.length(); ++i) { count_s[s[i]]++; count_t[t[i]]++; } // \u6bd4\u8f83\u4e24\u4e2a\u9891\u7387\u8868\u662f\u5426\u76f8\u7b49 return count_s == count_t; } }; 2.3 \u4e3e\u4e00\u53cd\u4e09 2.3.1 LC 387 \u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u552f\u4e00\u6570\u5b57 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u627e\u5230 \u5b83\u7684\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u7684\u5b57\u7b26\uff0c\u5e76\u8fd4\u56de\u5b83\u7684\u7d22\u5f15 \u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de -1 \u3002 \u601d\u8def\u5206\u6790 \u4e3a\u4e86\u627e\u5230\u5b57\u7b26\u4e32\u4e2d\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u7684\u5b57\u7b26\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e24\u6b21\u904d\u5386\u7684\u65b9\u5f0f\uff1a \u7b2c\u4e00\u6b21\u904d\u5386 \uff1a\u4f7f\u7528\u54c8\u5e0c\u8868\uff08 unordered_map \uff09\u8bb0\u5f55\u6bcf\u4e2a\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570\u3002 \u7b2c\u4e8c\u6b21\u904d\u5386 \uff1a\u68c0\u67e5\u6bcf\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u5e76\u627e\u5230\u7b2c\u4e00\u4e2a\u51fa\u73b0\u6b21\u6570\u4e3a 1 \u7684\u5b57\u7b26\uff0c\u8fd4\u56de\u5b83\u7684\u7d22\u5f15\u3002 \u5982\u679c\u6ca1\u6709\u627e\u5230\u4efb\u4f55\u7b26\u5408\u6761\u4ef6\u7684\u5b57\u7b26\uff0c\u8fd4\u56de -1 \u3002 \u63d0\u793a \u54c8\u5e0c\u8868 \uff08 unordered_map \uff09\u80fd\u591f\u6709\u6548\u5730\u8bb0\u5f55\u6bcf\u4e2a\u5b57\u7b26\u7684\u9891\u7387\u3002 \u6211\u4eec\u901a\u8fc7\u4e24\u6b21\u904d\u5386\u6765\u5b8c\u6210\u8fd9\u4e2a\u4efb\u52a1\uff0c\u7b2c\u4e00\u6b21\u904d\u5386\u7edf\u8ba1\u9891\u7387\uff0c\u7b2c\u4e8c\u6b21\u904d\u5386\u67e5\u627e\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u7684\u5b57\u7b26\u3002 \u53c2\u8003\u793a\u4f8b class Solution { public: int firstUniqChar(string s) { // \u4f7f\u7528 unordered_map \u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570 unordered_map<char, int> count; // \u7b2c\u4e00\u6b21\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570 for (int i = 0; i < s.length(); ++i) { count[s[i]]++; } // \u7b2c\u4e8c\u6b21\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u51fa\u73b0\u6b21\u6570\u4e3a 1 \u7684\u5b57\u7b26 for (int i = 0; i < s.length(); ++i) { if (count[s[i]] == 1) { return i; // \u8fd4\u56de\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u5b57\u7b26\u7684\u7d22\u5f15 } } // \u5982\u679c\u6ca1\u6709\u627e\u5230\u4e0d\u91cd\u590d\u7684\u5b57\u7b26\uff0c\u8fd4\u56de -1 return -1; } }; 3 \u5feb\u901f\u67e5\u627e 3.1 \u5feb\u901f\u67e5\u627e\u4ecb\u7ecd \u5feb\u901f\u67e5\u627e\u662f\u901a\u8fc7\u54c8\u5e0c\u8868\uff08unordered_map\uff09\u5b9e\u73b0\u7684\uff0c\u5b83\u5229\u7528\u54c8\u5e0c\u51fd\u6570\u7684\u6027\u8d28\u5728\u5e38\u6570\u65f6\u95f4\u5185\u5b8c\u6210\u67e5\u627e\u4efb\u52a1\u3002\u5176\u6838\u5fc3\u5728\u4e8e\u9ad8\u6548\u6027\u2014\u2014\u76f8\u6bd4\u4e8e\u5217\u8868\u904d\u5386\u7684 O(n) \u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u54c8\u5e0c\u8868\u901a\u8fc7\u54c8\u5e0c\u67e5\u627e\u53ef\u4ee5\u5728 O(1) \u65f6\u95f4\u5185\u627e\u5230\u5bf9\u5e94\u7684\u503c\u3002\u5feb\u901f\u67e5\u627e\u5e76\u4e0d\u5173\u5fc3\u5177\u4f53\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u800c\u662f\u7740\u91cd\u5f3a\u8c03\u67e5\u627e\u901f\u5ea6\u7684\u63d0\u5347\u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u5feb\u901f\u67e5\u627e\u662f\u54c8\u5e0c\u8868\u5229\u7528\u54c8\u5e0c\u51fd\u6570\u5b9e\u73b0\u7684\u9ad8\u6548\u67e5\u627e\u64cd\u4f5c\uff0c\u5f3a\u8c03\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(1)\uff0c\u9002\u7528\u4e8e\u5728\u6570\u636e\u96c6\u4e2d\u5feb\u901f\u5b9a\u4f4d\u7279\u5b9a\u5143\u7d20\u3002 \u4f8b\u5982\uff0c\u901a\u8fc7\u7ed9\u5b9a\u5b66\u751f\u5b66\u53f7\uff0c\u67e5\u627e\u5bf9\u5e94\u7684\u5b66\u751f\u59d3\u540d\u65f6\uff0c\u54c8\u5e0c\u8868\u53ef\u4ee5\u5feb\u901f\u8fd4\u56de\u67e5\u8be2\u7ed3\u679c\u3002 #include <iostream> #include <unordered_map> using namespace std; int main() { // \u521b\u5efa\u54c8\u5e0c\u8868\uff0c\u5b58\u50a8\u5b66\u53f7\u548c\u59d3\u540d unordered_map<int, string> students = { {1001, \"Alice\"}, {1002, \"Bob\"}, {1003, \"Charlie\"} }; // \u6839\u636e\u5b66\u53f7\u5feb\u901f\u67e5\u627e\u5bf9\u5e94\u7684\u5b66\u751f\u59d3\u540d int student_id = 1002; cout << students[student_id] << endl; // \u8f93\u51fa\uff1aBob return 0; } 3.2\u4f8b\u9898\u8bb2\u89e3 3.2.1 LC 1 \u4e24\u6570\u4e4b\u548c \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u548c\u4e00\u4e2a\u6574\u6570\u76ee\u6807\u503c target \uff0c\u8bf7\u4f60\u5728\u8be5\u6570\u7ec4\u4e2d\u627e\u51fa \u548c\u4e3a\u76ee\u6807\u503c target \u7684\u90a3 \u4e24\u4e2a \u6574\u6570\uff0c\u5e76\u8fd4\u56de\u5b83\u4eec\u7684\u6570\u7ec4\u4e0b\u6807\u3002 \u4f60\u53ef\u4ee5\u5047\u8bbe\u6bcf\u79cd\u8f93\u5165\u53ea\u4f1a\u5bf9\u5e94\u4e00\u4e2a\u7b54\u6848\uff0c\u5e76\u4e14\u4f60\u4e0d\u80fd\u4f7f\u7528\u4e24\u6b21\u76f8\u540c\u7684\u5143\u7d20\u3002 \u4f60\u53ef\u4ee5\u6309\u4efb\u610f\u987a\u5e8f\u8fd4\u56de\u7b54\u6848\u3002 \u601d\u8def\u5206\u6790 \u904d\u5386\u6570\u7ec4\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570 nums[i] \uff1a \u67e5\u627e\u54c8\u5e0c\u8868\u4e2d\u662f\u5426\u5b58\u5728 target - nums[i] \uff0c\u5982\u679c\u5b58\u5728\uff0c\u5219\u8f93\u51fa target - nums[i] \u5bf9\u5e94\u7684\u4e0b\u6807\u548c\u5f53\u524d\u6570\u7ec4\u7684\u4e0b\u6807 i \u3002 \u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u5c06 nums[i] \u548c\u4e0b\u6807 i \u5b58\u5165\u54c8\u5e0c\u8868\u4e2d\u3002 \u63d0\u793a \u5c5e\u4e8e unordered_map \u4e2d\u7684\u5feb\u901f\u67e5\u627e\u3002 \u53c2\u8003\u89e3\u7b54\uff1a class Solution { public: vector<int> twoSum(vector<int>& nums, int target) { unordered_map<int, int> hashtable; // \u7528\u4e8e\u5b58\u50a8\u6570\u503c\u548c\u5176\u5bf9\u5e94\u7684\u4e0b\u6807 for (int i = 0; i < nums.size(); i++) { int complement = target - nums[i]; // \u8ba1\u7b97\u5dee\u503c if (hashtable.find(complement) != hashtable.end()) { // \u5982\u679c\u5dee\u503c\u5728\u54c8\u5e0c\u8868\u4e2d return {hashtable[complement], i}; // \u8fd4\u56de\u5dee\u503c\u5bf9\u5e94\u7684\u4e0b\u6807\u548c\u5f53\u524d\u4e0b\u6807 } hashtable[nums[i]] = i; // \u5c06\u5f53\u524d\u503c\u548c\u4e0b\u6807\u5b58\u5165\u54c8\u5e0c\u8868 } return {}; // \u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u8fd4\u56de\u7a7a\u6570\u7ec4 } }; 3.3 \u4e3e\u4e00\u53cd\u4e09 3.3.1 LC 217 \u5b58\u5728\u91cd\u590d\u5143\u7d20 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u3002\u5982\u679c\u4efb\u4e00\u503c\u5728\u6570\u7ec4\u4e2d\u51fa\u73b0 \u81f3\u5c11\u4e24\u6b21 \uff0c\u8fd4\u56de true \uff1b\u5982\u679c\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u4e92\u4e0d\u76f8\u540c\uff0c\u8fd4\u56de false \u3002 \u601d\u8def\u5206\u6790 \u8fd9\u9053\u9898\u76ee\u8981\u6c42\u5224\u65ad\u4e00\u4e2a\u6570\u7ec4\u4e2d\u662f\u5426\u5b58\u5728\u91cd\u590d\u7684\u6570\u5b57\u3002\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a unordered_map \u6765\u5b58\u50a8\u6bcf\u4e2a\u6570\u5b57\u662f\u5426\u5df2\u7ecf\u51fa\u73b0\u8fc7\u3002\u904d\u5386\u6570\u7ec4\u65f6\uff0c\u6bcf\u9047\u5230\u4e00\u4e2a\u6570\u5b57\uff0c\u5c31\u68c0\u67e5\u5b83\u662f\u5426\u5df2\u7ecf\u5b58\u5728\u4e8e unordered_map \u4e2d\u3002\u5982\u679c\u5df2\u7ecf\u5b58\u5728\uff0c\u8bf4\u660e\u8be5\u6570\u5b57\u91cd\u590d\u4e86\uff0c\u76f4\u63a5\u8fd4\u56de true \uff1b\u5982\u679c\u6ca1\u6709\uff0c\u5c31\u5c06\u8be5\u6570\u5b57\u52a0\u5165 unordered_map \u4e2d\uff0c\u7ee7\u7eed\u68c0\u67e5\u4e0b\u4e00\u4e2a\u6570\u5b57\u3002\u904d\u5386\u5b8c\u6570\u7ec4\u540e\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\u4efb\u4f55\u91cd\u590d\u7684\u6570\u5b57\uff0c\u5c31\u8fd4\u56de false \u3002 \u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\u6bcf\u4e2a\u6570\u5b57\u53ea\u4f1a\u68c0\u67e5\u4e00\u6b21\uff0c\u5e76\u4e14\u67e5\u627e\u548c\u5b58\u50a8\u6570\u5b57\u7684\u64cd\u4f5c\u4e5f\u5f88\u5feb\uff0c\u56e0\u6b64\u6574\u4e2a\u8fc7\u7a0b\u5f88\u9ad8\u6548\u3002 \u63d0\u793a unordered_map \u53ef\u4ee5\u7528\u6765\u5feb\u901f\u5b58\u50a8\u548c\u67e5\u627e\u6570\u5b57\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u91cd\u590d\u7684\u6570\u5b57\uff0c\u5c5e\u4e8e\u9891\u7387\u7edf\u8ba1\u4e0e\u8ba1\u6570\u3002 \u53c2\u8003\u89e3\u7b54\uff1a class Solution { public: bool containsDuplicate(vector<int>& nums) { unordered_map<int, bool> seen; // \u521b\u5efa\u4e00\u4e2a unordered_map \u7528\u4e8e\u5b58\u50a8\u6570\u5b57 for (int num : nums) { if (seen.find(num) != seen.end()) { return true; // \u5982\u679c\u6570\u5b57\u5df2\u7ecf\u5b58\u5728\u4e8e map \u4e2d\uff0c\u8bf4\u660e\u91cd\u590d } seen[num] = true; // \u5426\u5219\u5c06\u8be5\u6570\u5b57\u5b58\u50a8\u5230 map \u4e2d } return false; // \u904d\u5386\u7ed3\u675f\u540e\u6ca1\u6709\u627e\u5230\u91cd\u590d\u7684\u6570\u5b57 } }; 4 \u54c8\u5e0c\u6620\u5c04 4.1 \u54c8\u5e0c\u6620\u5c04\u4ecb\u7ecd \u54c8\u5e0c\u6620\u5c04\u662f\u4e00\u4e2a\u66f4\u5e7f\u6cdb\u7684\u6982\u5ff5\uff0c\u8868\u793a\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u5c06\u4e00\u4e2a\u952e\uff08key\uff09\u6620\u5c04\u5230\u4e00\u4e2a\u503c\uff08value\uff09\uff0c\u8fd9\u79cd\u952e\u503c\u5bf9\u53ef\u4ee5\u7528\u4e8e\u6784\u5efa\u5404\u79cd\u5173\u7cfb\uff0c\u4e0d\u4ec5\u9650\u4e8e\u9891\u7387\u7edf\u8ba1\u6216\u5feb\u901f\u67e5\u627e\u3002\u4f8b\u5982\uff0c\u5c06\u4eba\u540d\u6620\u5c04\u5230\u5b66\u6821\uff0c\u6216\u8005\u5c06\u5b66\u6821\u6620\u5c04\u5230\u4e00\u4e2a\u5305\u542b\u6240\u6709\u5b66\u751f\u7684\u4eba\u540d\u5217\u8868\uff0c\u90fd\u662f\u54c8\u5e0c\u6620\u5c04\u7684\u5e94\u7528\u3002\u54c8\u5e0c\u6620\u5c04\u53ef\u4ee5\u652f\u6301\u4e00\u5bf9\u4e00\u3001\u4e00\u5bf9\u591a\u7b49\u590d\u6742\u7684\u5173\u7cfb\u7ed3\u6784\u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u54c8\u5e0c\u6620\u5c04\u662f\u5e7f\u6cdb\u4f7f\u7528\u7684\u6620\u5c04\u673a\u5236\uff0c\u80fd\u591f\u7075\u6d3b\u5b9e\u73b0\u952e\u503c\u5bf9\u5173\u7cfb\uff0c\u5e94\u7528\u4e8e\u66f4\u591a\u590d\u6742\u573a\u666f\uff0c\u5982\u4e00\u5bf9\u4e00\u3001\u4e00\u5bf9\u591a\u7684\u6620\u5c04\u3002 \u4f8b\u5982\uff0c\u5c06\u4eba\u540d\u4e0e\u5b66\u6821\u5173\u8054\uff0c\u6216\u5c06\u5b66\u6821\u4e0e\u5176\u6240\u6709\u5b66\u751f\u5173\u8054\uff0c\u90fd\u53ef\u4ee5\u901a\u8fc7\u54c8\u5e0c\u6620\u5c04\u6765\u5b9e\u73b0\u3002 #include <iostream> #include <unordered_map> #include <vector> #include <string> using namespace std; int main() { // \u4eba\u540d\u5230\u5b66\u6821\u7684\u4e00\u5bf9\u4e00\u6620\u5c04 unordered_map<string, string> people_to_school = { {\"Alice\", \"Harvard\"}, {\"Bob\", \"MIT\"} }; // \u5b66\u6821\u5230\u4eba\u540d\u5217\u8868\u7684\u4e00\u5bf9\u591a\u6620\u5c04 unordered_map<string, vector<string>> school_to_people = { {\"Harvard\", {\"Alice\", \"Charlie\"}}, {\"MIT\", {\"Bob\"}} }; } 4.2 \u4f8b\u9898\u8bb2\u89e3 4.2.1 LC 697 \u6570\u7ec4\u7684\u5ea6 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u4e14\u53ea\u5305\u542b\u975e\u8d1f\u6570\u7684\u6574\u6570\u6570\u7ec4 nums \uff0c\u6570\u7ec4\u7684 \u5ea6 \u7684\u5b9a\u4e49\u662f\u6307\u6570\u7ec4\u91cc\u4efb\u4e00\u5143\u7d20\u51fa\u73b0\u9891\u6570\u7684\u6700\u5927\u503c\u3002 \u4f60\u7684\u4efb\u52a1\u662f\u5728 nums \u4e2d\u627e\u5230\u4e0e nums \u62e5\u6709\u76f8\u540c\u5927\u5c0f\u7684\u5ea6\u7684\u6700\u77ed\u8fde\u7eed\u5b50\u6570\u7ec4\uff0c\u8fd4\u56de\u5176\u957f\u5ea6\u3002 \u601d\u8def\u5206\u6790 \u8bb0\u539f\u6570\u7ec4\u4e2d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u6570\u4e3a x\uff0c\u90a3\u4e48\u548c\u539f\u6570\u7ec4\u7684\u5ea6\u76f8\u540c\u7684\u6700\u77ed\u8fde\u7eed\u5b50\u6570\u7ec4\uff0c\u5fc5\u7136\u5305\u542b\u4e86\u539f\u6570\u7ec4\u4e2d\u7684\u5168\u90e8 x\uff0c\u4e14\u4e24\u7aef\u6070\u4e3a x \u7b2c\u4e00\u6b21\u51fa\u73b0\u548c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002 \u56e0\u4e3a\u7b26\u5408\u6761\u4ef6\u7684 x \u53ef\u80fd\u6709\u591a\u4e2a\uff0c\u5373\u591a\u4e2a\u4e0d\u540c\u7684\u6570\u5728\u539f\u6570\u7ec4\u4e2d\u51fa\u73b0\u6b21\u6570\u76f8\u540c\u3002\u6240\u4ee5\u4e3a\u4e86\u627e\u5230\u8fd9\u4e2a\u5b50\u6570\u7ec4\uff0c\u6211\u4eec\u9700\u8981\u7edf\u8ba1\u6bcf\u4e00\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u540c\u65f6\u8fd8\u9700\u8981\u7edf\u8ba1\u6bcf\u4e00\u4e2a\u6570\u7b2c\u4e00\u6b21\u51fa\u73b0\u548c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002 \u5728\u5b9e\u9645\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u54c8\u5e0c\u8868\u5b9e\u73b0\u8be5\u529f\u80fd\uff0c\u6bcf\u4e00\u4e2a\u6570\u6620\u5c04\u5230\u4e00\u4e2a\u957f\u5ea6\u4e3a 3 \u7684\u6570\u7ec4\uff0c\u6570\u7ec4\u4e2d\u7684\u4e09\u4e2a\u5143\u7d20\u5206\u522b\u4ee3\u8868\u8fd9\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\u3001\u8fd9\u4e2a\u6570\u5728\u539f\u6570\u7ec4\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u548c\u8fd9\u4e2a\u6570\u5728\u539f\u6570\u7ec4\u4e2d\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\u5f53\u6211\u4eec\u8bb0\u5f55\u5b8c\u6240\u6709\u4fe1\u606f\u540e\uff0c\u6211\u4eec\u9700\u8981\u904d\u5386\u8be5\u54c8\u5e0c\u8868\uff0c\u627e\u5230\u5143\u7d20\u51fa\u73b0\u6b21\u6570\u6700\u591a\uff0c\u4e14\u524d\u540e\u4f4d\u7f6e\u5dee\u6700\u5c0f\u7684\u6570\u3002 \u63d0\u793a \u5148\u8bb0\u5f55\u6bcf\u4e2a\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u7b2c\u4e00\u6b21\u548c\u6700\u540e\u4e00\u6b21\u7684\u7d22\u5f15\u3002 \u627e\u5230\u6570\u7ec4\u7684\u5ea6\u548c\u6700\u77ed\u5b50\u6570\u7ec4\u7684\u957f\u5ea6\u3002 \u53c2\u8003\u89e3\u7b54 class Solution { public: int findShortestSubArray(vector<int>& nums) { unordered_map<int, vector<int>> mp; // \u5b58\u50a8\u6bcf\u4e2a\u6570\u5b57\u7684\u51fa\u73b0\u6b21\u6570\u3001\u7b2c\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e\u3001\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e for (int i = 0; i < nums.size(); ++i) { if (mp.count(nums[i])) { mp[nums[i]][0] += 1; // \u7edf\u8ba1\u51fa\u73b0\u6b21\u6570 mp[nums[i]][2] = i; // \u66f4\u65b0\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e } else { mp[nums[i]] = {1, i, i}; // \u521d\u59cb\u5316\uff1a\u51fa\u73b0\u6b21\u6570\u4e3a1\uff0c\u7b2c\u4e00\u6b21\u548c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e\u76f8\u540c } } int maxNum = 0, minLen = nums.size(); for (const auto& [num, data] : mp) { int count = data[0], left = data[1], right = data[2]; if (count > maxNum) { maxNum = count; minLen = right - left + 1; // \u66f4\u65b0\u6700\u77ed\u957f\u5ea6 } else if (count == maxNum) { minLen = min(minLen, right - left + 1); // \u5982\u679c\u51fa\u73b0\u6b21\u6570\u76f8\u540c\uff0c\u66f4\u65b0\u6700\u77ed\u957f\u5ea6 } } return minLen; } }; \u89e3\u9898\u8fc7\u7a0b\uff1a \u521d\u59cb\u5316\u5b57\u5178 mp \uff1a\u5b58\u50a8\u6bcf\u4e2a\u6570\u5b57\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u7d22\u5f15\uff0c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u7d22\u5f15\u3002 \u904d\u5386\u6570\u7ec4 nums \uff1a\u8bb0\u5f55\u51fa\u73b0\u6b21\u6570\uff0c\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u7d22\u5f15\uff0c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u7d22\u5f15\u3002 \u904d\u5386\u5b57\u5178 mp \u7684\u503c\uff1a\u63d0\u53d6\u6bcf\u4e2a\u6570\u5b57\u7684\u51fa\u73b0\u6b21\u6570\u3001\u7b2c\u4e00\u6b21\u548c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002 maxNum \u8bb0\u5f55\u5f53\u524d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u503c\uff08\u5373\u6570\u7ec4\u7684\u5ea6\uff09\u3002 minLen \u8bb0\u5f55\u5177\u6709\u76f8\u540c\u5ea6\u7684\u5b50\u6570\u7ec4\u7684\u6700\u77ed\u957f\u5ea6\u3002 \u5982\u679c\u5f53\u524d\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570\u5927\u4e8e maxNum \uff0c\u66f4\u65b0 maxNum \u548c\u6700\u77ed\u5b50\u6570\u7ec4\u957f\u5ea6 minLen \u3002 \u5982\u679c\u51fa\u73b0\u6b21\u6570\u76f8\u540c\uff0c\u68c0\u67e5\u5f53\u524d\u5b50\u6570\u7ec4\u662f\u5426\u6bd4\u4e4b\u524d\u7684\u77ed\uff0c\u5e76\u66f4\u65b0 minLen \u3002 4.3 \u4e3e\u4e00\u53cd\u4e09 4.3.1 LC 205 \u540c\u6784\u5b57\u7b26\u4e32 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 s \u548c t \uff0c\u5224\u65ad\u5b83\u4eec\u662f\u5426\u662f\u540c\u6784\u7684\u3002 \u5982\u679c s \u4e2d\u7684\u5b57\u7b26\u53ef\u4ee5\u6309\u67d0\u79cd\u6620\u5c04\u5173\u7cfb\u66ff\u6362\u5f97\u5230 t \uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u662f\u540c\u6784\u7684\u3002 \u6bcf\u4e2a\u51fa\u73b0\u7684\u5b57\u7b26\u90fd\u5e94\u5f53\u6620\u5c04\u5230\u53e6\u4e00\u4e2a\u5b57\u7b26\uff0c\u540c\u65f6\u4e0d\u6539\u53d8\u5b57\u7b26\u7684\u987a\u5e8f\u3002\u4e0d\u540c\u5b57\u7b26\u4e0d\u80fd\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u5b57\u7b26\u4e0a\uff0c\u76f8\u540c\u5b57\u7b26\u53ea\u80fd\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u5b57\u7b26\u4e0a\uff0c\u5b57\u7b26\u53ef\u4ee5\u6620\u5c04\u5230\u81ea\u5df1\u672c\u8eab\u3002 \u601d\u8def\u5206\u6790 \u6839\u636e\u9898\u610f\uff0c\u5b57\u7b26\u4e32 s \u548c t \u4e2d\u7684\u5b57\u7b26\u5728\u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u5bf9\u5e94\u5173\u7cfb\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u3002\u56e0\u6b64\uff0c\u8003\u8651\u7528\u4e24\u4e2a\u54c8\u5e0c\u8868\uff08 unordered_map \uff09\u6765\u5b58\u50a8\u6620\u5c04\u5173\u7cfb\uff1a 1. s \u7684\u6bcf\u4e2a\u5b57\u7b26\u4e0e t \u7684\u5b57\u7b26\u5efa\u7acb\u6620\u5c04\u3002 2. t \u7684\u6bcf\u4e2a\u5b57\u7b26\u4e0e s \u7684\u5b57\u7b26\u5efa\u7acb\u6620\u5c04\uff0c\u786e\u4fdd\u6620\u5c04\u7684\u552f\u4e00\u6027\u3002 \u63d0\u793a \u5c5e\u4e8e\u5efa\u7acb\u6620\u5c04\uff0c\u901a\u8fc7\u521b\u5efa unordered_map \u5efa\u7acb\u5b57\u6bcd\u548c\u51fa\u73b0\u5b57\u6bcd\u7684\u6620\u5c04\u5173\u7cfb\u3002 \u53c2\u8003\u89e3\u7b54 class Solution { public: bool isIsomorphic(string s, string t) { unordered_map<char, char> s_to_t; // s -> t \u7684\u6620\u5c04 unordered_map<char, char> t_to_s; // t -> s \u7684\u6620\u5c04 for (int i = 0; i < s.size(); i++) { char s_char = s[i]; char t_char = t[i]; // \u68c0\u67e5 s -> t \u6620\u5c04\u662f\u5426\u4e00\u81f4 if (s_to_t.count(s_char) && s_to_t[s_char] != t_char) { return false; } // \u68c0\u67e5 t -> s \u6620\u5c04\u662f\u5426\u4e00\u81f4 if (t_to_s.count(t_char) && t_to_s[t_char] != s_char) { return false; } // \u5efa\u7acb s -> t \u548c t -> s \u7684\u6620\u5c04 s_to_t[s_char] = t_char; t_to_s[t_char] = s_char; } return true; // \u5982\u679c\u904d\u5386\u5b8c\u6240\u6709\u5b57\u7b26\u90fd\u6ca1\u6709\u51b2\u7a81\uff0c\u5219\u662f\u540c\u6784\u7684 } }; 4.3.2 LC 219 \u5b58\u5728\u91cd\u590d\u5143\u7d20II \u95ee\u9898\u63cf\u8ff0 \u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u548c\u4e00\u4e2a\u6574\u6570 k \uff0c\u5224\u65ad\u6570\u7ec4\u4e2d\u662f\u5426\u5b58\u5728\u4e24\u4e2a \u4e0d\u540c\u7684\u7d22\u5f15 i \u548c j \uff0c\u6ee1\u8db3 nums[i] == nums[j] \u4e14 abs(i - j) <= k \u3002\u5982\u679c\u5b58\u5728\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002 \u601d\u8def\u5206\u6790 \u8fd9\u9053\u9898\u662f LC 217 \u7684\u6269\u5c55\u7248\uff0c\u4e0d\u4ec5\u8981\u5224\u65ad\u662f\u5426\u6709\u91cd\u590d\u5143\u7d20\uff0c\u8fd8\u8981\u6c42\u8fd9\u4e9b\u91cd\u590d\u5143\u7d20\u7684\u7d22\u5f15\u4e4b\u5dee\u4e0d\u8d85\u8fc7\u7ed9\u5b9a\u7684\u6570\u5b57 k \u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 \u54c8\u5e0c\u8868 \u8bb0\u5f55\u6bcf\u4e2a\u6570\u5b57\u7684 \u6700\u540e\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e \u3002\u5f53\u6211\u4eec\u904d\u5386\u6570\u7ec4\u65f6\uff0c\u9047\u5230\u4e00\u4e2a\u6570\u5b57\u5148\u68c0\u67e5\u5b57\u5178\u4e2d\u662f\u5426\u5df2\u7ecf\u5b58\u5728\u5b83\uff1a \u5982\u679c\u6570\u5b57\u5b58\u5728\uff0c\u68c0\u67e5\u5b83\u4e4b\u524d\u7684\u7d22\u5f15\u548c\u5f53\u524d\u7d22\u5f15\u7684\u5dee\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e k \u3002\u5982\u679c\u6ee1\u8db3\u6761\u4ef6\uff0c\u8fd4\u56de true \u3002 \u5982\u679c\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u66f4\u65b0\u8be5\u6570\u5b57\u7684\u6700\u65b0\u51fa\u73b0\u4f4d\u7f6e\u3002 \u904d\u5386\u5b8c\u6574\u4e2a\u6570\u7ec4\u540e\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\u7b26\u5408\u6761\u4ef6\u7684\u6570\u5b57\uff0c\u8fd4\u56de false \u3002 \u63d0\u793a \u5728\u54c8\u5e0c\u8868\u4e2d\u8bb0\u5f55\u6bcf\u4e2a\u6570\u5b57\u7684\u6700\u540e\u51fa\u73b0\u4f4d\u7f6e\u3002 \u786e\u4fdd\u5728\u68c0\u67e5\u65f6\u4e24\u4e2a\u76f8\u540c\u6570\u5b57\u7684\u7d22\u5f15\u5dee\u5c0f\u4e8e\u7b49\u4e8e k \u3002 \u53c2\u8003\u89e3\u7b54 class Solution { public: bool containsNearbyDuplicate(vector<int>& nums, int k) { unordered_map<int, int> pos; // \u8bb0\u5f55\u6bcf\u4e2a\u6570\u5b57\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e for (int i = 0; i < nums.size(); ++i) { if (pos.count(nums[i]) && i - pos[nums[i]] <= k) { return true; // \u5982\u679c\u627e\u5230\u6ee1\u8db3\u6761\u4ef6\u7684\u91cd\u590d\u5143\u7d20 } pos[nums[i]] = i; // \u66f4\u65b0\u8be5\u6570\u5b57\u7684\u6700\u65b0\u4f4d\u7f6e } return false; // \u5982\u679c\u6ca1\u6709\u627e\u5230\u7b26\u5408\u6761\u4ef6\u7684\u91cd\u590d\u5143\u7d20 } }; 5 \u8bfe\u540e\u7ec3\u4e60 \u9891\u7387\u7edf\u8ba1 \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u9898\u76ee\u63cf\u8ff0 LC 451 \u6839\u636e\u5b57\u7b26\u51fa\u73b0\u9891\u7387\u6392\u5e8f \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8bf7\u5c06\u5b57\u7b26\u6309\u51fa\u73b0\u9891\u7387\u6392\u5e8f\u3002 LC 692 \u524dK\u4e2a\u9ad8\u9891\u5355\u8bcd \u7ed9\u5b9a\u4e00\u4e2a\u5355\u8bcd\u5217\u8868\uff0c\u8fd4\u56de\u524d K \u4e2a\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684\u5355\u8bcd\u3002 LC 347 \u524dK\u4e2a\u9ad8\u9891\u5143\u7d20 \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\uff0c\u8fd4\u56de\u51fa\u73b0\u9891\u7387\u524d K \u9ad8\u7684\u5143\u7d20 LC 554 \u780c\u5899 \u8ba1\u7b97\u901a\u8fc7\u4e00\u5835\u5899\u7684\u5782\u76f4\u7ebf\u6bb5\u7a7f\u8fc7\u7684\u7816\u5757\u6570\u91cf\u6700\u5c11\u7684\u5730\u65b9\u3002 LC 2085 \u7edf\u8ba1\u51fa\u73b0\u8fc7\u4e00\u6b21\u7684\u516c\u5171\u5b57\u7b26\u4e32 \u8fd4\u56de\u5728\u4e24\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\u90fd\u6070\u597d\u51fa\u73b0\u4e00\u6b21\u7684\u5b57\u7b26\u4e32\u7684\u6570\u76ee\u3002 \u5feb\u901f\u67e5\u627e \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u9898\u76ee\u63cf\u8ff0 LC 594 \u6700\u957f\u548c\u8c10\u5b50\u5e8f\u5217 \u627e\u5230\u548c\u8c10\u5b50\u5e8f\u5217\u7684\u6700\u957f\u957f\u5ea6\uff0c\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u76f8\u5dee\u4e3a1\u3002 LC 525 \u8fde\u7eed\u6570\u7ec4 \u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\u7ec4\uff0c\u627e\u5230\u957f\u5ea6\u76f8\u540c\u76840\u548c1\u7684\u6700\u957f\u5b50\u6570\u7ec4\u3002 LC 49 \u5b57\u6bcd\u5f02\u4f4d\u8bcd\u5206\u7ec4 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4\uff0c\u5c06\u5b57\u6bcd\u5f02\u4f4d\u8bcd\u7ec4\u5408\u5728\u4e00\u8d77\u3002 LC 169 \u591a\u6570\u5143\u7d20 \u7ed9\u5b9a\u4e00\u4e2a\u5927\u5c0f\u4e3an\u7684\u6570\u7ec4nums\uff0c\u8fd4\u56de\u5176\u4e2d\u7684\u591a\u6570\u5143\u7d20\u3002 LC 409 \u6700\u957f\u56de\u6587\u4e32 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\u5176\u4e2d\u53ef\u4ee5\u6784\u6210\u7684\u6700\u957f\u56de\u6587\u4e32\u7684\u957f\u5ea6\u3002 \u54c8\u5e0c\u6620\u5c04 \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u9898\u76ee\u63cf\u8ff0 LC 290 \u5355\u8bcd\u89c4\u5f8b \u7ed9\u5b9a\u4e00\u79cd\u89c4\u5f8b pattern \u548c\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u5224\u65ad s \u662f\u5426\u9075\u5faa\u76f8\u540c\u7684\u89c4\u5f8b\u3002 LC 560 \u548c\u4e3aK\u7684\u5b50\u6570\u7ec4 \u627e\u51fa\u6570\u7ec4\u4e2d\u548c\u4e3a k \u7684\u8fde\u7eed\u5b50\u6570\u7ec4\u7684\u4e2a\u6570\u3002 LC 249 \u79fb\u4f4d\u5b57\u7b26\u4e32\u5206\u7ec4 \u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b\u4ec5\u5c0f\u5199\u5b57\u6bcd\u5b57\u7b26\u4e32\u7684\u5217\u8868\uff0c\u5c06\u8be5\u5217\u8868\u4e2d\u6240\u6709\u6ee1\u8db3 \u201c\u79fb\u4f4d\u201d \u64cd\u4f5c\u89c4\u5f8b\u7684\u7ec4\u5408\u8fdb\u884c\u5206\u7ec4\u5e76\u8fd4\u56de\u3002 LC 953 \u9a8c\u8bc1\u5916\u661f\u8bed\u8bcd\u5178 \u7ed9\u5b9a\u4e00\u4e2a\u5916\u661f\u8bcd\u5178\u7684\u987a\u5e8f\u8868\uff0c\u5224\u65ad\u4e00\u7ec4\u5355\u8bcd\u662f\u5426\u6309\u7167\u8fd9\u4e2a\u5916\u661f\u8bcd\u5178\u7684\u987a\u5e8f\u6392\u5217\u3002 LC 12 \u6574\u6570\u8f6c\u7f57\u9a6c\u6570\u5b57 \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\uff0c\u5c06\u5176\u8f6c\u6362\u4e3a\u7f57\u9a6c\u6570\u5b57\u3002","title":"Lesson 11: unordered_map \u4e13\u9898"},{"location":"lesson11/Lesson11%20C%2B%2B/#lesson-11-unordered_map","text":"","title":"Lesson 11: unordered_map \u4e13\u9898"},{"location":"lesson11/Lesson11%20C%2B%2B/#_1","text":"","title":"\u76ee\u5f55"},{"location":"lesson11/Lesson11%20C%2B%2B/#_2","text":"1. \u77e5\u8bc6\u4ecb\u7ecd - 1.1 \u54c8\u5e0c\u8868\u5e38\u7528\u64cd\u4f5c - 1.2 \u54c8\u5e0c\u8868\u7b80\u5355\u5b9e\u73b0 - 1.3 \u54c8\u5e0c\u51b2\u7a81\u4e0e\u6269\u5bb9 - 1.4 unordered_map \u548c map \u7684\u533a\u522b 2. \u9891\u7387\u7edf\u8ba1\u4e0e\u8ba1\u6570 - 2.1 \u8bcd\u9891\u7edf\u8ba1\u4ecb\u7ecd - 2.2 \u4f8b\u9898\u8bb2\u89e3 - 2.2.1 LC 242 \u6709\u6548\u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd - 2.3 \u4e3e\u4e00\u53cd\u4e09 - 2.3.1 LC 387 \u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u552f\u4e00\u5b57\u7b26 3. \u5feb\u901f\u67e5\u627e - 3.1 \u5feb\u901f\u67e5\u627e\u4ecb\u7ecd - 3.2 \u4f8b\u9898\u8bb2\u89e3 - 3.2.1 LC 1 \u4e24\u6570\u4e4b\u548c - 3.3 \u4e3e\u4e00\u53cd\u4e09 - 3.3.1 LC 217 \u5b58\u5728\u91cd\u590d\u5143\u7d20 4. \u54c8\u5e0c\u6620\u5c04 - 4.1 \u54c8\u5e0c\u6620\u5c04\u4ecb\u7ecd - 4.2 \u4f8b\u9898\u8bb2\u89e3 - 4.2.1 LC 697 \u6570\u7ec4\u7684\u5ea6 - 4.3 \u4e3e\u4e00\u53cd\u4e09 - 4.3.1 LC 205 \u540c\u6784\u5b57\u7b26\u4e32 - 4.3.2 LC 219 \u5b58\u5728\u91cd\u590d\u5143\u7d20II 5. \u8bfe\u540e\u7ec3\u4e60","title":"\u76ee\u5f55"},{"location":"lesson11/Lesson11%20C%2B%2B/#1","text":"\u5728 C++ \u4e2d\uff0c unordered_map \u548c map \u90fd\u662f\u7528\u4e8e\u5b58\u50a8\u952e\u503c\u5bf9\u7684\u5bb9\u5668\u3002 unordered_map \u662f\u4e00\u79cd\u9ad8\u6548\u7684\u54c8\u5e0c\u8868\u5b9e\u73b0\uff0c\u63d0\u4f9b\u4e86\u975e\u5e38\u5feb\u901f\u7684\u67e5\u627e\u3001\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\uff08\u672c\u7ae0\u91cd\u70b9\u8bb2\u89e3 unordered_map \uff09\u3002 map \u662f\u57fa\u4e8e\u7ea2\u9ed1\u6811\u5b9e\u73b0\u7684\u6709\u5e8f\u952e\u503c\u5bf9\u5bb9\u5668\u3002\u54c8\u5e0c\u8868\uff08hash table\uff09\u901a\u8fc7\u5efa\u7acb\u952e key \u4e0e\u503c value \u4e4b\u95f4\u7684\u6620\u5c04\uff0c\u5b9e\u73b0\u9ad8\u6548\u7684\u5143\u7d20\u67e5\u8be2\u3002\u5177\u4f53\u800c\u8a00\uff0c\u6211\u4eec\u5411\u54c8\u5e0c\u8868\u4e2d\u8f93\u5165\u4e00\u4e2a\u952e key \uff0c\u5219\u53ef\u4ee5\u5feb\u901f\u83b7\u53d6\u5bf9\u5e94\u7684\u503c value \u3002 \u7ed9\u5b9a n \u4e2a\u5b66\u751f\uff0c\u6bcf\u4e2a\u5b66\u751f\u90fd\u6709\u201c\u59d3\u540d\u201d\u548c\u201c\u5b66\u53f7\u201d\u4e24\u9879\u6570\u636e\u3002\u5047\u5982\u6211\u4eec\u5e0c\u671b\u5b9e\u73b0\u201c\u8f93\u5165\u4e00\u4e2a\u5b66\u53f7\uff0c\u8fd4\u56de\u5bf9\u5e94\u7684\u59d3\u540d\u201d\u7684\u67e5\u8be2\u529f\u80fd\uff0c\u5219\u53ef\u4ee5\u91c7\u7528\u4e0b\u56fe\u6240\u793a\u7684\u54c8\u5e0c\u8868\u6765\u5b9e\u73b0\u3002","title":"1 \u77e5\u8bc6\u4ecb\u7ecd"},{"location":"lesson11/Lesson11%20C%2B%2B/#11","text":"\u54c8\u5e0c\u8868\u7684\u5e38\u89c1\u64cd\u4f5c\u5305\u62ec\uff1a\u521d\u59cb\u5316\u3001\u67e5\u8be2\u64cd\u4f5c\u3001\u6dfb\u52a0\u952e\u503c\u5bf9\u548c\u5220\u9664\u952e\u503c\u5bf9\u7b49\u3002 #include <unordered_map> #include <iostream> using namespace std; int main() { // \u521d\u59cb\u5316\u54c8\u5e0c\u8868 unordered_map<int, string> hmap; // \u6dfb\u52a0\u64cd\u4f5c\uff1a\u5728\u54c8\u5e0c\u8868\u4e2d\u6dfb\u52a0\u952e\u503c\u5bf9 (key, value) hmap[12836] = \"\u5c0f\u54c8\"; hmap[15937] = \"\u5c0f\u5570\"; hmap[16750] = \"\u5c0f\u7b97\"; hmap[13276] = \"\u5c0f\u6cd5\"; hmap[10583] = \"\u5c0f\u9e2d\"; // \u67e5\u8be2\u64cd\u4f5c\uff1a\u5411\u54c8\u5e0c\u8868\u4e2d\u8f93\u5165\u952e key\uff0c\u5f97\u5230\u503c value string name = hmap[15937]; cout << name << endl; // \u8f93\u51fa: \u5c0f\u5570 // \u5220\u9664\u64cd\u4f5c\uff1a\u5728\u54c8\u5e0c\u8868\u4e2d\u5220\u9664\u952e\u503c\u5bf9 (key, value) hmap.erase(10583); for (const auto& pair : hmap) { cout << pair.first << \" -> \" << pair.second << endl; } // \u4fee\u6539\u64cd\u4f5c hmap[10583] = \"\u5c0f\u9e45\"; for (const auto& pair : hmap) { cout << pair.first << \" -> \" << pair.second << endl; } return 0; } \u8f93\u51fa\uff1a \u5c0f\u5570 12836 -> \u5c0f\u54c8 15937 -> \u5c0f\u5570 16750 -> \u5c0f\u7b97 13276 -> \u5c0f\u6cd5 12836 -> \u5c0f\u54c8 15937 -> \u5c0f\u5570 16750 -> \u5c0f\u7b97 13276 -> \u5c0f\u6cd5 10583 -> \u5c0f\u9e45 \u54c8\u5e0c\u8868\u7684\u904d\u5386\u6709\u4e09\u79cd\u5e38\u7528\u65b9\u5f0f\uff1a\u904d\u5386\u952e\u503c\u5bf9\u3001\u904d\u5386\u952e\u548c\u904d\u5386\u503c\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a #include <unordered_map> #include <iostream> using namespace std; int main() { unordered_map<int, string> hmap; hmap[12836] = \"\u5c0f\u54c8\"; hmap[15937] = \"\u5c0f\u5570\"; hmap[16750] = \"\u5c0f\u7b97\"; hmap[13276] = \"\u5c0f\u6cd5\"; hmap[10583] = \"\u5c0f\u9e2d\"; // \u904d\u5386\u54c8\u5e0c\u8868\uff1a\u904d\u5386\u952e\u503c\u5bf9 key->value for (const auto& pair : hmap) { cout << pair.first << \" -> \" << pair.second << endl; } // \u904d\u5386\u952e key for (const auto& pair : hmap) { cout << pair.first << endl; } // \u904d\u5386\u503c value for (const auto& pair : hmap) { cout << pair.second << endl; } return 0; } \u8f93\u51fa\uff1a 12836 -> \u5c0f\u54c8 15937 -> \u5c0f\u5570 16750 -> \u5c0f\u7b97 13276 -> \u5c0f\u6cd5 10583 -> \u5c0f\u9e2d 12836 15937 16750 13276 10583 \u5c0f\u54c8 \u5c0f\u5570 \u5c0f\u7b97 \u5c0f\u6cd5 \u5c0f\u9e2d","title":"1.1 \u54c8\u5e0c\u8868\u5e38\u7528\u64cd\u4f5c"},{"location":"lesson11/Lesson11%20C%2B%2B/#12","text":"\u6211\u4eec\u5148\u8003\u8651\u6700\u7b80\u5355\u7684\u60c5\u51b5\uff0c \u4ec5\u7528\u4e00\u4e2a\u6570\u7ec4\u6765\u5b9e\u73b0\u54c8\u5e0c\u8868 \u3002\u5728\u54c8\u5e0c\u8868\u4e2d\uff0c\u6211\u4eec\u5c06\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u7a7a\u4f4d\u79f0\u4e3a\u6876\uff08bucket\uff09\uff0c\u6bcf\u4e2a\u6876\u53ef\u5b58\u50a8\u4e00\u4e2a\u952e\u503c\u5bf9\u3002\u56e0\u6b64\uff0c\u67e5\u8be2\u64cd\u4f5c\u5c31\u662f\u627e\u5230 key \u5bf9\u5e94\u7684\u6876\uff0c\u5e76\u5728\u6876\u4e2d\u83b7\u53d6 value \u3002 \u90a3\u4e48\uff0c\u5982\u4f55\u57fa\u4e8e key \u5b9a\u4f4d\u5bf9\u5e94\u7684\u6876\u5462\uff1f\u8fd9\u662f\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\uff08hash function\uff09\u5b9e\u73b0\u7684\u3002\u54c8\u5e0c\u51fd\u6570\u7684\u4f5c\u7528\u662f\u5c06\u4e00\u4e2a\u8f83\u5927\u7684\u8f93\u5165\u7a7a\u95f4\u6620\u5c04\u5230\u4e00\u4e2a\u8f83\u5c0f\u7684\u8f93\u51fa\u7a7a\u95f4\u3002\u5728\u54c8\u5e0c\u8868\u4e2d\uff0c\u8f93\u5165\u7a7a\u95f4\u662f\u6240\u6709 key \uff0c\u8f93\u51fa\u7a7a\u95f4\u662f\u6240\u6709\u6876\uff08\u6570\u7ec4\u7d22\u5f15\uff09\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8f93\u5165\u4e00\u4e2a key \uff0c \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u5f97\u5230\u8be5 key \u5bf9\u5e94\u7684\u952e\u503c\u5bf9\u5728\u6570\u7ec4\u4e2d\u7684\u5b58\u50a8\u4f4d\u7f6e \u3002 \u8f93\u5165\u4e00\u4e2a key \uff0c\u54c8\u5e0c\u51fd\u6570\u7684\u8ba1\u7b97\u8fc7\u7a0b\u5206\u4e3a\u4ee5\u4e0b\u4e24\u6b65\u3002 \u901a\u8fc7\u67d0\u79cd\u54c8\u5e0c\u7b97\u6cd5 hash() \u8ba1\u7b97\u5f97\u5230\u54c8\u5e0c\u503c\u3002 \u5c06\u54c8\u5e0c\u503c\u5bf9\u6876\u6570\u91cf\uff08\u6570\u7ec4\u957f\u5ea6\uff09 capacity \u53d6\u6a21\uff0c\u4ece\u800c\u83b7\u53d6\u8be5 key \u5bf9\u5e94\u7684\u6570\u7ec4\u7d22\u5f15 index \u3002 index = hash(key) % capacity \u968f\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528 index \u5728\u54c8\u5e0c\u8868\u4e2d\u8bbf\u95ee\u5bf9\u5e94\u7684\u6876\uff0c\u4ece\u800c\u83b7\u53d6 value \u3002 \u8bbe\u6570\u7ec4\u957f\u5ea6 capacity = 100 \u3001\u54c8\u5e0c\u7b97\u6cd5 hash(key) = key \uff0c\u6613\u5f97\u54c8\u5e0c\u51fd\u6570\u4e3a key % 100 \u3002\u4e0b\u56fe\u4ee5 key \u5b66\u53f7\u548c value \u59d3\u540d\u4e3a\u4f8b\uff0c\u5c55\u793a\u4e86\u54c8\u5e0c\u51fd\u6570\u7684\u5de5\u4f5c\u539f\u7406\u3002 \u4e0b\u56fe\u5c55\u793a\u4e86\u54c8\u5e0c\u51fd\u6570\u7684\u5de5\u4f5c\u539f\u7406\uff1a","title":"1.2 \u54c8\u5e0c\u8868\u7b80\u5355\u5b9e\u73b0"},{"location":"lesson11/Lesson11%20C%2B%2B/#13","text":"\u4ece\u672c\u8d28\u4e0a\u770b\uff0c\u54c8\u5e0c\u51fd\u6570\u7684\u4f5c\u7528\u662f\u5c06\u6240\u6709 key \u6784\u6210\u7684\u8f93\u5165\u7a7a\u95f4\u6620\u5c04\u5230\u6570\u7ec4\u6240\u6709\u7d22\u5f15\u6784\u6210\u7684\u8f93\u51fa\u7a7a\u95f4\uff0c\u800c\u8f93\u5165\u7a7a\u95f4\u5f80\u5f80\u8fdc\u5927\u4e8e\u8f93\u51fa\u7a7a\u95f4\u3002\u56e0\u6b64\uff0c \u7406\u8bba\u4e0a\u4e00\u5b9a\u5b58\u5728\u201c\u591a\u4e2a\u8f93\u5165\u5bf9\u5e94\u76f8\u540c\u8f93\u51fa\u201d\u7684\u60c5\u51b5 \u3002 \u5bf9\u4e8e\u4e0a\u8ff0\u793a\u4f8b\u4e2d\u7684\u54c8\u5e0c\u51fd\u6570\uff0c\u5f53\u8f93\u5165\u7684 key \u540e\u4e24\u4f4d\u76f8\u540c\u65f6\uff0c\u54c8\u5e0c\u51fd\u6570\u7684\u8f93\u51fa\u7ed3\u679c\u4e5f\u76f8\u540c\u3002\u4f8b\u5982\uff0c\u67e5\u8be2\u5b66\u53f7\u4e3a 12836 \u548c 20336 \u7684\u4e24\u4e2a\u5b66\u751f\u65f6\uff0c\u6211\u4eec\u5f97\u5230\uff1a 12836 % 100 = 36 20336 % 100 = 36 \u5982\u4e0b\u56fe\u6240\u793a\uff0c\u4e24\u4e2a\u5b66\u53f7\u6307\u5411\u4e86\u540c\u4e00\u4e2a\u59d3\u540d\uff0c\u8fd9\u663e\u7136\u662f\u4e0d\u5bf9\u7684\u3002\u6211\u4eec\u5c06\u8fd9\u79cd\u591a\u4e2a\u8f93\u5165\u5bf9\u5e94\u540c\u4e00\u8f93\u51fa\u7684\u60c5\u51b5\u79f0\u4e3a\u54c8\u5e0c\u51b2\u7a81\uff08hash collision\uff09\u3002 \u5982\u679c\u51fa\u73b0\u54c8\u5e0c\u51b2\u7a81\u4e86\uff0c\u53ea\u662f\u4f1a\u964d\u4f4e\u67e5\u627e\u7684\u6027\u80fd\uff0c\u56e0\u4e3a\u540c\u4e00\u4e2a\u54c8\u5e0c\u503c\u5bf9\u5e94\u7684\u6876\u5f53\u4e2d\uff0c\u8fd8\u4f1a\u4ee5\u94fe\u8868\u7684\u5f62\u5f0f\u5b58\u50a8\u591a\u4e2a\u503c\uff0c\u5982\u679c\u53d1\u73b0\u54c8\u5e0c\u51b2\u7a81\uff0c\u5c31\u4f1a\u6cbf\u7740\u94fe\u8868\u67e5\u627e\uff0c\u56e0\u4e3a\u662f\u904d\u5386\uff0c\u6240\u4ee5\u6027\u80fd\u4f1a\u964d\u4f4e\u3002 \u5bb9\u6613\u60f3\u5230\uff0c\u54c8\u5e0c\u8868\u5bb9\u91cf n \u8d8a\u5927\uff0c\u591a\u4e2a key \u88ab\u5206\u914d\u5230\u540c\u4e00\u4e2a\u6876\u4e2d\u7684\u6982\u7387\u5c31\u8d8a\u4f4e\uff0c\u51b2\u7a81\u5c31\u8d8a\u5c11\u3002\u56e0\u6b64\uff0c \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6269\u5bb9\u54c8\u5e0c\u8868\u6765\u51cf\u5c11\u54c8\u5e0c\u51b2\u7a81 \u3002 \u5982\u4e0b\u56fe\u6240\u793a\uff0c\u6269\u5bb9\u524d\u952e\u503c\u5bf9 (136, A) \u548c (236, D) \u53d1\u751f\u51b2\u7a81\uff0c\u6269\u5bb9\u540e\u51b2\u7a81\u6d88\u5931\u3002 \u7c7b\u4f3c\u4e8e\u6570\u7ec4\u6269\u5bb9\uff0c\u54c8\u5e0c\u8868\u6269\u5bb9\u9700\u5c06\u6240\u6709\u952e\u503c\u5bf9\u4ece\u539f\u54c8\u5e0c\u8868\u8fc1\u79fb\u81f3\u65b0\u54c8\u5e0c\u8868\uff0c\u975e\u5e38\u8017\u65f6\uff1b\u5e76\u4e14\u7531\u4e8e\u54c8\u5e0c\u8868\u5bb9\u91cf capacity \u6539\u53d8\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u6765\u91cd\u65b0\u8ba1\u7b97\u6240\u6709\u952e\u503c\u5bf9\u7684\u5b58\u50a8\u4f4d\u7f6e\uff0c\u8fd9\u8fdb\u4e00\u6b65\u589e\u52a0\u4e86\u6269\u5bb9\u8fc7\u7a0b\u7684\u8ba1\u7b97\u5f00\u9500\u3002\u4e3a\u6b64\uff0c\u7f16\u7a0b\u8bed\u8a00\u901a\u5e38\u4f1a\u9884\u7559\u8db3\u591f\u5927\u7684\u54c8\u5e0c\u8868\u5bb9\u91cf\uff0c\u9632\u6b62\u9891\u7e41\u6269\u5bb9\u3002","title":"1.3 \u54c8\u5e0c\u51b2\u7a81\u4e0e\u6269\u5bb9"},{"location":"lesson11/Lesson11%20C%2B%2B/#14-unordered_map-map","text":"\u5728\u524d\u9762\u7684\u8bb2\u89e3\u4e2d\uff0c\u6211\u4eec\u7b80\u5355\u63d0\u5230\u4e86 map \uff0c\u5b83\u662f\u57fa\u4e8e\u7ea2\u9ed1\u6811\u5b9e\u73b0\u7684\uff0c\u5e76\u4e14\u80fd\u591f\u6309\u987a\u5e8f\u5b58\u50a8\u952e\u503c\u5bf9\u3002\u800c\u5728 C++ \u4e2d\uff0c unordered_map \u548c map \u90fd\u662f\u7528\u4e8e\u5b58\u50a8\u952e\u503c\u5bf9\u7684\u5bb9\u5668\uff0c\u4f46\u5b83\u4eec\u7684\u5b9e\u73b0\u65b9\u5f0f\u548c\u4f7f\u7528\u573a\u666f\u6709\u6240\u4e0d\u540c\u3002\u8fd9\u91cc\u7b80\u5355\u63d0\u4e00\u4e0b\u5b83\u4eec\u7684\u533a\u522b\uff0c\u5927\u5bb6\u4e86\u89e3\u4e00\u4e0b\u5c31\u597d\uff0c\u4e0d\u9700\u8981\u6df1\u5165\u7406\u89e3\u3002 \u7279\u6027 unordered_map map \u5e95\u5c42\u5b9e\u73b0 \u54c8\u5e0c\u8868 \u7ea2\u9ed1\u6811 \u952e\u503c\u5bf9\u987a\u5e8f \u65e0\u5e8f\u5b58\u50a8 \u6309\u952e\u7684\u5347\u5e8f\u5b58\u50a8 \u67e5\u627e\u6548\u7387 \u67e5\u627e\u901f\u5ea6\u66f4\u5feb\uff0c\u9002\u5408\u5feb\u901f\u67e5\u627e\u7684\u573a\u666f \u67e5\u627e\u8f83\u6162\uff0c\u4f46\u952e\u503c\u5bf9\u81ea\u52a8\u6709\u5e8f\u5b58\u50a8 \u4f7f\u7528\u573a\u666f \u9002\u5408\u9891\u7e41\u67e5\u627e\u3001\u63d2\u5165\u3001\u5220\u9664\u7684\u64cd\u4f5c \u9002\u5408\u9700\u8981\u6309\u987a\u5e8f\u5b58\u50a8\u548c\u8bbf\u95ee\u7684\u573a\u666f","title":"1.4 unordered_map \u548c map \u7684\u533a\u522b"},{"location":"lesson11/Lesson11%20C%2B%2B/#unordered_map-map","text":"unordered_map \u4f7f\u7528\u54c8\u5e0c\u8868\u5b9e\u73b0 \uff1a unordered_map \u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u6765\u5904\u7406\u6bcf\u4e2a\u952e\u3002\u4f60\u53ef\u4ee5\u628a\u54c8\u5e0c\u51fd\u6570\u60f3\u8c61\u6210\u4e00\u4e2a\u667a\u80fd\u5feb\u9012\u5458\uff0c\u8d1f\u8d23\u628a\u6bcf\u4e2a\u952e\uff08\u7c7b\u4f3c\u4e8e\u5305\u88f9\uff09\u9001\u5230\u4e00\u4e2a\u7279\u5b9a\u7684\u5730\u5740\uff08\u4e5f\u5c31\u662f\u5b58\u50a8\u4f4d\u7f6e\uff09\u3002\u8fd9\u4e2a\u201c\u5730\u5740\u201d\u4e0d\u662f\u968f\u610f\u7684\uff0c\u800c\u662f\u901a\u8fc7\u4e00\u4e2a\u56fa\u5b9a\u7684\u8ba1\u7b97\u65b9\u5f0f\uff08\u54c8\u5e0c\u51fd\u6570\uff09\u6765\u786e\u5b9a\u7684\u3002 \u4e3e\u4e2a\u4f8b\u5b50 \uff1a - \u4f60\u6709\u4e00\u4e2a\u952e\u503c\u5bf9\uff0c\u952e\u662f \"apple\"\uff0c\u503c\u662f \"fruit\"\u3002 - \u54c8\u5e0c\u51fd\u6570\u4f1a\u62ff\u5230 \"apple\" \u8fd9\u4e2a\u952e\uff0c\u8fdb\u884c\u67d0\u79cd\u8ba1\u7b97\uff08\u5c31\u50cf\u5feb\u9012\u5458\u6839\u636e\u5730\u5740\u53bb\u5206\u7c7b\u5305\u88f9\u4e00\u6837\uff09\uff0c\u7136\u540e\u76f4\u63a5\u628a\u5b83\u9001\u5230\u6307\u5b9a\u7684\u4f4d\u7f6e\uff0c\u6bd4\u5982\u5185\u5b58\u7684\u67d0\u4e2a\u201c\u6876\u201d\uff08bucket\uff09\u91cc\u3002 - \u5f53\u4f60\u4e4b\u540e\u60f3\u67e5\u627e \"apple\" \u5bf9\u5e94\u7684\u503c\u65f6\uff0c\u54c8\u5e0c\u51fd\u6570\u4f1a\u518d\u6b21\u6839\u636e \"apple\" \u8fdb\u884c\u540c\u6837\u7684\u8ba1\u7b97\uff0c\u544a\u8bc9\u4f60\u5b83\u88ab\u653e\u5728\u5185\u5b58\u7684\u54ea\u4e2a\u201c\u6876\u201d\u91cc\u3002\u7531\u4e8e\u8fd9\u4e2a\u8ba1\u7b97\u975e\u5e38\u76f4\u63a5\uff0c\u901f\u5ea6\u975e\u5e38\u5feb\u3002 \u4e3a\u4ec0\u4e48\u8fd9\u6837\u5feb\uff1f - \u56e0\u4e3a\u54c8\u5e0c\u51fd\u6570\u662f\u76f4\u63a5\u8ba1\u7b97\u51fa\u7ed3\u679c\uff0c\u800c\u4e0d\u662f\u50cf map \u90a3\u6837\u6309\u987a\u5e8f\u9010\u4e2a\u6bd4\u5bf9\u952e\u3002 unordered_map \u4e0d\u9700\u8981\u6392\u5e8f\u6216\u8005\u5bf9\u6bd4\uff0c\u53ea\u8981\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u627e\u5230\u6b63\u786e\u7684\u201c\u6876\u201d\uff0c\u5c31\u80fd\u5feb\u901f\u5b9a\u4f4d\u6570\u636e\uff0c\u7c7b\u4f3c\u4e8e\u5feb\u9012\u5458\u628a\u5305\u88f9\u653e\u5230\u51c6\u786e\u7684\u4f4d\u7f6e\u3002 \u65e0\u5e8f\u5b58\u50a8\u7684\u539f\u56e0 \uff1a - \u56e0\u4e3a\u54c8\u5e0c\u8868\u4e2d\u7684\u952e\u503c\u5bf9\u662f\u6839\u636e\u54c8\u5e0c\u51fd\u6570\u7684\u7ed3\u679c\u6765\u653e\u7f6e\u7684\uff0c\u987a\u5e8f\u53d6\u51b3\u4e8e\u54c8\u5e0c\u51fd\u6570\u7684\u8ba1\u7b97\u7ed3\u679c\u3002\u56e0\u6b64\uff0c\u63d2\u5165\u548c\u67e5\u627e\u65f6\u4e0d\u9700\u8981\u5173\u5fc3\u987a\u5e8f\uff0c\u53ea\u8981\u8ba1\u7b97\u51fa\u201c\u6876\u201d\u7684\u4f4d\u7f6e\uff0c\u5c31\u80fd\u7acb\u523b\u8bbf\u95ee\u6570\u636e\u3002 map \u4f7f\u7528\u7ea2\u9ed1\u6811\u5b9e\u73b0 \uff1a map \u4f1a\u81ea\u52a8\u4fdd\u6301\u952e\u503c\u5bf9\u7684\u987a\u5e8f\uff0c\u56e0\u6b64\u6bcf\u6b21\u63d2\u5165\u3001\u5220\u9664\u548c\u67e5\u627e\u65f6\u90fd\u9700\u8981\u8fdb\u884c\u952e\u7684\u6bd4\u5bf9\u548c\u6392\u5e8f\u64cd\u4f5c\u3002\u7531\u4e8e\u8fd9\u4e9b\u64cd\u4f5c\u7684\u5b58\u5728\uff0c map \u7684\u901f\u5ea6\u6bd4 unordered_map \u7a0d\u6162\uff0c\u4f46\u5b83\u80fd\u4fdd\u8bc1\u6570\u636e\u6709\u5e8f\u3002 \u603b\u7ed3\uff1a - \u5982\u679c\u4f60\u4e0d\u9700\u8981\u6570\u636e\u6709\u5e8f\uff0c\u4e14\u9700\u8981\u5feb\u901f\u67e5\u627e\u3001\u63d2\u5165\u6216\u5220\u9664\uff0c unordered_map \u66f4\u9002\u5408\u3002 - \u5982\u679c\u4f60\u9700\u8981\u6309\u987a\u5e8f\u5b58\u50a8\u952e\u503c\u5bf9\uff0c\u90a3\u4e48 map \u66f4\u5408\u9002\uff0c\u5373\u4fbf\u67e5\u627e\u901f\u5ea6\u7a0d\u6162\u4e00\u4e9b\u3002","title":"\u4e3a\u4ec0\u4e48 unordered_map \u6bd4 map \u5feb\uff1f"},{"location":"lesson11/Lesson11%20C%2B%2B/#2","text":"","title":"2 \u9891\u7387\u7edf\u8ba1\u4e0e\u8ba1\u6570"},{"location":"lesson11/Lesson11%20C%2B%2B/#21","text":"\u54c8\u5e0c\u8868\uff08 unordered_map \uff09\u6700\u5e38\u89c1\u7684\u7528\u9014\u4e4b\u4e00\u662f \u9891\u7387\u7edf\u8ba1 \uff0c\u5373\u7528\u6765\u7edf\u8ba1\u6570\u636e\u51fa\u73b0\u7684\u6b21\u6570\u6216\u9891\u7387\u3002\u5728\u9700\u8981\u5904\u7406\u5927\u91cf\u6570\u636e\u65f6\uff0c\u54c8\u5e0c\u8868\u53ef\u4ee5\u901a\u8fc7\u952e\u503c\u5bf9\u5feb\u901f\u8bb0\u5f55\u6bcf\u4e2a\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570\u3002\u8fd9\u6837\u7684\u64cd\u4f5c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(1) \uff0c\u56e0\u6b64\u76f8\u6bd4\u4e8e\u4f7f\u7528\u6570\u7ec4\u6216\u5217\u8868\u7684 O(n) \u67e5\u627e\uff0c\u6027\u80fd\u5927\u5e45\u63d0\u5347\u3002 \u8bcd\u9891\u7edf\u8ba1\u662f\u54c8\u5e0c\u6620\u5c04\u7684\u4e00\u79cd\u7279\u6b8a\u5e94\u7528\uff0c\u91cd\u70b9\u5728\u4e8e\u5c06\u4e00\u4e2a\u503c\uff08\u5982\u5b57\u7b26\u3001\u6570\u5b57\u7b49\uff09\u6620\u5c04\u5230\u5176\u51fa\u73b0\u6b21\u6570\u4e0a\u3002\u5b83\u72ed\u4e49\u5730\u5b9a\u4e49\u4e86\u952e\u503c\u5bf9\u4e2d\u7684\u201c\u503c\u201d\u662f\u8be5\u952e\u51fa\u73b0\u7684\u9891\u7387\uff0c\u5e38\u7528\u4e8e\u7edf\u8ba1\u6570\u636e\u96c6\u4e2d\u7684\u5143\u7d20\u9891\u7387\u3002\u8bcd\u9891\u7edf\u8ba1\u901a\u5e38\u7528\u4e8e\u5b57\u7b26\u7edf\u8ba1\u3001\u5143\u7d20\u9891\u7387\u7edf\u8ba1\u7b49\u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u8bcd\u9891\u7edf\u8ba1\u662f\u4e00\u79cd\u7279\u5b9a\u7684\u54c8\u5e0c\u6620\u5c04\uff0c\u72ed\u4e49\u5730\u5c06\u952e\u503c\u5bf9\u5b9a\u4e49\u4e3a\u201c\u5143\u7d20: \u51fa\u73b0\u9891\u7387\u201d\uff0c\u7528\u4e8e\u9891\u7387\u7edf\u8ba1\u95ee\u9898\u4e2d\u3002 \u4f8b\u5982\uff0c\u5728\u5b57\u7b26\u4e32\u4e2d\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u9891\u7387\u65f6\uff0c\u54c8\u5e0c\u8868\u7684 \u952e \u662f\u5b57\u7b26\uff0c \u503c \u662f\u8be5\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\u3002","title":"2.1 \u8bcd\u9891\u7edf\u8ba1\u4ecb\u7ecd"},{"location":"lesson11/Lesson11%20C%2B%2B/#_3","text":"\u67e5\u627e\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u5143\u7d20 \u5224\u65ad\u6570\u636e\u96c6\u4e2d\u662f\u5426\u5b58\u5728\u91cd\u590d\u5143\u7d20 \u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26/\u6570\u5b57/\u5143\u7d20\u7684\u9891\u7387 #include <iostream> #include <unordered_map> #include <string> using namespace std; unordered_map<char, int> count_frequency(const string& s) { std::unordered_map<char, int> freq_dict; for (char c : s) { if (freq_dict.find(c) != freq_dict.end()) { freq_dict[c] += 1; } else { freq_dict[c] = 1; } } return freq_dict; }","title":"\u5e38\u89c1\u5e94\u7528\uff1a"},{"location":"lesson11/Lesson11%20C%2B%2B/#22","text":"","title":"2.2 \u4f8b\u9898\u8bb2\u89e3"},{"location":"lesson11/Lesson11%20C%2B%2B/#221-lc-242","text":"","title":"2.2.1 LC 242 \u6709\u6548\u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd"},{"location":"lesson11/Lesson11%20C%2B%2B/#_4","text":"\u63cf\u8ff0 \uff1a\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32s\u548ct\u3002 \u8981\u6c42 \uff1a\u5224\u65adt\u548cs\u662f\u5426\u4f7f\u7528\u4e86\u76f8\u540c\u7684\u5b57\u7b26\u6784\u6210\uff08\u5b57\u7b26\u51fa\u73b0\u7684\u79cd\u7c7b\u548c\u6570\u76ee\u90fd\u76f8\u540c","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson11/Lesson11%20C%2B%2B/#_5","text":"\u5982\u679c\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e0d\u540c\uff0c\u76f4\u63a5\u8fd4\u56de false \uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u53ef\u80fd\u662f\u5b57\u6bcd\u5f02\u4f4d\u8bcd\u3002 \u5982\u679c\u957f\u5ea6\u76f8\u540c\uff0c\u4f7f\u7528 unordered_map \u6765\u7edf\u8ba1\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32 s \u4e2d\u6bcf\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u7136\u540e\u904d\u5386\u5b57\u7b26\u4e32 t \uff0c\u76f8\u5e94\u5730\u51cf\u5c11\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\u3002\u5982\u679c\u5728\u67d0\u4e2a\u65f6\u523b\u5b57\u7b26\u7684\u9891\u7387\u5c0f\u4e8e 0\uff0c\u8868\u793a t \u4e2d\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\u591a\u4e8e s \uff0c\u6b64\u65f6\u76f4\u63a5\u8fd4\u56de false \u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson11/Lesson11%20C%2B%2B/#_6","text":"\u521b\u5efa\u4e24\u4e2a unordered_map \u50a8\u5b58\u9891\u7387\u6b21\u6570\uff0c\u8fdb\u884c\u6bd4\u8f83\u3002","title":"\u63d0\u793a"},{"location":"lesson11/Lesson11%20C%2B%2B/#_7","text":"class Solution { public: bool isAnagram(string s, string t) { // \u5982\u679c\u4e24\u4e2a\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u540c\uff0c\u76f4\u63a5\u8fd4\u56de false if (s.length() != t.length()) { return false; } // \u4f7f\u7528\u4e24\u4e2a unordered_map \u6765\u7edf\u8ba1\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u6bcf\u4e2a\u5b57\u7b26\u7684\u9891\u7387 unordered_map<char, int> count_s, count_t; // \u904d\u5386\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26\u7684\u9891\u7387 for (int i = 0; i < s.length(); ++i) { count_s[s[i]]++; count_t[t[i]]++; } // \u6bd4\u8f83\u4e24\u4e2a\u9891\u7387\u8868\u662f\u5426\u76f8\u7b49 return count_s == count_t; } };","title":"\u53c2\u8003\u89e3\u7b54\uff1a"},{"location":"lesson11/Lesson11%20C%2B%2B/#23","text":"","title":"2.3 \u4e3e\u4e00\u53cd\u4e09"},{"location":"lesson11/Lesson11%20C%2B%2B/#231-lc-387","text":"","title":"2.3.1 LC 387 \u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u552f\u4e00\u6570\u5b57"},{"location":"lesson11/Lesson11%20C%2B%2B/#_8","text":"\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u627e\u5230 \u5b83\u7684\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u7684\u5b57\u7b26\uff0c\u5e76\u8fd4\u56de\u5b83\u7684\u7d22\u5f15 \u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de -1 \u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson11/Lesson11%20C%2B%2B/#_9","text":"\u4e3a\u4e86\u627e\u5230\u5b57\u7b26\u4e32\u4e2d\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u7684\u5b57\u7b26\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e24\u6b21\u904d\u5386\u7684\u65b9\u5f0f\uff1a \u7b2c\u4e00\u6b21\u904d\u5386 \uff1a\u4f7f\u7528\u54c8\u5e0c\u8868\uff08 unordered_map \uff09\u8bb0\u5f55\u6bcf\u4e2a\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570\u3002 \u7b2c\u4e8c\u6b21\u904d\u5386 \uff1a\u68c0\u67e5\u6bcf\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u5e76\u627e\u5230\u7b2c\u4e00\u4e2a\u51fa\u73b0\u6b21\u6570\u4e3a 1 \u7684\u5b57\u7b26\uff0c\u8fd4\u56de\u5b83\u7684\u7d22\u5f15\u3002 \u5982\u679c\u6ca1\u6709\u627e\u5230\u4efb\u4f55\u7b26\u5408\u6761\u4ef6\u7684\u5b57\u7b26\uff0c\u8fd4\u56de -1 \u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson11/Lesson11%20C%2B%2B/#_10","text":"\u54c8\u5e0c\u8868 \uff08 unordered_map \uff09\u80fd\u591f\u6709\u6548\u5730\u8bb0\u5f55\u6bcf\u4e2a\u5b57\u7b26\u7684\u9891\u7387\u3002 \u6211\u4eec\u901a\u8fc7\u4e24\u6b21\u904d\u5386\u6765\u5b8c\u6210\u8fd9\u4e2a\u4efb\u52a1\uff0c\u7b2c\u4e00\u6b21\u904d\u5386\u7edf\u8ba1\u9891\u7387\uff0c\u7b2c\u4e8c\u6b21\u904d\u5386\u67e5\u627e\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u7684\u5b57\u7b26\u3002","title":"\u63d0\u793a"},{"location":"lesson11/Lesson11%20C%2B%2B/#_11","text":"class Solution { public: int firstUniqChar(string s) { // \u4f7f\u7528 unordered_map \u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570 unordered_map<char, int> count; // \u7b2c\u4e00\u6b21\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570 for (int i = 0; i < s.length(); ++i) { count[s[i]]++; } // \u7b2c\u4e8c\u6b21\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u51fa\u73b0\u6b21\u6570\u4e3a 1 \u7684\u5b57\u7b26 for (int i = 0; i < s.length(); ++i) { if (count[s[i]] == 1) { return i; // \u8fd4\u56de\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u5b57\u7b26\u7684\u7d22\u5f15 } } // \u5982\u679c\u6ca1\u6709\u627e\u5230\u4e0d\u91cd\u590d\u7684\u5b57\u7b26\uff0c\u8fd4\u56de -1 return -1; } };","title":"\u53c2\u8003\u793a\u4f8b"},{"location":"lesson11/Lesson11%20C%2B%2B/#3","text":"","title":"3 \u5feb\u901f\u67e5\u627e"},{"location":"lesson11/Lesson11%20C%2B%2B/#31","text":"\u5feb\u901f\u67e5\u627e\u662f\u901a\u8fc7\u54c8\u5e0c\u8868\uff08unordered_map\uff09\u5b9e\u73b0\u7684\uff0c\u5b83\u5229\u7528\u54c8\u5e0c\u51fd\u6570\u7684\u6027\u8d28\u5728\u5e38\u6570\u65f6\u95f4\u5185\u5b8c\u6210\u67e5\u627e\u4efb\u52a1\u3002\u5176\u6838\u5fc3\u5728\u4e8e\u9ad8\u6548\u6027\u2014\u2014\u76f8\u6bd4\u4e8e\u5217\u8868\u904d\u5386\u7684 O(n) \u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u54c8\u5e0c\u8868\u901a\u8fc7\u54c8\u5e0c\u67e5\u627e\u53ef\u4ee5\u5728 O(1) \u65f6\u95f4\u5185\u627e\u5230\u5bf9\u5e94\u7684\u503c\u3002\u5feb\u901f\u67e5\u627e\u5e76\u4e0d\u5173\u5fc3\u5177\u4f53\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u800c\u662f\u7740\u91cd\u5f3a\u8c03\u67e5\u627e\u901f\u5ea6\u7684\u63d0\u5347\u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u5feb\u901f\u67e5\u627e\u662f\u54c8\u5e0c\u8868\u5229\u7528\u54c8\u5e0c\u51fd\u6570\u5b9e\u73b0\u7684\u9ad8\u6548\u67e5\u627e\u64cd\u4f5c\uff0c\u5f3a\u8c03\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(1)\uff0c\u9002\u7528\u4e8e\u5728\u6570\u636e\u96c6\u4e2d\u5feb\u901f\u5b9a\u4f4d\u7279\u5b9a\u5143\u7d20\u3002 \u4f8b\u5982\uff0c\u901a\u8fc7\u7ed9\u5b9a\u5b66\u751f\u5b66\u53f7\uff0c\u67e5\u627e\u5bf9\u5e94\u7684\u5b66\u751f\u59d3\u540d\u65f6\uff0c\u54c8\u5e0c\u8868\u53ef\u4ee5\u5feb\u901f\u8fd4\u56de\u67e5\u8be2\u7ed3\u679c\u3002 #include <iostream> #include <unordered_map> using namespace std; int main() { // \u521b\u5efa\u54c8\u5e0c\u8868\uff0c\u5b58\u50a8\u5b66\u53f7\u548c\u59d3\u540d unordered_map<int, string> students = { {1001, \"Alice\"}, {1002, \"Bob\"}, {1003, \"Charlie\"} }; // \u6839\u636e\u5b66\u53f7\u5feb\u901f\u67e5\u627e\u5bf9\u5e94\u7684\u5b66\u751f\u59d3\u540d int student_id = 1002; cout << students[student_id] << endl; // \u8f93\u51fa\uff1aBob return 0; }","title":"3.1 \u5feb\u901f\u67e5\u627e\u4ecb\u7ecd"},{"location":"lesson11/Lesson11%20C%2B%2B/#32","text":"","title":"3.2\u4f8b\u9898\u8bb2\u89e3"},{"location":"lesson11/Lesson11%20C%2B%2B/#321-lc-1","text":"","title":"3.2.1 LC 1 \u4e24\u6570\u4e4b\u548c"},{"location":"lesson11/Lesson11%20C%2B%2B/#_12","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u548c\u4e00\u4e2a\u6574\u6570\u76ee\u6807\u503c target \uff0c\u8bf7\u4f60\u5728\u8be5\u6570\u7ec4\u4e2d\u627e\u51fa \u548c\u4e3a\u76ee\u6807\u503c target \u7684\u90a3 \u4e24\u4e2a \u6574\u6570\uff0c\u5e76\u8fd4\u56de\u5b83\u4eec\u7684\u6570\u7ec4\u4e0b\u6807\u3002 \u4f60\u53ef\u4ee5\u5047\u8bbe\u6bcf\u79cd\u8f93\u5165\u53ea\u4f1a\u5bf9\u5e94\u4e00\u4e2a\u7b54\u6848\uff0c\u5e76\u4e14\u4f60\u4e0d\u80fd\u4f7f\u7528\u4e24\u6b21\u76f8\u540c\u7684\u5143\u7d20\u3002 \u4f60\u53ef\u4ee5\u6309\u4efb\u610f\u987a\u5e8f\u8fd4\u56de\u7b54\u6848\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson11/Lesson11%20C%2B%2B/#_13","text":"\u904d\u5386\u6570\u7ec4\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570 nums[i] \uff1a \u67e5\u627e\u54c8\u5e0c\u8868\u4e2d\u662f\u5426\u5b58\u5728 target - nums[i] \uff0c\u5982\u679c\u5b58\u5728\uff0c\u5219\u8f93\u51fa target - nums[i] \u5bf9\u5e94\u7684\u4e0b\u6807\u548c\u5f53\u524d\u6570\u7ec4\u7684\u4e0b\u6807 i \u3002 \u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u5c06 nums[i] \u548c\u4e0b\u6807 i \u5b58\u5165\u54c8\u5e0c\u8868\u4e2d\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson11/Lesson11%20C%2B%2B/#_14","text":"\u5c5e\u4e8e unordered_map \u4e2d\u7684\u5feb\u901f\u67e5\u627e\u3002","title":"\u63d0\u793a"},{"location":"lesson11/Lesson11%20C%2B%2B/#_15","text":"class Solution { public: vector<int> twoSum(vector<int>& nums, int target) { unordered_map<int, int> hashtable; // \u7528\u4e8e\u5b58\u50a8\u6570\u503c\u548c\u5176\u5bf9\u5e94\u7684\u4e0b\u6807 for (int i = 0; i < nums.size(); i++) { int complement = target - nums[i]; // \u8ba1\u7b97\u5dee\u503c if (hashtable.find(complement) != hashtable.end()) { // \u5982\u679c\u5dee\u503c\u5728\u54c8\u5e0c\u8868\u4e2d return {hashtable[complement], i}; // \u8fd4\u56de\u5dee\u503c\u5bf9\u5e94\u7684\u4e0b\u6807\u548c\u5f53\u524d\u4e0b\u6807 } hashtable[nums[i]] = i; // \u5c06\u5f53\u524d\u503c\u548c\u4e0b\u6807\u5b58\u5165\u54c8\u5e0c\u8868 } return {}; // \u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u8fd4\u56de\u7a7a\u6570\u7ec4 } };","title":"\u53c2\u8003\u89e3\u7b54\uff1a"},{"location":"lesson11/Lesson11%20C%2B%2B/#33","text":"","title":"3.3 \u4e3e\u4e00\u53cd\u4e09"},{"location":"lesson11/Lesson11%20C%2B%2B/#331-lc-217","text":"","title":"3.3.1 LC 217 \u5b58\u5728\u91cd\u590d\u5143\u7d20"},{"location":"lesson11/Lesson11%20C%2B%2B/#_16","text":"\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u3002\u5982\u679c\u4efb\u4e00\u503c\u5728\u6570\u7ec4\u4e2d\u51fa\u73b0 \u81f3\u5c11\u4e24\u6b21 \uff0c\u8fd4\u56de true \uff1b\u5982\u679c\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u4e92\u4e0d\u76f8\u540c\uff0c\u8fd4\u56de false \u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson11/Lesson11%20C%2B%2B/#_17","text":"\u8fd9\u9053\u9898\u76ee\u8981\u6c42\u5224\u65ad\u4e00\u4e2a\u6570\u7ec4\u4e2d\u662f\u5426\u5b58\u5728\u91cd\u590d\u7684\u6570\u5b57\u3002\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a unordered_map \u6765\u5b58\u50a8\u6bcf\u4e2a\u6570\u5b57\u662f\u5426\u5df2\u7ecf\u51fa\u73b0\u8fc7\u3002\u904d\u5386\u6570\u7ec4\u65f6\uff0c\u6bcf\u9047\u5230\u4e00\u4e2a\u6570\u5b57\uff0c\u5c31\u68c0\u67e5\u5b83\u662f\u5426\u5df2\u7ecf\u5b58\u5728\u4e8e unordered_map \u4e2d\u3002\u5982\u679c\u5df2\u7ecf\u5b58\u5728\uff0c\u8bf4\u660e\u8be5\u6570\u5b57\u91cd\u590d\u4e86\uff0c\u76f4\u63a5\u8fd4\u56de true \uff1b\u5982\u679c\u6ca1\u6709\uff0c\u5c31\u5c06\u8be5\u6570\u5b57\u52a0\u5165 unordered_map \u4e2d\uff0c\u7ee7\u7eed\u68c0\u67e5\u4e0b\u4e00\u4e2a\u6570\u5b57\u3002\u904d\u5386\u5b8c\u6570\u7ec4\u540e\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\u4efb\u4f55\u91cd\u590d\u7684\u6570\u5b57\uff0c\u5c31\u8fd4\u56de false \u3002 \u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\u6bcf\u4e2a\u6570\u5b57\u53ea\u4f1a\u68c0\u67e5\u4e00\u6b21\uff0c\u5e76\u4e14\u67e5\u627e\u548c\u5b58\u50a8\u6570\u5b57\u7684\u64cd\u4f5c\u4e5f\u5f88\u5feb\uff0c\u56e0\u6b64\u6574\u4e2a\u8fc7\u7a0b\u5f88\u9ad8\u6548\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson11/Lesson11%20C%2B%2B/#_18","text":"unordered_map \u53ef\u4ee5\u7528\u6765\u5feb\u901f\u5b58\u50a8\u548c\u67e5\u627e\u6570\u5b57\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u91cd\u590d\u7684\u6570\u5b57\uff0c\u5c5e\u4e8e\u9891\u7387\u7edf\u8ba1\u4e0e\u8ba1\u6570\u3002","title":"\u63d0\u793a"},{"location":"lesson11/Lesson11%20C%2B%2B/#_19","text":"class Solution { public: bool containsDuplicate(vector<int>& nums) { unordered_map<int, bool> seen; // \u521b\u5efa\u4e00\u4e2a unordered_map \u7528\u4e8e\u5b58\u50a8\u6570\u5b57 for (int num : nums) { if (seen.find(num) != seen.end()) { return true; // \u5982\u679c\u6570\u5b57\u5df2\u7ecf\u5b58\u5728\u4e8e map \u4e2d\uff0c\u8bf4\u660e\u91cd\u590d } seen[num] = true; // \u5426\u5219\u5c06\u8be5\u6570\u5b57\u5b58\u50a8\u5230 map \u4e2d } return false; // \u904d\u5386\u7ed3\u675f\u540e\u6ca1\u6709\u627e\u5230\u91cd\u590d\u7684\u6570\u5b57 } };","title":"\u53c2\u8003\u89e3\u7b54\uff1a"},{"location":"lesson11/Lesson11%20C%2B%2B/#4","text":"","title":"4 \u54c8\u5e0c\u6620\u5c04"},{"location":"lesson11/Lesson11%20C%2B%2B/#41","text":"\u54c8\u5e0c\u6620\u5c04\u662f\u4e00\u4e2a\u66f4\u5e7f\u6cdb\u7684\u6982\u5ff5\uff0c\u8868\u793a\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u5c06\u4e00\u4e2a\u952e\uff08key\uff09\u6620\u5c04\u5230\u4e00\u4e2a\u503c\uff08value\uff09\uff0c\u8fd9\u79cd\u952e\u503c\u5bf9\u53ef\u4ee5\u7528\u4e8e\u6784\u5efa\u5404\u79cd\u5173\u7cfb\uff0c\u4e0d\u4ec5\u9650\u4e8e\u9891\u7387\u7edf\u8ba1\u6216\u5feb\u901f\u67e5\u627e\u3002\u4f8b\u5982\uff0c\u5c06\u4eba\u540d\u6620\u5c04\u5230\u5b66\u6821\uff0c\u6216\u8005\u5c06\u5b66\u6821\u6620\u5c04\u5230\u4e00\u4e2a\u5305\u542b\u6240\u6709\u5b66\u751f\u7684\u4eba\u540d\u5217\u8868\uff0c\u90fd\u662f\u54c8\u5e0c\u6620\u5c04\u7684\u5e94\u7528\u3002\u54c8\u5e0c\u6620\u5c04\u53ef\u4ee5\u652f\u6301\u4e00\u5bf9\u4e00\u3001\u4e00\u5bf9\u591a\u7b49\u590d\u6742\u7684\u5173\u7cfb\u7ed3\u6784\u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u54c8\u5e0c\u6620\u5c04\u662f\u5e7f\u6cdb\u4f7f\u7528\u7684\u6620\u5c04\u673a\u5236\uff0c\u80fd\u591f\u7075\u6d3b\u5b9e\u73b0\u952e\u503c\u5bf9\u5173\u7cfb\uff0c\u5e94\u7528\u4e8e\u66f4\u591a\u590d\u6742\u573a\u666f\uff0c\u5982\u4e00\u5bf9\u4e00\u3001\u4e00\u5bf9\u591a\u7684\u6620\u5c04\u3002 \u4f8b\u5982\uff0c\u5c06\u4eba\u540d\u4e0e\u5b66\u6821\u5173\u8054\uff0c\u6216\u5c06\u5b66\u6821\u4e0e\u5176\u6240\u6709\u5b66\u751f\u5173\u8054\uff0c\u90fd\u53ef\u4ee5\u901a\u8fc7\u54c8\u5e0c\u6620\u5c04\u6765\u5b9e\u73b0\u3002 #include <iostream> #include <unordered_map> #include <vector> #include <string> using namespace std; int main() { // \u4eba\u540d\u5230\u5b66\u6821\u7684\u4e00\u5bf9\u4e00\u6620\u5c04 unordered_map<string, string> people_to_school = { {\"Alice\", \"Harvard\"}, {\"Bob\", \"MIT\"} }; // \u5b66\u6821\u5230\u4eba\u540d\u5217\u8868\u7684\u4e00\u5bf9\u591a\u6620\u5c04 unordered_map<string, vector<string>> school_to_people = { {\"Harvard\", {\"Alice\", \"Charlie\"}}, {\"MIT\", {\"Bob\"}} }; }","title":"4.1 \u54c8\u5e0c\u6620\u5c04\u4ecb\u7ecd"},{"location":"lesson11/Lesson11%20C%2B%2B/#42","text":"","title":"4.2 \u4f8b\u9898\u8bb2\u89e3"},{"location":"lesson11/Lesson11%20C%2B%2B/#421-lc-697","text":"","title":"4.2.1 LC 697 \u6570\u7ec4\u7684\u5ea6"},{"location":"lesson11/Lesson11%20C%2B%2B/#_20","text":"\u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u4e14\u53ea\u5305\u542b\u975e\u8d1f\u6570\u7684\u6574\u6570\u6570\u7ec4 nums \uff0c\u6570\u7ec4\u7684 \u5ea6 \u7684\u5b9a\u4e49\u662f\u6307\u6570\u7ec4\u91cc\u4efb\u4e00\u5143\u7d20\u51fa\u73b0\u9891\u6570\u7684\u6700\u5927\u503c\u3002 \u4f60\u7684\u4efb\u52a1\u662f\u5728 nums \u4e2d\u627e\u5230\u4e0e nums \u62e5\u6709\u76f8\u540c\u5927\u5c0f\u7684\u5ea6\u7684\u6700\u77ed\u8fde\u7eed\u5b50\u6570\u7ec4\uff0c\u8fd4\u56de\u5176\u957f\u5ea6\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson11/Lesson11%20C%2B%2B/#_21","text":"\u8bb0\u539f\u6570\u7ec4\u4e2d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u6570\u4e3a x\uff0c\u90a3\u4e48\u548c\u539f\u6570\u7ec4\u7684\u5ea6\u76f8\u540c\u7684\u6700\u77ed\u8fde\u7eed\u5b50\u6570\u7ec4\uff0c\u5fc5\u7136\u5305\u542b\u4e86\u539f\u6570\u7ec4\u4e2d\u7684\u5168\u90e8 x\uff0c\u4e14\u4e24\u7aef\u6070\u4e3a x \u7b2c\u4e00\u6b21\u51fa\u73b0\u548c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002 \u56e0\u4e3a\u7b26\u5408\u6761\u4ef6\u7684 x \u53ef\u80fd\u6709\u591a\u4e2a\uff0c\u5373\u591a\u4e2a\u4e0d\u540c\u7684\u6570\u5728\u539f\u6570\u7ec4\u4e2d\u51fa\u73b0\u6b21\u6570\u76f8\u540c\u3002\u6240\u4ee5\u4e3a\u4e86\u627e\u5230\u8fd9\u4e2a\u5b50\u6570\u7ec4\uff0c\u6211\u4eec\u9700\u8981\u7edf\u8ba1\u6bcf\u4e00\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u540c\u65f6\u8fd8\u9700\u8981\u7edf\u8ba1\u6bcf\u4e00\u4e2a\u6570\u7b2c\u4e00\u6b21\u51fa\u73b0\u548c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002 \u5728\u5b9e\u9645\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u54c8\u5e0c\u8868\u5b9e\u73b0\u8be5\u529f\u80fd\uff0c\u6bcf\u4e00\u4e2a\u6570\u6620\u5c04\u5230\u4e00\u4e2a\u957f\u5ea6\u4e3a 3 \u7684\u6570\u7ec4\uff0c\u6570\u7ec4\u4e2d\u7684\u4e09\u4e2a\u5143\u7d20\u5206\u522b\u4ee3\u8868\u8fd9\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\u3001\u8fd9\u4e2a\u6570\u5728\u539f\u6570\u7ec4\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u548c\u8fd9\u4e2a\u6570\u5728\u539f\u6570\u7ec4\u4e2d\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\u5f53\u6211\u4eec\u8bb0\u5f55\u5b8c\u6240\u6709\u4fe1\u606f\u540e\uff0c\u6211\u4eec\u9700\u8981\u904d\u5386\u8be5\u54c8\u5e0c\u8868\uff0c\u627e\u5230\u5143\u7d20\u51fa\u73b0\u6b21\u6570\u6700\u591a\uff0c\u4e14\u524d\u540e\u4f4d\u7f6e\u5dee\u6700\u5c0f\u7684\u6570\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson11/Lesson11%20C%2B%2B/#_22","text":"\u5148\u8bb0\u5f55\u6bcf\u4e2a\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u7b2c\u4e00\u6b21\u548c\u6700\u540e\u4e00\u6b21\u7684\u7d22\u5f15\u3002 \u627e\u5230\u6570\u7ec4\u7684\u5ea6\u548c\u6700\u77ed\u5b50\u6570\u7ec4\u7684\u957f\u5ea6\u3002","title":"\u63d0\u793a"},{"location":"lesson11/Lesson11%20C%2B%2B/#_23","text":"class Solution { public: int findShortestSubArray(vector<int>& nums) { unordered_map<int, vector<int>> mp; // \u5b58\u50a8\u6bcf\u4e2a\u6570\u5b57\u7684\u51fa\u73b0\u6b21\u6570\u3001\u7b2c\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e\u3001\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e for (int i = 0; i < nums.size(); ++i) { if (mp.count(nums[i])) { mp[nums[i]][0] += 1; // \u7edf\u8ba1\u51fa\u73b0\u6b21\u6570 mp[nums[i]][2] = i; // \u66f4\u65b0\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e } else { mp[nums[i]] = {1, i, i}; // \u521d\u59cb\u5316\uff1a\u51fa\u73b0\u6b21\u6570\u4e3a1\uff0c\u7b2c\u4e00\u6b21\u548c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e\u76f8\u540c } } int maxNum = 0, minLen = nums.size(); for (const auto& [num, data] : mp) { int count = data[0], left = data[1], right = data[2]; if (count > maxNum) { maxNum = count; minLen = right - left + 1; // \u66f4\u65b0\u6700\u77ed\u957f\u5ea6 } else if (count == maxNum) { minLen = min(minLen, right - left + 1); // \u5982\u679c\u51fa\u73b0\u6b21\u6570\u76f8\u540c\uff0c\u66f4\u65b0\u6700\u77ed\u957f\u5ea6 } } return minLen; } };","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson11/Lesson11%20C%2B%2B/#_24","text":"\u521d\u59cb\u5316\u5b57\u5178 mp \uff1a\u5b58\u50a8\u6bcf\u4e2a\u6570\u5b57\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u7d22\u5f15\uff0c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u7d22\u5f15\u3002 \u904d\u5386\u6570\u7ec4 nums \uff1a\u8bb0\u5f55\u51fa\u73b0\u6b21\u6570\uff0c\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u7d22\u5f15\uff0c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u7d22\u5f15\u3002 \u904d\u5386\u5b57\u5178 mp \u7684\u503c\uff1a\u63d0\u53d6\u6bcf\u4e2a\u6570\u5b57\u7684\u51fa\u73b0\u6b21\u6570\u3001\u7b2c\u4e00\u6b21\u548c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002 maxNum \u8bb0\u5f55\u5f53\u524d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u503c\uff08\u5373\u6570\u7ec4\u7684\u5ea6\uff09\u3002 minLen \u8bb0\u5f55\u5177\u6709\u76f8\u540c\u5ea6\u7684\u5b50\u6570\u7ec4\u7684\u6700\u77ed\u957f\u5ea6\u3002 \u5982\u679c\u5f53\u524d\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570\u5927\u4e8e maxNum \uff0c\u66f4\u65b0 maxNum \u548c\u6700\u77ed\u5b50\u6570\u7ec4\u957f\u5ea6 minLen \u3002 \u5982\u679c\u51fa\u73b0\u6b21\u6570\u76f8\u540c\uff0c\u68c0\u67e5\u5f53\u524d\u5b50\u6570\u7ec4\u662f\u5426\u6bd4\u4e4b\u524d\u7684\u77ed\uff0c\u5e76\u66f4\u65b0 minLen \u3002","title":"\u89e3\u9898\u8fc7\u7a0b\uff1a"},{"location":"lesson11/Lesson11%20C%2B%2B/#43","text":"","title":"4.3 \u4e3e\u4e00\u53cd\u4e09"},{"location":"lesson11/Lesson11%20C%2B%2B/#431-lc-205","text":"","title":"4.3.1 LC 205 \u540c\u6784\u5b57\u7b26\u4e32"},{"location":"lesson11/Lesson11%20C%2B%2B/#_25","text":"\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 s \u548c t \uff0c\u5224\u65ad\u5b83\u4eec\u662f\u5426\u662f\u540c\u6784\u7684\u3002 \u5982\u679c s \u4e2d\u7684\u5b57\u7b26\u53ef\u4ee5\u6309\u67d0\u79cd\u6620\u5c04\u5173\u7cfb\u66ff\u6362\u5f97\u5230 t \uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u662f\u540c\u6784\u7684\u3002 \u6bcf\u4e2a\u51fa\u73b0\u7684\u5b57\u7b26\u90fd\u5e94\u5f53\u6620\u5c04\u5230\u53e6\u4e00\u4e2a\u5b57\u7b26\uff0c\u540c\u65f6\u4e0d\u6539\u53d8\u5b57\u7b26\u7684\u987a\u5e8f\u3002\u4e0d\u540c\u5b57\u7b26\u4e0d\u80fd\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u5b57\u7b26\u4e0a\uff0c\u76f8\u540c\u5b57\u7b26\u53ea\u80fd\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u5b57\u7b26\u4e0a\uff0c\u5b57\u7b26\u53ef\u4ee5\u6620\u5c04\u5230\u81ea\u5df1\u672c\u8eab\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson11/Lesson11%20C%2B%2B/#_26","text":"\u6839\u636e\u9898\u610f\uff0c\u5b57\u7b26\u4e32 s \u548c t \u4e2d\u7684\u5b57\u7b26\u5728\u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u5bf9\u5e94\u5173\u7cfb\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u3002\u56e0\u6b64\uff0c\u8003\u8651\u7528\u4e24\u4e2a\u54c8\u5e0c\u8868\uff08 unordered_map \uff09\u6765\u5b58\u50a8\u6620\u5c04\u5173\u7cfb\uff1a 1. s \u7684\u6bcf\u4e2a\u5b57\u7b26\u4e0e t \u7684\u5b57\u7b26\u5efa\u7acb\u6620\u5c04\u3002 2. t \u7684\u6bcf\u4e2a\u5b57\u7b26\u4e0e s \u7684\u5b57\u7b26\u5efa\u7acb\u6620\u5c04\uff0c\u786e\u4fdd\u6620\u5c04\u7684\u552f\u4e00\u6027\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson11/Lesson11%20C%2B%2B/#_27","text":"\u5c5e\u4e8e\u5efa\u7acb\u6620\u5c04\uff0c\u901a\u8fc7\u521b\u5efa unordered_map \u5efa\u7acb\u5b57\u6bcd\u548c\u51fa\u73b0\u5b57\u6bcd\u7684\u6620\u5c04\u5173\u7cfb\u3002","title":"\u63d0\u793a"},{"location":"lesson11/Lesson11%20C%2B%2B/#_28","text":"class Solution { public: bool isIsomorphic(string s, string t) { unordered_map<char, char> s_to_t; // s -> t \u7684\u6620\u5c04 unordered_map<char, char> t_to_s; // t -> s \u7684\u6620\u5c04 for (int i = 0; i < s.size(); i++) { char s_char = s[i]; char t_char = t[i]; // \u68c0\u67e5 s -> t \u6620\u5c04\u662f\u5426\u4e00\u81f4 if (s_to_t.count(s_char) && s_to_t[s_char] != t_char) { return false; } // \u68c0\u67e5 t -> s \u6620\u5c04\u662f\u5426\u4e00\u81f4 if (t_to_s.count(t_char) && t_to_s[t_char] != s_char) { return false; } // \u5efa\u7acb s -> t \u548c t -> s \u7684\u6620\u5c04 s_to_t[s_char] = t_char; t_to_s[t_char] = s_char; } return true; // \u5982\u679c\u904d\u5386\u5b8c\u6240\u6709\u5b57\u7b26\u90fd\u6ca1\u6709\u51b2\u7a81\uff0c\u5219\u662f\u540c\u6784\u7684 } };","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson11/Lesson11%20C%2B%2B/#432-lc-219-ii","text":"","title":"4.3.2 LC 219 \u5b58\u5728\u91cd\u590d\u5143\u7d20II"},{"location":"lesson11/Lesson11%20C%2B%2B/#_29","text":"\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u548c\u4e00\u4e2a\u6574\u6570 k \uff0c\u5224\u65ad\u6570\u7ec4\u4e2d\u662f\u5426\u5b58\u5728\u4e24\u4e2a \u4e0d\u540c\u7684\u7d22\u5f15 i \u548c j \uff0c\u6ee1\u8db3 nums[i] == nums[j] \u4e14 abs(i - j) <= k \u3002\u5982\u679c\u5b58\u5728\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson11/Lesson11%20C%2B%2B/#_30","text":"\u8fd9\u9053\u9898\u662f LC 217 \u7684\u6269\u5c55\u7248\uff0c\u4e0d\u4ec5\u8981\u5224\u65ad\u662f\u5426\u6709\u91cd\u590d\u5143\u7d20\uff0c\u8fd8\u8981\u6c42\u8fd9\u4e9b\u91cd\u590d\u5143\u7d20\u7684\u7d22\u5f15\u4e4b\u5dee\u4e0d\u8d85\u8fc7\u7ed9\u5b9a\u7684\u6570\u5b57 k \u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 \u54c8\u5e0c\u8868 \u8bb0\u5f55\u6bcf\u4e2a\u6570\u5b57\u7684 \u6700\u540e\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e \u3002\u5f53\u6211\u4eec\u904d\u5386\u6570\u7ec4\u65f6\uff0c\u9047\u5230\u4e00\u4e2a\u6570\u5b57\u5148\u68c0\u67e5\u5b57\u5178\u4e2d\u662f\u5426\u5df2\u7ecf\u5b58\u5728\u5b83\uff1a \u5982\u679c\u6570\u5b57\u5b58\u5728\uff0c\u68c0\u67e5\u5b83\u4e4b\u524d\u7684\u7d22\u5f15\u548c\u5f53\u524d\u7d22\u5f15\u7684\u5dee\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e k \u3002\u5982\u679c\u6ee1\u8db3\u6761\u4ef6\uff0c\u8fd4\u56de true \u3002 \u5982\u679c\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u66f4\u65b0\u8be5\u6570\u5b57\u7684\u6700\u65b0\u51fa\u73b0\u4f4d\u7f6e\u3002 \u904d\u5386\u5b8c\u6574\u4e2a\u6570\u7ec4\u540e\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\u7b26\u5408\u6761\u4ef6\u7684\u6570\u5b57\uff0c\u8fd4\u56de false \u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson11/Lesson11%20C%2B%2B/#_31","text":"\u5728\u54c8\u5e0c\u8868\u4e2d\u8bb0\u5f55\u6bcf\u4e2a\u6570\u5b57\u7684\u6700\u540e\u51fa\u73b0\u4f4d\u7f6e\u3002 \u786e\u4fdd\u5728\u68c0\u67e5\u65f6\u4e24\u4e2a\u76f8\u540c\u6570\u5b57\u7684\u7d22\u5f15\u5dee\u5c0f\u4e8e\u7b49\u4e8e k \u3002","title":"\u63d0\u793a"},{"location":"lesson11/Lesson11%20C%2B%2B/#_32","text":"class Solution { public: bool containsNearbyDuplicate(vector<int>& nums, int k) { unordered_map<int, int> pos; // \u8bb0\u5f55\u6bcf\u4e2a\u6570\u5b57\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e for (int i = 0; i < nums.size(); ++i) { if (pos.count(nums[i]) && i - pos[nums[i]] <= k) { return true; // \u5982\u679c\u627e\u5230\u6ee1\u8db3\u6761\u4ef6\u7684\u91cd\u590d\u5143\u7d20 } pos[nums[i]] = i; // \u66f4\u65b0\u8be5\u6570\u5b57\u7684\u6700\u65b0\u4f4d\u7f6e } return false; // \u5982\u679c\u6ca1\u6709\u627e\u5230\u7b26\u5408\u6761\u4ef6\u7684\u91cd\u590d\u5143\u7d20 } };","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson11/Lesson11%20C%2B%2B/#5","text":"","title":"5 \u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson11/Lesson11%20C%2B%2B/#_33","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u9898\u76ee\u63cf\u8ff0 LC 451 \u6839\u636e\u5b57\u7b26\u51fa\u73b0\u9891\u7387\u6392\u5e8f \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8bf7\u5c06\u5b57\u7b26\u6309\u51fa\u73b0\u9891\u7387\u6392\u5e8f\u3002 LC 692 \u524dK\u4e2a\u9ad8\u9891\u5355\u8bcd \u7ed9\u5b9a\u4e00\u4e2a\u5355\u8bcd\u5217\u8868\uff0c\u8fd4\u56de\u524d K \u4e2a\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684\u5355\u8bcd\u3002 LC 347 \u524dK\u4e2a\u9ad8\u9891\u5143\u7d20 \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\uff0c\u8fd4\u56de\u51fa\u73b0\u9891\u7387\u524d K \u9ad8\u7684\u5143\u7d20 LC 554 \u780c\u5899 \u8ba1\u7b97\u901a\u8fc7\u4e00\u5835\u5899\u7684\u5782\u76f4\u7ebf\u6bb5\u7a7f\u8fc7\u7684\u7816\u5757\u6570\u91cf\u6700\u5c11\u7684\u5730\u65b9\u3002 LC 2085 \u7edf\u8ba1\u51fa\u73b0\u8fc7\u4e00\u6b21\u7684\u516c\u5171\u5b57\u7b26\u4e32 \u8fd4\u56de\u5728\u4e24\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\u90fd\u6070\u597d\u51fa\u73b0\u4e00\u6b21\u7684\u5b57\u7b26\u4e32\u7684\u6570\u76ee\u3002","title":"\u9891\u7387\u7edf\u8ba1"},{"location":"lesson11/Lesson11%20C%2B%2B/#_34","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u9898\u76ee\u63cf\u8ff0 LC 594 \u6700\u957f\u548c\u8c10\u5b50\u5e8f\u5217 \u627e\u5230\u548c\u8c10\u5b50\u5e8f\u5217\u7684\u6700\u957f\u957f\u5ea6\uff0c\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u76f8\u5dee\u4e3a1\u3002 LC 525 \u8fde\u7eed\u6570\u7ec4 \u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\u7ec4\uff0c\u627e\u5230\u957f\u5ea6\u76f8\u540c\u76840\u548c1\u7684\u6700\u957f\u5b50\u6570\u7ec4\u3002 LC 49 \u5b57\u6bcd\u5f02\u4f4d\u8bcd\u5206\u7ec4 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4\uff0c\u5c06\u5b57\u6bcd\u5f02\u4f4d\u8bcd\u7ec4\u5408\u5728\u4e00\u8d77\u3002 LC 169 \u591a\u6570\u5143\u7d20 \u7ed9\u5b9a\u4e00\u4e2a\u5927\u5c0f\u4e3an\u7684\u6570\u7ec4nums\uff0c\u8fd4\u56de\u5176\u4e2d\u7684\u591a\u6570\u5143\u7d20\u3002 LC 409 \u6700\u957f\u56de\u6587\u4e32 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\u5176\u4e2d\u53ef\u4ee5\u6784\u6210\u7684\u6700\u957f\u56de\u6587\u4e32\u7684\u957f\u5ea6\u3002","title":"\u5feb\u901f\u67e5\u627e"},{"location":"lesson11/Lesson11%20C%2B%2B/#_35","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u9898\u76ee\u63cf\u8ff0 LC 290 \u5355\u8bcd\u89c4\u5f8b \u7ed9\u5b9a\u4e00\u79cd\u89c4\u5f8b pattern \u548c\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u5224\u65ad s \u662f\u5426\u9075\u5faa\u76f8\u540c\u7684\u89c4\u5f8b\u3002 LC 560 \u548c\u4e3aK\u7684\u5b50\u6570\u7ec4 \u627e\u51fa\u6570\u7ec4\u4e2d\u548c\u4e3a k \u7684\u8fde\u7eed\u5b50\u6570\u7ec4\u7684\u4e2a\u6570\u3002 LC 249 \u79fb\u4f4d\u5b57\u7b26\u4e32\u5206\u7ec4 \u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b\u4ec5\u5c0f\u5199\u5b57\u6bcd\u5b57\u7b26\u4e32\u7684\u5217\u8868\uff0c\u5c06\u8be5\u5217\u8868\u4e2d\u6240\u6709\u6ee1\u8db3 \u201c\u79fb\u4f4d\u201d \u64cd\u4f5c\u89c4\u5f8b\u7684\u7ec4\u5408\u8fdb\u884c\u5206\u7ec4\u5e76\u8fd4\u56de\u3002 LC 953 \u9a8c\u8bc1\u5916\u661f\u8bed\u8bcd\u5178 \u7ed9\u5b9a\u4e00\u4e2a\u5916\u661f\u8bcd\u5178\u7684\u987a\u5e8f\u8868\uff0c\u5224\u65ad\u4e00\u7ec4\u5355\u8bcd\u662f\u5426\u6309\u7167\u8fd9\u4e2a\u5916\u661f\u8bcd\u5178\u7684\u987a\u5e8f\u6392\u5217\u3002 LC 12 \u6574\u6570\u8f6c\u7f57\u9a6c\u6570\u5b57 \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\uff0c\u5c06\u5176\u8f6c\u6362\u4e3a\u7f57\u9a6c\u6570\u5b57\u3002","title":"\u54c8\u5e0c\u6620\u5c04"},{"location":"lesson11/Lesson11%20Java/","text":"Lesson11 \u5b57\u5178(HashMap)\u4e13\u9898 \u76ee\u5f55 HashMap\u7684\u57fa\u672c\u6982\u5ff5 1.1 Java \u4e2d\u7684 HashMap 1.2 HashMap \u7684\u57fa\u672c\u7279\u6027 1.3 HashMap \u7684\u5e38\u7528\u65b9\u6cd5 1.4 \u793a\u4f8b\u4ee3\u7801 1.5 \u904d\u5386HashMap 1.6 \u54c8\u5e0c\u8868\u7684\u539f\u7406\u548c\u6027\u8d28 1.7 HashMap\u7684\u5e38\u89c1\u5e94\u7528 \u4f8b\u9898\u8bb2\u89e3\u548c\u4e3e\u4e00\u53cd\u4e09 2.1 \u9891\u7387\u7edf\u8ba1\u4e0e\u8ba1\u6570\u4e13\u9898 \u4f8b\u9898\u8bb2\u89e3\uff1aLC242-\u6709\u6548\u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd \u4e3e\u4e00\u53cd\u4e09\uff1aLC387-\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u552f\u4e00\u5b57\u7b26 2.2 \u5feb\u901f\u67e5\u627e\u4e13\u9898 \u4f8b\u9898\u8bb2\u89e3\uff1aLC1-\u4e24\u6570\u4e4b\u548c \u4e3e\u4e00\u53cd\u4e09\uff1aLC222-\u4e3e\u4e00\u53cd\u4e09\u4f8b\u9898\u8bb2\u89e3lc217-\u5b58\u5728\u91cd\u590d\u5143\u7d20 2.3 \u54c8\u5e0c\u6620\u5c04\u4e13\u9898 \u4f8b\u9898\u8bb2\u89e3\uff1aLC231-lc-697-\u6570\u7ec4\u7684\u5ea6 \u4e3e\u4e00\u53cd\u4e09\uff1aLC205-\u540c\u6784\u5b57\u7b26\u4e32 \u4e3e\u4e00\u53cd\u4e09\uff1aLC219-\u5b58\u5728\u91cd\u590d\u5143\u7d20ii \u8bfe\u540e\u7ec3\u4e60 1. HashMap\u7684\u57fa\u672c\u6982\u5ff5 1.1 Java \u4e2d\u7684 HashMap HashMap \u662f Java \u4e2d\u7684\u4e00\u4e2a\u975e\u5e38\u5e38\u7528\u7684\u6570\u636e\u7ed3\u6784\uff0c\u7528\u6765\u5b58\u50a8\u952e\u503c\u5bf9\uff08Key-Value\uff09\u7684\u6620\u5c04\u3002\u5b83\u662f\u57fa\u4e8e \u54c8\u5e0c\u8868 \u5b9e\u73b0\u7684\uff0c\u56e0\u6b64\u80fd\u63d0\u4f9b\u9ad8\u6548\u7684\u63d2\u5165\u3001\u5220\u9664\u548c\u67e5\u627e\u64cd\u4f5c\u3002 HashMap \u5141\u8bb8\u5b58\u50a8 null \u952e\u548c null \u503c\uff0c\u4f46\u5b83\u662f \u975e\u540c\u6b65 \u7684\uff0c\u5373\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u64cd\u4f5c\u65f6\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6570\u636e\u4e0d\u4e00\u81f4\u3002 1.2 HashMap \u7684\u57fa\u672c\u7279\u6027\uff1a \u65e0\u5e8f\u5b58\u50a8 \uff1a HashMap \u4e2d\u7684\u952e\u503c\u5bf9\u662f\u65e0\u5e8f\u7684\uff0c\u63d2\u5165\u987a\u5e8f\u4e0d\u88ab\u4fdd\u8bc1\u3002 \u5141\u8bb8 null \u952e\u548c null \u503c \uff1a HashMap \u5141\u8bb8\u4e00\u4e2a null \u952e\u548c\u591a\u4e2a null \u503c\u3002 1.3 HashMap \u7684\u5e38\u7528\u65b9\u6cd5\uff1a put(K key, V value) \uff1a\u5c06\u6307\u5b9a\u7684\u952e\u503c\u5bf9\u63d2\u5165\u5230\u6620\u5c04\u4e2d\u3002\u5982\u679c\u952e\u5df2\u7ecf\u5b58\u5728\uff0c\u5219\u66f4\u65b0\u5176\u5bf9\u5e94\u7684\u503c\u3002 get(Object key) \uff1a\u6839\u636e\u952e\u83b7\u53d6\u5bf9\u5e94\u7684\u503c\uff0c\u5982\u679c\u952e\u4e0d\u5b58\u5728\u5219\u8fd4\u56de null \u3002 remove(Object key) \uff1a\u6839\u636e\u952e\u5220\u9664\u5bf9\u5e94\u7684\u952e\u503c\u5bf9\u3002 containsKey(Object key) \uff1a\u68c0\u67e5 HashMap \u4e2d\u662f\u5426\u5b58\u5728\u6307\u5b9a\u7684\u952e\u3002 containsValue(Object value) \uff1a\u68c0\u67e5 HashMap \u4e2d\u662f\u5426\u5b58\u5728\u6307\u5b9a\u7684\u503c\u3002 size() \uff1a\u8fd4\u56de HashMap \u4e2d\u952e\u503c\u5bf9\u7684\u6570\u91cf\u3002 isEmpty() \uff1a\u68c0\u67e5 HashMap \u662f\u5426\u4e3a\u7a7a\u3002 keySet() \uff1a\u8fd4\u56de HashMap \u4e2d\u6240\u6709\u952e\u7684\u96c6\u5408\u3002 values() \uff1a\u8fd4\u56de HashMap \u4e2d\u6240\u6709\u503c\u7684\u96c6\u5408\u3002 entrySet() \uff1a\u8fd4\u56de HashMap \u4e2d\u6240\u6709\u952e\u503c\u5bf9\u7684\u96c6\u5408\u3002 1.4 \u793a\u4f8b\u4ee3\u7801 import java.util.HashMap; public class HashMapExample { public static void main(String[] args) { // \u521b\u5efa\u4e00\u4e2a HashMap \u5b9e\u4f8b HashMap<String, Integer> map = new HashMap<>(); // \u6dfb\u52a0\u952e\u503c\u5bf9 map.put(\"Apple\", 10); map.put(\"Banana\", 20); map.put(\"Orange\", 30); // \u83b7\u53d6\u952e\u503c\u5bf9 System.out.println(\"Apple: \" + map.get(\"Apple\")); // \u8f93\u51fa: Apple: 10 // \u5224\u65ad\u662f\u5426\u5305\u542b\u952e\u6216\u503c System.out.println(\"Contains key 'Banana': \" + map.containsKey(\"Banana\")); // \u8f93\u51fa: true System.out.println(\"Contains value 30: \" + map.containsValue(30)); // \u8f93\u51fa: true // \u5220\u9664\u952e\u503c\u5bf9 map.remove(\"Banana\"); System.out.println(\"After removal of 'Banana': \" + map); // \u83b7\u53d6 HashMap \u7684\u5927\u5c0f System.out.println(\"Size of map: \" + map.size()); } } \u8fd0\u884c\u7ed3\u679c\uff1a Apple: 10 Contains key 'Banana': true Contains value 30: true After removal of 'Banana': {Apple=10, Orange=30} Size of map: 2 1.5. \u904d\u5386 HashMap Java\u7684 HashMap \u63d0\u4f9b\u4e86\u591a\u79cd\u904d\u5386\u65b9\u5f0f\uff1a 1.5.1 \u904d\u5386\u952e \u53ef\u4ee5\u4f7f\u7528 keySet() \u65b9\u6cd5\u83b7\u53d6\u6240\u6709\u952e\uff0c\u5e76\u904d\u5386\u5b83\u4eec\uff1a for (KeyType key : map.keySet()) { System.out.println(key); } 1.5.2 \u904d\u5386\u503c \u53ef\u4ee5\u4f7f\u7528 values() \u65b9\u6cd5\u83b7\u53d6\u6240\u6709\u503c\u5e76\u904d\u5386\u5b83\u4eec\uff1a for (ValueType value : map.values()) { System.out.println(value); } 1.5.3 \u904d\u5386\u952e\u503c\u5bf9 \u53ef\u4ee5\u4f7f\u7528 entrySet() \u65b9\u6cd5\u904d\u5386\u6240\u6709\u952e\u503c\u5bf9\uff1a for (Map.Entry<KeyType, ValueType> entry : map.entrySet()) { System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue()); } \u793a\u4f8b\u4ee3\u7801 import java.util.HashMap; import java.util.Map; public class HashMapTraversalExample { public static void main(String[] args) { // \u521b\u5efa\u5e76\u521d\u59cb\u5316\u4e00\u4e2a HashMap HashMap<String, Integer> map = new HashMap<>(); map.put(\"Apple\", 10); map.put(\"Banana\", 20); map.put(\"Orange\", 30); map.put(\"Grapes\", 40); // 1. \u904d\u5386\u952e (key) \u96c6\u5408 System.out.println(\"\u904d\u5386\u952e\u96c6\u5408 (Keys):\"); for (String key : map.keySet()) { System.out.println(\"Key: \" + key); } // 2. \u904d\u5386\u503c (value) \u96c6\u5408 System.out.println(\"\\n\u904d\u5386\u503c\u96c6\u5408 (Values):\"); for (Integer value : map.values()) { System.out.println(\"Value: \" + value); } // 3. \u904d\u5386\u952e\u503c\u5bf9 (key-value pairs) System.out.println(\"\\n\u904d\u5386\u952e\u503c\u5bf9 (Key-Value Pairs):\"); for (Map.Entry<String, Integer> entry : map.entrySet()) { System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue()); } } } 1.6 \u54c8\u5e0c\u8868\u7684\u539f\u7406\u548c\u6027\u8d28 1.6.1 \u57fa\u672c\u7ed3\u6784 \u952e\u503c\u5bf9\uff08Key-Value Pair\uff09 \uff1a \u5728 HashMap \u4e2d\uff0c\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f\u4e00\u4e2a\u952e\u503c\u5bf9\uff0c\u5305\u542b\u4e00\u4e2a\u552f\u4e00\u7684\u952e\u548c\u4e0e\u4e4b\u5173\u8054\u7684\u503c\u3002 \u952e\u662f\u552f\u4e00\u7684\uff0c\u4e0d\u80fd\u91cd\u590d\uff0c\u800c\u503c\u53ef\u4ee5\u91cd\u590d\u3002 \u6876\uff08Bucket\uff09 \uff1a HashMap \u4f7f\u7528\u6570\u7ec4\u6765\u5b58\u50a8\u6876\uff0c\u6570\u7ec4\u7684\u6bcf\u4e2a\u5143\u7d20\u79f0\u4e3a\u4e00\u4e2a\u6876\u3002\u6bcf\u4e2a\u6876\u53ef\u4ee5\u5b58\u50a8\u4e00\u4e2a\u6216\u591a\u4e2a\u952e\u503c\u5bf9\u3002 \u6876\u7684\u6570\u91cf\u7531 HashMap \u7684\u5bb9\u91cf\uff08capacity\uff09\u51b3\u5b9a\u3002 \u54c8\u5e0c\u51fd\u6570 \uff1a HashMap \u4f7f\u7528\u54c8\u5e0c\u51fd\u6570\u5c06\u952e\u6620\u5c04\u5230\u6876\u7684\u7d22\u5f15\u3002 1.6.2 \u5de5\u4f5c\u539f\u7406 \u63d2\u5165\u64cd\u4f5c \uff1a \u8ba1\u7b97\u952e\u7684\u54c8\u5e0c\u503c\uff0c\u5e76\u6839\u636e\u54c8\u5e0c\u503c\u8ba1\u7b97\u6876\u7684\u7d22\u5f15\u3002 \u5982\u679c\u5bf9\u5e94\u6876\u4e3a\u7a7a\uff0c\u76f4\u63a5\u63d2\u5165\u952e\u503c\u5bf9\u3002 \u5982\u679c\u6876\u4e0d\u4e3a\u7a7a\uff0c\u5219\u68c0\u67e5\u94fe\u8868\u4e2d\u662f\u5426\u5b58\u5728\u76f8\u540c\u7684\u952e\uff0c\u82e5\u5b58\u5728\uff0c\u5219\u66f4\u65b0\u503c\uff1b\u82e5\u4e0d\u5b58\u5728\uff0c\u5219\u5728\u94fe\u8868\u672b\u5c3e\u6dfb\u52a0\u65b0\u952e\u503c\u5bf9\u3002 \u67e5\u627e\u64cd\u4f5c \uff1a \u6839\u636e\u952e\u8ba1\u7b97\u6876\u7684\u7d22\u5f15\u3002 \u68c0\u67e5\u6876\u4e2d\u662f\u5426\u6709\u952e\u503c\u5bf9\uff0c\u5982\u679c\u6709\uff0c\u901a\u8fc7\u904d\u5386\u94fe\u8868\u67e5\u627e\u5bf9\u5e94\u7684\u503c\u3002 \u5220\u9664\u64cd\u4f5c \uff1a \u6839\u636e\u952e\u8ba1\u7b97\u6876\u7684\u7d22\u5f15\u3002 \u68c0\u67e5\u6876\u4e2d\u662f\u5426\u6709\u952e\u503c\u5bf9\uff0c\u5982\u679c\u6709\uff0c\u901a\u8fc7\u904d\u5386\u94fe\u8868\u627e\u5230\u5e76\u5220\u9664\u5bf9\u5e94\u7684\u952e\u503c\u5bf9\u3002 1.6.3 \u54c8\u5e0c\u51fd\u6570\u8be6\u89e3 HashMap \u901a\u8fc7 \u54c8\u5e0c\u51fd\u6570 \uff08hash function\uff09\u7528 key \u5b9a\u4f4d\u5230\u5bf9\u5e94\u7684\u6876\u3002\u54c8\u5e0c\u51fd\u6570\u7684\u4f5c\u7528\u662f\u5c06\u4e00\u4e2a\u8f83\u5927\u7684\u8f93\u5165\u7a7a\u95f4\u6620\u5c04\u5230\u4e00\u4e2a\u8f83\u5c0f\u7684\u8f93\u51fa\u7a7a\u95f4\u3002\u5728\u54c8\u5e0c\u8868\u4e2d\uff0c\u8f93\u5165\u7a7a\u95f4\u662f\u6240\u6709\u7684 key \uff0c\u8f93\u51fa\u7a7a\u95f4\u662f\u6240\u6709\u6876\uff08\u6570\u7ec4\u7d22\u5f15\uff09\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8f93\u5165\u4e00\u4e2a key \uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u5f97\u5230\u8be5 key \u5728\u6570\u7ec4\u4e2d\u7684\u5b58\u50a8\u4f4d\u7f6e\u3002 \u5bf9\u4e8e\u8f93\u5165\u4e00\u4e2a key \uff0c\u54c8\u5e0c\u51fd\u6570\u7684\u8ba1\u7b97\u8fc7\u7a0b\u5206\u4e3a\u4ee5\u4e0b\u4e24\u6b65\uff1a \u901a\u8fc7\u67d0\u79cd\u54c8\u5e0c\u7b97\u6cd5\u8ba1\u7b97\u5f97\u5230\u54c8\u5e0c\u503c\u3002 \u5c06\u54c8\u5e0c\u503c\u5bf9\u6876\u6570\u91cf\uff08\u6570\u7ec4\u957f\u5ea6\uff09 capacity \u53d6\u6a21\uff0c\u4ece\u800c\u83b7\u53d6\u8be5 key \u5bf9\u5e94\u7684\u6570\u7ec4\u7d22\u5f15 index \u3002 java index = hash(key) % capacity; \u968f\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528 index \u5728\u54c8\u5e0c\u8868\u4e2d\u8bbf\u95ee\u5bf9\u5e94\u7684\u6876\uff0c\u4ece\u800c\u83b7\u53d6 value \u3002 \u8bbe\u6570\u7ec4\u957f\u5ea6 capacity = 100 \uff0c\u54c8\u5e0c\u7b97\u6cd5 hash(key) = key \uff0c\u5219\u54c8\u5e0c\u51fd\u6570\u4e3a key % 100 \u3002\u4e0b\u56fe\u4ee5 key \u4e3a\u5b66\u53f7\u548c value \u4e3a\u59d3\u540d\u7684\u4f8b\u5b50\uff0c\u5c55\u793a\u4e86\u54c8\u5e0c\u51fd\u6570\u7684\u5de5\u4f5c\u539f\u7406\u3002 \u54c8\u5e0c\u51b2\u7a81\u4e0e\u6027\u80fd \u4ece\u672c\u8d28\u4e0a\u770b\uff0c\u54c8\u5e0c\u51fd\u6570\u7684\u4f5c\u7528\u662f\u5c06\u6240\u6709 key \u6784\u6210\u7684\u8f93\u5165\u7a7a\u95f4\u6620\u5c04\u5230\u6570\u7ec4\u6240\u6709\u7d22\u5f15\u6784\u6210\u7684\u8f93\u51fa\u7a7a\u95f4\uff0c\u800c\u8f93\u5165\u7a7a\u95f4\u5f80\u5f80\u8fdc\u5927\u4e8e\u8f93\u51fa\u7a7a\u95f4\u3002\u56e0\u6b64\uff0c \u7406\u8bba\u4e0a\u5fc5\u7136\u5b58\u5728\u591a\u4e2a\u8f93\u5165\u5bf9\u5e94\u76f8\u540c\u8f93\u51fa\u7684\u60c5\u51b5 \u3002 \u4f8b\u5982\uff0c\u4f7f\u7528\u4e0a\u8ff0\u54c8\u5e0c\u51fd\u6570\uff0c\u5f53\u8f93\u5165\u7684 key \u540e\u4e24\u4f4d\u76f8\u540c\u65f6\uff0c\u54c8\u5e0c\u51fd\u6570\u7684\u8f93\u51fa\u7ed3\u679c\u4e5f\u76f8\u540c\u3002\u5047\u8bbe\u67e5\u8be2\u5b66\u53f7\u4e3a 12836 \u548c 20336 \u7684\u4e24\u4e2a\u5b66\u751f\u65f6\uff0c\u6211\u4eec\u5f97\u5230\uff1a 12836 % 100 = 36 20336 % 100 = 36 \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c HashMap \u4f7f\u7528\u4ee5\u4e0b\u7b56\u7565\uff1a \u5728 HashMap \u4e2d\uff0c\u54c8\u5e0c\u51b2\u7a81\u53d1\u751f\u65f6\uff0c\u4f1a\u5c06\u591a\u4e2a\u952e\u503c\u5bf9\u5b58\u50a8\u5728\u540c\u4e00\u4e2a\u6876\u4e2d\u3002\u8fd9\u4f1a\u5bfc\u81f4\u4ee5\u4e0b\u51e0\u70b9\u7279\u6027\uff1a \u94fe\u8868\u5b58\u50a8 \uff1a \u5f53\u591a\u4e2a\u952e\u88ab\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u6876\u65f6\uff0c HashMap \u4f1a\u5728\u8be5\u6876\u4e2d\u4f7f\u7528\u94fe\u8868\u6765\u5b58\u50a8\u8fd9\u4e9b\u952e\u503c\u5bf9\u3002\u6bcf\u4e2a\u952e\u503c\u5bf9\u7531\u4e00\u4e2a\u8282\u70b9\u8868\u793a\uff0c\u8282\u70b9\u4e2d\u5b58\u50a8\u4e86\u952e\u3001\u503c\u4ee5\u53ca\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u5f15\u7528\u3002 \u67e5\u627e\u6027\u80fd\u4e0b\u964d \uff1a \u5728\u67e5\u627e\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u53d1\u751f\u54c8\u5e0c\u51b2\u7a81\uff0c\u7cfb\u7edf\u9700\u8981\u6cbf\u7740\u94fe\u8868\u904d\u5386\u8fd9\u4e9b\u8282\u70b9\u4ee5\u627e\u5230\u5bf9\u5e94\u7684\u503c\u3002\u8fd9\u610f\u5473\u7740\u67e5\u627e\u6027\u80fd\u4f1a\u53d7\u5230\u5f71\u54cd\uff0c\u5c24\u5176\u662f\u5f53\u6876\u4e2d\u5b58\u50a8\u7684\u952e\u503c\u5bf9\u6570\u91cf\u8f83\u591a\u65f6\uff0c\u6700\u574f\u60c5\u51b5\u4e0b\u67e5\u627e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c06\u53d8\u4e3a O(n)\uff0c\u5176\u4e2d n \u662f\u51b2\u7a81\u6876\u4e2d\u952e\u503c\u5bf9\u7684\u6570\u91cf\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u94fe\u8868\u7684\u957f\u5ea6\u5927\u4e8e\u9608\u503c\uff08\u9ed8\u8ba4\u662f 8\uff09\uff0c HashMap \u4f1a\u5c06\u94fe\u8868\u8f6c\u6362\u4e3a\u7ea2\u9ed1\u6811\uff0c\u4ece\u800c\u63d0\u9ad8\u67e5\u627e\u6548\u7387\u3002\u4f7f\u7528\u7ea2\u9ed1\u6811\u7684\u67e5\u627e\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(log n)\uff0c\u8fd9\u5728\u952e\u503c\u5bf9\u6570\u91cf\u8f83\u591a\u65f6\u80fd\u663e\u8457\u63d0\u5347\u6027\u80fd\u3002 \u5bb9\u91cf\u4e0e\u8d1f\u8f7d\u56e0\u5b50 \uff1a \u4e3a\u4e86\u51cf\u5c11\u54c8\u5e0c\u51b2\u7a81\uff0c HashMap \u7684\u5bb9\u91cf\u548c\u8d1f\u8f7d\u56e0\u5b50\uff08load factor\uff09\u8bbe\u7f6e\u5f97\u5f53\u662f\u5f88\u91cd\u8981\u7684\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c HashMap \u7684\u521d\u59cb\u5bb9\u91cf\u662f 16\uff0c\u8d1f\u8f7d\u56e0\u5b50\u662f 0.75\u3002\u8fd9\u610f\u5473\u7740\u5f53\u586b\u5145\u7684\u6bd4\u4f8b\u8d85\u8fc7 75% \u65f6\uff0c HashMap \u4f1a\u6269\u5bb9\u5e76\u91cd\u65b0\u8ba1\u7b97\u6240\u6709\u952e\u503c\u5bf9\u7684\u4f4d\u7f6e\uff0c\u4ece\u800c\u964d\u4f4e\u51b2\u7a81\u7684\u6982\u7387\u3002 1.7 HashMap\u7684\u5e38\u89c1\u5e94\u7528 1.7.1 \u5b57\u7b26\u9891\u7387\u7edf\u8ba1 \u5b57\u5178\u6700\u5e38\u89c1\u7684\u7528\u9014\u4e4b\u4e00\u662f \u9891\u7387\u7edf\u8ba1 \uff0c\u5373\u7528\u6765\u7edf\u8ba1\u6570\u636e\u51fa\u73b0\u7684\u6b21\u6570\u6216\u9891\u7387\u3002\u5728\u9700\u8981\u5904\u7406\u5927\u91cf\u6570\u636e\u65f6\uff0c\u5b57\u5178\u53ef\u4ee5\u901a\u8fc7\u952e\u503c\u5bf9\u5feb\u901f\u8bb0\u5f55\u6bcf\u4e2a\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570\u3002\u8fd9\u6837\u7684\u64cd\u4f5c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(1)\uff0c\u56e0\u6b64\u76f8\u6bd4\u4e8e\u4f7f\u7528\u5217\u8868\u7684 O(n) \u67e5\u627e\uff0c\u6027\u80fd\u5927\u5e45\u63d0\u5347\u3002 \u5e38\u89c1\u5e94\u7528\uff1a \u67e5\u627e\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u5143\u7d20 \u5224\u65ad\u6570\u636e\u96c6\u4e2d\u662f\u5426\u5b58\u5728\u91cd\u590d\u5143\u7d20 \u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26/\u6570\u5b57/\u5143\u7d20\u7684\u9891\u7387 \u793a\u4f8b\u4ee3\u7801 import java.util.HashMap; public class FrequencyCounter { public static void main(String[] args) { String input = \"hello world\"; HashMap<Character, Integer> frequencyMap = countFrequency(input); // \u6253\u5370\u6bcf\u4e2a\u5b57\u7b26\u7684\u9891\u7387 for (Character key : frequencyMap.keySet()) { System.out.println(key + \": \" + frequencyMap.get(key)); } } // \u7edf\u8ba1\u5b57\u7b26\u9891\u7387 public static HashMap<Character, Integer> countFrequency(String s) { HashMap<Character, Integer> freqMap = new HashMap<>(); for (char c : s.toCharArray()) { // \u5982\u679c\u5b57\u7b26\u5df2\u7ecf\u5728\u54c8\u5e0c\u8868\u4e2d\uff0c\u5219\u589e\u52a0\u8ba1\u6570 if (freqMap.containsKey(c)) { freqMap.put(c, freqMap.get(c) + 1); } else { // \u5982\u679c\u5b57\u7b26\u4e0d\u5728\u54c8\u5e0c\u8868\u4e2d\uff0c\u521d\u59cb\u5316\u8ba1\u6570\u4e3a 1 freqMap.put(c, 1); } } return freqMap; } } 1.7.2 \u5feb\u901f\u67e5\u627e \u5feb\u901f\u67e5\u627e\u662f\u901a\u8fc7\u54c8\u5e0c\u8868\u5b9e\u73b0\u7684\uff0c\u5b83\u5229\u7528\u54c8\u5e0c\u51fd\u6570\u7684\u6027\u8d28\u5728\u5e38\u6570\u65f6\u95f4\u5185\u5b8c\u6210\u67e5\u627e\u4efb\u52a1\u3002\u5176\u6838\u5fc3\u5728\u4e8e\u9ad8\u6548\u6027\u2014\u2014\u76f8\u6bd4\u4e8e\u5217\u8868\u904d\u5386\u7684 O(n)\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u5b57\u5178\u901a\u8fc7\u54c8\u5e0c\u67e5\u627e\u53ef\u4ee5\u5728 O(1) \u65f6\u95f4\u5185\u627e\u5230\u5bf9\u5e94\u7684\u503c\u3002\u5feb\u901f\u67e5\u627e\u5e76\u4e0d\u5173\u5fc3\u5177\u4f53\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u800c\u662f\u7740\u91cd\u5f3a\u8c03\u67e5\u627e\u901f\u5ea6\u7684\u63d0\u5347\u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u5feb\u901f\u67e5\u627e\u662f\u5b57\u5178\u5229\u7528\u54c8\u5e0c\u8868\u5b9e\u73b0\u7684\u9ad8\u6548\u67e5\u627e\u64cd\u4f5c\uff0c\u5f3a\u8c03\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(1)\uff0c\u9002\u7528\u4e8e\u5728\u6570\u636e\u96c6\u4e2d\u5feb\u901f\u5b9a\u4f4d\u7279\u5b9a\u5143\u7d20\u3002 \u4f8b\u5982\uff0c\u901a\u8fc7\u7ed9\u5b9a\u5b66\u751f\u5b66\u53f7\uff0c\u67e5\u627e\u5bf9\u5e94\u7684\u5b66\u751f\u59d3\u540d\u65f6\uff0c\u5b57\u5178\u901a\u8fc7\u54c8\u5e0c\u8868\u53ef\u4ee5\u5feb\u901f\u8fd4\u56de\u67e5\u8be2\u7ed3\u679c\u3002 import java.util.HashMap; public class HashMapExample { public static void main(String[] args) { // \u521b\u5efa HashMap\uff0c\u5b58\u50a8\u5b66\u53f7\u548c\u59d3\u540d HashMap<Integer, String> students = new HashMap<>(); // \u5411 HashMap \u6dfb\u52a0\u952e\u503c\u5bf9 students.put(1001, \"Alice\"); students.put(1002, \"Bob\"); students.put(1003, \"Charlie\"); // \u6839\u636e\u5b66\u53f7\u5feb\u901f\u67e5\u627e\u5bf9\u5e94\u7684\u5b66\u751f\u59d3\u540d int studentId = 1002; System.out.println(students.get(studentId)); // \u8f93\u51fa\uff1aBob } } 1.7.3 \u54c8\u5e0c\u6620\u5c04 \u54c8\u5e0c\u6620\u5c04\u662f\u4e00\u4e2a\u66f4\u5e7f\u6cdb\u7684\u6982\u5ff5\uff0c\u8868\u793a\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u5c06\u4e00\u4e2a\u952e\uff08key\uff09\u6620\u5c04\u5230\u4e00\u4e2a\u503c\uff08value\uff09\uff0c\u8fd9\u79cd\u952e\u503c\u5bf9\u53ef\u4ee5\u7528\u4e8e\u6784\u5efa\u5404\u79cd\u5173\u7cfb\uff0c\u4e0d\u4ec5\u9650\u4e8e\u9891\u7387\u7edf\u8ba1\u6216\u5feb\u901f\u67e5\u627e\u3002\u4f8b\u5982\uff0c\u5c06\u4eba\u540d\u6620\u5c04\u5230\u5b66\u6821\uff0c\u6216\u8005\u5c06\u5b66\u6821\u6620\u5c04\u5230\u4e00\u4e2a\u5305\u542b\u6240\u6709\u5b66\u751f\u7684\u4eba\u540d\u5217\u8868\uff0c\u90fd\u662f\u54c8\u5e0c\u6620\u5c04\u7684\u5e94\u7528\u3002\u54c8\u5e0c\u6620\u5c04\u53ef\u4ee5\u652f\u6301\u4e00\u5bf9\u4e00\u3001\u4e00\u5bf9\u591a\u7b49\u590d\u6742\u7684\u5173\u7cfb\u7ed3\u6784\u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u54c8\u5e0c\u6620\u5c04\u662f\u5e7f\u6cdb\u4f7f\u7528\u7684\u6620\u5c04\u673a\u5236\uff0c\u80fd\u591f\u7075\u6d3b\u5b9e\u73b0\u952e\u503c\u5bf9\u5173\u7cfb\uff0c\u5e94\u7528\u4e8e\u66f4\u591a\u590d\u6742\u573a\u666f\uff0c\u5982\u4e00\u5bf9\u4e00\u3001\u4e00\u5bf9\u591a\u7684\u6620\u5c04\u3002 \u4e00\u5bf9\u4e00\u6620\u5c04\u793a\u4f8b import java.util.HashMap; public class HashMapExample { public static void main(String[] args) { // \u521b\u5efa\u4e00\u4e2aHashMap\u7528\u4e8e\u5b58\u50a8\u4eba\u540d\u5230\u5b66\u6821\u7684\u6620\u5c04\uff08\u4eba\u540d -> \u5b66\u6821\uff09 HashMap<String, String> peopleToSchool = new HashMap<>(); // \u6dfb\u52a0\u4e00\u4e9b\u952e\u503c\u5bf9 peopleToSchool.put(\"Alice\", \"Harvard\"); peopleToSchool.put(\"Bob\", \"MIT\"); // \u6253\u5370\u6620\u5c04 System.out.println(\"Alice's school: \" + peopleToSchool.get(\"Alice\")); // \u8f93\u51fa: Harvard System.out.println(\"Bob's school: \" + peopleToSchool.get(\"Bob\")); // \u8f93\u51fa: MIT } } \u4e00\u5bf9\u591a\u6620\u5c04\u793a\u4f8b import java.util.HashMap; import java.util.ArrayList; import java.util.List; public class HashMapOneToMany { public static void main(String[] args) { // \u521b\u5efa\u4e00\u4e2aHashMap\u7528\u4e8e\u5b58\u50a8\u5b66\u6821\u5230\u5b66\u751f\u5217\u8868\u7684\u6620\u5c04\uff08\u5b66\u6821 -> \u5b66\u751f\u5217\u8868\uff09 HashMap<String, List<String>> schoolToPeople = new HashMap<>(); // \u5411Harvard\u5b66\u6821\u6dfb\u52a0\u5b66\u751f List<String> harvardStudents = new ArrayList<>(); harvardStudents.add(\"Alice\"); harvardStudents.add(\"Charlie\"); schoolToPeople.put(\"Harvard\", harvardStudents); // \u5411MIT\u5b66\u6821\u6dfb\u52a0\u5b66\u751f List<String> mitStudents = new ArrayList<>(); mitStudents.add(\"Bob\"); schoolToPeople.put(\"MIT\", mitStudents); // \u6253\u5370\u5b66\u6821\u5bf9\u5e94\u7684\u5b66\u751f\u5217\u8868 System.out.println(\"Students at Harvard: \" + schoolToPeople.get(\"Harvard\")); // \u8f93\u51fa: [Alice, Charlie] System.out.println(\"Students at MIT: \" + schoolToPeople.get(\"MIT\")); // \u8f93\u51fa: [Bob] } } \u8bf4\u660e\uff1a \u4e00\u5bf9\u4e00\u6620\u5c04 \uff1a HashMap<String, String> \u5b58\u50a8\u4eba\u540d\uff08\u952e\uff09\u4e0e\u5b66\u6821\u540d\u79f0\uff08\u503c\uff09\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u6bcf\u4e2a\u952e\u53ea\u80fd\u6620\u5c04\u5230\u4e00\u4e2a\u503c\u3002 \u4e00\u5bf9\u591a\u6620\u5c04 \uff1a\u4f7f\u7528 HashMap<String, List<String>> \u6765\u5b9e\u73b0\u5b66\u6821\u540d\u79f0\uff08\u952e\uff09\u5230\u5b66\u751f\u5217\u8868\uff08\u503c\uff09\u7684\u6620\u5c04\uff0c\u8868\u793a\u4e00\u4e2a\u5b66\u6821\u53ef\u4ee5\u5173\u8054\u5230\u591a\u4e2a\u5b66\u751f\u3002 2. \u4f8b\u9898\u8bb2\u89e3\u548c\u4e3e\u4e00\u53cd\u4e09 2.1 \u9891\u7387\u7edf\u8ba1\u4e0e\u8ba1\u6570\u4e13\u9898 2.1.1 \u4f8b\u9898\u8bb2\u89e3\uff1aLC242 \u6709\u6548\u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd \u95ee\u9898\u63cf\u8ff0 \u63cf\u8ff0 \uff1a\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32s\u548ct\u3002 \u8981\u6c42 \uff1a\u5224\u65adt\u548cs\u662f\u5426\u4f7f\u7528\u4e86\u76f8\u540c\u7684\u5b57\u7b26\u6784\u6210\uff08\u5b57\u7b26\u51fa\u73b0\u7684\u79cd\u7c7b\u548c\u6570\u76ee\u90fd\u76f8\u540c\uff09\u3002 \u601d\u8def\u5206\u6790 \u957f\u5ea6\u68c0\u67e5 \uff1a \u9996\u5148\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002\u5982\u679c\u957f\u5ea6\u4e0d\u76f8\u7b49\uff0c\u7acb\u5373\u8fd4\u56de false \u3002\u8fd9\u662f\u56e0\u4e3a\u5b57\u6bcd\u5f02\u4f4d\u8bcd\u5fc5\u987b\u5177\u6709\u76f8\u540c\u6570\u91cf\u7684\u5b57\u7b26\u3002 \u5b57\u7b26\u9891\u7387\u7edf\u8ba1 \uff1a \u4f7f\u7528\u4e24\u4e2a\u54c8\u5e0c\u8868\uff08 HashMap \uff09\u5206\u522b\u7edf\u8ba1\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u6bcf\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\u3002\u54c8\u5e0c\u8868\u7684\u952e\u4e3a\u5b57\u7b26\uff0c\u503c\u4e3a\u8be5\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570\u3002 \u904d\u5386\u5b57\u7b26\u4e32 \uff1a \u904d\u5386\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5b57\u7b26\uff0c\u66f4\u65b0\u5176\u5728\u54c8\u5e0c\u8868 countS \u4e2d\u7684\u8ba1\u6570\u3002 \u540c\u65f6\u904d\u5386\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e32 t \uff0c\u66f4\u65b0\u5176\u5728\u54c8\u5e0c\u8868 countT \u4e2d\u7684\u8ba1\u6570\u3002 \u6bd4\u8f83\u54c8\u5e0c\u8868 \uff1a \u6700\u540e\uff0c\u901a\u8fc7\u6bd4\u8f83\u4e24\u4e2a\u54c8\u5e0c\u8868\u662f\u5426\u76f8\u7b49\u6765\u5224\u65ad\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u6709\u6548\u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd\u3002\u5982\u679c\u76f8\u7b49\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\u8fd4\u56de false \u3002 \u53c2\u8003\u89e3\u7b54 import java.util.HashMap; class Solution { public boolean isAnagram(String s, String t) { // \u5982\u679c\u4e24\u4e2a\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u76f8\u540c\uff0c\u76f4\u63a5\u8fd4\u56de false if (s.length() != t.length()) { return false; } // \u521b\u5efa\u4e24\u4e2a HashMap \u7528\u4e8e\u5b58\u50a8\u5b57\u7b26\u51fa\u73b0\u7684\u9891\u7387 HashMap<Character, Integer> countS = new HashMap<>(); HashMap<Character, Integer> countT = new HashMap<>(); // \u904d\u5386\u5b57\u7b26\u4e32 s \u548c t\uff0c\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570 for (int i = 0; i < s.length(); i++) { countS.put(s.charAt(i), countS.getOrDefault(s.charAt(i), 0) + 1); countT.put(t.charAt(i), countT.getOrDefault(t.charAt(i), 0) + 1); } // \u6bd4\u8f83\u4e24\u4e2a HashMap \u662f\u5426\u76f8\u7b49 return countS.equals(countT); } } 2.1.2 \u4e3e\u4e00\u53cd\u4e09\uff1aLC 387 \u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u552f\u4e00\u5b57\u7b26 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u627e\u5230\u5b83\u7684\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u7684\u5b57\u7b26\uff0c\u5e76\u8fd4\u56de\u5b83\u7684\u7d22\u5f15\u3002\u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u5b57\u7b26\uff0c\u5219\u8fd4\u56de -1 \u3002 \u601d\u8def\u5206\u6790 \u4e3a\u4e86\u6709\u6548\u5730\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 HashMap \u6765\u8bb0\u5f55\u6bcf\u4e2a\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570\u3002\u8fd9\u79cd\u65b9\u6cd5\u5206\u4e3a\u4e24\u4e2a\u6b65\u9aa4\uff1a \u7b2c\u4e00\u6b21\u904d\u5386\uff1a\u7edf\u8ba1\u5b57\u7b26\u51fa\u73b0\u6b21\u6570 \u4f7f\u7528 HashMap \u8bb0\u5f55\u5b57\u7b26\u4e32\u4e2d\u6bcf\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\u3002 \u7b2c\u4e8c\u6b21\u904d\u5386\uff1a\u627e\u5230\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u7684\u5b57\u7b26 \u518d\u6b21\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u68c0\u67e5\u6bcf\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u51fa\u73b0\u6b21\u6570\u4e3a 1 \u7684\u5b57\u7b26\uff0c\u5e76\u8fd4\u56de\u5176\u7d22\u5f15\u3002 \u53c2\u8003\u89e3\u7b54 import java.util.HashMap; class Solution { public int firstUniqChar(String s) { HashMap<Character, Integer> count = new HashMap<>(); // \u521b\u5efa HashMap \u6765\u5b58\u50a8\u5b57\u7b26\u8ba1\u6570 // \u7b2c\u4e00\u6b21\u904d\u5386\uff0c\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570 for (int i = 0; i < s.length(); i++) { char currentChar = s.charAt(i); count.put(currentChar, count.getOrDefault(currentChar, 0) + 1); } // \u7b2c\u4e8c\u6b21\u904d\u5386\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u7684\u5b57\u7b26 for (int i = 0; i < s.length(); i++) { if (count.get(s.charAt(i)) == 1) { // \u68c0\u67e5\u5b57\u7b26\u51fa\u73b0\u6b21\u6570 return i; // \u8fd4\u56de\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u5b57\u7b26\u7684\u7d22\u5f15 } } return -1; // \u5982\u679c\u6ca1\u6709\u627e\u5230\u4e0d\u91cd\u590d\u5b57\u7b26\uff0c\u8fd4\u56de -1 } } 2.2 \u5feb\u901f\u67e5\u627e\u4e13\u9898 2.2.1 \u4f8b\u9898\u8bb2\u89e3\uff1aLC1 \u4e24\u6570\u4e4b\u548c \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u548c\u4e00\u4e2a\u6574\u6570\u76ee\u6807\u503c target \uff0c\u8bf7\u4f60\u5728\u8be5\u6570\u7ec4\u4e2d\u627e\u51fa\u548c\u4e3a\u76ee\u6807\u503c target \u7684\u90a3\u4e24\u4e2a\u6574\u6570\uff0c\u5e76\u8fd4\u56de\u5b83\u4eec\u7684\u6570\u7ec4\u4e0b\u6807\u3002\u5047\u8bbe\u6bcf\u79cd\u8f93\u5165\u53ea\u4f1a\u5bf9\u5e94\u4e00\u4e2a\u7b54\u6848\uff0c\u5e76\u4e14\u4e0d\u80fd\u4f7f\u7528\u540c\u4e00\u4e2a\u5143\u7d20\u4e24\u6b21\u3002 \u601d\u8def\u5206\u6790 \u904d\u5386\u6570\u7ec4\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570 nums[i] \uff1a \u67e5\u627e HashMap \u4e2d\u662f\u5426\u5b58\u5728 target - nums[i] \uff0c\u5982\u679c\u5b58\u5728\uff0c\u5219\u8f93\u51fa\u8be5\u503c\u5bf9\u5e94\u7684\u4e0b\u6807\u548c\u5f53\u524d\u6570\u7ec4\u7684\u4e0b\u6807 i \u3002 \u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u5c06\u5f53\u524d\u6570 nums[i] \u548c\u5b83\u7684\u4e0b\u6807 i \u5b58\u5165 HashMap \u4e2d\u3002 \u53c2\u8003\u89e3\u7b54\uff1a import java.util.HashMap; class Solution { public int[] twoSum(int[] nums, int target) { // \u521b\u5efa\u4e00\u4e2a HashMap \u6765\u5b58\u50a8\u6570\u5b57\u53ca\u5176\u5bf9\u5e94\u7684\u4e0b\u6807 HashMap<Integer, Integer> hashtable = new HashMap<>(); // \u904d\u5386\u6570\u7ec4 for (int i = 0; i < nums.length; i++) { // \u8ba1\u7b97\u5f53\u524d\u6570\u5b57\u6240\u9700\u7684\u53e6\u4e00\u4e2a\u6570\u5b57 int complement = target - nums[i]; // \u68c0\u67e5 HashMap \u4e2d\u662f\u5426\u5b58\u5728\u6240\u9700\u7684\u6570\u5b57 if (hashtable.containsKey(complement)) { // \u8fd4\u56de\u6240\u9700\u6570\u5b57\u7684\u4e0b\u6807\u548c\u5f53\u524d\u6570\u5b57\u7684\u4e0b\u6807 return new int[] { hashtable.get(complement), i }; } // \u5c06\u5f53\u524d\u6570\u5b57\u548c\u5b83\u7684\u4e0b\u6807\u5b58\u5165 HashMap hashtable.put(nums[i], i); } // \u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u8fd4\u56de\u7a7a\u6570\u7ec4\uff08\u6839\u636e\u9898\u610f\uff0c\u5e94\u8be5\u6c38\u8fdc\u627e\u5230\u7b54\u6848\uff09 return new int[0]; } } 2.2.2 \u4e3e\u4e00\u53cd\u4e09\uff1a\u4f8b\u9898\u8bb2\u89e3\uff1aLC217 \u5b58\u5728\u91cd\u590d\u5143\u7d20 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u3002\u5982\u679c\u4efb\u4e00\u503c\u5728\u6570\u7ec4\u4e2d\u51fa\u73b0 \u81f3\u5c11\u4e24\u6b21 \uff0c\u8fd4\u56de true \uff1b\u5982\u679c\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u4e92\u4e0d\u76f8\u540c\uff0c\u8fd4\u56de false \u3002 \u601d\u8def\u5206\u6790 \u8fd9\u9053\u9898\u76ee\u8981\u6c42\u5224\u65ad\u4e00\u4e2a\u6570\u7ec4\u91cc\u6709\u6ca1\u6709\u91cd\u590d\u7684\u6570\u5b57\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a HashMap \u6765\u5b58\u50a8\u6bcf\u4e2a\u6570\u5b57\u662f\u5426\u5df2\u7ecf\u51fa\u73b0\u8fc7\u3002\u5f53\u6211\u4eec\u904d\u5386\u6570\u7ec4\u65f6\uff0c\u6bcf\u9047\u5230\u4e00\u4e2a\u6570\u5b57\uff0c\u5c31\u68c0\u67e5\u5b83\u662f\u5426\u5df2\u7ecf\u5b58\u5728\u4e8e HashMap \u4e2d\u3002\u5982\u679c\u5df2\u7ecf\u5b58\u5728\uff0c\u8bf4\u660e\u8fd9\u4e2a\u6570\u5b57\u91cd\u590d\u4e86\uff0c\u76f4\u63a5\u8fd4\u56de true \uff1b\u5982\u679c\u6ca1\u6709\uff0c\u5c31\u628a\u8fd9\u4e2a\u6570\u5b57\u52a0\u5230 HashMap \u91cc\uff0c\u7ee7\u7eed\u68c0\u67e5\u4e0b\u4e00\u4e2a\u6570\u5b57\u3002\u904d\u5386\u5b8c\u6570\u7ec4\u540e\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\u4efb\u4f55\u91cd\u590d\u6570\u5b57\uff0c\u5c31\u8fd4\u56de false \u3002 \u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\u6bcf\u4e2a\u6570\u5b57\u53ea\u4f1a\u68c0\u67e5\u4e00\u6b21\uff0c\u5e76\u4e14\u67e5\u627e\u548c\u5b58\u50a8\u6570\u5b57\u7684\u64cd\u4f5c\u4e5f\u5f88\u5feb\uff0c\u56e0\u6b64\u6574\u4e2a\u8fc7\u7a0b\u5f88\u9ad8\u6548\u3002 \u63d0\u793a HashMap \u53ef\u4ee5\u7528\u6765\u5feb\u901f\u5b58\u50a8\u548c\u67e5\u627e\u6570\u5b57\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u91cd\u590d\u7684\u6570\u5b57\u3002 \u53c2\u8003\u89e3\u7b54 import java.util.HashMap; class Solution { public boolean containsDuplicate(int[] nums) { // \u521b\u5efa HashMap \u6765\u5b58\u50a8\u6570\u5b57 HashMap<Integer, Boolean> map = new HashMap<>(); // \u904d\u5386\u6570\u7ec4 for (int num : nums) { // \u5982\u679c HashMap \u5df2\u7ecf\u5305\u542b\u5f53\u524d\u6570\u5b57\uff0c\u8bf4\u660e\u6709\u91cd\u590d\uff0c\u8fd4\u56de true if (map.containsKey(num)) { return true; } // \u5426\u5219\uff0c\u5c06\u5f53\u524d\u6570\u5b57\u6dfb\u52a0\u5230 HashMap \u4e2d\uff0c\u6807\u8bb0\u4e3a\u5df2\u51fa\u73b0 map.put(num, true); } // \u5982\u679c\u904d\u5386\u7ed3\u675f\u6ca1\u6709\u53d1\u73b0\u91cd\u590d\u5143\u7d20\uff0c\u8fd4\u56de false return false; } } 2.3 \u54c8\u5e0c\u6620\u5c04\u4e13\u9898 2.3.1 LC 697 \u6570\u7ec4\u7684\u5ea6 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u4e14\u53ea\u5305\u542b\u975e\u8d1f\u6570\u7684\u6574\u6570\u6570\u7ec4 nums \uff0c\u6570\u7ec4\u7684 \u5ea6 \u7684\u5b9a\u4e49\u662f\u6307\u6570\u7ec4\u91cc\u4efb\u4e00\u5143\u7d20\u51fa\u73b0\u9891\u6570\u7684\u6700\u5927\u503c\u3002\u4f60\u7684\u4efb\u52a1\u662f\u5728 nums \u4e2d\u627e\u5230\u4e0e nums \u62e5\u6709\u76f8\u540c\u5927\u5c0f\u7684\u5ea6\u7684\u6700\u77ed\u8fde\u7eed\u5b50\u6570\u7ec4\uff0c\u8fd4\u56de\u5176\u957f\u5ea6\u3002 \u601d\u8def\u5206\u6790 \u8bb0\u539f\u6570\u7ec4\u4e2d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u6570\u4e3a x \uff0c\u90a3\u4e48\u548c\u539f\u6570\u7ec4\u7684\u5ea6\u76f8\u540c\u7684\u6700\u77ed\u8fde\u7eed\u5b50\u6570\u7ec4\uff0c\u5fc5\u7136\u5305\u542b\u4e86\u539f\u6570\u7ec4\u4e2d\u7684\u5168\u90e8 x \uff0c\u4e14\u4e24\u7aef\u6070\u4e3a x \u7b2c\u4e00\u6b21\u51fa\u73b0\u548c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002 \u4e3a\u4e86\u627e\u5230\u8fd9\u4e2a\u5b50\u6570\u7ec4\uff0c\u6211\u4eec\u9700\u8981\u7edf\u8ba1\u6bcf\u4e00\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u540c\u65f6\u8fd8\u9700\u8981\u7edf\u8ba1\u6bcf\u4e00\u4e2a\u6570\u7b2c\u4e00\u6b21\u51fa\u73b0\u548c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u54c8\u5e0c\u8868\u6765\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\uff0c\u6bcf\u4e00\u4e2a\u6570\u6620\u5c04\u5230\u4e00\u4e2a\u957f\u5ea6\u4e3a 3 \u7684\u6570\u7ec4\uff0c\u6570\u7ec4\u4e2d\u7684\u4e09\u4e2a\u5143\u7d20\u5206\u522b\u4ee3\u8868\u8fd9\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\u3001\u8fd9\u4e2a\u6570\u5728\u539f\u6570\u7ec4\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u548c\u8fd9\u4e2a\u6570\u5728\u539f\u6570\u7ec4\u4e2d\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\u5f53\u6211\u4eec\u8bb0\u5f55\u5b8c\u6240\u6709\u4fe1\u606f\u540e\uff0c\u6211\u4eec\u9700\u8981\u904d\u5386\u8be5\u54c8\u5e0c\u8868\uff0c\u627e\u5230\u5143\u7d20\u51fa\u73b0\u6b21\u6570\u6700\u591a\uff0c\u4e14\u524d\u540e\u4f4d\u7f6e\u5dee\u6700\u5c0f\u7684\u6570\u3002 \u63d0\u793a \u5148\u8bb0\u5f55\u6bcf\u4e2a\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u7b2c\u4e00\u6b21\u548c\u6700\u540e\u4e00\u6b21\u7684\u7d22\u5f15\u3002 \u627e\u5230\u6570\u7ec4\u7684\u5ea6\u548c\u6700\u77ed\u5b50\u6570\u7ec4\u7684\u957f\u5ea6\u3002 \u53c2\u8003\u89e3\u7b54 import java.util.HashMap; import java.util.Map; class Solution { public int findShortestSubArray(int[] nums) { // \u4f7f\u7528\u54c8\u5e0c\u8868\u5b58\u50a8\u6bcf\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570\u548c\u7b2c\u4e00\u6b21\u3001\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e Map<Integer, int[]> map = new HashMap<>(); for (int i = 0; i < nums.length; i++) { if (map.containsKey(nums[i])) { map.get(nums[i])[0]++; // \u589e\u52a0\u51fa\u73b0\u6b21\u6570 map.get(nums[i])[2] = i; // \u66f4\u65b0\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e } else { // \u521d\u59cb\u5316\uff1a\u51fa\u73b0\u6b21\u6570\u3001\u7b2c\u4e00\u6b21\u548c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e map.put(nums[i], new int[]{1, i, i}); } } int maxNum = 0; // \u8bb0\u5f55\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u6570\u7684\u6b21\u6570 int minLen = Integer.MAX_VALUE; // \u8bb0\u5f55\u6700\u77ed\u5b50\u6570\u7ec4\u7684\u957f\u5ea6 // \u904d\u5386\u54c8\u5e0c\u8868 for (int[] value : map.values()) { int count = value[0]; // \u51fa\u73b0\u6b21\u6570 int left = value[1]; // \u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e int right = value[2]; // \u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e // \u66f4\u65b0 maxNum \u548c minLen if (maxNum < count) { maxNum = count; minLen = right - left + 1; // \u66f4\u65b0\u6700\u77ed\u5b50\u6570\u7ec4\u957f\u5ea6 } else if (maxNum == count) { minLen = Math.min(minLen, right - left + 1); // \u66f4\u65b0\u6700\u77ed\u5b50\u6570\u7ec4\u957f\u5ea6 } } return minLen; // \u8fd4\u56de\u6700\u77ed\u5b50\u6570\u7ec4\u7684\u957f\u5ea6 } } \u89e3\u9898\u8fc7\u7a0b\uff1a \u521d\u59cb\u5316\u54c8\u5e0c\u8868 map \u3002 \u904d\u5386\u6570\u7ec4 nums \uff0c\u8bb0\u5f55\u6bcf\u4e2a\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570\u3001\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u7d22\u5f15\u548c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u7d22\u5f15\u3002 \u904d\u5386\u54c8\u5e0c\u8868\u7684\u503c\uff0c\u63d0\u53d6\u6bcf\u4e2a\u6570\u5b57\u7684\u51fa\u73b0\u6b21\u6570\u3001\u7b2c\u4e00\u6b21\u548c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002 maxNum \u8bb0\u5f55\u5f53\u524d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u503c\uff08\u5373\u6570\u7ec4\u7684\u5ea6\uff09\u3002 minLen \u8bb0\u5f55\u5177\u6709\u76f8\u540c\u5ea6\u7684\u5b50\u6570\u7ec4\u7684\u6700\u77ed\u957f\u5ea6\u3002 \u5982\u679c\u5f53\u524d\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570\u5927\u4e8e maxNum \uff0c\u66f4\u65b0 maxNum \u548c\u6700\u77ed\u5b50\u6570\u7ec4\u957f\u5ea6 minLen \u3002 \u5982\u679c\u51fa\u73b0\u6b21\u6570\u76f8\u540c\uff0c\u68c0\u67e5\u5f53\u524d\u5b50\u6570\u7ec4\u662f\u5426\u6bd4\u4e4b\u524d\u7684\u77ed\uff0c\u5e76\u66f4\u65b0 minLen \u3002 2.3.2 \u4e3e\u4e00\u53cd\u4e09\uff1aLC 205 \u540c\u6784\u5b57\u7b26\u4e32 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 s \u548c t \uff0c\u5224\u65ad\u5b83\u4eec\u662f\u5426\u662f\u540c\u6784\u7684\u3002 \u5982\u679c s \u4e2d\u7684\u5b57\u7b26\u53ef\u4ee5\u6309\u67d0\u79cd\u6620\u5c04\u5173\u7cfb\u66ff\u6362\u5f97\u5230 t \uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u662f\u540c\u6784\u7684\u3002 \u6bcf\u4e2a\u51fa\u73b0\u7684\u5b57\u7b26\u90fd\u5e94\u5f53\u6620\u5c04\u5230\u53e6\u4e00\u4e2a\u5b57\u7b26\uff0c\u540c\u65f6\u4e0d\u6539\u53d8\u5b57\u7b26\u7684\u987a\u5e8f\u3002\u4e0d\u540c\u5b57\u7b26\u4e0d\u80fd\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u5b57\u7b26\u4e0a\uff0c\u76f8\u540c\u5b57\u7b26\u53ea\u80fd\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u5b57\u7b26\u4e0a\uff0c\u5b57\u7b26\u53ef\u4ee5\u6620\u5c04\u5230\u81ea\u5df1\u672c\u8eab\u3002 \u601d\u8def\u5206\u6790 \u6839\u636e\u9898\u76ee\u610f\u601d\uff0c\u5b57\u7b26\u4e32 s \u548c t \u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u5b57\u7b26\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u3002 s \u7684\u6bcf\u4e2a\u5b57\u7b26\u90fd\u4e0e t \u5bf9\u5e94\u4f4d\u7f6e\u4e0a\u7684\u5b57\u7b26\u5bf9\u5e94\u3002\u53ef\u4ee5\u8003\u8651\u7528\u54c8\u5e0c\u8868\u6765\u5b58\u50a8 s[i]:t[i] \u7684\u5bf9\u5e94\u5173\u7cfb\u3002\u4f46\u662f\u8fd9\u6837\u53ea\u80fd\u4fdd\u8bc1\u5bf9\u5e94\u4f4d\u7f6e\u4e0a\u7684\u5b57\u7b26\u662f\u5bf9\u5e94\u7684\uff0c\u4f46\u4e0d\u80fd\u4fdd\u8bc1\u662f\u552f\u4e00\u5bf9\u5e94\u7684\u3002\u56e0\u6b64\uff0c\u8fd8\u9700\u8981\u53e6\u4e00\u4e2a\u54c8\u5e0c\u8868\u6765\u5b58\u50a8 t[i]:s[i] \u7684\u5bf9\u5e94\u5173\u7cfb\uff0c\u4ee5\u5224\u65ad\u662f\u5426\u662f\u552f\u4e00\u5bf9\u5e94\u7684\u3002 \u63d0\u793a \u5c5e\u4e8e\u5efa\u7acb\u6620\u5c04\uff0c\u901a\u8fc7\u521b\u5efa\u5b57\u5178\u5efa\u7acb\u5b57\u6bcd\u548c\u51fa\u73b0\u5b57\u6bcd\u7684\u6620\u5c04\u5173\u7cfb\u3002 \u53c2\u8003\u89e3\u7b54 import java.util.HashMap; class Solution { public boolean isIsomorphic(String s, String t) { // \u521b\u5efa\u4e24\u4e2a\u54c8\u5e0c\u8868\u6765\u5b58\u50a8\u6620\u5c04\u5173\u7cfb HashMap<Character, Character> sToT = new HashMap<>(); HashMap<Character, Character> tToS = new HashMap<>(); // \u904d\u5386\u5b57\u7b26\u4e32 s \u548c t for (int i = 0; i < s.length(); i++) { char sChar = s.charAt(i); char tChar = t.charAt(i); // \u68c0\u67e5 s \u4e2d\u7684\u5b57\u7b26\u5230 t \u7684\u6620\u5c04 if (sToT.containsKey(sChar)) { // \u5982\u679c\u5df2\u7ecf\u5b58\u5728\u6620\u5c04\u4f46\u4e0e\u5f53\u524d\u5b57\u7b26\u4e0d\u4e00\u81f4\uff0c\u8fd4\u56de false if (sToT.get(sChar) != tChar) { return false; } } else { // \u6dfb\u52a0\u6620\u5c04 sToT.put(sChar, tChar); } // \u68c0\u67e5 t \u4e2d\u7684\u5b57\u7b26\u5230 s \u7684\u6620\u5c04 if (tToS.containsKey(tChar)) { // \u5982\u679c\u5df2\u7ecf\u5b58\u5728\u6620\u5c04\u4f46\u4e0e\u5f53\u524d\u5b57\u7b26\u4e0d\u4e00\u81f4\uff0c\u8fd4\u56de false if (tToS.get(tChar) != sChar) { return false; } } else { // \u6dfb\u52a0\u6620\u5c04 tToS.put(tChar, sChar); } } return true; // \u5982\u679c\u6ca1\u6709\u51b2\u7a81\uff0c\u8fd4\u56de true } } \u89e3\u9898\u8fc7\u7a0b\uff1a \u521d\u59cb\u5316\u4e24\u4e2a\u54c8\u5e0c\u8868 sToT \u548c tToS \uff0c\u7528\u4e8e\u5b58\u50a8\u5b57\u7b26\u4e4b\u95f4\u7684\u6620\u5c04\u5173\u7cfb\u3002 \u904d\u5386\u5b57\u7b26\u4e32 s \u548c t \u7684\u6bcf\u4e2a\u5b57\u7b26\u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u5b57\u7b26\uff0c\u68c0\u67e5\u662f\u5426\u5df2\u5b58\u5728\u6620\u5c04\u5173\u7cfb\uff1a \u5982\u679c\u5df2\u5b58\u5728\u4e14\u6620\u5c04\u5173\u7cfb\u4e0d\u4e00\u81f4\uff0c\u8fd4\u56de false \u3002 \u5982\u679c\u4e0d\u5b58\u5728\u6620\u5c04\u5173\u7cfb\uff0c\u5219\u6dfb\u52a0\u65b0\u7684\u6620\u5c04\u3002 \u5982\u679c\u904d\u5386\u7ed3\u675f\u540e\u6ca1\u6709\u8fd4\u56de false \uff0c\u5219\u8bf4\u660e\u5b57\u7b26\u4e32\u662f\u540c\u6784\u7684\uff0c\u8fd4\u56de true \u3002 2.3.3 \u4e3e\u4e00\u53cd\u4e09\uff1aLC219 \u5b58\u5728\u91cd\u590d\u5143\u7d20II \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u548c\u4e00\u4e2a\u6574\u6570 k \uff0c\u5224\u65ad\u6570\u7ec4\u4e2d\u662f\u5426\u5b58\u5728\u4e24\u4e2a \u4e0d\u540c\u7684\u7d22\u5f15 i \u548c j \uff0c\u4f7f\u5f97 nums[i] == nums[j] \u4e14 abs(i - j) <= k \u3002\u5982\u679c\u5b58\u5728\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002 \u601d\u8def\u5206\u6790 \u6211\u4eec\u9700\u8981\u5224\u65ad\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u4e2d\u662f\u5426\u5b58\u5728\u4e24\u4e2a\u4e0d\u540c\u7684\u7d22\u5f15 i \u548c j \uff0c\u4f7f\u5f97 nums[i] == nums[j] \u5e76\u4e14 abs(i - j) <= k \u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u8981\u68c0\u67e5\u662f\u5426\u6709\u91cd\u590d\u7684\u5143\u7d20\uff0c\u5e76\u4e14\u8fd9\u4e9b\u5143\u7d20\u4e4b\u95f4\u7684\u7d22\u5f15\u5dee\u4e0d\u8d85\u8fc7 k \u3002 \u4f7f\u7528 HashMap \u5b58\u50a8\u7d22\u5f15 \uff1a \u6211\u4eec\u4f7f\u7528\u4e00\u4e2a HashMap\uff08\u6216\u5b57\u5178\uff09\u6765\u5b58\u50a8\u6bcf\u4e2a\u5143\u7d20\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u53ea\u9700\u8981\u5173\u5fc3\u6bcf\u4e2a\u5143\u7d20\u7684\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u7d22\u5f15\uff0c\u4ee5\u4fbf\u5feb\u901f\u5224\u65ad\u5b83\u4e0e\u5f53\u524d\u7d22\u5f15\u7684\u5dee\u503c\u3002 \u904d\u5386\u6570\u7ec4 \uff1a \u904d\u5386\u6570\u7ec4 nums \uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5143\u7d20 num \uff1a \u9996\u5148\u68c0\u67e5\u8be5\u5143\u7d20\u662f\u5426\u5df2\u5b58\u5728\u4e8e HashMap \u4e2d\uff1a \u5982\u679c\u5b58\u5728\uff0c\u8bf4\u660e\u6211\u4eec\u4e4b\u524d\u5df2\u7ecf\u9047\u5230\u8fc7\u8fd9\u4e2a\u5143\u7d20\u3002\u6b64\u65f6\uff0c\u8ba1\u7b97\u5f53\u524d\u7d22\u5f15 i \u548c\u8be5\u5143\u7d20\u4e0a\u6b21\u51fa\u73b0\u7d22\u5f15\u4e4b\u95f4\u7684\u5dee\u503c\u3002 \u5982\u679c\u8fd9\u4e2a\u5dee\u503c\u5c0f\u4e8e\u7b49\u4e8e k \uff0c\u5219\u8fd4\u56de true \uff0c\u8868\u793a\u627e\u5230\u4e86\u7b26\u5408\u6761\u4ef6\u7684\u91cd\u590d\u5143\u7d20\u3002 \u5982\u679c\u4e0d\u5b58\u5728\uff0c\u6216\u5dee\u503c\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u5219\u66f4\u65b0 HashMap\uff0c\u5c06\u8be5\u5143\u7d20\u53ca\u5176\u5f53\u524d\u7d22\u5f15\u5b58\u5165\u3002 \u904d\u5386\u7ed3\u675f \uff1a \u5982\u679c\u904d\u5386\u5b8c\u6570\u7ec4\u90fd\u6ca1\u6709\u627e\u5230\u6ee1\u8db3\u6761\u4ef6\u7684\u91cd\u590d\u5143\u7d20\uff0c\u8fd4\u56de false \u3002 \u53c2\u8003\u89e3\u7b54 import java.util.HashMap; class Solution { public boolean containsNearbyDuplicate(int[] nums, int k) { HashMap<Integer, Integer> pos = new HashMap<>(); // \u521b\u5efa\u4e00\u4e2a HashMap \u5b58\u50a8\u6570\u5b57\u53ca\u5176\u6700\u540e\u51fa\u73b0\u7684\u4f4d\u7f6e for (int i = 0; i < nums.length; i++) { // \u904d\u5386\u6570\u7ec4 if (pos.containsKey(nums[i]) && i - pos.get(nums[i]) <= k) { // \u68c0\u67e5\u662f\u5426\u5b58\u5728\u91cd\u590d\u4e14\u6ee1\u8db3\u7d22\u5f15\u5dee return true; // \u627e\u5230\u6ee1\u8db3\u6761\u4ef6\u7684\u91cd\u590d\u5143\u7d20 } pos.put(nums[i], i); // \u66f4\u65b0\u5f53\u524d\u6570\u5b57\u7684\u4f4d\u7f6e } return false; // \u6ca1\u6709\u627e\u5230\u7b26\u5408\u6761\u4ef6\u7684\u91cd\u590d\u5143\u7d20 } } 3. \u8bfe\u540e\u7ec3\u4e60 \u9891\u7387\u7edf\u8ba1 \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u9898\u76ee\u63cf\u8ff0 LC 451 \u6839\u636e\u5b57\u7b26\u51fa\u73b0\u9891\u7387\u6392\u5e8f \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8bf7\u5c06\u5b57\u7b26\u6309\u51fa\u73b0\u9891\u7387\u6392\u5e8f\u3002 LC 692 \u524dK\u4e2a\u9ad8\u9891\u5355\u8bcd \u7ed9\u5b9a\u4e00\u4e2a\u5355\u8bcd\u5217\u8868\uff0c\u8fd4\u56de\u524d K \u4e2a\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684\u5355\u8bcd\u3002 LC 347 \u524dK\u4e2a\u9ad8\u9891\u5143\u7d20 \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\uff0c\u8fd4\u56de\u51fa\u73b0\u9891\u7387\u524d K \u9ad8\u7684\u5143\u7d20 LC 554 \u780c\u5899 \u8ba1\u7b97\u901a\u8fc7\u4e00\u5835\u5899\u7684\u5782\u76f4\u7ebf\u6bb5\u7a7f\u8fc7\u7684\u7816\u5757\u6570\u91cf\u6700\u5c11\u7684\u5730\u65b9\u3002 LC 2085 \u7edf\u8ba1\u51fa\u73b0\u8fc7\u4e00\u6b21\u7684\u516c\u5171\u5b57\u7b26\u4e32 \u8fd4\u56de\u5728\u4e24\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\u90fd\u6070\u597d\u51fa\u73b0\u4e00\u6b21\u7684\u5b57\u7b26\u4e32\u7684\u6570\u76ee\u3002 \u5feb\u901f\u67e5\u627e \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u9898\u76ee\u63cf\u8ff0 LC 594 \u6700\u957f\u548c\u8c10\u5b50\u5e8f\u5217 \u627e\u5230\u548c\u8c10\u5b50\u5e8f\u5217\u7684\u6700\u957f\u957f\u5ea6\uff0c\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u76f8\u5dee\u4e3a1\u3002 LC 525 \u8fde\u7eed\u6570\u7ec4 \u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\u7ec4\uff0c\u627e\u5230\u957f\u5ea6\u76f8\u540c\u76840\u548c1\u7684\u6700\u957f\u5b50\u6570\u7ec4\u3002 LC 49 \u5b57\u6bcd\u5f02\u4f4d\u8bcd\u5206\u7ec4 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4\uff0c\u5c06\u5b57\u6bcd\u5f02\u4f4d\u8bcd\u7ec4\u5408\u5728\u4e00\u8d77\u3002 LC 169 \u591a\u6570\u5143\u7d20 \u7ed9\u5b9a\u4e00\u4e2a\u5927\u5c0f\u4e3an\u7684\u6570\u7ec4nums\uff0c\u8fd4\u56de\u5176\u4e2d\u7684\u591a\u6570\u5143\u7d20\u3002 LC 409 \u6700\u957f\u56de\u6587\u4e32 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\u5176\u4e2d\u53ef\u4ee5\u6784\u6210\u7684\u6700\u957f\u56de\u6587\u4e32\u7684\u957f\u5ea6\u3002 \u54c8\u5e0c\u6620\u5c04 \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u9898\u76ee\u63cf\u8ff0 LC 290 \u5355\u8bcd\u89c4\u5f8b \u7ed9\u5b9a\u4e00\u79cd\u89c4\u5f8b pattern \u548c\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u5224\u65ad s \u662f\u5426\u9075\u5faa\u76f8\u540c\u7684\u89c4\u5f8b\u3002 LC 560 \u548c\u4e3aK\u7684\u5b50\u6570\u7ec4 \u627e\u51fa\u6570\u7ec4\u4e2d\u548c\u4e3a k \u7684\u8fde\u7eed\u5b50\u6570\u7ec4\u7684\u4e2a\u6570\u3002 LC 249 \u79fb\u4f4d\u5b57\u7b26\u4e32\u5206\u7ec4 \u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b\u4ec5\u5c0f\u5199\u5b57\u6bcd\u5b57\u7b26\u4e32\u7684\u5217\u8868\uff0c\u5c06\u8be5\u5217\u8868\u4e2d\u6240\u6709\u6ee1\u8db3 \u201c\u79fb\u4f4d\u201d \u64cd\u4f5c\u89c4\u5f8b\u7684\u7ec4\u5408\u8fdb\u884c\u5206\u7ec4\u5e76\u8fd4\u56de\u3002 LC 953 \u9a8c\u8bc1\u5916\u661f\u8bed\u8bcd\u5178 \u7ed9\u5b9a\u4e00\u4e2a\u5916\u661f\u8bcd\u5178\u7684\u987a\u5e8f\u8868\uff0c\u5224\u65ad\u4e00\u7ec4\u5355\u8bcd\u662f\u5426\u6309\u7167\u8fd9\u4e2a\u5916\u661f\u8bcd\u5178\u7684\u987a\u5e8f\u6392\u5217\u3002 LC 12 \u6574\u6570\u8f6c\u7f57\u9a6c\u6570\u5b57 \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\uff0c\u5c06\u5176\u8f6c\u6362\u4e3a\u7f57\u9a6c\u6570\u5b57\u3002","title":"Lesson11 \u5b57\u5178(HashMap)\u4e13\u9898"},{"location":"lesson11/Lesson11%20Java/#lesson11-hashmap","text":"","title":"Lesson11 \u5b57\u5178(HashMap)\u4e13\u9898"},{"location":"lesson11/Lesson11%20Java/#_1","text":"HashMap\u7684\u57fa\u672c\u6982\u5ff5 1.1 Java \u4e2d\u7684 HashMap 1.2 HashMap \u7684\u57fa\u672c\u7279\u6027 1.3 HashMap \u7684\u5e38\u7528\u65b9\u6cd5 1.4 \u793a\u4f8b\u4ee3\u7801 1.5 \u904d\u5386HashMap 1.6 \u54c8\u5e0c\u8868\u7684\u539f\u7406\u548c\u6027\u8d28 1.7 HashMap\u7684\u5e38\u89c1\u5e94\u7528 \u4f8b\u9898\u8bb2\u89e3\u548c\u4e3e\u4e00\u53cd\u4e09 2.1 \u9891\u7387\u7edf\u8ba1\u4e0e\u8ba1\u6570\u4e13\u9898 \u4f8b\u9898\u8bb2\u89e3\uff1aLC242-\u6709\u6548\u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd \u4e3e\u4e00\u53cd\u4e09\uff1aLC387-\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u552f\u4e00\u5b57\u7b26 2.2 \u5feb\u901f\u67e5\u627e\u4e13\u9898 \u4f8b\u9898\u8bb2\u89e3\uff1aLC1-\u4e24\u6570\u4e4b\u548c \u4e3e\u4e00\u53cd\u4e09\uff1aLC222-\u4e3e\u4e00\u53cd\u4e09\u4f8b\u9898\u8bb2\u89e3lc217-\u5b58\u5728\u91cd\u590d\u5143\u7d20 2.3 \u54c8\u5e0c\u6620\u5c04\u4e13\u9898 \u4f8b\u9898\u8bb2\u89e3\uff1aLC231-lc-697-\u6570\u7ec4\u7684\u5ea6 \u4e3e\u4e00\u53cd\u4e09\uff1aLC205-\u540c\u6784\u5b57\u7b26\u4e32 \u4e3e\u4e00\u53cd\u4e09\uff1aLC219-\u5b58\u5728\u91cd\u590d\u5143\u7d20ii \u8bfe\u540e\u7ec3\u4e60","title":"\u76ee\u5f55"},{"location":"lesson11/Lesson11%20Java/#1-hashmap","text":"","title":"1. HashMap\u7684\u57fa\u672c\u6982\u5ff5"},{"location":"lesson11/Lesson11%20Java/#11-java-hashmap","text":"HashMap \u662f Java \u4e2d\u7684\u4e00\u4e2a\u975e\u5e38\u5e38\u7528\u7684\u6570\u636e\u7ed3\u6784\uff0c\u7528\u6765\u5b58\u50a8\u952e\u503c\u5bf9\uff08Key-Value\uff09\u7684\u6620\u5c04\u3002\u5b83\u662f\u57fa\u4e8e \u54c8\u5e0c\u8868 \u5b9e\u73b0\u7684\uff0c\u56e0\u6b64\u80fd\u63d0\u4f9b\u9ad8\u6548\u7684\u63d2\u5165\u3001\u5220\u9664\u548c\u67e5\u627e\u64cd\u4f5c\u3002 HashMap \u5141\u8bb8\u5b58\u50a8 null \u952e\u548c null \u503c\uff0c\u4f46\u5b83\u662f \u975e\u540c\u6b65 \u7684\uff0c\u5373\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u64cd\u4f5c\u65f6\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6570\u636e\u4e0d\u4e00\u81f4\u3002","title":"1.1 Java \u4e2d\u7684 HashMap"},{"location":"lesson11/Lesson11%20Java/#12-hashmap","text":"\u65e0\u5e8f\u5b58\u50a8 \uff1a HashMap \u4e2d\u7684\u952e\u503c\u5bf9\u662f\u65e0\u5e8f\u7684\uff0c\u63d2\u5165\u987a\u5e8f\u4e0d\u88ab\u4fdd\u8bc1\u3002 \u5141\u8bb8 null \u952e\u548c null \u503c \uff1a HashMap \u5141\u8bb8\u4e00\u4e2a null \u952e\u548c\u591a\u4e2a null \u503c\u3002","title":"1.2 HashMap \u7684\u57fa\u672c\u7279\u6027\uff1a"},{"location":"lesson11/Lesson11%20Java/#13-hashmap","text":"put(K key, V value) \uff1a\u5c06\u6307\u5b9a\u7684\u952e\u503c\u5bf9\u63d2\u5165\u5230\u6620\u5c04\u4e2d\u3002\u5982\u679c\u952e\u5df2\u7ecf\u5b58\u5728\uff0c\u5219\u66f4\u65b0\u5176\u5bf9\u5e94\u7684\u503c\u3002 get(Object key) \uff1a\u6839\u636e\u952e\u83b7\u53d6\u5bf9\u5e94\u7684\u503c\uff0c\u5982\u679c\u952e\u4e0d\u5b58\u5728\u5219\u8fd4\u56de null \u3002 remove(Object key) \uff1a\u6839\u636e\u952e\u5220\u9664\u5bf9\u5e94\u7684\u952e\u503c\u5bf9\u3002 containsKey(Object key) \uff1a\u68c0\u67e5 HashMap \u4e2d\u662f\u5426\u5b58\u5728\u6307\u5b9a\u7684\u952e\u3002 containsValue(Object value) \uff1a\u68c0\u67e5 HashMap \u4e2d\u662f\u5426\u5b58\u5728\u6307\u5b9a\u7684\u503c\u3002 size() \uff1a\u8fd4\u56de HashMap \u4e2d\u952e\u503c\u5bf9\u7684\u6570\u91cf\u3002 isEmpty() \uff1a\u68c0\u67e5 HashMap \u662f\u5426\u4e3a\u7a7a\u3002 keySet() \uff1a\u8fd4\u56de HashMap \u4e2d\u6240\u6709\u952e\u7684\u96c6\u5408\u3002 values() \uff1a\u8fd4\u56de HashMap \u4e2d\u6240\u6709\u503c\u7684\u96c6\u5408\u3002 entrySet() \uff1a\u8fd4\u56de HashMap \u4e2d\u6240\u6709\u952e\u503c\u5bf9\u7684\u96c6\u5408\u3002","title":"1.3 HashMap \u7684\u5e38\u7528\u65b9\u6cd5\uff1a"},{"location":"lesson11/Lesson11%20Java/#14","text":"import java.util.HashMap; public class HashMapExample { public static void main(String[] args) { // \u521b\u5efa\u4e00\u4e2a HashMap \u5b9e\u4f8b HashMap<String, Integer> map = new HashMap<>(); // \u6dfb\u52a0\u952e\u503c\u5bf9 map.put(\"Apple\", 10); map.put(\"Banana\", 20); map.put(\"Orange\", 30); // \u83b7\u53d6\u952e\u503c\u5bf9 System.out.println(\"Apple: \" + map.get(\"Apple\")); // \u8f93\u51fa: Apple: 10 // \u5224\u65ad\u662f\u5426\u5305\u542b\u952e\u6216\u503c System.out.println(\"Contains key 'Banana': \" + map.containsKey(\"Banana\")); // \u8f93\u51fa: true System.out.println(\"Contains value 30: \" + map.containsValue(30)); // \u8f93\u51fa: true // \u5220\u9664\u952e\u503c\u5bf9 map.remove(\"Banana\"); System.out.println(\"After removal of 'Banana': \" + map); // \u83b7\u53d6 HashMap \u7684\u5927\u5c0f System.out.println(\"Size of map: \" + map.size()); } }","title":"1.4 \u793a\u4f8b\u4ee3\u7801"},{"location":"lesson11/Lesson11%20Java/#_2","text":"Apple: 10 Contains key 'Banana': true Contains value 30: true After removal of 'Banana': {Apple=10, Orange=30} Size of map: 2","title":"\u8fd0\u884c\u7ed3\u679c\uff1a"},{"location":"lesson11/Lesson11%20Java/#15-hashmap","text":"Java\u7684 HashMap \u63d0\u4f9b\u4e86\u591a\u79cd\u904d\u5386\u65b9\u5f0f\uff1a 1.5.1 \u904d\u5386\u952e \u53ef\u4ee5\u4f7f\u7528 keySet() \u65b9\u6cd5\u83b7\u53d6\u6240\u6709\u952e\uff0c\u5e76\u904d\u5386\u5b83\u4eec\uff1a for (KeyType key : map.keySet()) { System.out.println(key); } 1.5.2 \u904d\u5386\u503c \u53ef\u4ee5\u4f7f\u7528 values() \u65b9\u6cd5\u83b7\u53d6\u6240\u6709\u503c\u5e76\u904d\u5386\u5b83\u4eec\uff1a for (ValueType value : map.values()) { System.out.println(value); } 1.5.3 \u904d\u5386\u952e\u503c\u5bf9 \u53ef\u4ee5\u4f7f\u7528 entrySet() \u65b9\u6cd5\u904d\u5386\u6240\u6709\u952e\u503c\u5bf9\uff1a for (Map.Entry<KeyType, ValueType> entry : map.entrySet()) { System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue()); }","title":"1.5. \u904d\u5386HashMap"},{"location":"lesson11/Lesson11%20Java/#_3","text":"import java.util.HashMap; import java.util.Map; public class HashMapTraversalExample { public static void main(String[] args) { // \u521b\u5efa\u5e76\u521d\u59cb\u5316\u4e00\u4e2a HashMap HashMap<String, Integer> map = new HashMap<>(); map.put(\"Apple\", 10); map.put(\"Banana\", 20); map.put(\"Orange\", 30); map.put(\"Grapes\", 40); // 1. \u904d\u5386\u952e (key) \u96c6\u5408 System.out.println(\"\u904d\u5386\u952e\u96c6\u5408 (Keys):\"); for (String key : map.keySet()) { System.out.println(\"Key: \" + key); } // 2. \u904d\u5386\u503c (value) \u96c6\u5408 System.out.println(\"\\n\u904d\u5386\u503c\u96c6\u5408 (Values):\"); for (Integer value : map.values()) { System.out.println(\"Value: \" + value); } // 3. \u904d\u5386\u952e\u503c\u5bf9 (key-value pairs) System.out.println(\"\\n\u904d\u5386\u952e\u503c\u5bf9 (Key-Value Pairs):\"); for (Map.Entry<String, Integer> entry : map.entrySet()) { System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue()); } } }","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"lesson11/Lesson11%20Java/#16","text":"","title":"1.6 \u54c8\u5e0c\u8868\u7684\u539f\u7406\u548c\u6027\u8d28"},{"location":"lesson11/Lesson11%20Java/#161","text":"\u952e\u503c\u5bf9\uff08Key-Value Pair\uff09 \uff1a \u5728 HashMap \u4e2d\uff0c\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f\u4e00\u4e2a\u952e\u503c\u5bf9\uff0c\u5305\u542b\u4e00\u4e2a\u552f\u4e00\u7684\u952e\u548c\u4e0e\u4e4b\u5173\u8054\u7684\u503c\u3002 \u952e\u662f\u552f\u4e00\u7684\uff0c\u4e0d\u80fd\u91cd\u590d\uff0c\u800c\u503c\u53ef\u4ee5\u91cd\u590d\u3002 \u6876\uff08Bucket\uff09 \uff1a HashMap \u4f7f\u7528\u6570\u7ec4\u6765\u5b58\u50a8\u6876\uff0c\u6570\u7ec4\u7684\u6bcf\u4e2a\u5143\u7d20\u79f0\u4e3a\u4e00\u4e2a\u6876\u3002\u6bcf\u4e2a\u6876\u53ef\u4ee5\u5b58\u50a8\u4e00\u4e2a\u6216\u591a\u4e2a\u952e\u503c\u5bf9\u3002 \u6876\u7684\u6570\u91cf\u7531 HashMap \u7684\u5bb9\u91cf\uff08capacity\uff09\u51b3\u5b9a\u3002 \u54c8\u5e0c\u51fd\u6570 \uff1a HashMap \u4f7f\u7528\u54c8\u5e0c\u51fd\u6570\u5c06\u952e\u6620\u5c04\u5230\u6876\u7684\u7d22\u5f15\u3002","title":"1.6.1 \u57fa\u672c\u7ed3\u6784"},{"location":"lesson11/Lesson11%20Java/#162","text":"\u63d2\u5165\u64cd\u4f5c \uff1a \u8ba1\u7b97\u952e\u7684\u54c8\u5e0c\u503c\uff0c\u5e76\u6839\u636e\u54c8\u5e0c\u503c\u8ba1\u7b97\u6876\u7684\u7d22\u5f15\u3002 \u5982\u679c\u5bf9\u5e94\u6876\u4e3a\u7a7a\uff0c\u76f4\u63a5\u63d2\u5165\u952e\u503c\u5bf9\u3002 \u5982\u679c\u6876\u4e0d\u4e3a\u7a7a\uff0c\u5219\u68c0\u67e5\u94fe\u8868\u4e2d\u662f\u5426\u5b58\u5728\u76f8\u540c\u7684\u952e\uff0c\u82e5\u5b58\u5728\uff0c\u5219\u66f4\u65b0\u503c\uff1b\u82e5\u4e0d\u5b58\u5728\uff0c\u5219\u5728\u94fe\u8868\u672b\u5c3e\u6dfb\u52a0\u65b0\u952e\u503c\u5bf9\u3002 \u67e5\u627e\u64cd\u4f5c \uff1a \u6839\u636e\u952e\u8ba1\u7b97\u6876\u7684\u7d22\u5f15\u3002 \u68c0\u67e5\u6876\u4e2d\u662f\u5426\u6709\u952e\u503c\u5bf9\uff0c\u5982\u679c\u6709\uff0c\u901a\u8fc7\u904d\u5386\u94fe\u8868\u67e5\u627e\u5bf9\u5e94\u7684\u503c\u3002 \u5220\u9664\u64cd\u4f5c \uff1a \u6839\u636e\u952e\u8ba1\u7b97\u6876\u7684\u7d22\u5f15\u3002 \u68c0\u67e5\u6876\u4e2d\u662f\u5426\u6709\u952e\u503c\u5bf9\uff0c\u5982\u679c\u6709\uff0c\u901a\u8fc7\u904d\u5386\u94fe\u8868\u627e\u5230\u5e76\u5220\u9664\u5bf9\u5e94\u7684\u952e\u503c\u5bf9\u3002","title":"1.6.2 \u5de5\u4f5c\u539f\u7406"},{"location":"lesson11/Lesson11%20Java/#163","text":"HashMap \u901a\u8fc7 \u54c8\u5e0c\u51fd\u6570 \uff08hash function\uff09\u7528 key \u5b9a\u4f4d\u5230\u5bf9\u5e94\u7684\u6876\u3002\u54c8\u5e0c\u51fd\u6570\u7684\u4f5c\u7528\u662f\u5c06\u4e00\u4e2a\u8f83\u5927\u7684\u8f93\u5165\u7a7a\u95f4\u6620\u5c04\u5230\u4e00\u4e2a\u8f83\u5c0f\u7684\u8f93\u51fa\u7a7a\u95f4\u3002\u5728\u54c8\u5e0c\u8868\u4e2d\uff0c\u8f93\u5165\u7a7a\u95f4\u662f\u6240\u6709\u7684 key \uff0c\u8f93\u51fa\u7a7a\u95f4\u662f\u6240\u6709\u6876\uff08\u6570\u7ec4\u7d22\u5f15\uff09\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8f93\u5165\u4e00\u4e2a key \uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u5f97\u5230\u8be5 key \u5728\u6570\u7ec4\u4e2d\u7684\u5b58\u50a8\u4f4d\u7f6e\u3002 \u5bf9\u4e8e\u8f93\u5165\u4e00\u4e2a key \uff0c\u54c8\u5e0c\u51fd\u6570\u7684\u8ba1\u7b97\u8fc7\u7a0b\u5206\u4e3a\u4ee5\u4e0b\u4e24\u6b65\uff1a \u901a\u8fc7\u67d0\u79cd\u54c8\u5e0c\u7b97\u6cd5\u8ba1\u7b97\u5f97\u5230\u54c8\u5e0c\u503c\u3002 \u5c06\u54c8\u5e0c\u503c\u5bf9\u6876\u6570\u91cf\uff08\u6570\u7ec4\u957f\u5ea6\uff09 capacity \u53d6\u6a21\uff0c\u4ece\u800c\u83b7\u53d6\u8be5 key \u5bf9\u5e94\u7684\u6570\u7ec4\u7d22\u5f15 index \u3002 java index = hash(key) % capacity; \u968f\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528 index \u5728\u54c8\u5e0c\u8868\u4e2d\u8bbf\u95ee\u5bf9\u5e94\u7684\u6876\uff0c\u4ece\u800c\u83b7\u53d6 value \u3002 \u8bbe\u6570\u7ec4\u957f\u5ea6 capacity = 100 \uff0c\u54c8\u5e0c\u7b97\u6cd5 hash(key) = key \uff0c\u5219\u54c8\u5e0c\u51fd\u6570\u4e3a key % 100 \u3002\u4e0b\u56fe\u4ee5 key \u4e3a\u5b66\u53f7\u548c value \u4e3a\u59d3\u540d\u7684\u4f8b\u5b50\uff0c\u5c55\u793a\u4e86\u54c8\u5e0c\u51fd\u6570\u7684\u5de5\u4f5c\u539f\u7406\u3002","title":"1.6.3 \u54c8\u5e0c\u51fd\u6570\u8be6\u89e3"},{"location":"lesson11/Lesson11%20Java/#_4","text":"\u4ece\u672c\u8d28\u4e0a\u770b\uff0c\u54c8\u5e0c\u51fd\u6570\u7684\u4f5c\u7528\u662f\u5c06\u6240\u6709 key \u6784\u6210\u7684\u8f93\u5165\u7a7a\u95f4\u6620\u5c04\u5230\u6570\u7ec4\u6240\u6709\u7d22\u5f15\u6784\u6210\u7684\u8f93\u51fa\u7a7a\u95f4\uff0c\u800c\u8f93\u5165\u7a7a\u95f4\u5f80\u5f80\u8fdc\u5927\u4e8e\u8f93\u51fa\u7a7a\u95f4\u3002\u56e0\u6b64\uff0c \u7406\u8bba\u4e0a\u5fc5\u7136\u5b58\u5728\u591a\u4e2a\u8f93\u5165\u5bf9\u5e94\u76f8\u540c\u8f93\u51fa\u7684\u60c5\u51b5 \u3002 \u4f8b\u5982\uff0c\u4f7f\u7528\u4e0a\u8ff0\u54c8\u5e0c\u51fd\u6570\uff0c\u5f53\u8f93\u5165\u7684 key \u540e\u4e24\u4f4d\u76f8\u540c\u65f6\uff0c\u54c8\u5e0c\u51fd\u6570\u7684\u8f93\u51fa\u7ed3\u679c\u4e5f\u76f8\u540c\u3002\u5047\u8bbe\u67e5\u8be2\u5b66\u53f7\u4e3a 12836 \u548c 20336 \u7684\u4e24\u4e2a\u5b66\u751f\u65f6\uff0c\u6211\u4eec\u5f97\u5230\uff1a 12836 % 100 = 36 20336 % 100 = 36 \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c HashMap \u4f7f\u7528\u4ee5\u4e0b\u7b56\u7565\uff1a \u5728 HashMap \u4e2d\uff0c\u54c8\u5e0c\u51b2\u7a81\u53d1\u751f\u65f6\uff0c\u4f1a\u5c06\u591a\u4e2a\u952e\u503c\u5bf9\u5b58\u50a8\u5728\u540c\u4e00\u4e2a\u6876\u4e2d\u3002\u8fd9\u4f1a\u5bfc\u81f4\u4ee5\u4e0b\u51e0\u70b9\u7279\u6027\uff1a \u94fe\u8868\u5b58\u50a8 \uff1a \u5f53\u591a\u4e2a\u952e\u88ab\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u6876\u65f6\uff0c HashMap \u4f1a\u5728\u8be5\u6876\u4e2d\u4f7f\u7528\u94fe\u8868\u6765\u5b58\u50a8\u8fd9\u4e9b\u952e\u503c\u5bf9\u3002\u6bcf\u4e2a\u952e\u503c\u5bf9\u7531\u4e00\u4e2a\u8282\u70b9\u8868\u793a\uff0c\u8282\u70b9\u4e2d\u5b58\u50a8\u4e86\u952e\u3001\u503c\u4ee5\u53ca\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9\u7684\u5f15\u7528\u3002 \u67e5\u627e\u6027\u80fd\u4e0b\u964d \uff1a \u5728\u67e5\u627e\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u53d1\u751f\u54c8\u5e0c\u51b2\u7a81\uff0c\u7cfb\u7edf\u9700\u8981\u6cbf\u7740\u94fe\u8868\u904d\u5386\u8fd9\u4e9b\u8282\u70b9\u4ee5\u627e\u5230\u5bf9\u5e94\u7684\u503c\u3002\u8fd9\u610f\u5473\u7740\u67e5\u627e\u6027\u80fd\u4f1a\u53d7\u5230\u5f71\u54cd\uff0c\u5c24\u5176\u662f\u5f53\u6876\u4e2d\u5b58\u50a8\u7684\u952e\u503c\u5bf9\u6570\u91cf\u8f83\u591a\u65f6\uff0c\u6700\u574f\u60c5\u51b5\u4e0b\u67e5\u627e\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c06\u53d8\u4e3a O(n)\uff0c\u5176\u4e2d n \u662f\u51b2\u7a81\u6876\u4e2d\u952e\u503c\u5bf9\u7684\u6570\u91cf\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u94fe\u8868\u7684\u957f\u5ea6\u5927\u4e8e\u9608\u503c\uff08\u9ed8\u8ba4\u662f 8\uff09\uff0c HashMap \u4f1a\u5c06\u94fe\u8868\u8f6c\u6362\u4e3a\u7ea2\u9ed1\u6811\uff0c\u4ece\u800c\u63d0\u9ad8\u67e5\u627e\u6548\u7387\u3002\u4f7f\u7528\u7ea2\u9ed1\u6811\u7684\u67e5\u627e\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(log n)\uff0c\u8fd9\u5728\u952e\u503c\u5bf9\u6570\u91cf\u8f83\u591a\u65f6\u80fd\u663e\u8457\u63d0\u5347\u6027\u80fd\u3002 \u5bb9\u91cf\u4e0e\u8d1f\u8f7d\u56e0\u5b50 \uff1a \u4e3a\u4e86\u51cf\u5c11\u54c8\u5e0c\u51b2\u7a81\uff0c HashMap \u7684\u5bb9\u91cf\u548c\u8d1f\u8f7d\u56e0\u5b50\uff08load factor\uff09\u8bbe\u7f6e\u5f97\u5f53\u662f\u5f88\u91cd\u8981\u7684\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c HashMap \u7684\u521d\u59cb\u5bb9\u91cf\u662f 16\uff0c\u8d1f\u8f7d\u56e0\u5b50\u662f 0.75\u3002\u8fd9\u610f\u5473\u7740\u5f53\u586b\u5145\u7684\u6bd4\u4f8b\u8d85\u8fc7 75% \u65f6\uff0c HashMap \u4f1a\u6269\u5bb9\u5e76\u91cd\u65b0\u8ba1\u7b97\u6240\u6709\u952e\u503c\u5bf9\u7684\u4f4d\u7f6e\uff0c\u4ece\u800c\u964d\u4f4e\u51b2\u7a81\u7684\u6982\u7387\u3002","title":"\u54c8\u5e0c\u51b2\u7a81\u4e0e\u6027\u80fd"},{"location":"lesson11/Lesson11%20Java/#17-hashmap","text":"","title":"1.7 HashMap\u7684\u5e38\u89c1\u5e94\u7528"},{"location":"lesson11/Lesson11%20Java/#171","text":"\u5b57\u5178\u6700\u5e38\u89c1\u7684\u7528\u9014\u4e4b\u4e00\u662f \u9891\u7387\u7edf\u8ba1 \uff0c\u5373\u7528\u6765\u7edf\u8ba1\u6570\u636e\u51fa\u73b0\u7684\u6b21\u6570\u6216\u9891\u7387\u3002\u5728\u9700\u8981\u5904\u7406\u5927\u91cf\u6570\u636e\u65f6\uff0c\u5b57\u5178\u53ef\u4ee5\u901a\u8fc7\u952e\u503c\u5bf9\u5feb\u901f\u8bb0\u5f55\u6bcf\u4e2a\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570\u3002\u8fd9\u6837\u7684\u64cd\u4f5c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(1)\uff0c\u56e0\u6b64\u76f8\u6bd4\u4e8e\u4f7f\u7528\u5217\u8868\u7684 O(n) \u67e5\u627e\uff0c\u6027\u80fd\u5927\u5e45\u63d0\u5347\u3002","title":"1.7.1 \u5b57\u7b26\u9891\u7387\u7edf\u8ba1"},{"location":"lesson11/Lesson11%20Java/#_5","text":"\u67e5\u627e\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u5143\u7d20 \u5224\u65ad\u6570\u636e\u96c6\u4e2d\u662f\u5426\u5b58\u5728\u91cd\u590d\u5143\u7d20 \u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26/\u6570\u5b57/\u5143\u7d20\u7684\u9891\u7387","title":"\u5e38\u89c1\u5e94\u7528\uff1a"},{"location":"lesson11/Lesson11%20Java/#_6","text":"import java.util.HashMap; public class FrequencyCounter { public static void main(String[] args) { String input = \"hello world\"; HashMap<Character, Integer> frequencyMap = countFrequency(input); // \u6253\u5370\u6bcf\u4e2a\u5b57\u7b26\u7684\u9891\u7387 for (Character key : frequencyMap.keySet()) { System.out.println(key + \": \" + frequencyMap.get(key)); } } // \u7edf\u8ba1\u5b57\u7b26\u9891\u7387 public static HashMap<Character, Integer> countFrequency(String s) { HashMap<Character, Integer> freqMap = new HashMap<>(); for (char c : s.toCharArray()) { // \u5982\u679c\u5b57\u7b26\u5df2\u7ecf\u5728\u54c8\u5e0c\u8868\u4e2d\uff0c\u5219\u589e\u52a0\u8ba1\u6570 if (freqMap.containsKey(c)) { freqMap.put(c, freqMap.get(c) + 1); } else { // \u5982\u679c\u5b57\u7b26\u4e0d\u5728\u54c8\u5e0c\u8868\u4e2d\uff0c\u521d\u59cb\u5316\u8ba1\u6570\u4e3a 1 freqMap.put(c, 1); } } return freqMap; } }","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"lesson11/Lesson11%20Java/#172","text":"\u5feb\u901f\u67e5\u627e\u662f\u901a\u8fc7\u54c8\u5e0c\u8868\u5b9e\u73b0\u7684\uff0c\u5b83\u5229\u7528\u54c8\u5e0c\u51fd\u6570\u7684\u6027\u8d28\u5728\u5e38\u6570\u65f6\u95f4\u5185\u5b8c\u6210\u67e5\u627e\u4efb\u52a1\u3002\u5176\u6838\u5fc3\u5728\u4e8e\u9ad8\u6548\u6027\u2014\u2014\u76f8\u6bd4\u4e8e\u5217\u8868\u904d\u5386\u7684 O(n)\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u5b57\u5178\u901a\u8fc7\u54c8\u5e0c\u67e5\u627e\u53ef\u4ee5\u5728 O(1) \u65f6\u95f4\u5185\u627e\u5230\u5bf9\u5e94\u7684\u503c\u3002\u5feb\u901f\u67e5\u627e\u5e76\u4e0d\u5173\u5fc3\u5177\u4f53\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u800c\u662f\u7740\u91cd\u5f3a\u8c03\u67e5\u627e\u901f\u5ea6\u7684\u63d0\u5347\u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u5feb\u901f\u67e5\u627e\u662f\u5b57\u5178\u5229\u7528\u54c8\u5e0c\u8868\u5b9e\u73b0\u7684\u9ad8\u6548\u67e5\u627e\u64cd\u4f5c\uff0c\u5f3a\u8c03\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(1)\uff0c\u9002\u7528\u4e8e\u5728\u6570\u636e\u96c6\u4e2d\u5feb\u901f\u5b9a\u4f4d\u7279\u5b9a\u5143\u7d20\u3002 \u4f8b\u5982\uff0c\u901a\u8fc7\u7ed9\u5b9a\u5b66\u751f\u5b66\u53f7\uff0c\u67e5\u627e\u5bf9\u5e94\u7684\u5b66\u751f\u59d3\u540d\u65f6\uff0c\u5b57\u5178\u901a\u8fc7\u54c8\u5e0c\u8868\u53ef\u4ee5\u5feb\u901f\u8fd4\u56de\u67e5\u8be2\u7ed3\u679c\u3002 import java.util.HashMap; public class HashMapExample { public static void main(String[] args) { // \u521b\u5efa HashMap\uff0c\u5b58\u50a8\u5b66\u53f7\u548c\u59d3\u540d HashMap<Integer, String> students = new HashMap<>(); // \u5411 HashMap \u6dfb\u52a0\u952e\u503c\u5bf9 students.put(1001, \"Alice\"); students.put(1002, \"Bob\"); students.put(1003, \"Charlie\"); // \u6839\u636e\u5b66\u53f7\u5feb\u901f\u67e5\u627e\u5bf9\u5e94\u7684\u5b66\u751f\u59d3\u540d int studentId = 1002; System.out.println(students.get(studentId)); // \u8f93\u51fa\uff1aBob } }","title":"1.7.2 \u5feb\u901f\u67e5\u627e"},{"location":"lesson11/Lesson11%20Java/#173","text":"\u54c8\u5e0c\u6620\u5c04\u662f\u4e00\u4e2a\u66f4\u5e7f\u6cdb\u7684\u6982\u5ff5\uff0c\u8868\u793a\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u5c06\u4e00\u4e2a\u952e\uff08key\uff09\u6620\u5c04\u5230\u4e00\u4e2a\u503c\uff08value\uff09\uff0c\u8fd9\u79cd\u952e\u503c\u5bf9\u53ef\u4ee5\u7528\u4e8e\u6784\u5efa\u5404\u79cd\u5173\u7cfb\uff0c\u4e0d\u4ec5\u9650\u4e8e\u9891\u7387\u7edf\u8ba1\u6216\u5feb\u901f\u67e5\u627e\u3002\u4f8b\u5982\uff0c\u5c06\u4eba\u540d\u6620\u5c04\u5230\u5b66\u6821\uff0c\u6216\u8005\u5c06\u5b66\u6821\u6620\u5c04\u5230\u4e00\u4e2a\u5305\u542b\u6240\u6709\u5b66\u751f\u7684\u4eba\u540d\u5217\u8868\uff0c\u90fd\u662f\u54c8\u5e0c\u6620\u5c04\u7684\u5e94\u7528\u3002\u54c8\u5e0c\u6620\u5c04\u53ef\u4ee5\u652f\u6301\u4e00\u5bf9\u4e00\u3001\u4e00\u5bf9\u591a\u7b49\u590d\u6742\u7684\u5173\u7cfb\u7ed3\u6784\u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u54c8\u5e0c\u6620\u5c04\u662f\u5e7f\u6cdb\u4f7f\u7528\u7684\u6620\u5c04\u673a\u5236\uff0c\u80fd\u591f\u7075\u6d3b\u5b9e\u73b0\u952e\u503c\u5bf9\u5173\u7cfb\uff0c\u5e94\u7528\u4e8e\u66f4\u591a\u590d\u6742\u573a\u666f\uff0c\u5982\u4e00\u5bf9\u4e00\u3001\u4e00\u5bf9\u591a\u7684\u6620\u5c04\u3002","title":"1.7.3 \u54c8\u5e0c\u6620\u5c04"},{"location":"lesson11/Lesson11%20Java/#_7","text":"import java.util.HashMap; public class HashMapExample { public static void main(String[] args) { // \u521b\u5efa\u4e00\u4e2aHashMap\u7528\u4e8e\u5b58\u50a8\u4eba\u540d\u5230\u5b66\u6821\u7684\u6620\u5c04\uff08\u4eba\u540d -> \u5b66\u6821\uff09 HashMap<String, String> peopleToSchool = new HashMap<>(); // \u6dfb\u52a0\u4e00\u4e9b\u952e\u503c\u5bf9 peopleToSchool.put(\"Alice\", \"Harvard\"); peopleToSchool.put(\"Bob\", \"MIT\"); // \u6253\u5370\u6620\u5c04 System.out.println(\"Alice's school: \" + peopleToSchool.get(\"Alice\")); // \u8f93\u51fa: Harvard System.out.println(\"Bob's school: \" + peopleToSchool.get(\"Bob\")); // \u8f93\u51fa: MIT } }","title":"\u4e00\u5bf9\u4e00\u6620\u5c04\u793a\u4f8b"},{"location":"lesson11/Lesson11%20Java/#_8","text":"import java.util.HashMap; import java.util.ArrayList; import java.util.List; public class HashMapOneToMany { public static void main(String[] args) { // \u521b\u5efa\u4e00\u4e2aHashMap\u7528\u4e8e\u5b58\u50a8\u5b66\u6821\u5230\u5b66\u751f\u5217\u8868\u7684\u6620\u5c04\uff08\u5b66\u6821 -> \u5b66\u751f\u5217\u8868\uff09 HashMap<String, List<String>> schoolToPeople = new HashMap<>(); // \u5411Harvard\u5b66\u6821\u6dfb\u52a0\u5b66\u751f List<String> harvardStudents = new ArrayList<>(); harvardStudents.add(\"Alice\"); harvardStudents.add(\"Charlie\"); schoolToPeople.put(\"Harvard\", harvardStudents); // \u5411MIT\u5b66\u6821\u6dfb\u52a0\u5b66\u751f List<String> mitStudents = new ArrayList<>(); mitStudents.add(\"Bob\"); schoolToPeople.put(\"MIT\", mitStudents); // \u6253\u5370\u5b66\u6821\u5bf9\u5e94\u7684\u5b66\u751f\u5217\u8868 System.out.println(\"Students at Harvard: \" + schoolToPeople.get(\"Harvard\")); // \u8f93\u51fa: [Alice, Charlie] System.out.println(\"Students at MIT: \" + schoolToPeople.get(\"MIT\")); // \u8f93\u51fa: [Bob] } }","title":"\u4e00\u5bf9\u591a\u6620\u5c04\u793a\u4f8b"},{"location":"lesson11/Lesson11%20Java/#_9","text":"\u4e00\u5bf9\u4e00\u6620\u5c04 \uff1a HashMap<String, String> \u5b58\u50a8\u4eba\u540d\uff08\u952e\uff09\u4e0e\u5b66\u6821\u540d\u79f0\uff08\u503c\uff09\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u6bcf\u4e2a\u952e\u53ea\u80fd\u6620\u5c04\u5230\u4e00\u4e2a\u503c\u3002 \u4e00\u5bf9\u591a\u6620\u5c04 \uff1a\u4f7f\u7528 HashMap<String, List<String>> \u6765\u5b9e\u73b0\u5b66\u6821\u540d\u79f0\uff08\u952e\uff09\u5230\u5b66\u751f\u5217\u8868\uff08\u503c\uff09\u7684\u6620\u5c04\uff0c\u8868\u793a\u4e00\u4e2a\u5b66\u6821\u53ef\u4ee5\u5173\u8054\u5230\u591a\u4e2a\u5b66\u751f\u3002","title":"\u8bf4\u660e\uff1a"},{"location":"lesson11/Lesson11%20Java/#2","text":"","title":"2. \u4f8b\u9898\u8bb2\u89e3\u548c\u4e3e\u4e00\u53cd\u4e09"},{"location":"lesson11/Lesson11%20Java/#21","text":"","title":"2.1 \u9891\u7387\u7edf\u8ba1\u4e0e\u8ba1\u6570\u4e13\u9898"},{"location":"lesson11/Lesson11%20Java/#211-lc242","text":"","title":"2.1.1 \u4f8b\u9898\u8bb2\u89e3\uff1aLC242 \u6709\u6548\u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd"},{"location":"lesson11/Lesson11%20Java/#_10","text":"\u63cf\u8ff0 \uff1a\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32s\u548ct\u3002 \u8981\u6c42 \uff1a\u5224\u65adt\u548cs\u662f\u5426\u4f7f\u7528\u4e86\u76f8\u540c\u7684\u5b57\u7b26\u6784\u6210\uff08\u5b57\u7b26\u51fa\u73b0\u7684\u79cd\u7c7b\u548c\u6570\u76ee\u90fd\u76f8\u540c\uff09\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson11/Lesson11%20Java/#_11","text":"\u957f\u5ea6\u68c0\u67e5 \uff1a \u9996\u5148\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002\u5982\u679c\u957f\u5ea6\u4e0d\u76f8\u7b49\uff0c\u7acb\u5373\u8fd4\u56de false \u3002\u8fd9\u662f\u56e0\u4e3a\u5b57\u6bcd\u5f02\u4f4d\u8bcd\u5fc5\u987b\u5177\u6709\u76f8\u540c\u6570\u91cf\u7684\u5b57\u7b26\u3002 \u5b57\u7b26\u9891\u7387\u7edf\u8ba1 \uff1a \u4f7f\u7528\u4e24\u4e2a\u54c8\u5e0c\u8868\uff08 HashMap \uff09\u5206\u522b\u7edf\u8ba1\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u6bcf\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\u3002\u54c8\u5e0c\u8868\u7684\u952e\u4e3a\u5b57\u7b26\uff0c\u503c\u4e3a\u8be5\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570\u3002 \u904d\u5386\u5b57\u7b26\u4e32 \uff1a \u904d\u5386\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5b57\u7b26\uff0c\u66f4\u65b0\u5176\u5728\u54c8\u5e0c\u8868 countS \u4e2d\u7684\u8ba1\u6570\u3002 \u540c\u65f6\u904d\u5386\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e32 t \uff0c\u66f4\u65b0\u5176\u5728\u54c8\u5e0c\u8868 countT \u4e2d\u7684\u8ba1\u6570\u3002 \u6bd4\u8f83\u54c8\u5e0c\u8868 \uff1a \u6700\u540e\uff0c\u901a\u8fc7\u6bd4\u8f83\u4e24\u4e2a\u54c8\u5e0c\u8868\u662f\u5426\u76f8\u7b49\u6765\u5224\u65ad\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u6709\u6548\u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd\u3002\u5982\u679c\u76f8\u7b49\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\u8fd4\u56de false \u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson11/Lesson11%20Java/#_12","text":"import java.util.HashMap; class Solution { public boolean isAnagram(String s, String t) { // \u5982\u679c\u4e24\u4e2a\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u76f8\u540c\uff0c\u76f4\u63a5\u8fd4\u56de false if (s.length() != t.length()) { return false; } // \u521b\u5efa\u4e24\u4e2a HashMap \u7528\u4e8e\u5b58\u50a8\u5b57\u7b26\u51fa\u73b0\u7684\u9891\u7387 HashMap<Character, Integer> countS = new HashMap<>(); HashMap<Character, Integer> countT = new HashMap<>(); // \u904d\u5386\u5b57\u7b26\u4e32 s \u548c t\uff0c\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570 for (int i = 0; i < s.length(); i++) { countS.put(s.charAt(i), countS.getOrDefault(s.charAt(i), 0) + 1); countT.put(t.charAt(i), countT.getOrDefault(t.charAt(i), 0) + 1); } // \u6bd4\u8f83\u4e24\u4e2a HashMap \u662f\u5426\u76f8\u7b49 return countS.equals(countT); } }","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson11/Lesson11%20Java/#212-lc-387","text":"","title":"2.1.2 \u4e3e\u4e00\u53cd\u4e09\uff1aLC 387 \u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u552f\u4e00\u5b57\u7b26"},{"location":"lesson11/Lesson11%20Java/#_13","text":"\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u627e\u5230\u5b83\u7684\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u7684\u5b57\u7b26\uff0c\u5e76\u8fd4\u56de\u5b83\u7684\u7d22\u5f15\u3002\u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u5b57\u7b26\uff0c\u5219\u8fd4\u56de -1 \u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson11/Lesson11%20Java/#_14","text":"\u4e3a\u4e86\u6709\u6548\u5730\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 HashMap \u6765\u8bb0\u5f55\u6bcf\u4e2a\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570\u3002\u8fd9\u79cd\u65b9\u6cd5\u5206\u4e3a\u4e24\u4e2a\u6b65\u9aa4\uff1a \u7b2c\u4e00\u6b21\u904d\u5386\uff1a\u7edf\u8ba1\u5b57\u7b26\u51fa\u73b0\u6b21\u6570 \u4f7f\u7528 HashMap \u8bb0\u5f55\u5b57\u7b26\u4e32\u4e2d\u6bcf\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\u3002 \u7b2c\u4e8c\u6b21\u904d\u5386\uff1a\u627e\u5230\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u7684\u5b57\u7b26 \u518d\u6b21\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u68c0\u67e5\u6bcf\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u51fa\u73b0\u6b21\u6570\u4e3a 1 \u7684\u5b57\u7b26\uff0c\u5e76\u8fd4\u56de\u5176\u7d22\u5f15\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson11/Lesson11%20Java/#_15","text":"import java.util.HashMap; class Solution { public int firstUniqChar(String s) { HashMap<Character, Integer> count = new HashMap<>(); // \u521b\u5efa HashMap \u6765\u5b58\u50a8\u5b57\u7b26\u8ba1\u6570 // \u7b2c\u4e00\u6b21\u904d\u5386\uff0c\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570 for (int i = 0; i < s.length(); i++) { char currentChar = s.charAt(i); count.put(currentChar, count.getOrDefault(currentChar, 0) + 1); } // \u7b2c\u4e8c\u6b21\u904d\u5386\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u7684\u5b57\u7b26 for (int i = 0; i < s.length(); i++) { if (count.get(s.charAt(i)) == 1) { // \u68c0\u67e5\u5b57\u7b26\u51fa\u73b0\u6b21\u6570 return i; // \u8fd4\u56de\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u5b57\u7b26\u7684\u7d22\u5f15 } } return -1; // \u5982\u679c\u6ca1\u6709\u627e\u5230\u4e0d\u91cd\u590d\u5b57\u7b26\uff0c\u8fd4\u56de -1 } }","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson11/Lesson11%20Java/#22","text":"","title":"2.2 \u5feb\u901f\u67e5\u627e\u4e13\u9898"},{"location":"lesson11/Lesson11%20Java/#221-lc1","text":"","title":"2.2.1 \u4f8b\u9898\u8bb2\u89e3\uff1aLC1 \u4e24\u6570\u4e4b\u548c"},{"location":"lesson11/Lesson11%20Java/#_16","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u548c\u4e00\u4e2a\u6574\u6570\u76ee\u6807\u503c target \uff0c\u8bf7\u4f60\u5728\u8be5\u6570\u7ec4\u4e2d\u627e\u51fa\u548c\u4e3a\u76ee\u6807\u503c target \u7684\u90a3\u4e24\u4e2a\u6574\u6570\uff0c\u5e76\u8fd4\u56de\u5b83\u4eec\u7684\u6570\u7ec4\u4e0b\u6807\u3002\u5047\u8bbe\u6bcf\u79cd\u8f93\u5165\u53ea\u4f1a\u5bf9\u5e94\u4e00\u4e2a\u7b54\u6848\uff0c\u5e76\u4e14\u4e0d\u80fd\u4f7f\u7528\u540c\u4e00\u4e2a\u5143\u7d20\u4e24\u6b21\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson11/Lesson11%20Java/#_17","text":"\u904d\u5386\u6570\u7ec4\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570 nums[i] \uff1a \u67e5\u627e HashMap \u4e2d\u662f\u5426\u5b58\u5728 target - nums[i] \uff0c\u5982\u679c\u5b58\u5728\uff0c\u5219\u8f93\u51fa\u8be5\u503c\u5bf9\u5e94\u7684\u4e0b\u6807\u548c\u5f53\u524d\u6570\u7ec4\u7684\u4e0b\u6807 i \u3002 \u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u5c06\u5f53\u524d\u6570 nums[i] \u548c\u5b83\u7684\u4e0b\u6807 i \u5b58\u5165 HashMap \u4e2d\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson11/Lesson11%20Java/#_18","text":"import java.util.HashMap; class Solution { public int[] twoSum(int[] nums, int target) { // \u521b\u5efa\u4e00\u4e2a HashMap \u6765\u5b58\u50a8\u6570\u5b57\u53ca\u5176\u5bf9\u5e94\u7684\u4e0b\u6807 HashMap<Integer, Integer> hashtable = new HashMap<>(); // \u904d\u5386\u6570\u7ec4 for (int i = 0; i < nums.length; i++) { // \u8ba1\u7b97\u5f53\u524d\u6570\u5b57\u6240\u9700\u7684\u53e6\u4e00\u4e2a\u6570\u5b57 int complement = target - nums[i]; // \u68c0\u67e5 HashMap \u4e2d\u662f\u5426\u5b58\u5728\u6240\u9700\u7684\u6570\u5b57 if (hashtable.containsKey(complement)) { // \u8fd4\u56de\u6240\u9700\u6570\u5b57\u7684\u4e0b\u6807\u548c\u5f53\u524d\u6570\u5b57\u7684\u4e0b\u6807 return new int[] { hashtable.get(complement), i }; } // \u5c06\u5f53\u524d\u6570\u5b57\u548c\u5b83\u7684\u4e0b\u6807\u5b58\u5165 HashMap hashtable.put(nums[i], i); } // \u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u8fd4\u56de\u7a7a\u6570\u7ec4\uff08\u6839\u636e\u9898\u610f\uff0c\u5e94\u8be5\u6c38\u8fdc\u627e\u5230\u7b54\u6848\uff09 return new int[0]; } }","title":"\u53c2\u8003\u89e3\u7b54\uff1a"},{"location":"lesson11/Lesson11%20Java/#222-lc217","text":"","title":"2.2.2 \u4e3e\u4e00\u53cd\u4e09\uff1a\u4f8b\u9898\u8bb2\u89e3\uff1aLC217 \u5b58\u5728\u91cd\u590d\u5143\u7d20"},{"location":"lesson11/Lesson11%20Java/#_19","text":"\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u3002\u5982\u679c\u4efb\u4e00\u503c\u5728\u6570\u7ec4\u4e2d\u51fa\u73b0 \u81f3\u5c11\u4e24\u6b21 \uff0c\u8fd4\u56de true \uff1b\u5982\u679c\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u4e92\u4e0d\u76f8\u540c\uff0c\u8fd4\u56de false \u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson11/Lesson11%20Java/#_20","text":"\u8fd9\u9053\u9898\u76ee\u8981\u6c42\u5224\u65ad\u4e00\u4e2a\u6570\u7ec4\u91cc\u6709\u6ca1\u6709\u91cd\u590d\u7684\u6570\u5b57\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a HashMap \u6765\u5b58\u50a8\u6bcf\u4e2a\u6570\u5b57\u662f\u5426\u5df2\u7ecf\u51fa\u73b0\u8fc7\u3002\u5f53\u6211\u4eec\u904d\u5386\u6570\u7ec4\u65f6\uff0c\u6bcf\u9047\u5230\u4e00\u4e2a\u6570\u5b57\uff0c\u5c31\u68c0\u67e5\u5b83\u662f\u5426\u5df2\u7ecf\u5b58\u5728\u4e8e HashMap \u4e2d\u3002\u5982\u679c\u5df2\u7ecf\u5b58\u5728\uff0c\u8bf4\u660e\u8fd9\u4e2a\u6570\u5b57\u91cd\u590d\u4e86\uff0c\u76f4\u63a5\u8fd4\u56de true \uff1b\u5982\u679c\u6ca1\u6709\uff0c\u5c31\u628a\u8fd9\u4e2a\u6570\u5b57\u52a0\u5230 HashMap \u91cc\uff0c\u7ee7\u7eed\u68c0\u67e5\u4e0b\u4e00\u4e2a\u6570\u5b57\u3002\u904d\u5386\u5b8c\u6570\u7ec4\u540e\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\u4efb\u4f55\u91cd\u590d\u6570\u5b57\uff0c\u5c31\u8fd4\u56de false \u3002 \u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\u6bcf\u4e2a\u6570\u5b57\u53ea\u4f1a\u68c0\u67e5\u4e00\u6b21\uff0c\u5e76\u4e14\u67e5\u627e\u548c\u5b58\u50a8\u6570\u5b57\u7684\u64cd\u4f5c\u4e5f\u5f88\u5feb\uff0c\u56e0\u6b64\u6574\u4e2a\u8fc7\u7a0b\u5f88\u9ad8\u6548\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson11/Lesson11%20Java/#_21","text":"HashMap \u53ef\u4ee5\u7528\u6765\u5feb\u901f\u5b58\u50a8\u548c\u67e5\u627e\u6570\u5b57\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u91cd\u590d\u7684\u6570\u5b57\u3002","title":"\u63d0\u793a"},{"location":"lesson11/Lesson11%20Java/#_22","text":"import java.util.HashMap; class Solution { public boolean containsDuplicate(int[] nums) { // \u521b\u5efa HashMap \u6765\u5b58\u50a8\u6570\u5b57 HashMap<Integer, Boolean> map = new HashMap<>(); // \u904d\u5386\u6570\u7ec4 for (int num : nums) { // \u5982\u679c HashMap \u5df2\u7ecf\u5305\u542b\u5f53\u524d\u6570\u5b57\uff0c\u8bf4\u660e\u6709\u91cd\u590d\uff0c\u8fd4\u56de true if (map.containsKey(num)) { return true; } // \u5426\u5219\uff0c\u5c06\u5f53\u524d\u6570\u5b57\u6dfb\u52a0\u5230 HashMap \u4e2d\uff0c\u6807\u8bb0\u4e3a\u5df2\u51fa\u73b0 map.put(num, true); } // \u5982\u679c\u904d\u5386\u7ed3\u675f\u6ca1\u6709\u53d1\u73b0\u91cd\u590d\u5143\u7d20\uff0c\u8fd4\u56de false return false; } }","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson11/Lesson11%20Java/#23","text":"","title":"2.3 \u54c8\u5e0c\u6620\u5c04\u4e13\u9898"},{"location":"lesson11/Lesson11%20Java/#231-lc-697","text":"","title":"2.3.1 LC 697 \u6570\u7ec4\u7684\u5ea6"},{"location":"lesson11/Lesson11%20Java/#_23","text":"\u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u4e14\u53ea\u5305\u542b\u975e\u8d1f\u6570\u7684\u6574\u6570\u6570\u7ec4 nums \uff0c\u6570\u7ec4\u7684 \u5ea6 \u7684\u5b9a\u4e49\u662f\u6307\u6570\u7ec4\u91cc\u4efb\u4e00\u5143\u7d20\u51fa\u73b0\u9891\u6570\u7684\u6700\u5927\u503c\u3002\u4f60\u7684\u4efb\u52a1\u662f\u5728 nums \u4e2d\u627e\u5230\u4e0e nums \u62e5\u6709\u76f8\u540c\u5927\u5c0f\u7684\u5ea6\u7684\u6700\u77ed\u8fde\u7eed\u5b50\u6570\u7ec4\uff0c\u8fd4\u56de\u5176\u957f\u5ea6\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson11/Lesson11%20Java/#_24","text":"\u8bb0\u539f\u6570\u7ec4\u4e2d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u6570\u4e3a x \uff0c\u90a3\u4e48\u548c\u539f\u6570\u7ec4\u7684\u5ea6\u76f8\u540c\u7684\u6700\u77ed\u8fde\u7eed\u5b50\u6570\u7ec4\uff0c\u5fc5\u7136\u5305\u542b\u4e86\u539f\u6570\u7ec4\u4e2d\u7684\u5168\u90e8 x \uff0c\u4e14\u4e24\u7aef\u6070\u4e3a x \u7b2c\u4e00\u6b21\u51fa\u73b0\u548c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002 \u4e3a\u4e86\u627e\u5230\u8fd9\u4e2a\u5b50\u6570\u7ec4\uff0c\u6211\u4eec\u9700\u8981\u7edf\u8ba1\u6bcf\u4e00\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u540c\u65f6\u8fd8\u9700\u8981\u7edf\u8ba1\u6bcf\u4e00\u4e2a\u6570\u7b2c\u4e00\u6b21\u51fa\u73b0\u548c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u54c8\u5e0c\u8868\u6765\u5b9e\u73b0\u8fd9\u4e2a\u529f\u80fd\uff0c\u6bcf\u4e00\u4e2a\u6570\u6620\u5c04\u5230\u4e00\u4e2a\u957f\u5ea6\u4e3a 3 \u7684\u6570\u7ec4\uff0c\u6570\u7ec4\u4e2d\u7684\u4e09\u4e2a\u5143\u7d20\u5206\u522b\u4ee3\u8868\u8fd9\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\u3001\u8fd9\u4e2a\u6570\u5728\u539f\u6570\u7ec4\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u548c\u8fd9\u4e2a\u6570\u5728\u539f\u6570\u7ec4\u4e2d\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\u5f53\u6211\u4eec\u8bb0\u5f55\u5b8c\u6240\u6709\u4fe1\u606f\u540e\uff0c\u6211\u4eec\u9700\u8981\u904d\u5386\u8be5\u54c8\u5e0c\u8868\uff0c\u627e\u5230\u5143\u7d20\u51fa\u73b0\u6b21\u6570\u6700\u591a\uff0c\u4e14\u524d\u540e\u4f4d\u7f6e\u5dee\u6700\u5c0f\u7684\u6570\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson11/Lesson11%20Java/#_25","text":"\u5148\u8bb0\u5f55\u6bcf\u4e2a\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u7b2c\u4e00\u6b21\u548c\u6700\u540e\u4e00\u6b21\u7684\u7d22\u5f15\u3002 \u627e\u5230\u6570\u7ec4\u7684\u5ea6\u548c\u6700\u77ed\u5b50\u6570\u7ec4\u7684\u957f\u5ea6\u3002","title":"\u63d0\u793a"},{"location":"lesson11/Lesson11%20Java/#_26","text":"import java.util.HashMap; import java.util.Map; class Solution { public int findShortestSubArray(int[] nums) { // \u4f7f\u7528\u54c8\u5e0c\u8868\u5b58\u50a8\u6bcf\u4e2a\u6570\u7684\u51fa\u73b0\u6b21\u6570\u548c\u7b2c\u4e00\u6b21\u3001\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e Map<Integer, int[]> map = new HashMap<>(); for (int i = 0; i < nums.length; i++) { if (map.containsKey(nums[i])) { map.get(nums[i])[0]++; // \u589e\u52a0\u51fa\u73b0\u6b21\u6570 map.get(nums[i])[2] = i; // \u66f4\u65b0\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e } else { // \u521d\u59cb\u5316\uff1a\u51fa\u73b0\u6b21\u6570\u3001\u7b2c\u4e00\u6b21\u548c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e map.put(nums[i], new int[]{1, i, i}); } } int maxNum = 0; // \u8bb0\u5f55\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u6570\u7684\u6b21\u6570 int minLen = Integer.MAX_VALUE; // \u8bb0\u5f55\u6700\u77ed\u5b50\u6570\u7ec4\u7684\u957f\u5ea6 // \u904d\u5386\u54c8\u5e0c\u8868 for (int[] value : map.values()) { int count = value[0]; // \u51fa\u73b0\u6b21\u6570 int left = value[1]; // \u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e int right = value[2]; // \u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e // \u66f4\u65b0 maxNum \u548c minLen if (maxNum < count) { maxNum = count; minLen = right - left + 1; // \u66f4\u65b0\u6700\u77ed\u5b50\u6570\u7ec4\u957f\u5ea6 } else if (maxNum == count) { minLen = Math.min(minLen, right - left + 1); // \u66f4\u65b0\u6700\u77ed\u5b50\u6570\u7ec4\u957f\u5ea6 } } return minLen; // \u8fd4\u56de\u6700\u77ed\u5b50\u6570\u7ec4\u7684\u957f\u5ea6 } }","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson11/Lesson11%20Java/#_27","text":"\u521d\u59cb\u5316\u54c8\u5e0c\u8868 map \u3002 \u904d\u5386\u6570\u7ec4 nums \uff0c\u8bb0\u5f55\u6bcf\u4e2a\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570\u3001\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u7d22\u5f15\u548c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u7d22\u5f15\u3002 \u904d\u5386\u54c8\u5e0c\u8868\u7684\u503c\uff0c\u63d0\u53d6\u6bcf\u4e2a\u6570\u5b57\u7684\u51fa\u73b0\u6b21\u6570\u3001\u7b2c\u4e00\u6b21\u548c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002 maxNum \u8bb0\u5f55\u5f53\u524d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u503c\uff08\u5373\u6570\u7ec4\u7684\u5ea6\uff09\u3002 minLen \u8bb0\u5f55\u5177\u6709\u76f8\u540c\u5ea6\u7684\u5b50\u6570\u7ec4\u7684\u6700\u77ed\u957f\u5ea6\u3002 \u5982\u679c\u5f53\u524d\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570\u5927\u4e8e maxNum \uff0c\u66f4\u65b0 maxNum \u548c\u6700\u77ed\u5b50\u6570\u7ec4\u957f\u5ea6 minLen \u3002 \u5982\u679c\u51fa\u73b0\u6b21\u6570\u76f8\u540c\uff0c\u68c0\u67e5\u5f53\u524d\u5b50\u6570\u7ec4\u662f\u5426\u6bd4\u4e4b\u524d\u7684\u77ed\uff0c\u5e76\u66f4\u65b0 minLen \u3002","title":"\u89e3\u9898\u8fc7\u7a0b\uff1a"},{"location":"lesson11/Lesson11%20Java/#232-lc-205","text":"","title":"2.3.2 \u4e3e\u4e00\u53cd\u4e09\uff1aLC 205 \u540c\u6784\u5b57\u7b26\u4e32"},{"location":"lesson11/Lesson11%20Java/#_28","text":"\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 s \u548c t \uff0c\u5224\u65ad\u5b83\u4eec\u662f\u5426\u662f\u540c\u6784\u7684\u3002 \u5982\u679c s \u4e2d\u7684\u5b57\u7b26\u53ef\u4ee5\u6309\u67d0\u79cd\u6620\u5c04\u5173\u7cfb\u66ff\u6362\u5f97\u5230 t \uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u662f\u540c\u6784\u7684\u3002 \u6bcf\u4e2a\u51fa\u73b0\u7684\u5b57\u7b26\u90fd\u5e94\u5f53\u6620\u5c04\u5230\u53e6\u4e00\u4e2a\u5b57\u7b26\uff0c\u540c\u65f6\u4e0d\u6539\u53d8\u5b57\u7b26\u7684\u987a\u5e8f\u3002\u4e0d\u540c\u5b57\u7b26\u4e0d\u80fd\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u5b57\u7b26\u4e0a\uff0c\u76f8\u540c\u5b57\u7b26\u53ea\u80fd\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u5b57\u7b26\u4e0a\uff0c\u5b57\u7b26\u53ef\u4ee5\u6620\u5c04\u5230\u81ea\u5df1\u672c\u8eab\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson11/Lesson11%20Java/#_29","text":"\u6839\u636e\u9898\u76ee\u610f\u601d\uff0c\u5b57\u7b26\u4e32 s \u548c t \u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u5b57\u7b26\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u3002 s \u7684\u6bcf\u4e2a\u5b57\u7b26\u90fd\u4e0e t \u5bf9\u5e94\u4f4d\u7f6e\u4e0a\u7684\u5b57\u7b26\u5bf9\u5e94\u3002\u53ef\u4ee5\u8003\u8651\u7528\u54c8\u5e0c\u8868\u6765\u5b58\u50a8 s[i]:t[i] \u7684\u5bf9\u5e94\u5173\u7cfb\u3002\u4f46\u662f\u8fd9\u6837\u53ea\u80fd\u4fdd\u8bc1\u5bf9\u5e94\u4f4d\u7f6e\u4e0a\u7684\u5b57\u7b26\u662f\u5bf9\u5e94\u7684\uff0c\u4f46\u4e0d\u80fd\u4fdd\u8bc1\u662f\u552f\u4e00\u5bf9\u5e94\u7684\u3002\u56e0\u6b64\uff0c\u8fd8\u9700\u8981\u53e6\u4e00\u4e2a\u54c8\u5e0c\u8868\u6765\u5b58\u50a8 t[i]:s[i] \u7684\u5bf9\u5e94\u5173\u7cfb\uff0c\u4ee5\u5224\u65ad\u662f\u5426\u662f\u552f\u4e00\u5bf9\u5e94\u7684\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson11/Lesson11%20Java/#_30","text":"\u5c5e\u4e8e\u5efa\u7acb\u6620\u5c04\uff0c\u901a\u8fc7\u521b\u5efa\u5b57\u5178\u5efa\u7acb\u5b57\u6bcd\u548c\u51fa\u73b0\u5b57\u6bcd\u7684\u6620\u5c04\u5173\u7cfb\u3002","title":"\u63d0\u793a"},{"location":"lesson11/Lesson11%20Java/#_31","text":"import java.util.HashMap; class Solution { public boolean isIsomorphic(String s, String t) { // \u521b\u5efa\u4e24\u4e2a\u54c8\u5e0c\u8868\u6765\u5b58\u50a8\u6620\u5c04\u5173\u7cfb HashMap<Character, Character> sToT = new HashMap<>(); HashMap<Character, Character> tToS = new HashMap<>(); // \u904d\u5386\u5b57\u7b26\u4e32 s \u548c t for (int i = 0; i < s.length(); i++) { char sChar = s.charAt(i); char tChar = t.charAt(i); // \u68c0\u67e5 s \u4e2d\u7684\u5b57\u7b26\u5230 t \u7684\u6620\u5c04 if (sToT.containsKey(sChar)) { // \u5982\u679c\u5df2\u7ecf\u5b58\u5728\u6620\u5c04\u4f46\u4e0e\u5f53\u524d\u5b57\u7b26\u4e0d\u4e00\u81f4\uff0c\u8fd4\u56de false if (sToT.get(sChar) != tChar) { return false; } } else { // \u6dfb\u52a0\u6620\u5c04 sToT.put(sChar, tChar); } // \u68c0\u67e5 t \u4e2d\u7684\u5b57\u7b26\u5230 s \u7684\u6620\u5c04 if (tToS.containsKey(tChar)) { // \u5982\u679c\u5df2\u7ecf\u5b58\u5728\u6620\u5c04\u4f46\u4e0e\u5f53\u524d\u5b57\u7b26\u4e0d\u4e00\u81f4\uff0c\u8fd4\u56de false if (tToS.get(tChar) != sChar) { return false; } } else { // \u6dfb\u52a0\u6620\u5c04 tToS.put(tChar, sChar); } } return true; // \u5982\u679c\u6ca1\u6709\u51b2\u7a81\uff0c\u8fd4\u56de true } }","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson11/Lesson11%20Java/#_32","text":"\u521d\u59cb\u5316\u4e24\u4e2a\u54c8\u5e0c\u8868 sToT \u548c tToS \uff0c\u7528\u4e8e\u5b58\u50a8\u5b57\u7b26\u4e4b\u95f4\u7684\u6620\u5c04\u5173\u7cfb\u3002 \u904d\u5386\u5b57\u7b26\u4e32 s \u548c t \u7684\u6bcf\u4e2a\u5b57\u7b26\u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u5b57\u7b26\uff0c\u68c0\u67e5\u662f\u5426\u5df2\u5b58\u5728\u6620\u5c04\u5173\u7cfb\uff1a \u5982\u679c\u5df2\u5b58\u5728\u4e14\u6620\u5c04\u5173\u7cfb\u4e0d\u4e00\u81f4\uff0c\u8fd4\u56de false \u3002 \u5982\u679c\u4e0d\u5b58\u5728\u6620\u5c04\u5173\u7cfb\uff0c\u5219\u6dfb\u52a0\u65b0\u7684\u6620\u5c04\u3002 \u5982\u679c\u904d\u5386\u7ed3\u675f\u540e\u6ca1\u6709\u8fd4\u56de false \uff0c\u5219\u8bf4\u660e\u5b57\u7b26\u4e32\u662f\u540c\u6784\u7684\uff0c\u8fd4\u56de true \u3002","title":"\u89e3\u9898\u8fc7\u7a0b\uff1a"},{"location":"lesson11/Lesson11%20Java/#233-lc219-ii","text":"","title":"2.3.3 \u4e3e\u4e00\u53cd\u4e09\uff1aLC219 \u5b58\u5728\u91cd\u590d\u5143\u7d20II"},{"location":"lesson11/Lesson11%20Java/#_33","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u548c\u4e00\u4e2a\u6574\u6570 k \uff0c\u5224\u65ad\u6570\u7ec4\u4e2d\u662f\u5426\u5b58\u5728\u4e24\u4e2a \u4e0d\u540c\u7684\u7d22\u5f15 i \u548c j \uff0c\u4f7f\u5f97 nums[i] == nums[j] \u4e14 abs(i - j) <= k \u3002\u5982\u679c\u5b58\u5728\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson11/Lesson11%20Java/#_34","text":"\u6211\u4eec\u9700\u8981\u5224\u65ad\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u4e2d\u662f\u5426\u5b58\u5728\u4e24\u4e2a\u4e0d\u540c\u7684\u7d22\u5f15 i \u548c j \uff0c\u4f7f\u5f97 nums[i] == nums[j] \u5e76\u4e14 abs(i - j) <= k \u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u6211\u4eec\u8981\u68c0\u67e5\u662f\u5426\u6709\u91cd\u590d\u7684\u5143\u7d20\uff0c\u5e76\u4e14\u8fd9\u4e9b\u5143\u7d20\u4e4b\u95f4\u7684\u7d22\u5f15\u5dee\u4e0d\u8d85\u8fc7 k \u3002 \u4f7f\u7528 HashMap \u5b58\u50a8\u7d22\u5f15 \uff1a \u6211\u4eec\u4f7f\u7528\u4e00\u4e2a HashMap\uff08\u6216\u5b57\u5178\uff09\u6765\u5b58\u50a8\u6bcf\u4e2a\u5143\u7d20\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u53ea\u9700\u8981\u5173\u5fc3\u6bcf\u4e2a\u5143\u7d20\u7684\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u7d22\u5f15\uff0c\u4ee5\u4fbf\u5feb\u901f\u5224\u65ad\u5b83\u4e0e\u5f53\u524d\u7d22\u5f15\u7684\u5dee\u503c\u3002 \u904d\u5386\u6570\u7ec4 \uff1a \u904d\u5386\u6570\u7ec4 nums \uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5143\u7d20 num \uff1a \u9996\u5148\u68c0\u67e5\u8be5\u5143\u7d20\u662f\u5426\u5df2\u5b58\u5728\u4e8e HashMap \u4e2d\uff1a \u5982\u679c\u5b58\u5728\uff0c\u8bf4\u660e\u6211\u4eec\u4e4b\u524d\u5df2\u7ecf\u9047\u5230\u8fc7\u8fd9\u4e2a\u5143\u7d20\u3002\u6b64\u65f6\uff0c\u8ba1\u7b97\u5f53\u524d\u7d22\u5f15 i \u548c\u8be5\u5143\u7d20\u4e0a\u6b21\u51fa\u73b0\u7d22\u5f15\u4e4b\u95f4\u7684\u5dee\u503c\u3002 \u5982\u679c\u8fd9\u4e2a\u5dee\u503c\u5c0f\u4e8e\u7b49\u4e8e k \uff0c\u5219\u8fd4\u56de true \uff0c\u8868\u793a\u627e\u5230\u4e86\u7b26\u5408\u6761\u4ef6\u7684\u91cd\u590d\u5143\u7d20\u3002 \u5982\u679c\u4e0d\u5b58\u5728\uff0c\u6216\u5dee\u503c\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u5219\u66f4\u65b0 HashMap\uff0c\u5c06\u8be5\u5143\u7d20\u53ca\u5176\u5f53\u524d\u7d22\u5f15\u5b58\u5165\u3002 \u904d\u5386\u7ed3\u675f \uff1a \u5982\u679c\u904d\u5386\u5b8c\u6570\u7ec4\u90fd\u6ca1\u6709\u627e\u5230\u6ee1\u8db3\u6761\u4ef6\u7684\u91cd\u590d\u5143\u7d20\uff0c\u8fd4\u56de false \u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson11/Lesson11%20Java/#_35","text":"import java.util.HashMap; class Solution { public boolean containsNearbyDuplicate(int[] nums, int k) { HashMap<Integer, Integer> pos = new HashMap<>(); // \u521b\u5efa\u4e00\u4e2a HashMap \u5b58\u50a8\u6570\u5b57\u53ca\u5176\u6700\u540e\u51fa\u73b0\u7684\u4f4d\u7f6e for (int i = 0; i < nums.length; i++) { // \u904d\u5386\u6570\u7ec4 if (pos.containsKey(nums[i]) && i - pos.get(nums[i]) <= k) { // \u68c0\u67e5\u662f\u5426\u5b58\u5728\u91cd\u590d\u4e14\u6ee1\u8db3\u7d22\u5f15\u5dee return true; // \u627e\u5230\u6ee1\u8db3\u6761\u4ef6\u7684\u91cd\u590d\u5143\u7d20 } pos.put(nums[i], i); // \u66f4\u65b0\u5f53\u524d\u6570\u5b57\u7684\u4f4d\u7f6e } return false; // \u6ca1\u6709\u627e\u5230\u7b26\u5408\u6761\u4ef6\u7684\u91cd\u590d\u5143\u7d20 } }","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson11/Lesson11%20Java/#3","text":"","title":"3. \u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson11/Lesson11%20Java/#_36","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u9898\u76ee\u63cf\u8ff0 LC 451 \u6839\u636e\u5b57\u7b26\u51fa\u73b0\u9891\u7387\u6392\u5e8f \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8bf7\u5c06\u5b57\u7b26\u6309\u51fa\u73b0\u9891\u7387\u6392\u5e8f\u3002 LC 692 \u524dK\u4e2a\u9ad8\u9891\u5355\u8bcd \u7ed9\u5b9a\u4e00\u4e2a\u5355\u8bcd\u5217\u8868\uff0c\u8fd4\u56de\u524d K \u4e2a\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684\u5355\u8bcd\u3002 LC 347 \u524dK\u4e2a\u9ad8\u9891\u5143\u7d20 \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\uff0c\u8fd4\u56de\u51fa\u73b0\u9891\u7387\u524d K \u9ad8\u7684\u5143\u7d20 LC 554 \u780c\u5899 \u8ba1\u7b97\u901a\u8fc7\u4e00\u5835\u5899\u7684\u5782\u76f4\u7ebf\u6bb5\u7a7f\u8fc7\u7684\u7816\u5757\u6570\u91cf\u6700\u5c11\u7684\u5730\u65b9\u3002 LC 2085 \u7edf\u8ba1\u51fa\u73b0\u8fc7\u4e00\u6b21\u7684\u516c\u5171\u5b57\u7b26\u4e32 \u8fd4\u56de\u5728\u4e24\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\u90fd\u6070\u597d\u51fa\u73b0\u4e00\u6b21\u7684\u5b57\u7b26\u4e32\u7684\u6570\u76ee\u3002","title":"\u9891\u7387\u7edf\u8ba1"},{"location":"lesson11/Lesson11%20Java/#_37","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u9898\u76ee\u63cf\u8ff0 LC 594 \u6700\u957f\u548c\u8c10\u5b50\u5e8f\u5217 \u627e\u5230\u548c\u8c10\u5b50\u5e8f\u5217\u7684\u6700\u957f\u957f\u5ea6\uff0c\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u76f8\u5dee\u4e3a1\u3002 LC 525 \u8fde\u7eed\u6570\u7ec4 \u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\u7ec4\uff0c\u627e\u5230\u957f\u5ea6\u76f8\u540c\u76840\u548c1\u7684\u6700\u957f\u5b50\u6570\u7ec4\u3002 LC 49 \u5b57\u6bcd\u5f02\u4f4d\u8bcd\u5206\u7ec4 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4\uff0c\u5c06\u5b57\u6bcd\u5f02\u4f4d\u8bcd\u7ec4\u5408\u5728\u4e00\u8d77\u3002 LC 169 \u591a\u6570\u5143\u7d20 \u7ed9\u5b9a\u4e00\u4e2a\u5927\u5c0f\u4e3an\u7684\u6570\u7ec4nums\uff0c\u8fd4\u56de\u5176\u4e2d\u7684\u591a\u6570\u5143\u7d20\u3002 LC 409 \u6700\u957f\u56de\u6587\u4e32 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\u5176\u4e2d\u53ef\u4ee5\u6784\u6210\u7684\u6700\u957f\u56de\u6587\u4e32\u7684\u957f\u5ea6\u3002","title":"\u5feb\u901f\u67e5\u627e"},{"location":"lesson11/Lesson11%20Java/#_38","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u9898\u76ee\u63cf\u8ff0 LC 290 \u5355\u8bcd\u89c4\u5f8b \u7ed9\u5b9a\u4e00\u79cd\u89c4\u5f8b pattern \u548c\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u5224\u65ad s \u662f\u5426\u9075\u5faa\u76f8\u540c\u7684\u89c4\u5f8b\u3002 LC 560 \u548c\u4e3aK\u7684\u5b50\u6570\u7ec4 \u627e\u51fa\u6570\u7ec4\u4e2d\u548c\u4e3a k \u7684\u8fde\u7eed\u5b50\u6570\u7ec4\u7684\u4e2a\u6570\u3002 LC 249 \u79fb\u4f4d\u5b57\u7b26\u4e32\u5206\u7ec4 \u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b\u4ec5\u5c0f\u5199\u5b57\u6bcd\u5b57\u7b26\u4e32\u7684\u5217\u8868\uff0c\u5c06\u8be5\u5217\u8868\u4e2d\u6240\u6709\u6ee1\u8db3 \u201c\u79fb\u4f4d\u201d \u64cd\u4f5c\u89c4\u5f8b\u7684\u7ec4\u5408\u8fdb\u884c\u5206\u7ec4\u5e76\u8fd4\u56de\u3002 LC 953 \u9a8c\u8bc1\u5916\u661f\u8bed\u8bcd\u5178 \u7ed9\u5b9a\u4e00\u4e2a\u5916\u661f\u8bcd\u5178\u7684\u987a\u5e8f\u8868\uff0c\u5224\u65ad\u4e00\u7ec4\u5355\u8bcd\u662f\u5426\u6309\u7167\u8fd9\u4e2a\u5916\u661f\u8bcd\u5178\u7684\u987a\u5e8f\u6392\u5217\u3002 LC 12 \u6574\u6570\u8f6c\u7f57\u9a6c\u6570\u5b57 \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\uff0c\u5c06\u5176\u8f6c\u6362\u4e3a\u7f57\u9a6c\u6570\u5b57\u3002","title":"\u54c8\u5e0c\u6620\u5c04"},{"location":"lesson11/Lesson11%20Python/","text":"Lesson11 \u5b57\u5178\u4e13\u9898 \u76ee\u5f55 1. \u5b57\u5178\u77e5\u8bc6\u4ecb\u7ecd - 1.1 \u54c8\u5e0c\u8868\u5e38\u7528\u64cd\u4f5c - 1.2 \u54c8\u5e0c\u8868\u7b80\u5355\u5b9e\u73b0 - 1.3 \u54c8\u5e0c\u51b2\u7a81\u4e0e\u6269\u5bb9 2. \u9891\u7387\u7edf\u8ba1\u4e0e\u8ba1\u6570 - 2.1 \u8bcd\u9891\u7edf\u8ba1\u4ecb\u7ecd - 2.2 \u4f8b\u9898\u8bb2\u89e3 - 2.2.1 LC 242 \u6709\u6548\u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd - 2.3 \u4e3e\u4e00\u53cd\u4e09 - 2.3.1 LC 387 \u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u552f\u4e00\u5b57\u7b26 3. \u5feb\u901f\u67e5\u627e - 3.1 \u5feb\u901f\u67e5\u627e\u4ecb\u7ecd - 3.2 \u4f8b\u9898\u8bb2\u89e3 - 3.2.1 LC 1 \u4e24\u6570\u4e4b\u548c - 3.3 \u4e3e\u4e00\u53cd\u4e09 - 3.3.1 LC 217 \u5b58\u5728\u91cd\u590d\u5143\u7d20 4. \u54c8\u5e0c\u6620\u5c04 - 4.1 \u54c8\u5e0c\u6620\u5c04\u4ecb\u7ecd - 4.2 \u4f8b\u9898\u8bb2\u89e3 - 4.2.1 LC 697 \u6570\u7ec4\u7684\u5ea6 - 4.3 \u4e3e\u4e00\u53cd\u4e09 - 4.3.1 LC 205 \u540c\u6784\u5b57\u7b26\u4e32 - 4.3.2 LC 219 \u5b58\u5728\u91cd\u590d\u5143\u7d20II 5. \u8bfe\u540e\u7ec3\u4e60 1 \u5b57\u5178\u77e5\u8bc6\u4ecb\u7ecd \u5b57\u5178\u662fPython\u4e2d\u7684\u4e00\u4e2a\u5f3a\u5927\u5de5\u5177\u3002\u5b83\u4e0d\u4ec5\u80fd\u4ee5\u952e\u503c\u5bf9\u7684\u5f62\u5f0f\u9ad8\u6548\u5b58\u50a8\u6570\u636e\uff0c\u8fd8\u80fd\u5728\u8bb8\u591a\u5e38\u89c1\u7b97\u6cd5\u95ee\u9898\u4e2d\u663e\u8457\u63d0\u5347\u6027\u80fd\uff0c\u800cPython\u4e2d\u7684\u5b57\u5178\u53c8\u662f\u901a\u8fc7\u54c8\u5e0c\u8868\u6765\u5b9e\u73b0\u7684\u3002\u54c8\u5e0c\u8868\uff08hash table\uff09\uff0c\u53c8\u79f0\u6563\u5217\u8868\uff0c\u5b83\u901a\u8fc7\u5efa\u7acb\u952e key \u4e0e\u503c value \u4e4b\u95f4\u7684\u6620\u5c04\uff0c\u5b9e\u73b0\u9ad8\u6548\u7684\u5143\u7d20\u67e5\u8be2\u3002\u5177\u4f53\u800c\u8a00\uff0c\u6211\u4eec\u5411\u54c8\u5e0c\u8868\u4e2d\u8f93\u5165\u4e00\u4e2a\u952e key \uff0c\u5219\u53ef\u4ee5\u5728 O(1) \u65f6\u95f4\u5185\u83b7\u53d6\u5bf9\u5e94\u7684\u503c value \u3002 \u7ed9\u5b9a n \u4e2a\u5b66\u751f\uff0c\u6bcf\u4e2a\u5b66\u751f\u90fd\u6709\u201c\u59d3\u540d\u201d\u548c\u201c\u5b66\u53f7\u201d\u4e24\u9879\u6570\u636e\u3002\u5047\u5982\u6211\u4eec\u5e0c\u671b\u5b9e\u73b0\u201c\u8f93\u5165\u4e00\u4e2a\u5b66\u53f7\uff0c\u8fd4\u56de\u5bf9\u5e94\u7684\u59d3\u540d\u201d\u7684\u67e5\u8be2\u529f\u80fd\uff0c\u5219\u53ef\u4ee5\u91c7\u7528\u4e0b\u56fe\u6240\u793a\u7684\u54c8\u5e0c\u8868\u6765\u5b9e\u73b0\u3002 1.1 \u54c8\u5e0c\u8868\u5e38\u7528\u64cd\u4f5c \u54c8\u5e0c\u8868\u7684\u5e38\u89c1\u64cd\u4f5c\u5305\u62ec\uff1a\u521d\u59cb\u5316\u3001\u67e5\u8be2\u64cd\u4f5c\u3001\u6dfb\u52a0\u952e\u503c\u5bf9\u548c\u5220\u9664\u952e\u503c\u5bf9\u7b49\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a # \u521d\u59cb\u5316\u54c8\u5e0c\u8868 hmap = {} # \u6dfb\u52a0\u64cd\u4f5c # \u5728\u54c8\u5e0c\u8868\u4e2d\u6dfb\u52a0\u952e\u503c\u5bf9 (key, value) hmap[12836] = \"\u5c0f\u54c8\" hmap[15937] = \"\u5c0f\u5570\" hmap[16750] = \"\u5c0f\u7b97\" hmap[13276] = \"\u5c0f\u6cd5\" hmap[10583] = \"\u5c0f\u9e2d\" print(hmap) # \u67e5\u8be2\u64cd\u4f5c # \u5411\u54c8\u5e0c\u8868\u4e2d\u8f93\u5165\u952e key \uff0c\u5f97\u5230\u503c value name = hmap[15937] print(name) # \u5220\u9664\u64cd\u4f5c # \u5728\u54c8\u5e0c\u8868\u4e2d\u5220\u9664\u952e\u503c\u5bf9 (key, value) hmap.pop(10583) print(hmap) #\u4fee\u6539\u64cd\u4f5c hmap[10583] = \"\u5c0f\u9e45\" print(hmap) \u8f93\u51fa\uff1a {12836: '\u5c0f\u54c8', 15937: '\u5c0f\u5570', 16750: '\u5c0f\u7b97', 13276: '\u5c0f\u6cd5', 10583: '\u5c0f\u9e2d'} \u5c0f\u5570 {12836: '\u5c0f\u54c8', 15937: '\u5c0f\u5570', 16750: '\u5c0f\u7b97', 13276: '\u5c0f\u6cd5'} {12836: '\u5c0f\u54c8', 15937: '\u5c0f\u5570', 16750: '\u5c0f\u7b97', 13276: '\u5c0f\u6cd5', 10583: '\u5c0f\u9e45'} \u54c8\u5e0c\u8868\u6709\u4e09\u79cd\u5e38\u7528\u7684\u904d\u5386\u65b9\u5f0f\uff1a\u904d\u5386\u952e\u503c\u5bf9\u3001\u904d\u5386\u952e\u548c\u904d\u5386\u503c\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a # \u521d\u59cb\u5316\u54c8\u5e0c\u8868 hmap = {} # \u6dfb\u52a0\u64cd\u4f5c # \u5728\u54c8\u5e0c\u8868\u4e2d\u6dfb\u52a0\u952e\u503c\u5bf9 (key, value) hmap[12836] = \"\u5c0f\u54c8\" hmap[15937] = \"\u5c0f\u5570\" hmap[16750] = \"\u5c0f\u7b97\" hmap[13276] = \"\u5c0f\u6cd5\" hmap[10583] = \"\u5c0f\u9e2d\" # \u904d\u5386\u54c8\u5e0c\u8868 # \u904d\u5386\u952e\u503c\u5bf9 key->value for key, value in hmap.items(): print(key, \"->\", value) # \u5355\u72ec\u904d\u5386\u952e key for key in hmap.keys(): print(key) # \u5355\u72ec\u904d\u5386\u503c value for value in hmap.values(): print(value) \u8f93\u51fa\uff1a 12836 -> \u5c0f\u54c8 15937 -> \u5c0f\u5570 16750 -> \u5c0f\u7b97 13276 -> \u5c0f\u6cd5 10583 -> \u5c0f\u9e2d 12836 15937 16750 13276 10583 \u5c0f\u54c8 \u5c0f\u5570 \u5c0f\u7b97 \u5c0f\u6cd5 \u5c0f\u9e2d 1.2 \u54c8\u5e0c\u8868\u7b80\u5355\u5b9e\u73b0 \u6211\u4eec\u5148\u8003\u8651\u6700\u7b80\u5355\u7684\u60c5\u51b5\uff0c \u4ec5\u7528\u4e00\u4e2a\u6570\u7ec4\u6765\u5b9e\u73b0\u54c8\u5e0c\u8868 \u3002\u5728\u54c8\u5e0c\u8868\u4e2d\uff0c\u6211\u4eec\u5c06\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u7a7a\u4f4d\u79f0\u4e3a\u6876\uff08bucket\uff09\uff0c\u6bcf\u4e2a\u6876\u53ef\u5b58\u50a8\u4e00\u4e2a\u952e\u503c\u5bf9\u3002\u56e0\u6b64\uff0c\u67e5\u8be2\u64cd\u4f5c\u5c31\u662f\u627e\u5230 key \u5bf9\u5e94\u7684\u6876\uff0c\u5e76\u5728\u6876\u4e2d\u83b7\u53d6 value \u3002 \u90a3\u4e48\uff0c\u5982\u4f55\u57fa\u4e8e key \u5b9a\u4f4d\u5bf9\u5e94\u7684\u6876\u5462\uff1f\u8fd9\u662f\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\uff08hash function\uff09\u5b9e\u73b0\u7684\u3002\u54c8\u5e0c\u51fd\u6570\u7684\u4f5c\u7528\u662f\u5c06\u4e00\u4e2a\u8f83\u5927\u7684\u8f93\u5165\u7a7a\u95f4\u6620\u5c04\u5230\u4e00\u4e2a\u8f83\u5c0f\u7684\u8f93\u51fa\u7a7a\u95f4\u3002\u5728\u54c8\u5e0c\u8868\u4e2d\uff0c\u8f93\u5165\u7a7a\u95f4\u662f\u6240\u6709 key \uff0c\u8f93\u51fa\u7a7a\u95f4\u662f\u6240\u6709\u6876\uff08\u6570\u7ec4\u7d22\u5f15\uff09\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8f93\u5165\u4e00\u4e2a key \uff0c \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u5f97\u5230\u8be5 key \u5bf9\u5e94\u7684\u952e\u503c\u5bf9\u5728\u6570\u7ec4\u4e2d\u7684\u5b58\u50a8\u4f4d\u7f6e \u3002 \u8f93\u5165\u4e00\u4e2a key \uff0c\u54c8\u5e0c\u51fd\u6570\u7684\u8ba1\u7b97\u8fc7\u7a0b\u5206\u4e3a\u4ee5\u4e0b\u4e24\u6b65\u3002 \u901a\u8fc7\u67d0\u79cd\u54c8\u5e0c\u7b97\u6cd5 hash() \u8ba1\u7b97\u5f97\u5230\u54c8\u5e0c\u503c\u3002 \u5c06\u54c8\u5e0c\u503c\u5bf9\u6876\u6570\u91cf\uff08\u6570\u7ec4\u957f\u5ea6\uff09 capacity \u53d6\u6a21\uff0c\u4ece\u800c\u83b7\u53d6\u8be5 key \u5bf9\u5e94\u7684\u6570\u7ec4\u7d22\u5f15 index \u3002 index = hash(key) % capacity \u968f\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528 index \u5728\u54c8\u5e0c\u8868\u4e2d\u8bbf\u95ee\u5bf9\u5e94\u7684\u6876\uff0c\u4ece\u800c\u83b7\u53d6 value \u3002 \u8bbe\u6570\u7ec4\u957f\u5ea6 capacity = 100 \u3001\u54c8\u5e0c\u7b97\u6cd5 hash(key) = key \uff0c\u6613\u5f97\u54c8\u5e0c\u51fd\u6570\u4e3a key % 100 \u3002\u4e0b\u56fe\u4ee5 key \u5b66\u53f7\u548c value \u59d3\u540d\u4e3a\u4f8b\uff0c\u5c55\u793a\u4e86\u54c8\u5e0c\u51fd\u6570\u7684\u5de5\u4f5c\u539f\u7406\u3002 1.3 \u54c8\u5e0c\u51b2\u7a81\u4e0e\u6269\u5bb9 \u4ece\u672c\u8d28\u4e0a\u770b\uff0c\u54c8\u5e0c\u51fd\u6570\u7684\u4f5c\u7528\u662f\u5c06\u6240\u6709 key \u6784\u6210\u7684\u8f93\u5165\u7a7a\u95f4\u6620\u5c04\u5230\u6570\u7ec4\u6240\u6709\u7d22\u5f15\u6784\u6210\u7684\u8f93\u51fa\u7a7a\u95f4\uff0c\u800c\u8f93\u5165\u7a7a\u95f4\u5f80\u5f80\u8fdc\u5927\u4e8e\u8f93\u51fa\u7a7a\u95f4\u3002\u56e0\u6b64\uff0c \u7406\u8bba\u4e0a\u4e00\u5b9a\u5b58\u5728\u201c\u591a\u4e2a\u8f93\u5165\u5bf9\u5e94\u76f8\u540c\u8f93\u51fa\u201d\u7684\u60c5\u51b5 \u3002 \u5bf9\u4e8e\u4e0a\u8ff0\u793a\u4f8b\u4e2d\u7684\u54c8\u5e0c\u51fd\u6570\uff0c\u5f53\u8f93\u5165\u7684 key \u540e\u4e24\u4f4d\u76f8\u540c\u65f6\uff0c\u54c8\u5e0c\u51fd\u6570\u7684\u8f93\u51fa\u7ed3\u679c\u4e5f\u76f8\u540c\u3002\u4f8b\u5982\uff0c\u67e5\u8be2\u5b66\u53f7\u4e3a 12836 \u548c 20336 \u7684\u4e24\u4e2a\u5b66\u751f\u65f6\uff0c\u6211\u4eec\u5f97\u5230\uff1a 12836 % 100 = 36 20336 % 100 = 36 \u5982\u4e0b\u56fe\u6240\u793a\uff0c\u4e24\u4e2a\u5b66\u53f7\u6307\u5411\u4e86\u540c\u4e00\u4e2a\u59d3\u540d\uff0c\u8fd9\u663e\u7136\u662f\u4e0d\u5bf9\u7684\u3002\u6211\u4eec\u5c06\u8fd9\u79cd\u591a\u4e2a\u8f93\u5165\u5bf9\u5e94\u540c\u4e00\u8f93\u51fa\u7684\u60c5\u51b5\u79f0\u4e3a\u54c8\u5e0c\u51b2\u7a81\uff08hash collision\uff09\u3002 \u5982\u679c\u51fa\u73b0\u54c8\u5e0c\u51b2\u7a81\u4e86\uff0c\u53ea\u662f\u4f1a\u964d\u4f4e\u67e5\u627e\u7684\u6027\u80fd\uff0c\u56e0\u4e3a\u540c\u4e00\u4e2a\u54c8\u5e0c\u503c\u5bf9\u5e94\u7684\u6876\u5f53\u4e2d\uff0c\u8fd8\u4f1a\u4ee5\u94fe\u8868\u7684\u5f62\u5f0f\u5b58\u50a8\u591a\u4e2a\u503c\uff0c\u5982\u679c\u53d1\u73b0\u54c8\u5e0c\u51b2\u7a81\uff0c\u5c31\u4f1a\u6cbf\u7740\u94fe\u8868\u67e5\u627e\uff0c\u56e0\u4e3a\u662f\u904d\u5386\uff0c\u6240\u4ee5\u6027\u80fd\u4f1a\u964d\u4f4e\u3002 \u5bb9\u6613\u60f3\u5230\uff0c\u54c8\u5e0c\u8868\u5bb9\u91cf n \u8d8a\u5927\uff0c\u591a\u4e2a key \u88ab\u5206\u914d\u5230\u540c\u4e00\u4e2a\u6876\u4e2d\u7684\u6982\u7387\u5c31\u8d8a\u4f4e\uff0c\u51b2\u7a81\u5c31\u8d8a\u5c11\u3002\u56e0\u6b64\uff0c \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6269\u5bb9\u54c8\u5e0c\u8868\u6765\u51cf\u5c11\u54c8\u5e0c\u51b2\u7a81 \u3002 \u5982\u4e0b\u56fe\u6240\u793a\uff0c\u6269\u5bb9\u524d\u952e\u503c\u5bf9 (136, A) \u548c (236, D) \u53d1\u751f\u51b2\u7a81\uff0c\u6269\u5bb9\u540e\u51b2\u7a81\u6d88\u5931\u3002 \u7c7b\u4f3c\u4e8e\u6570\u7ec4\u6269\u5bb9\uff0c\u54c8\u5e0c\u8868\u6269\u5bb9\u9700\u5c06\u6240\u6709\u952e\u503c\u5bf9\u4ece\u539f\u54c8\u5e0c\u8868\u8fc1\u79fb\u81f3\u65b0\u54c8\u5e0c\u8868\uff0c\u975e\u5e38\u8017\u65f6\uff1b\u5e76\u4e14\u7531\u4e8e\u54c8\u5e0c\u8868\u5bb9\u91cf capacity \u6539\u53d8\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u6765\u91cd\u65b0\u8ba1\u7b97\u6240\u6709\u952e\u503c\u5bf9\u7684\u5b58\u50a8\u4f4d\u7f6e\uff0c\u8fd9\u8fdb\u4e00\u6b65\u589e\u52a0\u4e86\u6269\u5bb9\u8fc7\u7a0b\u7684\u8ba1\u7b97\u5f00\u9500\u3002\u4e3a\u6b64\uff0c\u7f16\u7a0b\u8bed\u8a00\u901a\u5e38\u4f1a\u9884\u7559\u8db3\u591f\u5927\u7684\u54c8\u5e0c\u8868\u5bb9\u91cf\uff0c\u9632\u6b62\u9891\u7e41\u6269\u5bb9\u3002 2 \u9891\u7387\u7edf\u8ba1\u4e0e\u8ba1\u6570 2.1 \u8bcd\u9891\u7edf\u8ba1\u4ecb\u7ecd \u5b57\u5178\u6700\u5e38\u89c1\u7684\u7528\u9014\u4e4b\u4e00\u662f \u9891\u7387\u7edf\u8ba1 \uff0c\u5373\u7528\u6765\u7edf\u8ba1\u6570\u636e\u51fa\u73b0\u7684\u6b21\u6570\u6216\u9891\u7387\u3002\u5728\u9700\u8981\u5904\u7406\u5927\u91cf\u6570\u636e\u65f6\uff0c\u5b57\u5178\u53ef\u4ee5\u901a\u8fc7\u952e\u503c\u5bf9\u5feb\u901f\u8bb0\u5f55\u6bcf\u4e2a\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570\u3002\u8fd9\u6837\u7684\u64cd\u4f5c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(1)\uff0c\u56e0\u6b64\u76f8\u6bd4\u4e8e\u4f7f\u7528\u5217\u8868\u7684 O(n) \u67e5\u627e\uff0c\u6027\u80fd\u5927\u5e45\u63d0\u5347\u3002 \u8bcd\u9891\u7edf\u8ba1\u662f\u54c8\u5e0c\u6620\u5c04\u7684\u4e00\u79cd\u7279\u6b8a\u5e94\u7528\uff0c\u91cd\u70b9\u5728\u4e8e\u5c06\u4e00\u4e2a\u503c\uff08\u5982\u5b57\u7b26\u3001\u6570\u5b57\u7b49\uff09\u6620\u5c04\u5230\u5176\u51fa\u73b0\u6b21\u6570\u4e0a\u3002\u5b83\u72ed\u4e49\u5730\u5b9a\u4e49\u4e86\u952e\u503c\u5bf9\u4e2d\u7684\u201c\u503c\u201d\u662f\u8be5\u952e\u51fa\u73b0\u7684\u9891\u7387\uff0c\u5e38\u7528\u4e8e\u7edf\u8ba1\u6570\u636e\u96c6\u4e2d\u7684\u5143\u7d20\u9891\u7387\u3002\u8bcd\u9891\u7edf\u8ba1\u901a\u5e38\u7528\u4e8e\u5b57\u7b26\u7edf\u8ba1\u3001\u5143\u7d20\u9891\u7387\u7edf\u8ba1\u7b49\u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u8bcd\u9891\u7edf\u8ba1\u662f\u4e00\u79cd\u7279\u5b9a\u7684\u54c8\u5e0c\u6620\u5c04\uff0c\u72ed\u4e49\u5730\u5c06\u952e\u503c\u5bf9\u5b9a\u4e49\u4e3a\u201c\u5143\u7d20: \u51fa\u73b0\u9891\u7387\u201d\uff0c\u7528\u4e8e\u9891\u7387\u7edf\u8ba1\u95ee\u9898\u4e2d\u3002 \u4f8b\u5982\uff0c\u5728\u5b57\u7b26\u4e32\u4e2d\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u9891\u7387\u65f6\uff0c\u5b57\u5178\u7684\u952e\u662f\u5b57\u7b26\uff0c\u503c\u662f\u8be5\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\u3002 \u5e38\u89c1\u5e94\u7528\uff1a \u67e5\u627e\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u5143\u7d20 \u5224\u65ad\u6570\u636e\u96c6\u4e2d\u662f\u5426\u5b58\u5728\u91cd\u590d\u5143\u7d20 \u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26/\u6570\u5b57/\u5143\u7d20\u7684\u9891\u7387 # \u7edf\u8ba1\u5b57\u7b26\u9891\u7387 def count_frequency(s): freq_dict = {} for char in s: if char in freq_dict: freq_dict[char] += 1 else: freq_dict[char] = 1 return freq_dict 2.2 \u4f8b\u9898\u8bb2\u89e3 2.2.1 LC 242 \u6709\u6548\u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd \u95ee\u9898\u63cf\u8ff0 \u63cf\u8ff0 \uff1a\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32s\u548ct\u3002 \u8981\u6c42 \uff1a\u5224\u65adt\u548cs\u662f\u5426\u4f7f\u7528\u4e86\u76f8\u540c\u7684\u5b57\u7b26\u6784\u6210\uff08\u5b57\u7b26\u51fa\u73b0\u7684\u79cd\u7c7b\u548c\u6570\u76ee\u90fd\u76f8\u540c\uff09\u3002 \u601d\u8def\u5206\u6790 1.\u5982\u679c\u5b57\u7b26\u957f\u5ea6\u4e0d\u76f8\u540c\uff0c\u76f4\u63a5\u8fd4\u56deFalse\uff1b 2.\u4f7f\u7528\u5b57\u5178\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u6bcf\u4e2a\u5b57\u7b26\u7684\u9891\u7387\u662f\u5426\u76f8\u7b49\u3002 \u63d0\u793a \u521b\u5efa\u4e24\u4e2a\u5b57\u5178\u50a8\u5b58\u9891\u7387\u6b21\u6570\uff0c\u8fdb\u884c\u6bd4\u8f83\u3002 \u53c2\u8003\u89e3\u7b54 class Solution: def isAnagram(self, s: str, t: str) -> bool: if len(s) != len(t): return False count_s, count_t = {}, {} for i in range(len(s)): count_s[s[i]] = count_s.get(s[i], 0) + 1 count_t[t[i]] = count_t.get(t[i], 0) + 1 return count_s == count_t 2.3 \u4e3e\u4e00\u53cd\u4e09 2.3.1 LC 387 \u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u552f\u4e00\u6570\u5b57 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u627e\u5230 \u5b83\u7684\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u7684\u5b57\u7b26\uff0c\u5e76\u8fd4\u56de\u5b83\u7684\u7d22\u5f15 \u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de -1 \u3002 \u601d\u8def\u5206\u6790 \u8fd9\u9053\u9898\u76ee\u8981\u6c42\u6211\u4eec\u627e\u5230\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u7684\u5b57\u7b26\u3002\u6700\u7b80\u5355\u7684\u529e\u6cd5\u662f\u4f7f\u7528 \u4e24\u6b21\u904d\u5386 \u3002\u7b2c\u4e00\u6b21\u904d\u5386\u5b57\u7b26\u4e32\u65f6\uff0c\u4f7f\u7528 \u5b57\u5178 \u8bb0\u5f55\u6bcf\u4e2a\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570\u3002\u7b2c\u4e8c\u6b21\u904d\u5386\u65f6\uff0c\u68c0\u67e5\u54ea\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\u662f1\uff0c\u7b2c\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u5b57\u7b26\u5c31\u662f\u6211\u4eec\u8981\u627e\u7684\uff0c\u8fd4\u56de\u5b83\u7684\u7d22\u5f15\u3002\u5982\u679c\u6ca1\u6709\u627e\u5230\u8fd9\u6837\u7684\u5b57\u7b26\uff0c\u5c31\u8fd4\u56de -1 \u3002 \u63d0\u793a \u4e24\u6b21\u904d\u5386\u5b57\u7b26\u4e32\u7684\u65b9\u6cd5\u5f88\u5e38\u7528\u3002\u7b2c\u4e00\u6b21\u7528\u6765\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u7b2c\u4e8c\u6b21\u7528\u6765\u627e\u51fa\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u7684\u5b57\u7b26\u3002 \u4f7f\u7528\u5b57\u5178\u53ef\u4ee5\u65b9\u4fbf\u5730\u8bb0\u5f55\u6bcf\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\u3002 \u53c2\u8003\u793a\u4f8b class Solution: def firstUniqChar(self, s: str) -> int: count = dict() for i in range(len(s)): if s[i] in count: count[s[i]] += 1 # \u5982\u679c\u5b57\u7b26\u5df2\u7ecf\u5728\u5b57\u5178\u4e2d\uff0c\u9891\u7387\u52a01 else: count[s[i]] = 1 # \u5982\u679c\u5b57\u7b26\u4e0d\u5728\u5b57\u5178\u4e2d\uff0c\u521d\u59cb\u5316\u4e3a1 for k, v in count.items(): if v == 1: return s.index(k) return -1 3 \u5feb\u901f\u67e5\u627e 3.1 \u5feb\u901f\u67e5\u627e\u4ecb\u7ecd \u5feb\u901f\u67e5\u627e\u662f\u901a\u8fc7\u54c8\u5e0c\u8868\u5b9e\u73b0\u7684\uff0c\u5b83\u5229\u7528\u54c8\u5e0c\u51fd\u6570\u7684\u6027\u8d28\u5728\u5e38\u6570\u65f6\u95f4\u5185\u5b8c\u6210\u67e5\u627e\u4efb\u52a1\u3002\u5176\u6838\u5fc3\u5728\u4e8e\u9ad8\u6548\u6027\u2014\u2014\u76f8\u6bd4\u4e8e\u5217\u8868\u904d\u5386\u7684 O(n)\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u5b57\u5178\u901a\u8fc7\u54c8\u5e0c\u67e5\u627e\u53ef\u4ee5\u5728 O(1) \u65f6\u95f4\u5185\u627e\u5230\u5bf9\u5e94\u7684\u503c\u3002\u5feb\u901f\u67e5\u627e\u5e76\u4e0d\u5173\u5fc3\u5177\u4f53\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u800c\u662f\u7740\u91cd\u5f3a\u8c03\u67e5\u627e\u901f\u5ea6\u7684\u63d0\u5347\u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u5feb\u901f\u67e5\u627e\u662f\u5b57\u5178\u5229\u7528\u54c8\u5e0c\u8868\u5b9e\u73b0\u7684\u9ad8\u6548\u67e5\u627e\u64cd\u4f5c\uff0c\u5f3a\u8c03\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(1)\uff0c\u9002\u7528\u4e8e\u5728\u6570\u636e\u96c6\u4e2d\u5feb\u901f\u5b9a\u4f4d\u7279\u5b9a\u5143\u7d20\u3002 \u4f8b\u5982\uff0c\u901a\u8fc7\u7ed9\u5b9a\u5b66\u751f\u5b66\u53f7\uff0c\u67e5\u627e\u5bf9\u5e94\u7684\u5b66\u751f\u59d3\u540d\u65f6\uff0c\u5b57\u5178\u901a\u8fc7\u54c8\u5e0c\u8868\u53ef\u4ee5\u5feb\u901f\u8fd4\u56de\u67e5\u8be2\u7ed3\u679c\u3002 # \u521b\u5efa\u5b57\u5178\uff0c\u5b58\u50a8\u5b66\u53f7\u548c\u59d3\u540d students = { 1001: \"Alice\", 1002: \"Bob\", 1003: \"Charlie\" } # \u6839\u636e\u5b66\u53f7\u5feb\u901f\u67e5\u627e\u5bf9\u5e94\u7684\u5b66\u751f\u59d3\u540d student_id = 1002 print(students[student_id]) # \u8f93\u51fa\uff1aBob 3.2\u4f8b\u9898\u8bb2\u89e3 3.2.1 LC 1 \u4e24\u6570\u4e4b\u548c \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u548c\u4e00\u4e2a\u6574\u6570\u76ee\u6807\u503c target \uff0c\u8bf7\u4f60\u5728\u8be5\u6570\u7ec4\u4e2d\u627e\u51fa \u548c\u4e3a\u76ee\u6807\u503c target \u7684\u90a3 \u4e24\u4e2a \u6574\u6570\uff0c\u5e76\u8fd4\u56de\u5b83\u4eec\u7684\u6570\u7ec4\u4e0b\u6807\u3002 \u4f60\u53ef\u4ee5\u5047\u8bbe\u6bcf\u79cd\u8f93\u5165\u53ea\u4f1a\u5bf9\u5e94\u4e00\u4e2a\u7b54\u6848\uff0c\u5e76\u4e14\u4f60\u4e0d\u80fd\u4f7f\u7528\u4e24\u6b21\u76f8\u540c\u7684\u5143\u7d20\u3002 \u4f60\u53ef\u4ee5\u6309\u4efb\u610f\u987a\u5e8f\u8fd4\u56de\u7b54\u6848\u3002 \u601d\u8def\u5206\u6790 \u904d\u5386\u6570\u7ec4\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570nums[i]\uff1a \u67e5\u627e\u5b57\u5178\u4e2d\u4e66\u5426\u5b58\u5728target-nums[i]\uff0c\u5b58\u5728\u5219\u8f93\u51fatarget-nums[i]\u5bf9\u5e94\u7684\u4e0b\u6807\u548c\u5f53\u524d\u6570\u7ec4\u7684\u4e0b\u6807 i\u3002 \u4e0d\u5b58\u5728\u5219\u5728\u5b57\u5178\u4e2d\u5b58\u5165target-nums[i]\u7684\u4e0b\u6807i\u3002 \u63d0\u793a \u5c5e\u4e8e\u5b57\u5178\u4e2d\u7684\u5feb\u901f\u67e5\u627e\u3002 \u53c2\u8003\u89e3\u7b54\uff1a class Solution: def twoSum(self, nums: List[int], target: int) -> List[int]: hashtable = dict() for i, num in enumerate(nums): if target - num in hashtable: return [hashtable[target - num], i] hashtable[nums[i]] = i return [] 3.3 \u4e3e\u4e00\u53cd\u4e09 3.3.1 LC 217 \u5b58\u5728\u91cd\u590d\u5143\u7d20 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u3002\u5982\u679c\u4efb\u4e00\u503c\u5728\u6570\u7ec4\u4e2d\u51fa\u73b0 \u81f3\u5c11\u4e24\u6b21 \uff0c\u8fd4\u56de true \uff1b\u5982\u679c\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u4e92\u4e0d\u76f8\u540c\uff0c\u8fd4\u56de false \u3002 \u601d\u8def\u5206\u6790 \u8fd9\u9053\u9898\u76ee\u8981\u6c42\u5224\u65ad\u4e00\u4e2a\u6570\u7ec4\u91cc\u6709\u6ca1\u6709\u91cd\u590d\u7684\u6570\u5b57\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a \u5b57\u5178 \u6765\u5b58\u50a8\u6bcf\u4e2a\u6570\u5b57\u662f\u5426\u5df2\u7ecf\u51fa\u73b0\u8fc7\u3002\u5f53\u6211\u4eec\u904d\u5386\u6570\u7ec4\u65f6\uff0c\u6bcf\u9047\u5230\u4e00\u4e2a\u6570\u5b57\uff0c\u5c31\u68c0\u67e5\u5b83\u662f\u5426\u5df2\u7ecf\u5b58\u5728\u4e8e\u5b57\u5178\u4e2d\u3002\u5982\u679c\u5df2\u7ecf\u5b58\u5728\uff0c\u8bf4\u660e\u8fd9\u4e2a\u6570\u5b57\u91cd\u590d\u4e86\uff0c\u76f4\u63a5\u8fd4\u56de true \uff1b\u5982\u679c\u6ca1\u6709\uff0c\u5c31\u628a\u8fd9\u4e2a\u6570\u5b57\u52a0\u5230\u5b57\u5178\u91cc\uff0c\u7ee7\u7eed\u68c0\u67e5\u4e0b\u4e00\u4e2a\u6570\u5b57\u3002\u904d\u5386\u5b8c\u6570\u7ec4\u540e\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\u4efb\u4f55\u91cd\u590d\u6570\u5b57\uff0c\u5c31\u8fd4\u56de false \u3002 \u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\u6bcf\u4e2a\u6570\u5b57\u53ea\u4f1a\u68c0\u67e5\u4e00\u6b21\uff0c\u5e76\u4e14\u67e5\u627e\u548c\u5b58\u50a8\u6570\u5b57\u7684\u64cd\u4f5c\u4e5f\u5f88\u5feb\uff0c\u56e0\u6b64\u6574\u4e2a\u8fc7\u7a0b\u5f88\u9ad8\u6548\u3002 \u63d0\u793a \u5b57\u5178\u53ef\u4ee5\u7528\u6765\u5feb\u901f\u5b58\u50a8\u548c\u67e5\u627e\u6570\u5b57\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u91cd\u590d\u7684\u6570\u5b57\uff0c\u5c5e\u4e8e\u9891\u7387\u7edf\u8ba1\u4e0e\u8ba1\u6570\u3002 \u53c2\u8003\u89e3\u7b54 class Solution(object): def containsDuplicate(self, nums): seen = {} for num in nums: if num in seen: return True seen[num] = True return False 4 \u54c8\u5e0c\u6620\u5c04 4.1 \u54c8\u5e0c\u6620\u5c04\u4ecb\u7ecd \u54c8\u5e0c\u6620\u5c04\u662f\u4e00\u4e2a\u66f4\u5e7f\u6cdb\u7684\u6982\u5ff5\uff0c\u8868\u793a\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u5c06\u4e00\u4e2a\u952e\uff08key\uff09\u6620\u5c04\u5230\u4e00\u4e2a\u503c\uff08value\uff09\uff0c\u8fd9\u79cd\u952e\u503c\u5bf9\u53ef\u4ee5\u7528\u4e8e\u6784\u5efa\u5404\u79cd\u5173\u7cfb\uff0c\u4e0d\u4ec5\u9650\u4e8e\u9891\u7387\u7edf\u8ba1\u6216\u5feb\u901f\u67e5\u627e\u3002\u4f8b\u5982\uff0c\u5c06\u4eba\u540d\u6620\u5c04\u5230\u5b66\u6821\uff0c\u6216\u8005\u5c06\u5b66\u6821\u6620\u5c04\u5230\u4e00\u4e2a\u5305\u542b\u6240\u6709\u5b66\u751f\u7684\u4eba\u540d\u5217\u8868\uff0c\u90fd\u662f\u54c8\u5e0c\u6620\u5c04\u7684\u5e94\u7528\u3002\u54c8\u5e0c\u6620\u5c04\u53ef\u4ee5\u652f\u6301\u4e00\u5bf9\u4e00\u3001\u4e00\u5bf9\u591a\u7b49\u590d\u6742\u7684\u5173\u7cfb\u7ed3\u6784\u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u54c8\u5e0c\u6620\u5c04\u662f\u5e7f\u6cdb\u4f7f\u7528\u7684\u6620\u5c04\u673a\u5236\uff0c\u80fd\u591f\u7075\u6d3b\u5b9e\u73b0\u952e\u503c\u5bf9\u5173\u7cfb\uff0c\u5e94\u7528\u4e8e\u66f4\u591a\u590d\u6742\u573a\u666f\uff0c\u5982\u4e00\u5bf9\u4e00\u3001\u4e00\u5bf9\u591a\u7684\u6620\u5c04\u3002 \u4f8b\u5982\uff0c\u5c06\u4eba\u540d\u4e0e\u5b66\u6821\u5173\u8054\uff0c\u6216\u5c06\u5b66\u6821\u4e0e\u5176\u6240\u6709\u5b66\u751f\u5173\u8054\uff0c\u90fd\u53ef\u4ee5\u901a\u8fc7\u54c8\u5e0c\u6620\u5c04\u6765\u5b9e\u73b0\u3002 # \u4eba\u540d\u5230\u5b66\u6821\u7684\u4e00\u5bf9\u4e00\u6620\u5c04 people_to_school = { \"Alice\": \"Harvard\", \"Bob\": \"MIT\" } # \u5b66\u6821\u5230\u4eba\u540d\u5217\u8868\u7684\u4e00\u5bf9\u591a\u6620\u5c04 school_to_people = { \"Harvard\": [\"Alice\", \"Charlie\"], \"MIT\": [\"Bob\"] } 4.2 \u4f8b\u9898\u8bb2\u89e3 4.2.1 LC 697 \u6570\u7ec4\u7684\u5ea6 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u4e14\u53ea\u5305\u542b\u975e\u8d1f\u6570\u7684\u6574\u6570\u6570\u7ec4 nums \uff0c\u6570\u7ec4\u7684 \u5ea6 \u7684\u5b9a\u4e49\u662f\u6307\u6570\u7ec4\u91cc\u4efb\u4e00\u5143\u7d20\u51fa\u73b0\u9891\u6570\u7684\u6700\u5927\u503c\u3002 \u4f60\u7684\u4efb\u52a1\u662f\u5728 nums \u4e2d\u627e\u5230\u4e0e nums \u62e5\u6709\u76f8\u540c\u5927\u5c0f\u7684\u5ea6\u7684\u6700\u77ed\u8fde\u7eed\u5b50\u6570\u7ec4\uff0c\u8fd4\u56de\u5176\u957f\u5ea6\u3002 \u601d\u8def\u5206\u6790 \u8bb0\u539f\u6570\u7ec4\u4e2d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u6570\u4e3a x\uff0c\u90a3\u4e48\u548c\u539f\u6570\u7ec4\u7684\u5ea6\u76f8\u540c\u7684\u6700\u77ed\u8fde\u7eed\u5b50\u6570\u7ec4\uff0c\u5fc5\u7136\u5305\u542b\u4e86\u539f\u6570\u7ec4\u4e2d\u7684\u5168\u90e8 x\uff0c\u4e14\u4e24\u7aef\u6070\u4e3a x \u7b2c\u4e00\u6b21\u51fa\u73b0\u548c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002 \u56e0\u4e3a\u7b26\u5408\u6761\u4ef6\u7684 x \u53ef\u80fd\u6709\u591a\u4e2a\uff0c\u5373\u591a\u4e2a\u4e0d\u540c\u7684\u6570\u5728\u539f\u6570\u7ec4\u4e2d\u51fa\u73b0\u6b21\u6570\u76f8\u540c\u3002\u6240\u4ee5\u4e3a\u4e86\u627e\u5230\u8fd9\u4e2a\u5b50\u6570\u7ec4\uff0c\u6211\u4eec\u9700\u8981\u7edf\u8ba1\u6bcf\u4e00\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u540c\u65f6\u8fd8\u9700\u8981\u7edf\u8ba1\u6bcf\u4e00\u4e2a\u6570\u7b2c\u4e00\u6b21\u51fa\u73b0\u548c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002 \u5728\u5b9e\u9645\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u54c8\u5e0c\u8868\u5b9e\u73b0\u8be5\u529f\u80fd\uff0c\u6bcf\u4e00\u4e2a\u6570\u6620\u5c04\u5230\u4e00\u4e2a\u957f\u5ea6\u4e3a 3 \u7684\u6570\u7ec4\uff0c\u6570\u7ec4\u4e2d\u7684\u4e09\u4e2a\u5143\u7d20\u5206\u522b\u4ee3\u8868\u8fd9\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\u3001\u8fd9\u4e2a\u6570\u5728\u539f\u6570\u7ec4\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u548c\u8fd9\u4e2a\u6570\u5728\u539f\u6570\u7ec4\u4e2d\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\u5f53\u6211\u4eec\u8bb0\u5f55\u5b8c\u6240\u6709\u4fe1\u606f\u540e\uff0c\u6211\u4eec\u9700\u8981\u904d\u5386\u8be5\u54c8\u5e0c\u8868\uff0c\u627e\u5230\u5143\u7d20\u51fa\u73b0\u6b21\u6570\u6700\u591a\uff0c\u4e14\u524d\u540e\u4f4d\u7f6e\u5dee\u6700\u5c0f\u7684\u6570\u3002 \u63d0\u793a 1.\u5148\u8bb0\u5f55\u6bcf\u4e2a\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u7b2c\u4e00\u6b21\u548c\u6700\u540e\u4e00\u6b21\u7684\u7d22\u5f15 2.\u627e\u5230\u6570\u7ec4\u7684\u5ea6\u548c\u6700\u77ed\u5b50\u6570\u7ec4\u7684\u957f\u5ea6 \u53c2\u8003\u89e3\u7b54 class Solution: def findShortestSubArray(self, nums: List[int]) -> int: mp = dict() for i, num in enumerate(nums): if num in mp: mp[num][0] += 1 mp[num][2] = i else: mp[num] = [1, i, i] maxNum = minLen = 0 for count, left, right in mp.values(): if maxNum < count: maxNum = count minLen = right - left + 1 elif maxNum == count: if minLen > (span := right - left + 1): minLen = span return minLen \u89e3\u9898\u8fc7\u7a0b\uff1a \u521d\u59cb\u5316\u5b57\u5178mp \u904d\u5386\u6570\u7ec4nums\uff0c\u8bb0\u5f55\u51fa\u73b0\u6b21\u6570\uff0c\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u7d22\u5f15\uff0c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u7d22\u5f15 \u904d\u5386\u5b57\u5178 mp \u7684\u503c\uff0c\u63d0\u53d6\u6bcf\u4e2a\u6570\u5b57\u7684\u51fa\u73b0\u6b21\u6570\u3001\u7b2c\u4e00\u6b21\u548c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002 maxNum \u8bb0\u5f55\u5f53\u524d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u503c\uff08\u5373\u6570\u7ec4\u7684\u5ea6\uff09\u3002 minLen \u8bb0\u5f55\u5177\u6709\u76f8\u540c\u5ea6\u7684\u5b50\u6570\u7ec4\u7684\u6700\u77ed\u957f\u5ea6\u3002 \u5982\u679c\u5f53\u524d\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570\u5927\u4e8e maxNum \uff0c\u66f4\u65b0 maxNum \u548c\u6700\u77ed\u5b50\u6570\u7ec4\u957f\u5ea6 minLen \u3002 \u5982\u679c\u51fa\u73b0\u6b21\u6570\u76f8\u540c\uff0c\u68c0\u67e5\u5f53\u524d\u5b50\u6570\u7ec4\u662f\u5426\u6bd4\u4e4b\u524d\u7684\u77ed\uff0c\u5e76\u66f4\u65b0 minLen \u3002 4.3 \u4e3e\u4e00\u53cd\u4e09 4.3.1 LC 205 \u540c\u6784\u5b57\u7b26\u4e32 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 s \u548c t \uff0c\u5224\u65ad\u5b83\u4eec\u662f\u5426\u662f\u540c\u6784\u7684\u3002 \u5982\u679c s \u4e2d\u7684\u5b57\u7b26\u53ef\u4ee5\u6309\u67d0\u79cd\u6620\u5c04\u5173\u7cfb\u66ff\u6362\u5f97\u5230 t \uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u662f\u540c\u6784\u7684\u3002 \u6bcf\u4e2a\u51fa\u73b0\u7684\u5b57\u7b26\u90fd\u5e94\u5f53\u6620\u5c04\u5230\u53e6\u4e00\u4e2a\u5b57\u7b26\uff0c\u540c\u65f6\u4e0d\u6539\u53d8\u5b57\u7b26\u7684\u987a\u5e8f\u3002\u4e0d\u540c\u5b57\u7b26\u4e0d\u80fd\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u5b57\u7b26\u4e0a\uff0c\u76f8\u540c\u5b57\u7b26\u53ea\u80fd\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u5b57\u7b26\u4e0a\uff0c\u5b57\u7b26\u53ef\u4ee5\u6620\u5c04\u5230\u81ea\u5df1\u672c\u8eab\u3002 \u601d\u8def\u5206\u6790 \u6839\u636e\u9898\u76ee\u610f\u601d\uff0c\u5b57\u7b26\u4e32 s \u548c t \u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u5b57\u7b26\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u3002 s \u7684\u6bcf\u4e2a\u5b57\u7b26\u90fd\u4e0e t \u5bf9\u5e94\u4f4d\u7f6e\u4e0a\u7684\u5b57\u7b26\u5bf9\u5e94\u3002\u53ef\u4ee5\u8003\u8651\u7528\u54c8\u5e0c\u8868\u6765\u5b58\u50a8 s[i]:t[i]\u7684\u5bf9\u5e94\u5173\u7cfb\u3002\u4f46\u662f\u8fd9\u6837\u53ea\u80fd\u4fdd\u8bc1\u5bf9\u5e94\u4f4d\u7f6e\u4e0a\u7684\u5b57\u7b26\u662f\u5bf9\u5e94\u7684\uff0c\u4f46\u4e0d\u80fd\u4fdd\u8bc1\u662f\u552f\u4e00\u5bf9\u5e94\u7684\u3002\u6240\u4ee5\u8fd8\u9700\u8981\u53e6\u4e00\u4e2a\u54c8\u5e0c\u8868\u6765\u5b58\u50a8 t[i]:s[i]\u7684\u5bf9\u5e94\u5173\u7cfb\u6765\u5224\u65ad\u662f\u5426\u662f\u552f\u4e00\u5bf9\u5e94\u7684\u3002 \u63d0\u793a \u5c5e\u4e8e\u5efa\u7acb\u6620\u5c04\uff0c\u901a\u8fc7\u521b\u5efa\u5b57\u5178\u5efa\u7acb\u5b57\u6bcd\u548c\u51fa\u73b0\u5b57\u6bcd\u7684\u6620\u5c04\u5173\u7cfb\u3002 \u53c2\u8003\u89e3\u7b54 class Solution: def isIsomorphic(self, s: str, t: str) -> bool: s_dict = dict() t_dict = dict() for i in range(len(s)): if s[i] in s_dict and s_dict[s[i]] != t[i]: return False if t[i] in t_dict and t_dict[t[i]] != s[i]: return False s_dict[s[i]] = t[i] t_dict[t[i]] = s[i] return True 4.3.2 LC 219 \u5b58\u5728\u91cd\u590d\u5143\u7d20II \u95ee\u9898\u63cf\u8ff0 \u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u548c\u4e00\u4e2a\u6574\u6570 k \uff0c\u5224\u65ad\u6570\u7ec4\u4e2d\u662f\u5426\u5b58\u5728\u4e24\u4e2a \u4e0d\u540c\u7684\u7d22\u5f15 i \u548c j \uff0c\u6ee1\u8db3 nums[i] == nums[j] \u4e14 abs(i - j) <= k \u3002\u5982\u679c\u5b58\u5728\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002 \u601d\u8def\u5206\u6790 \u8fd9\u9053\u9898\u76ee\u662f LC 217 \u7684\u6269\u5c55\u7248\uff0c\u4e0d\u4ec5\u8981\u5224\u65ad\u662f\u5426\u6709\u91cd\u590d\u5143\u7d20\uff0c\u8fd8\u8981\u6c42\u8fd9\u4e9b\u91cd\u590d\u5143\u7d20\u7684\u7d22\u5f15\u4e4b\u5dee\u4e0d\u8d85\u8fc7\u7ed9\u5b9a\u7684\u6570\u5b57 k \u3002\u6211\u4eec\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528 \u5b57\u5178 \uff0c\u8bb0\u5f55\u6bcf\u4e2a\u6570\u5b57\u7684 \u6700\u540e\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e \u3002\u5f53\u6211\u4eec\u9047\u5230\u4e00\u4e2a\u6570\u5b57\u65f6\uff0c\u5148\u68c0\u67e5\u5b57\u5178\u4e2d\u662f\u5426\u6709\u5b83\u3002\u5982\u679c\u6709\uff0c\u8fd8\u8981\u68c0\u67e5\u5b83\u4e4b\u524d\u51fa\u73b0\u7684\u4f4d\u7f6e\u548c\u5f53\u524d\u7684\u4f4d\u7f6e\u4e4b\u5dee\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e k \u3002\u5982\u679c\u6ee1\u8db3\u6761\u4ef6\uff0c\u5c31\u8fd4\u56de true \uff1b\u5982\u679c\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u5c31\u66f4\u65b0\u5b83\u5728\u5b57\u5178\u4e2d\u7684\u4f4d\u7f6e\u3002\u904d\u5386\u5b8c\u6570\u7ec4\u540e\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\u7b26\u5408\u6761\u4ef6\u7684\u6570\u5b57\uff0c\u8fd4\u56de false \u3002 \u63d0\u793a \u6211\u4eec\u9700\u8981\u5728\u5b57\u5178\u4e2d\u8bb0\u5f55\u6570\u5b57\u7684\u51fa\u73b0\u4f4d\u7f6e\uff0c\u800c\u4e0d\u662f\u5355\u7eaf\u5730\u8bb0\u5f55\u5b83\u662f\u5426\u51fa\u73b0\u8fc7\u3002 \u8981\u5c0f\u5fc3\u5904\u7406\u7d22\u5f15\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u786e\u4fdd\u4e24\u4e2a\u76f8\u540c\u7684\u6570\u5b57\u4e4b\u95f4\u7684\u7d22\u5f15\u5dee\u5c0f\u4e8e\u7b49\u4e8e k \u3002 \u53c2\u8003\u89e3\u7b54 class Solution: def containsNearbyDuplicate(self, nums: List[int], k: int) -> bool: pos = {} for i,num in enumerate(nums): if num in pos and i - pos[num] <= k: return True pos[num] = i return False 5 \u8bfe\u540e\u7ec3\u4e60 \u9891\u7387\u7edf\u8ba1 \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u9898\u76ee\u63cf\u8ff0 LC 451 \u6839\u636e\u5b57\u7b26\u51fa\u73b0\u9891\u7387\u6392\u5e8f \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8bf7\u5c06\u5b57\u7b26\u6309\u51fa\u73b0\u9891\u7387\u6392\u5e8f\u3002 LC 692 \u524dK\u4e2a\u9ad8\u9891\u5355\u8bcd \u7ed9\u5b9a\u4e00\u4e2a\u5355\u8bcd\u5217\u8868\uff0c\u8fd4\u56de\u524d K \u4e2a\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684\u5355\u8bcd\u3002 LC 347 \u524dK\u4e2a\u9ad8\u9891\u5143\u7d20 \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\uff0c\u8fd4\u56de\u51fa\u73b0\u9891\u7387\u524d K \u9ad8\u7684\u5143\u7d20 LC 554 \u780c\u5899 \u8ba1\u7b97\u901a\u8fc7\u4e00\u5835\u5899\u7684\u5782\u76f4\u7ebf\u6bb5\u7a7f\u8fc7\u7684\u7816\u5757\u6570\u91cf\u6700\u5c11\u7684\u5730\u65b9\u3002 LC 2085 \u7edf\u8ba1\u51fa\u73b0\u8fc7\u4e00\u6b21\u7684\u516c\u5171\u5b57\u7b26\u4e32 \u8fd4\u56de\u5728\u4e24\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\u90fd\u6070\u597d\u51fa\u73b0\u4e00\u6b21\u7684\u5b57\u7b26\u4e32\u7684\u6570\u76ee\u3002 \u5feb\u901f\u67e5\u627e \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u9898\u76ee\u63cf\u8ff0 LC 594 \u6700\u957f\u548c\u8c10\u5b50\u5e8f\u5217 \u627e\u5230\u548c\u8c10\u5b50\u5e8f\u5217\u7684\u6700\u957f\u957f\u5ea6\uff0c\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u76f8\u5dee\u4e3a1\u3002 LC 525 \u8fde\u7eed\u6570\u7ec4 \u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\u7ec4\uff0c\u627e\u5230\u957f\u5ea6\u76f8\u540c\u76840\u548c1\u7684\u6700\u957f\u5b50\u6570\u7ec4\u3002 LC 49 \u5b57\u6bcd\u5f02\u4f4d\u8bcd\u5206\u7ec4 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4\uff0c\u5c06\u5b57\u6bcd\u5f02\u4f4d\u8bcd\u7ec4\u5408\u5728\u4e00\u8d77\u3002 LC 169 \u591a\u6570\u5143\u7d20 \u7ed9\u5b9a\u4e00\u4e2a\u5927\u5c0f\u4e3an\u7684\u6570\u7ec4nums\uff0c\u8fd4\u56de\u5176\u4e2d\u7684\u591a\u6570\u5143\u7d20\u3002 LC 409 \u6700\u957f\u56de\u6587\u4e32 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\u5176\u4e2d\u53ef\u4ee5\u6784\u6210\u7684\u6700\u957f\u56de\u6587\u4e32\u7684\u957f\u5ea6\u3002 \u54c8\u5e0c\u6620\u5c04 \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u9898\u76ee\u63cf\u8ff0 LC 290 \u5355\u8bcd\u89c4\u5f8b \u7ed9\u5b9a\u4e00\u79cd\u89c4\u5f8b pattern \u548c\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u5224\u65ad s \u662f\u5426\u9075\u5faa\u76f8\u540c\u7684\u89c4\u5f8b\u3002 LC 560 \u548c\u4e3aK\u7684\u5b50\u6570\u7ec4 \u627e\u51fa\u6570\u7ec4\u4e2d\u548c\u4e3a k \u7684\u8fde\u7eed\u5b50\u6570\u7ec4\u7684\u4e2a\u6570\u3002 LC 249 \u79fb\u4f4d\u5b57\u7b26\u4e32\u5206\u7ec4 \u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b\u4ec5\u5c0f\u5199\u5b57\u6bcd\u5b57\u7b26\u4e32\u7684\u5217\u8868\uff0c\u5c06\u8be5\u5217\u8868\u4e2d\u6240\u6709\u6ee1\u8db3 \u201c\u79fb\u4f4d\u201d \u64cd\u4f5c\u89c4\u5f8b\u7684\u7ec4\u5408\u8fdb\u884c\u5206\u7ec4\u5e76\u8fd4\u56de\u3002 LC 953 \u9a8c\u8bc1\u5916\u661f\u8bed\u8bcd\u5178 \u7ed9\u5b9a\u4e00\u4e2a\u5916\u661f\u8bcd\u5178\u7684\u987a\u5e8f\u8868\uff0c\u5224\u65ad\u4e00\u7ec4\u5355\u8bcd\u662f\u5426\u6309\u7167\u8fd9\u4e2a\u5916\u661f\u8bcd\u5178\u7684\u987a\u5e8f\u6392\u5217\u3002 LC 12 \u6574\u6570\u8f6c\u7f57\u9a6c\u6570\u5b57 \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\uff0c\u5c06\u5176\u8f6c\u6362\u4e3a\u7f57\u9a6c\u6570\u5b57\u3002","title":"Lesson11 \u5b57\u5178\u4e13\u9898"},{"location":"lesson11/Lesson11%20Python/#lesson11","text":"","title":"Lesson11 \u5b57\u5178\u4e13\u9898"},{"location":"lesson11/Lesson11%20Python/#_1","text":"1. \u5b57\u5178\u77e5\u8bc6\u4ecb\u7ecd - 1.1 \u54c8\u5e0c\u8868\u5e38\u7528\u64cd\u4f5c - 1.2 \u54c8\u5e0c\u8868\u7b80\u5355\u5b9e\u73b0 - 1.3 \u54c8\u5e0c\u51b2\u7a81\u4e0e\u6269\u5bb9 2. \u9891\u7387\u7edf\u8ba1\u4e0e\u8ba1\u6570 - 2.1 \u8bcd\u9891\u7edf\u8ba1\u4ecb\u7ecd - 2.2 \u4f8b\u9898\u8bb2\u89e3 - 2.2.1 LC 242 \u6709\u6548\u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd - 2.3 \u4e3e\u4e00\u53cd\u4e09 - 2.3.1 LC 387 \u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u552f\u4e00\u5b57\u7b26 3. \u5feb\u901f\u67e5\u627e - 3.1 \u5feb\u901f\u67e5\u627e\u4ecb\u7ecd - 3.2 \u4f8b\u9898\u8bb2\u89e3 - 3.2.1 LC 1 \u4e24\u6570\u4e4b\u548c - 3.3 \u4e3e\u4e00\u53cd\u4e09 - 3.3.1 LC 217 \u5b58\u5728\u91cd\u590d\u5143\u7d20 4. \u54c8\u5e0c\u6620\u5c04 - 4.1 \u54c8\u5e0c\u6620\u5c04\u4ecb\u7ecd - 4.2 \u4f8b\u9898\u8bb2\u89e3 - 4.2.1 LC 697 \u6570\u7ec4\u7684\u5ea6 - 4.3 \u4e3e\u4e00\u53cd\u4e09 - 4.3.1 LC 205 \u540c\u6784\u5b57\u7b26\u4e32 - 4.3.2 LC 219 \u5b58\u5728\u91cd\u590d\u5143\u7d20II 5. \u8bfe\u540e\u7ec3\u4e60","title":"\u76ee\u5f55"},{"location":"lesson11/Lesson11%20Python/#1","text":"\u5b57\u5178\u662fPython\u4e2d\u7684\u4e00\u4e2a\u5f3a\u5927\u5de5\u5177\u3002\u5b83\u4e0d\u4ec5\u80fd\u4ee5\u952e\u503c\u5bf9\u7684\u5f62\u5f0f\u9ad8\u6548\u5b58\u50a8\u6570\u636e\uff0c\u8fd8\u80fd\u5728\u8bb8\u591a\u5e38\u89c1\u7b97\u6cd5\u95ee\u9898\u4e2d\u663e\u8457\u63d0\u5347\u6027\u80fd\uff0c\u800cPython\u4e2d\u7684\u5b57\u5178\u53c8\u662f\u901a\u8fc7\u54c8\u5e0c\u8868\u6765\u5b9e\u73b0\u7684\u3002\u54c8\u5e0c\u8868\uff08hash table\uff09\uff0c\u53c8\u79f0\u6563\u5217\u8868\uff0c\u5b83\u901a\u8fc7\u5efa\u7acb\u952e key \u4e0e\u503c value \u4e4b\u95f4\u7684\u6620\u5c04\uff0c\u5b9e\u73b0\u9ad8\u6548\u7684\u5143\u7d20\u67e5\u8be2\u3002\u5177\u4f53\u800c\u8a00\uff0c\u6211\u4eec\u5411\u54c8\u5e0c\u8868\u4e2d\u8f93\u5165\u4e00\u4e2a\u952e key \uff0c\u5219\u53ef\u4ee5\u5728 O(1) \u65f6\u95f4\u5185\u83b7\u53d6\u5bf9\u5e94\u7684\u503c value \u3002 \u7ed9\u5b9a n \u4e2a\u5b66\u751f\uff0c\u6bcf\u4e2a\u5b66\u751f\u90fd\u6709\u201c\u59d3\u540d\u201d\u548c\u201c\u5b66\u53f7\u201d\u4e24\u9879\u6570\u636e\u3002\u5047\u5982\u6211\u4eec\u5e0c\u671b\u5b9e\u73b0\u201c\u8f93\u5165\u4e00\u4e2a\u5b66\u53f7\uff0c\u8fd4\u56de\u5bf9\u5e94\u7684\u59d3\u540d\u201d\u7684\u67e5\u8be2\u529f\u80fd\uff0c\u5219\u53ef\u4ee5\u91c7\u7528\u4e0b\u56fe\u6240\u793a\u7684\u54c8\u5e0c\u8868\u6765\u5b9e\u73b0\u3002","title":"1 \u5b57\u5178\u77e5\u8bc6\u4ecb\u7ecd"},{"location":"lesson11/Lesson11%20Python/#11","text":"\u54c8\u5e0c\u8868\u7684\u5e38\u89c1\u64cd\u4f5c\u5305\u62ec\uff1a\u521d\u59cb\u5316\u3001\u67e5\u8be2\u64cd\u4f5c\u3001\u6dfb\u52a0\u952e\u503c\u5bf9\u548c\u5220\u9664\u952e\u503c\u5bf9\u7b49\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a # \u521d\u59cb\u5316\u54c8\u5e0c\u8868 hmap = {} # \u6dfb\u52a0\u64cd\u4f5c # \u5728\u54c8\u5e0c\u8868\u4e2d\u6dfb\u52a0\u952e\u503c\u5bf9 (key, value) hmap[12836] = \"\u5c0f\u54c8\" hmap[15937] = \"\u5c0f\u5570\" hmap[16750] = \"\u5c0f\u7b97\" hmap[13276] = \"\u5c0f\u6cd5\" hmap[10583] = \"\u5c0f\u9e2d\" print(hmap) # \u67e5\u8be2\u64cd\u4f5c # \u5411\u54c8\u5e0c\u8868\u4e2d\u8f93\u5165\u952e key \uff0c\u5f97\u5230\u503c value name = hmap[15937] print(name) # \u5220\u9664\u64cd\u4f5c # \u5728\u54c8\u5e0c\u8868\u4e2d\u5220\u9664\u952e\u503c\u5bf9 (key, value) hmap.pop(10583) print(hmap) #\u4fee\u6539\u64cd\u4f5c hmap[10583] = \"\u5c0f\u9e45\" print(hmap) \u8f93\u51fa\uff1a {12836: '\u5c0f\u54c8', 15937: '\u5c0f\u5570', 16750: '\u5c0f\u7b97', 13276: '\u5c0f\u6cd5', 10583: '\u5c0f\u9e2d'} \u5c0f\u5570 {12836: '\u5c0f\u54c8', 15937: '\u5c0f\u5570', 16750: '\u5c0f\u7b97', 13276: '\u5c0f\u6cd5'} {12836: '\u5c0f\u54c8', 15937: '\u5c0f\u5570', 16750: '\u5c0f\u7b97', 13276: '\u5c0f\u6cd5', 10583: '\u5c0f\u9e45'} \u54c8\u5e0c\u8868\u6709\u4e09\u79cd\u5e38\u7528\u7684\u904d\u5386\u65b9\u5f0f\uff1a\u904d\u5386\u952e\u503c\u5bf9\u3001\u904d\u5386\u952e\u548c\u904d\u5386\u503c\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a # \u521d\u59cb\u5316\u54c8\u5e0c\u8868 hmap = {} # \u6dfb\u52a0\u64cd\u4f5c # \u5728\u54c8\u5e0c\u8868\u4e2d\u6dfb\u52a0\u952e\u503c\u5bf9 (key, value) hmap[12836] = \"\u5c0f\u54c8\" hmap[15937] = \"\u5c0f\u5570\" hmap[16750] = \"\u5c0f\u7b97\" hmap[13276] = \"\u5c0f\u6cd5\" hmap[10583] = \"\u5c0f\u9e2d\" # \u904d\u5386\u54c8\u5e0c\u8868 # \u904d\u5386\u952e\u503c\u5bf9 key->value for key, value in hmap.items(): print(key, \"->\", value) # \u5355\u72ec\u904d\u5386\u952e key for key in hmap.keys(): print(key) # \u5355\u72ec\u904d\u5386\u503c value for value in hmap.values(): print(value) \u8f93\u51fa\uff1a 12836 -> \u5c0f\u54c8 15937 -> \u5c0f\u5570 16750 -> \u5c0f\u7b97 13276 -> \u5c0f\u6cd5 10583 -> \u5c0f\u9e2d 12836 15937 16750 13276 10583 \u5c0f\u54c8 \u5c0f\u5570 \u5c0f\u7b97 \u5c0f\u6cd5 \u5c0f\u9e2d","title":"1.1 \u54c8\u5e0c\u8868\u5e38\u7528\u64cd\u4f5c"},{"location":"lesson11/Lesson11%20Python/#12","text":"\u6211\u4eec\u5148\u8003\u8651\u6700\u7b80\u5355\u7684\u60c5\u51b5\uff0c \u4ec5\u7528\u4e00\u4e2a\u6570\u7ec4\u6765\u5b9e\u73b0\u54c8\u5e0c\u8868 \u3002\u5728\u54c8\u5e0c\u8868\u4e2d\uff0c\u6211\u4eec\u5c06\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u7a7a\u4f4d\u79f0\u4e3a\u6876\uff08bucket\uff09\uff0c\u6bcf\u4e2a\u6876\u53ef\u5b58\u50a8\u4e00\u4e2a\u952e\u503c\u5bf9\u3002\u56e0\u6b64\uff0c\u67e5\u8be2\u64cd\u4f5c\u5c31\u662f\u627e\u5230 key \u5bf9\u5e94\u7684\u6876\uff0c\u5e76\u5728\u6876\u4e2d\u83b7\u53d6 value \u3002 \u90a3\u4e48\uff0c\u5982\u4f55\u57fa\u4e8e key \u5b9a\u4f4d\u5bf9\u5e94\u7684\u6876\u5462\uff1f\u8fd9\u662f\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\uff08hash function\uff09\u5b9e\u73b0\u7684\u3002\u54c8\u5e0c\u51fd\u6570\u7684\u4f5c\u7528\u662f\u5c06\u4e00\u4e2a\u8f83\u5927\u7684\u8f93\u5165\u7a7a\u95f4\u6620\u5c04\u5230\u4e00\u4e2a\u8f83\u5c0f\u7684\u8f93\u51fa\u7a7a\u95f4\u3002\u5728\u54c8\u5e0c\u8868\u4e2d\uff0c\u8f93\u5165\u7a7a\u95f4\u662f\u6240\u6709 key \uff0c\u8f93\u51fa\u7a7a\u95f4\u662f\u6240\u6709\u6876\uff08\u6570\u7ec4\u7d22\u5f15\uff09\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8f93\u5165\u4e00\u4e2a key \uff0c \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u5f97\u5230\u8be5 key \u5bf9\u5e94\u7684\u952e\u503c\u5bf9\u5728\u6570\u7ec4\u4e2d\u7684\u5b58\u50a8\u4f4d\u7f6e \u3002 \u8f93\u5165\u4e00\u4e2a key \uff0c\u54c8\u5e0c\u51fd\u6570\u7684\u8ba1\u7b97\u8fc7\u7a0b\u5206\u4e3a\u4ee5\u4e0b\u4e24\u6b65\u3002 \u901a\u8fc7\u67d0\u79cd\u54c8\u5e0c\u7b97\u6cd5 hash() \u8ba1\u7b97\u5f97\u5230\u54c8\u5e0c\u503c\u3002 \u5c06\u54c8\u5e0c\u503c\u5bf9\u6876\u6570\u91cf\uff08\u6570\u7ec4\u957f\u5ea6\uff09 capacity \u53d6\u6a21\uff0c\u4ece\u800c\u83b7\u53d6\u8be5 key \u5bf9\u5e94\u7684\u6570\u7ec4\u7d22\u5f15 index \u3002 index = hash(key) % capacity \u968f\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5229\u7528 index \u5728\u54c8\u5e0c\u8868\u4e2d\u8bbf\u95ee\u5bf9\u5e94\u7684\u6876\uff0c\u4ece\u800c\u83b7\u53d6 value \u3002 \u8bbe\u6570\u7ec4\u957f\u5ea6 capacity = 100 \u3001\u54c8\u5e0c\u7b97\u6cd5 hash(key) = key \uff0c\u6613\u5f97\u54c8\u5e0c\u51fd\u6570\u4e3a key % 100 \u3002\u4e0b\u56fe\u4ee5 key \u5b66\u53f7\u548c value \u59d3\u540d\u4e3a\u4f8b\uff0c\u5c55\u793a\u4e86\u54c8\u5e0c\u51fd\u6570\u7684\u5de5\u4f5c\u539f\u7406\u3002","title":"1.2 \u54c8\u5e0c\u8868\u7b80\u5355\u5b9e\u73b0"},{"location":"lesson11/Lesson11%20Python/#13","text":"\u4ece\u672c\u8d28\u4e0a\u770b\uff0c\u54c8\u5e0c\u51fd\u6570\u7684\u4f5c\u7528\u662f\u5c06\u6240\u6709 key \u6784\u6210\u7684\u8f93\u5165\u7a7a\u95f4\u6620\u5c04\u5230\u6570\u7ec4\u6240\u6709\u7d22\u5f15\u6784\u6210\u7684\u8f93\u51fa\u7a7a\u95f4\uff0c\u800c\u8f93\u5165\u7a7a\u95f4\u5f80\u5f80\u8fdc\u5927\u4e8e\u8f93\u51fa\u7a7a\u95f4\u3002\u56e0\u6b64\uff0c \u7406\u8bba\u4e0a\u4e00\u5b9a\u5b58\u5728\u201c\u591a\u4e2a\u8f93\u5165\u5bf9\u5e94\u76f8\u540c\u8f93\u51fa\u201d\u7684\u60c5\u51b5 \u3002 \u5bf9\u4e8e\u4e0a\u8ff0\u793a\u4f8b\u4e2d\u7684\u54c8\u5e0c\u51fd\u6570\uff0c\u5f53\u8f93\u5165\u7684 key \u540e\u4e24\u4f4d\u76f8\u540c\u65f6\uff0c\u54c8\u5e0c\u51fd\u6570\u7684\u8f93\u51fa\u7ed3\u679c\u4e5f\u76f8\u540c\u3002\u4f8b\u5982\uff0c\u67e5\u8be2\u5b66\u53f7\u4e3a 12836 \u548c 20336 \u7684\u4e24\u4e2a\u5b66\u751f\u65f6\uff0c\u6211\u4eec\u5f97\u5230\uff1a 12836 % 100 = 36 20336 % 100 = 36 \u5982\u4e0b\u56fe\u6240\u793a\uff0c\u4e24\u4e2a\u5b66\u53f7\u6307\u5411\u4e86\u540c\u4e00\u4e2a\u59d3\u540d\uff0c\u8fd9\u663e\u7136\u662f\u4e0d\u5bf9\u7684\u3002\u6211\u4eec\u5c06\u8fd9\u79cd\u591a\u4e2a\u8f93\u5165\u5bf9\u5e94\u540c\u4e00\u8f93\u51fa\u7684\u60c5\u51b5\u79f0\u4e3a\u54c8\u5e0c\u51b2\u7a81\uff08hash collision\uff09\u3002 \u5982\u679c\u51fa\u73b0\u54c8\u5e0c\u51b2\u7a81\u4e86\uff0c\u53ea\u662f\u4f1a\u964d\u4f4e\u67e5\u627e\u7684\u6027\u80fd\uff0c\u56e0\u4e3a\u540c\u4e00\u4e2a\u54c8\u5e0c\u503c\u5bf9\u5e94\u7684\u6876\u5f53\u4e2d\uff0c\u8fd8\u4f1a\u4ee5\u94fe\u8868\u7684\u5f62\u5f0f\u5b58\u50a8\u591a\u4e2a\u503c\uff0c\u5982\u679c\u53d1\u73b0\u54c8\u5e0c\u51b2\u7a81\uff0c\u5c31\u4f1a\u6cbf\u7740\u94fe\u8868\u67e5\u627e\uff0c\u56e0\u4e3a\u662f\u904d\u5386\uff0c\u6240\u4ee5\u6027\u80fd\u4f1a\u964d\u4f4e\u3002 \u5bb9\u6613\u60f3\u5230\uff0c\u54c8\u5e0c\u8868\u5bb9\u91cf n \u8d8a\u5927\uff0c\u591a\u4e2a key \u88ab\u5206\u914d\u5230\u540c\u4e00\u4e2a\u6876\u4e2d\u7684\u6982\u7387\u5c31\u8d8a\u4f4e\uff0c\u51b2\u7a81\u5c31\u8d8a\u5c11\u3002\u56e0\u6b64\uff0c \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6269\u5bb9\u54c8\u5e0c\u8868\u6765\u51cf\u5c11\u54c8\u5e0c\u51b2\u7a81 \u3002 \u5982\u4e0b\u56fe\u6240\u793a\uff0c\u6269\u5bb9\u524d\u952e\u503c\u5bf9 (136, A) \u548c (236, D) \u53d1\u751f\u51b2\u7a81\uff0c\u6269\u5bb9\u540e\u51b2\u7a81\u6d88\u5931\u3002 \u7c7b\u4f3c\u4e8e\u6570\u7ec4\u6269\u5bb9\uff0c\u54c8\u5e0c\u8868\u6269\u5bb9\u9700\u5c06\u6240\u6709\u952e\u503c\u5bf9\u4ece\u539f\u54c8\u5e0c\u8868\u8fc1\u79fb\u81f3\u65b0\u54c8\u5e0c\u8868\uff0c\u975e\u5e38\u8017\u65f6\uff1b\u5e76\u4e14\u7531\u4e8e\u54c8\u5e0c\u8868\u5bb9\u91cf capacity \u6539\u53d8\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u6765\u91cd\u65b0\u8ba1\u7b97\u6240\u6709\u952e\u503c\u5bf9\u7684\u5b58\u50a8\u4f4d\u7f6e\uff0c\u8fd9\u8fdb\u4e00\u6b65\u589e\u52a0\u4e86\u6269\u5bb9\u8fc7\u7a0b\u7684\u8ba1\u7b97\u5f00\u9500\u3002\u4e3a\u6b64\uff0c\u7f16\u7a0b\u8bed\u8a00\u901a\u5e38\u4f1a\u9884\u7559\u8db3\u591f\u5927\u7684\u54c8\u5e0c\u8868\u5bb9\u91cf\uff0c\u9632\u6b62\u9891\u7e41\u6269\u5bb9\u3002","title":"1.3 \u54c8\u5e0c\u51b2\u7a81\u4e0e\u6269\u5bb9"},{"location":"lesson11/Lesson11%20Python/#2","text":"","title":"2 \u9891\u7387\u7edf\u8ba1\u4e0e\u8ba1\u6570"},{"location":"lesson11/Lesson11%20Python/#21","text":"\u5b57\u5178\u6700\u5e38\u89c1\u7684\u7528\u9014\u4e4b\u4e00\u662f \u9891\u7387\u7edf\u8ba1 \uff0c\u5373\u7528\u6765\u7edf\u8ba1\u6570\u636e\u51fa\u73b0\u7684\u6b21\u6570\u6216\u9891\u7387\u3002\u5728\u9700\u8981\u5904\u7406\u5927\u91cf\u6570\u636e\u65f6\uff0c\u5b57\u5178\u53ef\u4ee5\u901a\u8fc7\u952e\u503c\u5bf9\u5feb\u901f\u8bb0\u5f55\u6bcf\u4e2a\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570\u3002\u8fd9\u6837\u7684\u64cd\u4f5c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(1)\uff0c\u56e0\u6b64\u76f8\u6bd4\u4e8e\u4f7f\u7528\u5217\u8868\u7684 O(n) \u67e5\u627e\uff0c\u6027\u80fd\u5927\u5e45\u63d0\u5347\u3002 \u8bcd\u9891\u7edf\u8ba1\u662f\u54c8\u5e0c\u6620\u5c04\u7684\u4e00\u79cd\u7279\u6b8a\u5e94\u7528\uff0c\u91cd\u70b9\u5728\u4e8e\u5c06\u4e00\u4e2a\u503c\uff08\u5982\u5b57\u7b26\u3001\u6570\u5b57\u7b49\uff09\u6620\u5c04\u5230\u5176\u51fa\u73b0\u6b21\u6570\u4e0a\u3002\u5b83\u72ed\u4e49\u5730\u5b9a\u4e49\u4e86\u952e\u503c\u5bf9\u4e2d\u7684\u201c\u503c\u201d\u662f\u8be5\u952e\u51fa\u73b0\u7684\u9891\u7387\uff0c\u5e38\u7528\u4e8e\u7edf\u8ba1\u6570\u636e\u96c6\u4e2d\u7684\u5143\u7d20\u9891\u7387\u3002\u8bcd\u9891\u7edf\u8ba1\u901a\u5e38\u7528\u4e8e\u5b57\u7b26\u7edf\u8ba1\u3001\u5143\u7d20\u9891\u7387\u7edf\u8ba1\u7b49\u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u8bcd\u9891\u7edf\u8ba1\u662f\u4e00\u79cd\u7279\u5b9a\u7684\u54c8\u5e0c\u6620\u5c04\uff0c\u72ed\u4e49\u5730\u5c06\u952e\u503c\u5bf9\u5b9a\u4e49\u4e3a\u201c\u5143\u7d20: \u51fa\u73b0\u9891\u7387\u201d\uff0c\u7528\u4e8e\u9891\u7387\u7edf\u8ba1\u95ee\u9898\u4e2d\u3002 \u4f8b\u5982\uff0c\u5728\u5b57\u7b26\u4e32\u4e2d\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u9891\u7387\u65f6\uff0c\u5b57\u5178\u7684\u952e\u662f\u5b57\u7b26\uff0c\u503c\u662f\u8be5\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\u3002","title":"2.1 \u8bcd\u9891\u7edf\u8ba1\u4ecb\u7ecd"},{"location":"lesson11/Lesson11%20Python/#_2","text":"\u67e5\u627e\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u5143\u7d20 \u5224\u65ad\u6570\u636e\u96c6\u4e2d\u662f\u5426\u5b58\u5728\u91cd\u590d\u5143\u7d20 \u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26/\u6570\u5b57/\u5143\u7d20\u7684\u9891\u7387 # \u7edf\u8ba1\u5b57\u7b26\u9891\u7387 def count_frequency(s): freq_dict = {} for char in s: if char in freq_dict: freq_dict[char] += 1 else: freq_dict[char] = 1 return freq_dict","title":"\u5e38\u89c1\u5e94\u7528\uff1a"},{"location":"lesson11/Lesson11%20Python/#22","text":"","title":"2.2 \u4f8b\u9898\u8bb2\u89e3"},{"location":"lesson11/Lesson11%20Python/#221-lc-242","text":"","title":"2.2.1 LC 242 \u6709\u6548\u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd"},{"location":"lesson11/Lesson11%20Python/#_3","text":"\u63cf\u8ff0 \uff1a\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32s\u548ct\u3002 \u8981\u6c42 \uff1a\u5224\u65adt\u548cs\u662f\u5426\u4f7f\u7528\u4e86\u76f8\u540c\u7684\u5b57\u7b26\u6784\u6210\uff08\u5b57\u7b26\u51fa\u73b0\u7684\u79cd\u7c7b\u548c\u6570\u76ee\u90fd\u76f8\u540c\uff09\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson11/Lesson11%20Python/#_4","text":"1.\u5982\u679c\u5b57\u7b26\u957f\u5ea6\u4e0d\u76f8\u540c\uff0c\u76f4\u63a5\u8fd4\u56deFalse\uff1b 2.\u4f7f\u7528\u5b57\u5178\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u6bcf\u4e2a\u5b57\u7b26\u7684\u9891\u7387\u662f\u5426\u76f8\u7b49\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson11/Lesson11%20Python/#_5","text":"\u521b\u5efa\u4e24\u4e2a\u5b57\u5178\u50a8\u5b58\u9891\u7387\u6b21\u6570\uff0c\u8fdb\u884c\u6bd4\u8f83\u3002","title":"\u63d0\u793a"},{"location":"lesson11/Lesson11%20Python/#_6","text":"class Solution: def isAnagram(self, s: str, t: str) -> bool: if len(s) != len(t): return False count_s, count_t = {}, {} for i in range(len(s)): count_s[s[i]] = count_s.get(s[i], 0) + 1 count_t[t[i]] = count_t.get(t[i], 0) + 1 return count_s == count_t","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson11/Lesson11%20Python/#23","text":"","title":"2.3 \u4e3e\u4e00\u53cd\u4e09"},{"location":"lesson11/Lesson11%20Python/#231-lc-387","text":"","title":"2.3.1 LC 387 \u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u552f\u4e00\u6570\u5b57"},{"location":"lesson11/Lesson11%20Python/#_7","text":"\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u627e\u5230 \u5b83\u7684\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u7684\u5b57\u7b26\uff0c\u5e76\u8fd4\u56de\u5b83\u7684\u7d22\u5f15 \u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de -1 \u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson11/Lesson11%20Python/#_8","text":"\u8fd9\u9053\u9898\u76ee\u8981\u6c42\u6211\u4eec\u627e\u5230\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u7684\u5b57\u7b26\u3002\u6700\u7b80\u5355\u7684\u529e\u6cd5\u662f\u4f7f\u7528 \u4e24\u6b21\u904d\u5386 \u3002\u7b2c\u4e00\u6b21\u904d\u5386\u5b57\u7b26\u4e32\u65f6\uff0c\u4f7f\u7528 \u5b57\u5178 \u8bb0\u5f55\u6bcf\u4e2a\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570\u3002\u7b2c\u4e8c\u6b21\u904d\u5386\u65f6\uff0c\u68c0\u67e5\u54ea\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\u662f1\uff0c\u7b2c\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u5b57\u7b26\u5c31\u662f\u6211\u4eec\u8981\u627e\u7684\uff0c\u8fd4\u56de\u5b83\u7684\u7d22\u5f15\u3002\u5982\u679c\u6ca1\u6709\u627e\u5230\u8fd9\u6837\u7684\u5b57\u7b26\uff0c\u5c31\u8fd4\u56de -1 \u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson11/Lesson11%20Python/#_9","text":"\u4e24\u6b21\u904d\u5386\u5b57\u7b26\u4e32\u7684\u65b9\u6cd5\u5f88\u5e38\u7528\u3002\u7b2c\u4e00\u6b21\u7528\u6765\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u7b2c\u4e8c\u6b21\u7528\u6765\u627e\u51fa\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u7684\u5b57\u7b26\u3002 \u4f7f\u7528\u5b57\u5178\u53ef\u4ee5\u65b9\u4fbf\u5730\u8bb0\u5f55\u6bcf\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\u3002","title":"\u63d0\u793a"},{"location":"lesson11/Lesson11%20Python/#_10","text":"class Solution: def firstUniqChar(self, s: str) -> int: count = dict() for i in range(len(s)): if s[i] in count: count[s[i]] += 1 # \u5982\u679c\u5b57\u7b26\u5df2\u7ecf\u5728\u5b57\u5178\u4e2d\uff0c\u9891\u7387\u52a01 else: count[s[i]] = 1 # \u5982\u679c\u5b57\u7b26\u4e0d\u5728\u5b57\u5178\u4e2d\uff0c\u521d\u59cb\u5316\u4e3a1 for k, v in count.items(): if v == 1: return s.index(k) return -1","title":"\u53c2\u8003\u793a\u4f8b"},{"location":"lesson11/Lesson11%20Python/#3","text":"","title":"3 \u5feb\u901f\u67e5\u627e"},{"location":"lesson11/Lesson11%20Python/#31","text":"\u5feb\u901f\u67e5\u627e\u662f\u901a\u8fc7\u54c8\u5e0c\u8868\u5b9e\u73b0\u7684\uff0c\u5b83\u5229\u7528\u54c8\u5e0c\u51fd\u6570\u7684\u6027\u8d28\u5728\u5e38\u6570\u65f6\u95f4\u5185\u5b8c\u6210\u67e5\u627e\u4efb\u52a1\u3002\u5176\u6838\u5fc3\u5728\u4e8e\u9ad8\u6548\u6027\u2014\u2014\u76f8\u6bd4\u4e8e\u5217\u8868\u904d\u5386\u7684 O(n)\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u5b57\u5178\u901a\u8fc7\u54c8\u5e0c\u67e5\u627e\u53ef\u4ee5\u5728 O(1) \u65f6\u95f4\u5185\u627e\u5230\u5bf9\u5e94\u7684\u503c\u3002\u5feb\u901f\u67e5\u627e\u5e76\u4e0d\u5173\u5fc3\u5177\u4f53\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u800c\u662f\u7740\u91cd\u5f3a\u8c03\u67e5\u627e\u901f\u5ea6\u7684\u63d0\u5347\u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u5feb\u901f\u67e5\u627e\u662f\u5b57\u5178\u5229\u7528\u54c8\u5e0c\u8868\u5b9e\u73b0\u7684\u9ad8\u6548\u67e5\u627e\u64cd\u4f5c\uff0c\u5f3a\u8c03\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(1)\uff0c\u9002\u7528\u4e8e\u5728\u6570\u636e\u96c6\u4e2d\u5feb\u901f\u5b9a\u4f4d\u7279\u5b9a\u5143\u7d20\u3002 \u4f8b\u5982\uff0c\u901a\u8fc7\u7ed9\u5b9a\u5b66\u751f\u5b66\u53f7\uff0c\u67e5\u627e\u5bf9\u5e94\u7684\u5b66\u751f\u59d3\u540d\u65f6\uff0c\u5b57\u5178\u901a\u8fc7\u54c8\u5e0c\u8868\u53ef\u4ee5\u5feb\u901f\u8fd4\u56de\u67e5\u8be2\u7ed3\u679c\u3002 # \u521b\u5efa\u5b57\u5178\uff0c\u5b58\u50a8\u5b66\u53f7\u548c\u59d3\u540d students = { 1001: \"Alice\", 1002: \"Bob\", 1003: \"Charlie\" } # \u6839\u636e\u5b66\u53f7\u5feb\u901f\u67e5\u627e\u5bf9\u5e94\u7684\u5b66\u751f\u59d3\u540d student_id = 1002 print(students[student_id]) # \u8f93\u51fa\uff1aBob","title":"3.1 \u5feb\u901f\u67e5\u627e\u4ecb\u7ecd"},{"location":"lesson11/Lesson11%20Python/#32","text":"","title":"3.2\u4f8b\u9898\u8bb2\u89e3"},{"location":"lesson11/Lesson11%20Python/#321-lc-1","text":"","title":"3.2.1 LC 1 \u4e24\u6570\u4e4b\u548c"},{"location":"lesson11/Lesson11%20Python/#_11","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u548c\u4e00\u4e2a\u6574\u6570\u76ee\u6807\u503c target \uff0c\u8bf7\u4f60\u5728\u8be5\u6570\u7ec4\u4e2d\u627e\u51fa \u548c\u4e3a\u76ee\u6807\u503c target \u7684\u90a3 \u4e24\u4e2a \u6574\u6570\uff0c\u5e76\u8fd4\u56de\u5b83\u4eec\u7684\u6570\u7ec4\u4e0b\u6807\u3002 \u4f60\u53ef\u4ee5\u5047\u8bbe\u6bcf\u79cd\u8f93\u5165\u53ea\u4f1a\u5bf9\u5e94\u4e00\u4e2a\u7b54\u6848\uff0c\u5e76\u4e14\u4f60\u4e0d\u80fd\u4f7f\u7528\u4e24\u6b21\u76f8\u540c\u7684\u5143\u7d20\u3002 \u4f60\u53ef\u4ee5\u6309\u4efb\u610f\u987a\u5e8f\u8fd4\u56de\u7b54\u6848\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson11/Lesson11%20Python/#_12","text":"\u904d\u5386\u6570\u7ec4\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6570nums[i]\uff1a \u67e5\u627e\u5b57\u5178\u4e2d\u4e66\u5426\u5b58\u5728target-nums[i]\uff0c\u5b58\u5728\u5219\u8f93\u51fatarget-nums[i]\u5bf9\u5e94\u7684\u4e0b\u6807\u548c\u5f53\u524d\u6570\u7ec4\u7684\u4e0b\u6807 i\u3002 \u4e0d\u5b58\u5728\u5219\u5728\u5b57\u5178\u4e2d\u5b58\u5165target-nums[i]\u7684\u4e0b\u6807i\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson11/Lesson11%20Python/#_13","text":"\u5c5e\u4e8e\u5b57\u5178\u4e2d\u7684\u5feb\u901f\u67e5\u627e\u3002","title":"\u63d0\u793a"},{"location":"lesson11/Lesson11%20Python/#_14","text":"class Solution: def twoSum(self, nums: List[int], target: int) -> List[int]: hashtable = dict() for i, num in enumerate(nums): if target - num in hashtable: return [hashtable[target - num], i] hashtable[nums[i]] = i return []","title":"\u53c2\u8003\u89e3\u7b54\uff1a"},{"location":"lesson11/Lesson11%20Python/#33","text":"","title":"3.3 \u4e3e\u4e00\u53cd\u4e09"},{"location":"lesson11/Lesson11%20Python/#331-lc-217","text":"","title":"3.3.1 LC 217 \u5b58\u5728\u91cd\u590d\u5143\u7d20"},{"location":"lesson11/Lesson11%20Python/#_15","text":"\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u3002\u5982\u679c\u4efb\u4e00\u503c\u5728\u6570\u7ec4\u4e2d\u51fa\u73b0 \u81f3\u5c11\u4e24\u6b21 \uff0c\u8fd4\u56de true \uff1b\u5982\u679c\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u4e92\u4e0d\u76f8\u540c\uff0c\u8fd4\u56de false \u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson11/Lesson11%20Python/#_16","text":"\u8fd9\u9053\u9898\u76ee\u8981\u6c42\u5224\u65ad\u4e00\u4e2a\u6570\u7ec4\u91cc\u6709\u6ca1\u6709\u91cd\u590d\u7684\u6570\u5b57\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a \u5b57\u5178 \u6765\u5b58\u50a8\u6bcf\u4e2a\u6570\u5b57\u662f\u5426\u5df2\u7ecf\u51fa\u73b0\u8fc7\u3002\u5f53\u6211\u4eec\u904d\u5386\u6570\u7ec4\u65f6\uff0c\u6bcf\u9047\u5230\u4e00\u4e2a\u6570\u5b57\uff0c\u5c31\u68c0\u67e5\u5b83\u662f\u5426\u5df2\u7ecf\u5b58\u5728\u4e8e\u5b57\u5178\u4e2d\u3002\u5982\u679c\u5df2\u7ecf\u5b58\u5728\uff0c\u8bf4\u660e\u8fd9\u4e2a\u6570\u5b57\u91cd\u590d\u4e86\uff0c\u76f4\u63a5\u8fd4\u56de true \uff1b\u5982\u679c\u6ca1\u6709\uff0c\u5c31\u628a\u8fd9\u4e2a\u6570\u5b57\u52a0\u5230\u5b57\u5178\u91cc\uff0c\u7ee7\u7eed\u68c0\u67e5\u4e0b\u4e00\u4e2a\u6570\u5b57\u3002\u904d\u5386\u5b8c\u6570\u7ec4\u540e\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\u4efb\u4f55\u91cd\u590d\u6570\u5b57\uff0c\u5c31\u8fd4\u56de false \u3002 \u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\u6bcf\u4e2a\u6570\u5b57\u53ea\u4f1a\u68c0\u67e5\u4e00\u6b21\uff0c\u5e76\u4e14\u67e5\u627e\u548c\u5b58\u50a8\u6570\u5b57\u7684\u64cd\u4f5c\u4e5f\u5f88\u5feb\uff0c\u56e0\u6b64\u6574\u4e2a\u8fc7\u7a0b\u5f88\u9ad8\u6548\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson11/Lesson11%20Python/#_17","text":"\u5b57\u5178\u53ef\u4ee5\u7528\u6765\u5feb\u901f\u5b58\u50a8\u548c\u67e5\u627e\u6570\u5b57\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u91cd\u590d\u7684\u6570\u5b57\uff0c\u5c5e\u4e8e\u9891\u7387\u7edf\u8ba1\u4e0e\u8ba1\u6570\u3002","title":"\u63d0\u793a"},{"location":"lesson11/Lesson11%20Python/#_18","text":"class Solution(object): def containsDuplicate(self, nums): seen = {} for num in nums: if num in seen: return True seen[num] = True return False","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson11/Lesson11%20Python/#4","text":"","title":"4 \u54c8\u5e0c\u6620\u5c04"},{"location":"lesson11/Lesson11%20Python/#41","text":"\u54c8\u5e0c\u6620\u5c04\u662f\u4e00\u4e2a\u66f4\u5e7f\u6cdb\u7684\u6982\u5ff5\uff0c\u8868\u793a\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u5c06\u4e00\u4e2a\u952e\uff08key\uff09\u6620\u5c04\u5230\u4e00\u4e2a\u503c\uff08value\uff09\uff0c\u8fd9\u79cd\u952e\u503c\u5bf9\u53ef\u4ee5\u7528\u4e8e\u6784\u5efa\u5404\u79cd\u5173\u7cfb\uff0c\u4e0d\u4ec5\u9650\u4e8e\u9891\u7387\u7edf\u8ba1\u6216\u5feb\u901f\u67e5\u627e\u3002\u4f8b\u5982\uff0c\u5c06\u4eba\u540d\u6620\u5c04\u5230\u5b66\u6821\uff0c\u6216\u8005\u5c06\u5b66\u6821\u6620\u5c04\u5230\u4e00\u4e2a\u5305\u542b\u6240\u6709\u5b66\u751f\u7684\u4eba\u540d\u5217\u8868\uff0c\u90fd\u662f\u54c8\u5e0c\u6620\u5c04\u7684\u5e94\u7528\u3002\u54c8\u5e0c\u6620\u5c04\u53ef\u4ee5\u652f\u6301\u4e00\u5bf9\u4e00\u3001\u4e00\u5bf9\u591a\u7b49\u590d\u6742\u7684\u5173\u7cfb\u7ed3\u6784\u3002 \u7b80\u5355\u6765\u8bf4\uff0c\u54c8\u5e0c\u6620\u5c04\u662f\u5e7f\u6cdb\u4f7f\u7528\u7684\u6620\u5c04\u673a\u5236\uff0c\u80fd\u591f\u7075\u6d3b\u5b9e\u73b0\u952e\u503c\u5bf9\u5173\u7cfb\uff0c\u5e94\u7528\u4e8e\u66f4\u591a\u590d\u6742\u573a\u666f\uff0c\u5982\u4e00\u5bf9\u4e00\u3001\u4e00\u5bf9\u591a\u7684\u6620\u5c04\u3002 \u4f8b\u5982\uff0c\u5c06\u4eba\u540d\u4e0e\u5b66\u6821\u5173\u8054\uff0c\u6216\u5c06\u5b66\u6821\u4e0e\u5176\u6240\u6709\u5b66\u751f\u5173\u8054\uff0c\u90fd\u53ef\u4ee5\u901a\u8fc7\u54c8\u5e0c\u6620\u5c04\u6765\u5b9e\u73b0\u3002 # \u4eba\u540d\u5230\u5b66\u6821\u7684\u4e00\u5bf9\u4e00\u6620\u5c04 people_to_school = { \"Alice\": \"Harvard\", \"Bob\": \"MIT\" } # \u5b66\u6821\u5230\u4eba\u540d\u5217\u8868\u7684\u4e00\u5bf9\u591a\u6620\u5c04 school_to_people = { \"Harvard\": [\"Alice\", \"Charlie\"], \"MIT\": [\"Bob\"] }","title":"4.1 \u54c8\u5e0c\u6620\u5c04\u4ecb\u7ecd"},{"location":"lesson11/Lesson11%20Python/#42","text":"","title":"4.2 \u4f8b\u9898\u8bb2\u89e3"},{"location":"lesson11/Lesson11%20Python/#421-lc-697","text":"","title":"4.2.1 LC 697 \u6570\u7ec4\u7684\u5ea6"},{"location":"lesson11/Lesson11%20Python/#_19","text":"\u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u4e14\u53ea\u5305\u542b\u975e\u8d1f\u6570\u7684\u6574\u6570\u6570\u7ec4 nums \uff0c\u6570\u7ec4\u7684 \u5ea6 \u7684\u5b9a\u4e49\u662f\u6307\u6570\u7ec4\u91cc\u4efb\u4e00\u5143\u7d20\u51fa\u73b0\u9891\u6570\u7684\u6700\u5927\u503c\u3002 \u4f60\u7684\u4efb\u52a1\u662f\u5728 nums \u4e2d\u627e\u5230\u4e0e nums \u62e5\u6709\u76f8\u540c\u5927\u5c0f\u7684\u5ea6\u7684\u6700\u77ed\u8fde\u7eed\u5b50\u6570\u7ec4\uff0c\u8fd4\u56de\u5176\u957f\u5ea6\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson11/Lesson11%20Python/#_20","text":"\u8bb0\u539f\u6570\u7ec4\u4e2d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u6570\u4e3a x\uff0c\u90a3\u4e48\u548c\u539f\u6570\u7ec4\u7684\u5ea6\u76f8\u540c\u7684\u6700\u77ed\u8fde\u7eed\u5b50\u6570\u7ec4\uff0c\u5fc5\u7136\u5305\u542b\u4e86\u539f\u6570\u7ec4\u4e2d\u7684\u5168\u90e8 x\uff0c\u4e14\u4e24\u7aef\u6070\u4e3a x \u7b2c\u4e00\u6b21\u51fa\u73b0\u548c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002 \u56e0\u4e3a\u7b26\u5408\u6761\u4ef6\u7684 x \u53ef\u80fd\u6709\u591a\u4e2a\uff0c\u5373\u591a\u4e2a\u4e0d\u540c\u7684\u6570\u5728\u539f\u6570\u7ec4\u4e2d\u51fa\u73b0\u6b21\u6570\u76f8\u540c\u3002\u6240\u4ee5\u4e3a\u4e86\u627e\u5230\u8fd9\u4e2a\u5b50\u6570\u7ec4\uff0c\u6211\u4eec\u9700\u8981\u7edf\u8ba1\u6bcf\u4e00\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u540c\u65f6\u8fd8\u9700\u8981\u7edf\u8ba1\u6bcf\u4e00\u4e2a\u6570\u7b2c\u4e00\u6b21\u51fa\u73b0\u548c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002 \u5728\u5b9e\u9645\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u54c8\u5e0c\u8868\u5b9e\u73b0\u8be5\u529f\u80fd\uff0c\u6bcf\u4e00\u4e2a\u6570\u6620\u5c04\u5230\u4e00\u4e2a\u957f\u5ea6\u4e3a 3 \u7684\u6570\u7ec4\uff0c\u6570\u7ec4\u4e2d\u7684\u4e09\u4e2a\u5143\u7d20\u5206\u522b\u4ee3\u8868\u8fd9\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\u3001\u8fd9\u4e2a\u6570\u5728\u539f\u6570\u7ec4\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u548c\u8fd9\u4e2a\u6570\u5728\u539f\u6570\u7ec4\u4e2d\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002\u5f53\u6211\u4eec\u8bb0\u5f55\u5b8c\u6240\u6709\u4fe1\u606f\u540e\uff0c\u6211\u4eec\u9700\u8981\u904d\u5386\u8be5\u54c8\u5e0c\u8868\uff0c\u627e\u5230\u5143\u7d20\u51fa\u73b0\u6b21\u6570\u6700\u591a\uff0c\u4e14\u524d\u540e\u4f4d\u7f6e\u5dee\u6700\u5c0f\u7684\u6570\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson11/Lesson11%20Python/#_21","text":"1.\u5148\u8bb0\u5f55\u6bcf\u4e2a\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u7b2c\u4e00\u6b21\u548c\u6700\u540e\u4e00\u6b21\u7684\u7d22\u5f15 2.\u627e\u5230\u6570\u7ec4\u7684\u5ea6\u548c\u6700\u77ed\u5b50\u6570\u7ec4\u7684\u957f\u5ea6","title":"\u63d0\u793a"},{"location":"lesson11/Lesson11%20Python/#_22","text":"class Solution: def findShortestSubArray(self, nums: List[int]) -> int: mp = dict() for i, num in enumerate(nums): if num in mp: mp[num][0] += 1 mp[num][2] = i else: mp[num] = [1, i, i] maxNum = minLen = 0 for count, left, right in mp.values(): if maxNum < count: maxNum = count minLen = right - left + 1 elif maxNum == count: if minLen > (span := right - left + 1): minLen = span return minLen","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson11/Lesson11%20Python/#_23","text":"\u521d\u59cb\u5316\u5b57\u5178mp \u904d\u5386\u6570\u7ec4nums\uff0c\u8bb0\u5f55\u51fa\u73b0\u6b21\u6570\uff0c\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u7d22\u5f15\uff0c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u7d22\u5f15 \u904d\u5386\u5b57\u5178 mp \u7684\u503c\uff0c\u63d0\u53d6\u6bcf\u4e2a\u6570\u5b57\u7684\u51fa\u73b0\u6b21\u6570\u3001\u7b2c\u4e00\u6b21\u548c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002 maxNum \u8bb0\u5f55\u5f53\u524d\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u503c\uff08\u5373\u6570\u7ec4\u7684\u5ea6\uff09\u3002 minLen \u8bb0\u5f55\u5177\u6709\u76f8\u540c\u5ea6\u7684\u5b50\u6570\u7ec4\u7684\u6700\u77ed\u957f\u5ea6\u3002 \u5982\u679c\u5f53\u524d\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570\u5927\u4e8e maxNum \uff0c\u66f4\u65b0 maxNum \u548c\u6700\u77ed\u5b50\u6570\u7ec4\u957f\u5ea6 minLen \u3002 \u5982\u679c\u51fa\u73b0\u6b21\u6570\u76f8\u540c\uff0c\u68c0\u67e5\u5f53\u524d\u5b50\u6570\u7ec4\u662f\u5426\u6bd4\u4e4b\u524d\u7684\u77ed\uff0c\u5e76\u66f4\u65b0 minLen \u3002","title":"\u89e3\u9898\u8fc7\u7a0b\uff1a"},{"location":"lesson11/Lesson11%20Python/#43","text":"","title":"4.3 \u4e3e\u4e00\u53cd\u4e09"},{"location":"lesson11/Lesson11%20Python/#431-lc-205","text":"","title":"4.3.1 LC 205 \u540c\u6784\u5b57\u7b26\u4e32"},{"location":"lesson11/Lesson11%20Python/#_24","text":"\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 s \u548c t \uff0c\u5224\u65ad\u5b83\u4eec\u662f\u5426\u662f\u540c\u6784\u7684\u3002 \u5982\u679c s \u4e2d\u7684\u5b57\u7b26\u53ef\u4ee5\u6309\u67d0\u79cd\u6620\u5c04\u5173\u7cfb\u66ff\u6362\u5f97\u5230 t \uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u662f\u540c\u6784\u7684\u3002 \u6bcf\u4e2a\u51fa\u73b0\u7684\u5b57\u7b26\u90fd\u5e94\u5f53\u6620\u5c04\u5230\u53e6\u4e00\u4e2a\u5b57\u7b26\uff0c\u540c\u65f6\u4e0d\u6539\u53d8\u5b57\u7b26\u7684\u987a\u5e8f\u3002\u4e0d\u540c\u5b57\u7b26\u4e0d\u80fd\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u5b57\u7b26\u4e0a\uff0c\u76f8\u540c\u5b57\u7b26\u53ea\u80fd\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u5b57\u7b26\u4e0a\uff0c\u5b57\u7b26\u53ef\u4ee5\u6620\u5c04\u5230\u81ea\u5df1\u672c\u8eab\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson11/Lesson11%20Python/#_25","text":"\u6839\u636e\u9898\u76ee\u610f\u601d\uff0c\u5b57\u7b26\u4e32 s \u548c t \u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u5b57\u7b26\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u3002 s \u7684\u6bcf\u4e2a\u5b57\u7b26\u90fd\u4e0e t \u5bf9\u5e94\u4f4d\u7f6e\u4e0a\u7684\u5b57\u7b26\u5bf9\u5e94\u3002\u53ef\u4ee5\u8003\u8651\u7528\u54c8\u5e0c\u8868\u6765\u5b58\u50a8 s[i]:t[i]\u7684\u5bf9\u5e94\u5173\u7cfb\u3002\u4f46\u662f\u8fd9\u6837\u53ea\u80fd\u4fdd\u8bc1\u5bf9\u5e94\u4f4d\u7f6e\u4e0a\u7684\u5b57\u7b26\u662f\u5bf9\u5e94\u7684\uff0c\u4f46\u4e0d\u80fd\u4fdd\u8bc1\u662f\u552f\u4e00\u5bf9\u5e94\u7684\u3002\u6240\u4ee5\u8fd8\u9700\u8981\u53e6\u4e00\u4e2a\u54c8\u5e0c\u8868\u6765\u5b58\u50a8 t[i]:s[i]\u7684\u5bf9\u5e94\u5173\u7cfb\u6765\u5224\u65ad\u662f\u5426\u662f\u552f\u4e00\u5bf9\u5e94\u7684\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson11/Lesson11%20Python/#_26","text":"\u5c5e\u4e8e\u5efa\u7acb\u6620\u5c04\uff0c\u901a\u8fc7\u521b\u5efa\u5b57\u5178\u5efa\u7acb\u5b57\u6bcd\u548c\u51fa\u73b0\u5b57\u6bcd\u7684\u6620\u5c04\u5173\u7cfb\u3002","title":"\u63d0\u793a"},{"location":"lesson11/Lesson11%20Python/#_27","text":"class Solution: def isIsomorphic(self, s: str, t: str) -> bool: s_dict = dict() t_dict = dict() for i in range(len(s)): if s[i] in s_dict and s_dict[s[i]] != t[i]: return False if t[i] in t_dict and t_dict[t[i]] != s[i]: return False s_dict[s[i]] = t[i] t_dict[t[i]] = s[i] return True","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson11/Lesson11%20Python/#432-lc-219-ii","text":"","title":"4.3.2 LC 219 \u5b58\u5728\u91cd\u590d\u5143\u7d20II"},{"location":"lesson11/Lesson11%20Python/#_28","text":"\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u548c\u4e00\u4e2a\u6574\u6570 k \uff0c\u5224\u65ad\u6570\u7ec4\u4e2d\u662f\u5426\u5b58\u5728\u4e24\u4e2a \u4e0d\u540c\u7684\u7d22\u5f15 i \u548c j \uff0c\u6ee1\u8db3 nums[i] == nums[j] \u4e14 abs(i - j) <= k \u3002\u5982\u679c\u5b58\u5728\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson11/Lesson11%20Python/#_29","text":"\u8fd9\u9053\u9898\u76ee\u662f LC 217 \u7684\u6269\u5c55\u7248\uff0c\u4e0d\u4ec5\u8981\u5224\u65ad\u662f\u5426\u6709\u91cd\u590d\u5143\u7d20\uff0c\u8fd8\u8981\u6c42\u8fd9\u4e9b\u91cd\u590d\u5143\u7d20\u7684\u7d22\u5f15\u4e4b\u5dee\u4e0d\u8d85\u8fc7\u7ed9\u5b9a\u7684\u6570\u5b57 k \u3002\u6211\u4eec\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528 \u5b57\u5178 \uff0c\u8bb0\u5f55\u6bcf\u4e2a\u6570\u5b57\u7684 \u6700\u540e\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e \u3002\u5f53\u6211\u4eec\u9047\u5230\u4e00\u4e2a\u6570\u5b57\u65f6\uff0c\u5148\u68c0\u67e5\u5b57\u5178\u4e2d\u662f\u5426\u6709\u5b83\u3002\u5982\u679c\u6709\uff0c\u8fd8\u8981\u68c0\u67e5\u5b83\u4e4b\u524d\u51fa\u73b0\u7684\u4f4d\u7f6e\u548c\u5f53\u524d\u7684\u4f4d\u7f6e\u4e4b\u5dee\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e k \u3002\u5982\u679c\u6ee1\u8db3\u6761\u4ef6\uff0c\u5c31\u8fd4\u56de true \uff1b\u5982\u679c\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u5c31\u66f4\u65b0\u5b83\u5728\u5b57\u5178\u4e2d\u7684\u4f4d\u7f6e\u3002\u904d\u5386\u5b8c\u6570\u7ec4\u540e\uff0c\u5982\u679c\u6ca1\u6709\u627e\u5230\u7b26\u5408\u6761\u4ef6\u7684\u6570\u5b57\uff0c\u8fd4\u56de false \u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson11/Lesson11%20Python/#_30","text":"\u6211\u4eec\u9700\u8981\u5728\u5b57\u5178\u4e2d\u8bb0\u5f55\u6570\u5b57\u7684\u51fa\u73b0\u4f4d\u7f6e\uff0c\u800c\u4e0d\u662f\u5355\u7eaf\u5730\u8bb0\u5f55\u5b83\u662f\u5426\u51fa\u73b0\u8fc7\u3002 \u8981\u5c0f\u5fc3\u5904\u7406\u7d22\u5f15\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u786e\u4fdd\u4e24\u4e2a\u76f8\u540c\u7684\u6570\u5b57\u4e4b\u95f4\u7684\u7d22\u5f15\u5dee\u5c0f\u4e8e\u7b49\u4e8e k \u3002","title":"\u63d0\u793a"},{"location":"lesson11/Lesson11%20Python/#_31","text":"class Solution: def containsNearbyDuplicate(self, nums: List[int], k: int) -> bool: pos = {} for i,num in enumerate(nums): if num in pos and i - pos[num] <= k: return True pos[num] = i return False","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson11/Lesson11%20Python/#5","text":"","title":"5 \u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson11/Lesson11%20Python/#_32","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u9898\u76ee\u63cf\u8ff0 LC 451 \u6839\u636e\u5b57\u7b26\u51fa\u73b0\u9891\u7387\u6392\u5e8f \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8bf7\u5c06\u5b57\u7b26\u6309\u51fa\u73b0\u9891\u7387\u6392\u5e8f\u3002 LC 692 \u524dK\u4e2a\u9ad8\u9891\u5355\u8bcd \u7ed9\u5b9a\u4e00\u4e2a\u5355\u8bcd\u5217\u8868\uff0c\u8fd4\u56de\u524d K \u4e2a\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684\u5355\u8bcd\u3002 LC 347 \u524dK\u4e2a\u9ad8\u9891\u5143\u7d20 \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\uff0c\u8fd4\u56de\u51fa\u73b0\u9891\u7387\u524d K \u9ad8\u7684\u5143\u7d20 LC 554 \u780c\u5899 \u8ba1\u7b97\u901a\u8fc7\u4e00\u5835\u5899\u7684\u5782\u76f4\u7ebf\u6bb5\u7a7f\u8fc7\u7684\u7816\u5757\u6570\u91cf\u6700\u5c11\u7684\u5730\u65b9\u3002 LC 2085 \u7edf\u8ba1\u51fa\u73b0\u8fc7\u4e00\u6b21\u7684\u516c\u5171\u5b57\u7b26\u4e32 \u8fd4\u56de\u5728\u4e24\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\u90fd\u6070\u597d\u51fa\u73b0\u4e00\u6b21\u7684\u5b57\u7b26\u4e32\u7684\u6570\u76ee\u3002","title":"\u9891\u7387\u7edf\u8ba1"},{"location":"lesson11/Lesson11%20Python/#_33","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u9898\u76ee\u63cf\u8ff0 LC 594 \u6700\u957f\u548c\u8c10\u5b50\u5e8f\u5217 \u627e\u5230\u548c\u8c10\u5b50\u5e8f\u5217\u7684\u6700\u957f\u957f\u5ea6\uff0c\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\u76f8\u5dee\u4e3a1\u3002 LC 525 \u8fde\u7eed\u6570\u7ec4 \u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6570\u7ec4\uff0c\u627e\u5230\u957f\u5ea6\u76f8\u540c\u76840\u548c1\u7684\u6700\u957f\u5b50\u6570\u7ec4\u3002 LC 49 \u5b57\u6bcd\u5f02\u4f4d\u8bcd\u5206\u7ec4 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4\uff0c\u5c06\u5b57\u6bcd\u5f02\u4f4d\u8bcd\u7ec4\u5408\u5728\u4e00\u8d77\u3002 LC 169 \u591a\u6570\u5143\u7d20 \u7ed9\u5b9a\u4e00\u4e2a\u5927\u5c0f\u4e3an\u7684\u6570\u7ec4nums\uff0c\u8fd4\u56de\u5176\u4e2d\u7684\u591a\u6570\u5143\u7d20\u3002 LC 409 \u6700\u957f\u56de\u6587\u4e32 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\u5176\u4e2d\u53ef\u4ee5\u6784\u6210\u7684\u6700\u957f\u56de\u6587\u4e32\u7684\u957f\u5ea6\u3002","title":"\u5feb\u901f\u67e5\u627e"},{"location":"lesson11/Lesson11%20Python/#_34","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u9898\u76ee\u63cf\u8ff0 LC 290 \u5355\u8bcd\u89c4\u5f8b \u7ed9\u5b9a\u4e00\u79cd\u89c4\u5f8b pattern \u548c\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u5224\u65ad s \u662f\u5426\u9075\u5faa\u76f8\u540c\u7684\u89c4\u5f8b\u3002 LC 560 \u548c\u4e3aK\u7684\u5b50\u6570\u7ec4 \u627e\u51fa\u6570\u7ec4\u4e2d\u548c\u4e3a k \u7684\u8fde\u7eed\u5b50\u6570\u7ec4\u7684\u4e2a\u6570\u3002 LC 249 \u79fb\u4f4d\u5b57\u7b26\u4e32\u5206\u7ec4 \u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b\u4ec5\u5c0f\u5199\u5b57\u6bcd\u5b57\u7b26\u4e32\u7684\u5217\u8868\uff0c\u5c06\u8be5\u5217\u8868\u4e2d\u6240\u6709\u6ee1\u8db3 \u201c\u79fb\u4f4d\u201d \u64cd\u4f5c\u89c4\u5f8b\u7684\u7ec4\u5408\u8fdb\u884c\u5206\u7ec4\u5e76\u8fd4\u56de\u3002 LC 953 \u9a8c\u8bc1\u5916\u661f\u8bed\u8bcd\u5178 \u7ed9\u5b9a\u4e00\u4e2a\u5916\u661f\u8bcd\u5178\u7684\u987a\u5e8f\u8868\uff0c\u5224\u65ad\u4e00\u7ec4\u5355\u8bcd\u662f\u5426\u6309\u7167\u8fd9\u4e2a\u5916\u661f\u8bcd\u5178\u7684\u987a\u5e8f\u6392\u5217\u3002 LC 12 \u6574\u6570\u8f6c\u7f57\u9a6c\u6570\u5b57 \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\uff0c\u5c06\u5176\u8f6c\u6362\u4e3a\u7f57\u9a6c\u6570\u5b57\u3002","title":"\u54c8\u5e0c\u6620\u5c04"},{"location":"lesson12/Lesson12%20C%2B%2B/","text":"Lesson12 \u4f4d\u8fd0\u7b97\u4e13\u9898 \u76ee\u5f55 1. \u4f4d\u8fd0\u7b97 1.1 \u57fa\u672c\u6982\u5ff5 1.2 \u5e38\u7528\u4f4d\u8fd0\u7b97\u64cd\u4f5c 1.3 \u5e94\u7528\u5b9e\u4f8b 2. \u4f8b\u9898\u8bb2\u89e3 2.1 LC231 2\u7684\u5e42 2.2 LC268 \u4e22\u5931\u7684\u6570\u5b57 3. \u4e3e\u4e00\u53cd\u4e09 3.1 LC2309 \u517c\u5177\u5927\u5c0f\u5199\u7684\u6700\u597d\u82f1\u6587\u5b57\u6bcd 3.2 LC136 \u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57 3.2 LC389 \u627e\u4e0d\u540c 4. \u8bfe\u540e\u7ec3\u4e60 1. \u4f4d\u8fd0\u7b97 \u4f4d\u8fd0\u7b97\u7b80\u4ecb \u4f4d\u8fd0\u7b97\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u7684\u4e00\u79cd\u57fa\u7840\u8fd0\u7b97\u65b9\u5f0f\uff0c\u5b83\u76f4\u63a5\u64cd\u4f5c\u4e8c\u8fdb\u5236\u6570\u7684\u4f4d\u3002\u4f4d\u8fd0\u7b97\u5728\u5904\u7406\u6574\u6570\u3001\u4f18\u5316\u7b97\u6cd5\u3001\u6570\u636e\u538b\u7f29\u7b49\u9886\u57df\u5177\u6709\u91cd\u8981\u5e94\u7528\u3002\u4ee5\u4e0b\u662f\u4f4d\u8fd0\u7b97\u7684\u57fa\u672c\u6982\u5ff5\u3001\u5e38\u7528\u64cd\u4f5c\u53ca\u5e94\u7528\u5b9e\u4f8b\u3002 1.1 \u57fa\u672c\u6982\u5ff5 \u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u6574\u6570\u901a\u5e38\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0f\u5b58\u50a8\u3002\u4f4d\u8fd0\u7b97\u5c31\u662f\u901a\u8fc7\u5bf9\u8fd9\u4e9b\u4e8c\u8fdb\u5236\u4f4d\u8fdb\u884c\u64cd\u4f5c\u6765\u5b9e\u73b0\u7279\u5b9a\u7684\u8ba1\u7b97\u3002\u4f4d\u8fd0\u7b97\u7684\u64cd\u4f5c\u7b26\u76f4\u63a5\u5bf9\u4e8c\u8fdb\u5236\u4f4d\u8fdb\u884c\u5904\u7406\uff0c\u56e0\u6b64\u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u9002\u7528\u4e8e\u9700\u8981\u9ad8\u6548\u8ba1\u7b97\u7684\u573a\u5408\u3002 1.2 \u5e38\u7528\u4f4d\u8fd0\u7b97\u64cd\u4f5c \u6309\u4f4d\u4e0e\uff08AND\uff09 & \u5bf9\u4e24\u4e2a\u6574\u6570\u7684\u6bcf\u4e00\u4f4d\u6267\u884c\u903b\u8f91\u4e0e\u8fd0\u7b97\u3002\u53ea\u6709\u5f53\u4e24\u4e2a\u76f8\u5e94\u7684\u4f4d\u90fd\u662f1\u65f6\uff0c\u7ed3\u679c\u4f4d\u624d\u4e3a1\uff0c\u5426\u5219\u4e3a0\u3002 \u793a\u4f8b \uff1a 5 & 3 = 1 5: 0101 3: 0011 -------------- 0001 (\u7ed3\u679c\u4e3a1) \u6309\u4f4d\u6216\uff08OR\uff09 | \u5bf9\u4e24\u4e2a\u6574\u6570\u7684\u6bcf\u4e00\u4f4d\u6267\u884c\u903b\u8f91\u6216\u8fd0\u7b97\u3002\u53ea\u8981\u5176\u4e2d\u4e00\u4e2a\u76f8\u5e94\u7684\u4f4d\u662f1\uff0c\u7ed3\u679c\u4f4d\u5c31\u4e3a1\u3002 \u793a\u4f8b \uff1a 5 | 3 = 7 5: 0101 3: 0011 -------------- 0111 (\u7ed3\u679c\u4e3a7) \u6309\u4f4d\u5f02\u6216\uff08XOR\uff09 ^ \u5bf9\u4e24\u4e2a\u6574\u6570\u7684\u6bcf\u4e00\u4f4d\u6267\u884c\u903b\u8f91\u5f02\u6216\u8fd0\u7b97\u3002\u5f53\u4e24\u4e2a\u76f8\u5e94\u7684\u4f4d\u4e0d\u540c\u65f6\uff0c\u7ed3\u679c\u4f4d\u4e3a1\uff1b\u76f8\u540c\u65f6\u4e3a0\u3002 \u793a\u4f8b \uff1a 5 ^ 3 = 6 5: 0101 3: 0011 -------------- 0110 (\u7ed3\u679c\u4e3a6) \u5f02\u6216\u8fd0\u7b97\u7684\u6027\u8d28 \uff1a - 1. \u4efb\u4f55\u6570\u548c 0 \u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u4e3a\u8be5\u6570\u672c\u8eab\uff1a a \u2295 0 = a \u3002 - 2. \u4efb\u4f55\u6570\u548c\u81ea\u5df1\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u4e3a 0\uff1a a \u2295 a = 0 \u3002 - 3. \u5f02\u6216\u8fd0\u7b97\u6ee1\u8db3\u4ea4\u6362\u5f8b\u548c\u7ed3\u5408\u5f8b\uff1a a \u2295 b \u2295 a = (a \u2295 a) \u2295 b = 0 \u2295 b = b \u3002 \u6309\u4f4d\u53d6\u53cd\uff08NOT\uff09 ~ \u5bf9\u6bcf\u4e00\u4f4d\u8fdb\u884c\u53d6\u53cd\u64cd\u4f5c\u30020\u53d8\u4e3a1\uff0c1\u53d8\u4e3a0\u3002 \u793a\u4f8b \uff1a ~5 = -6 5: 0101 -------------- 1010 (\u53d6\u53cd\u540e\u4e3a-6\uff0c\u4f7f\u7528\u8865\u7801\u8868\u793a\u6cd5) \u5de6\u79fb\uff08<<\uff09 \u5c06\u4e8c\u8fdb\u5236\u6570\u7684\u6240\u6709\u4f4d\u5411\u5de6\u79fb\u52a8\u6307\u5b9a\u7684\u4f4d\u6570\u3002\u5de6\u79fbn\u4f4d\u76f8\u5f53\u4e8e\u4e58\u4ee5 2^n \u3002 \u793a\u4f8b \uff1a 5 << 1 = 10 5: 0101 -------------- 1010 (\u7ed3\u679c\u4e3a10) \u53f3\u79fb\uff08>>\uff09 \u5c06\u4e8c\u8fdb\u5236\u6570\u7684\u6240\u6709\u4f4d\u5411\u53f3\u79fb\u52a8\u6307\u5b9a\u7684\u4f4d\u6570\u3002\u53f3\u79fbn\u4f4d\u76f8\u5f53\u4e8e\u6574\u9664 (2^n)\u3002 \u793a\u4f8b \uff1a 5 >> 1 = 2 5: 0101 -------------- 0010 (\u7ed3\u679c\u4e3a2) 1.3 \u5e94\u7528\u5b9e\u4f8b \u5e38\u89c1\u7684\u4f4d\u8fd0\u7b97\u6280\u5de7 \u4f4d\u8fd0\u7b97\u53ef\u4ee5\u9ad8\u6548\u5730\u5904\u7406\u8bb8\u591a\u95ee\u9898\uff0c\u7279\u522b\u662f\u5728\u9700\u8981\u64cd\u4f5c\u4e8c\u8fdb\u5236\u6570\u5b57\u65f6\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u7528\u7684\u4f4d\u8fd0\u7b97\u6280\u5de7\u53ca\u5176\u5e94\u7528\uff1a \u7c7b\u578b 1 \uff1a\u7528\u4e8e\u5224\u65ad 1. \u5224\u65ad\u5947\u5076\u6027 \u6280\u5de7 \uff1a n & 1 \u539f\u7406 \uff1a\u5982\u679c n \u662f\u5947\u6570\uff0c\u90a3\u4e48 n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u7684\u6700\u4f4e\u4f4d\u662f 1\uff1b\u5982\u679c\u662f\u5076\u6570\uff0c\u5219\u6700\u4f4e\u4f4d\u662f 0\u3002\u56e0\u6b64\uff0c n & 1 \u53ef\u4ee5\u76f4\u63a5\u5224\u65ad\u5947\u5076\u6027\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a cpp bool isOdd = (n & 1) == 1; 2. \u6e05\u9664\u6700\u4f4e\u4f4d\u7684 1 \uff08\u5224\u65ad\u662f\u5426\u662f 2 \u7684\u5e42\u6b21\u65b9\uff09 \u6280\u5de7 \uff1a n & (n - 1) \u539f\u7406 \uff1a\u5c06 n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u7684\u6700\u4f4e\u4f4d\u7684 1 \u6e05\u9664\u3002\u9002\u7528\u4e8e\u5224\u65ad\u662f\u5426\u4e3a 2 \u7684\u5e42\u6b21\u65b9\uff0c\u4ee5\u53ca\u7edf\u8ba1\u4e8c\u8fdb\u5236\u6570\u4e2d 1 \u7684\u4e2a\u6570\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a cpp n = n & (n - 1); // \u6e05\u9664\u6700\u4f4e\u4f4d\u7684 1 \u7279\u6027 \uff1a\u5982\u679c n \u662f\u6b63\u6574\u6570\u4e14\u6ee1\u8db3 n & (n - 1) == 0 \uff0c\u8fd9\u610f\u5473\u7740 n \u662f 2 \u7684\u5e42\u3002 \u89e3\u91ca\uff1a \u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u7684 2 \u7684\u5e42 \u5f53\u4e00\u4e2a\u6570\u662f 2 \u7684\u5e42\u65f6\uff0c\u5b83\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d \u53ea\u6709\u4e00\u4e2a\u4f4d\u662f 1 \uff0c\u5176\u4f59\u6240\u6709\u4f4d\u90fd\u662f 0\u3002 \u6bd4\u5982\uff1a 2 0 = 1 -> 0001 (\u4e8c\u8fdb\u5236) 2 1 = 2 -> 0010 2 2 = 4 -> 0100 2 3 = 8 -> 1000 \u8fd9\u610f\u5473\u7740 2 \u7684\u5e42\u603b\u662f\u5f62\u5982 100...0 \u7684\u5f62\u5f0f \uff0c\u5373\u4e00\u4e2a 1 \u540e\u9762\u8ddf\u7740\u82e5\u5e72\u4e2a 0 \u3002 n - 1 \u7684\u4e8c\u8fdb\u5236\u7279\u6027 \u5f53\u6211\u4eec\u4ece\u4e00\u4e2a 2 \u7684\u5e42\u51cf\u53bb 1 \u65f6\uff0c\u7ed3\u679c\u4f1a\u5c06\u539f\u6765\u552f\u4e00\u7684 1 \u53d8\u6210 0 \uff0c\u5e76\u5c06\u5176\u540e\u9762\u7684 0 \u53d8\u6210 1 \u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff1a n = 8 = 1000 n - 1 = 7 = 0111 \u53ef\u4ee5\u770b\u5230\uff0c n \u548c n - 1 \u5728\u4e8c\u8fdb\u5236\u8868\u793a\u4e0a\u662f\u5b8c\u5168\u4e92\u8865\u7684\uff0c n \u53ea\u6709\u4e00\u4e2a 1 \u540e\u9762\u5168\u662f 0 \uff0c\u800c n - 1 \u5219\u662f\u539f\u6765 1 \u53d8\u6210 0 \uff0c\u540e\u9762\u7684 0 \u5168\u90e8\u53d8\u6210 1 \u3002 \u6309\u4f4d\u4e0e\u8fd0\u7b97 ( n & (n - 1) ) \u6309\u4f4d\u4e0e\u8fd0\u7b97 \u4f1a\u5c06\u4e24\u4e2a\u6570\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u9010\u4f4d\u8fdb\u884c\u6bd4\u8f83\uff0c\u53ea\u6709\u5728\u76f8\u540c\u4f4d\u4e0a\u4e24\u4e2a\u6570\u5b57\u90fd\u662f 1 \u65f6\u7ed3\u679c\u624d\u4e3a 1 \uff0c\u5176\u4ed6\u60c5\u51b5\u4e3a 0 \u3002 \u5bf9\u4e8e 2 \u7684\u5e42 n \uff0c\u5176\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u53ea\u6709\u4e00\u4f4d\u662f 1 \uff0c\u800c n - 1 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u5728\u76f8\u540c\u4f4d\u7f6e\u662f 0 \uff0c\u5176\u5b83\u4f4d\u5219\u662f 1 \u3002\u8fd9\u6837\u4e00\u6765\uff0c n & (n - 1) \u7684\u7ed3\u679c\u4f1a\u662f 0 \uff0c\u56e0\u4e3a\u5728\u4e8c\u8fdb\u5236\u4e2d\u6ca1\u6709\u76f8\u540c\u4f4d\u7f6e\u7684 1 \u4e86\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff1a - n = 8 = 1000 - n - 1 = 7 = 0111 - 8 & 7 = 1000 & 0111 = 0000 \u4e3a\u4ec0\u4e48 n & (n - 1) \u53ef\u4ee5\u5224\u65ad 2 \u7684\u5e42\uff1f \u5982\u679c n \u662f 2 \u7684\u5e42\uff0c\u5b83\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u53ea\u6709\u4e00\u4e2a 1 \uff0c\u4e14 n - 1 \u4f1a\u4f7f\u8fd9\u4e2a 1 \u7684\u4f4d\u7f6e\u53d8\u4e3a 0 \uff0c\u540e\u9762\u7684 0 \u53d8\u4e3a 1 \u3002\u8fd9\u6837 n & (n - 1) \u7684\u7ed3\u679c\u4e00\u5b9a\u662f 0 \u3002 \u5982\u679c n \u4e0d\u662f 2 \u7684\u5e42\uff0c\u5b83\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u81f3\u5c11\u6709\u4e24\u4e2a 1 \uff0c\u90a3\u4e48 n - 1 \u5e76\u4e0d\u80fd\u5c06\u6240\u6709\u7684 1 \u90fd\u62b5\u6d88\u6389\uff0c n & (n - 1) \u7684\u7ed3\u679c\u5c31\u4e0d\u4f1a\u662f 0 \u3002 3. \u83b7\u53d6\u6700\u4f4e\u4f4d\u7684 1 \uff08\u5224\u65ad\u662f\u5426\u662f 2 \u7684\u5e42\u6b21\u65b9\uff09 n & -n \u8fd9\u4e2a\u6280\u5de7\u53ef\u4ee5\u9ad8\u6548\u5730\u63d0\u53d6\u51fa\u4e00\u4e2a\u6574\u6570\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u6700\u4f4e\u4f4d\u7684 1\u3002\u540c\u6837\uff0c\u5b83\u53ef\u4ee5\u7528\u4e8e\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u5426\u662f 2 \u7684\u5e42\u3002\u8ba9\u6211\u4eec\u901a\u8fc7\u8be6\u7ec6\u89e3\u91ca\u6765\u7406\u89e3\u5176\u539f\u7406\uff1a \u8d1f\u6570\u7684\u4e8c\u8fdb\u5236\u8868\u793a \u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u8d1f\u6570\u662f\u6309\u7167 \u8865\u7801 \u89c4\u5219\u5b58\u50a8\u7684\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u8d1f\u6570\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u662f\u6b63\u6570\u7684\u6bcf\u4e00\u4f4d\u53d6\u53cd\u540e\u52a0 1\u3002 \u6bd4\u5982\uff1a n = 12 = 1100 2 -n = -12 \uff0c\u9996\u5148\u53d6\u53cd 1100 2 -> 0011 2 \uff0c\u7136\u540e\u52a0 1\uff0c\u5f97\u5230 0100 2 n & -n \u7684\u8fd0\u7b97\u539f\u7406 \u5f53\u6211\u4eec\u6267\u884c n & -n \u65f6\uff0c\u8ba1\u7b97\u7ed3\u679c\u4f1a\u4fdd\u7559\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d \u6700\u4f4e\u4f4d\u7684 1 \uff0c\u800c\u5176\u4f59\u4f4d\u90fd\u4f1a\u53d8\u4e3a 0\u3002\u8fd9\u662f\u56e0\u4e3a\uff1a \u5bf9\u4e8e n \uff0c\u5176\u6700\u4f4e\u4f4d\u7684 1 \u4e4b\u540e\u7684\u6240\u6709\u4f4d\u90fd\u662f 0\u3002 \u5bf9\u4e8e -n \uff0c\u6700\u4f4e\u4f4d\u7684 1 \u4ee5\u53ca\u4e4b\u540e\u7684\u6240\u6709\u4f4d\u90fd\u4f1a\u53d6\u53cd\uff0c\u6700\u4f4e\u4f4d\u7684 1 \u4f9d\u7136\u5b58\u5728\uff0c\u800c\u66f4\u9ad8\u4f4d\u5219\u53d8\u4e3a 0\u3002 \u5c06 n \u548c -n \u8fdb\u884c\u6309\u4f4d\u4e0e\u8fd0\u7b97\u65f6\uff0c\u9ad8\u4f4d\u90fd\u4f1a\u53d8\u6210 0\uff0c\u53ea\u6709\u6700\u4f4e\u4f4d\u7684 1 \u4fdd\u7559\u4e0b\u6765\uff0c\u5176\u4ed6\u4f4d\u53d8\u4e3a 0\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff1a n = 12 = 1100 2 -n = -12 = 0100 2 12 & (-12) = 1100 2 & 0100 2 = 0100 2 \u7ed3\u679c\u662f\u4e8c\u8fdb\u5236\u6570\u4e2d\u6700\u4f4e\u4f4d\u7684 1\u3002 n & -n \u5224\u65ad\u662f\u5426\u4e3a 2 \u7684\u5e42 \u5982\u679c n \u662f 2 \u7684\u5e42\uff0c\u5b83\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u53ea\u6709\u4e00\u4e2a 1\uff0c\u540e\u9762\u8ddf\u7740\u82e5\u5e72\u4e2a 0\uff0c\u6bd4\u5982 n = 8 = 1000 2 \u3002 \u5bf9\u4e8e\u8fd9\u6837\u7684\u6570\uff0c n & -n \u7684\u7ed3\u679c\u5fc5\u7136\u7b49\u4e8e n \uff0c\u56e0\u4e3a\u4e8c\u8fdb\u5236\u4e2d\u53ea\u6709\u4e00\u4e2a 1\uff0c\u6309\u4f4d\u4e0e\u4e4b\u540e\u7684\u7ed3\u679c\u4e5f\u53ea\u4f1a\u662f\u8be5\u4f4d\u7684 1\uff0c\u5176\u4ed6\u4f4d\u4e3a 0\u3002 \u56e0\u6b64\uff0c\u5982\u679c n & -n == n \uff0c\u53ef\u4ee5\u786e\u5b9a n \u662f 2 \u7684\u5e42\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff1a n = 8 = 1000 2 -n = -8 = 1000 2 \uff08\u56e0\u4e3a\u6700\u9ad8\u4f4d 1 \u4e4b\u540e\u6ca1\u6709 0\uff0c\u6240\u4ee5\u6ca1\u6709\u53d8\u5316\uff09 8 & -8 = 1000 2 \u6b64\u65f6 n & -n == n \uff0c\u6240\u4ee5 8 \u662f 2 \u7684\u5e42\u3002 4. \u5224\u65ad\u4e24\u4e2a\u6570\u7684\u7b26\u53f7\u662f\u5426\u76f8\u540c \u6280\u5de7 \uff1a (a ^ b) >= 0 \u539f\u7406 \uff1a\u5982\u679c a \u548c b \u7684\u7b26\u53f7\u76f8\u540c\uff0c\u90a3\u4e48\u5b83\u4eec\u7684\u7b26\u53f7\u4f4d\u76f8\u540c\uff0c\u5f02\u6216\u7ed3\u679c\u7684\u7b26\u53f7\u4f4d\u4e3a 0\uff0c\u56e0\u6b64 (a ^ b) >= 0 \u4e3a\u771f\uff1b\u5426\u5219\u4e3a\u5047\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a cpp bool sameSign = (a ^ b) >= 0; \u539f\u7406\u89e3\u6790 \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u4e86\u89e3\u6574\u6570\u5728\u8ba1\u7b97\u673a\u4e2d\u7684\u4e8c\u8fdb\u5236\u8868\u793a\uff1a - \u7b26\u53f7\u4f4d \uff1a\u6574\u6570\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\uff0c\u6700\u9ad8\u4f4d\uff08\u6700\u5de6\u8fb9\u7684\u4e00\u4f4d\uff09\u662f \u7b26\u53f7\u4f4d \u3002\u5f53\u7b26\u53f7\u4f4d\u4e3a 0 \u65f6\uff0c\u8868\u793a\u6b63\u6570\uff1b\u5f53\u7b26\u53f7\u4f4d\u4e3a 1 \u65f6\uff0c\u8868\u793a\u8d1f\u6570\u3002 - \u4f8b\u5982\uff0c\u5bf9\u4e8e 32 \u4f4d\u6574\u6570\uff1a - \u6b63\u6570 5 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 00000000 00000000 00000000 00000101 - \u8d1f\u6570 -5 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 11111111 11111111 11111111 11111011 \u901a\u8fc7\u5f02\u6216\u5224\u65ad\u7b26\u53f7 \u6211\u4eec\u53ef\u4ee5\u5229\u7528\u5f02\u6216\u8fd0\u7b97\u6765\u5224\u65ad\u4e24\u4e2a\u6570\u7684\u7b26\u53f7\u662f\u5426\u76f8\u540c\u3002\u5173\u952e\u70b9\u5728\u4e8e\u5f02\u6216\u8fd0\u7b97\u7684\u7ed3\u679c\u7684 \u7b26\u53f7\u4f4d \u3002 \u7b26\u53f7\u4f4d\u5206\u6790 \uff1a \u5982\u679c a \u548c b \u7684\u7b26\u53f7\u76f8\u540c\uff0c\u4e8c\u8005\u7684\u7b26\u53f7\u4f4d\u4e5f\u4f1a\u76f8\u540c\uff0c\u5f02\u6216\u540e\u7684\u7ed3\u679c\u5728\u7b26\u53f7\u4f4d\u4f1a\u662f 0 \uff0c\u5373\u7ed3\u679c\u662f \u975e\u8d1f\u6570 \u3002 \u5982\u679c a \u548c b \u7684\u7b26\u53f7\u4e0d\u540c\uff0c\u4e8c\u8005\u7684\u7b26\u53f7\u4f4d\u4f1a\u4e0d\u540c\uff0c\u5f02\u6216\u540e\u7684\u7ed3\u679c\u5728\u7b26\u53f7\u4f4d\u4f1a\u662f 1 \uff0c\u5373\u7ed3\u679c\u662f \u8d1f\u6570 \u3002 \u76f8\u540c\u7b26\u53f7 \uff1a \u5047\u8bbe a = 5 \u548c b = 10 \uff0c\u5b83\u4eec\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u5982\u4e0b\uff1a a = 5 : 00000000 00000000 00000000 00000101 b = 10 : 00000000 00000000 00000000 00001010 \u5b83\u4eec\u7684\u7b26\u53f7\u4f4d\u90fd\u662f 0 \uff0c\u8868\u793a\u5b83\u4eec\u90fd\u662f\u6b63\u6570\u3002 \u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff1a a ^ b = 00000000 00000000 00000000 00000101 ^ 00000000 00000000 00000000 00001010 ------------------------------------- 00000000 00000000 00000000 00001111 \u7ed3\u679c\u7684\u7b26\u53f7\u4f4d\u4ecd\u7136\u662f 0 \uff0c\u8bf4\u660e\u7ed3\u679c\u662f\u975e\u8d1f\u6570\uff0c\u56e0\u6b64 (a ^ b) >= 0 \u4e3a\u771f\uff0c\u8868\u660e\u5b83\u4eec\u7684\u7b26\u53f7\u76f8\u540c\u3002 \u4e0d\u540c\u7b26\u53f7 \uff1a \u5047\u8bbe a = 5 \u548c b = -10 \uff0c\u5b83\u4eec\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u5982\u4e0b\uff1a a = 5 : 00000000 00000000 00000000 00000101 b = -10 : 11111111 11111111 11111111 11110110 \uff08\u8d1f\u6570\u5728\u8ba1\u7b97\u673a\u4e2d\u4f7f\u7528\u8865\u7801\u8868\u793a\uff09 \u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff1a a ^ b = 00000000 00000000 00000000 00000101 ^ 11111111 11111111 11111111 11110110 ------------------------------------- 11111111 11111111 11111111 11110011 \u7ed3\u679c\u7684\u7b26\u53f7\u4f4d\u662f 1 \uff0c\u8bf4\u660e\u7ed3\u679c\u662f\u8d1f\u6570\uff0c\u56e0\u6b64 (a ^ b) < 0 \u4e3a\u771f\uff0c\u8868\u660e\u5b83\u4eec\u7684\u7b26\u53f7\u4e0d\u540c\u3002 \u603b\u7ed3 \u5982\u679c a \u548c b \u7b26\u53f7\u76f8\u540c \uff0c\u5219 (a ^ b) \u7684\u7b26\u53f7\u4f4d\u4e3a 0 \uff0c\u5f02\u6216\u7ed3\u679c\u4e3a\u975e\u8d1f\u6570\uff0c\u6545 (a ^ b) >= 0 \u4e3a\u771f\u3002 \u5982\u679c a \u548c b \u7b26\u53f7\u4e0d\u540c \uff0c\u5219 (a ^ b) \u7684\u7b26\u53f7\u4f4d\u4e3a 1 \uff0c\u5f02\u6216\u7ed3\u679c\u4e3a\u8d1f\u6570\uff0c\u6545 (a ^ b) >= 0 \u4e3a\u5047\u3002 \u901a\u8fc7\u8fd9\u4e00\u6280\u5de7\uff0c\u6211\u4eec\u53ef\u4ee5\u9ad8\u6548\u5730\u5224\u65ad\u4e24\u4e2a\u6574\u6570\u7684\u7b26\u53f7\u662f\u5426\u76f8\u540c\uff0c\u907f\u514d\u4e86\u4f20\u7edf\u65b9\u6cd5\u4e2d\u7684\u5206\u652f\u5224\u65ad\u903b\u8f91\uff08\u5982 if-else \uff09\u3002 \u7c7b\u578b 2 \u5f02\u6216\u8fd0\u7b97\u6280\u5de7 5. \u4ea4\u6362\u4e24\u4e2a\u6570 \u6280\u5de7 \uff1a\u4f7f\u7528\u4ee5\u4e0b\u4e09\u6b65\u6765\u4ea4\u6362 a \u548c b \u7684\u503c\uff1a cpp a = a ^ b; b = a ^ b; a = a ^ b; \u5f02\u6216\u8fd0\u7b97\u7684\u539f\u7406 \u5173\u952e\u7684\u5f02\u6216\u8fd0\u7b97\u6027\u8d28\uff1a 1. a ^ a = 0 \uff1a\u4e00\u4e2a\u6570\u4e0e\u81ea\u8eab\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u662f 0\u3002 2. a ^ 0 = a \uff1a\u4e00\u4e2a\u6570\u4e0e 0 \u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u8fd8\u662f\u8be5\u6570\u672c\u8eab\u3002 3. \u4ea4\u6362\u5f8b \uff1a a ^ b = b ^ a \uff0c\u5373\u5f02\u6216\u8fd0\u7b97\u662f\u53ef\u4ea4\u6362\u7684\u3002 4. \u7ed3\u5408\u5f8b \uff1a a ^ (b ^ c) = (a ^ b) ^ c \uff0c\u5373\u5f02\u6216\u8fd0\u7b97\u662f\u53ef\u7ed3\u5408\u7684\u3002 \u57fa\u4e8e\u8fd9\u4e9b\u6027\u8d28\uff0c\u53ef\u4ee5\u901a\u8fc7\u8fde\u7eed\u4e09\u6b21\u5f02\u6216\u8fd0\u7b97\u6765\u5b8c\u6210\u4e24\u4e2a\u53d8\u91cf\u7684\u4ea4\u6362\u3002 \u8be6\u7ec6\u6b65\u9aa4 \u5047\u8bbe\u4e24\u4e2a\u6570\u4e3a a = 5 \u548c b = 3 \uff0c\u6211\u4eec\u6765\u9010\u6b65\u5206\u6790\u901a\u8fc7\u5f02\u6216\u64cd\u4f5c\u4ea4\u6362\u5b83\u4eec\u7684\u503c\u3002 \u7b2c\u4e00\u6b65 \uff1a a = a ^ b \u5bf9 a \u8fdb\u884c\u8d4b\u503c\u64cd\u4f5c\uff1a a = 5 ^ 3 5 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 101 \uff0c 3 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 011 \u3002 a = 101 ^ 011 = 110 \uff0c\u5373 a = 6 \uff08\u6b64\u65f6 a \u7684\u503c\u4e3a 6 \uff0c b \u4ecd\u7136\u662f 3 \uff09\u3002 \u7b2c\u4e8c\u6b65 \uff1a b = a ^ b \u5bf9 b \u8fdb\u884c\u8d4b\u503c\u64cd\u4f5c\uff1a b = a ^ b = 6 ^ 3 6 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 110 \uff0c 3 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 011 \u3002 b = 110 ^ 011 = 101 \uff0c\u5373 b = 5 \uff08\u6b64\u65f6 b \u7684\u503c\u53d8\u6210\u4e86 5 \uff0c a \u4ecd\u7136\u662f 6 \uff09\u3002 \u7b2c\u4e09\u6b65 \uff1a a = a ^ b \u5bf9 a \u8fdb\u884c\u8d4b\u503c\u64cd\u4f5c\uff1a a = a ^ b = 6 ^ 5 6 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 110 \uff0c 5 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 101 \u3002 a = 110 ^ 101 = 011 \uff0c\u5373 a = 3 \uff08\u6b64\u65f6 a \u7684\u503c\u53d8\u6210\u4e86 3 \uff0c\u800c b \u7684\u503c\u662f 5 \uff09\u3002 \u6700\u7ec8\u7ed3\u679c \u901a\u8fc7\u8fd9\u4e09\u6b21\u5f02\u6216\u64cd\u4f5c\uff0c a \u7684\u521d\u59cb\u503c 5 \u88ab\u8d4b\u7ed9\u4e86 b \uff0c\u800c b \u7684\u521d\u59cb\u503c 3 \u88ab\u8d4b\u7ed9\u4e86 a \u3002\u56e0\u6b64\uff0c\u4e24\u4e2a\u6570\u5728\u6ca1\u6709\u4f7f\u7528\u4e34\u65f6\u53d8\u91cf\u7684\u60c5\u51b5\u4e0b\u5b8c\u6210\u4e86\u4ea4\u6362\u3002 \u4ee3\u7801\u793a\u4f8b #include <iostream> using namespace std; int main() { int a = 5; int b = 3; cout << \"Before swap: a = \" << a << \", b = \" << b << endl; // \u901a\u8fc7\u5f02\u6216\u64cd\u4f5c\u4ea4\u6362 a \u548c b \u7684\u503c a = a ^ b; // a \u53d8\u4e3a a ^ b b = a ^ b; // b \u53d8\u4e3a a a = a ^ b; // a \u53d8\u4e3a b cout << \"After swap: a = \" << a << \", b = \" << b << endl; return 0; } \u8f93\u51fa\u7ed3\u679c\uff1a Before swap: a = 5, b = 3 After swap: a = 3, b = 5 \u7c7b\u578b 3\uff1a\u5feb\u901f\u8fd0\u7b97 6. \u5c06\u6574\u6570\u7684\u7b2c k \u4f4d\u8bbe\u4e3a 1 \u6280\u5de7 \uff1a n | (1 << k) \u539f\u7406 \uff1a\u901a\u8fc7\u5de6\u79fb\u8fd0\u7b97\u5c06 1 \u79fb\u52a8\u5230\u7b2c k \u4f4d\uff0c\u7136\u540e\u4e0e n \u8fdb\u884c\u6309\u4f4d\u6216\u8fd0\u7b97\uff0c\u5c06\u7b2c k \u4f4d\u8bbe\u4e3a 1\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a cpp n = n | (1 << k); 7. \u5c06\u6574\u6570\u7684\u7b2c k \u4f4d\u8bbe\u4e3a 0 \u6280\u5de7 \uff1a n & ~(1 << k) \u539f\u7406 \uff1a\u5148\u901a\u8fc7\u5de6\u79fb\u8fd0\u7b97\u5c06 1 \u79fb\u52a8\u5230\u7b2c k \u4f4d\uff0c\u7136\u540e\u5bf9\u5176\u53d6\u53cd\uff0c\u5c06\u5176\u4f59\u4f4d\u8bbe\u4e3a 1\uff0c k \u4f4d\u8bbe\u4e3a 0\uff0c\u518d\u4e0e n \u8fdb\u884c\u6309\u4f4d\u4e0e\u8fd0\u7b97\uff0c\u6e05\u9664\u7b2c k \u4f4d\u7684\u503c\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a cpp n = n & ~(1 << k); 8. \u83b7\u53d6\u6574\u6570\u7684\u7b2c k \u4f4d\u503c \u6280\u5de7 \uff1a (n >> k) & 1 \u539f\u7406 \uff1a\u901a\u8fc7\u53f3\u79fb\u8fd0\u7b97\u5c06\u7b2c k \u4f4d\u79fb\u5230\u6700\u4f4e\u4f4d\uff0c\u7136\u540e\u4e0e 1 \u8fdb\u884c\u6309\u4f4d\u4e0e\u8fd0\u7b97\uff0c\u5224\u65ad\u8be5\u4f4d\u662f 0 \u8fd8\u662f 1\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a cpp int bit = (n >> k) & 1; 9. \u7edf\u8ba1\u6574\u6570\u7684\u4e8c\u8fdb\u5236\u4e2d 1 \u7684\u4e2a\u6570 \u6280\u5de7 \uff1a\u4f7f\u7528 n & (n - 1) \u4e0d\u65ad\u6e05\u9664\u6700\u4f4e\u4f4d\u7684 1 \u539f\u7406 \uff1a\u6bcf\u6b21\u6267\u884c n & (n - 1) \u90fd\u4f1a\u51cf\u5c11\u4e00\u4e2a 1\uff0c\u76f4\u5230 n \u53d8\u4e3a 0\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a cpp int count = 0; while (n > 0) { n = n & (n - 1); count++; } \u4e0e\u4f20\u7edf\u65b9\u5f0f\u7684\u6bd4\u8f83 \u4f20\u7edf\u65b9\u6cd5\uff1a\u6574\u9664 2 \u4f20\u7edf\u7684\u65b9\u6cd5\u662f\u901a\u8fc7\u4e0d\u65ad\u5c06 n \u9664\u4ee5 2 \u6765\u5224\u65ad n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u7684 1 \u7684\u4e2a\u6570\u3002\u6bcf\u6b21\u9664\u4ee5 2 \u53ef\u4ee5\u83b7\u53d6\u5f53\u524d\u6700\u53f3\u8fb9\u7684\u4e00\u4f4d\uff0c\u901a\u8fc7\u5224\u65ad\u8fd9\u4f4d\u662f\u5426\u662f 1 \u6765\u589e\u52a0\u8ba1\u6570\u3002 \u793a\u4f8b\u4ee3\u7801 \uff1a cpp int count = 0; while (n > 0) { if (n % 2 == 1) { count++; } n = n / 2; } \u7f3a\u70b9 \uff1a\u8be5\u65b9\u6cd5\u9700\u8981\u904d\u5386\u4e8c\u8fdb\u5236\u8868\u793a\u7684\u6bcf\u4e00\u4f4d\uff0c\u4e5f\u5c31\u662f\u9700\u8981\u5faa\u73af\u7684\u6b21\u6570\u4e0e n \u7684\u6bd4\u7279\u6570\u6210\u6b63\u6bd4\u3002\u56e0\u6b64\uff0c\u5982\u679c n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u6709\u5f88\u591a 0\uff0c\u8fd9\u79cd\u65b9\u6cd5\u6548\u7387\u8f83\u4f4e\u3002\u5bf9\u4e8e\u4e00\u4e2a 32 \u4f4d\u7684\u6574\u6570\uff0c\u6700\u591a\u9700\u8981\u6267\u884c 32 \u6b21\u64cd\u4f5c\u3002 \u4f7f\u7528 n & (n - 1) \u7684\u65b9\u6cd5 \u901a\u8fc7 n & (n - 1) \uff0c\u6bcf\u6b21\u8fd0\u7b97\u76f4\u63a5\u5c06 n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d \u6700\u4f4e\u4f4d\u7684 1 \u6e05\u9664\u3002\u56e0\u6b64\uff0c\u6267\u884c\u7684\u6b21\u6570\u7b49\u4e8e n \u4e2d 1 \u7684\u4e2a\u6570\uff0c\u800c\u4e0d\u662f\u6bd4\u7279\u6570\u3002 \u539f\u7406 \uff1a n & (n - 1) \u7684\u4f5c\u7528\u662f\u5c06 n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u6700\u4f4e\u4f4d\u7684 1 \u53d8\u4e3a 0\u3002 \u6bcf\u6b21\u6267\u884c\u4e00\u6b21 n & (n - 1) \uff0c\u6211\u4eec\u5c31\u79fb\u9664\u4e86\u4e00\u4e2a 1\uff0c\u76f4\u5230\u6240\u6709\u7684 1 \u90fd\u88ab\u79fb\u9664\uff0c n \u53d8\u4e3a 0 \u4e3a\u6b62\u3002 10. \u5feb\u901f\u8ba1\u7b97 2 \u7684\u5e42 \u6280\u5de7 \uff1a 1 << k \u539f\u7406 \uff1a\u5de6\u79fb\u8fd0\u7b97\u76f8\u5f53\u4e8e\u5c06 1 \u5411\u5de6\u79fb\u52a8 k \u4f4d\uff0c\u8fd9\u6837\u53ef\u4ee5\u5feb\u901f\u5f97\u5230 2^k \u7684\u7ed3\u679c\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a cpp int powerOfTwo = 1 << k; // \u7b49\u540c\u4e8e 2^k 2. \u4f8b\u9898\u8bb2\u89e3 2.1 LC231 2\u7684\u5e42 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u4f60\u4e00\u4e2a\u6574\u6570 n \uff0c\u8bf7\u4f60\u5224\u65ad\u8be5\u6574\u6570\u662f\u5426\u662f 2 \u7684\u5e42\u6b21\u65b9\u3002\u5982\u679c\u662f\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002 \u5982\u679c\u5b58\u5728\u4e00\u4e2a\u6574\u6570 x \u4f7f\u5f97 n == 2^x \uff0c\u5219\u8ba4\u4e3a n \u662f 2 \u7684\u5e42\u6b21\u65b9\u3002 \u65b9\u6cd5\uff1a\u4f4d\u8fd0\u7b97 \u4e00\u4e2a\u6570 n \u662f 2 \u7684\u5e42\uff0c\u5f53\u4e14\u4ec5\u5f53 n \u662f\u6b63\u6574\u6570\uff0c\u5e76\u4e14 n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u4ec5\u5305\u542b 1 \u4e2a 1\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u4f4d\u8fd0\u7b97\u6280\u5de7\u6765\u5224\u65ad\u3002 \u4f4d\u8fd0\u7b97\u6280\u5de7 \u4f7f\u7528 n & (n - 1) \u5224\u65ad class Solution { public: bool isPowerOfTwo(int n) { return n > 0 && (n & (n - 1)) == 0; } }; \u4f7f\u7528 n & (-n) \u5224\u65ad class Solution { public: bool isPowerOfTwo(int n) { return n > 0 && (n & -n) == n; } }; 2.2 LC268 \u4e22\u5931\u7684\u6570\u5b57 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b [0, n] \u4e2d n \u4e2a\u6570\u7684\u6570\u7ec4 nums\uff0c\u627e\u51fa [0, n] \u8fd9\u4e2a\u8303\u56f4\u5185\u6ca1\u6709\u51fa\u73b0\u5728\u6570\u7ec4\u4e2d\u7684\u90a3\u4e2a\u6570\u3002 \u601d\u8def\u8bb2\u89e3 \u65b9\u6cd5\u4e00\uff1a\u4f7f\u7528 unordered_set \u89e3\u9898\u601d\u8def\uff1a \u6784\u5efa\u4e00\u4e2a unordered_set \uff1a\u5c06\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u6570\u5b57\u5b58\u5165 unordered_set \u4e2d\u3002 \u904d\u5386\u67e5\u627e\u7f3a\u5931\u7684\u6570\u5b57 \uff1a\u904d\u5386 [0, n] \uff0c\u68c0\u67e5\u54ea\u4e2a\u6570\u5b57\u4e0d\u5728 unordered_set \u4e2d\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u4e00\u65e6\u53d1\u73b0\u67d0\u4e2a\u6570\u5b57\u4e0d\u5728 unordered_set \u4e2d\uff0c\u5373\u53ef\u8fd4\u56de\u8be5\u6570\u5b57\u4f5c\u4e3a\u7f3a\u5931\u7684\u6570\u5b57\u3002 class Solution { public: int missingNumber(vector<int>& nums) { // \u521b\u5efa\u4e00\u4e2a unordered_set \u5b58\u50a8\u6570\u7ec4\u4e2d\u7684\u6570 unordered_set<int> numSet; // \u5c06\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u6570\u52a0\u5165\u5230\u96c6\u5408\u4e2d for (int num : nums) { numSet.insert(num); } // \u904d\u5386 [0, n]\uff0c\u627e\u51fa\u6ca1\u6709\u51fa\u73b0\u5728\u96c6\u5408\u4e2d\u7684\u6570 for (int i = 0; i <= nums.size(); i++) { if (numSet.find(i) == numSet.end()) { return i; // \u627e\u5230\u7f3a\u5931\u7684\u6570\u5b57 } } return -1; // \u5982\u679c\u6ca1\u6709\u627e\u5230\u7f3a\u5931\u7684\u6570\u5b57\uff0c\u8fd4\u56de -1\uff08\u5b9e\u9645\u4e0d\u4f1a\u53d1\u751f\uff09 } }; \u65b9\u6cd5\u4e8c\uff1a\u4f7f\u7528\u4f4d\u8fd0\u7b97\uff08\u5f02\u6216\uff09 \u89e3\u9898\u601d\u8def \u8fd9\u9053\u9898\u7684\u6838\u5fc3\u601d\u8def\u662f\u57fa\u4e8e \u5f02\u6216\u8fd0\u7b97 \u7684\u6027\u8d28\u6765\u627e\u5230\u4e22\u5931\u7684\u6570\u5b57\u3002\u6e29\u4e60\u5f02\u6216\u8fd0\u7b97\u7684\u4ee5\u4e0b\u51e0\u4e2a\u5173\u952e\u6027\u8d28\uff1a \u4ea4\u6362\u5f8b\u548c\u7ed3\u5408\u5f8b \uff1a a ^ b ^ c \u548c a ^ c ^ b \u7684\u7ed3\u679c\u76f8\u540c\uff0c\u5373\u987a\u5e8f\u65e0\u5173\u3002 \u76f8\u540c\u6570\u5b57\u5f02\u6216\u4e3a 0 \uff1a a ^ a = 0 \uff0c\u5373\u4e24\u4e2a\u76f8\u540c\u7684\u6570\u5b57\u5f02\u6216\u4f1a\u4e92\u76f8\u62b5\u6d88\u4e3a 0\u3002 \u4efb\u4f55\u6570\u5b57\u4e0e 0 \u5f02\u6216\u7b49\u4e8e\u81ea\u8eab \uff1a a ^ 0 = a \u3002 \u5177\u4f53\u6b65\u9aa4\uff1a \u521d\u59cb\u5316\u53d8\u91cf \uff1a missing \u53d8\u91cf\u521d\u59cb\u503c\u4e3a 0\uff0c\u7528\u4e8e\u5b58\u50a8\u5f02\u6216\u7ed3\u679c\u3002 n = nums.length \uff0c\u8868\u793a\u6570\u7ec4\u7684\u957f\u5ea6\u3002 \u7b2c\u4e00\u8f6e\u5faa\u73af (\u5f02\u6216\u6570\u7ec4\u4e2d\u7684\u5143\u7d20) \uff1a \u5728 for \u5faa\u73af\u4e2d\uff0c missing \u4f1a\u4f9d\u6b21\u4e0e\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\u3002 \u5047\u8bbe nums = [3, 0, 1] \uff0c\u8fd9\u65f6 missing \u5c06\u4f9d\u6b21\u53d8\u4e3a missing = 0 ^ 3 ^ 0 ^ 1 \u3002 \u8fd9\u4e00\u6b65\u9aa4\u7684\u76ee\u7684\u662f\u901a\u8fc7\u5f02\u6216\u5c06 nums \u6570\u7ec4\u4e2d\u7684\u6240\u6709\u5143\u7d20\u8bb0\u5f55\u5230 missing \u4e2d\u3002 \u7b2c\u4e8c\u8f6e\u5faa\u73af (\u5f02\u6216\u8303\u56f4 [0, n]) \uff1a \u7b2c\u4e8c\u4e2a for \u5faa\u73af\u4ece 0 \u5230 n \uff0c missing \u5c06\u4f9d\u6b21\u4e0e [0, n] \u8fd9\u4e2a\u8303\u56f4\u7684\u6240\u6709\u6570\u5b57\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\u3002 \u7531\u4e8e\u4e22\u5931\u7684\u6570\u5b57\u5b58\u5728\u4e8e [0, n] \u4e2d\uff0c\u4f46\u4e0d\u5728 nums \u4e2d\uff0c\u901a\u8fc7\u8fd9\u4e2a\u6b65\u9aa4\uff0c missing \u4f1a\u53d8\u4e3a\u6700\u7ec8\u7684\u4e22\u5931\u6570\u5b57\u3002 \u5229\u7528\u5f02\u6216\u6027\u8d28 \uff1a \u6700\u7ec8\uff0c\u6240\u6709\u6210\u5bf9\u51fa\u73b0\u7684\u6570\u5b57\u90fd\u4f1a\u88ab\u62b5\u6d88\u4e3a 0 \uff0c\u5269\u4e0b\u7684\u5c31\u662f\u90a3\u4e2a\u6ca1\u6709\u6210\u5bf9\u51fa\u73b0\u7684\u6570\u5b57\uff0c\u4e5f\u5c31\u662f\u4e22\u5931\u7684\u6570\u5b57\u3002 \u53c2\u8003\u89e3\u7b54 class Solution { public: int missingNumber(vector<int>& nums) { int missing = 0; int n = nums.size(); for (int i = 0; i < n; i++) { missing ^= nums[i]; } for (int i = 0; i <= n; i++) { missing ^= i; } return missing; } }; 3. \u4e3e\u4e00\u53cd\u4e09 3.1 LC2309 \u517c\u5177\u5927\u5c0f\u5199\u7684\u6700\u597d\u82f1\u6587\u5b57\u6bcd \u95ee\u9898\u63cf\u8ff0 \u7ed9\u4f60\u4e00\u4e2a\u7531\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\u7684\u5b57\u7b26\u4e32 s \uff0c\u8bf7\u4f60\u627e\u51fa\u5e76\u8fd4\u56de s \u4e2d\u7684\u6700\u597d\u82f1\u6587\u5b57\u6bcd\u3002\u8fd4\u56de\u7684\u5b57\u6bcd\u5fc5\u987b\u4e3a\u5927\u5199\u5f62\u5f0f\u3002\u5982\u679c\u4e0d\u5b58\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u5b57\u6bcd\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32\u3002 \u6700\u597d \u82f1\u6587\u5b57\u6bcd\u7684\u5927\u5199\u548c\u5c0f\u5199\u5f62\u5f0f\u5fc5\u987b\u90fd\u5728 s \u4e2d\u51fa\u73b0\u3002 \u82f1\u6587\u5b57\u6bcd b \u6bd4\u53e6\u4e00\u4e2a\u82f1\u6587\u5b57\u6bcd a \u66f4\u597d\u7684\u524d\u63d0\u662f\uff1a\u82f1\u6587\u5b57\u6bcd\u8868\u4e2d\uff0cb \u5728 a \u4e4b\u540e\u51fa\u73b0\u3002 \u8bf7\u4f7f\u7528\u5c1d\u8bd5\u54c8\u5e0c\u8868\u548c\u4f4d\u8fd0\u7b97\u4e24\u79cd\u65b9\u5f0f\u89e3\u7b54\u6b64\u9898 \u89e3\u9898\u601d\u8def1\uff1a\u54c8\u5e0c\u8868 \u4f7f\u7528 unordered_set \u4fdd\u5b58\u5b57\u7b26\u4e32 s \u4e2d\u51fa\u73b0\u8fc7\u7684\u5b57\u7b26\u3002\u904d\u5386\u5b57\u7b26\u4e32 s \uff0c\u5c06\u5f53\u524d\u5b57\u7b26 c \u52a0\u5165\u5230 unordered_set \u4e2d\u3002\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u82f1\u6587\u5b57\u6bcd\uff0c\u5982\u679c\u4e00\u4e2a\u82f1\u6587\u5b57\u6bcd\u7684\u5927\u5199\u5f62\u5f0f\u548c\u5c0f\u5199\u5f62\u5f0f\u90fd\u51fa\u73b0\u5728 unordered_set \u4e2d\uff0c\u90a3\u4e48\u76f4\u63a5\u8fd4\u56de\u8be5\u82f1\u6587\u5b57\u6bcd\u3002\u5982\u679c\u6240\u6709\u7684\u82f1\u6587\u5b57\u6bcd\u90fd\u4e0d\u7b26\u5408\u8981\u6c42\uff0c\u90a3\u4e48\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002 \u53c2\u8003\u89e3\u7b541\uff1a class Solution { public: string greatestLetter(string s) { unordered_set<char> ht; for (int i = 0; i < s.length(); i++) { char c = s[i]; ht.insert(c); } for (int i = 25; i >= 0; i--) { if (ht.count('a' + i) && ht.count('A' + i)) { return string(1, 'A' + i); } } return \"\"; } }; \u89e3\u9898\u601d\u8def2\uff1a\u4f4d\u8fd0\u7b97 \u4f7f\u7528\u4e24\u4e2a 32 \u4f4d\u6574\u6570 lower \u548c upper \u5206\u522b\u8868\u793a\u5b57\u7b26\u4e32 s \u4e2d\u5c0f\u5199\u5b57\u6bcd\u548c\u5927\u5199\u5b57\u6bcd\u7684\u51fa\u73b0\u60c5\u51b5\u3002\u901a\u8fc7\u4f4d\u8fd0\u7b97\u5224\u65ad\u67d0\u4e2a\u82f1\u6587\u5b57\u6bcd\u7684\u5927\u5c0f\u5199\u5f62\u5f0f\u662f\u5426\u90fd\u51fa\u73b0\u8fc7\u3002 1. \u904d\u5386\u5b57\u7b26\u4e32 s\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5b57\u7b26 c\uff1a - \u5982\u679c c \u662f\u5c0f\u5199\u5b57\u6bcd\uff0c\u5c06 lower \u7684\u5bf9\u5e94\u4f4d\u7f6e\u8bbe\u4e3a 1\uff1b - \u5982\u679c c \u662f\u5927\u5199\u5b57\u6bcd\uff0c\u5c06 upper \u7684\u5bf9\u5e94\u4f4d\u7f6e\u8bbe\u4e3a 1\u3002 \u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u82f1\u6587\u5b57\u6bcd\uff0c\u5982\u679c\u53d1\u73b0\u67d0\u4e2a\u82f1\u6587\u5b57\u6bcd\u7684\u5927\u5c0f\u5199\u5f62\u5f0f\u5728 lower \u548c upper \u4e2d\u90fd\u51fa\u73b0\uff0c\u90a3\u4e48\u8fd4\u56de\u8be5\u5b57\u6bcd\u3002 \u5982\u679c\u6240\u6709\u7684\u5b57\u6bcd\u90fd\u4e0d\u7b26\u5408\u8981\u6c42\uff0c\u5219\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002 \u4f4d\u8fd0\u7b97\u6280\u5de7 lower |= 1 << (c - 'a')\uff1a\u5c06\u5b57\u7b26 c \u5bf9\u5e94\u7684\u4f4d\u6570\u7f6e\u4e3a 1\uff0c\u8868\u793a\u8be5\u5b57\u7b26\u51fa\u73b0\u8fc7\u3002 upper |= 1 << (c - 'A')\uff1a\u540c\u7406\uff0c\u5c06\u5927\u5199\u5b57\u7b26 c \u5bf9\u5e94\u7684\u4f4d\u6570\u7f6e\u4e3a 1\u3002 lower & upper & (1 << i)\uff1a\u5224\u65ad\u5c0f\u5199\u548c\u5927\u5199\u7684\u7b2c i \u4f4d\u662f\u5426\u90fd\u4e3a 1\uff0c\u8868\u793a\u8be5\u5b57\u6bcd\u7684\u5927\u5c0f\u5199\u90fd\u51fa\u73b0\u8fc7\u3002 \u53c2\u8003\u89e3\u7b542\uff1a class Solution { public: string greatestLetter(tring s) { int lower = 0, upper = 0; for (int i = 0; i < s.length(); i++) { char c = s[i]; if (islower(c)) { lower |= 1 << (c - 'a'); } else { upper |= 1 << (c - 'A'); } } for (int i = 25; i >= 0; i--) { if ((lower & upper & (1 << i)) != 0) { return string(1, 'A' + i); } } return \"\"; } }; 3.2 LC136 \u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57 \u9898\u76ee\u63cf\u8ff0 \u7ed9\u4f60\u4e00\u4e2a \u975e\u7a7a \u6574\u6570\u6570\u7ec4 nums \uff0c\u9664\u4e86\u67d0\u4e2a\u5143\u7d20\u53ea\u51fa\u73b0\u4e00\u6b21\u4ee5\u5916\uff0c\u5176\u4f59\u6bcf\u4e2a\u5143\u7d20\u5747\u51fa\u73b0\u4e24\u6b21\u3002\u627e\u51fa\u90a3\u4e2a\u53ea\u51fa\u73b0\u4e86\u4e00\u6b21\u7684\u5143\u7d20\u3002 \u89e3\u9898\u601d\u8def1 \u5f02\u6216\u8fd0\u7b97 \u5bf9\u4e8e\u8fd9\u9053\u9898\u76ee\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 \u5f02\u6216\u8fd0\u7b97 \uff08 \u2295 \uff09\u3002\u5f02\u6216\u8fd0\u7b97\u6709\u4ee5\u4e0b\u4e09\u4e2a\u6027\u8d28\uff1a \u4efb\u4f55\u6570\u548c 0 \u505a\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u4ecd\u7136\u662f\u539f\u6765\u7684\u6570\uff0c\u5373 a \u2295 0 = a \u3002 \u4efb\u4f55\u6570\u548c\u5176\u81ea\u8eab\u505a\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u662f 0 \uff0c\u5373 a \u2295 a = 0 \u3002 \u5f02\u6216\u8fd0\u7b97\u6ee1\u8db3\u4ea4\u6362\u5f8b\u548c\u7ed3\u5408\u5f8b\uff0c\u5373 a \u2295 b \u2295 a = b \u2295 a \u2295 a = b \u2295 (a \u2295 a) = b \u2295 0 = b \u3002 \u5047\u8bbe\u6570\u7ec4\u4e2d\u6709 2m + 1 \u4e2a\u6570\uff0c\u5176\u4e2d\u6709 m \u4e2a\u6570\u5404\u51fa\u73b0\u4e24\u6b21\uff0c\u4e00\u4e2a\u6570\u51fa\u73b0\u4e00\u6b21\u3002\u4ee4 a 1 , a 2 , ..., a m \u4e3a\u51fa\u73b0\u4e24\u6b21\u7684 m \u4e2a\u6570\uff0ca m+1 \u4e3a\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u3002\u6839\u636e\u6027\u8d28 3\uff0c\u6570\u7ec4\u4e2d\u7684\u5168\u90e8\u5143\u7d20\u7684\u5f02\u6216\u8fd0\u7b97\u7ed3\u679c\u603b\u662f\u53ef\u4ee5\u5199\u6210\u5982\u4e0b\u5f62\u5f0f\uff1a (a 1 \u2295 a 1 ) \u2295 (a 2 \u2295 a 2 ) \u2295 \u22ef \u2295 (a m \u2295 a m ) \u2295 a m+1 \u6839\u636e\u6027\u8d28 2 \u548c\u6027\u8d28 1\uff0c\u4e0a\u5f0f\u53ef\u4ee5\u5316\u7b80\u4e3a\uff1a 0 \u2295 0 \u2295 \u22ef \u2295 0 \u2295 a m+1 = a m+1 \u56e0\u6b64\uff0c\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u5143\u7d20\u7684\u5f02\u6216\u8fd0\u7b97\u7ed3\u679c\u5c31\u662f\u6570\u7ec4\u4e2d\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u90a3\u4e2a\u6570\u3002 \u4ee3\u7801\u5b9e\u73b0 class Solution { public: int singleNumber(vector<int>& nums) { int single = 0; for (int num : nums) { single ^= num; } return single; } }; \u89e3\u9898\u601d\u8def2\uff1a unordered_set \u5229\u7528 unordered_set \u7684\u7279\u70b9\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a \u5982\u679c\u5f53\u524d\u6570\u5b57\u5df2\u7ecf\u5728\u96c6\u5408\u4e2d\uff0c\u79fb\u9664\u5b83\u3002 \u5982\u679c\u5f53\u524d\u6570\u5b57\u4e0d\u5728\u96c6\u5408\u4e2d\uff0c\u52a0\u5165\u5b83\u3002 \u6700\u7ec8\uff0c\u96c6\u5408\u4e2d\u53ea\u4f1a\u5269\u4e0b\u90a3\u4e2a\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57\u3002 \u89e3\u9898\u6b65\u9aa4 \u521b\u5efa\u4e00\u4e2a unordered_set \uff0c\u7528\u4e8e\u5b58\u50a8\u6570\u7ec4\u4e2d\u7684\u6570\u5b57\u3002 \u904d\u5386\u6570\u7ec4\uff1a \u5982\u679c\u5f53\u524d\u6570\u5b57\u5df2\u7ecf\u5b58\u5728\u4e8e\u96c6\u5408\u4e2d\uff0c\u8bf4\u660e\u5b83\u662f\u91cd\u590d\u7684\uff0c\u5c06\u5176\u4ece\u96c6\u5408\u4e2d\u79fb\u9664\u3002 \u5982\u679c\u5f53\u524d\u6570\u5b57\u4e0d\u5728\u96c6\u5408\u4e2d\uff0c\u8bf4\u660e\u5b83\u662f\u7b2c\u4e00\u6b21\u51fa\u73b0\uff0c\u5c06\u5176\u52a0\u5165\u96c6\u5408\u3002 \u904d\u5386\u7ed3\u675f\u540e\uff0c unordered_set \u4e2d\u5269\u4e0b\u7684\u552f\u4e00\u4e00\u4e2a\u5143\u7d20\u5c31\u662f\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57\u3002 \u56e0\u4e3a\u9898\u76ee\u4e2d\u7684\u6761\u4ef6\u662f\u53ea\u6709\u4e00\u4e2a\u6570\u5b57\u51fa\u73b0\u4e86\u4e00\u6b21\uff0c\u5176\u4ed6\u6570\u5b57\u90fd\u51fa\u73b0\u4e86\u4e24\u6b21\uff0c\u6700\u7ec8 unordered_set \u4e2d\u53ea\u4f1a\u5269\u4e0b\u90a3\u4e2a\u552f\u4e00\u7684\u6570\u5b57\u3002 \u4ee3\u7801\u5b9e\u73b0 class Solution { public: int singleNumber(vector<int>& nums) { unordered_set<int> set; // \u904d\u5386\u6570\u7ec4\uff0c\u5904\u7406\u6bcf\u4e2a\u6570\u5b57 for (int num : nums) { if (set.count(num)) { set.erase(num); // \u5982\u679c\u96c6\u5408\u4e2d\u5df2\u7ecf\u5b58\u5728\uff0c\u79fb\u9664 } else { set.insert(num); // \u5982\u679c\u4e0d\u5b58\u5728\uff0c\u52a0\u5165\u96c6\u5408 } } // \u5c06\u5269\u4f59\u7684\u552f\u4e00\u5143\u7d20\u8f6c\u6362\u4e3a vector \u5e76\u4f7f\u7528 [] \u8bbf\u95ee vector<int> result(set.begin(), set.end()); return result[0]; // \u8fd4\u56de vector \u4e2d\u552f\u4e00\u7684\u6570\u5b57 } }; 3.3 LC389 \u627e\u4e0d\u540c \u9898\u76ee\u63cf\u8ff0 \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 s \u548c t \uff0c\u5b83\u4eec\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u3002 \u5b57\u7b26\u4e32 t \u7531\u5b57\u7b26\u4e32 s \u968f\u673a\u91cd\u6392\uff0c\u7136\u540e\u5728\u968f\u673a\u4f4d\u7f6e\u6dfb\u52a0\u4e00\u4e2a\u5b57\u6bcd\u3002 \u8bf7\u627e\u51fa\u5728 t \u4e2d\u88ab\u6dfb\u52a0\u7684\u5b57\u6bcd\u3002 \u5c1d\u8bd5\u4f7f\u7528 LC136 \u9898\u76ee\u7684\u4f4d\u8fd0\u7b97\u6280\u5de7\u89e3\u51b3\u672c\u9898 \u601d\u8def\u8bb2\u89e3 \u9898\u76ee\u8981\u6c42\u627e\u51fa\u5728\u5b57\u7b26\u4e32 t \u4e2d\u591a\u51fa\u6765\u7684\u90a3\u4e2a\u5b57\u7b26\u3002 \u6211\u4eec\u53ef\u4ee5\u5c06\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u6240\u6709\u5b57\u7b26\u89c6\u4e3a\u4e00\u4e2a\u6574\u4f53\uff0c\u7136\u540e\u901a\u8fc7\u6c42\u51fa\u73b0\u5947\u6570\u6b21\u7684\u5b57\u7b26\u6765\u627e\u5230\u591a\u51fa\u6765\u7684\u90a3\u4e2a\u5b57\u7b26\u3002\u56e0\u4e3a\u9664\u4e86\u4e00\u4e2a\u5b57\u7b26\u4ee5\u5916\uff0c\u5176\u4ed6\u5b57\u7b26\u90fd\u4f1a\u51fa\u73b0\u5076\u6570\u6b21\uff0c\u6700\u7ec8\u7684\u5f02\u6216\u7ed3\u679c\u53ea\u4f1a\u4fdd\u7559\u90a3\u4e2a\u51fa\u73b0\u5947\u6570\u6b21\u7684\u5b57\u7b26\u3002 \u7c7b\u4f3c\u4e8e\u300cLC136. \u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57\u300d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 \u5f02\u6216\u8fd0\u7b97 \u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a \u5f02\u6216\u8fd0\u7b97\u7684\u6027\u8d28 \uff1a \u4efb\u4f55\u6570\u548c 0 \u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u4e3a\u8be5\u6570\u672c\u8eab\uff1a a \u2295 0 = a \u3002 \u4efb\u4f55\u6570\u548c\u81ea\u5df1\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u4e3a 0 \uff1a a \u2295 a = 0 \u3002 \u5f02\u6216\u8fd0\u7b97\u6ee1\u8db3\u4ea4\u6362\u5f8b\u548c\u7ed3\u5408\u5f8b\uff1a a \u2295 b \u2295 a = (a \u2295 a) \u2295 b = 0 \u2295 b = b \u3002 \u6839\u636e\u8fd9\u4e9b\u6027\u8d28\uff0c\u5982\u679c\u6211\u4eec\u5c06\u5b57\u7b26\u4e32 s \u548c t \u4e2d\u6240\u6709\u7684\u5b57\u7b26\u90fd\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u6210\u5bf9\u51fa\u73b0\u7684\u5b57\u7b26\u4f1a\u4e92\u76f8\u62b5\u6d88\uff0c\u6700\u7ec8\u5269\u4e0b\u7684\u5c31\u662f t \u4e2d\u90a3\u4e2a\u591a\u51fa\u6765\u7684\u5b57\u7b26\u3002 \u89e3\u9898\u6b65\u9aa4 \u521d\u59cb\u5316\u4e00\u4e2a\u6574\u6570 ret \uff0c\u7528\u4e8e\u4fdd\u5b58\u5f02\u6216\u7ed3\u679c\uff0c\u521d\u59cb\u503c\u4e3a 0 \u3002 \u904d\u5386\u5b57\u7b26\u4e32 s \u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\uff0c\u5c06\u5b57\u7b26\u7684 ASCII \u503c\u4e0e ret \u8fdb\u884c\u5f02\u6216\u64cd\u4f5c\u3002 \u904d\u5386\u5b57\u7b26\u4e32 t \u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\uff0c\u5c06\u5b57\u7b26\u7684 ASCII \u503c\u4e0e ret \u8fdb\u884c\u5f02\u6216\u64cd\u4f5c\u3002 \u8fd4\u56de ret \uff0c\u5b83\u5c31\u662f\u591a\u51fa\u6765\u7684\u90a3\u4e2a\u5b57\u7b26\u3002 \u4ee3\u7801\u5b9e\u73b0 class Solution { public: char findTheDifference(string s, string t) { int ret = 0; // \u5bf9\u5b57\u7b26\u4e32 s \u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u8fdb\u884c\u5f02\u6216\u64cd\u4f5c for (char c : s) { ret ^= c; } // \u5bf9\u5b57\u7b26\u4e32 t \u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u8fdb\u884c\u5f02\u6216\u64cd\u4f5c for (char c : t) { ret ^= c; } // \u8fd4\u56de\u5f02\u6216\u7ed3\u679c\uff0c\u5373\u591a\u51fa\u6765\u7684\u5b57\u7b26 return (char)ret; } }; 4. \u8bfe\u540e\u7ec3\u4e60 \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC868 \u4e8c\u8fdb\u5236\u95f4\u8ddd \u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u8ba1\u7b97\u5b83\u5728\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u4e24\u4e2a\u76f8\u90bb\u7684 1 \u4e4b\u95f4\u7684\u6700\u5927\u8ddd\u79bb\u3002 LC1486 \u6570\u7ec4\u5f02\u6216\u64cd\u4f5c \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570 n \u548c\u4e00\u4e2a\u6574\u6570 start\uff0c\u751f\u6210\u4e00\u4e2a\u6570\u7ec4\uff0c\u8fd4\u56de\u6570\u7ec4\u4e2d\u6240\u6709\u5143\u7d20\u7684\u5f02\u6216\u7ed3\u679c\u3002 LC1720 \u89e3\u7801\u5f02\u6216\u540e\u7684\u6570\u7ec4 \u7ed9\u5b9a\u4e00\u4e2a\u5f02\u6216\u540e\u7684\u6570\u7ec4\uff0c\u8fd4\u56de\u5176\u539f\u59cb\u6570\u7ec4\u3002 LC645 \u9519\u8bef\u7684\u96c6\u5408 \u96c6\u5408 S \u5305\u542b [1, n] \u4e2d\u7684 n \u4e2a\u6574\u6570\uff0c\u4f46\u5176\u4e2d\u6709\u4e00\u4e2a\u91cd\u590d\u7684\u6570\u548c\u4e00\u4e2a\u7f3a\u5931\u7684\u6570\uff0c\u627e\u51fa\u5b83\u4eec\u3002 LC693 \u4ea4\u66ff\u4f4d\u4e8c\u8fdb\u5236\u6570 \u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u5224\u65ad\u5176\u4e8c\u8fdb\u5236\u8868\u793a\u662f\u5426\u4e3a\u4ea4\u66ff\u4f4d\u3002","title":"Lesson12 \u4f4d\u8fd0\u7b97\u4e13\u9898"},{"location":"lesson12/Lesson12%20C%2B%2B/#lesson12","text":"","title":"Lesson12 \u4f4d\u8fd0\u7b97\u4e13\u9898"},{"location":"lesson12/Lesson12%20C%2B%2B/#_1","text":"1. \u4f4d\u8fd0\u7b97 1.1 \u57fa\u672c\u6982\u5ff5 1.2 \u5e38\u7528\u4f4d\u8fd0\u7b97\u64cd\u4f5c 1.3 \u5e94\u7528\u5b9e\u4f8b 2. \u4f8b\u9898\u8bb2\u89e3 2.1 LC231 2\u7684\u5e42 2.2 LC268 \u4e22\u5931\u7684\u6570\u5b57 3. \u4e3e\u4e00\u53cd\u4e09 3.1 LC2309 \u517c\u5177\u5927\u5c0f\u5199\u7684\u6700\u597d\u82f1\u6587\u5b57\u6bcd 3.2 LC136 \u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57 3.2 LC389 \u627e\u4e0d\u540c 4. \u8bfe\u540e\u7ec3\u4e60","title":"\u76ee\u5f55"},{"location":"lesson12/Lesson12%20C%2B%2B/#1","text":"","title":"1. \u4f4d\u8fd0\u7b97"},{"location":"lesson12/Lesson12%20C%2B%2B/#_2","text":"\u4f4d\u8fd0\u7b97\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u7684\u4e00\u79cd\u57fa\u7840\u8fd0\u7b97\u65b9\u5f0f\uff0c\u5b83\u76f4\u63a5\u64cd\u4f5c\u4e8c\u8fdb\u5236\u6570\u7684\u4f4d\u3002\u4f4d\u8fd0\u7b97\u5728\u5904\u7406\u6574\u6570\u3001\u4f18\u5316\u7b97\u6cd5\u3001\u6570\u636e\u538b\u7f29\u7b49\u9886\u57df\u5177\u6709\u91cd\u8981\u5e94\u7528\u3002\u4ee5\u4e0b\u662f\u4f4d\u8fd0\u7b97\u7684\u57fa\u672c\u6982\u5ff5\u3001\u5e38\u7528\u64cd\u4f5c\u53ca\u5e94\u7528\u5b9e\u4f8b\u3002","title":"\u4f4d\u8fd0\u7b97\u7b80\u4ecb"},{"location":"lesson12/Lesson12%20C%2B%2B/#11","text":"\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u6574\u6570\u901a\u5e38\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0f\u5b58\u50a8\u3002\u4f4d\u8fd0\u7b97\u5c31\u662f\u901a\u8fc7\u5bf9\u8fd9\u4e9b\u4e8c\u8fdb\u5236\u4f4d\u8fdb\u884c\u64cd\u4f5c\u6765\u5b9e\u73b0\u7279\u5b9a\u7684\u8ba1\u7b97\u3002\u4f4d\u8fd0\u7b97\u7684\u64cd\u4f5c\u7b26\u76f4\u63a5\u5bf9\u4e8c\u8fdb\u5236\u4f4d\u8fdb\u884c\u5904\u7406\uff0c\u56e0\u6b64\u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u9002\u7528\u4e8e\u9700\u8981\u9ad8\u6548\u8ba1\u7b97\u7684\u573a\u5408\u3002","title":"1.1 \u57fa\u672c\u6982\u5ff5"},{"location":"lesson12/Lesson12%20C%2B%2B/#12","text":"","title":"1.2 \u5e38\u7528\u4f4d\u8fd0\u7b97\u64cd\u4f5c"},{"location":"lesson12/Lesson12%20C%2B%2B/#and","text":"\u5bf9\u4e24\u4e2a\u6574\u6570\u7684\u6bcf\u4e00\u4f4d\u6267\u884c\u903b\u8f91\u4e0e\u8fd0\u7b97\u3002\u53ea\u6709\u5f53\u4e24\u4e2a\u76f8\u5e94\u7684\u4f4d\u90fd\u662f1\u65f6\uff0c\u7ed3\u679c\u4f4d\u624d\u4e3a1\uff0c\u5426\u5219\u4e3a0\u3002 \u793a\u4f8b \uff1a 5 & 3 = 1 5: 0101 3: 0011 -------------- 0001 (\u7ed3\u679c\u4e3a1)","title":"\u6309\u4f4d\u4e0e\uff08AND\uff09&amp;"},{"location":"lesson12/Lesson12%20C%2B%2B/#or","text":"\u5bf9\u4e24\u4e2a\u6574\u6570\u7684\u6bcf\u4e00\u4f4d\u6267\u884c\u903b\u8f91\u6216\u8fd0\u7b97\u3002\u53ea\u8981\u5176\u4e2d\u4e00\u4e2a\u76f8\u5e94\u7684\u4f4d\u662f1\uff0c\u7ed3\u679c\u4f4d\u5c31\u4e3a1\u3002 \u793a\u4f8b \uff1a 5 | 3 = 7 5: 0101 3: 0011 -------------- 0111 (\u7ed3\u679c\u4e3a7)","title":"\u6309\u4f4d\u6216\uff08OR\uff09|"},{"location":"lesson12/Lesson12%20C%2B%2B/#xor","text":"\u5bf9\u4e24\u4e2a\u6574\u6570\u7684\u6bcf\u4e00\u4f4d\u6267\u884c\u903b\u8f91\u5f02\u6216\u8fd0\u7b97\u3002\u5f53\u4e24\u4e2a\u76f8\u5e94\u7684\u4f4d\u4e0d\u540c\u65f6\uff0c\u7ed3\u679c\u4f4d\u4e3a1\uff1b\u76f8\u540c\u65f6\u4e3a0\u3002 \u793a\u4f8b \uff1a 5 ^ 3 = 6 5: 0101 3: 0011 -------------- 0110 (\u7ed3\u679c\u4e3a6) \u5f02\u6216\u8fd0\u7b97\u7684\u6027\u8d28 \uff1a - 1. \u4efb\u4f55\u6570\u548c 0 \u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u4e3a\u8be5\u6570\u672c\u8eab\uff1a a \u2295 0 = a \u3002 - 2. \u4efb\u4f55\u6570\u548c\u81ea\u5df1\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u4e3a 0\uff1a a \u2295 a = 0 \u3002 - 3. \u5f02\u6216\u8fd0\u7b97\u6ee1\u8db3\u4ea4\u6362\u5f8b\u548c\u7ed3\u5408\u5f8b\uff1a a \u2295 b \u2295 a = (a \u2295 a) \u2295 b = 0 \u2295 b = b \u3002","title":"\u6309\u4f4d\u5f02\u6216\uff08XOR\uff09^"},{"location":"lesson12/Lesson12%20C%2B%2B/#not","text":"\u5bf9\u6bcf\u4e00\u4f4d\u8fdb\u884c\u53d6\u53cd\u64cd\u4f5c\u30020\u53d8\u4e3a1\uff0c1\u53d8\u4e3a0\u3002 \u793a\u4f8b \uff1a ~5 = -6 5: 0101 -------------- 1010 (\u53d6\u53cd\u540e\u4e3a-6\uff0c\u4f7f\u7528\u8865\u7801\u8868\u793a\u6cd5)","title":"\u6309\u4f4d\u53d6\u53cd\uff08NOT\uff09~"},{"location":"lesson12/Lesson12%20C%2B%2B/#_3","text":"\u5c06\u4e8c\u8fdb\u5236\u6570\u7684\u6240\u6709\u4f4d\u5411\u5de6\u79fb\u52a8\u6307\u5b9a\u7684\u4f4d\u6570\u3002\u5de6\u79fbn\u4f4d\u76f8\u5f53\u4e8e\u4e58\u4ee5 2^n \u3002 \u793a\u4f8b \uff1a 5 << 1 = 10 5: 0101 -------------- 1010 (\u7ed3\u679c\u4e3a10)","title":"\u5de6\u79fb\uff08&lt;&lt;\uff09"},{"location":"lesson12/Lesson12%20C%2B%2B/#_4","text":"\u5c06\u4e8c\u8fdb\u5236\u6570\u7684\u6240\u6709\u4f4d\u5411\u53f3\u79fb\u52a8\u6307\u5b9a\u7684\u4f4d\u6570\u3002\u53f3\u79fbn\u4f4d\u76f8\u5f53\u4e8e\u6574\u9664 (2^n)\u3002 \u793a\u4f8b \uff1a 5 >> 1 = 2 5: 0101 -------------- 0010 (\u7ed3\u679c\u4e3a2)","title":"\u53f3\u79fb\uff08&gt;&gt;\uff09"},{"location":"lesson12/Lesson12%20C%2B%2B/#13","text":"","title":"1.3 \u5e94\u7528\u5b9e\u4f8b"},{"location":"lesson12/Lesson12%20C%2B%2B/#_5","text":"\u4f4d\u8fd0\u7b97\u53ef\u4ee5\u9ad8\u6548\u5730\u5904\u7406\u8bb8\u591a\u95ee\u9898\uff0c\u7279\u522b\u662f\u5728\u9700\u8981\u64cd\u4f5c\u4e8c\u8fdb\u5236\u6570\u5b57\u65f6\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u7528\u7684\u4f4d\u8fd0\u7b97\u6280\u5de7\u53ca\u5176\u5e94\u7528\uff1a","title":"\u5e38\u89c1\u7684\u4f4d\u8fd0\u7b97\u6280\u5de7"},{"location":"lesson12/Lesson12%20C%2B%2B/#1_1","text":"","title":"\u7c7b\u578b 1 \uff1a\u7528\u4e8e\u5224\u65ad"},{"location":"lesson12/Lesson12%20C%2B%2B/#1_2","text":"\u6280\u5de7 \uff1a n & 1 \u539f\u7406 \uff1a\u5982\u679c n \u662f\u5947\u6570\uff0c\u90a3\u4e48 n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u7684\u6700\u4f4e\u4f4d\u662f 1\uff1b\u5982\u679c\u662f\u5076\u6570\uff0c\u5219\u6700\u4f4e\u4f4d\u662f 0\u3002\u56e0\u6b64\uff0c n & 1 \u53ef\u4ee5\u76f4\u63a5\u5224\u65ad\u5947\u5076\u6027\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a cpp bool isOdd = (n & 1) == 1;","title":"1. \u5224\u65ad\u5947\u5076\u6027"},{"location":"lesson12/Lesson12%20C%2B%2B/#2-1-2","text":"\u6280\u5de7 \uff1a n & (n - 1) \u539f\u7406 \uff1a\u5c06 n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u7684\u6700\u4f4e\u4f4d\u7684 1 \u6e05\u9664\u3002\u9002\u7528\u4e8e\u5224\u65ad\u662f\u5426\u4e3a 2 \u7684\u5e42\u6b21\u65b9\uff0c\u4ee5\u53ca\u7edf\u8ba1\u4e8c\u8fdb\u5236\u6570\u4e2d 1 \u7684\u4e2a\u6570\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a cpp n = n & (n - 1); // \u6e05\u9664\u6700\u4f4e\u4f4d\u7684 1 \u7279\u6027 \uff1a\u5982\u679c n \u662f\u6b63\u6574\u6570\u4e14\u6ee1\u8db3 n & (n - 1) == 0 \uff0c\u8fd9\u610f\u5473\u7740 n \u662f 2 \u7684\u5e42\u3002","title":"2. \u6e05\u9664\u6700\u4f4e\u4f4d\u7684 1 \uff08\u5224\u65ad\u662f\u5426\u662f 2 \u7684\u5e42\u6b21\u65b9\uff09"},{"location":"lesson12/Lesson12%20C%2B%2B/#_6","text":"","title":"\u89e3\u91ca\uff1a"},{"location":"lesson12/Lesson12%20C%2B%2B/#2","text":"\u5f53\u4e00\u4e2a\u6570\u662f 2 \u7684\u5e42\u65f6\uff0c\u5b83\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d \u53ea\u6709\u4e00\u4e2a\u4f4d\u662f 1 \uff0c\u5176\u4f59\u6240\u6709\u4f4d\u90fd\u662f 0\u3002 \u6bd4\u5982\uff1a 2 0 = 1 -> 0001 (\u4e8c\u8fdb\u5236) 2 1 = 2 -> 0010 2 2 = 4 -> 0100 2 3 = 8 -> 1000 \u8fd9\u610f\u5473\u7740 2 \u7684\u5e42\u603b\u662f\u5f62\u5982 100...0 \u7684\u5f62\u5f0f \uff0c\u5373\u4e00\u4e2a 1 \u540e\u9762\u8ddf\u7740\u82e5\u5e72\u4e2a 0 \u3002","title":"\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u7684 2 \u7684\u5e42"},{"location":"lesson12/Lesson12%20C%2B%2B/#n-1","text":"\u5f53\u6211\u4eec\u4ece\u4e00\u4e2a 2 \u7684\u5e42\u51cf\u53bb 1 \u65f6\uff0c\u7ed3\u679c\u4f1a\u5c06\u539f\u6765\u552f\u4e00\u7684 1 \u53d8\u6210 0 \uff0c\u5e76\u5c06\u5176\u540e\u9762\u7684 0 \u53d8\u6210 1 \u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff1a n = 8 = 1000 n - 1 = 7 = 0111 \u53ef\u4ee5\u770b\u5230\uff0c n \u548c n - 1 \u5728\u4e8c\u8fdb\u5236\u8868\u793a\u4e0a\u662f\u5b8c\u5168\u4e92\u8865\u7684\uff0c n \u53ea\u6709\u4e00\u4e2a 1 \u540e\u9762\u5168\u662f 0 \uff0c\u800c n - 1 \u5219\u662f\u539f\u6765 1 \u53d8\u6210 0 \uff0c\u540e\u9762\u7684 0 \u5168\u90e8\u53d8\u6210 1 \u3002","title":"n - 1 \u7684\u4e8c\u8fdb\u5236\u7279\u6027"},{"location":"lesson12/Lesson12%20C%2B%2B/#n-n-1","text":"\u6309\u4f4d\u4e0e\u8fd0\u7b97 \u4f1a\u5c06\u4e24\u4e2a\u6570\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u9010\u4f4d\u8fdb\u884c\u6bd4\u8f83\uff0c\u53ea\u6709\u5728\u76f8\u540c\u4f4d\u4e0a\u4e24\u4e2a\u6570\u5b57\u90fd\u662f 1 \u65f6\u7ed3\u679c\u624d\u4e3a 1 \uff0c\u5176\u4ed6\u60c5\u51b5\u4e3a 0 \u3002 \u5bf9\u4e8e 2 \u7684\u5e42 n \uff0c\u5176\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u53ea\u6709\u4e00\u4f4d\u662f 1 \uff0c\u800c n - 1 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u5728\u76f8\u540c\u4f4d\u7f6e\u662f 0 \uff0c\u5176\u5b83\u4f4d\u5219\u662f 1 \u3002\u8fd9\u6837\u4e00\u6765\uff0c n & (n - 1) \u7684\u7ed3\u679c\u4f1a\u662f 0 \uff0c\u56e0\u4e3a\u5728\u4e8c\u8fdb\u5236\u4e2d\u6ca1\u6709\u76f8\u540c\u4f4d\u7f6e\u7684 1 \u4e86\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff1a - n = 8 = 1000 - n - 1 = 7 = 0111 - 8 & 7 = 1000 & 0111 = 0000","title":"\u6309\u4f4d\u4e0e\u8fd0\u7b97 (n &amp; (n - 1))"},{"location":"lesson12/Lesson12%20C%2B%2B/#n-n-1-2","text":"\u5982\u679c n \u662f 2 \u7684\u5e42\uff0c\u5b83\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u53ea\u6709\u4e00\u4e2a 1 \uff0c\u4e14 n - 1 \u4f1a\u4f7f\u8fd9\u4e2a 1 \u7684\u4f4d\u7f6e\u53d8\u4e3a 0 \uff0c\u540e\u9762\u7684 0 \u53d8\u4e3a 1 \u3002\u8fd9\u6837 n & (n - 1) \u7684\u7ed3\u679c\u4e00\u5b9a\u662f 0 \u3002 \u5982\u679c n \u4e0d\u662f 2 \u7684\u5e42\uff0c\u5b83\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u81f3\u5c11\u6709\u4e24\u4e2a 1 \uff0c\u90a3\u4e48 n - 1 \u5e76\u4e0d\u80fd\u5c06\u6240\u6709\u7684 1 \u90fd\u62b5\u6d88\u6389\uff0c n & (n - 1) \u7684\u7ed3\u679c\u5c31\u4e0d\u4f1a\u662f 0 \u3002","title":"\u4e3a\u4ec0\u4e48 n &amp; (n - 1) \u53ef\u4ee5\u5224\u65ad 2 \u7684\u5e42\uff1f"},{"location":"lesson12/Lesson12%20C%2B%2B/#3-1-2","text":"n & -n \u8fd9\u4e2a\u6280\u5de7\u53ef\u4ee5\u9ad8\u6548\u5730\u63d0\u53d6\u51fa\u4e00\u4e2a\u6574\u6570\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u6700\u4f4e\u4f4d\u7684 1\u3002\u540c\u6837\uff0c\u5b83\u53ef\u4ee5\u7528\u4e8e\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u5426\u662f 2 \u7684\u5e42\u3002\u8ba9\u6211\u4eec\u901a\u8fc7\u8be6\u7ec6\u89e3\u91ca\u6765\u7406\u89e3\u5176\u539f\u7406\uff1a","title":"3. \u83b7\u53d6\u6700\u4f4e\u4f4d\u7684 1\uff08\u5224\u65ad\u662f\u5426\u662f 2 \u7684\u5e42\u6b21\u65b9\uff09"},{"location":"lesson12/Lesson12%20C%2B%2B/#_7","text":"\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u8d1f\u6570\u662f\u6309\u7167 \u8865\u7801 \u89c4\u5219\u5b58\u50a8\u7684\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u8d1f\u6570\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u662f\u6b63\u6570\u7684\u6bcf\u4e00\u4f4d\u53d6\u53cd\u540e\u52a0 1\u3002 \u6bd4\u5982\uff1a n = 12 = 1100 2 -n = -12 \uff0c\u9996\u5148\u53d6\u53cd 1100 2 -> 0011 2 \uff0c\u7136\u540e\u52a0 1\uff0c\u5f97\u5230 0100 2","title":"\u8d1f\u6570\u7684\u4e8c\u8fdb\u5236\u8868\u793a"},{"location":"lesson12/Lesson12%20C%2B%2B/#n-n","text":"\u5f53\u6211\u4eec\u6267\u884c n & -n \u65f6\uff0c\u8ba1\u7b97\u7ed3\u679c\u4f1a\u4fdd\u7559\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d \u6700\u4f4e\u4f4d\u7684 1 \uff0c\u800c\u5176\u4f59\u4f4d\u90fd\u4f1a\u53d8\u4e3a 0\u3002\u8fd9\u662f\u56e0\u4e3a\uff1a \u5bf9\u4e8e n \uff0c\u5176\u6700\u4f4e\u4f4d\u7684 1 \u4e4b\u540e\u7684\u6240\u6709\u4f4d\u90fd\u662f 0\u3002 \u5bf9\u4e8e -n \uff0c\u6700\u4f4e\u4f4d\u7684 1 \u4ee5\u53ca\u4e4b\u540e\u7684\u6240\u6709\u4f4d\u90fd\u4f1a\u53d6\u53cd\uff0c\u6700\u4f4e\u4f4d\u7684 1 \u4f9d\u7136\u5b58\u5728\uff0c\u800c\u66f4\u9ad8\u4f4d\u5219\u53d8\u4e3a 0\u3002 \u5c06 n \u548c -n \u8fdb\u884c\u6309\u4f4d\u4e0e\u8fd0\u7b97\u65f6\uff0c\u9ad8\u4f4d\u90fd\u4f1a\u53d8\u6210 0\uff0c\u53ea\u6709\u6700\u4f4e\u4f4d\u7684 1 \u4fdd\u7559\u4e0b\u6765\uff0c\u5176\u4ed6\u4f4d\u53d8\u4e3a 0\u3002","title":"n &amp; -n \u7684\u8fd0\u7b97\u539f\u7406"},{"location":"lesson12/Lesson12%20C%2B%2B/#_8","text":"n = 12 = 1100 2 -n = -12 = 0100 2 12 & (-12) = 1100 2 & 0100 2 = 0100 2 \u7ed3\u679c\u662f\u4e8c\u8fdb\u5236\u6570\u4e2d\u6700\u4f4e\u4f4d\u7684 1\u3002","title":"\u4e3e\u4e2a\u4f8b\u5b50\uff1a"},{"location":"lesson12/Lesson12%20C%2B%2B/#n-n-2","text":"\u5982\u679c n \u662f 2 \u7684\u5e42\uff0c\u5b83\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u53ea\u6709\u4e00\u4e2a 1\uff0c\u540e\u9762\u8ddf\u7740\u82e5\u5e72\u4e2a 0\uff0c\u6bd4\u5982 n = 8 = 1000 2 \u3002 \u5bf9\u4e8e\u8fd9\u6837\u7684\u6570\uff0c n & -n \u7684\u7ed3\u679c\u5fc5\u7136\u7b49\u4e8e n \uff0c\u56e0\u4e3a\u4e8c\u8fdb\u5236\u4e2d\u53ea\u6709\u4e00\u4e2a 1\uff0c\u6309\u4f4d\u4e0e\u4e4b\u540e\u7684\u7ed3\u679c\u4e5f\u53ea\u4f1a\u662f\u8be5\u4f4d\u7684 1\uff0c\u5176\u4ed6\u4f4d\u4e3a 0\u3002 \u56e0\u6b64\uff0c\u5982\u679c n & -n == n \uff0c\u53ef\u4ee5\u786e\u5b9a n \u662f 2 \u7684\u5e42\u3002","title":"n &amp; -n \u5224\u65ad\u662f\u5426\u4e3a 2 \u7684\u5e42"},{"location":"lesson12/Lesson12%20C%2B%2B/#_9","text":"n = 8 = 1000 2 -n = -8 = 1000 2 \uff08\u56e0\u4e3a\u6700\u9ad8\u4f4d 1 \u4e4b\u540e\u6ca1\u6709 0\uff0c\u6240\u4ee5\u6ca1\u6709\u53d8\u5316\uff09 8 & -8 = 1000 2 \u6b64\u65f6 n & -n == n \uff0c\u6240\u4ee5 8 \u662f 2 \u7684\u5e42\u3002","title":"\u4e3e\u4e2a\u4f8b\u5b50\uff1a"},{"location":"lesson12/Lesson12%20C%2B%2B/#4","text":"\u6280\u5de7 \uff1a (a ^ b) >= 0 \u539f\u7406 \uff1a\u5982\u679c a \u548c b \u7684\u7b26\u53f7\u76f8\u540c\uff0c\u90a3\u4e48\u5b83\u4eec\u7684\u7b26\u53f7\u4f4d\u76f8\u540c\uff0c\u5f02\u6216\u7ed3\u679c\u7684\u7b26\u53f7\u4f4d\u4e3a 0\uff0c\u56e0\u6b64 (a ^ b) >= 0 \u4e3a\u771f\uff1b\u5426\u5219\u4e3a\u5047\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a cpp bool sameSign = (a ^ b) >= 0;","title":"4. \u5224\u65ad\u4e24\u4e2a\u6570\u7684\u7b26\u53f7\u662f\u5426\u76f8\u540c"},{"location":"lesson12/Lesson12%20C%2B%2B/#_10","text":"\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u4e86\u89e3\u6574\u6570\u5728\u8ba1\u7b97\u673a\u4e2d\u7684\u4e8c\u8fdb\u5236\u8868\u793a\uff1a - \u7b26\u53f7\u4f4d \uff1a\u6574\u6570\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\uff0c\u6700\u9ad8\u4f4d\uff08\u6700\u5de6\u8fb9\u7684\u4e00\u4f4d\uff09\u662f \u7b26\u53f7\u4f4d \u3002\u5f53\u7b26\u53f7\u4f4d\u4e3a 0 \u65f6\uff0c\u8868\u793a\u6b63\u6570\uff1b\u5f53\u7b26\u53f7\u4f4d\u4e3a 1 \u65f6\uff0c\u8868\u793a\u8d1f\u6570\u3002 - \u4f8b\u5982\uff0c\u5bf9\u4e8e 32 \u4f4d\u6574\u6570\uff1a - \u6b63\u6570 5 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 00000000 00000000 00000000 00000101 - \u8d1f\u6570 -5 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 11111111 11111111 11111111 11111011","title":"\u539f\u7406\u89e3\u6790"},{"location":"lesson12/Lesson12%20C%2B%2B/#_11","text":"\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u5f02\u6216\u8fd0\u7b97\u6765\u5224\u65ad\u4e24\u4e2a\u6570\u7684\u7b26\u53f7\u662f\u5426\u76f8\u540c\u3002\u5173\u952e\u70b9\u5728\u4e8e\u5f02\u6216\u8fd0\u7b97\u7684\u7ed3\u679c\u7684 \u7b26\u53f7\u4f4d \u3002 \u7b26\u53f7\u4f4d\u5206\u6790 \uff1a \u5982\u679c a \u548c b \u7684\u7b26\u53f7\u76f8\u540c\uff0c\u4e8c\u8005\u7684\u7b26\u53f7\u4f4d\u4e5f\u4f1a\u76f8\u540c\uff0c\u5f02\u6216\u540e\u7684\u7ed3\u679c\u5728\u7b26\u53f7\u4f4d\u4f1a\u662f 0 \uff0c\u5373\u7ed3\u679c\u662f \u975e\u8d1f\u6570 \u3002 \u5982\u679c a \u548c b \u7684\u7b26\u53f7\u4e0d\u540c\uff0c\u4e8c\u8005\u7684\u7b26\u53f7\u4f4d\u4f1a\u4e0d\u540c\uff0c\u5f02\u6216\u540e\u7684\u7ed3\u679c\u5728\u7b26\u53f7\u4f4d\u4f1a\u662f 1 \uff0c\u5373\u7ed3\u679c\u662f \u8d1f\u6570 \u3002 \u76f8\u540c\u7b26\u53f7 \uff1a \u5047\u8bbe a = 5 \u548c b = 10 \uff0c\u5b83\u4eec\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u5982\u4e0b\uff1a a = 5 : 00000000 00000000 00000000 00000101 b = 10 : 00000000 00000000 00000000 00001010 \u5b83\u4eec\u7684\u7b26\u53f7\u4f4d\u90fd\u662f 0 \uff0c\u8868\u793a\u5b83\u4eec\u90fd\u662f\u6b63\u6570\u3002 \u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff1a a ^ b = 00000000 00000000 00000000 00000101 ^ 00000000 00000000 00000000 00001010 ------------------------------------- 00000000 00000000 00000000 00001111 \u7ed3\u679c\u7684\u7b26\u53f7\u4f4d\u4ecd\u7136\u662f 0 \uff0c\u8bf4\u660e\u7ed3\u679c\u662f\u975e\u8d1f\u6570\uff0c\u56e0\u6b64 (a ^ b) >= 0 \u4e3a\u771f\uff0c\u8868\u660e\u5b83\u4eec\u7684\u7b26\u53f7\u76f8\u540c\u3002 \u4e0d\u540c\u7b26\u53f7 \uff1a \u5047\u8bbe a = 5 \u548c b = -10 \uff0c\u5b83\u4eec\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u5982\u4e0b\uff1a a = 5 : 00000000 00000000 00000000 00000101 b = -10 : 11111111 11111111 11111111 11110110 \uff08\u8d1f\u6570\u5728\u8ba1\u7b97\u673a\u4e2d\u4f7f\u7528\u8865\u7801\u8868\u793a\uff09 \u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff1a a ^ b = 00000000 00000000 00000000 00000101 ^ 11111111 11111111 11111111 11110110 ------------------------------------- 11111111 11111111 11111111 11110011 \u7ed3\u679c\u7684\u7b26\u53f7\u4f4d\u662f 1 \uff0c\u8bf4\u660e\u7ed3\u679c\u662f\u8d1f\u6570\uff0c\u56e0\u6b64 (a ^ b) < 0 \u4e3a\u771f\uff0c\u8868\u660e\u5b83\u4eec\u7684\u7b26\u53f7\u4e0d\u540c\u3002","title":"\u901a\u8fc7\u5f02\u6216\u5224\u65ad\u7b26\u53f7"},{"location":"lesson12/Lesson12%20C%2B%2B/#_12","text":"\u5982\u679c a \u548c b \u7b26\u53f7\u76f8\u540c \uff0c\u5219 (a ^ b) \u7684\u7b26\u53f7\u4f4d\u4e3a 0 \uff0c\u5f02\u6216\u7ed3\u679c\u4e3a\u975e\u8d1f\u6570\uff0c\u6545 (a ^ b) >= 0 \u4e3a\u771f\u3002 \u5982\u679c a \u548c b \u7b26\u53f7\u4e0d\u540c \uff0c\u5219 (a ^ b) \u7684\u7b26\u53f7\u4f4d\u4e3a 1 \uff0c\u5f02\u6216\u7ed3\u679c\u4e3a\u8d1f\u6570\uff0c\u6545 (a ^ b) >= 0 \u4e3a\u5047\u3002 \u901a\u8fc7\u8fd9\u4e00\u6280\u5de7\uff0c\u6211\u4eec\u53ef\u4ee5\u9ad8\u6548\u5730\u5224\u65ad\u4e24\u4e2a\u6574\u6570\u7684\u7b26\u53f7\u662f\u5426\u76f8\u540c\uff0c\u907f\u514d\u4e86\u4f20\u7edf\u65b9\u6cd5\u4e2d\u7684\u5206\u652f\u5224\u65ad\u903b\u8f91\uff08\u5982 if-else \uff09\u3002","title":"\u603b\u7ed3"},{"location":"lesson12/Lesson12%20C%2B%2B/#2_1","text":"","title":"\u7c7b\u578b 2 \u5f02\u6216\u8fd0\u7b97\u6280\u5de7"},{"location":"lesson12/Lesson12%20C%2B%2B/#5","text":"\u6280\u5de7 \uff1a\u4f7f\u7528\u4ee5\u4e0b\u4e09\u6b65\u6765\u4ea4\u6362 a \u548c b \u7684\u503c\uff1a cpp a = a ^ b; b = a ^ b; a = a ^ b;","title":"5. \u4ea4\u6362\u4e24\u4e2a\u6570"},{"location":"lesson12/Lesson12%20C%2B%2B/#_13","text":"\u5173\u952e\u7684\u5f02\u6216\u8fd0\u7b97\u6027\u8d28\uff1a 1. a ^ a = 0 \uff1a\u4e00\u4e2a\u6570\u4e0e\u81ea\u8eab\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u662f 0\u3002 2. a ^ 0 = a \uff1a\u4e00\u4e2a\u6570\u4e0e 0 \u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u8fd8\u662f\u8be5\u6570\u672c\u8eab\u3002 3. \u4ea4\u6362\u5f8b \uff1a a ^ b = b ^ a \uff0c\u5373\u5f02\u6216\u8fd0\u7b97\u662f\u53ef\u4ea4\u6362\u7684\u3002 4. \u7ed3\u5408\u5f8b \uff1a a ^ (b ^ c) = (a ^ b) ^ c \uff0c\u5373\u5f02\u6216\u8fd0\u7b97\u662f\u53ef\u7ed3\u5408\u7684\u3002 \u57fa\u4e8e\u8fd9\u4e9b\u6027\u8d28\uff0c\u53ef\u4ee5\u901a\u8fc7\u8fde\u7eed\u4e09\u6b21\u5f02\u6216\u8fd0\u7b97\u6765\u5b8c\u6210\u4e24\u4e2a\u53d8\u91cf\u7684\u4ea4\u6362\u3002","title":"\u5f02\u6216\u8fd0\u7b97\u7684\u539f\u7406"},{"location":"lesson12/Lesson12%20C%2B%2B/#_14","text":"\u5047\u8bbe\u4e24\u4e2a\u6570\u4e3a a = 5 \u548c b = 3 \uff0c\u6211\u4eec\u6765\u9010\u6b65\u5206\u6790\u901a\u8fc7\u5f02\u6216\u64cd\u4f5c\u4ea4\u6362\u5b83\u4eec\u7684\u503c\u3002 \u7b2c\u4e00\u6b65 \uff1a a = a ^ b \u5bf9 a \u8fdb\u884c\u8d4b\u503c\u64cd\u4f5c\uff1a a = 5 ^ 3 5 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 101 \uff0c 3 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 011 \u3002 a = 101 ^ 011 = 110 \uff0c\u5373 a = 6 \uff08\u6b64\u65f6 a \u7684\u503c\u4e3a 6 \uff0c b \u4ecd\u7136\u662f 3 \uff09\u3002 \u7b2c\u4e8c\u6b65 \uff1a b = a ^ b \u5bf9 b \u8fdb\u884c\u8d4b\u503c\u64cd\u4f5c\uff1a b = a ^ b = 6 ^ 3 6 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 110 \uff0c 3 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 011 \u3002 b = 110 ^ 011 = 101 \uff0c\u5373 b = 5 \uff08\u6b64\u65f6 b \u7684\u503c\u53d8\u6210\u4e86 5 \uff0c a \u4ecd\u7136\u662f 6 \uff09\u3002 \u7b2c\u4e09\u6b65 \uff1a a = a ^ b \u5bf9 a \u8fdb\u884c\u8d4b\u503c\u64cd\u4f5c\uff1a a = a ^ b = 6 ^ 5 6 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 110 \uff0c 5 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 101 \u3002 a = 110 ^ 101 = 011 \uff0c\u5373 a = 3 \uff08\u6b64\u65f6 a \u7684\u503c\u53d8\u6210\u4e86 3 \uff0c\u800c b \u7684\u503c\u662f 5 \uff09\u3002","title":"\u8be6\u7ec6\u6b65\u9aa4"},{"location":"lesson12/Lesson12%20C%2B%2B/#_15","text":"\u901a\u8fc7\u8fd9\u4e09\u6b21\u5f02\u6216\u64cd\u4f5c\uff0c a \u7684\u521d\u59cb\u503c 5 \u88ab\u8d4b\u7ed9\u4e86 b \uff0c\u800c b \u7684\u521d\u59cb\u503c 3 \u88ab\u8d4b\u7ed9\u4e86 a \u3002\u56e0\u6b64\uff0c\u4e24\u4e2a\u6570\u5728\u6ca1\u6709\u4f7f\u7528\u4e34\u65f6\u53d8\u91cf\u7684\u60c5\u51b5\u4e0b\u5b8c\u6210\u4e86\u4ea4\u6362\u3002","title":"\u6700\u7ec8\u7ed3\u679c"},{"location":"lesson12/Lesson12%20C%2B%2B/#_16","text":"#include <iostream> using namespace std; int main() { int a = 5; int b = 3; cout << \"Before swap: a = \" << a << \", b = \" << b << endl; // \u901a\u8fc7\u5f02\u6216\u64cd\u4f5c\u4ea4\u6362 a \u548c b \u7684\u503c a = a ^ b; // a \u53d8\u4e3a a ^ b b = a ^ b; // b \u53d8\u4e3a a a = a ^ b; // a \u53d8\u4e3a b cout << \"After swap: a = \" << a << \", b = \" << b << endl; return 0; }","title":"\u4ee3\u7801\u793a\u4f8b"},{"location":"lesson12/Lesson12%20C%2B%2B/#_17","text":"Before swap: a = 5, b = 3 After swap: a = 3, b = 5","title":"\u8f93\u51fa\u7ed3\u679c\uff1a"},{"location":"lesson12/Lesson12%20C%2B%2B/#3","text":"","title":"\u7c7b\u578b 3\uff1a\u5feb\u901f\u8fd0\u7b97"},{"location":"lesson12/Lesson12%20C%2B%2B/#6-k-1","text":"\u6280\u5de7 \uff1a n | (1 << k) \u539f\u7406 \uff1a\u901a\u8fc7\u5de6\u79fb\u8fd0\u7b97\u5c06 1 \u79fb\u52a8\u5230\u7b2c k \u4f4d\uff0c\u7136\u540e\u4e0e n \u8fdb\u884c\u6309\u4f4d\u6216\u8fd0\u7b97\uff0c\u5c06\u7b2c k \u4f4d\u8bbe\u4e3a 1\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a cpp n = n | (1 << k);","title":"6. \u5c06\u6574\u6570\u7684\u7b2c k \u4f4d\u8bbe\u4e3a 1"},{"location":"lesson12/Lesson12%20C%2B%2B/#7-k-0","text":"\u6280\u5de7 \uff1a n & ~(1 << k) \u539f\u7406 \uff1a\u5148\u901a\u8fc7\u5de6\u79fb\u8fd0\u7b97\u5c06 1 \u79fb\u52a8\u5230\u7b2c k \u4f4d\uff0c\u7136\u540e\u5bf9\u5176\u53d6\u53cd\uff0c\u5c06\u5176\u4f59\u4f4d\u8bbe\u4e3a 1\uff0c k \u4f4d\u8bbe\u4e3a 0\uff0c\u518d\u4e0e n \u8fdb\u884c\u6309\u4f4d\u4e0e\u8fd0\u7b97\uff0c\u6e05\u9664\u7b2c k \u4f4d\u7684\u503c\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a cpp n = n & ~(1 << k);","title":"7. \u5c06\u6574\u6570\u7684\u7b2c k \u4f4d\u8bbe\u4e3a 0"},{"location":"lesson12/Lesson12%20C%2B%2B/#8-k","text":"\u6280\u5de7 \uff1a (n >> k) & 1 \u539f\u7406 \uff1a\u901a\u8fc7\u53f3\u79fb\u8fd0\u7b97\u5c06\u7b2c k \u4f4d\u79fb\u5230\u6700\u4f4e\u4f4d\uff0c\u7136\u540e\u4e0e 1 \u8fdb\u884c\u6309\u4f4d\u4e0e\u8fd0\u7b97\uff0c\u5224\u65ad\u8be5\u4f4d\u662f 0 \u8fd8\u662f 1\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a cpp int bit = (n >> k) & 1;","title":"8. \u83b7\u53d6\u6574\u6570\u7684\u7b2c k \u4f4d\u503c"},{"location":"lesson12/Lesson12%20C%2B%2B/#9-1","text":"\u6280\u5de7 \uff1a\u4f7f\u7528 n & (n - 1) \u4e0d\u65ad\u6e05\u9664\u6700\u4f4e\u4f4d\u7684 1 \u539f\u7406 \uff1a\u6bcf\u6b21\u6267\u884c n & (n - 1) \u90fd\u4f1a\u51cf\u5c11\u4e00\u4e2a 1\uff0c\u76f4\u5230 n \u53d8\u4e3a 0\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a cpp int count = 0; while (n > 0) { n = n & (n - 1); count++; }","title":"9. \u7edf\u8ba1\u6574\u6570\u7684\u4e8c\u8fdb\u5236\u4e2d 1 \u7684\u4e2a\u6570"},{"location":"lesson12/Lesson12%20C%2B%2B/#_18","text":"","title":"\u4e0e\u4f20\u7edf\u65b9\u5f0f\u7684\u6bd4\u8f83"},{"location":"lesson12/Lesson12%20C%2B%2B/#2_2","text":"\u4f20\u7edf\u7684\u65b9\u6cd5\u662f\u901a\u8fc7\u4e0d\u65ad\u5c06 n \u9664\u4ee5 2 \u6765\u5224\u65ad n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u7684 1 \u7684\u4e2a\u6570\u3002\u6bcf\u6b21\u9664\u4ee5 2 \u53ef\u4ee5\u83b7\u53d6\u5f53\u524d\u6700\u53f3\u8fb9\u7684\u4e00\u4f4d\uff0c\u901a\u8fc7\u5224\u65ad\u8fd9\u4f4d\u662f\u5426\u662f 1 \u6765\u589e\u52a0\u8ba1\u6570\u3002 \u793a\u4f8b\u4ee3\u7801 \uff1a cpp int count = 0; while (n > 0) { if (n % 2 == 1) { count++; } n = n / 2; } \u7f3a\u70b9 \uff1a\u8be5\u65b9\u6cd5\u9700\u8981\u904d\u5386\u4e8c\u8fdb\u5236\u8868\u793a\u7684\u6bcf\u4e00\u4f4d\uff0c\u4e5f\u5c31\u662f\u9700\u8981\u5faa\u73af\u7684\u6b21\u6570\u4e0e n \u7684\u6bd4\u7279\u6570\u6210\u6b63\u6bd4\u3002\u56e0\u6b64\uff0c\u5982\u679c n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u6709\u5f88\u591a 0\uff0c\u8fd9\u79cd\u65b9\u6cd5\u6548\u7387\u8f83\u4f4e\u3002\u5bf9\u4e8e\u4e00\u4e2a 32 \u4f4d\u7684\u6574\u6570\uff0c\u6700\u591a\u9700\u8981\u6267\u884c 32 \u6b21\u64cd\u4f5c\u3002","title":"\u4f20\u7edf\u65b9\u6cd5\uff1a\u6574\u9664 2"},{"location":"lesson12/Lesson12%20C%2B%2B/#n-n-1_1","text":"\u901a\u8fc7 n & (n - 1) \uff0c\u6bcf\u6b21\u8fd0\u7b97\u76f4\u63a5\u5c06 n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d \u6700\u4f4e\u4f4d\u7684 1 \u6e05\u9664\u3002\u56e0\u6b64\uff0c\u6267\u884c\u7684\u6b21\u6570\u7b49\u4e8e n \u4e2d 1 \u7684\u4e2a\u6570\uff0c\u800c\u4e0d\u662f\u6bd4\u7279\u6570\u3002 \u539f\u7406 \uff1a n & (n - 1) \u7684\u4f5c\u7528\u662f\u5c06 n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u6700\u4f4e\u4f4d\u7684 1 \u53d8\u4e3a 0\u3002 \u6bcf\u6b21\u6267\u884c\u4e00\u6b21 n & (n - 1) \uff0c\u6211\u4eec\u5c31\u79fb\u9664\u4e86\u4e00\u4e2a 1\uff0c\u76f4\u5230\u6240\u6709\u7684 1 \u90fd\u88ab\u79fb\u9664\uff0c n \u53d8\u4e3a 0 \u4e3a\u6b62\u3002","title":"\u4f7f\u7528 n &amp; (n - 1) \u7684\u65b9\u6cd5"},{"location":"lesson12/Lesson12%20C%2B%2B/#10-2","text":"\u6280\u5de7 \uff1a 1 << k \u539f\u7406 \uff1a\u5de6\u79fb\u8fd0\u7b97\u76f8\u5f53\u4e8e\u5c06 1 \u5411\u5de6\u79fb\u52a8 k \u4f4d\uff0c\u8fd9\u6837\u53ef\u4ee5\u5feb\u901f\u5f97\u5230 2^k \u7684\u7ed3\u679c\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a cpp int powerOfTwo = 1 << k; // \u7b49\u540c\u4e8e 2^k","title":"10. \u5feb\u901f\u8ba1\u7b97 2 \u7684\u5e42"},{"location":"lesson12/Lesson12%20C%2B%2B/#2_3","text":"","title":"2. \u4f8b\u9898\u8bb2\u89e3"},{"location":"lesson12/Lesson12%20C%2B%2B/#21-lc231-2","text":"","title":"2.1 LC231 2\u7684\u5e42"},{"location":"lesson12/Lesson12%20C%2B%2B/#_19","text":"\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570 n \uff0c\u8bf7\u4f60\u5224\u65ad\u8be5\u6574\u6570\u662f\u5426\u662f 2 \u7684\u5e42\u6b21\u65b9\u3002\u5982\u679c\u662f\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002 \u5982\u679c\u5b58\u5728\u4e00\u4e2a\u6574\u6570 x \u4f7f\u5f97 n == 2^x \uff0c\u5219\u8ba4\u4e3a n \u662f 2 \u7684\u5e42\u6b21\u65b9\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson12/Lesson12%20C%2B%2B/#_20","text":"\u4e00\u4e2a\u6570 n \u662f 2 \u7684\u5e42\uff0c\u5f53\u4e14\u4ec5\u5f53 n \u662f\u6b63\u6574\u6570\uff0c\u5e76\u4e14 n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u4ec5\u5305\u542b 1 \u4e2a 1\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u4f4d\u8fd0\u7b97\u6280\u5de7\u6765\u5224\u65ad\u3002","title":"\u65b9\u6cd5\uff1a\u4f4d\u8fd0\u7b97"},{"location":"lesson12/Lesson12%20C%2B%2B/#_21","text":"\u4f7f\u7528 n & (n - 1) \u5224\u65ad class Solution { public: bool isPowerOfTwo(int n) { return n > 0 && (n & (n - 1)) == 0; } }; \u4f7f\u7528 n & (-n) \u5224\u65ad class Solution { public: bool isPowerOfTwo(int n) { return n > 0 && (n & -n) == n; } };","title":"\u4f4d\u8fd0\u7b97\u6280\u5de7"},{"location":"lesson12/Lesson12%20C%2B%2B/#22-lc268","text":"","title":"2.2 LC268 \u4e22\u5931\u7684\u6570\u5b57"},{"location":"lesson12/Lesson12%20C%2B%2B/#_22","text":"\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b [0, n] \u4e2d n \u4e2a\u6570\u7684\u6570\u7ec4 nums\uff0c\u627e\u51fa [0, n] \u8fd9\u4e2a\u8303\u56f4\u5185\u6ca1\u6709\u51fa\u73b0\u5728\u6570\u7ec4\u4e2d\u7684\u90a3\u4e2a\u6570\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson12/Lesson12%20C%2B%2B/#_23","text":"","title":"\u601d\u8def\u8bb2\u89e3"},{"location":"lesson12/Lesson12%20C%2B%2B/#unordered_set","text":"","title":"\u65b9\u6cd5\u4e00\uff1a\u4f7f\u7528 unordered_set"},{"location":"lesson12/Lesson12%20C%2B%2B/#_24","text":"\u6784\u5efa\u4e00\u4e2a unordered_set \uff1a\u5c06\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u6570\u5b57\u5b58\u5165 unordered_set \u4e2d\u3002 \u904d\u5386\u67e5\u627e\u7f3a\u5931\u7684\u6570\u5b57 \uff1a\u904d\u5386 [0, n] \uff0c\u68c0\u67e5\u54ea\u4e2a\u6570\u5b57\u4e0d\u5728 unordered_set \u4e2d\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u4e00\u65e6\u53d1\u73b0\u67d0\u4e2a\u6570\u5b57\u4e0d\u5728 unordered_set \u4e2d\uff0c\u5373\u53ef\u8fd4\u56de\u8be5\u6570\u5b57\u4f5c\u4e3a\u7f3a\u5931\u7684\u6570\u5b57\u3002 class Solution { public: int missingNumber(vector<int>& nums) { // \u521b\u5efa\u4e00\u4e2a unordered_set \u5b58\u50a8\u6570\u7ec4\u4e2d\u7684\u6570 unordered_set<int> numSet; // \u5c06\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u6570\u52a0\u5165\u5230\u96c6\u5408\u4e2d for (int num : nums) { numSet.insert(num); } // \u904d\u5386 [0, n]\uff0c\u627e\u51fa\u6ca1\u6709\u51fa\u73b0\u5728\u96c6\u5408\u4e2d\u7684\u6570 for (int i = 0; i <= nums.size(); i++) { if (numSet.find(i) == numSet.end()) { return i; // \u627e\u5230\u7f3a\u5931\u7684\u6570\u5b57 } } return -1; // \u5982\u679c\u6ca1\u6709\u627e\u5230\u7f3a\u5931\u7684\u6570\u5b57\uff0c\u8fd4\u56de -1\uff08\u5b9e\u9645\u4e0d\u4f1a\u53d1\u751f\uff09 } };","title":"\u89e3\u9898\u601d\u8def\uff1a"},{"location":"lesson12/Lesson12%20C%2B%2B/#_25","text":"","title":"\u65b9\u6cd5\u4e8c\uff1a\u4f7f\u7528\u4f4d\u8fd0\u7b97\uff08\u5f02\u6216\uff09"},{"location":"lesson12/Lesson12%20C%2B%2B/#_26","text":"\u8fd9\u9053\u9898\u7684\u6838\u5fc3\u601d\u8def\u662f\u57fa\u4e8e \u5f02\u6216\u8fd0\u7b97 \u7684\u6027\u8d28\u6765\u627e\u5230\u4e22\u5931\u7684\u6570\u5b57\u3002\u6e29\u4e60\u5f02\u6216\u8fd0\u7b97\u7684\u4ee5\u4e0b\u51e0\u4e2a\u5173\u952e\u6027\u8d28\uff1a \u4ea4\u6362\u5f8b\u548c\u7ed3\u5408\u5f8b \uff1a a ^ b ^ c \u548c a ^ c ^ b \u7684\u7ed3\u679c\u76f8\u540c\uff0c\u5373\u987a\u5e8f\u65e0\u5173\u3002 \u76f8\u540c\u6570\u5b57\u5f02\u6216\u4e3a 0 \uff1a a ^ a = 0 \uff0c\u5373\u4e24\u4e2a\u76f8\u540c\u7684\u6570\u5b57\u5f02\u6216\u4f1a\u4e92\u76f8\u62b5\u6d88\u4e3a 0\u3002 \u4efb\u4f55\u6570\u5b57\u4e0e 0 \u5f02\u6216\u7b49\u4e8e\u81ea\u8eab \uff1a a ^ 0 = a \u3002","title":"\u89e3\u9898\u601d\u8def"},{"location":"lesson12/Lesson12%20C%2B%2B/#_27","text":"\u521d\u59cb\u5316\u53d8\u91cf \uff1a missing \u53d8\u91cf\u521d\u59cb\u503c\u4e3a 0\uff0c\u7528\u4e8e\u5b58\u50a8\u5f02\u6216\u7ed3\u679c\u3002 n = nums.length \uff0c\u8868\u793a\u6570\u7ec4\u7684\u957f\u5ea6\u3002 \u7b2c\u4e00\u8f6e\u5faa\u73af (\u5f02\u6216\u6570\u7ec4\u4e2d\u7684\u5143\u7d20) \uff1a \u5728 for \u5faa\u73af\u4e2d\uff0c missing \u4f1a\u4f9d\u6b21\u4e0e\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\u3002 \u5047\u8bbe nums = [3, 0, 1] \uff0c\u8fd9\u65f6 missing \u5c06\u4f9d\u6b21\u53d8\u4e3a missing = 0 ^ 3 ^ 0 ^ 1 \u3002 \u8fd9\u4e00\u6b65\u9aa4\u7684\u76ee\u7684\u662f\u901a\u8fc7\u5f02\u6216\u5c06 nums \u6570\u7ec4\u4e2d\u7684\u6240\u6709\u5143\u7d20\u8bb0\u5f55\u5230 missing \u4e2d\u3002 \u7b2c\u4e8c\u8f6e\u5faa\u73af (\u5f02\u6216\u8303\u56f4 [0, n]) \uff1a \u7b2c\u4e8c\u4e2a for \u5faa\u73af\u4ece 0 \u5230 n \uff0c missing \u5c06\u4f9d\u6b21\u4e0e [0, n] \u8fd9\u4e2a\u8303\u56f4\u7684\u6240\u6709\u6570\u5b57\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\u3002 \u7531\u4e8e\u4e22\u5931\u7684\u6570\u5b57\u5b58\u5728\u4e8e [0, n] \u4e2d\uff0c\u4f46\u4e0d\u5728 nums \u4e2d\uff0c\u901a\u8fc7\u8fd9\u4e2a\u6b65\u9aa4\uff0c missing \u4f1a\u53d8\u4e3a\u6700\u7ec8\u7684\u4e22\u5931\u6570\u5b57\u3002 \u5229\u7528\u5f02\u6216\u6027\u8d28 \uff1a \u6700\u7ec8\uff0c\u6240\u6709\u6210\u5bf9\u51fa\u73b0\u7684\u6570\u5b57\u90fd\u4f1a\u88ab\u62b5\u6d88\u4e3a 0 \uff0c\u5269\u4e0b\u7684\u5c31\u662f\u90a3\u4e2a\u6ca1\u6709\u6210\u5bf9\u51fa\u73b0\u7684\u6570\u5b57\uff0c\u4e5f\u5c31\u662f\u4e22\u5931\u7684\u6570\u5b57\u3002","title":"\u5177\u4f53\u6b65\u9aa4\uff1a"},{"location":"lesson12/Lesson12%20C%2B%2B/#_28","text":"class Solution { public: int missingNumber(vector<int>& nums) { int missing = 0; int n = nums.size(); for (int i = 0; i < n; i++) { missing ^= nums[i]; } for (int i = 0; i <= n; i++) { missing ^= i; } return missing; } };","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson12/Lesson12%20C%2B%2B/#3_1","text":"","title":"3. \u4e3e\u4e00\u53cd\u4e09"},{"location":"lesson12/Lesson12%20C%2B%2B/#31-lc2309","text":"","title":"3.1 LC2309 \u517c\u5177\u5927\u5c0f\u5199\u7684\u6700\u597d\u82f1\u6587\u5b57\u6bcd"},{"location":"lesson12/Lesson12%20C%2B%2B/#_29","text":"\u7ed9\u4f60\u4e00\u4e2a\u7531\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\u7684\u5b57\u7b26\u4e32 s \uff0c\u8bf7\u4f60\u627e\u51fa\u5e76\u8fd4\u56de s \u4e2d\u7684\u6700\u597d\u82f1\u6587\u5b57\u6bcd\u3002\u8fd4\u56de\u7684\u5b57\u6bcd\u5fc5\u987b\u4e3a\u5927\u5199\u5f62\u5f0f\u3002\u5982\u679c\u4e0d\u5b58\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u5b57\u6bcd\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32\u3002 \u6700\u597d \u82f1\u6587\u5b57\u6bcd\u7684\u5927\u5199\u548c\u5c0f\u5199\u5f62\u5f0f\u5fc5\u987b\u90fd\u5728 s \u4e2d\u51fa\u73b0\u3002 \u82f1\u6587\u5b57\u6bcd b \u6bd4\u53e6\u4e00\u4e2a\u82f1\u6587\u5b57\u6bcd a \u66f4\u597d\u7684\u524d\u63d0\u662f\uff1a\u82f1\u6587\u5b57\u6bcd\u8868\u4e2d\uff0cb \u5728 a \u4e4b\u540e\u51fa\u73b0\u3002 \u8bf7\u4f7f\u7528\u5c1d\u8bd5\u54c8\u5e0c\u8868\u548c\u4f4d\u8fd0\u7b97\u4e24\u79cd\u65b9\u5f0f\u89e3\u7b54\u6b64\u9898","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson12/Lesson12%20C%2B%2B/#1_3","text":"\u4f7f\u7528 unordered_set \u4fdd\u5b58\u5b57\u7b26\u4e32 s \u4e2d\u51fa\u73b0\u8fc7\u7684\u5b57\u7b26\u3002\u904d\u5386\u5b57\u7b26\u4e32 s \uff0c\u5c06\u5f53\u524d\u5b57\u7b26 c \u52a0\u5165\u5230 unordered_set \u4e2d\u3002\u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u82f1\u6587\u5b57\u6bcd\uff0c\u5982\u679c\u4e00\u4e2a\u82f1\u6587\u5b57\u6bcd\u7684\u5927\u5199\u5f62\u5f0f\u548c\u5c0f\u5199\u5f62\u5f0f\u90fd\u51fa\u73b0\u5728 unordered_set \u4e2d\uff0c\u90a3\u4e48\u76f4\u63a5\u8fd4\u56de\u8be5\u82f1\u6587\u5b57\u6bcd\u3002\u5982\u679c\u6240\u6709\u7684\u82f1\u6587\u5b57\u6bcd\u90fd\u4e0d\u7b26\u5408\u8981\u6c42\uff0c\u90a3\u4e48\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002","title":"\u89e3\u9898\u601d\u8def1\uff1a\u54c8\u5e0c\u8868"},{"location":"lesson12/Lesson12%20C%2B%2B/#1_4","text":"class Solution { public: string greatestLetter(string s) { unordered_set<char> ht; for (int i = 0; i < s.length(); i++) { char c = s[i]; ht.insert(c); } for (int i = 25; i >= 0; i--) { if (ht.count('a' + i) && ht.count('A' + i)) { return string(1, 'A' + i); } } return \"\"; } };","title":"\u53c2\u8003\u89e3\u7b541\uff1a"},{"location":"lesson12/Lesson12%20C%2B%2B/#2_4","text":"\u4f7f\u7528\u4e24\u4e2a 32 \u4f4d\u6574\u6570 lower \u548c upper \u5206\u522b\u8868\u793a\u5b57\u7b26\u4e32 s \u4e2d\u5c0f\u5199\u5b57\u6bcd\u548c\u5927\u5199\u5b57\u6bcd\u7684\u51fa\u73b0\u60c5\u51b5\u3002\u901a\u8fc7\u4f4d\u8fd0\u7b97\u5224\u65ad\u67d0\u4e2a\u82f1\u6587\u5b57\u6bcd\u7684\u5927\u5c0f\u5199\u5f62\u5f0f\u662f\u5426\u90fd\u51fa\u73b0\u8fc7\u3002 1. \u904d\u5386\u5b57\u7b26\u4e32 s\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5b57\u7b26 c\uff1a - \u5982\u679c c \u662f\u5c0f\u5199\u5b57\u6bcd\uff0c\u5c06 lower \u7684\u5bf9\u5e94\u4f4d\u7f6e\u8bbe\u4e3a 1\uff1b - \u5982\u679c c \u662f\u5927\u5199\u5b57\u6bcd\uff0c\u5c06 upper \u7684\u5bf9\u5e94\u4f4d\u7f6e\u8bbe\u4e3a 1\u3002 \u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u82f1\u6587\u5b57\u6bcd\uff0c\u5982\u679c\u53d1\u73b0\u67d0\u4e2a\u82f1\u6587\u5b57\u6bcd\u7684\u5927\u5c0f\u5199\u5f62\u5f0f\u5728 lower \u548c upper \u4e2d\u90fd\u51fa\u73b0\uff0c\u90a3\u4e48\u8fd4\u56de\u8be5\u5b57\u6bcd\u3002 \u5982\u679c\u6240\u6709\u7684\u5b57\u6bcd\u90fd\u4e0d\u7b26\u5408\u8981\u6c42\uff0c\u5219\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002","title":"\u89e3\u9898\u601d\u8def2\uff1a\u4f4d\u8fd0\u7b97"},{"location":"lesson12/Lesson12%20C%2B%2B/#_30","text":"lower |= 1 << (c - 'a')\uff1a\u5c06\u5b57\u7b26 c \u5bf9\u5e94\u7684\u4f4d\u6570\u7f6e\u4e3a 1\uff0c\u8868\u793a\u8be5\u5b57\u7b26\u51fa\u73b0\u8fc7\u3002 upper |= 1 << (c - 'A')\uff1a\u540c\u7406\uff0c\u5c06\u5927\u5199\u5b57\u7b26 c \u5bf9\u5e94\u7684\u4f4d\u6570\u7f6e\u4e3a 1\u3002 lower & upper & (1 << i)\uff1a\u5224\u65ad\u5c0f\u5199\u548c\u5927\u5199\u7684\u7b2c i \u4f4d\u662f\u5426\u90fd\u4e3a 1\uff0c\u8868\u793a\u8be5\u5b57\u6bcd\u7684\u5927\u5c0f\u5199\u90fd\u51fa\u73b0\u8fc7\u3002","title":"\u4f4d\u8fd0\u7b97\u6280\u5de7"},{"location":"lesson12/Lesson12%20C%2B%2B/#2_5","text":"class Solution { public: string greatestLetter(tring s) { int lower = 0, upper = 0; for (int i = 0; i < s.length(); i++) { char c = s[i]; if (islower(c)) { lower |= 1 << (c - 'a'); } else { upper |= 1 << (c - 'A'); } } for (int i = 25; i >= 0; i--) { if ((lower & upper & (1 << i)) != 0) { return string(1, 'A' + i); } } return \"\"; } };","title":"\u53c2\u8003\u89e3\u7b542\uff1a"},{"location":"lesson12/Lesson12%20C%2B%2B/#32-lc136","text":"","title":"3.2 LC136 \u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57"},{"location":"lesson12/Lesson12%20C%2B%2B/#_31","text":"\u7ed9\u4f60\u4e00\u4e2a \u975e\u7a7a \u6574\u6570\u6570\u7ec4 nums \uff0c\u9664\u4e86\u67d0\u4e2a\u5143\u7d20\u53ea\u51fa\u73b0\u4e00\u6b21\u4ee5\u5916\uff0c\u5176\u4f59\u6bcf\u4e2a\u5143\u7d20\u5747\u51fa\u73b0\u4e24\u6b21\u3002\u627e\u51fa\u90a3\u4e2a\u53ea\u51fa\u73b0\u4e86\u4e00\u6b21\u7684\u5143\u7d20\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"lesson12/Lesson12%20C%2B%2B/#1_5","text":"\u5bf9\u4e8e\u8fd9\u9053\u9898\u76ee\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 \u5f02\u6216\u8fd0\u7b97 \uff08 \u2295 \uff09\u3002\u5f02\u6216\u8fd0\u7b97\u6709\u4ee5\u4e0b\u4e09\u4e2a\u6027\u8d28\uff1a \u4efb\u4f55\u6570\u548c 0 \u505a\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u4ecd\u7136\u662f\u539f\u6765\u7684\u6570\uff0c\u5373 a \u2295 0 = a \u3002 \u4efb\u4f55\u6570\u548c\u5176\u81ea\u8eab\u505a\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u662f 0 \uff0c\u5373 a \u2295 a = 0 \u3002 \u5f02\u6216\u8fd0\u7b97\u6ee1\u8db3\u4ea4\u6362\u5f8b\u548c\u7ed3\u5408\u5f8b\uff0c\u5373 a \u2295 b \u2295 a = b \u2295 a \u2295 a = b \u2295 (a \u2295 a) = b \u2295 0 = b \u3002 \u5047\u8bbe\u6570\u7ec4\u4e2d\u6709 2m + 1 \u4e2a\u6570\uff0c\u5176\u4e2d\u6709 m \u4e2a\u6570\u5404\u51fa\u73b0\u4e24\u6b21\uff0c\u4e00\u4e2a\u6570\u51fa\u73b0\u4e00\u6b21\u3002\u4ee4 a 1 , a 2 , ..., a m \u4e3a\u51fa\u73b0\u4e24\u6b21\u7684 m \u4e2a\u6570\uff0ca m+1 \u4e3a\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u3002\u6839\u636e\u6027\u8d28 3\uff0c\u6570\u7ec4\u4e2d\u7684\u5168\u90e8\u5143\u7d20\u7684\u5f02\u6216\u8fd0\u7b97\u7ed3\u679c\u603b\u662f\u53ef\u4ee5\u5199\u6210\u5982\u4e0b\u5f62\u5f0f\uff1a (a 1 \u2295 a 1 ) \u2295 (a 2 \u2295 a 2 ) \u2295 \u22ef \u2295 (a m \u2295 a m ) \u2295 a m+1 \u6839\u636e\u6027\u8d28 2 \u548c\u6027\u8d28 1\uff0c\u4e0a\u5f0f\u53ef\u4ee5\u5316\u7b80\u4e3a\uff1a 0 \u2295 0 \u2295 \u22ef \u2295 0 \u2295 a m+1 = a m+1 \u56e0\u6b64\uff0c\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u5143\u7d20\u7684\u5f02\u6216\u8fd0\u7b97\u7ed3\u679c\u5c31\u662f\u6570\u7ec4\u4e2d\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u90a3\u4e2a\u6570\u3002","title":"\u89e3\u9898\u601d\u8def1 \u5f02\u6216\u8fd0\u7b97"},{"location":"lesson12/Lesson12%20C%2B%2B/#_32","text":"class Solution { public: int singleNumber(vector<int>& nums) { int single = 0; for (int num : nums) { single ^= num; } return single; } };","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"lesson12/Lesson12%20C%2B%2B/#2unordered_set","text":"\u5229\u7528 unordered_set \u7684\u7279\u70b9\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a \u5982\u679c\u5f53\u524d\u6570\u5b57\u5df2\u7ecf\u5728\u96c6\u5408\u4e2d\uff0c\u79fb\u9664\u5b83\u3002 \u5982\u679c\u5f53\u524d\u6570\u5b57\u4e0d\u5728\u96c6\u5408\u4e2d\uff0c\u52a0\u5165\u5b83\u3002 \u6700\u7ec8\uff0c\u96c6\u5408\u4e2d\u53ea\u4f1a\u5269\u4e0b\u90a3\u4e2a\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57\u3002","title":"\u89e3\u9898\u601d\u8def2\uff1aunordered_set"},{"location":"lesson12/Lesson12%20C%2B%2B/#_33","text":"\u521b\u5efa\u4e00\u4e2a unordered_set \uff0c\u7528\u4e8e\u5b58\u50a8\u6570\u7ec4\u4e2d\u7684\u6570\u5b57\u3002 \u904d\u5386\u6570\u7ec4\uff1a \u5982\u679c\u5f53\u524d\u6570\u5b57\u5df2\u7ecf\u5b58\u5728\u4e8e\u96c6\u5408\u4e2d\uff0c\u8bf4\u660e\u5b83\u662f\u91cd\u590d\u7684\uff0c\u5c06\u5176\u4ece\u96c6\u5408\u4e2d\u79fb\u9664\u3002 \u5982\u679c\u5f53\u524d\u6570\u5b57\u4e0d\u5728\u96c6\u5408\u4e2d\uff0c\u8bf4\u660e\u5b83\u662f\u7b2c\u4e00\u6b21\u51fa\u73b0\uff0c\u5c06\u5176\u52a0\u5165\u96c6\u5408\u3002 \u904d\u5386\u7ed3\u675f\u540e\uff0c unordered_set \u4e2d\u5269\u4e0b\u7684\u552f\u4e00\u4e00\u4e2a\u5143\u7d20\u5c31\u662f\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57\u3002 \u56e0\u4e3a\u9898\u76ee\u4e2d\u7684\u6761\u4ef6\u662f\u53ea\u6709\u4e00\u4e2a\u6570\u5b57\u51fa\u73b0\u4e86\u4e00\u6b21\uff0c\u5176\u4ed6\u6570\u5b57\u90fd\u51fa\u73b0\u4e86\u4e24\u6b21\uff0c\u6700\u7ec8 unordered_set \u4e2d\u53ea\u4f1a\u5269\u4e0b\u90a3\u4e2a\u552f\u4e00\u7684\u6570\u5b57\u3002","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"lesson12/Lesson12%20C%2B%2B/#_34","text":"class Solution { public: int singleNumber(vector<int>& nums) { unordered_set<int> set; // \u904d\u5386\u6570\u7ec4\uff0c\u5904\u7406\u6bcf\u4e2a\u6570\u5b57 for (int num : nums) { if (set.count(num)) { set.erase(num); // \u5982\u679c\u96c6\u5408\u4e2d\u5df2\u7ecf\u5b58\u5728\uff0c\u79fb\u9664 } else { set.insert(num); // \u5982\u679c\u4e0d\u5b58\u5728\uff0c\u52a0\u5165\u96c6\u5408 } } // \u5c06\u5269\u4f59\u7684\u552f\u4e00\u5143\u7d20\u8f6c\u6362\u4e3a vector \u5e76\u4f7f\u7528 [] \u8bbf\u95ee vector<int> result(set.begin(), set.end()); return result[0]; // \u8fd4\u56de vector \u4e2d\u552f\u4e00\u7684\u6570\u5b57 } };","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"lesson12/Lesson12%20C%2B%2B/#33-lc389","text":"","title":"3.3 LC389 \u627e\u4e0d\u540c"},{"location":"lesson12/Lesson12%20C%2B%2B/#_35","text":"\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 s \u548c t \uff0c\u5b83\u4eec\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u3002 \u5b57\u7b26\u4e32 t \u7531\u5b57\u7b26\u4e32 s \u968f\u673a\u91cd\u6392\uff0c\u7136\u540e\u5728\u968f\u673a\u4f4d\u7f6e\u6dfb\u52a0\u4e00\u4e2a\u5b57\u6bcd\u3002 \u8bf7\u627e\u51fa\u5728 t \u4e2d\u88ab\u6dfb\u52a0\u7684\u5b57\u6bcd\u3002 \u5c1d\u8bd5\u4f7f\u7528 LC136 \u9898\u76ee\u7684\u4f4d\u8fd0\u7b97\u6280\u5de7\u89e3\u51b3\u672c\u9898","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"lesson12/Lesson12%20C%2B%2B/#_36","text":"\u9898\u76ee\u8981\u6c42\u627e\u51fa\u5728\u5b57\u7b26\u4e32 t \u4e2d\u591a\u51fa\u6765\u7684\u90a3\u4e2a\u5b57\u7b26\u3002 \u6211\u4eec\u53ef\u4ee5\u5c06\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u6240\u6709\u5b57\u7b26\u89c6\u4e3a\u4e00\u4e2a\u6574\u4f53\uff0c\u7136\u540e\u901a\u8fc7\u6c42\u51fa\u73b0\u5947\u6570\u6b21\u7684\u5b57\u7b26\u6765\u627e\u5230\u591a\u51fa\u6765\u7684\u90a3\u4e2a\u5b57\u7b26\u3002\u56e0\u4e3a\u9664\u4e86\u4e00\u4e2a\u5b57\u7b26\u4ee5\u5916\uff0c\u5176\u4ed6\u5b57\u7b26\u90fd\u4f1a\u51fa\u73b0\u5076\u6570\u6b21\uff0c\u6700\u7ec8\u7684\u5f02\u6216\u7ed3\u679c\u53ea\u4f1a\u4fdd\u7559\u90a3\u4e2a\u51fa\u73b0\u5947\u6570\u6b21\u7684\u5b57\u7b26\u3002 \u7c7b\u4f3c\u4e8e\u300cLC136. \u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57\u300d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 \u5f02\u6216\u8fd0\u7b97 \u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a \u5f02\u6216\u8fd0\u7b97\u7684\u6027\u8d28 \uff1a \u4efb\u4f55\u6570\u548c 0 \u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u4e3a\u8be5\u6570\u672c\u8eab\uff1a a \u2295 0 = a \u3002 \u4efb\u4f55\u6570\u548c\u81ea\u5df1\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u4e3a 0 \uff1a a \u2295 a = 0 \u3002 \u5f02\u6216\u8fd0\u7b97\u6ee1\u8db3\u4ea4\u6362\u5f8b\u548c\u7ed3\u5408\u5f8b\uff1a a \u2295 b \u2295 a = (a \u2295 a) \u2295 b = 0 \u2295 b = b \u3002 \u6839\u636e\u8fd9\u4e9b\u6027\u8d28\uff0c\u5982\u679c\u6211\u4eec\u5c06\u5b57\u7b26\u4e32 s \u548c t \u4e2d\u6240\u6709\u7684\u5b57\u7b26\u90fd\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u6210\u5bf9\u51fa\u73b0\u7684\u5b57\u7b26\u4f1a\u4e92\u76f8\u62b5\u6d88\uff0c\u6700\u7ec8\u5269\u4e0b\u7684\u5c31\u662f t \u4e2d\u90a3\u4e2a\u591a\u51fa\u6765\u7684\u5b57\u7b26\u3002","title":"\u601d\u8def\u8bb2\u89e3"},{"location":"lesson12/Lesson12%20C%2B%2B/#_37","text":"\u521d\u59cb\u5316\u4e00\u4e2a\u6574\u6570 ret \uff0c\u7528\u4e8e\u4fdd\u5b58\u5f02\u6216\u7ed3\u679c\uff0c\u521d\u59cb\u503c\u4e3a 0 \u3002 \u904d\u5386\u5b57\u7b26\u4e32 s \u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\uff0c\u5c06\u5b57\u7b26\u7684 ASCII \u503c\u4e0e ret \u8fdb\u884c\u5f02\u6216\u64cd\u4f5c\u3002 \u904d\u5386\u5b57\u7b26\u4e32 t \u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\uff0c\u5c06\u5b57\u7b26\u7684 ASCII \u503c\u4e0e ret \u8fdb\u884c\u5f02\u6216\u64cd\u4f5c\u3002 \u8fd4\u56de ret \uff0c\u5b83\u5c31\u662f\u591a\u51fa\u6765\u7684\u90a3\u4e2a\u5b57\u7b26\u3002","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"lesson12/Lesson12%20C%2B%2B/#_38","text":"class Solution { public: char findTheDifference(string s, string t) { int ret = 0; // \u5bf9\u5b57\u7b26\u4e32 s \u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u8fdb\u884c\u5f02\u6216\u64cd\u4f5c for (char c : s) { ret ^= c; } // \u5bf9\u5b57\u7b26\u4e32 t \u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u8fdb\u884c\u5f02\u6216\u64cd\u4f5c for (char c : t) { ret ^= c; } // \u8fd4\u56de\u5f02\u6216\u7ed3\u679c\uff0c\u5373\u591a\u51fa\u6765\u7684\u5b57\u7b26 return (char)ret; } };","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"lesson12/Lesson12%20C%2B%2B/#4_1","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC868 \u4e8c\u8fdb\u5236\u95f4\u8ddd \u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u8ba1\u7b97\u5b83\u5728\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u4e24\u4e2a\u76f8\u90bb\u7684 1 \u4e4b\u95f4\u7684\u6700\u5927\u8ddd\u79bb\u3002 LC1486 \u6570\u7ec4\u5f02\u6216\u64cd\u4f5c \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570 n \u548c\u4e00\u4e2a\u6574\u6570 start\uff0c\u751f\u6210\u4e00\u4e2a\u6570\u7ec4\uff0c\u8fd4\u56de\u6570\u7ec4\u4e2d\u6240\u6709\u5143\u7d20\u7684\u5f02\u6216\u7ed3\u679c\u3002 LC1720 \u89e3\u7801\u5f02\u6216\u540e\u7684\u6570\u7ec4 \u7ed9\u5b9a\u4e00\u4e2a\u5f02\u6216\u540e\u7684\u6570\u7ec4\uff0c\u8fd4\u56de\u5176\u539f\u59cb\u6570\u7ec4\u3002 LC645 \u9519\u8bef\u7684\u96c6\u5408 \u96c6\u5408 S \u5305\u542b [1, n] \u4e2d\u7684 n \u4e2a\u6574\u6570\uff0c\u4f46\u5176\u4e2d\u6709\u4e00\u4e2a\u91cd\u590d\u7684\u6570\u548c\u4e00\u4e2a\u7f3a\u5931\u7684\u6570\uff0c\u627e\u51fa\u5b83\u4eec\u3002 LC693 \u4ea4\u66ff\u4f4d\u4e8c\u8fdb\u5236\u6570 \u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u5224\u65ad\u5176\u4e8c\u8fdb\u5236\u8868\u793a\u662f\u5426\u4e3a\u4ea4\u66ff\u4f4d\u3002","title":"4. \u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson12/Lesson12%20Java/","text":"Lesson12 \u4f4d\u8fd0\u7b97\u4e13\u9898 \u76ee\u5f55 1. \u4f4d\u8fd0\u7b97 1.1 \u57fa\u672c\u6982\u5ff5 1.2 \u5e38\u7528\u4f4d\u8fd0\u7b97\u64cd\u4f5c 1.3 \u5e94\u7528\u5b9e\u4f8b 2. \u4f8b\u9898\u8bb2\u89e3 2.1 LC231 2\u7684\u5e42 2.2 LC268 \u4e22\u5931\u7684\u6570\u5b57 3. \u4e3e\u4e00\u53cd\u4e09 3.1 LC2309 \u517c\u5177\u5927\u5c0f\u5199\u7684\u6700\u597d\u82f1\u6587\u5b57\u6bcd 3.2 LC136 \u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57 3.2 LC389 \u627e\u4e0d\u540c 4. \u8bfe\u540e\u7ec3\u4e60 1. \u4f4d\u8fd0\u7b97 \u4f4d\u8fd0\u7b97\u7b80\u4ecb \u4f4d\u8fd0\u7b97\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u7684\u4e00\u79cd\u57fa\u7840\u8fd0\u7b97\u65b9\u5f0f\uff0c\u5b83\u76f4\u63a5\u64cd\u4f5c\u4e8c\u8fdb\u5236\u6570\u7684\u4f4d\u3002\u4f4d\u8fd0\u7b97\u5728\u5904\u7406\u6574\u6570\u3001\u4f18\u5316\u7b97\u6cd5\u3001\u6570\u636e\u538b\u7f29\u7b49\u9886\u57df\u5177\u6709\u91cd\u8981\u5e94\u7528\u3002\u4ee5\u4e0b\u662f\u4f4d\u8fd0\u7b97\u7684\u57fa\u672c\u6982\u5ff5\u3001\u5e38\u7528\u64cd\u4f5c\u53ca\u5e94\u7528\u5b9e\u4f8b\u3002 1.1 \u57fa\u672c\u6982\u5ff5 \u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u6574\u6570\u901a\u5e38\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0f\u5b58\u50a8\u3002\u4f4d\u8fd0\u7b97\u5c31\u662f\u901a\u8fc7\u5bf9\u8fd9\u4e9b\u4e8c\u8fdb\u5236\u4f4d\u8fdb\u884c\u64cd\u4f5c\u6765\u5b9e\u73b0\u7279\u5b9a\u7684\u8ba1\u7b97\u3002\u4f4d\u8fd0\u7b97\u7684\u64cd\u4f5c\u7b26\u76f4\u63a5\u5bf9\u4e8c\u8fdb\u5236\u4f4d\u8fdb\u884c\u5904\u7406\uff0c\u56e0\u6b64\u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u9002\u7528\u4e8e\u9700\u8981\u9ad8\u6548\u8ba1\u7b97\u7684\u573a\u5408\u3002 1.2 \u5e38\u7528\u4f4d\u8fd0\u7b97\u64cd\u4f5c \u6309\u4f4d\u4e0e\uff08AND\uff09 & \u5bf9\u4e24\u4e2a\u6574\u6570\u7684\u6bcf\u4e00\u4f4d\u6267\u884c\u903b\u8f91\u4e0e\u8fd0\u7b97\u3002\u53ea\u6709\u5f53\u4e24\u4e2a\u76f8\u5e94\u7684\u4f4d\u90fd\u662f1\u65f6\uff0c\u7ed3\u679c\u4f4d\u624d\u4e3a1\uff0c\u5426\u5219\u4e3a0\u3002 \u793a\u4f8b \uff1a 5 & 3 = 1 5: 0101 3: 0011 -------------- 0001 (\u7ed3\u679c\u4e3a1) \u6309\u4f4d\u6216\uff08OR\uff09 | \u5bf9\u4e24\u4e2a\u6574\u6570\u7684\u6bcf\u4e00\u4f4d\u6267\u884c\u903b\u8f91\u6216\u8fd0\u7b97\u3002\u53ea\u8981\u5176\u4e2d\u4e00\u4e2a\u76f8\u5e94\u7684\u4f4d\u662f1\uff0c\u7ed3\u679c\u4f4d\u5c31\u4e3a1\u3002 \u793a\u4f8b \uff1a 5 | 3 = 7 5: 0101 3: 0011 -------------- 0111 (\u7ed3\u679c\u4e3a7) \u6309\u4f4d\u5f02\u6216\uff08XOR\uff09 ^ \u5bf9\u4e24\u4e2a\u6574\u6570\u7684\u6bcf\u4e00\u4f4d\u6267\u884c\u903b\u8f91\u5f02\u6216\u8fd0\u7b97\u3002\u5f53\u4e24\u4e2a\u76f8\u5e94\u7684\u4f4d\u4e0d\u540c\u65f6\uff0c\u7ed3\u679c\u4f4d\u4e3a1\uff1b\u76f8\u540c\u65f6\u4e3a0\u3002 \u793a\u4f8b \uff1a 5 ^ 3 = 6 5: 0101 3: 0011 -------------- 0110 (\u7ed3\u679c\u4e3a6) \u5f02\u6216\u8fd0\u7b97\u7684\u6027\u8d28 \uff1a - 1. \u4efb\u4f55\u6570\u548c 0 \u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u4e3a\u8be5\u6570\u672c\u8eab\uff1a a \u2295 0 = a \u3002 - 2. \u4efb\u4f55\u6570\u548c\u81ea\u5df1\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u4e3a 0\uff1a a \u2295 a = 0 \u3002 - 3. \u5f02\u6216\u8fd0\u7b97\u6ee1\u8db3\u4ea4\u6362\u5f8b\u548c\u7ed3\u5408\u5f8b\uff1a a \u2295 b \u2295 a = (a \u2295 a) \u2295 b = 0 \u2295 b = b \u3002 \u6309\u4f4d\u53d6\u53cd\uff08NOT\uff09 ~ \u5bf9\u6bcf\u4e00\u4f4d\u8fdb\u884c\u53d6\u53cd\u64cd\u4f5c\u30020\u53d8\u4e3a1\uff0c1\u53d8\u4e3a0\u3002 \u793a\u4f8b \uff1a ~5 = -6 5: 0101 -------------- 1010 (\u53d6\u53cd\u540e\u4e3a-6\uff0c\u4f7f\u7528\u8865\u7801\u8868\u793a\u6cd5) \u5de6\u79fb\uff08<<\uff09 \u5c06\u4e8c\u8fdb\u5236\u6570\u7684\u6240\u6709\u4f4d\u5411\u5de6\u79fb\u52a8\u6307\u5b9a\u7684\u4f4d\u6570\u3002\u5de6\u79fbn\u4f4d\u76f8\u5f53\u4e8e\u4e58\u4ee5 2^n \u3002 \u793a\u4f8b \uff1a 5 << 1 = 10 5: 0101 -------------- 1010 (\u7ed3\u679c\u4e3a10) \u53f3\u79fb\uff08>>\uff09 \u5c06\u4e8c\u8fdb\u5236\u6570\u7684\u6240\u6709\u4f4d\u5411\u53f3\u79fb\u52a8\u6307\u5b9a\u7684\u4f4d\u6570\u3002\u53f3\u79fbn\u4f4d\u76f8\u5f53\u4e8e\u6574\u9664 2^n \u3002 \u793a\u4f8b \uff1a 5 >> 1 = 2 5: 0101 -------------- 0010 (\u7ed3\u679c\u4e3a2) 1.3 \u5e94\u7528\u5b9e\u4f8b \u5e38\u89c1\u7684\u4f4d\u8fd0\u7b97\u6280\u5de7 \u4f4d\u8fd0\u7b97\u53ef\u4ee5\u9ad8\u6548\u5730\u5904\u7406\u8bb8\u591a\u95ee\u9898\uff0c\u7279\u522b\u662f\u5728\u9700\u8981\u64cd\u4f5c\u4e8c\u8fdb\u5236\u6570\u5b57\u65f6\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u7528\u7684\u4f4d\u8fd0\u7b97\u6280\u5de7\u53ca\u5176\u5e94\u7528\uff1a \u7c7b\u578b 1 \uff1a\u7528\u4e8e\u5224\u65ad 1. \u5224\u65ad\u5947\u5076\u6027 \u6280\u5de7 \uff1a n & 1 \u539f\u7406 \uff1a\u5982\u679c n \u662f\u5947\u6570\uff0c\u90a3\u4e48 n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u7684\u6700\u4f4e\u4f4d\u662f 1\uff1b\u5982\u679c\u662f\u5076\u6570\uff0c\u5219\u6700\u4f4e\u4f4d\u662f 0\u3002\u56e0\u6b64\uff0c n & 1 \u53ef\u4ee5\u76f4\u63a5\u5224\u65ad\u5947\u5076\u6027\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a java boolean isOdd = (n & 1) == 1; 2. \u6e05\u9664\u6700\u4f4e\u4f4d\u7684 1 \uff08\u5224\u65ad\u662f\u5426\u662f 2 \u7684\u5e42\u6b21\u65b9\uff09 \u6280\u5de7 \uff1a n & (n - 1) \u539f\u7406 \uff1a\u5c06 n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u7684\u6700\u4f4e\u4f4d\u7684 1 \u6e05\u9664\u3002\u9002\u7528\u4e8e\u5224\u65ad\u662f\u5426\u4e3a 2 \u7684\u5e42\u6b21\u65b9\uff0c\u4ee5\u53ca\u7edf\u8ba1\u4e8c\u8fdb\u5236\u6570\u4e2d 1 \u7684\u4e2a\u6570\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a java n = n & (n - 1); // \u6e05\u9664\u6700\u4f4e\u4f4d\u7684 1 \u7279\u6027 \uff1a\u5982\u679c n \u662f\u6b63\u6574\u6570\u4e14\u6ee1\u8db3 n & (n - 1) == 0 \uff0c\u8fd9\u610f\u5473\u7740 n \u662f 2 \u7684\u5e42\u3002 \u89e3\u91ca\uff1a \u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u7684 2 \u7684\u5e42 \u5f53\u4e00\u4e2a\u6570\u662f 2 \u7684\u5e42\u65f6\uff0c\u5b83\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d \u53ea\u6709\u4e00\u4e2a\u4f4d\u662f 1 \uff0c\u5176\u4f59\u6240\u6709\u4f4d\u90fd\u662f 0\u3002 \u6bd4\u5982\uff1a 2 0 = 1 -> 0001 (\u4e8c\u8fdb\u5236) 2 1 = 2 -> 0010 2 2 = 4 -> 0100 2 3 = 8 -> 1000 \u8fd9\u610f\u5473\u7740 2 \u7684\u5e42\u603b\u662f\u5f62\u5982 100...0 \u7684\u5f62\u5f0f \uff0c\u5373\u4e00\u4e2a 1 \u540e\u9762\u8ddf\u7740\u82e5\u5e72\u4e2a 0 \u3002 n - 1 \u7684\u4e8c\u8fdb\u5236\u7279\u6027 \u5f53\u6211\u4eec\u4ece\u4e00\u4e2a 2 \u7684\u5e42\u51cf\u53bb 1 \u65f6\uff0c\u7ed3\u679c\u4f1a\u5c06\u539f\u6765\u552f\u4e00\u7684 1 \u53d8\u6210 0 \uff0c\u5e76\u5c06\u5176\u540e\u9762\u7684 0 \u53d8\u6210 1 \u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff1a n = 8 = 1000 2 n - 1 = 7 = 0111 2 \u53ef\u4ee5\u770b\u5230\uff0c n \u548c n - 1 \u5728\u4e8c\u8fdb\u5236\u8868\u793a\u4e0a\u662f\u5b8c\u5168\u4e92\u8865\u7684\uff0c n \u53ea\u6709\u4e00\u4e2a 1 \u540e\u9762\u5168\u662f 0 \uff0c\u800c n - 1 \u5219\u662f\u539f\u6765 1 \u53d8\u6210 0 \uff0c\u540e\u9762\u7684 0 \u5168\u90e8\u53d8\u6210 1 \u3002 \u6309\u4f4d\u4e0e\u8fd0\u7b97 ( n & (n - 1) ) \u6309\u4f4d\u4e0e\u8fd0\u7b97 \u4f1a\u5c06\u4e24\u4e2a\u6570\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u9010\u4f4d\u8fdb\u884c\u6bd4\u8f83\uff0c\u53ea\u6709\u5728\u76f8\u540c\u4f4d\u4e0a\u4e24\u4e2a\u6570\u5b57\u90fd\u662f 1 \u65f6\u7ed3\u679c\u624d\u4e3a 1 \uff0c\u5176\u4ed6\u60c5\u51b5\u4e3a 0 \u3002 \u5bf9\u4e8e 2 \u7684\u5e42 n \uff0c\u5176\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u53ea\u6709\u4e00\u4f4d\u662f 1 \uff0c\u800c n - 1 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u5728\u76f8\u540c\u4f4d\u7f6e\u662f 0 \uff0c\u5176\u5b83\u4f4d\u5219\u662f 1 \u3002\u8fd9\u6837\u4e00\u6765\uff0c n & (n - 1) \u7684\u7ed3\u679c\u4f1a\u662f 0 \uff0c\u56e0\u4e3a\u5728\u4e8c\u8fdb\u5236\u4e2d\u6ca1\u6709\u76f8\u540c\u4f4d\u7f6e\u7684 1 \u4e86\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff1a - n = 8 = 1000 2 - n - 1 = 7 = 0111 2 - 8 & 7 = 1000 2 & 0111 2 = 0000 2 \u4e3a\u4ec0\u4e48 n & (n - 1) \u53ef\u4ee5\u5224\u65ad 2 \u7684\u5e42\uff1f \u5982\u679c n \u662f 2 \u7684\u5e42\uff0c\u5b83\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u53ea\u6709\u4e00\u4e2a 1 \uff0c\u4e14 n - 1 \u4f1a\u4f7f\u8fd9\u4e2a 1 \u7684\u4f4d\u7f6e\u53d8\u4e3a 0 \uff0c\u540e\u9762\u7684 0 \u53d8\u4e3a 1 \u3002\u8fd9\u6837 n & (n - 1) \u7684\u7ed3\u679c\u4e00\u5b9a\u662f 0 \u3002 \u5982\u679c n \u4e0d\u662f 2 \u7684\u5e42\uff0c\u5b83\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u81f3\u5c11\u6709\u4e24\u4e2a 1 \uff0c\u90a3\u4e48 n - 1 \u5e76\u4e0d\u80fd\u5c06\u6240\u6709\u7684 1 \u90fd\u62b5\u6d88\u6389\uff0c n & (n - 1) \u7684\u7ed3\u679c\u5c31\u4e0d\u4f1a\u662f 0 \u3002 3. \u83b7\u53d6\u6700\u4f4e\u4f4d\u7684 1 \uff08\u5224\u65ad\u662f\u5426\u662f 2 \u7684\u5e42\u6b21\u65b9\uff09 n & -n \u8fd9\u4e2a\u6280\u5de7\u53ef\u4ee5\u9ad8\u6548\u5730\u63d0\u53d6\u51fa\u4e00\u4e2a\u6574\u6570\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u6700\u4f4e\u4f4d\u7684 1\u3002\u540c\u6837\uff0c\u5b83\u53ef\u4ee5\u7528\u4e8e\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u5426\u662f 2 \u7684\u5e42\u3002\u8ba9\u6211\u4eec\u901a\u8fc7\u8be6\u7ec6\u89e3\u91ca\u6765\u7406\u89e3\u5176\u539f\u7406\uff1a \u8d1f\u6570\u7684\u4e8c\u8fdb\u5236\u8868\u793a \u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u8d1f\u6570\u662f\u6309\u7167 \u8865\u7801 \u89c4\u5219\u5b58\u50a8\u7684\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u8d1f\u6570\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u662f\u6b63\u6570\u7684\u6bcf\u4e00\u4f4d\u53d6\u53cd\u540e\u52a0 1\u3002 \u6bd4\u5982\uff1a n = 12 = 1100 2 -n = -12 \uff0c\u9996\u5148\u53d6\u53cd 1100 2 -> 0011 2 \uff0c\u7136\u540e\u52a0 1\uff0c\u5f97\u5230 0100 2 n & -n \u7684\u8fd0\u7b97\u539f\u7406 \u5f53\u6211\u4eec\u6267\u884c n & -n \u65f6\uff0c\u8ba1\u7b97\u7ed3\u679c\u4f1a\u4fdd\u7559\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d \u6700\u4f4e\u4f4d\u7684 1 \uff0c\u800c\u5176\u4f59\u4f4d\u90fd\u4f1a\u53d8\u4e3a 0\u3002\u8fd9\u662f\u56e0\u4e3a\uff1a \u5bf9\u4e8e n \uff0c\u5176\u6700\u4f4e\u4f4d\u7684 1 \u4e4b\u540e\u7684\u6240\u6709\u4f4d\u90fd\u662f 0\u3002 \u5bf9\u4e8e -n \uff0c\u6700\u4f4e\u4f4d\u7684 1 \u4ee5\u53ca\u4e4b\u540e\u7684\u6240\u6709\u4f4d\u90fd\u4f1a\u53d6\u53cd\uff0c\u6700\u4f4e\u4f4d\u7684 1 \u4f9d\u7136\u5b58\u5728\uff0c\u800c\u66f4\u9ad8\u4f4d\u5219\u53d8\u4e3a 0\u3002 \u5c06 n \u548c -n \u8fdb\u884c\u6309\u4f4d\u4e0e\u8fd0\u7b97\u65f6\uff0c\u9ad8\u4f4d\u90fd\u4f1a\u53d8\u6210 0\uff0c\u53ea\u6709\u6700\u4f4e\u4f4d\u7684 1 \u4fdd\u7559\u4e0b\u6765\uff0c\u5176\u4ed6\u4f4d\u53d8\u4e3a 0\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff1a n = 12 = 1100 2 -n = -12 = 0100 2 12 & (-12) = 1100 2 & 0100 2 = 0100 2 \u7ed3\u679c\u662f\u4e8c\u8fdb\u5236\u6570\u4e2d\u6700\u4f4e\u4f4d\u7684 1\u3002 n & -n \u5224\u65ad\u662f\u5426\u4e3a 2 \u7684\u5e42 \u5982\u679c n \u662f 2 \u7684\u5e42\uff0c\u5b83\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u53ea\u6709\u4e00\u4e2a 1\uff0c\u540e\u9762\u8ddf\u7740\u82e5\u5e72\u4e2a 0\uff0c\u6bd4\u5982 n = 8 = 1000 2 \u3002 \u5bf9\u4e8e\u8fd9\u6837\u7684\u6570\uff0c n & -n \u7684\u7ed3\u679c\u5fc5\u7136\u7b49\u4e8e n \uff0c\u56e0\u4e3a\u4e8c\u8fdb\u5236\u4e2d\u53ea\u6709\u4e00\u4e2a 1\uff0c\u6309\u4f4d\u4e0e\u4e4b\u540e\u7684\u7ed3\u679c\u4e5f\u53ea\u4f1a\u662f\u8be5\u4f4d\u7684 1\uff0c\u5176\u4ed6\u4f4d\u4e3a 0\u3002 \u56e0\u6b64\uff0c\u5982\u679c n & -n == n \uff0c\u53ef\u4ee5\u786e\u5b9a n \u662f 2 \u7684\u5e42\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff1a n = 8 = 1000 2 -n = -8 = 1000 2 \uff08\u56e0\u4e3a\u6700\u9ad8\u4f4d 1 \u4e4b\u540e\u6ca1\u6709 0\uff0c\u6240\u4ee5\u6ca1\u6709\u53d8\u5316\uff09 8 & -8 = 1000 2 \u6b64\u65f6 n & -n == n \uff0c\u6240\u4ee5 8 \u662f 2 \u7684\u5e42\u3002 4. \u5224\u65ad\u4e24\u4e2a\u6570\u7684\u7b26\u53f7\u662f\u5426\u76f8\u540c \u6280\u5de7 \uff1a (a ^ b) >= 0 \u539f\u7406 \uff1a\u5982\u679c a \u548c b \u7684\u7b26\u53f7\u76f8\u540c\uff0c\u90a3\u4e48\u5b83\u4eec\u7684\u7b26\u53f7\u4f4d\u76f8\u540c\uff0c\u5f02\u6216\u7ed3\u679c\u7684\u7b26\u53f7\u4f4d\u4e3a 0\uff0c\u56e0\u6b64 (a ^ b) >= 0 \u4e3a\u771f\uff1b\u5426\u5219\u4e3a\u5047\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a java boolean sameSign = (a ^ b) >= 0; \u539f\u7406\u89e3\u6790 \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u4e86\u89e3\u6574\u6570\u5728\u8ba1\u7b97\u673a\u4e2d\u7684\u4e8c\u8fdb\u5236\u8868\u793a\uff1a - \u7b26\u53f7\u4f4d \uff1a\u6574\u6570\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\uff0c\u6700\u9ad8\u4f4d\uff08\u6700\u5de6\u8fb9\u7684\u4e00\u4f4d\uff09\u662f \u7b26\u53f7\u4f4d \u3002\u5f53\u7b26\u53f7\u4f4d\u4e3a 0 \u65f6\uff0c\u8868\u793a\u6b63\u6570\uff1b\u5f53\u7b26\u53f7\u4f4d\u4e3a 1 \u65f6\uff0c\u8868\u793a\u8d1f\u6570\u3002 - \u4f8b\u5982\uff0c\u5bf9\u4e8e 32 \u4f4d\u6574\u6570\uff1a - \u6b63\u6570 5 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 00000000 00000000 00000000 00000101 - \u8d1f\u6570 -5 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 11111111 11111111 11111111 11111011 \u901a\u8fc7\u5f02\u6216\u5224\u65ad\u7b26\u53f7 \u6211\u4eec\u53ef\u4ee5\u5229\u7528\u5f02\u6216\u8fd0\u7b97\u6765\u5224\u65ad\u4e24\u4e2a\u6570\u7684\u7b26\u53f7\u662f\u5426\u76f8\u540c\u3002\u5173\u952e\u70b9\u5728\u4e8e\u5f02\u6216\u8fd0\u7b97\u7684\u7ed3\u679c\u7684 \u7b26\u53f7\u4f4d \u3002 \u7b26\u53f7\u4f4d\u5206\u6790 \uff1a \u5982\u679c a \u548c b \u7684\u7b26\u53f7\u76f8\u540c\uff0c\u4e8c\u8005\u7684\u7b26\u53f7\u4f4d\u4e5f\u4f1a\u76f8\u540c\uff0c\u5f02\u6216\u540e\u7684\u7ed3\u679c\u5728\u7b26\u53f7\u4f4d\u4f1a\u662f 0 \uff0c\u5373\u7ed3\u679c\u662f \u975e\u8d1f\u6570 \u3002 \u5982\u679c a \u548c b \u7684\u7b26\u53f7\u4e0d\u540c\uff0c\u4e8c\u8005\u7684\u7b26\u53f7\u4f4d\u4f1a\u4e0d\u540c\uff0c\u5f02\u6216\u540e\u7684\u7ed3\u679c\u5728\u7b26\u53f7\u4f4d\u4f1a\u662f 1 \uff0c\u5373\u7ed3\u679c\u662f \u8d1f\u6570 \u3002 \u76f8\u540c\u7b26\u53f7 \uff1a \u5047\u8bbe a = 5 \u548c b = 10 \uff0c\u5b83\u4eec\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u5982\u4e0b\uff1a a = 5 : 00000000 00000000 00000000 00000101 b = 10 : 00000000 00000000 00000000 00001010 \u5b83\u4eec\u7684\u7b26\u53f7\u4f4d\u90fd\u662f 0 \uff0c\u8868\u793a\u5b83\u4eec\u90fd\u662f\u6b63\u6570\u3002 \u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff1a a ^ b = 00000000 00000000 00000000 00000101 ^ 00000000 00000000 00000000 00001010 ------------------------------------- 00000000 00000000 00000000 00001111 \u7ed3\u679c\u7684\u7b26\u53f7\u4f4d\u4ecd\u7136\u662f 0 \uff0c\u8bf4\u660e\u7ed3\u679c\u662f\u975e\u8d1f\u6570\uff0c\u56e0\u6b64 (a ^ b) >= 0 \u4e3a\u771f\uff0c\u8868\u660e\u5b83\u4eec\u7684\u7b26\u53f7\u76f8\u540c\u3002 \u4e0d\u540c\u7b26\u53f7 \uff1a \u5047\u8bbe a = 5 \u548c b = -10 \uff0c\u5b83\u4eec\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u5982\u4e0b\uff1a a = 5 : 00000000 00000000 00000000 00000101 b = -10 : 11111111 11111111 11111111 11110110 \uff08\u8d1f\u6570\u5728\u8ba1\u7b97\u673a\u4e2d\u4f7f\u7528\u8865\u7801\u8868\u793a\uff09 \u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff1a a ^ b = 00000000 00000000 00000000 00000101 ^ 11111111 11111111 11111111 11110110 ------------------------------------- 11111111 11111111 11111111 11110011 \u7ed3\u679c\u7684\u7b26\u53f7\u4f4d\u662f 1 \uff0c\u8bf4\u660e\u7ed3\u679c\u662f\u8d1f\u6570\uff0c\u56e0\u6b64 (a ^ b) < 0 \u4e3a\u771f\uff0c\u8868\u660e\u5b83\u4eec\u7684\u7b26\u53f7\u4e0d\u540c\u3002 \u603b\u7ed3 \u5982\u679c a \u548c b \u7b26\u53f7\u76f8\u540c \uff0c\u5219 (a ^ b) \u7684\u7b26\u53f7\u4f4d\u4e3a 0 \uff0c\u5f02\u6216\u7ed3\u679c\u4e3a\u975e\u8d1f\u6570\uff0c\u6545 (a ^ b) >= 0 \u4e3a\u771f\u3002 \u5982\u679c a \u548c b \u7b26\u53f7\u4e0d\u540c \uff0c\u5219 (a ^ b) \u7684\u7b26\u53f7\u4f4d\u4e3a 1 \uff0c\u5f02\u6216\u7ed3\u679c\u4e3a\u8d1f\u6570\uff0c\u6545 (a ^ b) >= 0 \u4e3a\u5047\u3002 \u901a\u8fc7\u8fd9\u4e00\u6280\u5de7\uff0c\u6211\u4eec\u53ef\u4ee5\u9ad8\u6548\u5730\u5224\u65ad\u4e24\u4e2a\u6574\u6570\u7684\u7b26\u53f7\u662f\u5426\u76f8\u540c\uff0c\u907f\u514d\u4e86\u4f20\u7edf\u65b9\u6cd5\u4e2d\u7684\u5206\u652f\u5224\u65ad\u903b\u8f91\uff08\u5982 if-else \uff09\u3002 \u7c7b\u578b 2 \u5f02\u6216\u8fd0\u7b97\u6280\u5de7 5. \u4ea4\u6362\u4e24\u4e2a\u6570 \u6280\u5de7 \uff1a\u4f7f\u7528\u4ee5\u4e0b\u4e09\u6b65\u6765\u4ea4\u6362 a \u548c b \u7684\u503c\uff1a java a = a ^ b; b = a ^ b; a = a ^ b; \u5f02\u6216\u8fd0\u7b97\u7684\u539f\u7406 \u5173\u952e\u7684\u5f02\u6216\u8fd0\u7b97\u6027\u8d28\uff1a 1. a ^ a = 0 \uff1a\u4e00\u4e2a\u6570\u4e0e\u81ea\u8eab\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u662f 0\u3002 2. a ^ 0 = a \uff1a\u4e00\u4e2a\u6570\u4e0e 0 \u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u8fd8\u662f\u8be5\u6570\u672c\u8eab\u3002 3. \u4ea4\u6362\u5f8b \uff1a a ^ b = b ^ a \uff0c\u5373\u5f02\u6216\u8fd0\u7b97\u662f\u53ef\u4ea4\u6362\u7684\u3002 4. \u7ed3\u5408\u5f8b \uff1a a ^ (b ^ c) = (a ^ b) ^ c \uff0c\u5373\u5f02\u6216\u8fd0\u7b97\u662f\u53ef\u7ed3\u5408\u7684\u3002 \u57fa\u4e8e\u8fd9\u4e9b\u6027\u8d28\uff0c\u53ef\u4ee5\u901a\u8fc7\u8fde\u7eed\u4e09\u6b21\u5f02\u6216\u8fd0\u7b97\u6765\u5b8c\u6210\u4e24\u4e2a\u53d8\u91cf\u7684\u4ea4\u6362\u3002 \u8be6\u7ec6\u6b65\u9aa4 \u5047\u8bbe\u4e24\u4e2a\u6570\u4e3a a = 5 \u548c b = 3 \uff0c\u6211\u4eec\u6765\u9010\u6b65\u5206\u6790\u901a\u8fc7\u5f02\u6216\u64cd\u4f5c\u4ea4\u6362\u5b83\u4eec\u7684\u503c\u3002 \u7b2c\u4e00\u6b65 \uff1a a = a ^ b \u5bf9 a \u8fdb\u884c\u8d4b\u503c\u64cd\u4f5c\uff1a a = 5 ^ 3 5 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 101 \uff0c 3 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 011 \u3002 a = 101 ^ 011 = 110 \uff0c\u5373 a = 6 \uff08\u6b64\u65f6 a \u7684\u503c\u4e3a 6 \uff0c b \u4ecd\u7136\u662f 3 \uff09\u3002 \u7b2c\u4e8c\u6b65 \uff1a b = a ^ b \u5bf9 b \u8fdb\u884c\u8d4b\u503c\u64cd\u4f5c\uff1a b = a ^ b = 6 ^ 3 6 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 110 \uff0c 3 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 011 \u3002 b = 110 ^ 011 = 101 \uff0c\u5373 b = 5 \uff08\u6b64\u65f6 b \u7684\u503c\u53d8\u6210\u4e86 5 \uff0c a \u4ecd\u7136\u662f 6 \uff09\u3002 \u7b2c\u4e09\u6b65 \uff1a a = a ^ b \u5bf9 a \u8fdb\u884c\u8d4b\u503c\u64cd\u4f5c\uff1a a = a ^ b = 6 ^ 5 6 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 110 \uff0c 5 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 101 \u3002 a = 110 ^ 101 = 011 \uff0c\u5373 a = 3 \uff08\u6b64\u65f6 a \u7684\u503c\u53d8\u6210\u4e86 3 \uff0c\u800c b \u7684\u503c\u662f 5 \uff09\u3002 \u6700\u7ec8\u7ed3\u679c \u901a\u8fc7\u8fd9\u4e09\u6b21\u5f02\u6216\u64cd\u4f5c\uff0c a \u7684\u521d\u59cb\u503c 5 \u88ab\u8d4b\u7ed9\u4e86 b \uff0c\u800c b \u7684\u521d\u59cb\u503c 3 \u88ab\u8d4b\u7ed9\u4e86 a \u3002\u56e0\u6b64\uff0c\u4e24\u4e2a\u6570\u5728\u6ca1\u6709\u4f7f\u7528\u4e34\u65f6\u53d8\u91cf\u7684\u60c5\u51b5\u4e0b\u5b8c\u6210\u4e86\u4ea4\u6362\u3002 \u4ee3\u7801\u793a\u4f8b public class SwapNumbers { public static void main(String[] args) { int a = 5; int b = 3; System.out.println(\"Before swap: a = \" + a + \", b = \" + b); // \u901a\u8fc7\u5f02\u6216\u64cd\u4f5c\u4ea4\u6362 a \u548c b \u7684\u503c a = a ^ b; // a \u53d8\u4e3a a ^ b b = a ^ b; // b \u53d8\u4e3a a a = a ^ b; // a \u53d8\u4e3a b System.out.println(\"After swap: a = \" + a + \", b = \" + b); } } \u8f93\u51fa\u7ed3\u679c\uff1a Before swap: a = 5, b = 3 After swap: a = 3, b = 5 \u7c7b\u578b 3\uff1a\u5feb\u901f\u8fd0\u7b97 6. \u5c06\u6574\u6570\u7684\u7b2c k \u4f4d\u8bbe\u4e3a 1 \u6280\u5de7 \uff1a n | (1 << k) \u539f\u7406 \uff1a\u901a\u8fc7\u5de6\u79fb\u8fd0\u7b97\u5c06 1 \u79fb\u52a8\u5230\u7b2c k \u4f4d\uff0c\u7136\u540e\u4e0e n \u8fdb\u884c\u6309\u4f4d\u6216\u8fd0\u7b97\uff0c\u5c06\u7b2c k \u4f4d\u8bbe\u4e3a 1\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a java n = n | (1 << k); 7. \u5c06\u6574\u6570\u7684\u7b2c k \u4f4d\u8bbe\u4e3a 0 \u6280\u5de7 \uff1a n & ~(1 << k) \u539f\u7406 \uff1a\u5148\u901a\u8fc7\u5de6\u79fb\u8fd0\u7b97\u5c06 1 \u79fb\u52a8\u5230\u7b2c k \u4f4d\uff0c\u7136\u540e\u5bf9\u5176\u53d6\u53cd\uff0c\u5c06\u5176\u4f59\u4f4d\u8bbe\u4e3a 1\uff0c k \u4f4d\u8bbe\u4e3a 0\uff0c\u518d\u4e0e n \u8fdb\u884c\u6309\u4f4d\u4e0e\u8fd0\u7b97\uff0c\u6e05\u9664\u7b2c k \u4f4d\u7684\u503c\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a java n = n & ~(1 << k); 8. \u83b7\u53d6\u6574\u6570\u7684\u7b2c k \u4f4d\u503c \u6280\u5de7 \uff1a (n >> k) & 1 \u539f\u7406 \uff1a\u901a\u8fc7\u53f3\u79fb\u8fd0\u7b97\u5c06\u7b2c k \u4f4d\u79fb\u5230\u6700\u4f4e\u4f4d\uff0c\u7136\u540e\u4e0e 1 \u8fdb\u884c\u6309\u4f4d\u4e0e\u8fd0\u7b97\uff0c\u5224\u65ad\u8be5\u4f4d\u662f 0 \u8fd8\u662f 1\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a java int bit = (n >> k) & 1; 9. \u7edf\u8ba1\u6574\u6570\u7684\u4e8c\u8fdb\u5236\u4e2d 1 \u7684\u4e2a\u6570 \u6280\u5de7 \uff1a\u4f7f\u7528 n & (n - 1) \u4e0d\u65ad\u6e05\u9664\u6700\u4f4e\u4f4d\u7684 1 \u539f\u7406 \uff1a\u6bcf\u6b21\u6267\u884c n & (n - 1) \u90fd\u4f1a\u51cf\u5c11\u4e00\u4e2a 1\uff0c\u76f4\u5230 n \u53d8\u4e3a 0\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a java int count = 0; while (n > 0) { n = n & (n - 1); count++; } \u4e0e\u4f20\u7edf\u65b9\u5f0f\u7684\u6bd4\u8f83 \u4f20\u7edf\u65b9\u6cd5\uff1a\u6574\u9664 2 \u4f20\u7edf\u7684\u65b9\u6cd5\u662f\u901a\u8fc7\u4e0d\u65ad\u5c06 n \u9664\u4ee5 2 \u6765\u5224\u65ad n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u7684 1 \u7684\u4e2a\u6570\u3002\u6bcf\u6b21\u9664\u4ee5 2 \u53ef\u4ee5\u83b7\u53d6\u5f53\u524d\u6700\u53f3\u8fb9\u7684\u4e00\u4f4d\uff0c\u901a\u8fc7\u5224\u65ad\u8fd9\u4f4d\u662f\u5426\u662f 1 \u6765\u589e\u52a0\u8ba1\u6570\u3002 \u793a\u4f8b\u4ee3\u7801 \uff1a java int count = 0; while (n > 0) { if (n % 2 == 1) { count++; } n = n / 2; } \u7f3a\u70b9 \uff1a\u8be5\u65b9\u6cd5\u9700\u8981\u904d\u5386\u4e8c\u8fdb\u5236\u8868\u793a\u7684\u6bcf\u4e00\u4f4d\uff0c\u4e5f\u5c31\u662f\u9700\u8981\u5faa\u73af\u7684\u6b21\u6570\u4e0e n \u7684\u6bd4\u7279\u6570\u6210\u6b63\u6bd4\u3002\u56e0\u6b64\uff0c\u5982\u679c n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u6709\u5f88\u591a 0\uff0c\u8fd9\u79cd\u65b9\u6cd5\u6548\u7387\u8f83\u4f4e\u3002\u5bf9\u4e8e\u4e00\u4e2a 32 \u4f4d\u7684\u6574\u6570\uff0c\u6700\u591a\u9700\u8981\u6267\u884c 32 \u6b21\u64cd\u4f5c\u3002 \u4f7f\u7528 n & (n - 1) \u7684\u65b9\u6cd5 \u901a\u8fc7 n & (n - 1) \uff0c\u6bcf\u6b21\u8fd0\u7b97\u76f4\u63a5\u5c06 n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d \u6700\u4f4e\u4f4d\u7684 1 \u6e05\u9664\u3002\u56e0\u6b64\uff0c\u6267\u884c\u7684\u6b21\u6570\u7b49\u4e8e n \u4e2d 1 \u7684\u4e2a\u6570\uff0c\u800c\u4e0d\u662f\u6bd4\u7279\u6570\u3002 \u539f\u7406 \uff1a n & (n - 1) \u7684\u4f5c\u7528\u662f\u5c06 n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u6700\u4f4e\u4f4d\u7684 1 \u53d8\u4e3a 0\u3002 \u6bcf\u6b21\u6267\u884c\u4e00\u6b21 n & (n - 1) \uff0c\u6211\u4eec\u5c31\u79fb\u9664\u4e86\u4e00\u4e2a 1\uff0c\u76f4\u5230\u6240\u6709\u7684 1 \u90fd\u88ab\u79fb\u9664\uff0c n \u53d8\u4e3a 0 \u4e3a\u6b62\u3002 10. \u5feb\u901f\u8ba1\u7b97 2 \u7684\u5e42 \u6280\u5de7 \uff1a 1 << k \u539f\u7406 \uff1a\u5de6\u79fb\u8fd0\u7b97\u76f8\u5f53\u4e8e\u5c06 1 \u5411\u5de6\u79fb\u52a8 k \u4f4d\uff0c\u8fd9\u6837\u53ef\u4ee5\u5feb\u901f\u5f97\u5230 2^k \u7684\u7ed3\u679c\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a java int powerOfTwo = 1 << k; // \u7b49\u540c\u4e8e 2^k 2. \u4f8b\u9898\u8bb2\u89e3 2.1 LC231 2\u7684\u5e42 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u4f60\u4e00\u4e2a\u6574\u6570 n \uff0c\u8bf7\u4f60\u5224\u65ad\u8be5\u6574\u6570\u662f\u5426\u662f 2 \u7684\u5e42\u6b21\u65b9\u3002\u5982\u679c\u662f\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002 \u5982\u679c\u5b58\u5728\u4e00\u4e2a\u6574\u6570 x \u4f7f\u5f97 n == 2^x \uff0c\u5219\u8ba4\u4e3a n \u662f 2 \u7684\u5e42\u6b21\u65b9\u3002 \u53c2\u8003\u89e3\u7b54 \u4e00\u4e2a\u6570 n \u662f 2 \u7684\u5e42\uff0c\u5f53\u4e14\u4ec5\u5f53 n \u662f\u6b63\u6574\u6570\uff0c\u5e76\u4e14 n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u4ec5\u5305\u542b 1 \u4e2a 1\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u4f4d\u8fd0\u7b97\u6280\u5de7\u6765\u5224\u65ad\u3002 \u4f7f\u7528 n & (n - 1) \u5224\u65ad java class Solution { public boolean isPowerOfTwo(int n) { return n > 0 && (n & (n - 1)) == 0; } } \u4f7f\u7528 n & (-n) \u5224\u65ad java class Solution { public boolean isPowerOfTwo(int n) { return n > 0 && (n & -n) == n; } } 2.2 LC268 \u4e22\u5931\u7684\u6570\u5b57 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b [0, n] \u4e2d n \u4e2a\u6570\u7684\u6570\u7ec4 nums \uff0c\u627e\u51fa [0, n] \u8fd9\u4e2a\u8303\u56f4\u5185\u6ca1\u6709\u51fa\u73b0\u5728\u6570\u7ec4\u4e2d\u7684\u90a3\u4e2a\u6570\u3002 \u601d\u8def\u8bb2\u89e3 \u65b9\u6cd5\u4e00\uff1a\u4f7f\u7528 HashSet \u89e3\u9898\u601d\u8def \u6784\u5efa\u4e00\u4e2a HashSet \uff1a\u5c06\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u6570\u5b58\u5165 HashSet \u4e2d\u3002 \u904d\u5386\u67e5\u627e\u7f3a\u5931\u7684\u6570\u5b57 \uff1a\u7136\u540e\u904d\u5386 [0, n] \u7684\u6240\u6709\u6570\uff0c\u68c0\u67e5\u54ea\u4e2a\u6570\u5b57\u4e0d\u5728 HashSet \u4e2d\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u4e00\u65e6\u53d1\u73b0\u67d0\u4e2a\u6570\u5b57\u4e0d\u5728 HashSet \u4e2d\uff0c\u5373\u53ef\u8fd4\u56de\u8be5\u6570\u5b57\u4f5c\u4e3a\u7f3a\u5931\u7684\u6570\u5b57\u3002 \u53c2\u8003\u89e3\u7b54 import java.util.HashSet; import java.util.Set; class Solution { public int missingNumber(int[] nums) { // \u521b\u5efa\u4e00\u4e2a\u54c8\u5e0c\u96c6\u5408\u5b58\u50a8\u6570\u7ec4\u4e2d\u7684\u6570 Set<Integer> numSet = new HashSet<>(); // \u5c06\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u6570\u52a0\u5165\u5230\u96c6\u5408\u4e2d for (int num : nums) { numSet.add(num); } // \u904d\u5386 [0, n]\uff0c\u627e\u51fa\u6ca1\u6709\u51fa\u73b0\u5728\u96c6\u5408\u4e2d\u7684\u6570 for (int i = 0; i <= nums.length; i++) { if (!numSet.contains(i)) { return i; // \u627e\u5230\u7f3a\u5931\u7684\u6570\u5b57 } } return -1; // \u5982\u679c\u6ca1\u6709\u627e\u5230\u7f3a\u5931\u7684\u6570\u5b57\uff0c\u8fd4\u56de-1\uff08\u5b9e\u9645\u4e0d\u4f1a\u53d1\u751f\uff09 } } \u65b9\u6cd5\u4e8c\uff1a\u4f7f\u7528\u4f4d\u8fd0\u7b97\uff08\u5f02\u6216\uff09 \u89e3\u9898\u601d\u8def \u8fd9\u9053\u9898\u7684\u6838\u5fc3\u601d\u8def\u662f\u57fa\u4e8e \u5f02\u6216\u8fd0\u7b97 \u7684\u6027\u8d28\u6765\u627e\u5230\u4e22\u5931\u7684\u6570\u5b57\u3002\u6e29\u4e60\u5f02\u6216\u8fd0\u7b97\u7684\u4ee5\u4e0b\u51e0\u4e2a\u5173\u952e\u6027\u8d28\uff1a \u4ea4\u6362\u5f8b\u548c\u7ed3\u5408\u5f8b \uff1a a ^ b ^ c \u548c a ^ c ^ b \u7684\u7ed3\u679c\u76f8\u540c\uff0c\u5373\u987a\u5e8f\u65e0\u5173\u3002 \u76f8\u540c\u6570\u5b57\u5f02\u6216\u4e3a 0 \uff1a a ^ a = 0 \uff0c\u5373\u4e24\u4e2a\u76f8\u540c\u7684\u6570\u5b57\u5f02\u6216\u4f1a\u4e92\u76f8\u62b5\u6d88\u4e3a 0\u3002 \u4efb\u4f55\u6570\u5b57\u4e0e 0 \u5f02\u6216\u7b49\u4e8e\u81ea\u8eab \uff1a a ^ 0 = a \u3002 \u5177\u4f53\u6b65\u9aa4\uff1a \u521d\u59cb\u5316\u53d8\u91cf \uff1a missing \u53d8\u91cf\u521d\u59cb\u503c\u4e3a 0\uff0c\u7528\u4e8e\u5b58\u50a8\u5f02\u6216\u7ed3\u679c\u3002 n = nums.length \uff0c\u8868\u793a\u6570\u7ec4\u7684\u957f\u5ea6\u3002 \u7b2c\u4e00\u8f6e\u5faa\u73af (\u5f02\u6216\u6570\u7ec4\u4e2d\u7684\u5143\u7d20) \uff1a \u5728 for \u5faa\u73af\u4e2d\uff0c missing \u4f1a\u4f9d\u6b21\u4e0e\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\u3002 \u5047\u8bbe nums = [3, 0, 1] \uff0c\u8fd9\u65f6 missing \u5c06\u4f9d\u6b21\u53d8\u4e3a missing = 0 ^ 3 ^ 0 ^ 1 \u3002 \u8fd9\u4e00\u6b65\u9aa4\u7684\u76ee\u7684\u662f\u901a\u8fc7\u5f02\u6216\u5c06 nums \u6570\u7ec4\u4e2d\u7684\u6240\u6709\u5143\u7d20\u8bb0\u5f55\u5230 missing \u4e2d\u3002 \u7b2c\u4e8c\u8f6e\u5faa\u73af (\u5f02\u6216\u8303\u56f4 [0, n]) \uff1a \u7b2c\u4e8c\u4e2a for \u5faa\u73af\u4ece 0 \u5230 n \uff0c missing \u5c06\u4f9d\u6b21\u4e0e [0, n] \u8fd9\u4e2a\u8303\u56f4\u7684\u6240\u6709\u6570\u5b57\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\u3002 \u7531\u4e8e\u4e22\u5931\u7684\u6570\u5b57\u5b58\u5728\u4e8e [0, n] \u4e2d\uff0c\u4f46\u4e0d\u5728 nums \u4e2d\uff0c\u901a\u8fc7\u8fd9\u4e2a\u6b65\u9aa4\uff0c missing \u4f1a\u53d8\u4e3a\u6700\u7ec8\u7684\u4e22\u5931\u6570\u5b57\u3002 \u5229\u7528\u5f02\u6216\u6027\u8d28 \uff1a \u6700\u7ec8\uff0c\u6240\u6709\u6210\u5bf9\u51fa\u73b0\u7684\u6570\u5b57\u90fd\u4f1a\u88ab\u62b5\u6d88\u4e3a 0 \uff0c\u5269\u4e0b\u7684\u5c31\u662f\u90a3\u4e2a\u6ca1\u6709\u6210\u5bf9\u51fa\u73b0\u7684\u6570\u5b57\uff0c\u4e5f\u5c31\u662f\u4e22\u5931\u7684\u6570\u5b57\u3002 \u53c2\u8003\u89e3\u7b54 class Solution { public int missingNumber(int[] nums) { int missing = 0; int n = nums.length; for (int i = 0; i < n; i++) { missing ^= nums[i]; } for (int i = 0; i <= n; i++) { missing ^= i; } return missing; } } 3. \u4e3e\u4e00\u53cd\u4e09 3.1 LC2309 \u517c\u5177\u5927\u5c0f\u5199\u7684\u6700\u597d\u82f1\u6587\u5b57\u6bcd \u95ee\u9898\u63cf\u8ff0 \u7ed9\u4f60\u4e00\u4e2a\u7531\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\u7684\u5b57\u7b26\u4e32 s \uff0c\u8bf7\u4f60\u627e\u51fa\u5e76\u8fd4\u56de s \u4e2d\u7684\u6700\u597d\u82f1\u6587\u5b57\u6bcd\u3002\u8fd4\u56de\u7684\u5b57\u6bcd\u5fc5\u987b\u4e3a\u5927\u5199\u5f62\u5f0f\u3002\u5982\u679c\u4e0d\u5b58\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u5b57\u6bcd\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32\u3002 \u6700\u597d\u82f1\u6587\u5b57\u6bcd\u7684\u5927\u5199\u548c\u5c0f\u5199\u5f62\u5f0f\u5fc5\u987b\u90fd\u5728 s \u4e2d\u51fa\u73b0\u3002 \u82f1\u6587\u5b57\u6bcd b \u6bd4\u53e6\u4e00\u4e2a\u82f1\u6587\u5b57\u6bcd a \u66f4\u597d \u7684\u524d\u63d0\u662f\uff1a\u82f1\u6587\u5b57\u6bcd\u8868\u4e2d\uff0c b \u5728 a \u4e4b\u540e\u51fa\u73b0\u3002 \u8bf7\u4f7f\u7528\u5c1d\u8bd5\u54c8\u5e0c\u8868\u548c\u4f4d\u8fd0\u7b97\u4e24\u79cd\u65b9\u5f0f\u89e3\u7b54\u6b64\u9898 \u89e3\u9898\u601d\u8def1\uff1a\u54c8\u5e0c\u8868 \u4f7f\u7528\u54c8\u5e0c\u8868 ht \u4fdd\u5b58\u5b57\u7b26\u4e32 s \u4e2d\u51fa\u73b0\u8fc7\u7684\u5b57\u7b26\u3002\u904d\u5386\u5b57\u7b26\u4e32 s \uff0c\u5c06\u5f53\u524d\u5b57\u7b26 c \u52a0\u5165\u5230\u54c8\u5e0c\u8868 ht \u4e2d\u3002 \u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u82f1\u6587\u5b57\u6bcd\uff0c\u5982\u679c\u4e00\u4e2a\u82f1\u6587\u5b57\u6bcd\u7684\u5927\u5199\u5f62\u5f0f\u548c\u5c0f\u5199\u5f62\u5f0f\u90fd\u51fa\u73b0\u5728\u54c8\u5e0c\u8868 ht \u4e2d\uff0c\u90a3\u4e48\u76f4\u63a5\u8fd4\u56de\u8be5\u82f1\u6587\u5b57\u6bcd\u3002\u5982\u679c\u6240\u6709\u7684\u82f1\u6587\u5b57\u6bcd\u90fd\u4e0d\u7b26\u5408\u8981\u6c42\uff0c\u90a3\u4e48\u76f4\u63a5\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002 \u53c2\u8003\u89e3\u7b541 import java.util.HashSet; import java.util.Set; class Solution { public String greatestLetter(String s) { Set<Character> ht = new HashSet<Character>(); for (int i = 0; i < s.length(); i++) { char c = s.charAt(i); ht.add(c); } for (int i = 25; i >= 0; i--) { if (ht.contains((char) ('a' + i)) && ht.contains((char) ('A' + i))) { return String.valueOf((char) ('A' + i)); } } return \"\"; } } \u89e3\u9898\u601d\u8def2\uff1a\u4f4d\u8fd0\u7b97 \u4f7f\u7528\u4e24\u4e2a 32 \u4f4d\u6574\u6570 lower \u548c upper \u5206\u522b\u8868\u793a\u5b57\u7b26\u4e32 s \u4e2d\u5c0f\u5199\u5b57\u6bcd\u548c\u5927\u5199\u5b57\u6bcd\u7684\u51fa\u73b0\u60c5\u51b5\u3002 \u904d\u5386\u5b57\u7b26\u4e32 s \uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5b57\u7b26 c \uff1a \u5982\u679c c \u662f\u5c0f\u5199\u5b57\u6bcd\uff0c\u5c06 lower \u7684\u5bf9\u5e94\u4f4d\u7f6e\u8bbe\u4e3a 1\uff1b \u5982\u679c c \u662f\u5927\u5199\u5b57\u6bcd\uff0c\u5c06 upper \u7684\u5bf9\u5e94\u4f4d\u7f6e\u8bbe\u4e3a 1\u3002 \u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u82f1\u6587\u5b57\u6bcd\uff0c\u5982\u679c\u53d1\u73b0\u67d0\u4e2a\u82f1\u6587\u5b57\u6bcd\u7684\u5927\u5c0f\u5199\u5f62\u5f0f\u5728 lower \u548c upper \u4e2d\u90fd\u51fa\u73b0\uff0c\u90a3\u4e48\u8fd4\u56de\u8be5\u5b57\u6bcd\u3002 \u5982\u679c\u6240\u6709\u7684\u5b57\u6bcd\u90fd\u4e0d\u7b26\u5408\u8981\u6c42\uff0c\u5219\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002 \u4f4d\u8fd0\u7b97\u6280\u5de7 lower |= 1 << (c - 'a') \uff1a\u5c06\u5b57\u7b26 c \u5bf9\u5e94\u7684\u4f4d\u6570\u7f6e\u4e3a 1\uff0c\u8868\u793a\u8be5\u5b57\u7b26\u51fa\u73b0\u8fc7\u3002 upper |= 1 << (c - 'A') \uff1a\u540c\u7406\uff0c\u5c06\u5927\u5199\u5b57\u7b26 c \u5bf9\u5e94\u7684\u4f4d\u6570\u7f6e\u4e3a 1\u3002 lower & upper & (1 << i) \uff1a\u5224\u65ad\u5c0f\u5199\u548c\u5927\u5199\u7684\u7b2c i \u4f4d\u662f\u5426\u90fd\u4e3a 1\uff0c\u8868\u793a\u8be5\u5b57\u6bcd\u7684\u5927\u5c0f\u5199\u90fd\u51fa\u73b0\u8fc7\u3002 \u53c2\u8003\u89e3\u7b542 class Solution { public String greatestLetter(String s) { int lower = 0, upper = 0; for (int i = 0; i < s.length(); i++) { char c = s.charAt(i); if (Character.isLowerCase(c)) { lower |= 1 << (c - 'a'); } else { upper |= 1 << (c - 'A'); } } for (int i = 25; i >= 0; i--) { if ((lower & upper & (1 << i)) != 0) { return String.valueOf((char) ('A' + i)); } } return \"\"; } } 3.2 LC136 \u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57 \u9898\u76ee\u63cf\u8ff0 \u7ed9\u4f60\u4e00\u4e2a\u975e\u7a7a\u6574\u6570\u6570\u7ec4 nums \uff0c\u9664\u4e86\u67d0\u4e2a\u5143\u7d20\u53ea\u51fa\u73b0\u4e00\u6b21\u4ee5\u5916\uff0c\u5176\u4f59\u6bcf\u4e2a\u5143\u7d20\u5747\u51fa\u73b0\u4e24\u6b21\u3002\u627e\u51fa\u90a3\u4e2a\u53ea\u51fa\u73b0\u4e86\u4e00\u6b21\u7684\u5143\u7d20\u3002 \u89e3\u9898\u601d\u8def1 \u5f02\u6216\u8fd0\u7b97 \u5bf9\u4e8e\u8fd9\u9053\u9898\u76ee\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 \u5f02\u6216\u8fd0\u7b97 \uff08 \u2295 \uff09\u3002\u5f02\u6216\u8fd0\u7b97\u6709\u4ee5\u4e0b\u4e09\u4e2a\u6027\u8d28\uff1a \u4efb\u4f55\u6570\u548c 0 \u505a\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u4ecd\u7136\u662f\u539f\u6765\u7684\u6570\uff0c\u5373 a \u2295 0 = a \u3002 \u4efb\u4f55\u6570\u548c\u5176\u81ea\u8eab\u505a\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u662f 0 \uff0c\u5373 a \u2295 a = 0 \u3002 \u5f02\u6216\u8fd0\u7b97\u6ee1\u8db3\u4ea4\u6362\u5f8b\u548c\u7ed3\u5408\u5f8b\uff0c\u5373 a \u2295 b \u2295 a = b \u2295 a \u2295 a = b \u2295 (a \u2295 a) = b \u2295 0 = b \u3002 \u5047\u8bbe\u6570\u7ec4\u4e2d\u6709 2m + 1 \u4e2a\u6570\uff0c\u5176\u4e2d\u6709 m \u4e2a\u6570\u5404\u51fa\u73b0\u4e24\u6b21\uff0c\u4e00\u4e2a\u6570\u51fa\u73b0\u4e00\u6b21\u3002\u4ee4 a 1 , a 2 , ..., a m \u4e3a\u51fa\u73b0\u4e24\u6b21\u7684 m \u4e2a\u6570\uff0ca m+1 \u4e3a\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u3002\u6839\u636e\u6027\u8d28 3\uff0c\u6570\u7ec4\u4e2d\u7684\u5168\u90e8\u5143\u7d20\u7684\u5f02\u6216\u8fd0\u7b97\u7ed3\u679c\u603b\u662f\u53ef\u4ee5\u5199\u6210\u5982\u4e0b\u5f62\u5f0f\uff1a (a 1 \u2295 a 1 ) \u2295 (a 2 \u2295 a 2 ) \u2295 \u22ef \u2295 (a m \u2295 a m ) \u2295 a m+1 \u6839\u636e\u6027\u8d28 2 \u548c\u6027\u8d28 1\uff0c\u4e0a\u5f0f\u53ef\u4ee5\u5316\u7b80\u4e3a\uff1a 0 \u2295 0 \u2295 \u22ef \u2295 0 \u2295 a m+1 = a m+1 \u56e0\u6b64\uff0c\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u5143\u7d20\u7684\u5f02\u6216\u8fd0\u7b97\u7ed3\u679c\u5c31\u662f\u6570\u7ec4\u4e2d\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u90a3\u4e2a\u6570\u3002 \u4ee3\u7801\u5b9e\u73b0 class Solution { public int singleNumber(int[] nums) { int single = 0; for (int num : nums) { single ^= num; } return single; } } \u89e3\u9898\u601d\u8def2 HashSet \u6211\u4eec\u53ef\u4ee5\u5229\u7528 HashSet \u7684\u7279\u70b9\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 \u5982\u679c\u4e00\u4e2a\u6570\u5b57\u5728\u96c6\u5408\u4e2d\u51fa\u73b0\u4e86\uff0c\u6211\u4eec\u5c06\u5176\u4ece\u96c6\u5408\u4e2d\u79fb\u9664\u3002 \u5982\u679c\u4e00\u4e2a\u6570\u5b57\u6ca1\u6709\u51fa\u73b0\u5728\u96c6\u5408\u4e2d\uff0c\u6211\u4eec\u5c06\u5176\u6dfb\u52a0\u5230\u96c6\u5408\u4e2d\u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u6570\u5b57\uff0c\u6211\u4eec\u53ea\u4f1a\u4fdd\u7559\u5b83\u5728\u96c6\u5408\u4e2d\u51fa\u73b0\u4e00\u6b21\u7684\u8bb0\u5f55\u3002\u5982\u679c\u67d0\u4e2a\u6570\u5b57\u51fa\u73b0\u4e86\u4e24\u6b21\uff0c\u5b83\u5c06\u88ab\u79fb\u9664\uff0c\u6700\u7ec8\u96c6\u5408\u4e2d\u5269\u4e0b\u7684\u552f\u4e00\u5143\u7d20\u5c31\u662f\u90a3\u4e2a\u53ea\u51fa\u73b0\u4e86\u4e00\u6b21\u7684\u6570\u5b57\u3002 \u89e3\u9898\u6b65\u9aa4 \u521b\u5efa\u4e00\u4e2a HashSet \uff0c\u7528\u4e8e\u5b58\u50a8\u6570\u7ec4\u4e2d\u7684\u6570\u5b57\u3002 \u904d\u5386\u6570\u7ec4\uff1a \u5982\u679c\u5f53\u524d\u6570\u5b57\u5df2\u7ecf\u5728\u96c6\u5408\u4e2d\u5b58\u5728\uff0c\u8bf4\u660e\u5b83\u662f\u91cd\u590d\u7684\uff0c\u5c06\u5176\u4ece\u96c6\u5408\u4e2d\u79fb\u9664\u3002 \u5982\u679c\u5f53\u524d\u6570\u5b57\u4e0d\u5728\u96c6\u5408\u4e2d\uff0c\u8bf4\u660e\u5b83\u662f\u7b2c\u4e00\u6b21\u51fa\u73b0\uff0c\u5c06\u5176\u52a0\u5165\u96c6\u5408\u3002 \u904d\u5386\u7ed3\u675f\u540e\uff0c\u96c6\u5408\u4e2d\u4ec5\u5269\u4e0b\u7684\u4e00\u4e2a\u5143\u7d20\u5c31\u662f\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57\u3002 \u56e0\u4e3a\u9898\u76ee\u4e2d\u7ed9\u5b9a\u7684\u6761\u4ef6\u662f\u53ea\u6709\u4e00\u4e2a\u6570\u5b57\u51fa\u73b0\u4e86\u4e00\u6b21\uff0c\u5176\u4f59\u7684\u6570\u5b57\u90fd\u51fa\u73b0\u4e86\u4e24\u6b21\uff0c\u6700\u7ec8 HashSet \u4e2d\u53ea\u4f1a\u5269\u4e0b\u90a3\u4e2a\u552f\u4e00\u7684\u6570\u5b57\u3002 \u4ee3\u7801\u5b9e\u73b0 import java.util.HashSet; class Solution { public int singleNumber(int[] nums) { HashSet<Integer> set = new HashSet<>(); for (int num : nums) { if (set.contains(num)) { set.remove(num); // \u79fb\u9664\u5df2\u7ecf\u51fa\u73b0\u4e24\u6b21\u7684\u6570\u5b57 } else { set.add(num); // \u6dfb\u52a0\u9996\u6b21\u51fa\u73b0\u7684\u6570\u5b57 } } // HashSet \u4e2d\u5269\u4e0b\u7684\u552f\u4e00\u5143\u7d20\u5c31\u662f\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57 return set.iterator().next(); } } 3.3 LC389 \u627e\u4e0d\u540c \u9898\u76ee\u63cf\u8ff0 \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 s \u548c t \uff0c\u5b83\u4eec\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u3002 \u5b57\u7b26\u4e32 t \u7531\u5b57\u7b26\u4e32 s \u968f\u673a\u91cd\u6392\uff0c\u7136\u540e\u5728\u968f\u673a\u4f4d\u7f6e\u6dfb\u52a0\u4e00\u4e2a\u5b57\u6bcd\u3002 \u8bf7\u627e\u51fa\u5728 t \u4e2d\u88ab\u6dfb\u52a0\u7684\u5b57\u6bcd\u3002 \u5c1d\u8bd5\u4f7f\u7528 LC136 \u9898\u76ee\u7684\u4f4d\u8fd0\u7b97\u6280\u5de7\u89e3\u51b3\u672c\u9898 \u601d\u8def\u8bb2\u89e3 \u9898\u76ee\u8981\u6c42\u627e\u51fa\u5728\u5b57\u7b26\u4e32 t \u4e2d\u591a\u51fa\u6765\u7684\u90a3\u4e2a\u5b57\u7b26\u3002 \u6211\u4eec\u53ef\u4ee5\u5c06\u4e24\u4e2a\u5b57\u7b26\u4e32\u62fc\u63a5\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u628a\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42\u8fd9\u4e2a\u62fc\u63a5\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u5947\u6570\u6b21\u7684\u5b57\u7b26\u3002\u56e0\u4e3a\u5176\u4ed6\u5b57\u7b26\u90fd\u4f1a\u51fa\u73b0\u5076\u6570\u6b21\uff0c\u6700\u7ec8\u7684\u7ed3\u679c\u53ea\u4f1a\u5269\u4e0b\u90a3\u4e2a\u51fa\u73b0\u5947\u6570\u6b21\u7684\u5b57\u7b26\u3002 \u7c7b\u4f3c\u4e8e\u300c136. \u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57\u300d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 \u5f02\u6216\u8fd0\u7b97 \u6765\u89e3\u51b3\u6b64\u95ee\u9898\uff1a \u5f02\u6216\u8fd0\u7b97\u7684\u6027\u8d28 \uff1a \u4efb\u4f55\u6570\u548c 0 \u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u4e3a\u8be5\u6570\u672c\u8eab\uff1a a \u2295 0 = a \u3002 \u4efb\u4f55\u6570\u548c\u81ea\u5df1\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u4e3a 0\uff1a a \u2295 a = 0 \u3002 \u5f02\u6216\u8fd0\u7b97\u6ee1\u8db3\u4ea4\u6362\u5f8b\u548c\u7ed3\u5408\u5f8b\uff1a a \u2295 b \u2295 a = (a \u2295 a) \u2295 b = 0 \u2295 b = b \u3002 \u6839\u636e\u8fd9\u4e9b\u6027\u8d28\uff0c\u5982\u679c\u6211\u4eec\u5c06 s \u548c t \u7684\u6240\u6709\u5b57\u7b26\u90fd\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u6210\u5bf9\u51fa\u73b0\u7684\u5b57\u7b26\u6700\u7ec8\u4f1a\u62b5\u6d88\uff0c\u5269\u4e0b\u7684\u5c31\u662f t \u4e2d\u90a3\u4e2a\u591a\u51fa\u6765\u7684\u5b57\u7b26\u3002 \u89e3\u9898\u6b65\u9aa4 \u521d\u59cb\u5316\u4e00\u4e2a\u6574\u6570 ret \uff0c\u8868\u793a\u5f02\u6216\u7ed3\u679c\uff0c\u521d\u59cb\u503c\u4e3a 0\u3002 \u904d\u5386\u5b57\u7b26\u4e32 s \u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\uff0c\u5c06\u5b57\u7b26\u7684 ASCII \u503c\u4e0e ret \u8fdb\u884c\u5f02\u6216\u64cd\u4f5c\u3002 \u904d\u5386\u5b57\u7b26\u4e32 t \u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\uff0c\u540c\u6837\u5c06\u5176 ASCII \u503c\u4e0e ret \u8fdb\u884c\u5f02\u6216\u64cd\u4f5c\u3002 \u8fd4\u56de\u6700\u7ec8 ret \u7684\u503c\uff0c\u5b83\u5c31\u662f\u90a3\u4e2a\u591a\u51fa\u6765\u7684\u5b57\u7b26\u3002 \u4ee3\u7801\u5b9e\u73b0 class Solution { public char findTheDifference(String s, String t) { int ret = 0; // \u5bf9\u5b57\u7b26\u4e32 s \u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u8fdb\u884c\u5f02\u6216\u64cd\u4f5c for (int i = 0; i < s.length(); ++i) { ret ^= s.charAt(i); } // \u5bf9\u5b57\u7b26\u4e32 t \u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u8fdb\u884c\u5f02\u6216\u64cd\u4f5c for (int i = 0; i < t.length(); ++i) { ret ^= t.charAt(i); } // \u8fd4\u56de\u5f02\u6216\u7ed3\u679c\uff0c\u5373\u591a\u51fa\u6765\u7684\u5b57\u7b26 return (char) ret; } } 4. \u8bfe\u540e\u7ec3\u4e60 \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC868 \u4e8c\u8fdb\u5236\u95f4\u8ddd \u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u8ba1\u7b97\u5b83\u5728\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u4e24\u4e2a\u76f8\u90bb\u7684 1 \u4e4b\u95f4\u7684\u6700\u5927\u8ddd\u79bb\u3002 LC1486 \u6570\u7ec4\u5f02\u6216\u64cd\u4f5c \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570 n \u548c\u4e00\u4e2a\u6574\u6570 start\uff0c\u751f\u6210\u4e00\u4e2a\u6570\u7ec4\uff0c\u8fd4\u56de\u6570\u7ec4\u4e2d\u6240\u6709\u5143\u7d20\u7684\u5f02\u6216\u7ed3\u679c\u3002 LC1720 \u89e3\u7801\u5f02\u6216\u540e\u7684\u6570\u7ec4 \u7ed9\u5b9a\u4e00\u4e2a\u5f02\u6216\u540e\u7684\u6570\u7ec4\uff0c\u8fd4\u56de\u5176\u539f\u59cb\u6570\u7ec4\u3002 LC645 \u9519\u8bef\u7684\u96c6\u5408 \u96c6\u5408 S \u5305\u542b [1, n] \u4e2d\u7684 n \u4e2a\u6574\u6570\uff0c\u4f46\u5176\u4e2d\u6709\u4e00\u4e2a\u91cd\u590d\u7684\u6570\u548c\u4e00\u4e2a\u7f3a\u5931\u7684\u6570\uff0c\u627e\u51fa\u5b83\u4eec\u3002 LC693 \u4ea4\u66ff\u4f4d\u4e8c\u8fdb\u5236\u6570 \u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u5224\u65ad\u5176\u4e8c\u8fdb\u5236\u8868\u793a\u662f\u5426\u4e3a\u4ea4\u66ff\u4f4d\u3002","title":"Lesson12 \u4f4d\u8fd0\u7b97\u4e13\u9898"},{"location":"lesson12/Lesson12%20Java/#lesson12","text":"","title":"Lesson12 \u4f4d\u8fd0\u7b97\u4e13\u9898"},{"location":"lesson12/Lesson12%20Java/#_1","text":"1. \u4f4d\u8fd0\u7b97 1.1 \u57fa\u672c\u6982\u5ff5 1.2 \u5e38\u7528\u4f4d\u8fd0\u7b97\u64cd\u4f5c 1.3 \u5e94\u7528\u5b9e\u4f8b 2. \u4f8b\u9898\u8bb2\u89e3 2.1 LC231 2\u7684\u5e42 2.2 LC268 \u4e22\u5931\u7684\u6570\u5b57 3. \u4e3e\u4e00\u53cd\u4e09 3.1 LC2309 \u517c\u5177\u5927\u5c0f\u5199\u7684\u6700\u597d\u82f1\u6587\u5b57\u6bcd 3.2 LC136 \u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57 3.2 LC389 \u627e\u4e0d\u540c 4. \u8bfe\u540e\u7ec3\u4e60","title":"\u76ee\u5f55"},{"location":"lesson12/Lesson12%20Java/#1","text":"","title":"1. \u4f4d\u8fd0\u7b97"},{"location":"lesson12/Lesson12%20Java/#_2","text":"\u4f4d\u8fd0\u7b97\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u7684\u4e00\u79cd\u57fa\u7840\u8fd0\u7b97\u65b9\u5f0f\uff0c\u5b83\u76f4\u63a5\u64cd\u4f5c\u4e8c\u8fdb\u5236\u6570\u7684\u4f4d\u3002\u4f4d\u8fd0\u7b97\u5728\u5904\u7406\u6574\u6570\u3001\u4f18\u5316\u7b97\u6cd5\u3001\u6570\u636e\u538b\u7f29\u7b49\u9886\u57df\u5177\u6709\u91cd\u8981\u5e94\u7528\u3002\u4ee5\u4e0b\u662f\u4f4d\u8fd0\u7b97\u7684\u57fa\u672c\u6982\u5ff5\u3001\u5e38\u7528\u64cd\u4f5c\u53ca\u5e94\u7528\u5b9e\u4f8b\u3002","title":"\u4f4d\u8fd0\u7b97\u7b80\u4ecb"},{"location":"lesson12/Lesson12%20Java/#11","text":"\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u6574\u6570\u901a\u5e38\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0f\u5b58\u50a8\u3002\u4f4d\u8fd0\u7b97\u5c31\u662f\u901a\u8fc7\u5bf9\u8fd9\u4e9b\u4e8c\u8fdb\u5236\u4f4d\u8fdb\u884c\u64cd\u4f5c\u6765\u5b9e\u73b0\u7279\u5b9a\u7684\u8ba1\u7b97\u3002\u4f4d\u8fd0\u7b97\u7684\u64cd\u4f5c\u7b26\u76f4\u63a5\u5bf9\u4e8c\u8fdb\u5236\u4f4d\u8fdb\u884c\u5904\u7406\uff0c\u56e0\u6b64\u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u9002\u7528\u4e8e\u9700\u8981\u9ad8\u6548\u8ba1\u7b97\u7684\u573a\u5408\u3002","title":"1.1 \u57fa\u672c\u6982\u5ff5"},{"location":"lesson12/Lesson12%20Java/#12","text":"","title":"1.2 \u5e38\u7528\u4f4d\u8fd0\u7b97\u64cd\u4f5c"},{"location":"lesson12/Lesson12%20Java/#and","text":"\u5bf9\u4e24\u4e2a\u6574\u6570\u7684\u6bcf\u4e00\u4f4d\u6267\u884c\u903b\u8f91\u4e0e\u8fd0\u7b97\u3002\u53ea\u6709\u5f53\u4e24\u4e2a\u76f8\u5e94\u7684\u4f4d\u90fd\u662f1\u65f6\uff0c\u7ed3\u679c\u4f4d\u624d\u4e3a1\uff0c\u5426\u5219\u4e3a0\u3002 \u793a\u4f8b \uff1a 5 & 3 = 1 5: 0101 3: 0011 -------------- 0001 (\u7ed3\u679c\u4e3a1)","title":"\u6309\u4f4d\u4e0e\uff08AND\uff09&amp;"},{"location":"lesson12/Lesson12%20Java/#or","text":"\u5bf9\u4e24\u4e2a\u6574\u6570\u7684\u6bcf\u4e00\u4f4d\u6267\u884c\u903b\u8f91\u6216\u8fd0\u7b97\u3002\u53ea\u8981\u5176\u4e2d\u4e00\u4e2a\u76f8\u5e94\u7684\u4f4d\u662f1\uff0c\u7ed3\u679c\u4f4d\u5c31\u4e3a1\u3002 \u793a\u4f8b \uff1a 5 | 3 = 7 5: 0101 3: 0011 -------------- 0111 (\u7ed3\u679c\u4e3a7)","title":"\u6309\u4f4d\u6216\uff08OR\uff09|"},{"location":"lesson12/Lesson12%20Java/#xor","text":"\u5bf9\u4e24\u4e2a\u6574\u6570\u7684\u6bcf\u4e00\u4f4d\u6267\u884c\u903b\u8f91\u5f02\u6216\u8fd0\u7b97\u3002\u5f53\u4e24\u4e2a\u76f8\u5e94\u7684\u4f4d\u4e0d\u540c\u65f6\uff0c\u7ed3\u679c\u4f4d\u4e3a1\uff1b\u76f8\u540c\u65f6\u4e3a0\u3002 \u793a\u4f8b \uff1a 5 ^ 3 = 6 5: 0101 3: 0011 -------------- 0110 (\u7ed3\u679c\u4e3a6) \u5f02\u6216\u8fd0\u7b97\u7684\u6027\u8d28 \uff1a - 1. \u4efb\u4f55\u6570\u548c 0 \u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u4e3a\u8be5\u6570\u672c\u8eab\uff1a a \u2295 0 = a \u3002 - 2. \u4efb\u4f55\u6570\u548c\u81ea\u5df1\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u4e3a 0\uff1a a \u2295 a = 0 \u3002 - 3. \u5f02\u6216\u8fd0\u7b97\u6ee1\u8db3\u4ea4\u6362\u5f8b\u548c\u7ed3\u5408\u5f8b\uff1a a \u2295 b \u2295 a = (a \u2295 a) \u2295 b = 0 \u2295 b = b \u3002","title":"\u6309\u4f4d\u5f02\u6216\uff08XOR\uff09^"},{"location":"lesson12/Lesson12%20Java/#not","text":"\u5bf9\u6bcf\u4e00\u4f4d\u8fdb\u884c\u53d6\u53cd\u64cd\u4f5c\u30020\u53d8\u4e3a1\uff0c1\u53d8\u4e3a0\u3002 \u793a\u4f8b \uff1a ~5 = -6 5: 0101 -------------- 1010 (\u53d6\u53cd\u540e\u4e3a-6\uff0c\u4f7f\u7528\u8865\u7801\u8868\u793a\u6cd5)","title":"\u6309\u4f4d\u53d6\u53cd\uff08NOT\uff09~"},{"location":"lesson12/Lesson12%20Java/#_3","text":"\u5c06\u4e8c\u8fdb\u5236\u6570\u7684\u6240\u6709\u4f4d\u5411\u5de6\u79fb\u52a8\u6307\u5b9a\u7684\u4f4d\u6570\u3002\u5de6\u79fbn\u4f4d\u76f8\u5f53\u4e8e\u4e58\u4ee5 2^n \u3002 \u793a\u4f8b \uff1a 5 << 1 = 10 5: 0101 -------------- 1010 (\u7ed3\u679c\u4e3a10)","title":"\u5de6\u79fb\uff08&lt;&lt;\uff09"},{"location":"lesson12/Lesson12%20Java/#_4","text":"\u5c06\u4e8c\u8fdb\u5236\u6570\u7684\u6240\u6709\u4f4d\u5411\u53f3\u79fb\u52a8\u6307\u5b9a\u7684\u4f4d\u6570\u3002\u53f3\u79fbn\u4f4d\u76f8\u5f53\u4e8e\u6574\u9664 2^n \u3002 \u793a\u4f8b \uff1a 5 >> 1 = 2 5: 0101 -------------- 0010 (\u7ed3\u679c\u4e3a2)","title":"\u53f3\u79fb\uff08&gt;&gt;\uff09"},{"location":"lesson12/Lesson12%20Java/#13","text":"","title":"1.3 \u5e94\u7528\u5b9e\u4f8b"},{"location":"lesson12/Lesson12%20Java/#_5","text":"\u4f4d\u8fd0\u7b97\u53ef\u4ee5\u9ad8\u6548\u5730\u5904\u7406\u8bb8\u591a\u95ee\u9898\uff0c\u7279\u522b\u662f\u5728\u9700\u8981\u64cd\u4f5c\u4e8c\u8fdb\u5236\u6570\u5b57\u65f6\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u7528\u7684\u4f4d\u8fd0\u7b97\u6280\u5de7\u53ca\u5176\u5e94\u7528\uff1a","title":"\u5e38\u89c1\u7684\u4f4d\u8fd0\u7b97\u6280\u5de7"},{"location":"lesson12/Lesson12%20Java/#1_1","text":"","title":"\u7c7b\u578b 1 \uff1a\u7528\u4e8e\u5224\u65ad"},{"location":"lesson12/Lesson12%20Java/#1_2","text":"\u6280\u5de7 \uff1a n & 1 \u539f\u7406 \uff1a\u5982\u679c n \u662f\u5947\u6570\uff0c\u90a3\u4e48 n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u7684\u6700\u4f4e\u4f4d\u662f 1\uff1b\u5982\u679c\u662f\u5076\u6570\uff0c\u5219\u6700\u4f4e\u4f4d\u662f 0\u3002\u56e0\u6b64\uff0c n & 1 \u53ef\u4ee5\u76f4\u63a5\u5224\u65ad\u5947\u5076\u6027\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a java boolean isOdd = (n & 1) == 1;","title":"1. \u5224\u65ad\u5947\u5076\u6027"},{"location":"lesson12/Lesson12%20Java/#_6","text":"","title":""},{"location":"lesson12/Lesson12%20Java/#2-1-2","text":"\u6280\u5de7 \uff1a n & (n - 1) \u539f\u7406 \uff1a\u5c06 n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u7684\u6700\u4f4e\u4f4d\u7684 1 \u6e05\u9664\u3002\u9002\u7528\u4e8e\u5224\u65ad\u662f\u5426\u4e3a 2 \u7684\u5e42\u6b21\u65b9\uff0c\u4ee5\u53ca\u7edf\u8ba1\u4e8c\u8fdb\u5236\u6570\u4e2d 1 \u7684\u4e2a\u6570\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a java n = n & (n - 1); // \u6e05\u9664\u6700\u4f4e\u4f4d\u7684 1 \u7279\u6027 \uff1a\u5982\u679c n \u662f\u6b63\u6574\u6570\u4e14\u6ee1\u8db3 n & (n - 1) == 0 \uff0c\u8fd9\u610f\u5473\u7740 n \u662f 2 \u7684\u5e42\u3002","title":"2. \u6e05\u9664\u6700\u4f4e\u4f4d\u7684 1 \uff08\u5224\u65ad\u662f\u5426\u662f 2 \u7684\u5e42\u6b21\u65b9\uff09"},{"location":"lesson12/Lesson12%20Java/#_7","text":"","title":"\u89e3\u91ca\uff1a"},{"location":"lesson12/Lesson12%20Java/#2","text":"\u5f53\u4e00\u4e2a\u6570\u662f 2 \u7684\u5e42\u65f6\uff0c\u5b83\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d \u53ea\u6709\u4e00\u4e2a\u4f4d\u662f 1 \uff0c\u5176\u4f59\u6240\u6709\u4f4d\u90fd\u662f 0\u3002 \u6bd4\u5982\uff1a 2 0 = 1 -> 0001 (\u4e8c\u8fdb\u5236) 2 1 = 2 -> 0010 2 2 = 4 -> 0100 2 3 = 8 -> 1000 \u8fd9\u610f\u5473\u7740 2 \u7684\u5e42\u603b\u662f\u5f62\u5982 100...0 \u7684\u5f62\u5f0f \uff0c\u5373\u4e00\u4e2a 1 \u540e\u9762\u8ddf\u7740\u82e5\u5e72\u4e2a 0 \u3002","title":"\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u7684 2 \u7684\u5e42"},{"location":"lesson12/Lesson12%20Java/#n-1","text":"\u5f53\u6211\u4eec\u4ece\u4e00\u4e2a 2 \u7684\u5e42\u51cf\u53bb 1 \u65f6\uff0c\u7ed3\u679c\u4f1a\u5c06\u539f\u6765\u552f\u4e00\u7684 1 \u53d8\u6210 0 \uff0c\u5e76\u5c06\u5176\u540e\u9762\u7684 0 \u53d8\u6210 1 \u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff1a n = 8 = 1000 2 n - 1 = 7 = 0111 2 \u53ef\u4ee5\u770b\u5230\uff0c n \u548c n - 1 \u5728\u4e8c\u8fdb\u5236\u8868\u793a\u4e0a\u662f\u5b8c\u5168\u4e92\u8865\u7684\uff0c n \u53ea\u6709\u4e00\u4e2a 1 \u540e\u9762\u5168\u662f 0 \uff0c\u800c n - 1 \u5219\u662f\u539f\u6765 1 \u53d8\u6210 0 \uff0c\u540e\u9762\u7684 0 \u5168\u90e8\u53d8\u6210 1 \u3002","title":"n - 1 \u7684\u4e8c\u8fdb\u5236\u7279\u6027"},{"location":"lesson12/Lesson12%20Java/#n-n-1","text":"\u6309\u4f4d\u4e0e\u8fd0\u7b97 \u4f1a\u5c06\u4e24\u4e2a\u6570\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u9010\u4f4d\u8fdb\u884c\u6bd4\u8f83\uff0c\u53ea\u6709\u5728\u76f8\u540c\u4f4d\u4e0a\u4e24\u4e2a\u6570\u5b57\u90fd\u662f 1 \u65f6\u7ed3\u679c\u624d\u4e3a 1 \uff0c\u5176\u4ed6\u60c5\u51b5\u4e3a 0 \u3002 \u5bf9\u4e8e 2 \u7684\u5e42 n \uff0c\u5176\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u53ea\u6709\u4e00\u4f4d\u662f 1 \uff0c\u800c n - 1 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u5728\u76f8\u540c\u4f4d\u7f6e\u662f 0 \uff0c\u5176\u5b83\u4f4d\u5219\u662f 1 \u3002\u8fd9\u6837\u4e00\u6765\uff0c n & (n - 1) \u7684\u7ed3\u679c\u4f1a\u662f 0 \uff0c\u56e0\u4e3a\u5728\u4e8c\u8fdb\u5236\u4e2d\u6ca1\u6709\u76f8\u540c\u4f4d\u7f6e\u7684 1 \u4e86\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff1a - n = 8 = 1000 2 - n - 1 = 7 = 0111 2 - 8 & 7 = 1000 2 & 0111 2 = 0000 2","title":"\u6309\u4f4d\u4e0e\u8fd0\u7b97 (n &amp; (n - 1))"},{"location":"lesson12/Lesson12%20Java/#n-n-1-2","text":"\u5982\u679c n \u662f 2 \u7684\u5e42\uff0c\u5b83\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u53ea\u6709\u4e00\u4e2a 1 \uff0c\u4e14 n - 1 \u4f1a\u4f7f\u8fd9\u4e2a 1 \u7684\u4f4d\u7f6e\u53d8\u4e3a 0 \uff0c\u540e\u9762\u7684 0 \u53d8\u4e3a 1 \u3002\u8fd9\u6837 n & (n - 1) \u7684\u7ed3\u679c\u4e00\u5b9a\u662f 0 \u3002 \u5982\u679c n \u4e0d\u662f 2 \u7684\u5e42\uff0c\u5b83\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u81f3\u5c11\u6709\u4e24\u4e2a 1 \uff0c\u90a3\u4e48 n - 1 \u5e76\u4e0d\u80fd\u5c06\u6240\u6709\u7684 1 \u90fd\u62b5\u6d88\u6389\uff0c n & (n - 1) \u7684\u7ed3\u679c\u5c31\u4e0d\u4f1a\u662f 0 \u3002","title":"\u4e3a\u4ec0\u4e48 n &amp; (n - 1) \u53ef\u4ee5\u5224\u65ad 2 \u7684\u5e42\uff1f"},{"location":"lesson12/Lesson12%20Java/#3-1-2","text":"n & -n \u8fd9\u4e2a\u6280\u5de7\u53ef\u4ee5\u9ad8\u6548\u5730\u63d0\u53d6\u51fa\u4e00\u4e2a\u6574\u6570\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u6700\u4f4e\u4f4d\u7684 1\u3002\u540c\u6837\uff0c\u5b83\u53ef\u4ee5\u7528\u4e8e\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u5426\u662f 2 \u7684\u5e42\u3002\u8ba9\u6211\u4eec\u901a\u8fc7\u8be6\u7ec6\u89e3\u91ca\u6765\u7406\u89e3\u5176\u539f\u7406\uff1a","title":"3. \u83b7\u53d6\u6700\u4f4e\u4f4d\u7684 1 \uff08\u5224\u65ad\u662f\u5426\u662f 2 \u7684\u5e42\u6b21\u65b9\uff09"},{"location":"lesson12/Lesson12%20Java/#_8","text":"\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u8d1f\u6570\u662f\u6309\u7167 \u8865\u7801 \u89c4\u5219\u5b58\u50a8\u7684\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u8d1f\u6570\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u662f\u6b63\u6570\u7684\u6bcf\u4e00\u4f4d\u53d6\u53cd\u540e\u52a0 1\u3002 \u6bd4\u5982\uff1a n = 12 = 1100 2 -n = -12 \uff0c\u9996\u5148\u53d6\u53cd 1100 2 -> 0011 2 \uff0c\u7136\u540e\u52a0 1\uff0c\u5f97\u5230 0100 2","title":"\u8d1f\u6570\u7684\u4e8c\u8fdb\u5236\u8868\u793a"},{"location":"lesson12/Lesson12%20Java/#n-n","text":"\u5f53\u6211\u4eec\u6267\u884c n & -n \u65f6\uff0c\u8ba1\u7b97\u7ed3\u679c\u4f1a\u4fdd\u7559\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d \u6700\u4f4e\u4f4d\u7684 1 \uff0c\u800c\u5176\u4f59\u4f4d\u90fd\u4f1a\u53d8\u4e3a 0\u3002\u8fd9\u662f\u56e0\u4e3a\uff1a \u5bf9\u4e8e n \uff0c\u5176\u6700\u4f4e\u4f4d\u7684 1 \u4e4b\u540e\u7684\u6240\u6709\u4f4d\u90fd\u662f 0\u3002 \u5bf9\u4e8e -n \uff0c\u6700\u4f4e\u4f4d\u7684 1 \u4ee5\u53ca\u4e4b\u540e\u7684\u6240\u6709\u4f4d\u90fd\u4f1a\u53d6\u53cd\uff0c\u6700\u4f4e\u4f4d\u7684 1 \u4f9d\u7136\u5b58\u5728\uff0c\u800c\u66f4\u9ad8\u4f4d\u5219\u53d8\u4e3a 0\u3002 \u5c06 n \u548c -n \u8fdb\u884c\u6309\u4f4d\u4e0e\u8fd0\u7b97\u65f6\uff0c\u9ad8\u4f4d\u90fd\u4f1a\u53d8\u6210 0\uff0c\u53ea\u6709\u6700\u4f4e\u4f4d\u7684 1 \u4fdd\u7559\u4e0b\u6765\uff0c\u5176\u4ed6\u4f4d\u53d8\u4e3a 0\u3002","title":"n &amp; -n \u7684\u8fd0\u7b97\u539f\u7406"},{"location":"lesson12/Lesson12%20Java/#_9","text":"n = 12 = 1100 2 -n = -12 = 0100 2 12 & (-12) = 1100 2 & 0100 2 = 0100 2 \u7ed3\u679c\u662f\u4e8c\u8fdb\u5236\u6570\u4e2d\u6700\u4f4e\u4f4d\u7684 1\u3002","title":"\u4e3e\u4e2a\u4f8b\u5b50\uff1a"},{"location":"lesson12/Lesson12%20Java/#n-n-2","text":"\u5982\u679c n \u662f 2 \u7684\u5e42\uff0c\u5b83\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u53ea\u6709\u4e00\u4e2a 1\uff0c\u540e\u9762\u8ddf\u7740\u82e5\u5e72\u4e2a 0\uff0c\u6bd4\u5982 n = 8 = 1000 2 \u3002 \u5bf9\u4e8e\u8fd9\u6837\u7684\u6570\uff0c n & -n \u7684\u7ed3\u679c\u5fc5\u7136\u7b49\u4e8e n \uff0c\u56e0\u4e3a\u4e8c\u8fdb\u5236\u4e2d\u53ea\u6709\u4e00\u4e2a 1\uff0c\u6309\u4f4d\u4e0e\u4e4b\u540e\u7684\u7ed3\u679c\u4e5f\u53ea\u4f1a\u662f\u8be5\u4f4d\u7684 1\uff0c\u5176\u4ed6\u4f4d\u4e3a 0\u3002 \u56e0\u6b64\uff0c\u5982\u679c n & -n == n \uff0c\u53ef\u4ee5\u786e\u5b9a n \u662f 2 \u7684\u5e42\u3002","title":"n &amp; -n \u5224\u65ad\u662f\u5426\u4e3a 2 \u7684\u5e42"},{"location":"lesson12/Lesson12%20Java/#_10","text":"n = 8 = 1000 2 -n = -8 = 1000 2 \uff08\u56e0\u4e3a\u6700\u9ad8\u4f4d 1 \u4e4b\u540e\u6ca1\u6709 0\uff0c\u6240\u4ee5\u6ca1\u6709\u53d8\u5316\uff09 8 & -8 = 1000 2 \u6b64\u65f6 n & -n == n \uff0c\u6240\u4ee5 8 \u662f 2 \u7684\u5e42\u3002","title":"\u4e3e\u4e2a\u4f8b\u5b50\uff1a"},{"location":"lesson12/Lesson12%20Java/#4","text":"\u6280\u5de7 \uff1a (a ^ b) >= 0 \u539f\u7406 \uff1a\u5982\u679c a \u548c b \u7684\u7b26\u53f7\u76f8\u540c\uff0c\u90a3\u4e48\u5b83\u4eec\u7684\u7b26\u53f7\u4f4d\u76f8\u540c\uff0c\u5f02\u6216\u7ed3\u679c\u7684\u7b26\u53f7\u4f4d\u4e3a 0\uff0c\u56e0\u6b64 (a ^ b) >= 0 \u4e3a\u771f\uff1b\u5426\u5219\u4e3a\u5047\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a java boolean sameSign = (a ^ b) >= 0;","title":"4. \u5224\u65ad\u4e24\u4e2a\u6570\u7684\u7b26\u53f7\u662f\u5426\u76f8\u540c"},{"location":"lesson12/Lesson12%20Java/#_11","text":"\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u4e86\u89e3\u6574\u6570\u5728\u8ba1\u7b97\u673a\u4e2d\u7684\u4e8c\u8fdb\u5236\u8868\u793a\uff1a - \u7b26\u53f7\u4f4d \uff1a\u6574\u6570\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\uff0c\u6700\u9ad8\u4f4d\uff08\u6700\u5de6\u8fb9\u7684\u4e00\u4f4d\uff09\u662f \u7b26\u53f7\u4f4d \u3002\u5f53\u7b26\u53f7\u4f4d\u4e3a 0 \u65f6\uff0c\u8868\u793a\u6b63\u6570\uff1b\u5f53\u7b26\u53f7\u4f4d\u4e3a 1 \u65f6\uff0c\u8868\u793a\u8d1f\u6570\u3002 - \u4f8b\u5982\uff0c\u5bf9\u4e8e 32 \u4f4d\u6574\u6570\uff1a - \u6b63\u6570 5 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 00000000 00000000 00000000 00000101 - \u8d1f\u6570 -5 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 11111111 11111111 11111111 11111011","title":"\u539f\u7406\u89e3\u6790"},{"location":"lesson12/Lesson12%20Java/#_12","text":"\u6211\u4eec\u53ef\u4ee5\u5229\u7528\u5f02\u6216\u8fd0\u7b97\u6765\u5224\u65ad\u4e24\u4e2a\u6570\u7684\u7b26\u53f7\u662f\u5426\u76f8\u540c\u3002\u5173\u952e\u70b9\u5728\u4e8e\u5f02\u6216\u8fd0\u7b97\u7684\u7ed3\u679c\u7684 \u7b26\u53f7\u4f4d \u3002 \u7b26\u53f7\u4f4d\u5206\u6790 \uff1a \u5982\u679c a \u548c b \u7684\u7b26\u53f7\u76f8\u540c\uff0c\u4e8c\u8005\u7684\u7b26\u53f7\u4f4d\u4e5f\u4f1a\u76f8\u540c\uff0c\u5f02\u6216\u540e\u7684\u7ed3\u679c\u5728\u7b26\u53f7\u4f4d\u4f1a\u662f 0 \uff0c\u5373\u7ed3\u679c\u662f \u975e\u8d1f\u6570 \u3002 \u5982\u679c a \u548c b \u7684\u7b26\u53f7\u4e0d\u540c\uff0c\u4e8c\u8005\u7684\u7b26\u53f7\u4f4d\u4f1a\u4e0d\u540c\uff0c\u5f02\u6216\u540e\u7684\u7ed3\u679c\u5728\u7b26\u53f7\u4f4d\u4f1a\u662f 1 \uff0c\u5373\u7ed3\u679c\u662f \u8d1f\u6570 \u3002 \u76f8\u540c\u7b26\u53f7 \uff1a \u5047\u8bbe a = 5 \u548c b = 10 \uff0c\u5b83\u4eec\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u5982\u4e0b\uff1a a = 5 : 00000000 00000000 00000000 00000101 b = 10 : 00000000 00000000 00000000 00001010 \u5b83\u4eec\u7684\u7b26\u53f7\u4f4d\u90fd\u662f 0 \uff0c\u8868\u793a\u5b83\u4eec\u90fd\u662f\u6b63\u6570\u3002 \u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff1a a ^ b = 00000000 00000000 00000000 00000101 ^ 00000000 00000000 00000000 00001010 ------------------------------------- 00000000 00000000 00000000 00001111 \u7ed3\u679c\u7684\u7b26\u53f7\u4f4d\u4ecd\u7136\u662f 0 \uff0c\u8bf4\u660e\u7ed3\u679c\u662f\u975e\u8d1f\u6570\uff0c\u56e0\u6b64 (a ^ b) >= 0 \u4e3a\u771f\uff0c\u8868\u660e\u5b83\u4eec\u7684\u7b26\u53f7\u76f8\u540c\u3002 \u4e0d\u540c\u7b26\u53f7 \uff1a \u5047\u8bbe a = 5 \u548c b = -10 \uff0c\u5b83\u4eec\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u5982\u4e0b\uff1a a = 5 : 00000000 00000000 00000000 00000101 b = -10 : 11111111 11111111 11111111 11110110 \uff08\u8d1f\u6570\u5728\u8ba1\u7b97\u673a\u4e2d\u4f7f\u7528\u8865\u7801\u8868\u793a\uff09 \u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff1a a ^ b = 00000000 00000000 00000000 00000101 ^ 11111111 11111111 11111111 11110110 ------------------------------------- 11111111 11111111 11111111 11110011 \u7ed3\u679c\u7684\u7b26\u53f7\u4f4d\u662f 1 \uff0c\u8bf4\u660e\u7ed3\u679c\u662f\u8d1f\u6570\uff0c\u56e0\u6b64 (a ^ b) < 0 \u4e3a\u771f\uff0c\u8868\u660e\u5b83\u4eec\u7684\u7b26\u53f7\u4e0d\u540c\u3002","title":"\u901a\u8fc7\u5f02\u6216\u5224\u65ad\u7b26\u53f7"},{"location":"lesson12/Lesson12%20Java/#_13","text":"\u5982\u679c a \u548c b \u7b26\u53f7\u76f8\u540c \uff0c\u5219 (a ^ b) \u7684\u7b26\u53f7\u4f4d\u4e3a 0 \uff0c\u5f02\u6216\u7ed3\u679c\u4e3a\u975e\u8d1f\u6570\uff0c\u6545 (a ^ b) >= 0 \u4e3a\u771f\u3002 \u5982\u679c a \u548c b \u7b26\u53f7\u4e0d\u540c \uff0c\u5219 (a ^ b) \u7684\u7b26\u53f7\u4f4d\u4e3a 1 \uff0c\u5f02\u6216\u7ed3\u679c\u4e3a\u8d1f\u6570\uff0c\u6545 (a ^ b) >= 0 \u4e3a\u5047\u3002 \u901a\u8fc7\u8fd9\u4e00\u6280\u5de7\uff0c\u6211\u4eec\u53ef\u4ee5\u9ad8\u6548\u5730\u5224\u65ad\u4e24\u4e2a\u6574\u6570\u7684\u7b26\u53f7\u662f\u5426\u76f8\u540c\uff0c\u907f\u514d\u4e86\u4f20\u7edf\u65b9\u6cd5\u4e2d\u7684\u5206\u652f\u5224\u65ad\u903b\u8f91\uff08\u5982 if-else \uff09\u3002","title":"\u603b\u7ed3"},{"location":"lesson12/Lesson12%20Java/#2_1","text":"","title":"\u7c7b\u578b 2 \u5f02\u6216\u8fd0\u7b97\u6280\u5de7"},{"location":"lesson12/Lesson12%20Java/#5","text":"\u6280\u5de7 \uff1a\u4f7f\u7528\u4ee5\u4e0b\u4e09\u6b65\u6765\u4ea4\u6362 a \u548c b \u7684\u503c\uff1a java a = a ^ b; b = a ^ b; a = a ^ b;","title":"5. \u4ea4\u6362\u4e24\u4e2a\u6570"},{"location":"lesson12/Lesson12%20Java/#_14","text":"\u5173\u952e\u7684\u5f02\u6216\u8fd0\u7b97\u6027\u8d28\uff1a 1. a ^ a = 0 \uff1a\u4e00\u4e2a\u6570\u4e0e\u81ea\u8eab\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u662f 0\u3002 2. a ^ 0 = a \uff1a\u4e00\u4e2a\u6570\u4e0e 0 \u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u8fd8\u662f\u8be5\u6570\u672c\u8eab\u3002 3. \u4ea4\u6362\u5f8b \uff1a a ^ b = b ^ a \uff0c\u5373\u5f02\u6216\u8fd0\u7b97\u662f\u53ef\u4ea4\u6362\u7684\u3002 4. \u7ed3\u5408\u5f8b \uff1a a ^ (b ^ c) = (a ^ b) ^ c \uff0c\u5373\u5f02\u6216\u8fd0\u7b97\u662f\u53ef\u7ed3\u5408\u7684\u3002 \u57fa\u4e8e\u8fd9\u4e9b\u6027\u8d28\uff0c\u53ef\u4ee5\u901a\u8fc7\u8fde\u7eed\u4e09\u6b21\u5f02\u6216\u8fd0\u7b97\u6765\u5b8c\u6210\u4e24\u4e2a\u53d8\u91cf\u7684\u4ea4\u6362\u3002","title":"\u5f02\u6216\u8fd0\u7b97\u7684\u539f\u7406"},{"location":"lesson12/Lesson12%20Java/#_15","text":"\u5047\u8bbe\u4e24\u4e2a\u6570\u4e3a a = 5 \u548c b = 3 \uff0c\u6211\u4eec\u6765\u9010\u6b65\u5206\u6790\u901a\u8fc7\u5f02\u6216\u64cd\u4f5c\u4ea4\u6362\u5b83\u4eec\u7684\u503c\u3002 \u7b2c\u4e00\u6b65 \uff1a a = a ^ b \u5bf9 a \u8fdb\u884c\u8d4b\u503c\u64cd\u4f5c\uff1a a = 5 ^ 3 5 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 101 \uff0c 3 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 011 \u3002 a = 101 ^ 011 = 110 \uff0c\u5373 a = 6 \uff08\u6b64\u65f6 a \u7684\u503c\u4e3a 6 \uff0c b \u4ecd\u7136\u662f 3 \uff09\u3002 \u7b2c\u4e8c\u6b65 \uff1a b = a ^ b \u5bf9 b \u8fdb\u884c\u8d4b\u503c\u64cd\u4f5c\uff1a b = a ^ b = 6 ^ 3 6 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 110 \uff0c 3 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 011 \u3002 b = 110 ^ 011 = 101 \uff0c\u5373 b = 5 \uff08\u6b64\u65f6 b \u7684\u503c\u53d8\u6210\u4e86 5 \uff0c a \u4ecd\u7136\u662f 6 \uff09\u3002 \u7b2c\u4e09\u6b65 \uff1a a = a ^ b \u5bf9 a \u8fdb\u884c\u8d4b\u503c\u64cd\u4f5c\uff1a a = a ^ b = 6 ^ 5 6 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 110 \uff0c 5 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 101 \u3002 a = 110 ^ 101 = 011 \uff0c\u5373 a = 3 \uff08\u6b64\u65f6 a \u7684\u503c\u53d8\u6210\u4e86 3 \uff0c\u800c b \u7684\u503c\u662f 5 \uff09\u3002","title":"\u8be6\u7ec6\u6b65\u9aa4"},{"location":"lesson12/Lesson12%20Java/#_16","text":"\u901a\u8fc7\u8fd9\u4e09\u6b21\u5f02\u6216\u64cd\u4f5c\uff0c a \u7684\u521d\u59cb\u503c 5 \u88ab\u8d4b\u7ed9\u4e86 b \uff0c\u800c b \u7684\u521d\u59cb\u503c 3 \u88ab\u8d4b\u7ed9\u4e86 a \u3002\u56e0\u6b64\uff0c\u4e24\u4e2a\u6570\u5728\u6ca1\u6709\u4f7f\u7528\u4e34\u65f6\u53d8\u91cf\u7684\u60c5\u51b5\u4e0b\u5b8c\u6210\u4e86\u4ea4\u6362\u3002","title":"\u6700\u7ec8\u7ed3\u679c"},{"location":"lesson12/Lesson12%20Java/#_17","text":"public class SwapNumbers { public static void main(String[] args) { int a = 5; int b = 3; System.out.println(\"Before swap: a = \" + a + \", b = \" + b); // \u901a\u8fc7\u5f02\u6216\u64cd\u4f5c\u4ea4\u6362 a \u548c b \u7684\u503c a = a ^ b; // a \u53d8\u4e3a a ^ b b = a ^ b; // b \u53d8\u4e3a a a = a ^ b; // a \u53d8\u4e3a b System.out.println(\"After swap: a = \" + a + \", b = \" + b); } }","title":"\u4ee3\u7801\u793a\u4f8b"},{"location":"lesson12/Lesson12%20Java/#_18","text":"Before swap: a = 5, b = 3 After swap: a = 3, b = 5","title":"\u8f93\u51fa\u7ed3\u679c\uff1a"},{"location":"lesson12/Lesson12%20Java/#3","text":"","title":"\u7c7b\u578b 3\uff1a\u5feb\u901f\u8fd0\u7b97"},{"location":"lesson12/Lesson12%20Java/#6-k-1","text":"\u6280\u5de7 \uff1a n | (1 << k) \u539f\u7406 \uff1a\u901a\u8fc7\u5de6\u79fb\u8fd0\u7b97\u5c06 1 \u79fb\u52a8\u5230\u7b2c k \u4f4d\uff0c\u7136\u540e\u4e0e n \u8fdb\u884c\u6309\u4f4d\u6216\u8fd0\u7b97\uff0c\u5c06\u7b2c k \u4f4d\u8bbe\u4e3a 1\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a java n = n | (1 << k);","title":"6. \u5c06\u6574\u6570\u7684\u7b2c k \u4f4d\u8bbe\u4e3a 1"},{"location":"lesson12/Lesson12%20Java/#7-k-0","text":"\u6280\u5de7 \uff1a n & ~(1 << k) \u539f\u7406 \uff1a\u5148\u901a\u8fc7\u5de6\u79fb\u8fd0\u7b97\u5c06 1 \u79fb\u52a8\u5230\u7b2c k \u4f4d\uff0c\u7136\u540e\u5bf9\u5176\u53d6\u53cd\uff0c\u5c06\u5176\u4f59\u4f4d\u8bbe\u4e3a 1\uff0c k \u4f4d\u8bbe\u4e3a 0\uff0c\u518d\u4e0e n \u8fdb\u884c\u6309\u4f4d\u4e0e\u8fd0\u7b97\uff0c\u6e05\u9664\u7b2c k \u4f4d\u7684\u503c\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a java n = n & ~(1 << k);","title":"7. \u5c06\u6574\u6570\u7684\u7b2c k \u4f4d\u8bbe\u4e3a 0"},{"location":"lesson12/Lesson12%20Java/#8-k","text":"\u6280\u5de7 \uff1a (n >> k) & 1 \u539f\u7406 \uff1a\u901a\u8fc7\u53f3\u79fb\u8fd0\u7b97\u5c06\u7b2c k \u4f4d\u79fb\u5230\u6700\u4f4e\u4f4d\uff0c\u7136\u540e\u4e0e 1 \u8fdb\u884c\u6309\u4f4d\u4e0e\u8fd0\u7b97\uff0c\u5224\u65ad\u8be5\u4f4d\u662f 0 \u8fd8\u662f 1\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a java int bit = (n >> k) & 1;","title":"8. \u83b7\u53d6\u6574\u6570\u7684\u7b2c k \u4f4d\u503c"},{"location":"lesson12/Lesson12%20Java/#9-1","text":"\u6280\u5de7 \uff1a\u4f7f\u7528 n & (n - 1) \u4e0d\u65ad\u6e05\u9664\u6700\u4f4e\u4f4d\u7684 1 \u539f\u7406 \uff1a\u6bcf\u6b21\u6267\u884c n & (n - 1) \u90fd\u4f1a\u51cf\u5c11\u4e00\u4e2a 1\uff0c\u76f4\u5230 n \u53d8\u4e3a 0\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a java int count = 0; while (n > 0) { n = n & (n - 1); count++; }","title":"9. \u7edf\u8ba1\u6574\u6570\u7684\u4e8c\u8fdb\u5236\u4e2d 1 \u7684\u4e2a\u6570"},{"location":"lesson12/Lesson12%20Java/#_19","text":"","title":"\u4e0e\u4f20\u7edf\u65b9\u5f0f\u7684\u6bd4\u8f83"},{"location":"lesson12/Lesson12%20Java/#2_2","text":"\u4f20\u7edf\u7684\u65b9\u6cd5\u662f\u901a\u8fc7\u4e0d\u65ad\u5c06 n \u9664\u4ee5 2 \u6765\u5224\u65ad n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u7684 1 \u7684\u4e2a\u6570\u3002\u6bcf\u6b21\u9664\u4ee5 2 \u53ef\u4ee5\u83b7\u53d6\u5f53\u524d\u6700\u53f3\u8fb9\u7684\u4e00\u4f4d\uff0c\u901a\u8fc7\u5224\u65ad\u8fd9\u4f4d\u662f\u5426\u662f 1 \u6765\u589e\u52a0\u8ba1\u6570\u3002 \u793a\u4f8b\u4ee3\u7801 \uff1a java int count = 0; while (n > 0) { if (n % 2 == 1) { count++; } n = n / 2; } \u7f3a\u70b9 \uff1a\u8be5\u65b9\u6cd5\u9700\u8981\u904d\u5386\u4e8c\u8fdb\u5236\u8868\u793a\u7684\u6bcf\u4e00\u4f4d\uff0c\u4e5f\u5c31\u662f\u9700\u8981\u5faa\u73af\u7684\u6b21\u6570\u4e0e n \u7684\u6bd4\u7279\u6570\u6210\u6b63\u6bd4\u3002\u56e0\u6b64\uff0c\u5982\u679c n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u6709\u5f88\u591a 0\uff0c\u8fd9\u79cd\u65b9\u6cd5\u6548\u7387\u8f83\u4f4e\u3002\u5bf9\u4e8e\u4e00\u4e2a 32 \u4f4d\u7684\u6574\u6570\uff0c\u6700\u591a\u9700\u8981\u6267\u884c 32 \u6b21\u64cd\u4f5c\u3002","title":"\u4f20\u7edf\u65b9\u6cd5\uff1a\u6574\u9664 2"},{"location":"lesson12/Lesson12%20Java/#n-n-1_1","text":"\u901a\u8fc7 n & (n - 1) \uff0c\u6bcf\u6b21\u8fd0\u7b97\u76f4\u63a5\u5c06 n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d \u6700\u4f4e\u4f4d\u7684 1 \u6e05\u9664\u3002\u56e0\u6b64\uff0c\u6267\u884c\u7684\u6b21\u6570\u7b49\u4e8e n \u4e2d 1 \u7684\u4e2a\u6570\uff0c\u800c\u4e0d\u662f\u6bd4\u7279\u6570\u3002 \u539f\u7406 \uff1a n & (n - 1) \u7684\u4f5c\u7528\u662f\u5c06 n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u6700\u4f4e\u4f4d\u7684 1 \u53d8\u4e3a 0\u3002 \u6bcf\u6b21\u6267\u884c\u4e00\u6b21 n & (n - 1) \uff0c\u6211\u4eec\u5c31\u79fb\u9664\u4e86\u4e00\u4e2a 1\uff0c\u76f4\u5230\u6240\u6709\u7684 1 \u90fd\u88ab\u79fb\u9664\uff0c n \u53d8\u4e3a 0 \u4e3a\u6b62\u3002","title":"\u4f7f\u7528 n &amp; (n - 1) \u7684\u65b9\u6cd5"},{"location":"lesson12/Lesson12%20Java/#10-2","text":"\u6280\u5de7 \uff1a 1 << k \u539f\u7406 \uff1a\u5de6\u79fb\u8fd0\u7b97\u76f8\u5f53\u4e8e\u5c06 1 \u5411\u5de6\u79fb\u52a8 k \u4f4d\uff0c\u8fd9\u6837\u53ef\u4ee5\u5feb\u901f\u5f97\u5230 2^k \u7684\u7ed3\u679c\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a java int powerOfTwo = 1 << k; // \u7b49\u540c\u4e8e 2^k","title":"10. \u5feb\u901f\u8ba1\u7b97 2 \u7684\u5e42"},{"location":"lesson12/Lesson12%20Java/#2_3","text":"","title":"2. \u4f8b\u9898\u8bb2\u89e3"},{"location":"lesson12/Lesson12%20Java/#21-lc231-2","text":"","title":"2.1 LC231 2\u7684\u5e42"},{"location":"lesson12/Lesson12%20Java/#_20","text":"\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570 n \uff0c\u8bf7\u4f60\u5224\u65ad\u8be5\u6574\u6570\u662f\u5426\u662f 2 \u7684\u5e42\u6b21\u65b9\u3002\u5982\u679c\u662f\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002 \u5982\u679c\u5b58\u5728\u4e00\u4e2a\u6574\u6570 x \u4f7f\u5f97 n == 2^x \uff0c\u5219\u8ba4\u4e3a n \u662f 2 \u7684\u5e42\u6b21\u65b9\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson12/Lesson12%20Java/#_21","text":"\u4e00\u4e2a\u6570 n \u662f 2 \u7684\u5e42\uff0c\u5f53\u4e14\u4ec5\u5f53 n \u662f\u6b63\u6574\u6570\uff0c\u5e76\u4e14 n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u4ec5\u5305\u542b 1 \u4e2a 1\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u4f4d\u8fd0\u7b97\u6280\u5de7\u6765\u5224\u65ad\u3002 \u4f7f\u7528 n & (n - 1) \u5224\u65ad java class Solution { public boolean isPowerOfTwo(int n) { return n > 0 && (n & (n - 1)) == 0; } } \u4f7f\u7528 n & (-n) \u5224\u65ad java class Solution { public boolean isPowerOfTwo(int n) { return n > 0 && (n & -n) == n; } }","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson12/Lesson12%20Java/#22-lc268","text":"","title":"2.2 LC268 \u4e22\u5931\u7684\u6570\u5b57"},{"location":"lesson12/Lesson12%20Java/#_22","text":"\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b [0, n] \u4e2d n \u4e2a\u6570\u7684\u6570\u7ec4 nums \uff0c\u627e\u51fa [0, n] \u8fd9\u4e2a\u8303\u56f4\u5185\u6ca1\u6709\u51fa\u73b0\u5728\u6570\u7ec4\u4e2d\u7684\u90a3\u4e2a\u6570\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson12/Lesson12%20Java/#_23","text":"","title":"\u601d\u8def\u8bb2\u89e3"},{"location":"lesson12/Lesson12%20Java/#hashset","text":"","title":"\u65b9\u6cd5\u4e00\uff1a\u4f7f\u7528 HashSet"},{"location":"lesson12/Lesson12%20Java/#_24","text":"\u6784\u5efa\u4e00\u4e2a HashSet \uff1a\u5c06\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u6570\u5b58\u5165 HashSet \u4e2d\u3002 \u904d\u5386\u67e5\u627e\u7f3a\u5931\u7684\u6570\u5b57 \uff1a\u7136\u540e\u904d\u5386 [0, n] \u7684\u6240\u6709\u6570\uff0c\u68c0\u67e5\u54ea\u4e2a\u6570\u5b57\u4e0d\u5728 HashSet \u4e2d\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u4e00\u65e6\u53d1\u73b0\u67d0\u4e2a\u6570\u5b57\u4e0d\u5728 HashSet \u4e2d\uff0c\u5373\u53ef\u8fd4\u56de\u8be5\u6570\u5b57\u4f5c\u4e3a\u7f3a\u5931\u7684\u6570\u5b57\u3002","title":"\u89e3\u9898\u601d\u8def"},{"location":"lesson12/Lesson12%20Java/#_25","text":"import java.util.HashSet; import java.util.Set; class Solution { public int missingNumber(int[] nums) { // \u521b\u5efa\u4e00\u4e2a\u54c8\u5e0c\u96c6\u5408\u5b58\u50a8\u6570\u7ec4\u4e2d\u7684\u6570 Set<Integer> numSet = new HashSet<>(); // \u5c06\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u6570\u52a0\u5165\u5230\u96c6\u5408\u4e2d for (int num : nums) { numSet.add(num); } // \u904d\u5386 [0, n]\uff0c\u627e\u51fa\u6ca1\u6709\u51fa\u73b0\u5728\u96c6\u5408\u4e2d\u7684\u6570 for (int i = 0; i <= nums.length; i++) { if (!numSet.contains(i)) { return i; // \u627e\u5230\u7f3a\u5931\u7684\u6570\u5b57 } } return -1; // \u5982\u679c\u6ca1\u6709\u627e\u5230\u7f3a\u5931\u7684\u6570\u5b57\uff0c\u8fd4\u56de-1\uff08\u5b9e\u9645\u4e0d\u4f1a\u53d1\u751f\uff09 } }","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson12/Lesson12%20Java/#_26","text":"","title":"\u65b9\u6cd5\u4e8c\uff1a\u4f7f\u7528\u4f4d\u8fd0\u7b97\uff08\u5f02\u6216\uff09"},{"location":"lesson12/Lesson12%20Java/#_27","text":"\u8fd9\u9053\u9898\u7684\u6838\u5fc3\u601d\u8def\u662f\u57fa\u4e8e \u5f02\u6216\u8fd0\u7b97 \u7684\u6027\u8d28\u6765\u627e\u5230\u4e22\u5931\u7684\u6570\u5b57\u3002\u6e29\u4e60\u5f02\u6216\u8fd0\u7b97\u7684\u4ee5\u4e0b\u51e0\u4e2a\u5173\u952e\u6027\u8d28\uff1a \u4ea4\u6362\u5f8b\u548c\u7ed3\u5408\u5f8b \uff1a a ^ b ^ c \u548c a ^ c ^ b \u7684\u7ed3\u679c\u76f8\u540c\uff0c\u5373\u987a\u5e8f\u65e0\u5173\u3002 \u76f8\u540c\u6570\u5b57\u5f02\u6216\u4e3a 0 \uff1a a ^ a = 0 \uff0c\u5373\u4e24\u4e2a\u76f8\u540c\u7684\u6570\u5b57\u5f02\u6216\u4f1a\u4e92\u76f8\u62b5\u6d88\u4e3a 0\u3002 \u4efb\u4f55\u6570\u5b57\u4e0e 0 \u5f02\u6216\u7b49\u4e8e\u81ea\u8eab \uff1a a ^ 0 = a \u3002","title":"\u89e3\u9898\u601d\u8def"},{"location":"lesson12/Lesson12%20Java/#_28","text":"\u521d\u59cb\u5316\u53d8\u91cf \uff1a missing \u53d8\u91cf\u521d\u59cb\u503c\u4e3a 0\uff0c\u7528\u4e8e\u5b58\u50a8\u5f02\u6216\u7ed3\u679c\u3002 n = nums.length \uff0c\u8868\u793a\u6570\u7ec4\u7684\u957f\u5ea6\u3002 \u7b2c\u4e00\u8f6e\u5faa\u73af (\u5f02\u6216\u6570\u7ec4\u4e2d\u7684\u5143\u7d20) \uff1a \u5728 for \u5faa\u73af\u4e2d\uff0c missing \u4f1a\u4f9d\u6b21\u4e0e\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\u3002 \u5047\u8bbe nums = [3, 0, 1] \uff0c\u8fd9\u65f6 missing \u5c06\u4f9d\u6b21\u53d8\u4e3a missing = 0 ^ 3 ^ 0 ^ 1 \u3002 \u8fd9\u4e00\u6b65\u9aa4\u7684\u76ee\u7684\u662f\u901a\u8fc7\u5f02\u6216\u5c06 nums \u6570\u7ec4\u4e2d\u7684\u6240\u6709\u5143\u7d20\u8bb0\u5f55\u5230 missing \u4e2d\u3002 \u7b2c\u4e8c\u8f6e\u5faa\u73af (\u5f02\u6216\u8303\u56f4 [0, n]) \uff1a \u7b2c\u4e8c\u4e2a for \u5faa\u73af\u4ece 0 \u5230 n \uff0c missing \u5c06\u4f9d\u6b21\u4e0e [0, n] \u8fd9\u4e2a\u8303\u56f4\u7684\u6240\u6709\u6570\u5b57\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\u3002 \u7531\u4e8e\u4e22\u5931\u7684\u6570\u5b57\u5b58\u5728\u4e8e [0, n] \u4e2d\uff0c\u4f46\u4e0d\u5728 nums \u4e2d\uff0c\u901a\u8fc7\u8fd9\u4e2a\u6b65\u9aa4\uff0c missing \u4f1a\u53d8\u4e3a\u6700\u7ec8\u7684\u4e22\u5931\u6570\u5b57\u3002 \u5229\u7528\u5f02\u6216\u6027\u8d28 \uff1a \u6700\u7ec8\uff0c\u6240\u6709\u6210\u5bf9\u51fa\u73b0\u7684\u6570\u5b57\u90fd\u4f1a\u88ab\u62b5\u6d88\u4e3a 0 \uff0c\u5269\u4e0b\u7684\u5c31\u662f\u90a3\u4e2a\u6ca1\u6709\u6210\u5bf9\u51fa\u73b0\u7684\u6570\u5b57\uff0c\u4e5f\u5c31\u662f\u4e22\u5931\u7684\u6570\u5b57\u3002","title":"\u5177\u4f53\u6b65\u9aa4\uff1a"},{"location":"lesson12/Lesson12%20Java/#_29","text":"class Solution { public int missingNumber(int[] nums) { int missing = 0; int n = nums.length; for (int i = 0; i < n; i++) { missing ^= nums[i]; } for (int i = 0; i <= n; i++) { missing ^= i; } return missing; } }","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson12/Lesson12%20Java/#3_1","text":"","title":"3. \u4e3e\u4e00\u53cd\u4e09"},{"location":"lesson12/Lesson12%20Java/#31-lc2309","text":"","title":"3.1 LC2309 \u517c\u5177\u5927\u5c0f\u5199\u7684\u6700\u597d\u82f1\u6587\u5b57\u6bcd"},{"location":"lesson12/Lesson12%20Java/#_30","text":"\u7ed9\u4f60\u4e00\u4e2a\u7531\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\u7684\u5b57\u7b26\u4e32 s \uff0c\u8bf7\u4f60\u627e\u51fa\u5e76\u8fd4\u56de s \u4e2d\u7684\u6700\u597d\u82f1\u6587\u5b57\u6bcd\u3002\u8fd4\u56de\u7684\u5b57\u6bcd\u5fc5\u987b\u4e3a\u5927\u5199\u5f62\u5f0f\u3002\u5982\u679c\u4e0d\u5b58\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u5b57\u6bcd\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32\u3002 \u6700\u597d\u82f1\u6587\u5b57\u6bcd\u7684\u5927\u5199\u548c\u5c0f\u5199\u5f62\u5f0f\u5fc5\u987b\u90fd\u5728 s \u4e2d\u51fa\u73b0\u3002 \u82f1\u6587\u5b57\u6bcd b \u6bd4\u53e6\u4e00\u4e2a\u82f1\u6587\u5b57\u6bcd a \u66f4\u597d \u7684\u524d\u63d0\u662f\uff1a\u82f1\u6587\u5b57\u6bcd\u8868\u4e2d\uff0c b \u5728 a \u4e4b\u540e\u51fa\u73b0\u3002 \u8bf7\u4f7f\u7528\u5c1d\u8bd5\u54c8\u5e0c\u8868\u548c\u4f4d\u8fd0\u7b97\u4e24\u79cd\u65b9\u5f0f\u89e3\u7b54\u6b64\u9898","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson12/Lesson12%20Java/#1_3","text":"\u4f7f\u7528\u54c8\u5e0c\u8868 ht \u4fdd\u5b58\u5b57\u7b26\u4e32 s \u4e2d\u51fa\u73b0\u8fc7\u7684\u5b57\u7b26\u3002\u904d\u5386\u5b57\u7b26\u4e32 s \uff0c\u5c06\u5f53\u524d\u5b57\u7b26 c \u52a0\u5165\u5230\u54c8\u5e0c\u8868 ht \u4e2d\u3002 \u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u82f1\u6587\u5b57\u6bcd\uff0c\u5982\u679c\u4e00\u4e2a\u82f1\u6587\u5b57\u6bcd\u7684\u5927\u5199\u5f62\u5f0f\u548c\u5c0f\u5199\u5f62\u5f0f\u90fd\u51fa\u73b0\u5728\u54c8\u5e0c\u8868 ht \u4e2d\uff0c\u90a3\u4e48\u76f4\u63a5\u8fd4\u56de\u8be5\u82f1\u6587\u5b57\u6bcd\u3002\u5982\u679c\u6240\u6709\u7684\u82f1\u6587\u5b57\u6bcd\u90fd\u4e0d\u7b26\u5408\u8981\u6c42\uff0c\u90a3\u4e48\u76f4\u63a5\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002","title":"\u89e3\u9898\u601d\u8def1\uff1a\u54c8\u5e0c\u8868"},{"location":"lesson12/Lesson12%20Java/#1_4","text":"import java.util.HashSet; import java.util.Set; class Solution { public String greatestLetter(String s) { Set<Character> ht = new HashSet<Character>(); for (int i = 0; i < s.length(); i++) { char c = s.charAt(i); ht.add(c); } for (int i = 25; i >= 0; i--) { if (ht.contains((char) ('a' + i)) && ht.contains((char) ('A' + i))) { return String.valueOf((char) ('A' + i)); } } return \"\"; } }","title":"\u53c2\u8003\u89e3\u7b541"},{"location":"lesson12/Lesson12%20Java/#2_4","text":"\u4f7f\u7528\u4e24\u4e2a 32 \u4f4d\u6574\u6570 lower \u548c upper \u5206\u522b\u8868\u793a\u5b57\u7b26\u4e32 s \u4e2d\u5c0f\u5199\u5b57\u6bcd\u548c\u5927\u5199\u5b57\u6bcd\u7684\u51fa\u73b0\u60c5\u51b5\u3002 \u904d\u5386\u5b57\u7b26\u4e32 s \uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5b57\u7b26 c \uff1a \u5982\u679c c \u662f\u5c0f\u5199\u5b57\u6bcd\uff0c\u5c06 lower \u7684\u5bf9\u5e94\u4f4d\u7f6e\u8bbe\u4e3a 1\uff1b \u5982\u679c c \u662f\u5927\u5199\u5b57\u6bcd\uff0c\u5c06 upper \u7684\u5bf9\u5e94\u4f4d\u7f6e\u8bbe\u4e3a 1\u3002 \u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u82f1\u6587\u5b57\u6bcd\uff0c\u5982\u679c\u53d1\u73b0\u67d0\u4e2a\u82f1\u6587\u5b57\u6bcd\u7684\u5927\u5c0f\u5199\u5f62\u5f0f\u5728 lower \u548c upper \u4e2d\u90fd\u51fa\u73b0\uff0c\u90a3\u4e48\u8fd4\u56de\u8be5\u5b57\u6bcd\u3002 \u5982\u679c\u6240\u6709\u7684\u5b57\u6bcd\u90fd\u4e0d\u7b26\u5408\u8981\u6c42\uff0c\u5219\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002","title":"\u89e3\u9898\u601d\u8def2\uff1a\u4f4d\u8fd0\u7b97"},{"location":"lesson12/Lesson12%20Java/#_31","text":"lower |= 1 << (c - 'a') \uff1a\u5c06\u5b57\u7b26 c \u5bf9\u5e94\u7684\u4f4d\u6570\u7f6e\u4e3a 1\uff0c\u8868\u793a\u8be5\u5b57\u7b26\u51fa\u73b0\u8fc7\u3002 upper |= 1 << (c - 'A') \uff1a\u540c\u7406\uff0c\u5c06\u5927\u5199\u5b57\u7b26 c \u5bf9\u5e94\u7684\u4f4d\u6570\u7f6e\u4e3a 1\u3002 lower & upper & (1 << i) \uff1a\u5224\u65ad\u5c0f\u5199\u548c\u5927\u5199\u7684\u7b2c i \u4f4d\u662f\u5426\u90fd\u4e3a 1\uff0c\u8868\u793a\u8be5\u5b57\u6bcd\u7684\u5927\u5c0f\u5199\u90fd\u51fa\u73b0\u8fc7\u3002","title":"\u4f4d\u8fd0\u7b97\u6280\u5de7"},{"location":"lesson12/Lesson12%20Java/#2_5","text":"class Solution { public String greatestLetter(String s) { int lower = 0, upper = 0; for (int i = 0; i < s.length(); i++) { char c = s.charAt(i); if (Character.isLowerCase(c)) { lower |= 1 << (c - 'a'); } else { upper |= 1 << (c - 'A'); } } for (int i = 25; i >= 0; i--) { if ((lower & upper & (1 << i)) != 0) { return String.valueOf((char) ('A' + i)); } } return \"\"; } }","title":"\u53c2\u8003\u89e3\u7b542"},{"location":"lesson12/Lesson12%20Java/#32-lc136","text":"","title":"3.2 LC136 \u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57"},{"location":"lesson12/Lesson12%20Java/#_32","text":"\u7ed9\u4f60\u4e00\u4e2a\u975e\u7a7a\u6574\u6570\u6570\u7ec4 nums \uff0c\u9664\u4e86\u67d0\u4e2a\u5143\u7d20\u53ea\u51fa\u73b0\u4e00\u6b21\u4ee5\u5916\uff0c\u5176\u4f59\u6bcf\u4e2a\u5143\u7d20\u5747\u51fa\u73b0\u4e24\u6b21\u3002\u627e\u51fa\u90a3\u4e2a\u53ea\u51fa\u73b0\u4e86\u4e00\u6b21\u7684\u5143\u7d20\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"lesson12/Lesson12%20Java/#1_5","text":"\u5bf9\u4e8e\u8fd9\u9053\u9898\u76ee\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 \u5f02\u6216\u8fd0\u7b97 \uff08 \u2295 \uff09\u3002\u5f02\u6216\u8fd0\u7b97\u6709\u4ee5\u4e0b\u4e09\u4e2a\u6027\u8d28\uff1a \u4efb\u4f55\u6570\u548c 0 \u505a\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u4ecd\u7136\u662f\u539f\u6765\u7684\u6570\uff0c\u5373 a \u2295 0 = a \u3002 \u4efb\u4f55\u6570\u548c\u5176\u81ea\u8eab\u505a\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u662f 0 \uff0c\u5373 a \u2295 a = 0 \u3002 \u5f02\u6216\u8fd0\u7b97\u6ee1\u8db3\u4ea4\u6362\u5f8b\u548c\u7ed3\u5408\u5f8b\uff0c\u5373 a \u2295 b \u2295 a = b \u2295 a \u2295 a = b \u2295 (a \u2295 a) = b \u2295 0 = b \u3002 \u5047\u8bbe\u6570\u7ec4\u4e2d\u6709 2m + 1 \u4e2a\u6570\uff0c\u5176\u4e2d\u6709 m \u4e2a\u6570\u5404\u51fa\u73b0\u4e24\u6b21\uff0c\u4e00\u4e2a\u6570\u51fa\u73b0\u4e00\u6b21\u3002\u4ee4 a 1 , a 2 , ..., a m \u4e3a\u51fa\u73b0\u4e24\u6b21\u7684 m \u4e2a\u6570\uff0ca m+1 \u4e3a\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u3002\u6839\u636e\u6027\u8d28 3\uff0c\u6570\u7ec4\u4e2d\u7684\u5168\u90e8\u5143\u7d20\u7684\u5f02\u6216\u8fd0\u7b97\u7ed3\u679c\u603b\u662f\u53ef\u4ee5\u5199\u6210\u5982\u4e0b\u5f62\u5f0f\uff1a (a 1 \u2295 a 1 ) \u2295 (a 2 \u2295 a 2 ) \u2295 \u22ef \u2295 (a m \u2295 a m ) \u2295 a m+1 \u6839\u636e\u6027\u8d28 2 \u548c\u6027\u8d28 1\uff0c\u4e0a\u5f0f\u53ef\u4ee5\u5316\u7b80\u4e3a\uff1a 0 \u2295 0 \u2295 \u22ef \u2295 0 \u2295 a m+1 = a m+1 \u56e0\u6b64\uff0c\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u5143\u7d20\u7684\u5f02\u6216\u8fd0\u7b97\u7ed3\u679c\u5c31\u662f\u6570\u7ec4\u4e2d\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u90a3\u4e2a\u6570\u3002","title":"\u89e3\u9898\u601d\u8def1 \u5f02\u6216\u8fd0\u7b97"},{"location":"lesson12/Lesson12%20Java/#_33","text":"class Solution { public int singleNumber(int[] nums) { int single = 0; for (int num : nums) { single ^= num; } return single; } }","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"lesson12/Lesson12%20Java/#2-hashset","text":"\u6211\u4eec\u53ef\u4ee5\u5229\u7528 HashSet \u7684\u7279\u70b9\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 \u5982\u679c\u4e00\u4e2a\u6570\u5b57\u5728\u96c6\u5408\u4e2d\u51fa\u73b0\u4e86\uff0c\u6211\u4eec\u5c06\u5176\u4ece\u96c6\u5408\u4e2d\u79fb\u9664\u3002 \u5982\u679c\u4e00\u4e2a\u6570\u5b57\u6ca1\u6709\u51fa\u73b0\u5728\u96c6\u5408\u4e2d\uff0c\u6211\u4eec\u5c06\u5176\u6dfb\u52a0\u5230\u96c6\u5408\u4e2d\u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u6570\u5b57\uff0c\u6211\u4eec\u53ea\u4f1a\u4fdd\u7559\u5b83\u5728\u96c6\u5408\u4e2d\u51fa\u73b0\u4e00\u6b21\u7684\u8bb0\u5f55\u3002\u5982\u679c\u67d0\u4e2a\u6570\u5b57\u51fa\u73b0\u4e86\u4e24\u6b21\uff0c\u5b83\u5c06\u88ab\u79fb\u9664\uff0c\u6700\u7ec8\u96c6\u5408\u4e2d\u5269\u4e0b\u7684\u552f\u4e00\u5143\u7d20\u5c31\u662f\u90a3\u4e2a\u53ea\u51fa\u73b0\u4e86\u4e00\u6b21\u7684\u6570\u5b57\u3002","title":"\u89e3\u9898\u601d\u8def2 HashSet"},{"location":"lesson12/Lesson12%20Java/#_34","text":"\u521b\u5efa\u4e00\u4e2a HashSet \uff0c\u7528\u4e8e\u5b58\u50a8\u6570\u7ec4\u4e2d\u7684\u6570\u5b57\u3002 \u904d\u5386\u6570\u7ec4\uff1a \u5982\u679c\u5f53\u524d\u6570\u5b57\u5df2\u7ecf\u5728\u96c6\u5408\u4e2d\u5b58\u5728\uff0c\u8bf4\u660e\u5b83\u662f\u91cd\u590d\u7684\uff0c\u5c06\u5176\u4ece\u96c6\u5408\u4e2d\u79fb\u9664\u3002 \u5982\u679c\u5f53\u524d\u6570\u5b57\u4e0d\u5728\u96c6\u5408\u4e2d\uff0c\u8bf4\u660e\u5b83\u662f\u7b2c\u4e00\u6b21\u51fa\u73b0\uff0c\u5c06\u5176\u52a0\u5165\u96c6\u5408\u3002 \u904d\u5386\u7ed3\u675f\u540e\uff0c\u96c6\u5408\u4e2d\u4ec5\u5269\u4e0b\u7684\u4e00\u4e2a\u5143\u7d20\u5c31\u662f\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57\u3002 \u56e0\u4e3a\u9898\u76ee\u4e2d\u7ed9\u5b9a\u7684\u6761\u4ef6\u662f\u53ea\u6709\u4e00\u4e2a\u6570\u5b57\u51fa\u73b0\u4e86\u4e00\u6b21\uff0c\u5176\u4f59\u7684\u6570\u5b57\u90fd\u51fa\u73b0\u4e86\u4e24\u6b21\uff0c\u6700\u7ec8 HashSet \u4e2d\u53ea\u4f1a\u5269\u4e0b\u90a3\u4e2a\u552f\u4e00\u7684\u6570\u5b57\u3002","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"lesson12/Lesson12%20Java/#_35","text":"import java.util.HashSet; class Solution { public int singleNumber(int[] nums) { HashSet<Integer> set = new HashSet<>(); for (int num : nums) { if (set.contains(num)) { set.remove(num); // \u79fb\u9664\u5df2\u7ecf\u51fa\u73b0\u4e24\u6b21\u7684\u6570\u5b57 } else { set.add(num); // \u6dfb\u52a0\u9996\u6b21\u51fa\u73b0\u7684\u6570\u5b57 } } // HashSet \u4e2d\u5269\u4e0b\u7684\u552f\u4e00\u5143\u7d20\u5c31\u662f\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57 return set.iterator().next(); } }","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"lesson12/Lesson12%20Java/#33-lc389","text":"","title":"3.3 LC389 \u627e\u4e0d\u540c"},{"location":"lesson12/Lesson12%20Java/#_36","text":"\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 s \u548c t \uff0c\u5b83\u4eec\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u3002 \u5b57\u7b26\u4e32 t \u7531\u5b57\u7b26\u4e32 s \u968f\u673a\u91cd\u6392\uff0c\u7136\u540e\u5728\u968f\u673a\u4f4d\u7f6e\u6dfb\u52a0\u4e00\u4e2a\u5b57\u6bcd\u3002 \u8bf7\u627e\u51fa\u5728 t \u4e2d\u88ab\u6dfb\u52a0\u7684\u5b57\u6bcd\u3002 \u5c1d\u8bd5\u4f7f\u7528 LC136 \u9898\u76ee\u7684\u4f4d\u8fd0\u7b97\u6280\u5de7\u89e3\u51b3\u672c\u9898","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"lesson12/Lesson12%20Java/#_37","text":"\u9898\u76ee\u8981\u6c42\u627e\u51fa\u5728\u5b57\u7b26\u4e32 t \u4e2d\u591a\u51fa\u6765\u7684\u90a3\u4e2a\u5b57\u7b26\u3002 \u6211\u4eec\u53ef\u4ee5\u5c06\u4e24\u4e2a\u5b57\u7b26\u4e32\u62fc\u63a5\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u628a\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42\u8fd9\u4e2a\u62fc\u63a5\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u5947\u6570\u6b21\u7684\u5b57\u7b26\u3002\u56e0\u4e3a\u5176\u4ed6\u5b57\u7b26\u90fd\u4f1a\u51fa\u73b0\u5076\u6570\u6b21\uff0c\u6700\u7ec8\u7684\u7ed3\u679c\u53ea\u4f1a\u5269\u4e0b\u90a3\u4e2a\u51fa\u73b0\u5947\u6570\u6b21\u7684\u5b57\u7b26\u3002 \u7c7b\u4f3c\u4e8e\u300c136. \u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57\u300d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 \u5f02\u6216\u8fd0\u7b97 \u6765\u89e3\u51b3\u6b64\u95ee\u9898\uff1a \u5f02\u6216\u8fd0\u7b97\u7684\u6027\u8d28 \uff1a \u4efb\u4f55\u6570\u548c 0 \u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u4e3a\u8be5\u6570\u672c\u8eab\uff1a a \u2295 0 = a \u3002 \u4efb\u4f55\u6570\u548c\u81ea\u5df1\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u4e3a 0\uff1a a \u2295 a = 0 \u3002 \u5f02\u6216\u8fd0\u7b97\u6ee1\u8db3\u4ea4\u6362\u5f8b\u548c\u7ed3\u5408\u5f8b\uff1a a \u2295 b \u2295 a = (a \u2295 a) \u2295 b = 0 \u2295 b = b \u3002 \u6839\u636e\u8fd9\u4e9b\u6027\u8d28\uff0c\u5982\u679c\u6211\u4eec\u5c06 s \u548c t \u7684\u6240\u6709\u5b57\u7b26\u90fd\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u6210\u5bf9\u51fa\u73b0\u7684\u5b57\u7b26\u6700\u7ec8\u4f1a\u62b5\u6d88\uff0c\u5269\u4e0b\u7684\u5c31\u662f t \u4e2d\u90a3\u4e2a\u591a\u51fa\u6765\u7684\u5b57\u7b26\u3002","title":"\u601d\u8def\u8bb2\u89e3"},{"location":"lesson12/Lesson12%20Java/#_38","text":"\u521d\u59cb\u5316\u4e00\u4e2a\u6574\u6570 ret \uff0c\u8868\u793a\u5f02\u6216\u7ed3\u679c\uff0c\u521d\u59cb\u503c\u4e3a 0\u3002 \u904d\u5386\u5b57\u7b26\u4e32 s \u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\uff0c\u5c06\u5b57\u7b26\u7684 ASCII \u503c\u4e0e ret \u8fdb\u884c\u5f02\u6216\u64cd\u4f5c\u3002 \u904d\u5386\u5b57\u7b26\u4e32 t \u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\uff0c\u540c\u6837\u5c06\u5176 ASCII \u503c\u4e0e ret \u8fdb\u884c\u5f02\u6216\u64cd\u4f5c\u3002 \u8fd4\u56de\u6700\u7ec8 ret \u7684\u503c\uff0c\u5b83\u5c31\u662f\u90a3\u4e2a\u591a\u51fa\u6765\u7684\u5b57\u7b26\u3002","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"lesson12/Lesson12%20Java/#_39","text":"class Solution { public char findTheDifference(String s, String t) { int ret = 0; // \u5bf9\u5b57\u7b26\u4e32 s \u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u8fdb\u884c\u5f02\u6216\u64cd\u4f5c for (int i = 0; i < s.length(); ++i) { ret ^= s.charAt(i); } // \u5bf9\u5b57\u7b26\u4e32 t \u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u8fdb\u884c\u5f02\u6216\u64cd\u4f5c for (int i = 0; i < t.length(); ++i) { ret ^= t.charAt(i); } // \u8fd4\u56de\u5f02\u6216\u7ed3\u679c\uff0c\u5373\u591a\u51fa\u6765\u7684\u5b57\u7b26 return (char) ret; } }","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"lesson12/Lesson12%20Java/#4_1","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC868 \u4e8c\u8fdb\u5236\u95f4\u8ddd \u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u8ba1\u7b97\u5b83\u5728\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u4e24\u4e2a\u76f8\u90bb\u7684 1 \u4e4b\u95f4\u7684\u6700\u5927\u8ddd\u79bb\u3002 LC1486 \u6570\u7ec4\u5f02\u6216\u64cd\u4f5c \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570 n \u548c\u4e00\u4e2a\u6574\u6570 start\uff0c\u751f\u6210\u4e00\u4e2a\u6570\u7ec4\uff0c\u8fd4\u56de\u6570\u7ec4\u4e2d\u6240\u6709\u5143\u7d20\u7684\u5f02\u6216\u7ed3\u679c\u3002 LC1720 \u89e3\u7801\u5f02\u6216\u540e\u7684\u6570\u7ec4 \u7ed9\u5b9a\u4e00\u4e2a\u5f02\u6216\u540e\u7684\u6570\u7ec4\uff0c\u8fd4\u56de\u5176\u539f\u59cb\u6570\u7ec4\u3002 LC645 \u9519\u8bef\u7684\u96c6\u5408 \u96c6\u5408 S \u5305\u542b [1, n] \u4e2d\u7684 n \u4e2a\u6574\u6570\uff0c\u4f46\u5176\u4e2d\u6709\u4e00\u4e2a\u91cd\u590d\u7684\u6570\u548c\u4e00\u4e2a\u7f3a\u5931\u7684\u6570\uff0c\u627e\u51fa\u5b83\u4eec\u3002 LC693 \u4ea4\u66ff\u4f4d\u4e8c\u8fdb\u5236\u6570 \u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u5224\u65ad\u5176\u4e8c\u8fdb\u5236\u8868\u793a\u662f\u5426\u4e3a\u4ea4\u66ff\u4f4d\u3002","title":"4. \u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson12/Lesson12%20Python/","text":"\u4f4d\u8fd0\u7b97\u4e13\u9898 \u76ee\u5f55 1. \u4f4d\u8fd0\u7b97 1.1 \u57fa\u672c\u6982\u5ff5 1.2 \u5e38\u7528\u4f4d\u8fd0\u7b97\u64cd\u4f5c 1.3 \u5e94\u7528\u5b9e\u4f8b 2. \u4f8b\u9898\u8bb2\u89e3 2.1 LC231 2\u7684\u5e42 2.2 LC268 \u4e22\u5931\u7684\u6570\u5b57 3. \u4e3e\u4e00\u53cd\u4e09 3.1 LC2309 \u517c\u5177\u5927\u5c0f\u5199\u7684\u6700\u597d\u82f1\u6587\u5b57\u6bcd 3.2 LC136 \u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57 3.3 LC389 \u627e\u4e0d\u540c 4. \u8bfe\u540e\u7ec3\u4e60 1. \u4f4d\u8fd0\u7b97 \u4f4d\u8fd0\u7b97\u7b80\u4ecb \u4f4d\u8fd0\u7b97\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u7684\u4e00\u79cd\u57fa\u7840\u8fd0\u7b97\u65b9\u5f0f\uff0c\u5b83\u76f4\u63a5\u64cd\u4f5c\u4e8c\u8fdb\u5236\u6570\u7684\u4f4d\u3002\u4f4d\u8fd0\u7b97\u5728\u5904\u7406\u6574\u6570\u3001\u4f18\u5316\u7b97\u6cd5\u3001\u6570\u636e\u538b\u7f29\u7b49\u9886\u57df\u5177\u6709\u91cd\u8981\u5e94\u7528\u3002\u4ee5\u4e0b\u662f\u4f4d\u8fd0\u7b97\u7684\u57fa\u672c\u6982\u5ff5\u3001\u5e38\u7528\u64cd\u4f5c\u53ca\u5e94\u7528\u5b9e\u4f8b\u3002 1.1 \u57fa\u672c\u6982\u5ff5 \u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u6574\u6570\u901a\u5e38\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0f\u5b58\u50a8\u3002\u4f4d\u8fd0\u7b97\u5c31\u662f\u901a\u8fc7\u5bf9\u8fd9\u4e9b\u4e8c\u8fdb\u5236\u4f4d\u8fdb\u884c\u64cd\u4f5c\u6765\u5b9e\u73b0\u7279\u5b9a\u7684\u8ba1\u7b97\u3002\u4f4d\u8fd0\u7b97\u7684\u64cd\u4f5c\u7b26\u76f4\u63a5\u5bf9\u4e8c\u8fdb\u5236\u4f4d\u8fdb\u884c\u5904\u7406\uff0c\u56e0\u6b64\u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u9002\u7528\u4e8e\u9700\u8981\u9ad8\u6548\u8ba1\u7b97\u7684\u573a\u5408\u3002 1.2 \u5e38\u7528\u4f4d\u8fd0\u7b97\u64cd\u4f5c \u6309\u4f4d\u4e0e\uff08AND\uff09 & \u5bf9\u4e24\u4e2a\u6574\u6570\u7684\u6bcf\u4e00\u4f4d\u6267\u884c\u903b\u8f91\u4e0e\u8fd0\u7b97\u3002\u53ea\u6709\u5f53\u4e24\u4e2a\u76f8\u5e94\u7684\u4f4d\u90fd\u662f1\u65f6\uff0c\u7ed3\u679c\u4f4d\u624d\u4e3a1\uff0c\u5426\u5219\u4e3a0\u3002 \u793a\u4f8b \uff1a 5 & 3 = 1 5: 0101 3: 0011 -------------- 0001 (\u7ed3\u679c\u4e3a1) \u6309\u4f4d\u6216\uff08OR\uff09 | \u5bf9\u4e24\u4e2a\u6574\u6570\u7684\u6bcf\u4e00\u4f4d\u6267\u884c\u903b\u8f91\u6216\u8fd0\u7b97\u3002\u53ea\u8981\u5176\u4e2d\u4e00\u4e2a\u76f8\u5e94\u7684\u4f4d\u662f1\uff0c\u7ed3\u679c\u4f4d\u5c31\u4e3a1\u3002 \u793a\u4f8b \uff1a 5 | 3 = 7 5: 0101 3: 0011 -------------- 0111 (\u7ed3\u679c\u4e3a7) \u6309\u4f4d\u5f02\u6216\uff08XOR\uff09 ^ \u5bf9\u4e24\u4e2a\u6574\u6570\u7684\u6bcf\u4e00\u4f4d\u6267\u884c\u903b\u8f91\u5f02\u6216\u8fd0\u7b97\u3002\u5f53\u4e24\u4e2a\u76f8\u5e94\u7684\u4f4d\u4e0d\u540c\u65f6\uff0c\u7ed3\u679c\u4f4d\u4e3a1\uff1b\u76f8\u540c\u65f6\u4e3a0\u3002 \u793a\u4f8b \uff1a 5 ^ 3 = 6 5: 0101 3: 0011 -------------- 0110 (\u7ed3\u679c\u4e3a6) \u5f02\u6216\u8fd0\u7b97\u7684\u6027\u8d28 \uff1a \u4efb\u4f55\u6570\u548c 0 \u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u4e3a\u8be5\u6570\u672c\u8eab\uff1a a \u2295 0 = a \u3002 \u4efb\u4f55\u6570\u548c\u81ea\u5df1\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u4e3a 0\uff1a a \u2295 a = 0 \u3002 \u5f02\u6216\u8fd0\u7b97\u6ee1\u8db3\u4ea4\u6362\u5f8b\u548c\u7ed3\u5408\u5f8b\uff1a a \u2295 b \u2295 a = (a \u2295 a) \u2295 b = 0 \u2295 b = b \u3002 \u6309\u4f4d\u53d6\u53cd\uff08NOT\uff09 ~ \u5bf9\u6bcf\u4e00\u4f4d\u8fdb\u884c\u53d6\u53cd\u64cd\u4f5c\u30020\u53d8\u4e3a1\uff0c1\u53d8\u4e3a0\u3002 \u793a\u4f8b \uff1a ~5 = -6 5: 0101 -------------- 1010 (\u53d6\u53cd\u540e\u4e3a-6\uff0c\u4f7f\u7528\u8865\u7801\u8868\u793a\u6cd5) \u5de6\u79fb\uff08<<\uff09 \u5c06\u4e8c\u8fdb\u5236\u6570\u7684\u6240\u6709\u4f4d\u5411\u5de6\u79fb\u52a8\u6307\u5b9a\u7684\u4f4d\u6570\u3002\u5de6\u79fbn\u4f4d\u76f8\u5f53\u4e8e\u4e58\u4ee5 2^n \u3002 \u793a\u4f8b \uff1a 5 << 1 = 10 5: 0101 -------------- 1010 (\u7ed3\u679c\u4e3a10) \u53f3\u79fb\uff08>>\uff09 \u5c06\u4e8c\u8fdb\u5236\u6570\u7684\u6240\u6709\u4f4d\u5411\u53f3\u79fb\u52a8\u6307\u5b9a\u7684\u4f4d\u6570\u3002\u53f3\u79fbn\u4f4d\u76f8\u5f53\u4e8e\u6574\u9664 (2^n)\u3002 \u793a\u4f8b \uff1a 5 >> 1 = 2 5: 0101 -------------- 0010 (\u7ed3\u679c\u4e3a2) 1.3 \u5e94\u7528\u5b9e\u4f8b \u5e38\u89c1\u7684\u4f4d\u8fd0\u7b97\u6280\u5de7 \u4f4d\u8fd0\u7b97\u53ef\u4ee5\u9ad8\u6548\u5730\u5904\u7406\u8bb8\u591a\u95ee\u9898\uff0c\u7279\u522b\u662f\u5728\u9700\u8981\u64cd\u4f5c\u4e8c\u8fdb\u5236\u6570\u5b57\u65f6\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u7528\u7684\u4f4d\u8fd0\u7b97\u6280\u5de7\u53ca\u5176\u5e94\u7528\uff1a \u7c7b\u578b1:\u7528\u4e8e\u5224\u65ad 1. \u5224\u65ad\u5947\u5076\u6027 \u6280\u5de7 \uff1a n & 1 \u539f\u7406 \uff1a\u5982\u679c n \u662f\u5947\u6570\uff0c\u90a3\u4e48 n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u7684\u6700\u4f4e\u4f4d\u662f 1\uff1b\u5982\u679c\u662f\u5076\u6570\uff0c\u5219\u6700\u4f4e\u4f4d\u662f 0\u3002\u56e0\u6b64\uff0c n & 1 \u53ef\u4ee5\u76f4\u63a5\u5224\u65ad\u5947\u5076\u6027\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a is_odd = (n & 1) == 1 2. \u6e05\u9664\u6700\u4f4e\u4f4d\u7684 1 \uff08\u5224\u65ad\u662f\u5426\u662f 2 \u7684\u5e42\u6b21\u65b9\uff09 \u6280\u5de7 \uff1a n & (n - 1) \u539f\u7406 \uff1a\u5c06 n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u7684\u6700\u4f4e\u4f4d\u7684 1 \u6e05\u9664\u3002\u9002\u7528\u4e8e\u5224\u65ad\u662f\u5426\u4e3a 2 \u7684\u5e42\u6b21\u65b9\uff0c\u4ee5\u53ca\u7edf\u8ba1\u4e8c\u8fdb\u5236\u6570\u4e2d 1 \u7684\u4e2a\u6570\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a n = n & (n - 1) # \u6e05\u9664\u6700\u4f4e\u4f4d\u7684 1 \u7279\u6027 \uff1a\u5982\u679c n \u662f\u6b63\u6574\u6570\u4e14\u6ee1\u8db3 n & (n - 1) == 0 \uff0c\u8fd9\u610f\u5473\u7740 n \u662f 2 \u7684\u5e42\u3002 \u89e3\u91ca\uff1a \u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u7684 2 \u7684\u5e42 \u5f53\u4e00\u4e2a\u6570\u662f 2 \u7684\u5e42\u65f6\uff0c\u5b83\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d \u53ea\u6709\u4e00\u4e2a\u4f4d\u662f 1 \uff0c\u5176\u4f59\u6240\u6709\u4f4d\u90fd\u662f 0\u3002 \u6bd4\u5982\uff1a 2 0 = 1 -> 0001 (\u4e8c\u8fdb\u5236) 2 1 = 2 -> 0010 2 2 = 4 -> 0100 2 3 = 8 -> 1000 \u8fd9\u610f\u5473\u7740 2 \u7684\u5e42\u603b\u662f\u5f62\u5982 100...0 \u7684\u5f62\u5f0f \uff0c\u5373\u4e00\u4e2a 1 \u540e\u9762\u8ddf\u7740\u82e5\u5e72\u4e2a 0 \u3002 n - 1 \u7684\u4e8c\u8fdb\u5236\u7279\u6027 \u5f53\u6211\u4eec\u4ece\u4e00\u4e2a 2 \u7684\u5e42\u51cf\u53bb 1 \u65f6\uff0c\u7ed3\u679c\u4f1a\u5c06\u539f\u6765\u552f\u4e00\u7684 1 \u53d8\u6210 0 \uff0c\u5e76\u5c06\u5176\u540e\u9762\u7684 0 \u53d8\u6210 1 \u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff1a n = 8 = 1000 n - 1 = 7 = 0111 \u53ef\u4ee5\u770b\u5230\uff0c n \u548c n - 1 \u5728\u4e8c\u8fdb\u5236\u8868\u793a\u4e0a\u662f\u5b8c\u5168\u4e92\u8865\u7684\uff0c n \u53ea\u6709\u4e00\u4e2a 1 \u540e\u9762\u5168\u662f 0 \uff0c\u800c n - 1 \u5219\u662f\u539f\u6765 1 \u53d8\u6210 0 \uff0c\u540e\u9762\u7684 0 \u5168\u90e8\u53d8\u6210 1 \u3002 \u6309\u4f4d\u4e0e\u8fd0\u7b97 ( n & (n - 1) ) \u6309\u4f4d\u4e0e\u8fd0\u7b97 \u4f1a\u5c06\u4e24\u4e2a\u6570\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u9010\u4f4d\u8fdb\u884c\u6bd4\u8f83\uff0c\u53ea\u6709\u5728\u76f8\u540c\u4f4d\u4e0a\u4e24\u4e2a\u6570\u5b57\u90fd\u662f 1 \u65f6\u7ed3\u679c\u624d\u4e3a 1 \uff0c\u5176\u4ed6\u60c5\u51b5\u4e3a 0 \u3002 \u5bf9\u4e8e 2 \u7684\u5e42 n \uff0c\u5176\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u53ea\u6709\u4e00\u4f4d\u662f 1 \uff0c\u800c n - 1 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u5728\u76f8\u540c\u4f4d\u7f6e\u662f 0 \uff0c\u5176\u5b83\u4f4d\u5219\u662f 1 \u3002\u8fd9\u6837\u4e00\u6765\uff0c n & (n - 1) \u7684\u7ed3\u679c\u4f1a\u662f 0 \uff0c\u56e0\u4e3a\u5728\u4e8c\u8fdb\u5236\u4e2d\u6ca1\u6709\u76f8\u540c\u4f4d\u7f6e\u7684 1 \u4e86\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff1a n = 8 = 1000 n - 1 = 7 = 0111 8 & 7 = 1000 & 0111 = 0000 \u4e3a\u4ec0\u4e48 n & (n - 1) \u53ef\u4ee5\u5224\u65ad 2 \u7684\u5e42\uff1f \u5982\u679c n \u662f 2 \u7684\u5e42\uff0c\u5b83\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u53ea\u6709\u4e00\u4e2a 1 \uff0c\u4e14 n - 1 \u4f1a\u4f7f\u8fd9\u4e2a 1 \u7684\u4f4d\u7f6e\u53d8\u4e3a 0 \uff0c\u540e\u9762\u7684 0 \u53d8\u4e3a 1 \u3002\u8fd9\u6837 n & (n - 1) \u7684\u7ed3\u679c\u4e00\u5b9a\u662f 0 \u3002 \u5982\u679c n \u4e0d\u662f 2 \u7684\u5e42\uff0c\u5b83\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u81f3\u5c11\u6709\u4e24\u4e2a 1 \uff0c\u90a3\u4e48 n - 1 \u5e76\u4e0d\u80fd\u5c06\u6240\u6709\u7684 1 \u90fd\u62b5\u6d88\u6389\uff0c n & (n - 1) \u7684\u7ed3\u679c\u5c31\u4e0d\u4f1a\u662f 0 \u3002 3. \u83b7\u53d6\u6700\u4f4e\u4f4d\u7684 1 \uff08\u5224\u65ad\u662f\u5426\u662f 2 \u7684\u5e42\u6b21\u65b9\uff09 n & -n \u8fd9\u4e2a\u6280\u5de7\u53ef\u4ee5\u9ad8\u6548\u5730\u63d0\u53d6\u51fa\u4e00\u4e2a\u6574\u6570\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u6700\u4f4e\u4f4d\u7684 1\u3002\u540c\u6837\uff0c\u5b83\u53ef\u4ee5\u7528\u4e8e\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u5426\u662f 2 \u7684\u5e42\u3002\u8ba9\u6211\u4eec\u901a\u8fc7\u8be6\u7ec6\u89e3\u91ca\u6765\u7406\u89e3\u5176\u539f\u7406\uff1a \u8d1f\u6570\u7684\u4e8c\u8fdb\u5236\u8868\u793a \u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u8d1f\u6570\u662f\u6309\u7167 \u8865\u7801 \u89c4\u5219\u5b58\u50a8\u7684\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u8d1f\u6570\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u662f\u6b63\u6570\u7684\u6bcf\u4e00\u4f4d\u53d6\u53cd\u540e\u52a0 1\u3002 \u6bd4\u5982\uff1a n = 12 = 1100 2 -n = -12 \uff0c\u9996\u5148\u53d6\u53cd 1100 2 -> 0011 2 \uff0c\u7136\u540e\u52a0 1\uff0c\u5f97\u5230 0100 2 n & -n \u7684\u8fd0\u7b97\u539f\u7406 \u5f53\u6211\u4eec\u6267\u884c n & -n \u65f6\uff0c\u8ba1\u7b97\u7ed3\u679c\u4f1a\u4fdd\u7559\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d \u6700\u4f4e\u4f4d\u7684 1 \uff0c\u800c\u5176\u4f59\u4f4d\u90fd\u4f1a\u53d8\u4e3a 0\u3002\u8fd9\u662f\u56e0\u4e3a\uff1a \u5bf9\u4e8e n \uff0c\u5176\u6700\u4f4e\u4f4d\u7684 1 \u4e4b\u540e\u7684\u6240\u6709\u4f4d\u90fd\u662f 0\u3002 \u5bf9\u4e8e -n \uff0c\u6700\u4f4e\u4f4d\u7684 1 \u4ee5\u53ca\u4e4b\u540e\u7684\u6240\u6709\u4f4d\u90fd\u4f1a\u53d6\u53cd\uff0c\u6700\u4f4e\u4f4d\u7684 1 \u4f9d\u7136\u5b58\u5728\uff0c\u800c\u66f4\u9ad8\u4f4d\u5219\u53d8\u4e3a 0\u3002 \u5c06 n \u548c -n \u8fdb\u884c\u6309\u4f4d\u4e0e\u8fd0\u7b97\u65f6\uff0c\u9ad8\u4f4d\u90fd\u4f1a\u53d8\u6210 0\uff0c\u53ea\u6709\u6700\u4f4e\u4f4d\u7684 1 \u4fdd\u7559\u4e0b\u6765\uff0c\u5176\u4ed6\u4f4d\u53d8\u4e3a 0\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff1a n = 12 = 1100 2 -n = -12 = 0100 2 12 & (-12) = 1100 2 & 0100 2 = 0100 2 \u7ed3\u679c\u662f\u4e8c\u8fdb\u5236\u6570\u4e2d\u6700\u4f4e\u4f4d\u7684 1\u3002 n & -n \u5224\u65ad\u662f\u5426\u4e3a 2 \u7684\u5e42 \u5982\u679c n \u662f 2 \u7684\u5e42\uff0c\u5b83\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u53ea\u6709\u4e00\u4e2a 1\uff0c\u540e\u9762\u8ddf\u7740\u82e5\u5e72\u4e2a 0\uff0c\u6bd4\u5982 n = 8 = 1000 2 \u3002 \u5bf9\u4e8e\u8fd9\u6837\u7684\u6570\uff0c n & -n \u7684\u7ed3\u679c\u5fc5\u7136\u7b49\u4e8e n \uff0c\u56e0\u4e3a\u4e8c\u8fdb\u5236\u4e2d\u53ea\u6709\u4e00\u4e2a 1\uff0c\u6309\u4f4d\u4e0e\u4e4b\u540e\u7684\u7ed3\u679c\u4e5f\u53ea\u4f1a\u662f\u8be5\u4f4d\u7684 1\uff0c\u5176\u4ed6\u4f4d\u4e3a 0\u3002 \u56e0\u6b64\uff0c\u5982\u679c n & -n == n \uff0c\u53ef\u4ee5\u786e\u5b9a n \u662f 2 \u7684\u5e42\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff1a n = 8 = 1000 2 -n = -8 = 1000 2 \uff08\u56e0\u4e3a\u6700\u9ad8\u4f4d 1 \u4e4b\u540e\u6ca1\u6709 0\uff0c\u6240\u4ee5\u6ca1\u6709\u53d8\u5316\uff09 8 & -8 = 1000 2 \u6b64\u65f6 n & -n == n \uff0c\u6240\u4ee5 8 \u662f 2 \u7684\u5e42\u3002 4. \u5224\u65ad\u4e24\u4e2a\u6570\u7684\u7b26\u53f7\u662f\u5426\u76f8\u540c \u6280\u5de7 \uff1a (a ^ b) >= 0 \u539f\u7406 \uff1a\u5982\u679c a \u548c b \u7684\u7b26\u53f7\u76f8\u540c\uff0c\u90a3\u4e48\u5b83\u4eec\u7684\u7b26\u53f7\u4f4d\u76f8\u540c\uff0c\u5f02\u6216\u7ed3\u679c\u7684\u7b26\u53f7\u4f4d\u4e3a 0\uff0c\u56e0\u6b64 (a ^ b) >= 0 \u4e3a\u771f\uff1b\u5426\u5219\u4e3a\u5047\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a same_sign = (a ^ b) >= 0 ### \u5224\u65ad\u4e24\u4e2a\u6570\u7684\u7b26\u53f7\u662f\u5426\u76f8\u540c \u5224\u65ad\u4e24\u4e2a\u6574\u6570\u7684\u7b26\u53f7\u662f\u5426\u76f8\u540c\u53ef\u4ee5\u901a\u8fc7\u5f02\u6216\u8fd0\u7b97\uff08 ^ \uff09\u6765\u5b9e\u73b0\uff0c\u8fd9\u79cd\u65b9\u6cd5\u975e\u5e38\u9ad8\u6548\uff0c\u4e0d\u9700\u8981\u50cf\u4f20\u7edf\u7684\u65b9\u5f0f\u90a3\u6837\u5206\u522b\u5224\u65ad\u6b63\u8d1f\u53f7\u3002 #### \u539f\u7406\u89e3\u6790 \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u4e86\u89e3\u6574\u6570\u5728\u8ba1\u7b97\u673a\u4e2d\u7684\u4e8c\u8fdb\u5236\u8868\u793a\uff1a \u7b26\u53f7\u4f4d \uff1a\u6574\u6570\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\uff0c\u6700\u9ad8\u4f4d\uff08\u6700\u5de6\u8fb9\u7684\u4e00\u4f4d\uff09\u662f \u7b26\u53f7\u4f4d \u3002\u5f53\u7b26\u53f7\u4f4d\u4e3a 0 \u65f6\uff0c\u8868\u793a\u6b63\u6570\uff1b\u5f53\u7b26\u53f7\u4f4d\u4e3a 1 \u65f6\uff0c\u8868\u793a\u8d1f\u6570\u3002 \u4f8b\u5982\uff0c\u5bf9\u4e8e 32 \u4f4d\u6574\u6570\uff1a \u6b63\u6570 5 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 00000000 00000000 00000000 00000101 \u8d1f\u6570 -5 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 11111111 11111111 11111111 11111011 #### \u901a\u8fc7\u5f02\u6216\u5224\u65ad\u7b26\u53f7 \u6211\u4eec\u53ef\u4ee5\u5229\u7528\u5f02\u6216\u8fd0\u7b97\u6765\u5224\u65ad\u4e24\u4e2a\u6570\u7684\u7b26\u53f7\u662f\u5426\u76f8\u540c\u3002\u5173\u952e\u70b9\u5728\u4e8e\u5f02\u6216\u8fd0\u7b97\u7684\u7ed3\u679c\u7684 \u7b26\u53f7\u4f4d \u3002 \u7b26\u53f7\u4f4d\u5206\u6790 \uff1a \u5982\u679c a \u548c b \u7684\u7b26\u53f7\u76f8\u540c\uff0c\u4e8c\u8005\u7684\u7b26\u53f7\u4f4d\u4e5f\u4f1a\u76f8\u540c\uff0c\u5f02\u6216\u540e\u7684\u7ed3\u679c\u5728\u7b26\u53f7\u4f4d\u4f1a\u662f 0 \uff0c\u5373\u7ed3\u679c\u662f \u975e\u8d1f\u6570 \u3002 \u5982\u679c a \u548c b \u7684\u7b26\u53f7\u4e0d\u540c\uff0c\u4e8c\u8005\u7684\u7b26\u53f7\u4f4d\u4f1a\u4e0d\u540c\uff0c\u5f02\u6216\u540e\u7684\u7ed3\u679c\u5728\u7b26\u53f7\u4f4d\u4f1a\u662f 1 \uff0c\u5373\u7ed3\u679c\u662f \u8d1f\u6570 \u3002 \u76f8\u540c\u7b26\u53f7 \uff1a \u5047\u8bbe a = 5 \u548c b = 10 \uff0c\u5b83\u4eec\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u5982\u4e0b\uff1a a = 5 : 00000000 00000000 00000000 00000101 b = 10 : 00000000 00000000 00000000 00001010 \u5b83\u4eec\u7684\u7b26\u53f7\u4f4d\u90fd\u662f 0 \uff0c\u8868\u793a\u5b83\u4eec\u90fd\u662f\u6b63\u6570\u3002 \u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff1a a ^ b = 00000000 00000000 00000000 00000101 ^ 00000000 00000000 00000000 00001010 ------------------------------------- 00000000 00000000 00000000 00001111 \u7ed3\u679c\u7684\u7b26\u53f7\u4f4d\u4ecd\u7136\u662f 0 \uff0c\u8bf4\u660e\u7ed3\u679c\u662f\u975e\u8d1f\u6570\uff0c\u56e0\u6b64 (a ^ b) >= 0 \u4e3a\u771f\uff0c\u8868\u660e\u5b83\u4eec\u7684\u7b26\u53f7\u76f8\u540c\u3002 \u4e0d\u540c\u7b26\u53f7 \uff1a \u5047\u8bbe a = 5 \u548c b = -10 \uff0c\u5b83\u4eec\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u5982\u4e0b\uff1a a = 5 : 00000000 00000000 00000000 00000101 b = -10 : 11111111 11111111 11111111 11110110 \uff08\u8d1f\u6570\u5728\u8ba1\u7b97\u673a\u4e2d\u4f7f\u7528\u8865\u7801\u8868\u793a\uff09 \u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff1a a ^ b = 00000000 00000000 00000000 00000101 ^ 11111111 11111111 11111111 11110110 ------------------------------------- 11111111 11111111 11111111 11110011 \u7ed3\u679c\u7684\u7b26\u53f7\u4f4d\u662f 1 \uff0c\u8bf4\u660e\u7ed3\u679c\u662f\u8d1f\u6570\uff0c\u56e0\u6b64 (a ^ b) < 0 \u4e3a\u771f\uff0c\u8868\u660e\u5b83\u4eec\u7684\u7b26\u53f7\u4e0d\u540c\u3002 #### \u603b\u7ed3 \u5982\u679c a \u548c b \u7b26\u53f7\u76f8\u540c \uff0c\u5219 (a ^ b) \u7684\u7b26\u53f7\u4f4d\u4e3a 0 \uff0c\u5f02\u6216\u7ed3\u679c\u4e3a\u975e\u8d1f\u6570\uff0c\u6545 (a ^ b) >= 0 \u4e3a\u771f\u3002 \u5982\u679c a \u548c b \u7b26\u53f7\u4e0d\u540c \uff0c\u5219 (a ^ b) \u7684\u7b26\u53f7\u4f4d\u4e3a 1 \uff0c\u5f02\u6216\u7ed3\u679c\u4e3a\u8d1f\u6570\uff0c\u6545 (a ^ b) >= 0 \u4e3a\u5047\u3002 \u901a\u8fc7\u8fd9\u4e00\u6280\u5de7\uff0c\u6211\u4eec\u53ef\u4ee5\u9ad8\u6548\u5730\u5224\u65ad\u4e24\u4e2a\u6574\u6570\u7684\u7b26\u53f7\u662f\u5426\u76f8\u540c\uff0c\u907f\u514d\u4e86\u4f20\u7edf\u65b9\u6cd5\u4e2d\u7684\u5206\u652f\u5224\u65ad\u903b\u8f91\uff08\u5982 if-else \uff09\u3002 \u7c7b\u578b 2 \u5f02\u6216\u8fd0\u7b97\u6280\u5de7 5. \u4ea4\u6362\u4e24\u4e2a\u6570 \u6280\u5de7 \uff1a\u4f7f\u7528\u4ee5\u4e0b\u4e09\u6b65\u6765\u4ea4\u6362 a \u548c b \u7684\u503c\uff1a python a = a ^ b b = a ^ b a = a ^ b \u5f02\u6216\u8fd0\u7b97\u7684\u539f\u7406 \u5173\u952e\u7684\u5f02\u6216\u8fd0\u7b97\u6027\u8d28\uff1a a ^ a = 0 \uff1a\u4e00\u4e2a\u6570\u4e0e\u81ea\u8eab\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u662f 0\u3002 a ^ 0 = a \uff1a\u4e00\u4e2a\u6570\u4e0e 0 \u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u8fd8\u662f\u8be5\u6570\u672c\u8eab\u3002 \u4ea4\u6362\u5f8b \uff1a a ^ b = b ^ a \uff0c\u5373\u5f02\u6216\u8fd0\u7b97\u662f\u53ef\u4ea4\u6362\u7684\u3002 \u7ed3\u5408\u5f8b \uff1a a ^ (b ^ c) = (a ^ b) ^ c \uff0c\u5373\u5f02\u6216\u8fd0\u7b97\u662f\u53ef\u7ed3\u5408\u7684\u3002 \u57fa\u4e8e\u8fd9\u4e9b\u6027\u8d28\uff0c\u53ef\u4ee5\u901a\u8fc7\u8fde\u7eed\u4e09\u6b21\u5f02\u6216\u8fd0\u7b97\u6765\u5b8c\u6210\u4e24\u4e2a\u53d8\u91cf\u7684\u4ea4\u6362\u3002 \u8be6\u7ec6\u6b65\u9aa4 \u5047\u8bbe\u4e24\u4e2a\u6570\u4e3a a = 5 \u548c b = 3 \uff0c\u6211\u4eec\u6765\u9010\u6b65\u5206\u6790\u901a\u8fc7\u5f02\u6216\u64cd\u4f5c\u4ea4\u6362\u5b83\u4eec\u7684\u503c\u3002 \u7b2c\u4e00\u6b65 \uff1a a = a ^ b \u5bf9 a \u8fdb\u884c\u8d4b\u503c\u64cd\u4f5c\uff1a a = 5 ^ 3 5 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 101 \uff0c 3 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 011 \u3002 a = 101 ^ 011 = 110 \uff0c\u5373 a = 6 \uff08\u6b64\u65f6 a \u7684\u503c\u4e3a 6 \uff0c b \u4ecd\u7136\u662f 3 \uff09\u3002 \u7b2c\u4e8c\u6b65 \uff1a b = a ^ b \u5bf9 b \u8fdb\u884c\u8d4b\u503c\u64cd\u4f5c\uff1a b = a ^ b = 6 ^ 3 6 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 110 \uff0c 3 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 011 \u3002 b = 110 ^ 011 = 101 \uff0c\u5373 b = 5 \uff08\u6b64\u65f6 b \u7684\u503c\u53d8\u6210\u4e86 5 \uff0c a \u4ecd\u7136\u662f 6 \uff09\u3002 \u7b2c\u4e09\u6b65 \uff1a a = a ^ b \u5bf9 a \u8fdb\u884c\u8d4b\u503c\u64cd\u4f5c\uff1a a = a ^ b = 6 ^ 5 6 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 110 \uff0c 5 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 101 \u3002 a = 110 ^ 101 = 011 \uff0c\u5373 a = 3 \uff08\u6b64\u65f6 a \u7684\u503c\u53d8\u6210\u4e86 3 \uff0c\u800c b \u7684\u503c\u662f 5 \uff09\u3002 \u6700\u7ec8\u7ed3\u679c \u901a\u8fc7\u8fd9\u4e09\u6b21\u5f02\u6216\u64cd\u4f5c\uff0c a \u7684\u521d\u59cb\u503c 5 \u88ab\u8d4b\u7ed9\u4e86 b \uff0c\u800c b \u7684\u521d\u59cb\u503c 3 \u88ab\u8d4b\u7ed9\u4e86 a \u3002\u56e0\u6b64\uff0c\u4e24\u4e2a\u6570\u5728\u6ca1\u6709\u4f7f\u7528\u4e34\u65f6\u53d8\u91cf\u7684\u60c5\u51b5\u4e0b\u5b8c\u6210\u4e86\u4ea4\u6362\u3002 \u4ee3\u7801\u793a\u4f8b a = 5 b = 3 print(f\"Before swap: a = {a}, b = {b}\") # \u901a\u8fc7\u5f02\u6216\u64cd\u4f5c\u4ea4\u6362 a \u548c b \u7684\u503c a = a ^ b # a \u53d8\u4e3a a ^ b b = a ^ b # b \u53d8\u4e3a a a = a ^ b # a \u53d8\u4e3a b print(f\"After swap: a = {a}, b = {b}\") \u8f93\u51fa\u7ed3\u679c Before swap: a = 5, b = 3 After swap: a = 3, b = 5 \u7c7b\u578b 3\uff1a\u5feb\u901f\u8fd0\u7b97 6. \u5c06\u6574\u6570\u7684\u7b2c k \u4f4d\u8bbe\u4e3a 1 \u6280\u5de7 \uff1a n | (1 << k) \u539f\u7406 \uff1a\u901a\u8fc7\u5de6\u79fb\u8fd0\u7b97\u5c06 1 \u79fb\u52a8\u5230\u7b2c k \u4f4d\uff0c\u7136\u540e\u4e0e n \u8fdb\u884c\u6309\u4f4d\u6216\u8fd0\u7b97\uff0c\u5c06\u7b2c k \u4f4d\u8bbe\u4e3a 1\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a python n = n | (1 << k) 7. \u5c06\u6574\u6570\u7684\u7b2c k \u4f4d\u8bbe\u4e3a 0 \u6280\u5de7 \uff1a n & ~(1 << k) \u539f\u7406 \uff1a\u5148\u901a\u8fc7\u5de6\u79fb\u8fd0\u7b97\u5c06 1 \u79fb\u52a8\u5230\u7b2c k \u4f4d\uff0c\u7136\u540e\u5bf9\u5176\u53d6\u53cd\uff0c\u5c06\u5176\u4f59\u4f4d\u8bbe\u4e3a 1\uff0c k \u4f4d\u8bbe\u4e3a 0\uff0c\u518d\u4e0e n \u8fdb\u884c\u6309\u4f4d\u4e0e\u8fd0\u7b97\uff0c\u6e05\u9664\u7b2c k \u4f4d\u7684\u503c\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a python n = n & ~(1 << k) 8. \u83b7\u53d6\u6574\u6570\u7684\u7b2c k \u4f4d\u503c \u6280\u5de7 \uff1a (n >> k) & 1 \u539f\u7406 \uff1a\u901a\u8fc7\u53f3\u79fb\u8fd0\u7b97\u5c06\u7b2c k \u4f4d\u79fb\u5230\u6700\u4f4e\u4f4d\uff0c\u7136\u540e\u4e0e 1 \u8fdb\u884c\u6309\u4f4d\u4e0e\u8fd0\u7b97\uff0c\u5224\u65ad\u8be5\u4f4d\u662f 0 \u8fd8\u662f 1\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a python bit = (n >> k) & 1 9. \u7edf\u8ba1\u6574\u6570\u7684\u4e8c\u8fdb\u5236\u4e2d 1 \u7684\u4e2a\u6570 \u6280\u5de7 \uff1a\u4f7f\u7528 n & (n - 1) \u4e0d\u65ad\u6e05\u9664\u6700\u4f4e\u4f4d\u7684 1 \u539f\u7406 \uff1a\u6bcf\u6b21\u6267\u884c n & (n - 1) \u90fd\u4f1a\u51cf\u5c11\u4e00\u4e2a 1\uff0c\u76f4\u5230 n \u53d8\u4e3a 0\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a python count = 0 while n > 0: n = n & (n - 1) count += 1 \u4e0e\u4f20\u7edf\u65b9\u5f0f\u7684\u6bd4\u8f83 \u4f20\u7edf\u65b9\u6cd5\uff1a\u6574\u9664 2 \u4f20\u7edf\u7684\u65b9\u6cd5\u662f\u901a\u8fc7\u4e0d\u65ad\u5c06 n \u9664\u4ee5 2 \u6765\u5224\u65ad n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u7684 1 \u7684\u4e2a\u6570\u3002\u6bcf\u6b21\u9664\u4ee5 2 \u53ef\u4ee5\u83b7\u53d6\u5f53\u524d\u6700\u53f3\u8fb9\u7684\u4e00\u4f4d\uff0c\u901a\u8fc7\u5224\u65ad\u8fd9\u4f4d\u662f\u5426\u662f 1 \u6765\u589e\u52a0\u8ba1\u6570\u3002 \u793a\u4f8b\u4ee3\u7801 \uff1a python count = 0 while n > 0: if n % 2 == 1: count += 1 n = n // 2 # \u4f7f\u7528\u6574\u6570\u9664\u6cd5 \u7f3a\u70b9 \uff1a\u8be5\u65b9\u6cd5\u9700\u8981\u904d\u5386\u4e8c\u8fdb\u5236\u8868\u793a\u7684\u6bcf\u4e00\u4f4d\uff0c\u4e5f\u5c31\u662f\u9700\u8981\u5faa\u73af\u7684\u6b21\u6570\u4e0e n \u7684\u6bd4\u7279\u6570\u6210\u6b63\u6bd4\u3002\u56e0\u6b64\uff0c\u5982\u679c n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u6709\u5f88\u591a 0\uff0c\u8fd9\u79cd\u65b9\u6cd5\u6548\u7387\u8f83\u4f4e\u3002\u5bf9\u4e8e\u4e00\u4e2a 32 \u4f4d\u7684\u6574\u6570\uff0c\u6700\u591a\u9700\u8981\u6267\u884c 32 \u6b21\u64cd\u4f5c\u3002 \u4f7f\u7528 n & (n - 1) \u7684\u65b9\u6cd5 \u901a\u8fc7 n & (n - 1) \uff0c\u6bcf\u6b21\u8fd0\u7b97\u76f4\u63a5\u5c06 n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d \u6700\u4f4e\u4f4d\u7684 1 \u6e05\u9664\u3002\u56e0\u6b64\uff0c\u6267\u884c\u7684\u6b21\u6570\u7b49\u4e8e n \u4e2d 1 \u7684\u4e2a\u6570\uff0c\u800c\u4e0d\u662f\u6bd4\u7279\u6570\u3002 \u539f\u7406 \uff1a n & (n - 1) \u7684\u4f5c\u7528\u662f\u5c06 n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u6700\u4f4e\u4f4d\u7684 1 \u53d8\u4e3a 0\u3002 \u6bcf\u6b21\u6267\u884c\u4e00\u6b21 n & (n - 1) \uff0c\u6211\u4eec\u5c31\u79fb\u9664\u4e86\u4e00\u4e2a 1\uff0c\u76f4\u5230\u6240\u6709\u7684 1 \u90fd\u88ab\u79fb\u9664\uff0c n \u53d8\u4e3a 0 \u4e3a\u6b62\u3002 10. \u5feb\u901f\u8ba1\u7b97 2 \u7684\u5e42 \u6280\u5de7 \uff1a 1 << k \u539f\u7406 \uff1a\u5de6\u79fb\u8fd0\u7b97\u76f8\u5f53\u4e8e\u5c06 1 \u5411\u5de6\u79fb\u52a8 k \u4f4d\uff0c\u8fd9\u6837\u53ef\u4ee5\u5feb\u901f\u5f97\u5230 2^k \u7684\u7ed3\u679c\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a python power_of_two = 1 << k # \u7b49\u540c\u4e8e 2**k 2. \u4f8b\u9898\u8bb2\u89e3 2.1 LC 231 2\u7684\u5e42 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u4f60\u4e00\u4e2a\u6574\u6570 n \uff0c\u8bf7\u4f60\u5224\u65ad\u8be5\u6574\u6570\u662f\u5426\u662f 2 \u7684\u5e42\u6b21\u65b9\u3002\u5982\u679c\u662f\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002 \u5982\u679c\u5b58\u5728\u4e00\u4e2a\u6574\u6570 x \u4f7f\u5f97 n == 2^x \uff0c\u5219\u8ba4\u4e3a n \u662f 2 \u7684\u5e42\u6b21\u65b9\u3002 \u65b9\u6cd5\uff1a\u4f4d\u8fd0\u7b97 \u4e00\u4e2a\u6570 n \u662f 2 \u7684\u5e42\uff0c\u5f53\u4e14\u4ec5\u5f53 n \u662f\u6b63\u6574\u6570\uff0c\u5e76\u4e14 n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u4ec5\u5305\u542b 1 \u4e2a 1\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u4f4d\u8fd0\u7b97\u6280\u5de7\u6765\u5224\u65ad\u3002 \u4f4d\u8fd0\u7b97\u6280\u5de7 \u4f7f\u7528 n & (n - 1) \u5224\u65ad class Solution: def isPowerOfTwo(self, n: int) -> bool: return n > 0 and (n & (n - 1)) == 0 \u4f7f\u7528 n & (-n) \u5224\u65ad class Solution: def isPowerOfTwo(self, n: int) -> bool: return n > 0 and (n & -n) == n 2.2 LC268 \u4e22\u5931\u7684\u6570\u5b57 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b [0, n] \u4e2d n \u4e2a\u6570\u7684\u6570\u7ec4 nums\uff0c\u627e\u51fa [0, n] \u8fd9\u4e2a\u8303\u56f4\u5185\u6ca1\u6709\u51fa\u73b0\u5728\u6570\u7ec4\u4e2d\u7684\u90a3\u4e2a\u6570\u3002 \u601d\u8def\u8bb2\u89e3 \u65b9\u6cd5\u4e00\uff1a\u4f7f\u7528set \u89e3\u9898\u601d\u8def **\u6784\u5efa\u4e00\u4e2a\u96c6\u5408set\uff1a\u5c06\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u6570\u5b58\u5165set\u4e2d\u3002 \u904d\u5386\u67e5\u627e\u7f3a\u5931\u7684\u6570\u5b57 \uff1a\u7136\u540e\u904d\u5386 [0, n] \u7684\u6240\u6709\u6570\uff0c\u68c0\u67e5\u54ea\u4e2a\u6570\u5b57\u4e0d\u5728set\u4e2d\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u4e00\u65e6\u53d1\u73b0\u67d0\u4e2a\u6570\u5b57\u4e0d\u5728 set \u4e2d\uff0c\u5373\u53ef\u8fd4\u56de\u8be5\u6570\u5b57\u4f5c\u4e3a\u7f3a\u5931\u7684\u6570\u5b57\u3002 \u53c2\u8003\u89e3\u7b54 class Solution: def missingNumber(self, nums: List[int]) -> int: num_set = set(nums) for i in range(len(nums) + 1): if i not in num_set: return i \u65b9\u6cd5\u4e8c\uff1a\u4f7f\u7528\u4f4d\u8fd0\u7b97\uff08\u5f02\u6216\uff09 \u89e3\u9898\u601d\u8def \u8fd9\u9053\u9898\u7684\u6838\u5fc3\u601d\u8def\u662f\u57fa\u4e8e \u5f02\u6216\u8fd0\u7b97 \u7684\u6027\u8d28\u6765\u627e\u5230\u4e22\u5931\u7684\u6570\u5b57\u3002\u6e29\u4e60\u5f02\u6216\u8fd0\u7b97\u7684\u4ee5\u4e0b\u51e0\u4e2a\u5173\u952e\u6027\u8d28\uff1a 1. \u4ea4\u6362\u5f8b\u548c\u7ed3\u5408\u5f8b \uff1a a ^ b ^ c \u548c a ^ c ^ b \u7684\u7ed3\u679c\u76f8\u540c\uff0c\u5373\u987a\u5e8f\u65e0\u5173\u3002 2. \u76f8\u540c\u6570\u5b57\u5f02\u6216\u4e3a 0 \uff1a a ^ a = 0 \uff0c\u5373\u4e24\u4e2a\u76f8\u540c\u7684\u6570\u5b57\u5f02\u6216\u4f1a\u4e92\u76f8\u62b5\u6d88\u4e3a 0\u3002 3. \u4efb\u4f55\u6570\u5b57\u4e0e 0 \u5f02\u6216\u7b49\u4e8e\u81ea\u8eab \uff1a a ^ 0 = a \u3002 \u5177\u4f53\u6b65\u9aa4\uff1a \u521d\u59cb\u5316\u53d8\u91cf \uff1a missing \u53d8\u91cf\u521d\u59cb\u503c\u4e3a 0\uff0c\u7528\u4e8e\u5b58\u50a8\u5f02\u6216\u7ed3\u679c\u3002 n = len(nums) \uff0c\u8868\u793a\u6570\u7ec4\u7684\u957f\u5ea6\u3002 \u7b2c\u4e00\u8f6e\u5faa\u73af (\u5f02\u6216\u6570\u7ec4\u4e2d\u7684\u5143\u7d20) \uff1a \u5728 for \u5faa\u73af\u4e2d\uff0c missing \u4f1a\u4f9d\u6b21\u4e0e\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\u3002 \u5047\u8bbe nums = [3, 0, 1] \uff0c\u8fd9\u65f6 missing \u5c06\u4f9d\u6b21\u53d8\u4e3a missing = 0 ^ 3 ^ 0 ^ 1 \u3002 \u8fd9\u4e00\u6b65\u9aa4\u7684\u76ee\u7684\u662f\u901a\u8fc7\u5f02\u6216\u5c06 nums \u6570\u7ec4\u4e2d\u7684\u6240\u6709\u5143\u7d20\u8bb0\u5f55\u5230 missing \u4e2d\u3002 \u7b2c\u4e8c\u8f6e\u5faa\u73af (\u5f02\u6216\u8303\u56f4 [0, n]) \uff1a \u7b2c\u4e8c\u4e2a for \u5faa\u73af\u4ece 0 \u5230 n \uff0c missing \u5c06\u4f9d\u6b21\u4e0e [0, n] \u8fd9\u4e2a\u8303\u56f4\u7684\u6240\u6709\u6570\u5b57\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\u3002 \u7531\u4e8e\u4e22\u5931\u7684\u6570\u5b57\u5b58\u5728\u4e8e [0, n] \u4e2d\uff0c\u4f46\u4e0d\u5728 nums \u4e2d\uff0c\u901a\u8fc7\u8fd9\u4e2a\u6b65\u9aa4\uff0c missing \u4f1a\u53d8\u4e3a\u6700\u7ec8\u7684\u4e22\u5931\u6570\u5b57\u3002 \u5229\u7528\u5f02\u6216\u6027\u8d28 \uff1a \u6700\u7ec8\uff0c\u6240\u6709\u6210\u5bf9\u51fa\u73b0\u7684\u6570\u5b57\u90fd\u4f1a\u88ab\u62b5\u6d88\u4e3a 0 \uff0c\u5269\u4e0b\u7684\u5c31\u662f\u90a3\u4e2a\u6ca1\u6709\u6210\u5bf9\u51fa\u73b0\u7684\u6570\u5b57\uff0c\u4e5f\u5c31\u662f\u4e22\u5931\u7684\u6570\u5b57\u3002 \u53c2\u8003\u89e3\u7b54 class Solution: def missingNumber(self, nums: List[int]) -> int: missing = 0 n = len(nums) # \u7b2c\u4e00\u8f6e\u5faa\u73af\uff0c\u5f02\u6216\u6570\u7ec4\u4e2d\u7684\u5143\u7d20 for i in range(n): missing ^= nums[i] # \u7b2c\u4e8c\u8f6e\u5faa\u73af\uff0c\u5f02\u6216\u8303\u56f4 [0, n] for i in range(n + 1): missing ^= i return missing 3. \u4e3e\u4e00\u53cd\u4e09 3.1 LC2309 \u517c\u5177\u5927\u5c0f\u5199\u7684\u6700\u597d\u82f1\u6587\u5b57\u6bcd \u95ee\u9898\u63cf\u8ff0 \u7ed9\u4f60\u4e00\u4e2a\u7531\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\u7684\u5b57\u7b26\u4e32 s \uff0c\u8bf7\u4f60\u627e\u51fa\u5e76\u8fd4\u56de s \u4e2d\u7684\u6700\u597d\u82f1\u6587\u5b57\u6bcd\u3002\u8fd4\u56de\u7684\u5b57\u6bcd\u5fc5\u987b\u4e3a\u5927\u5199\u5f62\u5f0f\u3002\u5982\u679c\u4e0d\u5b58\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u5b57\u6bcd\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32\u3002 \u6700\u597d\u82f1\u6587\u5b57\u6bcd\u7684\u5927\u5199\u548c\u5c0f\u5199\u5f62\u5f0f\u5fc5\u987b\u90fd\u5728 s \u4e2d\u51fa\u73b0\u3002 \u82f1\u6587\u5b57\u6bcd b \u6bd4\u53e6\u4e00\u4e2a\u82f1\u6587\u5b57\u6bcd a \u66f4\u597d \u7684\u524d\u63d0\u662f\uff1a\u82f1\u6587\u5b57\u6bcd\u8868\u4e2d\uff0cb \u5728 a \u4e4b\u540e\u51fa\u73b0\u3002 \u89e3\u9898\u601d\u8def1\uff1a\u54c8\u5e0c\u8868 \u4f7f\u7528\u54c8\u5e0c\u8868\u4fdd\u5b58\u5b57\u7b26\u4e32 s \u4e2d\u51fa\u73b0\u8fc7\u7684\u5b57\u7b26\u3002\u904d\u5386\u5b57\u7b26\u4e32 s \uff0c\u5c06\u5f53\u524d\u5b57\u7b26 c \u52a0\u5165\u5230\u54c8\u5e0c\u8868\u4e2d\u3002 \u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u82f1\u6587\u5b57\u6bcd\uff0c\u5982\u679c\u4e00\u4e2a\u82f1\u6587\u5b57\u6bcd\u7684\u5927\u5199\u5f62\u5f0f\u548c\u5c0f\u5199\u5f62\u5f0f\u90fd\u51fa\u73b0\u5728\u54c8\u5e0c\u8868\u4e2d\uff0c\u90a3\u4e48\u76f4\u63a5\u8fd4\u56de\u8be5\u82f1\u6587\u5b57\u6bcd\u3002\u5982\u679c\u6240\u6709\u7684\u82f1\u6587\u5b57\u6bcd\u90fd\u4e0d\u7b26\u5408\u8981\u6c42\uff0c\u90a3\u4e48\u76f4\u63a5\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002 \u53c2\u8003\u89e3\u7b541 class Solution: def greatestLetter(self, s: str) -> str: # \u7528\u4e00\u4e2aset\u6765\u4fdd\u5b58\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u7684\u5b57\u6bcd present_letters = set(s) # \u521d\u59cb\u5316best\u4e3a\u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32 best = \"\" # \u904d\u5386\u6240\u6709\u5927\u5199\u5b57\u6bcd for c in range(ord('A'), ord('Z') + 1): # \u68c0\u67e5\u5927\u5199\u548c\u5bf9\u5e94\u7684\u5c0f\u5199\u5b57\u6bcd\u662f\u5426\u90fd\u5728\u5b57\u7b26\u4e32\u4e2d if chr(c) in present_letters and chr(c + 32) in present_letters: # \u5982\u679c\u540c\u65f6\u5b58\u5728\uff0c\u5219\u6bd4\u8f83\u5927\u5c0f\uff0c\u627e\u5230\u5b57\u6bcd\u8868\u4e2d\u9760\u540e\u7684\u5b57\u6bcd best = chr(c) if best == \"\" or c > ord(best) else best return best \u89e3\u9898\u601d\u8def2\uff1a\u4f4d\u8fd0\u7b97 \u4f7f\u7528\u4e24\u4e2a 32 \u4f4d\u6574\u6570 lower \u548c upper \u5206\u522b\u8868\u793a\u5b57\u7b26\u4e32 s \u4e2d\u5c0f\u5199\u5b57\u6bcd\u548c\u5927\u5199\u5b57\u6bcd\u7684\u51fa\u73b0\u60c5\u51b5\u3002 \u904d\u5386\u5b57\u7b26\u4e32 s \uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5b57\u7b26 c \uff1a \u5982\u679c c \u662f\u5c0f\u5199\u5b57\u6bcd\uff0c\u5c06 lower \u7684\u5bf9\u5e94\u4f4d\u7f6e\u8bbe\u4e3a 1\uff1b \u5982\u679c c \u662f\u5927\u5199\u5b57\u6bcd\uff0c\u5c06 upper \u7684\u5bf9\u5e94\u4f4d\u7f6e\u8bbe\u4e3a 1\u3002 \u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u82f1\u6587\u5b57\u6bcd\uff0c\u5982\u679c\u53d1\u73b0\u67d0\u4e2a\u82f1\u6587\u5b57\u6bcd\u7684\u5927\u5c0f\u5199\u5f62\u5f0f\u5728 lower \u548c upper \u4e2d\u90fd\u51fa\u73b0\uff0c\u90a3\u4e48\u8fd4\u56de\u8be5\u5b57\u6bcd\u3002 \u5982\u679c\u6240\u6709\u7684\u5b57\u6bcd\u90fd\u4e0d\u7b26\u5408\u8981\u6c42\uff0c\u5219\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002 \u4f4d\u8fd0\u7b97\u6280\u5de7 lower |= 1 << (ord(c) - ord('a')) \uff1a\u5c06\u5b57\u7b26 c \u5bf9\u5e94\u7684\u4f4d\u6570\u7f6e\u4e3a 1\uff0c\u8868\u793a\u8be5\u5b57\u7b26\u51fa\u73b0\u8fc7\u3002 upper |= 1 << (ord(c) - ord('A')) \uff1a\u540c\u7406\uff0c\u5c06\u5927\u5199\u5b57\u7b26 c \u5bf9\u5e94\u7684\u4f4d\u6570\u7f6e\u4e3a 1\u3002 lower & upper & (1 << i) \uff1a\u5224\u65ad\u5c0f\u5199\u548c\u5927\u5199\u7684\u7b2c i \u4f4d\u662f\u5426\u90fd\u4e3a 1\uff0c\u8868\u793a\u8be5\u5b57\u6bcd\u7684\u5927\u5c0f\u5199\u90fd\u51fa\u73b0\u8fc7\u3002 \u53c2\u8003\u89e3\u7b542 class Solution: def greatestLetter(self, s: str) -> str: lower = upper = 0 for c in s: if c.islower(): lower |= 1 << (ord(c) - ord('a')) else: upper |= 1 << (ord(c) - ord('A')) for i in range(25, -1, -1): if lower & upper & (1 << i): return chr(ord('A') + i) return \"\" 3.2 LC136 \u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u4f60\u4e00\u4e2a\u975e\u7a7a\u6574\u6570\u6570\u7ec4 nums \uff0c\u9664\u4e86\u67d0\u4e2a\u5143\u7d20\u53ea\u51fa\u73b0\u4e00\u6b21\u4ee5\u5916\uff0c\u5176\u4f59\u6bcf\u4e2a\u5143\u7d20\u5747\u51fa\u73b0\u4e24\u6b21\u3002\u627e\u51fa\u90a3\u4e2a\u53ea\u51fa\u73b0\u4e86\u4e00\u6b21\u7684\u5143\u7d20\u3002 \u89e3\u9898\u601d\u8def1\uff1a\u5f02\u6216\u8fd0\u7b97 \u5bf9\u4e8e\u8fd9\u9053\u9898\u76ee\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 \u5f02\u6216\u8fd0\u7b97 \uff08 \u2295 \uff09\u3002\u5f02\u6216\u8fd0\u7b97\u6709\u4ee5\u4e0b\u4e09\u4e2a\u6027\u8d28\uff1a \u4efb\u4f55\u6570\u548c 0 \u505a\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u4ecd\u7136\u662f\u539f\u6765\u7684\u6570\uff0c\u5373 a \u2295 0 = a \u3002 \u4efb\u4f55\u6570\u548c\u5176\u81ea\u8eab\u505a\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u662f 0 \uff0c\u5373 a \u2295 a = 0 \u3002 \u5f02\u6216\u8fd0\u7b97\u6ee1\u8db3\u4ea4\u6362\u5f8b\u548c\u7ed3\u5408\u5f8b\uff0c\u5373 a \u2295 b \u2295 a = b \u2295 a \u2295 a = b \u2295 (a \u2295 a) = b \u2295 0 = b \u3002 \u5047\u8bbe\u6570\u7ec4\u4e2d\u6709 2m + 1 \u4e2a\u6570\uff0c\u5176\u4e2d\u6709 m \u4e2a\u6570\u5404\u51fa\u73b0\u4e24\u6b21\uff0c\u4e00\u4e2a\u6570\u51fa\u73b0\u4e00\u6b21\u3002\u4ee4 a1, a2, ..., am \u4e3a\u51fa\u73b0\u4e24\u6b21\u7684 m \u4e2a\u6570\uff0c am+1 \u4e3a\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u3002\u6839\u636e\u6027\u8d28 3\uff0c\u6570\u7ec4\u4e2d\u7684\u5168\u90e8\u5143\u7d20\u7684\u5f02\u6216\u8fd0\u7b97\u7ed3\u679c\u603b\u662f\u53ef\u4ee5\u5199\u6210\u5982\u4e0b\u5f62\u5f0f\uff1a (a 1 \u2295 a 1 ) \u2295 (a 2 \u2295 a 2 ) \u2295 \u22ef \u2295 (a m \u2295 a m ) \u2295 a m+1 \u6839\u636e\u6027\u8d28 2 \u548c\u6027\u8d28 1\uff0c\u4e0a\u5f0f\u53ef\u4ee5\u5316\u7b80\u4e3a\uff1a 0 \u2295 0 \u2295 \u22ef \u2295 0 \u2295 a m+1 = a m+1 \u56e0\u6b64\uff0c\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u5143\u7d20\u7684\u5f02\u6216\u8fd0\u7b97\u7ed3\u679c\u5c31\u662f\u6570\u7ec4\u4e2d\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u90a3\u4e2a\u6570\u3002 \u4ee3\u7801\u5b9e\u73b0 class Solution: def singleNumber(self, nums: List[int]) -> int: result = 0 for num in nums: result ^= num return result \u89e3\u9898\u601d\u8def2\uff1a\u54c8\u5e0c\u8868 \u6211\u4eec\u53ef\u4ee5\u5229\u7528 set \u7684\u7279\u70b9\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 \u5982\u679c\u4e00\u4e2a\u6570\u5b57\u5728\u96c6\u5408\u4e2d\u51fa\u73b0\u4e86\uff0c\u6211\u4eec\u5c06\u5176\u4ece\u96c6\u5408\u4e2d\u79fb\u9664\u3002 \u5982\u679c\u4e00\u4e2a\u6570\u5b57\u6ca1\u6709\u51fa\u73b0\u5728\u96c6\u5408\u4e2d\uff0c\u6211\u4eec\u5c06\u5176\u6dfb\u52a0\u5230\u96c6\u5408\u4e2d\u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u6570\u5b57\uff0c\u6211\u4eec\u53ea\u4f1a\u4fdd\u7559\u5b83\u5728\u96c6\u5408\u4e2d\u51fa\u73b0\u4e00\u6b21\u7684\u8bb0\u5f55\u3002\u5982\u679c\u67d0\u4e2a\u6570\u5b57\u51fa\u73b0\u4e86\u4e24\u6b21\uff0c\u5b83\u5c06\u88ab\u79fb\u9664\uff0c\u6700\u7ec8\u96c6\u5408\u4e2d\u5269\u4e0b\u7684\u552f\u4e00\u5143\u7d20\u5c31\u662f\u90a3\u4e2a\u53ea\u51fa\u73b0\u4e86\u4e00\u6b21\u7684\u6570\u5b57\u3002 \u89e3\u9898\u6b65\u9aa4 \u521b\u5efa\u4e00\u4e2a set \uff0c\u7528\u4e8e\u5b58\u50a8\u6570\u7ec4\u4e2d\u7684\u6570\u5b57\u3002 \u904d\u5386\u6570\u7ec4\uff1a \u5982\u679c\u5f53\u524d\u6570\u5b57\u5df2\u7ecf\u5728\u96c6\u5408\u4e2d\u5b58\u5728\uff0c\u8bf4\u660e\u5b83\u662f\u91cd\u590d\u7684\uff0c\u5c06\u5176\u4ece\u96c6\u5408\u4e2d\u79fb\u9664\u3002 \u5982\u679c\u5f53\u524d\u6570\u5b57\u4e0d\u5728\u96c6\u5408\u4e2d\uff0c\u8bf4\u660e\u5b83\u662f\u7b2c\u4e00\u6b21\u51fa\u73b0\uff0c\u5c06\u5176\u52a0\u5165\u96c6\u5408\u3002 \u904d\u5386\u7ed3\u675f\u540e\uff0c\u96c6\u5408\u4e2d\u4ec5\u5269\u4e0b\u7684\u4e00\u4e2a\u5143\u7d20\u5c31\u662f\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57\u3002 \u56e0\u4e3a\u9898\u76ee\u4e2d\u7ed9\u5b9a\u7684\u6761\u4ef6\u662f\u53ea\u6709\u4e00\u4e2a\u6570\u5b57\u51fa\u73b0\u4e86\u4e00\u6b21\uff0c\u5176\u4f59\u7684\u6570\u5b57\u90fd\u51fa\u73b0\u4e86\u4e24\u6b21\uff0c\u6700\u7ec8 set \u4e2d\u53ea\u4f1a\u5269\u4e0b\u90a3\u4e2a\u552f\u4e00\u7684\u6570\u5b57\u3002 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a Set \u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u904d\u5386\u6570\u7ec4\u65f6\uff0c\u5982\u679c\u67d0\u4e2a\u6570\u5b57\u5df2\u7ecf\u5728 Set \u4e2d\u5b58\u5728\uff0c\u5c31\u5c06\u5b83\u79fb\u9664\uff1b\u5426\u5219\u5c06\u5b83\u52a0\u5165\u3002\u6700\u540e\u5269\u4e0b\u7684\u90a3\u4e2a\u6570\u5b57\u5c31\u662f\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57\u3002 class Solution: def singleNumber(self, nums: List[int]) -> int: num_set = set() for num in nums: if num in num_set: num_set.remove(num) else: num_set.add(num) return num_set.pop() 3.3 LC389 \u627e\u4e0d\u540c \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 s \u548c t \uff0c\u5b83\u4eec\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u3002 \u5b57\u7b26\u4e32 t \u7531\u5b57\u7b26\u4e32 s \u968f\u673a\u91cd\u6392\uff0c\u7136\u540e\u5728\u968f\u673a\u4f4d\u7f6e\u6dfb\u52a0\u4e00\u4e2a\u5b57\u6bcd\u3002 \u8bf7\u627e\u51fa\u5728 t \u4e2d\u88ab\u6dfb\u52a0\u7684\u5b57\u6bcd\u3002 \u5c1d\u8bd5\u4f7f\u7528 LC136 \u9898\u76ee\u7684\u4f4d\u8fd0\u7b97\u6280\u5de7\u89e3\u51b3\u672c\u9898 \u601d\u8def\u8bb2\u89e3 \u9898\u76ee\u8981\u6c42\u627e\u51fa\u5728\u5b57\u7b26\u4e32 t \u4e2d\u591a\u51fa\u6765\u7684\u90a3\u4e2a\u5b57\u7b26\u3002 \u6211\u4eec\u53ef\u4ee5\u5c06\u4e24\u4e2a\u5b57\u7b26\u4e32\u62fc\u63a5\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u628a\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42\u8fd9\u4e2a\u62fc\u63a5\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u5947\u6570\u6b21\u7684\u5b57\u7b26\u3002\u56e0\u4e3a\u5176\u4ed6\u5b57\u7b26\u90fd\u4f1a\u51fa\u73b0\u5076\u6570\u6b21\uff0c\u6700\u7ec8\u7684\u7ed3\u679c\u53ea\u4f1a\u5269\u4e0b\u90a3\u4e2a\u51fa\u73b0\u5947\u6570\u6b21\u7684\u5b57\u7b26\u3002 \u7c7b\u4f3c\u4e8e\u300c136. \u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57\u300d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 \u5f02\u6216\u8fd0\u7b97 \u6765\u89e3\u51b3\u6b64\u95ee\u9898\uff1a \u5f02\u6216\u8fd0\u7b97\u7684\u6027\u8d28 \uff1a \u4efb\u4f55\u6570\u548c 0 \u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u4e3a\u8be5\u6570\u672c\u8eab\uff1a a \u2295 0 = a \u3002 \u4efb\u4f55\u6570\u548c\u81ea\u5df1\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u4e3a 0\uff1a a \u2295 a = 0 \u3002 \u5f02\u6216\u8fd0\u7b97\u6ee1\u8db3\u4ea4\u6362\u5f8b\u548c\u7ed3\u5408\u5f8b\uff1a a \u2295 b \u2295 a = (a \u2295 a) \u2295 b = 0 \u2295 b = b \u3002 \u6839\u636e\u8fd9\u4e9b\u6027\u8d28\uff0c\u5982\u679c\u6211\u4eec\u5c06 s \u548c t \u7684\u6240\u6709\u5b57\u7b26\u90fd\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u6210\u5bf9\u51fa\u73b0\u7684\u5b57\u7b26\u6700\u7ec8\u4f1a\u62b5\u6d88\uff0c\u5269\u4e0b\u7684\u5c31\u662f t \u4e2d\u90a3\u4e2a\u591a\u51fa\u6765\u7684\u5b57\u7b26\u3002 \u89e3\u9898\u6b65\u9aa4 \u521d\u59cb\u5316\u4e00\u4e2a\u6574\u6570 ret \uff0c\u8868\u793a\u5f02\u6216\u7ed3\u679c\uff0c\u521d\u59cb\u503c\u4e3a 0\u3002 \u904d\u5386\u5b57\u7b26\u4e32 s \u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\uff0c\u5c06\u5b57\u7b26\u7684 ASCII \u503c\u4e0e ret \u8fdb\u884c\u5f02\u6216\u64cd\u4f5c\u3002 \u904d\u5386\u5b57\u7b26\u4e32 t \u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\uff0c\u540c\u6837\u5c06\u5176 ASCII \u503c\u4e0e ret \u8fdb\u884c\u5f02\u6216\u64cd\u4f5c\u3002 \u8fd4\u56de\u6700\u7ec8 ret \u7684\u503c\uff0c\u5b83\u5c31\u662f\u90a3\u4e2a\u591a\u51fa\u6765\u7684\u5b57\u7b26\u3002 \u4ee3\u7801\u5b9e\u73b0 class Solution: def findTheDifference(self, s: str, t: str) -> str: result = 0 for char in s + t: result ^= ord(char) return chr(result) 4. \u8bfe\u540e\u7ec3\u4e60 \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC868 \u4e8c\u8fdb\u5236\u95f4\u8ddd \u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u8ba1\u7b97\u5b83\u5728\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u4e24\u4e2a\u76f8\u90bb\u7684 1 \u4e4b\u95f4\u7684\u6700\u5927\u8ddd\u79bb\u3002 LC1486 \u6570\u7ec4\u5f02\u6216\u64cd\u4f5c \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570 n \u548c\u4e00\u4e2a\u6574\u6570 start\uff0c\u751f\u6210\u4e00\u4e2a\u6570\u7ec4\uff0c\u8fd4\u56de\u6570\u7ec4\u4e2d\u6240\u6709\u5143\u7d20\u7684\u5f02\u6216\u7ed3\u679c\u3002 LC1720 \u89e3\u7801\u5f02\u6216\u540e\u7684\u6570\u7ec4 \u7ed9\u5b9a\u4e00\u4e2a\u5f02\u6216\u540e\u7684\u6570\u7ec4\uff0c\u8fd4\u56de\u5176\u539f\u59cb\u6570\u7ec4\u3002 LC645 \u9519\u8bef\u7684\u96c6\u5408 \u96c6\u5408 S \u5305\u542b [1, n] \u4e2d\u7684 n \u4e2a\u6574\u6570\uff0c\u4f46\u5176\u4e2d\u6709\u4e00\u4e2a\u91cd\u590d\u7684\u6570\u548c\u4e00\u4e2a\u7f3a\u5931\u7684\u6570\uff0c\u627e\u51fa\u5b83\u4eec\u3002 LC693 \u4ea4\u66ff\u4f4d\u4e8c\u8fdb\u5236\u6570 \u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u5224\u65ad\u5176\u4e8c\u8fdb\u5236\u8868\u793a\u662f\u5426\u4e3a\u4ea4\u66ff\u4f4d\u3002","title":"\u4f4d\u8fd0\u7b97\u4e13\u9898"},{"location":"lesson12/Lesson12%20Python/#_1","text":"","title":"\u4f4d\u8fd0\u7b97\u4e13\u9898"},{"location":"lesson12/Lesson12%20Python/#_2","text":"1. \u4f4d\u8fd0\u7b97 1.1 \u57fa\u672c\u6982\u5ff5 1.2 \u5e38\u7528\u4f4d\u8fd0\u7b97\u64cd\u4f5c 1.3 \u5e94\u7528\u5b9e\u4f8b 2. \u4f8b\u9898\u8bb2\u89e3 2.1 LC231 2\u7684\u5e42 2.2 LC268 \u4e22\u5931\u7684\u6570\u5b57 3. \u4e3e\u4e00\u53cd\u4e09 3.1 LC2309 \u517c\u5177\u5927\u5c0f\u5199\u7684\u6700\u597d\u82f1\u6587\u5b57\u6bcd 3.2 LC136 \u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57 3.3 LC389 \u627e\u4e0d\u540c 4. \u8bfe\u540e\u7ec3\u4e60","title":"\u76ee\u5f55"},{"location":"lesson12/Lesson12%20Python/#1","text":"","title":"1. \u4f4d\u8fd0\u7b97"},{"location":"lesson12/Lesson12%20Python/#_3","text":"\u4f4d\u8fd0\u7b97\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u7684\u4e00\u79cd\u57fa\u7840\u8fd0\u7b97\u65b9\u5f0f\uff0c\u5b83\u76f4\u63a5\u64cd\u4f5c\u4e8c\u8fdb\u5236\u6570\u7684\u4f4d\u3002\u4f4d\u8fd0\u7b97\u5728\u5904\u7406\u6574\u6570\u3001\u4f18\u5316\u7b97\u6cd5\u3001\u6570\u636e\u538b\u7f29\u7b49\u9886\u57df\u5177\u6709\u91cd\u8981\u5e94\u7528\u3002\u4ee5\u4e0b\u662f\u4f4d\u8fd0\u7b97\u7684\u57fa\u672c\u6982\u5ff5\u3001\u5e38\u7528\u64cd\u4f5c\u53ca\u5e94\u7528\u5b9e\u4f8b\u3002","title":"\u4f4d\u8fd0\u7b97\u7b80\u4ecb"},{"location":"lesson12/Lesson12%20Python/#11","text":"\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u6574\u6570\u901a\u5e38\u4ee5\u4e8c\u8fdb\u5236\u5f62\u5f0f\u5b58\u50a8\u3002\u4f4d\u8fd0\u7b97\u5c31\u662f\u901a\u8fc7\u5bf9\u8fd9\u4e9b\u4e8c\u8fdb\u5236\u4f4d\u8fdb\u884c\u64cd\u4f5c\u6765\u5b9e\u73b0\u7279\u5b9a\u7684\u8ba1\u7b97\u3002\u4f4d\u8fd0\u7b97\u7684\u64cd\u4f5c\u7b26\u76f4\u63a5\u5bf9\u4e8c\u8fdb\u5236\u4f4d\u8fdb\u884c\u5904\u7406\uff0c\u56e0\u6b64\u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u9002\u7528\u4e8e\u9700\u8981\u9ad8\u6548\u8ba1\u7b97\u7684\u573a\u5408\u3002","title":"1.1 \u57fa\u672c\u6982\u5ff5"},{"location":"lesson12/Lesson12%20Python/#12","text":"","title":"1.2 \u5e38\u7528\u4f4d\u8fd0\u7b97\u64cd\u4f5c"},{"location":"lesson12/Lesson12%20Python/#and","text":"\u5bf9\u4e24\u4e2a\u6574\u6570\u7684\u6bcf\u4e00\u4f4d\u6267\u884c\u903b\u8f91\u4e0e\u8fd0\u7b97\u3002\u53ea\u6709\u5f53\u4e24\u4e2a\u76f8\u5e94\u7684\u4f4d\u90fd\u662f1\u65f6\uff0c\u7ed3\u679c\u4f4d\u624d\u4e3a1\uff0c\u5426\u5219\u4e3a0\u3002 \u793a\u4f8b \uff1a 5 & 3 = 1 5: 0101 3: 0011 -------------- 0001 (\u7ed3\u679c\u4e3a1)","title":"\u6309\u4f4d\u4e0e\uff08AND\uff09&amp;"},{"location":"lesson12/Lesson12%20Python/#or","text":"\u5bf9\u4e24\u4e2a\u6574\u6570\u7684\u6bcf\u4e00\u4f4d\u6267\u884c\u903b\u8f91\u6216\u8fd0\u7b97\u3002\u53ea\u8981\u5176\u4e2d\u4e00\u4e2a\u76f8\u5e94\u7684\u4f4d\u662f1\uff0c\u7ed3\u679c\u4f4d\u5c31\u4e3a1\u3002 \u793a\u4f8b \uff1a 5 | 3 = 7 5: 0101 3: 0011 -------------- 0111 (\u7ed3\u679c\u4e3a7)","title":"\u6309\u4f4d\u6216\uff08OR\uff09|"},{"location":"lesson12/Lesson12%20Python/#xor","text":"\u5bf9\u4e24\u4e2a\u6574\u6570\u7684\u6bcf\u4e00\u4f4d\u6267\u884c\u903b\u8f91\u5f02\u6216\u8fd0\u7b97\u3002\u5f53\u4e24\u4e2a\u76f8\u5e94\u7684\u4f4d\u4e0d\u540c\u65f6\uff0c\u7ed3\u679c\u4f4d\u4e3a1\uff1b\u76f8\u540c\u65f6\u4e3a0\u3002 \u793a\u4f8b \uff1a 5 ^ 3 = 6 5: 0101 3: 0011 -------------- 0110 (\u7ed3\u679c\u4e3a6) \u5f02\u6216\u8fd0\u7b97\u7684\u6027\u8d28 \uff1a \u4efb\u4f55\u6570\u548c 0 \u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u4e3a\u8be5\u6570\u672c\u8eab\uff1a a \u2295 0 = a \u3002 \u4efb\u4f55\u6570\u548c\u81ea\u5df1\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u4e3a 0\uff1a a \u2295 a = 0 \u3002 \u5f02\u6216\u8fd0\u7b97\u6ee1\u8db3\u4ea4\u6362\u5f8b\u548c\u7ed3\u5408\u5f8b\uff1a a \u2295 b \u2295 a = (a \u2295 a) \u2295 b = 0 \u2295 b = b \u3002","title":"\u6309\u4f4d\u5f02\u6216\uff08XOR\uff09^"},{"location":"lesson12/Lesson12%20Python/#not","text":"\u5bf9\u6bcf\u4e00\u4f4d\u8fdb\u884c\u53d6\u53cd\u64cd\u4f5c\u30020\u53d8\u4e3a1\uff0c1\u53d8\u4e3a0\u3002 \u793a\u4f8b \uff1a ~5 = -6 5: 0101 -------------- 1010 (\u53d6\u53cd\u540e\u4e3a-6\uff0c\u4f7f\u7528\u8865\u7801\u8868\u793a\u6cd5)","title":"\u6309\u4f4d\u53d6\u53cd\uff08NOT\uff09~"},{"location":"lesson12/Lesson12%20Python/#_4","text":"\u5c06\u4e8c\u8fdb\u5236\u6570\u7684\u6240\u6709\u4f4d\u5411\u5de6\u79fb\u52a8\u6307\u5b9a\u7684\u4f4d\u6570\u3002\u5de6\u79fbn\u4f4d\u76f8\u5f53\u4e8e\u4e58\u4ee5 2^n \u3002 \u793a\u4f8b \uff1a 5 << 1 = 10 5: 0101 -------------- 1010 (\u7ed3\u679c\u4e3a10)","title":"\u5de6\u79fb\uff08&lt;&lt;\uff09"},{"location":"lesson12/Lesson12%20Python/#_5","text":"\u5c06\u4e8c\u8fdb\u5236\u6570\u7684\u6240\u6709\u4f4d\u5411\u53f3\u79fb\u52a8\u6307\u5b9a\u7684\u4f4d\u6570\u3002\u53f3\u79fbn\u4f4d\u76f8\u5f53\u4e8e\u6574\u9664 (2^n)\u3002 \u793a\u4f8b \uff1a 5 >> 1 = 2 5: 0101 -------------- 0010 (\u7ed3\u679c\u4e3a2)","title":"\u53f3\u79fb\uff08&gt;&gt;\uff09"},{"location":"lesson12/Lesson12%20Python/#13","text":"","title":"1.3 \u5e94\u7528\u5b9e\u4f8b"},{"location":"lesson12/Lesson12%20Python/#_6","text":"\u4f4d\u8fd0\u7b97\u53ef\u4ee5\u9ad8\u6548\u5730\u5904\u7406\u8bb8\u591a\u95ee\u9898\uff0c\u7279\u522b\u662f\u5728\u9700\u8981\u64cd\u4f5c\u4e8c\u8fdb\u5236\u6570\u5b57\u65f6\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u7528\u7684\u4f4d\u8fd0\u7b97\u6280\u5de7\u53ca\u5176\u5e94\u7528\uff1a","title":"\u5e38\u89c1\u7684\u4f4d\u8fd0\u7b97\u6280\u5de7"},{"location":"lesson12/Lesson12%20Python/#1_1","text":"","title":"\u7c7b\u578b1:\u7528\u4e8e\u5224\u65ad"},{"location":"lesson12/Lesson12%20Python/#1_2","text":"\u6280\u5de7 \uff1a n & 1 \u539f\u7406 \uff1a\u5982\u679c n \u662f\u5947\u6570\uff0c\u90a3\u4e48 n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u7684\u6700\u4f4e\u4f4d\u662f 1\uff1b\u5982\u679c\u662f\u5076\u6570\uff0c\u5219\u6700\u4f4e\u4f4d\u662f 0\u3002\u56e0\u6b64\uff0c n & 1 \u53ef\u4ee5\u76f4\u63a5\u5224\u65ad\u5947\u5076\u6027\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a is_odd = (n & 1) == 1","title":"1. \u5224\u65ad\u5947\u5076\u6027"},{"location":"lesson12/Lesson12%20Python/#2-1-2","text":"\u6280\u5de7 \uff1a n & (n - 1) \u539f\u7406 \uff1a\u5c06 n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u7684\u6700\u4f4e\u4f4d\u7684 1 \u6e05\u9664\u3002\u9002\u7528\u4e8e\u5224\u65ad\u662f\u5426\u4e3a 2 \u7684\u5e42\u6b21\u65b9\uff0c\u4ee5\u53ca\u7edf\u8ba1\u4e8c\u8fdb\u5236\u6570\u4e2d 1 \u7684\u4e2a\u6570\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a n = n & (n - 1) # \u6e05\u9664\u6700\u4f4e\u4f4d\u7684 1 \u7279\u6027 \uff1a\u5982\u679c n \u662f\u6b63\u6574\u6570\u4e14\u6ee1\u8db3 n & (n - 1) == 0 \uff0c\u8fd9\u610f\u5473\u7740 n \u662f 2 \u7684\u5e42\u3002","title":"2.\u6e05\u9664\u6700\u4f4e\u4f4d\u7684 1\uff08\u5224\u65ad\u662f\u5426\u662f 2 \u7684\u5e42\u6b21\u65b9\uff09"},{"location":"lesson12/Lesson12%20Python/#_7","text":"","title":"\u89e3\u91ca\uff1a"},{"location":"lesson12/Lesson12%20Python/#2","text":"\u5f53\u4e00\u4e2a\u6570\u662f 2 \u7684\u5e42\u65f6\uff0c\u5b83\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d \u53ea\u6709\u4e00\u4e2a\u4f4d\u662f 1 \uff0c\u5176\u4f59\u6240\u6709\u4f4d\u90fd\u662f 0\u3002 \u6bd4\u5982\uff1a 2 0 = 1 -> 0001 (\u4e8c\u8fdb\u5236) 2 1 = 2 -> 0010 2 2 = 4 -> 0100 2 3 = 8 -> 1000 \u8fd9\u610f\u5473\u7740 2 \u7684\u5e42\u603b\u662f\u5f62\u5982 100...0 \u7684\u5f62\u5f0f \uff0c\u5373\u4e00\u4e2a 1 \u540e\u9762\u8ddf\u7740\u82e5\u5e72\u4e2a 0 \u3002","title":"\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u7684 2 \u7684\u5e42"},{"location":"lesson12/Lesson12%20Python/#n-1","text":"\u5f53\u6211\u4eec\u4ece\u4e00\u4e2a 2 \u7684\u5e42\u51cf\u53bb 1 \u65f6\uff0c\u7ed3\u679c\u4f1a\u5c06\u539f\u6765\u552f\u4e00\u7684 1 \u53d8\u6210 0 \uff0c\u5e76\u5c06\u5176\u540e\u9762\u7684 0 \u53d8\u6210 1 \u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff1a n = 8 = 1000 n - 1 = 7 = 0111 \u53ef\u4ee5\u770b\u5230\uff0c n \u548c n - 1 \u5728\u4e8c\u8fdb\u5236\u8868\u793a\u4e0a\u662f\u5b8c\u5168\u4e92\u8865\u7684\uff0c n \u53ea\u6709\u4e00\u4e2a 1 \u540e\u9762\u5168\u662f 0 \uff0c\u800c n - 1 \u5219\u662f\u539f\u6765 1 \u53d8\u6210 0 \uff0c\u540e\u9762\u7684 0 \u5168\u90e8\u53d8\u6210 1 \u3002","title":"n - 1 \u7684\u4e8c\u8fdb\u5236\u7279\u6027"},{"location":"lesson12/Lesson12%20Python/#n-n-1","text":"\u6309\u4f4d\u4e0e\u8fd0\u7b97 \u4f1a\u5c06\u4e24\u4e2a\u6570\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u9010\u4f4d\u8fdb\u884c\u6bd4\u8f83\uff0c\u53ea\u6709\u5728\u76f8\u540c\u4f4d\u4e0a\u4e24\u4e2a\u6570\u5b57\u90fd\u662f 1 \u65f6\u7ed3\u679c\u624d\u4e3a 1 \uff0c\u5176\u4ed6\u60c5\u51b5\u4e3a 0 \u3002 \u5bf9\u4e8e 2 \u7684\u5e42 n \uff0c\u5176\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u53ea\u6709\u4e00\u4f4d\u662f 1 \uff0c\u800c n - 1 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u5728\u76f8\u540c\u4f4d\u7f6e\u662f 0 \uff0c\u5176\u5b83\u4f4d\u5219\u662f 1 \u3002\u8fd9\u6837\u4e00\u6765\uff0c n & (n - 1) \u7684\u7ed3\u679c\u4f1a\u662f 0 \uff0c\u56e0\u4e3a\u5728\u4e8c\u8fdb\u5236\u4e2d\u6ca1\u6709\u76f8\u540c\u4f4d\u7f6e\u7684 1 \u4e86\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff1a n = 8 = 1000 n - 1 = 7 = 0111 8 & 7 = 1000 & 0111 = 0000","title":"\u6309\u4f4d\u4e0e\u8fd0\u7b97 (n &amp; (n - 1))"},{"location":"lesson12/Lesson12%20Python/#n-n-1-2","text":"\u5982\u679c n \u662f 2 \u7684\u5e42\uff0c\u5b83\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u53ea\u6709\u4e00\u4e2a 1 \uff0c\u4e14 n - 1 \u4f1a\u4f7f\u8fd9\u4e2a 1 \u7684\u4f4d\u7f6e\u53d8\u4e3a 0 \uff0c\u540e\u9762\u7684 0 \u53d8\u4e3a 1 \u3002\u8fd9\u6837 n & (n - 1) \u7684\u7ed3\u679c\u4e00\u5b9a\u662f 0 \u3002 \u5982\u679c n \u4e0d\u662f 2 \u7684\u5e42\uff0c\u5b83\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u81f3\u5c11\u6709\u4e24\u4e2a 1 \uff0c\u90a3\u4e48 n - 1 \u5e76\u4e0d\u80fd\u5c06\u6240\u6709\u7684 1 \u90fd\u62b5\u6d88\u6389\uff0c n & (n - 1) \u7684\u7ed3\u679c\u5c31\u4e0d\u4f1a\u662f 0 \u3002","title":"\u4e3a\u4ec0\u4e48 n &amp; (n - 1) \u53ef\u4ee5\u5224\u65ad 2 \u7684\u5e42\uff1f"},{"location":"lesson12/Lesson12%20Python/#3-1-2","text":"n & -n \u8fd9\u4e2a\u6280\u5de7\u53ef\u4ee5\u9ad8\u6548\u5730\u63d0\u53d6\u51fa\u4e00\u4e2a\u6574\u6570\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u6700\u4f4e\u4f4d\u7684 1\u3002\u540c\u6837\uff0c\u5b83\u53ef\u4ee5\u7528\u4e8e\u5224\u65ad\u4e00\u4e2a\u6570\u662f\u5426\u662f 2 \u7684\u5e42\u3002\u8ba9\u6211\u4eec\u901a\u8fc7\u8be6\u7ec6\u89e3\u91ca\u6765\u7406\u89e3\u5176\u539f\u7406\uff1a","title":"3. \u83b7\u53d6\u6700\u4f4e\u4f4d\u7684 1\uff08\u5224\u65ad\u662f\u5426\u662f 2 \u7684\u5e42\u6b21\u65b9\uff09"},{"location":"lesson12/Lesson12%20Python/#_8","text":"\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u8d1f\u6570\u662f\u6309\u7167 \u8865\u7801 \u89c4\u5219\u5b58\u50a8\u7684\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u8d1f\u6570\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u662f\u6b63\u6570\u7684\u6bcf\u4e00\u4f4d\u53d6\u53cd\u540e\u52a0 1\u3002 \u6bd4\u5982\uff1a n = 12 = 1100 2 -n = -12 \uff0c\u9996\u5148\u53d6\u53cd 1100 2 -> 0011 2 \uff0c\u7136\u540e\u52a0 1\uff0c\u5f97\u5230 0100 2","title":"\u8d1f\u6570\u7684\u4e8c\u8fdb\u5236\u8868\u793a"},{"location":"lesson12/Lesson12%20Python/#n-n","text":"\u5f53\u6211\u4eec\u6267\u884c n & -n \u65f6\uff0c\u8ba1\u7b97\u7ed3\u679c\u4f1a\u4fdd\u7559\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d \u6700\u4f4e\u4f4d\u7684 1 \uff0c\u800c\u5176\u4f59\u4f4d\u90fd\u4f1a\u53d8\u4e3a 0\u3002\u8fd9\u662f\u56e0\u4e3a\uff1a \u5bf9\u4e8e n \uff0c\u5176\u6700\u4f4e\u4f4d\u7684 1 \u4e4b\u540e\u7684\u6240\u6709\u4f4d\u90fd\u662f 0\u3002 \u5bf9\u4e8e -n \uff0c\u6700\u4f4e\u4f4d\u7684 1 \u4ee5\u53ca\u4e4b\u540e\u7684\u6240\u6709\u4f4d\u90fd\u4f1a\u53d6\u53cd\uff0c\u6700\u4f4e\u4f4d\u7684 1 \u4f9d\u7136\u5b58\u5728\uff0c\u800c\u66f4\u9ad8\u4f4d\u5219\u53d8\u4e3a 0\u3002 \u5c06 n \u548c -n \u8fdb\u884c\u6309\u4f4d\u4e0e\u8fd0\u7b97\u65f6\uff0c\u9ad8\u4f4d\u90fd\u4f1a\u53d8\u6210 0\uff0c\u53ea\u6709\u6700\u4f4e\u4f4d\u7684 1 \u4fdd\u7559\u4e0b\u6765\uff0c\u5176\u4ed6\u4f4d\u53d8\u4e3a 0\u3002","title":"n &amp; -n \u7684\u8fd0\u7b97\u539f\u7406"},{"location":"lesson12/Lesson12%20Python/#_9","text":"n = 12 = 1100 2 -n = -12 = 0100 2 12 & (-12) = 1100 2 & 0100 2 = 0100 2 \u7ed3\u679c\u662f\u4e8c\u8fdb\u5236\u6570\u4e2d\u6700\u4f4e\u4f4d\u7684 1\u3002","title":"\u4e3e\u4e2a\u4f8b\u5b50\uff1a"},{"location":"lesson12/Lesson12%20Python/#n-n-2","text":"\u5982\u679c n \u662f 2 \u7684\u5e42\uff0c\u5b83\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u53ea\u6709\u4e00\u4e2a 1\uff0c\u540e\u9762\u8ddf\u7740\u82e5\u5e72\u4e2a 0\uff0c\u6bd4\u5982 n = 8 = 1000 2 \u3002 \u5bf9\u4e8e\u8fd9\u6837\u7684\u6570\uff0c n & -n \u7684\u7ed3\u679c\u5fc5\u7136\u7b49\u4e8e n \uff0c\u56e0\u4e3a\u4e8c\u8fdb\u5236\u4e2d\u53ea\u6709\u4e00\u4e2a 1\uff0c\u6309\u4f4d\u4e0e\u4e4b\u540e\u7684\u7ed3\u679c\u4e5f\u53ea\u4f1a\u662f\u8be5\u4f4d\u7684 1\uff0c\u5176\u4ed6\u4f4d\u4e3a 0\u3002 \u56e0\u6b64\uff0c\u5982\u679c n & -n == n \uff0c\u53ef\u4ee5\u786e\u5b9a n \u662f 2 \u7684\u5e42\u3002","title":"n &amp; -n \u5224\u65ad\u662f\u5426\u4e3a 2 \u7684\u5e42"},{"location":"lesson12/Lesson12%20Python/#_10","text":"n = 8 = 1000 2 -n = -8 = 1000 2 \uff08\u56e0\u4e3a\u6700\u9ad8\u4f4d 1 \u4e4b\u540e\u6ca1\u6709 0\uff0c\u6240\u4ee5\u6ca1\u6709\u53d8\u5316\uff09 8 & -8 = 1000 2 \u6b64\u65f6 n & -n == n \uff0c\u6240\u4ee5 8 \u662f 2 \u7684\u5e42\u3002","title":"\u4e3e\u4e2a\u4f8b\u5b50\uff1a"},{"location":"lesson12/Lesson12%20Python/#4","text":"\u6280\u5de7 \uff1a (a ^ b) >= 0 \u539f\u7406 \uff1a\u5982\u679c a \u548c b \u7684\u7b26\u53f7\u76f8\u540c\uff0c\u90a3\u4e48\u5b83\u4eec\u7684\u7b26\u53f7\u4f4d\u76f8\u540c\uff0c\u5f02\u6216\u7ed3\u679c\u7684\u7b26\u53f7\u4f4d\u4e3a 0\uff0c\u56e0\u6b64 (a ^ b) >= 0 \u4e3a\u771f\uff1b\u5426\u5219\u4e3a\u5047\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a same_sign = (a ^ b) >= 0 ### \u5224\u65ad\u4e24\u4e2a\u6570\u7684\u7b26\u53f7\u662f\u5426\u76f8\u540c \u5224\u65ad\u4e24\u4e2a\u6574\u6570\u7684\u7b26\u53f7\u662f\u5426\u76f8\u540c\u53ef\u4ee5\u901a\u8fc7\u5f02\u6216\u8fd0\u7b97\uff08 ^ \uff09\u6765\u5b9e\u73b0\uff0c\u8fd9\u79cd\u65b9\u6cd5\u975e\u5e38\u9ad8\u6548\uff0c\u4e0d\u9700\u8981\u50cf\u4f20\u7edf\u7684\u65b9\u5f0f\u90a3\u6837\u5206\u522b\u5224\u65ad\u6b63\u8d1f\u53f7\u3002 #### \u539f\u7406\u89e3\u6790 \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u4e86\u89e3\u6574\u6570\u5728\u8ba1\u7b97\u673a\u4e2d\u7684\u4e8c\u8fdb\u5236\u8868\u793a\uff1a \u7b26\u53f7\u4f4d \uff1a\u6574\u6570\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\uff0c\u6700\u9ad8\u4f4d\uff08\u6700\u5de6\u8fb9\u7684\u4e00\u4f4d\uff09\u662f \u7b26\u53f7\u4f4d \u3002\u5f53\u7b26\u53f7\u4f4d\u4e3a 0 \u65f6\uff0c\u8868\u793a\u6b63\u6570\uff1b\u5f53\u7b26\u53f7\u4f4d\u4e3a 1 \u65f6\uff0c\u8868\u793a\u8d1f\u6570\u3002 \u4f8b\u5982\uff0c\u5bf9\u4e8e 32 \u4f4d\u6574\u6570\uff1a \u6b63\u6570 5 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 00000000 00000000 00000000 00000101 \u8d1f\u6570 -5 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 11111111 11111111 11111111 11111011 #### \u901a\u8fc7\u5f02\u6216\u5224\u65ad\u7b26\u53f7 \u6211\u4eec\u53ef\u4ee5\u5229\u7528\u5f02\u6216\u8fd0\u7b97\u6765\u5224\u65ad\u4e24\u4e2a\u6570\u7684\u7b26\u53f7\u662f\u5426\u76f8\u540c\u3002\u5173\u952e\u70b9\u5728\u4e8e\u5f02\u6216\u8fd0\u7b97\u7684\u7ed3\u679c\u7684 \u7b26\u53f7\u4f4d \u3002 \u7b26\u53f7\u4f4d\u5206\u6790 \uff1a \u5982\u679c a \u548c b \u7684\u7b26\u53f7\u76f8\u540c\uff0c\u4e8c\u8005\u7684\u7b26\u53f7\u4f4d\u4e5f\u4f1a\u76f8\u540c\uff0c\u5f02\u6216\u540e\u7684\u7ed3\u679c\u5728\u7b26\u53f7\u4f4d\u4f1a\u662f 0 \uff0c\u5373\u7ed3\u679c\u662f \u975e\u8d1f\u6570 \u3002 \u5982\u679c a \u548c b \u7684\u7b26\u53f7\u4e0d\u540c\uff0c\u4e8c\u8005\u7684\u7b26\u53f7\u4f4d\u4f1a\u4e0d\u540c\uff0c\u5f02\u6216\u540e\u7684\u7ed3\u679c\u5728\u7b26\u53f7\u4f4d\u4f1a\u662f 1 \uff0c\u5373\u7ed3\u679c\u662f \u8d1f\u6570 \u3002 \u76f8\u540c\u7b26\u53f7 \uff1a \u5047\u8bbe a = 5 \u548c b = 10 \uff0c\u5b83\u4eec\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u5982\u4e0b\uff1a a = 5 : 00000000 00000000 00000000 00000101 b = 10 : 00000000 00000000 00000000 00001010 \u5b83\u4eec\u7684\u7b26\u53f7\u4f4d\u90fd\u662f 0 \uff0c\u8868\u793a\u5b83\u4eec\u90fd\u662f\u6b63\u6570\u3002 \u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff1a a ^ b = 00000000 00000000 00000000 00000101 ^ 00000000 00000000 00000000 00001010 ------------------------------------- 00000000 00000000 00000000 00001111 \u7ed3\u679c\u7684\u7b26\u53f7\u4f4d\u4ecd\u7136\u662f 0 \uff0c\u8bf4\u660e\u7ed3\u679c\u662f\u975e\u8d1f\u6570\uff0c\u56e0\u6b64 (a ^ b) >= 0 \u4e3a\u771f\uff0c\u8868\u660e\u5b83\u4eec\u7684\u7b26\u53f7\u76f8\u540c\u3002 \u4e0d\u540c\u7b26\u53f7 \uff1a \u5047\u8bbe a = 5 \u548c b = -10 \uff0c\u5b83\u4eec\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u5982\u4e0b\uff1a a = 5 : 00000000 00000000 00000000 00000101 b = -10 : 11111111 11111111 11111111 11110110 \uff08\u8d1f\u6570\u5728\u8ba1\u7b97\u673a\u4e2d\u4f7f\u7528\u8865\u7801\u8868\u793a\uff09 \u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff1a a ^ b = 00000000 00000000 00000000 00000101 ^ 11111111 11111111 11111111 11110110 ------------------------------------- 11111111 11111111 11111111 11110011 \u7ed3\u679c\u7684\u7b26\u53f7\u4f4d\u662f 1 \uff0c\u8bf4\u660e\u7ed3\u679c\u662f\u8d1f\u6570\uff0c\u56e0\u6b64 (a ^ b) < 0 \u4e3a\u771f\uff0c\u8868\u660e\u5b83\u4eec\u7684\u7b26\u53f7\u4e0d\u540c\u3002 #### \u603b\u7ed3 \u5982\u679c a \u548c b \u7b26\u53f7\u76f8\u540c \uff0c\u5219 (a ^ b) \u7684\u7b26\u53f7\u4f4d\u4e3a 0 \uff0c\u5f02\u6216\u7ed3\u679c\u4e3a\u975e\u8d1f\u6570\uff0c\u6545 (a ^ b) >= 0 \u4e3a\u771f\u3002 \u5982\u679c a \u548c b \u7b26\u53f7\u4e0d\u540c \uff0c\u5219 (a ^ b) \u7684\u7b26\u53f7\u4f4d\u4e3a 1 \uff0c\u5f02\u6216\u7ed3\u679c\u4e3a\u8d1f\u6570\uff0c\u6545 (a ^ b) >= 0 \u4e3a\u5047\u3002 \u901a\u8fc7\u8fd9\u4e00\u6280\u5de7\uff0c\u6211\u4eec\u53ef\u4ee5\u9ad8\u6548\u5730\u5224\u65ad\u4e24\u4e2a\u6574\u6570\u7684\u7b26\u53f7\u662f\u5426\u76f8\u540c\uff0c\u907f\u514d\u4e86\u4f20\u7edf\u65b9\u6cd5\u4e2d\u7684\u5206\u652f\u5224\u65ad\u903b\u8f91\uff08\u5982 if-else \uff09\u3002","title":"4. \u5224\u65ad\u4e24\u4e2a\u6570\u7684\u7b26\u53f7\u662f\u5426\u76f8\u540c"},{"location":"lesson12/Lesson12%20Python/#2_1","text":"","title":"\u7c7b\u578b 2 \u5f02\u6216\u8fd0\u7b97\u6280\u5de7"},{"location":"lesson12/Lesson12%20Python/#5","text":"\u6280\u5de7 \uff1a\u4f7f\u7528\u4ee5\u4e0b\u4e09\u6b65\u6765\u4ea4\u6362 a \u548c b \u7684\u503c\uff1a python a = a ^ b b = a ^ b a = a ^ b","title":"5. \u4ea4\u6362\u4e24\u4e2a\u6570"},{"location":"lesson12/Lesson12%20Python/#_11","text":"\u5173\u952e\u7684\u5f02\u6216\u8fd0\u7b97\u6027\u8d28\uff1a a ^ a = 0 \uff1a\u4e00\u4e2a\u6570\u4e0e\u81ea\u8eab\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u662f 0\u3002 a ^ 0 = a \uff1a\u4e00\u4e2a\u6570\u4e0e 0 \u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u8fd8\u662f\u8be5\u6570\u672c\u8eab\u3002 \u4ea4\u6362\u5f8b \uff1a a ^ b = b ^ a \uff0c\u5373\u5f02\u6216\u8fd0\u7b97\u662f\u53ef\u4ea4\u6362\u7684\u3002 \u7ed3\u5408\u5f8b \uff1a a ^ (b ^ c) = (a ^ b) ^ c \uff0c\u5373\u5f02\u6216\u8fd0\u7b97\u662f\u53ef\u7ed3\u5408\u7684\u3002 \u57fa\u4e8e\u8fd9\u4e9b\u6027\u8d28\uff0c\u53ef\u4ee5\u901a\u8fc7\u8fde\u7eed\u4e09\u6b21\u5f02\u6216\u8fd0\u7b97\u6765\u5b8c\u6210\u4e24\u4e2a\u53d8\u91cf\u7684\u4ea4\u6362\u3002","title":"\u5f02\u6216\u8fd0\u7b97\u7684\u539f\u7406"},{"location":"lesson12/Lesson12%20Python/#_12","text":"\u5047\u8bbe\u4e24\u4e2a\u6570\u4e3a a = 5 \u548c b = 3 \uff0c\u6211\u4eec\u6765\u9010\u6b65\u5206\u6790\u901a\u8fc7\u5f02\u6216\u64cd\u4f5c\u4ea4\u6362\u5b83\u4eec\u7684\u503c\u3002 \u7b2c\u4e00\u6b65 \uff1a a = a ^ b \u5bf9 a \u8fdb\u884c\u8d4b\u503c\u64cd\u4f5c\uff1a a = 5 ^ 3 5 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 101 \uff0c 3 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 011 \u3002 a = 101 ^ 011 = 110 \uff0c\u5373 a = 6 \uff08\u6b64\u65f6 a \u7684\u503c\u4e3a 6 \uff0c b \u4ecd\u7136\u662f 3 \uff09\u3002 \u7b2c\u4e8c\u6b65 \uff1a b = a ^ b \u5bf9 b \u8fdb\u884c\u8d4b\u503c\u64cd\u4f5c\uff1a b = a ^ b = 6 ^ 3 6 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 110 \uff0c 3 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 011 \u3002 b = 110 ^ 011 = 101 \uff0c\u5373 b = 5 \uff08\u6b64\u65f6 b \u7684\u503c\u53d8\u6210\u4e86 5 \uff0c a \u4ecd\u7136\u662f 6 \uff09\u3002 \u7b2c\u4e09\u6b65 \uff1a a = a ^ b \u5bf9 a \u8fdb\u884c\u8d4b\u503c\u64cd\u4f5c\uff1a a = a ^ b = 6 ^ 5 6 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 110 \uff0c 5 \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e3a 101 \u3002 a = 110 ^ 101 = 011 \uff0c\u5373 a = 3 \uff08\u6b64\u65f6 a \u7684\u503c\u53d8\u6210\u4e86 3 \uff0c\u800c b \u7684\u503c\u662f 5 \uff09\u3002","title":"\u8be6\u7ec6\u6b65\u9aa4"},{"location":"lesson12/Lesson12%20Python/#_13","text":"\u901a\u8fc7\u8fd9\u4e09\u6b21\u5f02\u6216\u64cd\u4f5c\uff0c a \u7684\u521d\u59cb\u503c 5 \u88ab\u8d4b\u7ed9\u4e86 b \uff0c\u800c b \u7684\u521d\u59cb\u503c 3 \u88ab\u8d4b\u7ed9\u4e86 a \u3002\u56e0\u6b64\uff0c\u4e24\u4e2a\u6570\u5728\u6ca1\u6709\u4f7f\u7528\u4e34\u65f6\u53d8\u91cf\u7684\u60c5\u51b5\u4e0b\u5b8c\u6210\u4e86\u4ea4\u6362\u3002","title":"\u6700\u7ec8\u7ed3\u679c"},{"location":"lesson12/Lesson12%20Python/#_14","text":"a = 5 b = 3 print(f\"Before swap: a = {a}, b = {b}\") # \u901a\u8fc7\u5f02\u6216\u64cd\u4f5c\u4ea4\u6362 a \u548c b \u7684\u503c a = a ^ b # a \u53d8\u4e3a a ^ b b = a ^ b # b \u53d8\u4e3a a a = a ^ b # a \u53d8\u4e3a b print(f\"After swap: a = {a}, b = {b}\")","title":"\u4ee3\u7801\u793a\u4f8b"},{"location":"lesson12/Lesson12%20Python/#_15","text":"Before swap: a = 5, b = 3 After swap: a = 3, b = 5","title":"\u8f93\u51fa\u7ed3\u679c"},{"location":"lesson12/Lesson12%20Python/#3","text":"","title":"\u7c7b\u578b 3\uff1a\u5feb\u901f\u8fd0\u7b97"},{"location":"lesson12/Lesson12%20Python/#6-k-1","text":"\u6280\u5de7 \uff1a n | (1 << k) \u539f\u7406 \uff1a\u901a\u8fc7\u5de6\u79fb\u8fd0\u7b97\u5c06 1 \u79fb\u52a8\u5230\u7b2c k \u4f4d\uff0c\u7136\u540e\u4e0e n \u8fdb\u884c\u6309\u4f4d\u6216\u8fd0\u7b97\uff0c\u5c06\u7b2c k \u4f4d\u8bbe\u4e3a 1\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a python n = n | (1 << k)","title":"6. \u5c06\u6574\u6570\u7684\u7b2c k \u4f4d\u8bbe\u4e3a 1"},{"location":"lesson12/Lesson12%20Python/#7-k-0","text":"\u6280\u5de7 \uff1a n & ~(1 << k) \u539f\u7406 \uff1a\u5148\u901a\u8fc7\u5de6\u79fb\u8fd0\u7b97\u5c06 1 \u79fb\u52a8\u5230\u7b2c k \u4f4d\uff0c\u7136\u540e\u5bf9\u5176\u53d6\u53cd\uff0c\u5c06\u5176\u4f59\u4f4d\u8bbe\u4e3a 1\uff0c k \u4f4d\u8bbe\u4e3a 0\uff0c\u518d\u4e0e n \u8fdb\u884c\u6309\u4f4d\u4e0e\u8fd0\u7b97\uff0c\u6e05\u9664\u7b2c k \u4f4d\u7684\u503c\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a python n = n & ~(1 << k)","title":"7. \u5c06\u6574\u6570\u7684\u7b2c k \u4f4d\u8bbe\u4e3a 0"},{"location":"lesson12/Lesson12%20Python/#8-k","text":"\u6280\u5de7 \uff1a (n >> k) & 1 \u539f\u7406 \uff1a\u901a\u8fc7\u53f3\u79fb\u8fd0\u7b97\u5c06\u7b2c k \u4f4d\u79fb\u5230\u6700\u4f4e\u4f4d\uff0c\u7136\u540e\u4e0e 1 \u8fdb\u884c\u6309\u4f4d\u4e0e\u8fd0\u7b97\uff0c\u5224\u65ad\u8be5\u4f4d\u662f 0 \u8fd8\u662f 1\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a python bit = (n >> k) & 1","title":"8. \u83b7\u53d6\u6574\u6570\u7684\u7b2c k \u4f4d\u503c"},{"location":"lesson12/Lesson12%20Python/#9-1","text":"\u6280\u5de7 \uff1a\u4f7f\u7528 n & (n - 1) \u4e0d\u65ad\u6e05\u9664\u6700\u4f4e\u4f4d\u7684 1 \u539f\u7406 \uff1a\u6bcf\u6b21\u6267\u884c n & (n - 1) \u90fd\u4f1a\u51cf\u5c11\u4e00\u4e2a 1\uff0c\u76f4\u5230 n \u53d8\u4e3a 0\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a python count = 0 while n > 0: n = n & (n - 1) count += 1","title":"9. \u7edf\u8ba1\u6574\u6570\u7684\u4e8c\u8fdb\u5236\u4e2d 1 \u7684\u4e2a\u6570"},{"location":"lesson12/Lesson12%20Python/#_16","text":"","title":"\u4e0e\u4f20\u7edf\u65b9\u5f0f\u7684\u6bd4\u8f83"},{"location":"lesson12/Lesson12%20Python/#2_2","text":"\u4f20\u7edf\u7684\u65b9\u6cd5\u662f\u901a\u8fc7\u4e0d\u65ad\u5c06 n \u9664\u4ee5 2 \u6765\u5224\u65ad n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u7684 1 \u7684\u4e2a\u6570\u3002\u6bcf\u6b21\u9664\u4ee5 2 \u53ef\u4ee5\u83b7\u53d6\u5f53\u524d\u6700\u53f3\u8fb9\u7684\u4e00\u4f4d\uff0c\u901a\u8fc7\u5224\u65ad\u8fd9\u4f4d\u662f\u5426\u662f 1 \u6765\u589e\u52a0\u8ba1\u6570\u3002 \u793a\u4f8b\u4ee3\u7801 \uff1a python count = 0 while n > 0: if n % 2 == 1: count += 1 n = n // 2 # \u4f7f\u7528\u6574\u6570\u9664\u6cd5 \u7f3a\u70b9 \uff1a\u8be5\u65b9\u6cd5\u9700\u8981\u904d\u5386\u4e8c\u8fdb\u5236\u8868\u793a\u7684\u6bcf\u4e00\u4f4d\uff0c\u4e5f\u5c31\u662f\u9700\u8981\u5faa\u73af\u7684\u6b21\u6570\u4e0e n \u7684\u6bd4\u7279\u6570\u6210\u6b63\u6bd4\u3002\u56e0\u6b64\uff0c\u5982\u679c n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u6709\u5f88\u591a 0\uff0c\u8fd9\u79cd\u65b9\u6cd5\u6548\u7387\u8f83\u4f4e\u3002\u5bf9\u4e8e\u4e00\u4e2a 32 \u4f4d\u7684\u6574\u6570\uff0c\u6700\u591a\u9700\u8981\u6267\u884c 32 \u6b21\u64cd\u4f5c\u3002","title":"\u4f20\u7edf\u65b9\u6cd5\uff1a\u6574\u9664 2"},{"location":"lesson12/Lesson12%20Python/#n-n-1_1","text":"\u901a\u8fc7 n & (n - 1) \uff0c\u6bcf\u6b21\u8fd0\u7b97\u76f4\u63a5\u5c06 n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d \u6700\u4f4e\u4f4d\u7684 1 \u6e05\u9664\u3002\u56e0\u6b64\uff0c\u6267\u884c\u7684\u6b21\u6570\u7b49\u4e8e n \u4e2d 1 \u7684\u4e2a\u6570\uff0c\u800c\u4e0d\u662f\u6bd4\u7279\u6570\u3002 \u539f\u7406 \uff1a n & (n - 1) \u7684\u4f5c\u7528\u662f\u5c06 n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u6700\u4f4e\u4f4d\u7684 1 \u53d8\u4e3a 0\u3002 \u6bcf\u6b21\u6267\u884c\u4e00\u6b21 n & (n - 1) \uff0c\u6211\u4eec\u5c31\u79fb\u9664\u4e86\u4e00\u4e2a 1\uff0c\u76f4\u5230\u6240\u6709\u7684 1 \u90fd\u88ab\u79fb\u9664\uff0c n \u53d8\u4e3a 0 \u4e3a\u6b62\u3002","title":"\u4f7f\u7528 n &amp; (n - 1) \u7684\u65b9\u6cd5"},{"location":"lesson12/Lesson12%20Python/#10-2","text":"\u6280\u5de7 \uff1a 1 << k \u539f\u7406 \uff1a\u5de6\u79fb\u8fd0\u7b97\u76f8\u5f53\u4e8e\u5c06 1 \u5411\u5de6\u79fb\u52a8 k \u4f4d\uff0c\u8fd9\u6837\u53ef\u4ee5\u5feb\u901f\u5f97\u5230 2^k \u7684\u7ed3\u679c\u3002 \u4ee3\u7801\u793a\u4f8b \uff1a python power_of_two = 1 << k # \u7b49\u540c\u4e8e 2**k","title":"10. \u5feb\u901f\u8ba1\u7b97 2 \u7684\u5e42"},{"location":"lesson12/Lesson12%20Python/#2_3","text":"","title":"2. \u4f8b\u9898\u8bb2\u89e3"},{"location":"lesson12/Lesson12%20Python/#21-lc-231-2","text":"","title":"2.1 LC 231 2\u7684\u5e42"},{"location":"lesson12/Lesson12%20Python/#_17","text":"\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570 n \uff0c\u8bf7\u4f60\u5224\u65ad\u8be5\u6574\u6570\u662f\u5426\u662f 2 \u7684\u5e42\u6b21\u65b9\u3002\u5982\u679c\u662f\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002 \u5982\u679c\u5b58\u5728\u4e00\u4e2a\u6574\u6570 x \u4f7f\u5f97 n == 2^x \uff0c\u5219\u8ba4\u4e3a n \u662f 2 \u7684\u5e42\u6b21\u65b9\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson12/Lesson12%20Python/#_18","text":"\u4e00\u4e2a\u6570 n \u662f 2 \u7684\u5e42\uff0c\u5f53\u4e14\u4ec5\u5f53 n \u662f\u6b63\u6574\u6570\uff0c\u5e76\u4e14 n \u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u4ec5\u5305\u542b 1 \u4e2a 1\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u4f4d\u8fd0\u7b97\u6280\u5de7\u6765\u5224\u65ad\u3002","title":"\u65b9\u6cd5\uff1a\u4f4d\u8fd0\u7b97"},{"location":"lesson12/Lesson12%20Python/#_19","text":"\u4f7f\u7528 n & (n - 1) \u5224\u65ad class Solution: def isPowerOfTwo(self, n: int) -> bool: return n > 0 and (n & (n - 1)) == 0 \u4f7f\u7528 n & (-n) \u5224\u65ad class Solution: def isPowerOfTwo(self, n: int) -> bool: return n > 0 and (n & -n) == n","title":"\u4f4d\u8fd0\u7b97\u6280\u5de7"},{"location":"lesson12/Lesson12%20Python/#22-lc268","text":"","title":"2.2 LC268 \u4e22\u5931\u7684\u6570\u5b57"},{"location":"lesson12/Lesson12%20Python/#_20","text":"\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b [0, n] \u4e2d n \u4e2a\u6570\u7684\u6570\u7ec4 nums\uff0c\u627e\u51fa [0, n] \u8fd9\u4e2a\u8303\u56f4\u5185\u6ca1\u6709\u51fa\u73b0\u5728\u6570\u7ec4\u4e2d\u7684\u90a3\u4e2a\u6570\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson12/Lesson12%20Python/#_21","text":"","title":"\u601d\u8def\u8bb2\u89e3"},{"location":"lesson12/Lesson12%20Python/#set","text":"","title":"\u65b9\u6cd5\u4e00\uff1a\u4f7f\u7528set"},{"location":"lesson12/Lesson12%20Python/#_22","text":"**\u6784\u5efa\u4e00\u4e2a\u96c6\u5408set\uff1a\u5c06\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u6570\u5b58\u5165set\u4e2d\u3002 \u904d\u5386\u67e5\u627e\u7f3a\u5931\u7684\u6570\u5b57 \uff1a\u7136\u540e\u904d\u5386 [0, n] \u7684\u6240\u6709\u6570\uff0c\u68c0\u67e5\u54ea\u4e2a\u6570\u5b57\u4e0d\u5728set\u4e2d\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u4e00\u65e6\u53d1\u73b0\u67d0\u4e2a\u6570\u5b57\u4e0d\u5728 set \u4e2d\uff0c\u5373\u53ef\u8fd4\u56de\u8be5\u6570\u5b57\u4f5c\u4e3a\u7f3a\u5931\u7684\u6570\u5b57\u3002","title":"\u89e3\u9898\u601d\u8def"},{"location":"lesson12/Lesson12%20Python/#_23","text":"class Solution: def missingNumber(self, nums: List[int]) -> int: num_set = set(nums) for i in range(len(nums) + 1): if i not in num_set: return i","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson12/Lesson12%20Python/#_24","text":"","title":"\u65b9\u6cd5\u4e8c\uff1a\u4f7f\u7528\u4f4d\u8fd0\u7b97\uff08\u5f02\u6216\uff09"},{"location":"lesson12/Lesson12%20Python/#_25","text":"\u8fd9\u9053\u9898\u7684\u6838\u5fc3\u601d\u8def\u662f\u57fa\u4e8e \u5f02\u6216\u8fd0\u7b97 \u7684\u6027\u8d28\u6765\u627e\u5230\u4e22\u5931\u7684\u6570\u5b57\u3002\u6e29\u4e60\u5f02\u6216\u8fd0\u7b97\u7684\u4ee5\u4e0b\u51e0\u4e2a\u5173\u952e\u6027\u8d28\uff1a 1. \u4ea4\u6362\u5f8b\u548c\u7ed3\u5408\u5f8b \uff1a a ^ b ^ c \u548c a ^ c ^ b \u7684\u7ed3\u679c\u76f8\u540c\uff0c\u5373\u987a\u5e8f\u65e0\u5173\u3002 2. \u76f8\u540c\u6570\u5b57\u5f02\u6216\u4e3a 0 \uff1a a ^ a = 0 \uff0c\u5373\u4e24\u4e2a\u76f8\u540c\u7684\u6570\u5b57\u5f02\u6216\u4f1a\u4e92\u76f8\u62b5\u6d88\u4e3a 0\u3002 3. \u4efb\u4f55\u6570\u5b57\u4e0e 0 \u5f02\u6216\u7b49\u4e8e\u81ea\u8eab \uff1a a ^ 0 = a \u3002","title":"\u89e3\u9898\u601d\u8def"},{"location":"lesson12/Lesson12%20Python/#_26","text":"\u521d\u59cb\u5316\u53d8\u91cf \uff1a missing \u53d8\u91cf\u521d\u59cb\u503c\u4e3a 0\uff0c\u7528\u4e8e\u5b58\u50a8\u5f02\u6216\u7ed3\u679c\u3002 n = len(nums) \uff0c\u8868\u793a\u6570\u7ec4\u7684\u957f\u5ea6\u3002 \u7b2c\u4e00\u8f6e\u5faa\u73af (\u5f02\u6216\u6570\u7ec4\u4e2d\u7684\u5143\u7d20) \uff1a \u5728 for \u5faa\u73af\u4e2d\uff0c missing \u4f1a\u4f9d\u6b21\u4e0e\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\u3002 \u5047\u8bbe nums = [3, 0, 1] \uff0c\u8fd9\u65f6 missing \u5c06\u4f9d\u6b21\u53d8\u4e3a missing = 0 ^ 3 ^ 0 ^ 1 \u3002 \u8fd9\u4e00\u6b65\u9aa4\u7684\u76ee\u7684\u662f\u901a\u8fc7\u5f02\u6216\u5c06 nums \u6570\u7ec4\u4e2d\u7684\u6240\u6709\u5143\u7d20\u8bb0\u5f55\u5230 missing \u4e2d\u3002 \u7b2c\u4e8c\u8f6e\u5faa\u73af (\u5f02\u6216\u8303\u56f4 [0, n]) \uff1a \u7b2c\u4e8c\u4e2a for \u5faa\u73af\u4ece 0 \u5230 n \uff0c missing \u5c06\u4f9d\u6b21\u4e0e [0, n] \u8fd9\u4e2a\u8303\u56f4\u7684\u6240\u6709\u6570\u5b57\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\u3002 \u7531\u4e8e\u4e22\u5931\u7684\u6570\u5b57\u5b58\u5728\u4e8e [0, n] \u4e2d\uff0c\u4f46\u4e0d\u5728 nums \u4e2d\uff0c\u901a\u8fc7\u8fd9\u4e2a\u6b65\u9aa4\uff0c missing \u4f1a\u53d8\u4e3a\u6700\u7ec8\u7684\u4e22\u5931\u6570\u5b57\u3002 \u5229\u7528\u5f02\u6216\u6027\u8d28 \uff1a \u6700\u7ec8\uff0c\u6240\u6709\u6210\u5bf9\u51fa\u73b0\u7684\u6570\u5b57\u90fd\u4f1a\u88ab\u62b5\u6d88\u4e3a 0 \uff0c\u5269\u4e0b\u7684\u5c31\u662f\u90a3\u4e2a\u6ca1\u6709\u6210\u5bf9\u51fa\u73b0\u7684\u6570\u5b57\uff0c\u4e5f\u5c31\u662f\u4e22\u5931\u7684\u6570\u5b57\u3002","title":"\u5177\u4f53\u6b65\u9aa4\uff1a"},{"location":"lesson12/Lesson12%20Python/#_27","text":"class Solution: def missingNumber(self, nums: List[int]) -> int: missing = 0 n = len(nums) # \u7b2c\u4e00\u8f6e\u5faa\u73af\uff0c\u5f02\u6216\u6570\u7ec4\u4e2d\u7684\u5143\u7d20 for i in range(n): missing ^= nums[i] # \u7b2c\u4e8c\u8f6e\u5faa\u73af\uff0c\u5f02\u6216\u8303\u56f4 [0, n] for i in range(n + 1): missing ^= i return missing","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson12/Lesson12%20Python/#3_1","text":"","title":"3. \u4e3e\u4e00\u53cd\u4e09"},{"location":"lesson12/Lesson12%20Python/#31-lc2309","text":"","title":"3.1 LC2309 \u517c\u5177\u5927\u5c0f\u5199\u7684\u6700\u597d\u82f1\u6587\u5b57\u6bcd"},{"location":"lesson12/Lesson12%20Python/#_28","text":"\u7ed9\u4f60\u4e00\u4e2a\u7531\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\u7684\u5b57\u7b26\u4e32 s \uff0c\u8bf7\u4f60\u627e\u51fa\u5e76\u8fd4\u56de s \u4e2d\u7684\u6700\u597d\u82f1\u6587\u5b57\u6bcd\u3002\u8fd4\u56de\u7684\u5b57\u6bcd\u5fc5\u987b\u4e3a\u5927\u5199\u5f62\u5f0f\u3002\u5982\u679c\u4e0d\u5b58\u5728\u6ee1\u8db3\u6761\u4ef6\u7684\u5b57\u6bcd\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32\u3002 \u6700\u597d\u82f1\u6587\u5b57\u6bcd\u7684\u5927\u5199\u548c\u5c0f\u5199\u5f62\u5f0f\u5fc5\u987b\u90fd\u5728 s \u4e2d\u51fa\u73b0\u3002 \u82f1\u6587\u5b57\u6bcd b \u6bd4\u53e6\u4e00\u4e2a\u82f1\u6587\u5b57\u6bcd a \u66f4\u597d \u7684\u524d\u63d0\u662f\uff1a\u82f1\u6587\u5b57\u6bcd\u8868\u4e2d\uff0cb \u5728 a \u4e4b\u540e\u51fa\u73b0\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson12/Lesson12%20Python/#1_3","text":"\u4f7f\u7528\u54c8\u5e0c\u8868\u4fdd\u5b58\u5b57\u7b26\u4e32 s \u4e2d\u51fa\u73b0\u8fc7\u7684\u5b57\u7b26\u3002\u904d\u5386\u5b57\u7b26\u4e32 s \uff0c\u5c06\u5f53\u524d\u5b57\u7b26 c \u52a0\u5165\u5230\u54c8\u5e0c\u8868\u4e2d\u3002 \u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u82f1\u6587\u5b57\u6bcd\uff0c\u5982\u679c\u4e00\u4e2a\u82f1\u6587\u5b57\u6bcd\u7684\u5927\u5199\u5f62\u5f0f\u548c\u5c0f\u5199\u5f62\u5f0f\u90fd\u51fa\u73b0\u5728\u54c8\u5e0c\u8868\u4e2d\uff0c\u90a3\u4e48\u76f4\u63a5\u8fd4\u56de\u8be5\u82f1\u6587\u5b57\u6bcd\u3002\u5982\u679c\u6240\u6709\u7684\u82f1\u6587\u5b57\u6bcd\u90fd\u4e0d\u7b26\u5408\u8981\u6c42\uff0c\u90a3\u4e48\u76f4\u63a5\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002","title":"\u89e3\u9898\u601d\u8def1\uff1a\u54c8\u5e0c\u8868"},{"location":"lesson12/Lesson12%20Python/#1_4","text":"class Solution: def greatestLetter(self, s: str) -> str: # \u7528\u4e00\u4e2aset\u6765\u4fdd\u5b58\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u7684\u5b57\u6bcd present_letters = set(s) # \u521d\u59cb\u5316best\u4e3a\u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32 best = \"\" # \u904d\u5386\u6240\u6709\u5927\u5199\u5b57\u6bcd for c in range(ord('A'), ord('Z') + 1): # \u68c0\u67e5\u5927\u5199\u548c\u5bf9\u5e94\u7684\u5c0f\u5199\u5b57\u6bcd\u662f\u5426\u90fd\u5728\u5b57\u7b26\u4e32\u4e2d if chr(c) in present_letters and chr(c + 32) in present_letters: # \u5982\u679c\u540c\u65f6\u5b58\u5728\uff0c\u5219\u6bd4\u8f83\u5927\u5c0f\uff0c\u627e\u5230\u5b57\u6bcd\u8868\u4e2d\u9760\u540e\u7684\u5b57\u6bcd best = chr(c) if best == \"\" or c > ord(best) else best return best","title":"\u53c2\u8003\u89e3\u7b541"},{"location":"lesson12/Lesson12%20Python/#2_4","text":"\u4f7f\u7528\u4e24\u4e2a 32 \u4f4d\u6574\u6570 lower \u548c upper \u5206\u522b\u8868\u793a\u5b57\u7b26\u4e32 s \u4e2d\u5c0f\u5199\u5b57\u6bcd\u548c\u5927\u5199\u5b57\u6bcd\u7684\u51fa\u73b0\u60c5\u51b5\u3002 \u904d\u5386\u5b57\u7b26\u4e32 s \uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5b57\u7b26 c \uff1a \u5982\u679c c \u662f\u5c0f\u5199\u5b57\u6bcd\uff0c\u5c06 lower \u7684\u5bf9\u5e94\u4f4d\u7f6e\u8bbe\u4e3a 1\uff1b \u5982\u679c c \u662f\u5927\u5199\u5b57\u6bcd\uff0c\u5c06 upper \u7684\u5bf9\u5e94\u4f4d\u7f6e\u8bbe\u4e3a 1\u3002 \u4ece\u5927\u5230\u5c0f\u679a\u4e3e\u82f1\u6587\u5b57\u6bcd\uff0c\u5982\u679c\u53d1\u73b0\u67d0\u4e2a\u82f1\u6587\u5b57\u6bcd\u7684\u5927\u5c0f\u5199\u5f62\u5f0f\u5728 lower \u548c upper \u4e2d\u90fd\u51fa\u73b0\uff0c\u90a3\u4e48\u8fd4\u56de\u8be5\u5b57\u6bcd\u3002 \u5982\u679c\u6240\u6709\u7684\u5b57\u6bcd\u90fd\u4e0d\u7b26\u5408\u8981\u6c42\uff0c\u5219\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002","title":"\u89e3\u9898\u601d\u8def2\uff1a\u4f4d\u8fd0\u7b97"},{"location":"lesson12/Lesson12%20Python/#_29","text":"lower |= 1 << (ord(c) - ord('a')) \uff1a\u5c06\u5b57\u7b26 c \u5bf9\u5e94\u7684\u4f4d\u6570\u7f6e\u4e3a 1\uff0c\u8868\u793a\u8be5\u5b57\u7b26\u51fa\u73b0\u8fc7\u3002 upper |= 1 << (ord(c) - ord('A')) \uff1a\u540c\u7406\uff0c\u5c06\u5927\u5199\u5b57\u7b26 c \u5bf9\u5e94\u7684\u4f4d\u6570\u7f6e\u4e3a 1\u3002 lower & upper & (1 << i) \uff1a\u5224\u65ad\u5c0f\u5199\u548c\u5927\u5199\u7684\u7b2c i \u4f4d\u662f\u5426\u90fd\u4e3a 1\uff0c\u8868\u793a\u8be5\u5b57\u6bcd\u7684\u5927\u5c0f\u5199\u90fd\u51fa\u73b0\u8fc7\u3002","title":"\u4f4d\u8fd0\u7b97\u6280\u5de7"},{"location":"lesson12/Lesson12%20Python/#2_5","text":"class Solution: def greatestLetter(self, s: str) -> str: lower = upper = 0 for c in s: if c.islower(): lower |= 1 << (ord(c) - ord('a')) else: upper |= 1 << (ord(c) - ord('A')) for i in range(25, -1, -1): if lower & upper & (1 << i): return chr(ord('A') + i) return \"\"","title":"\u53c2\u8003\u89e3\u7b542"},{"location":"lesson12/Lesson12%20Python/#32-lc136","text":"","title":"3.2 LC136 \u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57"},{"location":"lesson12/Lesson12%20Python/#_30","text":"\u7ed9\u4f60\u4e00\u4e2a\u975e\u7a7a\u6574\u6570\u6570\u7ec4 nums \uff0c\u9664\u4e86\u67d0\u4e2a\u5143\u7d20\u53ea\u51fa\u73b0\u4e00\u6b21\u4ee5\u5916\uff0c\u5176\u4f59\u6bcf\u4e2a\u5143\u7d20\u5747\u51fa\u73b0\u4e24\u6b21\u3002\u627e\u51fa\u90a3\u4e2a\u53ea\u51fa\u73b0\u4e86\u4e00\u6b21\u7684\u5143\u7d20\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson12/Lesson12%20Python/#1_5","text":"\u5bf9\u4e8e\u8fd9\u9053\u9898\u76ee\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 \u5f02\u6216\u8fd0\u7b97 \uff08 \u2295 \uff09\u3002\u5f02\u6216\u8fd0\u7b97\u6709\u4ee5\u4e0b\u4e09\u4e2a\u6027\u8d28\uff1a \u4efb\u4f55\u6570\u548c 0 \u505a\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u4ecd\u7136\u662f\u539f\u6765\u7684\u6570\uff0c\u5373 a \u2295 0 = a \u3002 \u4efb\u4f55\u6570\u548c\u5176\u81ea\u8eab\u505a\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u662f 0 \uff0c\u5373 a \u2295 a = 0 \u3002 \u5f02\u6216\u8fd0\u7b97\u6ee1\u8db3\u4ea4\u6362\u5f8b\u548c\u7ed3\u5408\u5f8b\uff0c\u5373 a \u2295 b \u2295 a = b \u2295 a \u2295 a = b \u2295 (a \u2295 a) = b \u2295 0 = b \u3002 \u5047\u8bbe\u6570\u7ec4\u4e2d\u6709 2m + 1 \u4e2a\u6570\uff0c\u5176\u4e2d\u6709 m \u4e2a\u6570\u5404\u51fa\u73b0\u4e24\u6b21\uff0c\u4e00\u4e2a\u6570\u51fa\u73b0\u4e00\u6b21\u3002\u4ee4 a1, a2, ..., am \u4e3a\u51fa\u73b0\u4e24\u6b21\u7684 m \u4e2a\u6570\uff0c am+1 \u4e3a\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u3002\u6839\u636e\u6027\u8d28 3\uff0c\u6570\u7ec4\u4e2d\u7684\u5168\u90e8\u5143\u7d20\u7684\u5f02\u6216\u8fd0\u7b97\u7ed3\u679c\u603b\u662f\u53ef\u4ee5\u5199\u6210\u5982\u4e0b\u5f62\u5f0f\uff1a (a 1 \u2295 a 1 ) \u2295 (a 2 \u2295 a 2 ) \u2295 \u22ef \u2295 (a m \u2295 a m ) \u2295 a m+1 \u6839\u636e\u6027\u8d28 2 \u548c\u6027\u8d28 1\uff0c\u4e0a\u5f0f\u53ef\u4ee5\u5316\u7b80\u4e3a\uff1a 0 \u2295 0 \u2295 \u22ef \u2295 0 \u2295 a m+1 = a m+1 \u56e0\u6b64\uff0c\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u5143\u7d20\u7684\u5f02\u6216\u8fd0\u7b97\u7ed3\u679c\u5c31\u662f\u6570\u7ec4\u4e2d\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u90a3\u4e2a\u6570\u3002","title":"\u89e3\u9898\u601d\u8def1\uff1a\u5f02\u6216\u8fd0\u7b97"},{"location":"lesson12/Lesson12%20Python/#_31","text":"class Solution: def singleNumber(self, nums: List[int]) -> int: result = 0 for num in nums: result ^= num return result","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"lesson12/Lesson12%20Python/#2_6","text":"\u6211\u4eec\u53ef\u4ee5\u5229\u7528 set \u7684\u7279\u70b9\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 \u5982\u679c\u4e00\u4e2a\u6570\u5b57\u5728\u96c6\u5408\u4e2d\u51fa\u73b0\u4e86\uff0c\u6211\u4eec\u5c06\u5176\u4ece\u96c6\u5408\u4e2d\u79fb\u9664\u3002 \u5982\u679c\u4e00\u4e2a\u6570\u5b57\u6ca1\u6709\u51fa\u73b0\u5728\u96c6\u5408\u4e2d\uff0c\u6211\u4eec\u5c06\u5176\u6dfb\u52a0\u5230\u96c6\u5408\u4e2d\u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u6570\u5b57\uff0c\u6211\u4eec\u53ea\u4f1a\u4fdd\u7559\u5b83\u5728\u96c6\u5408\u4e2d\u51fa\u73b0\u4e00\u6b21\u7684\u8bb0\u5f55\u3002\u5982\u679c\u67d0\u4e2a\u6570\u5b57\u51fa\u73b0\u4e86\u4e24\u6b21\uff0c\u5b83\u5c06\u88ab\u79fb\u9664\uff0c\u6700\u7ec8\u96c6\u5408\u4e2d\u5269\u4e0b\u7684\u552f\u4e00\u5143\u7d20\u5c31\u662f\u90a3\u4e2a\u53ea\u51fa\u73b0\u4e86\u4e00\u6b21\u7684\u6570\u5b57\u3002","title":"\u89e3\u9898\u601d\u8def2\uff1a\u54c8\u5e0c\u8868"},{"location":"lesson12/Lesson12%20Python/#_32","text":"\u521b\u5efa\u4e00\u4e2a set \uff0c\u7528\u4e8e\u5b58\u50a8\u6570\u7ec4\u4e2d\u7684\u6570\u5b57\u3002 \u904d\u5386\u6570\u7ec4\uff1a \u5982\u679c\u5f53\u524d\u6570\u5b57\u5df2\u7ecf\u5728\u96c6\u5408\u4e2d\u5b58\u5728\uff0c\u8bf4\u660e\u5b83\u662f\u91cd\u590d\u7684\uff0c\u5c06\u5176\u4ece\u96c6\u5408\u4e2d\u79fb\u9664\u3002 \u5982\u679c\u5f53\u524d\u6570\u5b57\u4e0d\u5728\u96c6\u5408\u4e2d\uff0c\u8bf4\u660e\u5b83\u662f\u7b2c\u4e00\u6b21\u51fa\u73b0\uff0c\u5c06\u5176\u52a0\u5165\u96c6\u5408\u3002 \u904d\u5386\u7ed3\u675f\u540e\uff0c\u96c6\u5408\u4e2d\u4ec5\u5269\u4e0b\u7684\u4e00\u4e2a\u5143\u7d20\u5c31\u662f\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57\u3002 \u56e0\u4e3a\u9898\u76ee\u4e2d\u7ed9\u5b9a\u7684\u6761\u4ef6\u662f\u53ea\u6709\u4e00\u4e2a\u6570\u5b57\u51fa\u73b0\u4e86\u4e00\u6b21\uff0c\u5176\u4f59\u7684\u6570\u5b57\u90fd\u51fa\u73b0\u4e86\u4e24\u6b21\uff0c\u6700\u7ec8 set \u4e2d\u53ea\u4f1a\u5269\u4e0b\u90a3\u4e2a\u552f\u4e00\u7684\u6570\u5b57\u3002 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a Set \u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u904d\u5386\u6570\u7ec4\u65f6\uff0c\u5982\u679c\u67d0\u4e2a\u6570\u5b57\u5df2\u7ecf\u5728 Set \u4e2d\u5b58\u5728\uff0c\u5c31\u5c06\u5b83\u79fb\u9664\uff1b\u5426\u5219\u5c06\u5b83\u52a0\u5165\u3002\u6700\u540e\u5269\u4e0b\u7684\u90a3\u4e2a\u6570\u5b57\u5c31\u662f\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57\u3002 class Solution: def singleNumber(self, nums: List[int]) -> int: num_set = set() for num in nums: if num in num_set: num_set.remove(num) else: num_set.add(num) return num_set.pop()","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"lesson12/Lesson12%20Python/#33-lc389","text":"","title":"3.3 LC389 \u627e\u4e0d\u540c"},{"location":"lesson12/Lesson12%20Python/#_33","text":"\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 s \u548c t \uff0c\u5b83\u4eec\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\u3002 \u5b57\u7b26\u4e32 t \u7531\u5b57\u7b26\u4e32 s \u968f\u673a\u91cd\u6392\uff0c\u7136\u540e\u5728\u968f\u673a\u4f4d\u7f6e\u6dfb\u52a0\u4e00\u4e2a\u5b57\u6bcd\u3002 \u8bf7\u627e\u51fa\u5728 t \u4e2d\u88ab\u6dfb\u52a0\u7684\u5b57\u6bcd\u3002 \u5c1d\u8bd5\u4f7f\u7528 LC136 \u9898\u76ee\u7684\u4f4d\u8fd0\u7b97\u6280\u5de7\u89e3\u51b3\u672c\u9898","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson12/Lesson12%20Python/#_34","text":"\u9898\u76ee\u8981\u6c42\u627e\u51fa\u5728\u5b57\u7b26\u4e32 t \u4e2d\u591a\u51fa\u6765\u7684\u90a3\u4e2a\u5b57\u7b26\u3002 \u6211\u4eec\u53ef\u4ee5\u5c06\u4e24\u4e2a\u5b57\u7b26\u4e32\u62fc\u63a5\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u628a\u95ee\u9898\u8f6c\u5316\u4e3a\u6c42\u8fd9\u4e2a\u62fc\u63a5\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u5947\u6570\u6b21\u7684\u5b57\u7b26\u3002\u56e0\u4e3a\u5176\u4ed6\u5b57\u7b26\u90fd\u4f1a\u51fa\u73b0\u5076\u6570\u6b21\uff0c\u6700\u7ec8\u7684\u7ed3\u679c\u53ea\u4f1a\u5269\u4e0b\u90a3\u4e2a\u51fa\u73b0\u5947\u6570\u6b21\u7684\u5b57\u7b26\u3002 \u7c7b\u4f3c\u4e8e\u300c136. \u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u6570\u5b57\u300d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 \u5f02\u6216\u8fd0\u7b97 \u6765\u89e3\u51b3\u6b64\u95ee\u9898\uff1a \u5f02\u6216\u8fd0\u7b97\u7684\u6027\u8d28 \uff1a \u4efb\u4f55\u6570\u548c 0 \u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u4e3a\u8be5\u6570\u672c\u8eab\uff1a a \u2295 0 = a \u3002 \u4efb\u4f55\u6570\u548c\u81ea\u5df1\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u7ed3\u679c\u4e3a 0\uff1a a \u2295 a = 0 \u3002 \u5f02\u6216\u8fd0\u7b97\u6ee1\u8db3\u4ea4\u6362\u5f8b\u548c\u7ed3\u5408\u5f8b\uff1a a \u2295 b \u2295 a = (a \u2295 a) \u2295 b = 0 \u2295 b = b \u3002 \u6839\u636e\u8fd9\u4e9b\u6027\u8d28\uff0c\u5982\u679c\u6211\u4eec\u5c06 s \u548c t \u7684\u6240\u6709\u5b57\u7b26\u90fd\u8fdb\u884c\u5f02\u6216\u8fd0\u7b97\uff0c\u6210\u5bf9\u51fa\u73b0\u7684\u5b57\u7b26\u6700\u7ec8\u4f1a\u62b5\u6d88\uff0c\u5269\u4e0b\u7684\u5c31\u662f t \u4e2d\u90a3\u4e2a\u591a\u51fa\u6765\u7684\u5b57\u7b26\u3002","title":"\u601d\u8def\u8bb2\u89e3"},{"location":"lesson12/Lesson12%20Python/#_35","text":"\u521d\u59cb\u5316\u4e00\u4e2a\u6574\u6570 ret \uff0c\u8868\u793a\u5f02\u6216\u7ed3\u679c\uff0c\u521d\u59cb\u503c\u4e3a 0\u3002 \u904d\u5386\u5b57\u7b26\u4e32 s \u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\uff0c\u5c06\u5b57\u7b26\u7684 ASCII \u503c\u4e0e ret \u8fdb\u884c\u5f02\u6216\u64cd\u4f5c\u3002 \u904d\u5386\u5b57\u7b26\u4e32 t \u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\uff0c\u540c\u6837\u5c06\u5176 ASCII \u503c\u4e0e ret \u8fdb\u884c\u5f02\u6216\u64cd\u4f5c\u3002 \u8fd4\u56de\u6700\u7ec8 ret \u7684\u503c\uff0c\u5b83\u5c31\u662f\u90a3\u4e2a\u591a\u51fa\u6765\u7684\u5b57\u7b26\u3002","title":"\u89e3\u9898\u6b65\u9aa4"},{"location":"lesson12/Lesson12%20Python/#_36","text":"class Solution: def findTheDifference(self, s: str, t: str) -> str: result = 0 for char in s + t: result ^= ord(char) return chr(result)","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"lesson12/Lesson12%20Python/#4_1","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC868 \u4e8c\u8fdb\u5236\u95f4\u8ddd \u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u8ba1\u7b97\u5b83\u5728\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u4e24\u4e2a\u76f8\u90bb\u7684 1 \u4e4b\u95f4\u7684\u6700\u5927\u8ddd\u79bb\u3002 LC1486 \u6570\u7ec4\u5f02\u6216\u64cd\u4f5c \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570 n \u548c\u4e00\u4e2a\u6574\u6570 start\uff0c\u751f\u6210\u4e00\u4e2a\u6570\u7ec4\uff0c\u8fd4\u56de\u6570\u7ec4\u4e2d\u6240\u6709\u5143\u7d20\u7684\u5f02\u6216\u7ed3\u679c\u3002 LC1720 \u89e3\u7801\u5f02\u6216\u540e\u7684\u6570\u7ec4 \u7ed9\u5b9a\u4e00\u4e2a\u5f02\u6216\u540e\u7684\u6570\u7ec4\uff0c\u8fd4\u56de\u5176\u539f\u59cb\u6570\u7ec4\u3002 LC645 \u9519\u8bef\u7684\u96c6\u5408 \u96c6\u5408 S \u5305\u542b [1, n] \u4e2d\u7684 n \u4e2a\u6574\u6570\uff0c\u4f46\u5176\u4e2d\u6709\u4e00\u4e2a\u91cd\u590d\u7684\u6570\u548c\u4e00\u4e2a\u7f3a\u5931\u7684\u6570\uff0c\u627e\u51fa\u5b83\u4eec\u3002 LC693 \u4ea4\u66ff\u4f4d\u4e8c\u8fdb\u5236\u6570 \u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u5224\u65ad\u5176\u4e8c\u8fdb\u5236\u8868\u793a\u662f\u5426\u4e3a\u4ea4\u66ff\u4f4d\u3002","title":"4. \u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson13/Lesson13%20C%2B%2B/","text":"Lesson 13. \u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u6392\u5e8f\u548c\u8d2a\u5fc3\u7b97\u6cd5 \u76ee\u5f55 \u65f6\u95f4\u590d\u6742\u5ea6\u7b80\u4ecb \u6392\u5e8f\u7b97\u6cd5\u4e0e\u5e94\u7528 2.1 \u6392\u5e8f\u7b97\u6cd5\u4f8b\u9898\u8bb2\u89e3 2.1.1 LC215\uff1a\u627e\u51fa\u6570\u7ec4\u4e2d\u7684\u7b2c K \u5927\u5143\u7d20 2.2 \u6392\u5e8f\u7b97\u6cd5\u4e3e\u4e00\u53cd\u4e09 2.2.1 LC56\uff1a\u5408\u5e76\u533a\u95f4 2.2.2 LC252\uff1a\u4f1a\u8bae\u5ba4 2.2.3 LC347\uff1a\u524d K \u4e2a\u9ad8\u9891\u5143\u7d20 \u8d2a\u5fc3\u7b97\u6cd5 3.1 \u8d2a\u5fc3\u7b97\u6cd5\u4f8b\u9898\u8bb2\u89e3 3.1.1 LC455: \u5206\u53d1\u997c\u5e72 3.2 \u8d2a\u5fc3\u7b97\u6cd5\u4e3e\u4e00\u53cd\u4e09 3.2.1 LC435: \u65e0\u91cd\u53e0\u533a\u95f4 3.2.2 LC605: \u79cd\u82b1\u95ee\u9898 3.2.3 LC1029: \u4e24\u5730\u8c03\u5ea6 \u8bfe\u540e\u7ec3\u4e60 1. \u65f6\u95f4\u590d\u6742\u5ea6\u7b80\u4ecb \u65f6\u95f4\u590d\u6742\u5ea6 \u662f\u8861\u91cf\u7b97\u6cd5\u6267\u884c\u6548\u7387\u7684\u91cd\u8981\u6307\u6807\uff0c\u5b83\u63cf\u8ff0\u4e86\u968f\u7740\u8f93\u5165\u6570\u636e\u91cf\u7684\u589e\u5927\uff0c\u7b97\u6cd5\u6267\u884c\u65f6\u95f4\u7684\u589e\u957f\u901f\u5ea6\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u901a\u5e38\u8868\u793a\u4e3a O(\u67d0\u4e2a\u51fd\u6570) \uff0c\u5176\u4e2d \"O\" \u8868\u793a\u589e\u957f\u7684\u4e0a\u9650\u3002\u4ee5\u4e0b\u4ecb\u7ecd\u56db\u79cd\u5e38\u89c1\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff1a O(1) \u3001 O(n) \u3001 O(n^2) \u548c O(n log n) \u3002 \u5e38\u89c1\u7684\u65f6\u95f4\u590d\u6742\u5ea6 O(1) \uff1a\u5e38\u6570\u65f6\u95f4\u590d\u6742\u5ea6 \u64cd\u4f5c\u7684\u6267\u884c\u65f6\u95f4\u4e0d\u968f\u8f93\u5165\u6570\u636e\u7684\u5927\u5c0f\u800c\u53d8\u5316\u3002 \u4f8b\u5b50 \uff1a\u4ece\u6570\u7ec4\u4e2d\u83b7\u53d6\u7b2c k \u4e2a\u5143\u7d20\u3002 ```cpp #include using namespace std; int main() { int arr[] = {1, 2, 3, 4, 5}; int k = 2; // \u83b7\u53d6\u7b2c\u4e09\u4e2a\u5143\u7d20\uff08\u7d22\u5f15\u4ece0\u5f00\u59cb\uff09 int element = arr[k]; // O(1) cout << \"Element at index \" << k << \": \" << element << endl; return 0; } ``` \u65f6\u95f4\u590d\u6742\u5ea6 \uff1a\u65e0\u8bba\u6570\u7ec4\u5927\u5c0f\u662f\u591a\u5c11\uff0c\u83b7\u53d6\u7b2c k \u4e2a\u5143\u7d20\u6240\u9700\u65f6\u95f4\u662f\u56fa\u5b9a\u7684\uff0c\u5c5e\u4e8e O(1) \u3002 O(n) \uff1a\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6 \u64cd\u4f5c\u7684\u6267\u884c\u65f6\u95f4\u968f\u7740\u8f93\u5165\u6570\u636e\u91cf\u7ebf\u6027\u589e\u957f\u3002 \u4f8b\u5b50 \uff1a\u904d\u5386\u4e00\u4e2a\u6570\u7ec4\u3002 ```cpp #include using namespace std; int main() { int arr[] = {1, 2, 3, 4, 5}; int n = sizeof(arr) / sizeof(arr[0]); for (int i = 0; i < n; i++) { // O(n) cout << \"Element at index \" << i << \": \" << arr[i] << endl; } return 0; } ``` \u65f6\u95f4\u590d\u6742\u5ea6 \uff1a\u904d\u5386\u6574\u4e2a\u6570\u7ec4\u9700\u8981\u7684\u65f6\u95f4\u4e0e\u6570\u7ec4\u7684\u957f\u5ea6 n \u6210\u6b63\u6bd4\uff0c\u5c5e\u4e8e O(n) \u3002 O(n^2) \uff1a\u5e73\u65b9\u65f6\u95f4\u590d\u6742\u5ea6 \u64cd\u4f5c\u7684\u6267\u884c\u65f6\u95f4\u4e0e\u8f93\u5165\u6570\u636e\u91cf\u7684\u5e73\u65b9\u6210\u6b63\u6bd4\uff0c\u5e38\u89c1\u4e8e\u53cc\u91cd\u5faa\u73af\u3002 \u4f8b\u5b50 \uff1a\u6253\u5370\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u3002 ```cpp #include using namespace std; int main() { int arr[3][3] = { {1, 2, 3}, {4, 5, 6}, {7, 8, 9} }; for (int i = 0; i < 3; i++) { // O(n) for (int j = 0; j < 3; j++) { // O(n) cout << \"Element at [\" << i << \"][\" << j << \"]: \" << arr[i][j] << endl; } } return 0; } ``` \u65f6\u95f4\u590d\u6742\u5ea6 \uff1a\u53cc\u91cd\u5faa\u73af\u5d4c\u5957\u904d\u5386\u6bcf\u4e2a\u5143\u7d20\uff0c\u603b\u7684\u6267\u884c\u65f6\u95f4\u662f n \u7684\u5e73\u65b9\uff0c\u5c5e\u4e8e O(n^2) \u3002 O(n log n) \uff1a\u5e38\u89c1\u4e8e\u6392\u5e8f\u7b97\u6cd5\uff08\u6b64\u7ae0\u8282\u540e\u534a\u90e8\u5206\u4f1a\u8be6\u7ec6\u8bb2\u89e3\uff09 \u4f8b\u5b50 \uff1a\u5f52\u5e76\u6392\u5e8f\u3001\u5feb\u901f\u6392\u5e8f\u3002 ```cpp #include #include using namespace std; void merge(vector & arr, int l, int m, int r) { int n1 = m - l + 1; int n2 = r - m; vector<int> L(n1), R(n2); for (int i = 0; i < n1; i++) L[i] = arr[l + i]; for (int i = 0; i < n2; i++) R[i] = arr[m + 1 + i]; int i = 0, j = 0, k = l; while (i < n1 && j < n2) { if (L[i] <= R[j]) { arr[k] = L[i]; i++; } else { arr[k] = R[j]; j++; } k++; } while (i < n1) { arr[k] = L[i]; i++; k++; } while (j < n2) { arr[k] = R[j]; j++; k++; } } void mergeSort(vector & arr, int l, int r) { if (l >= r) return; int m = l + (r - l) / 2; mergeSort(arr, l, m); mergeSort(arr, m + 1, r); merge(arr, l, m, r); } int main() { vector arr = {12, 11, 13, 5, 6, 7}; int arr_size = arr.size(); mergeSort(arr, 0, arr_size - 1); cout << \"Sorted array is: \"; for (int i = 0; i < arr_size; i++) cout << arr[i] << \" \"; return 0; } ``` \u65f6\u95f4\u590d\u6742\u5ea6 \uff1a\u5f52\u5e76\u6392\u5e8f\u901a\u8fc7\u9012\u5f52\u5c06\u6570\u7ec4\u5206\u6210\u66f4\u5c0f\u7684\u90e8\u5206\u8fdb\u884c\u6392\u5e8f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n log n) \u3002 \u4e3a\u4ec0\u4e48\u662f O(n log n) ? \u5f52\u5e76\u6392\u5e8f\u662f\u4e00\u79cd \u5206\u6cbb\u7b97\u6cd5 \uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5f52\u5e76\u6392\u5e8f\u7684\u6b65\u9aa4\u5206\u4e3a\u4e24\u90e8\u5206\uff1a \u62c6\u5206 \u548c \u5408\u5e76 \u3002 **1. \u62c6\u5206\u8fc7\u7a0b\uff1a\u9012\u5f52\u5206\u89e3\u6570\u7ec4** \u5f52\u5e76\u6392\u5e8f\u9996\u5148\u5c06\u6570\u7ec4\u9012\u5f52\u5730\u5bf9\u534a\u62c6\u5206\uff0c\u76f4\u5230\u6bcf\u4e2a\u5b50\u6570\u7ec4\u53ea\u5269\u4e0b\u4e00\u4e2a\u5143\u7d20\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u7c7b\u4f3c\u4e8e\u6784\u5efa\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u6bcf\u6b21\u5c06\u95ee\u9898\u7684\u89c4\u6a21\u51cf\u534a\u3002 - \u5bf9\u4e00\u4e2a\u957f\u5ea6\u4e3a `n` \u7684\u6570\u7ec4\uff1a - \u7b2c\u4e00\u5c42\uff1a1 \u4e2a\u957f\u5ea6\u4e3a `n` \u7684\u6570\u7ec4 - \u7b2c\u4e8c\u5c42\uff1a2 \u4e2a\u957f\u5ea6\u4e3a `n/2` \u7684\u6570\u7ec4 - \u7b2c\u4e09\u5c42\uff1a4 \u4e2a\u957f\u5ea6\u4e3a `n/4` \u7684\u6570\u7ec4 - ... - \u7b2c `log n` \u5c42\uff1a\u6bcf\u4e2a\u6570\u7ec4\u7684\u957f\u5ea6\u662f 1\uff0c\u5171\u6709 `n` \u4e2a\u6570\u7ec4 \u56e0\u4e3a\u6bcf\u6b21\u90fd\u5bf9\u6570\u7ec4\u8fdb\u884c\u4e8c\u5206\uff0c\u6240\u4ee5\u6574\u4e2a\u9012\u5f52\u6811\u7684\u6df1\u5ea6\u662f `log n`\u3002 **2. \u5408\u5e76\u8fc7\u7a0b\uff1a\u7ebf\u6027\u5408\u5e76** \u5f53\u5b50\u6570\u7ec4\u62c6\u5206\u5230\u6700\u5c0f\uff08\u6bcf\u4e2a\u6570\u7ec4\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff09\u65f6\uff0c\u5f52\u5e76\u6392\u5e8f\u5f00\u59cb\u5408\u5e76\u8fd9\u4e9b\u5b50\u6570\u7ec4\u3002\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\u7684\u65f6\u95f4\u4e0e\u5b83\u4eec\u7684\u957f\u5ea6\u6210\u6b63\u6bd4\uff0c\u4e5f\u5c31\u662f\u8bf4\u5408\u5e76\u4e24\u4e2a\u6570\u7ec4\u7684\u65f6\u95f4\u662f `O(n)`\u3002 \u5728\u9012\u5f52\u6811\u7684\u6bcf\u4e00\u5c42\uff0c\u6240\u6709\u6570\u7ec4\u7684\u603b\u957f\u5ea6\u59cb\u7ec8\u662f `n`\uff0c\u56e0\u6b64\uff1a - \u7b2c\u4e00\u5c42\uff1a\u5408\u5e76\u4e00\u4e2a\u957f\u5ea6\u4e3a `n` \u7684\u6570\u7ec4\uff0c\u65f6\u95f4\u662f `O(n)` - \u7b2c\u4e8c\u5c42\uff1a\u5408\u5e76\u4e24\u4e2a\u957f\u5ea6\u4e3a `n/2` \u7684\u6570\u7ec4\uff0c\u603b\u65f6\u95f4\u4ecd\u7136\u662f `O(n)` - \u7b2c\u4e09\u5c42\uff1a\u5408\u5e76\u56db\u4e2a\u957f\u5ea6\u4e3a `n/4` \u7684\u6570\u7ec4\uff0c\u603b\u65f6\u95f4\u4e5f\u662f `O(n)` \u65e0\u8bba\u6709\u591a\u5c11\u4e2a\u5c0f\u6570\u7ec4\uff0c\u5408\u5e76\u6bcf\u4e00\u5c42\u7684\u603b\u65f6\u95f4\u90fd\u662f `O(n)`\u3002 **3. \u9012\u5f52\u6811\u7684\u5c42\u6570** \u62c6\u5206\u7684\u8fc7\u7a0b\u6700\u591a\u8fdb\u884c `log n` \u6b21\uff08\u6bcf\u6b21\u5c06\u6570\u7ec4\u5bf9\u534a\u5206\uff09\u3002\u56e0\u6b64\uff0c\u9012\u5f52\u6811\u7684\u6df1\u5ea6\u662f `log n`\uff0c\u5373\u6700\u591a\u6709 `log n` \u5c42\u3002 **\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u8ba1\u7b97** \u56e0\u4e3a\u6bcf\u4e00\u5c42\u7684\u5408\u5e76\u65f6\u95f4\u90fd\u662f `O(n)`\uff0c\u800c\u6574\u4e2a\u9012\u5f52\u6811\u6709 `log n` \u5c42\uff0c\u6240\u4ee5\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f `O(n) * O(log n) = O(n log n)` **\u4e3a\u4ec0\u4e48\u4e0d\u4f1a\u8d85\u8fc7 `O(n log n)`** \u6709\u4eba\u53ef\u80fd\u4f1a\u7591\u60d1\uff1a\u65e2\u7136\u6211\u4eec\u5728\u9012\u5f52\u4e2d\u53cd\u590d\u5206\u88c2\u6570\u7ec4\uff0c\u4e3a\u4ec0\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u4f1a\u8d85\u8fc7 `O(n log n)` \u5462\uff1f - **\u6bcf\u5c42\u7684\u5408\u5e76\u64cd\u4f5c\u662f\u7ebf\u6027\u7684**\uff1a\u867d\u7136\u9012\u5f52\u5206\u88c2\u4f1a\u4ea7\u751f\u591a\u4e2a\u5c0f\u6570\u7ec4\uff0c\u4f46\u6bcf\u4e00\u5c42\u4e2d\u6240\u6709\u6570\u7ec4\u7684\u603b\u957f\u5ea6\u4ecd\u7136\u662f `n`\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u4e00\u5c42\u5408\u5e76\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u59cb\u7ec8\u662f `O(n)`\uff0c\u4e0d\u4f1a\u7d2f\u79ef\u66f4\u591a\u590d\u6742\u5ea6\u3002 - **\u9012\u5f52\u7684\u6df1\u5ea6\u662f `log n`**\uff1a\u7531\u4e8e\u6bcf\u6b21\u9012\u5f52\u90fd\u5c06\u6570\u7ec4\u5bf9\u534a\u5206\u88c2\uff0c\u6574\u4e2a\u9012\u5f52\u8fc7\u7a0b\u53ea\u4f1a\u8fdb\u884c `log n` \u6b21\u5206\u88c2\u3002\u56e0\u6b64\uff0c\u9012\u5f52\u6811\u7684\u6df1\u5ea6\u662f `log n`\u3002 \u6700\u7ec8\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u6bcf\u5c42\u7684\u65f6\u95f4 `O(n)` \u4e58\u4ee5\u9012\u5f52\u6811\u7684\u5c42\u6570 `log n`\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u662f `O(n log n)`\u3002 \u65f6\u95f4\u590d\u6742\u5ea6\u603b\u7ed3 O(1) \uff1a\u6267\u884c\u65f6\u95f4\u4e0d\u53d7\u8f93\u5165\u89c4\u6a21\u5f71\u54cd\u3002 O(n) \uff1a\u6267\u884c\u65f6\u95f4\u968f\u8f93\u5165\u89c4\u6a21\u7ebf\u6027\u589e\u957f\u3002 O(n^2) \uff1a\u6267\u884c\u65f6\u95f4\u4e0e\u8f93\u5165\u89c4\u6a21\u7684\u5e73\u65b9\u6210\u6b63\u6bd4\uff0c\u901a\u5e38\u53d1\u751f\u5728\u5d4c\u5957\u5faa\u73af\u4e2d\u3002 O(n log n) \uff1a\u5e38\u89c1\u4e8e\u9ad8\u6548\u7684\u6392\u5e8f\u7b97\u6cd5\u3002 \u5177\u4f53\u5b9e\u4f8b \u8003\u8651\u4e00\u4e2a\u7b80\u5355\u7684\u7b97\u6cd5\uff1a\u8ba1\u7b97\u6570\u7ec4\u4e2d\u6240\u6709\u5143\u7d20\u7684\u548c\u3002 #include <iostream> using namespace std; int sumArray(int arr[], int n) { int total = 0; for (int i = 0; i < n; i++) { total += arr[i]; // \u57fa\u672c\u64cd\u4f5c } return total; } int main() { int arr[] = {1, 2, 3, 4, 5}; int n = sizeof(arr) / sizeof(arr[0]); cout << \"Sum of array: \" << sumArray(arr, n) << endl; return 0; } \u6b65\u9aa4\u5206\u6790 \u786e\u5b9a\u57fa\u672c\u64cd\u4f5c \uff1a \u57fa\u672c\u64cd\u4f5c\u662f total += arr[i] \u3002 \u8ba1\u7b97\u57fa\u672c\u64cd\u4f5c\u7684\u6b21\u6570 \uff1a \u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff0cfor \u5faa\u73af\u4f1a\u6267\u884c n \u6b21\uff08\u5176\u4e2d n \u662f\u6570\u7ec4 arr \u7684\u957f\u5ea6\uff09\u3002 \u56e0\u6b64\uff0c\u57fa\u672c\u64cd\u4f5c\u7684\u6b21\u6570\u4e3a n \u3002 \u4f7f\u7528\u5927 O \u8868\u793a\u6cd5 \uff1a \u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(n)\u3002 \u8003\u8651\u6700\u574f\u60c5\u51b5 \uff1a \u65e0\u8bba\u8f93\u5165\u7684\u5177\u4f53\u5185\u5bb9\u5982\u4f55\uff0c\u53ea\u8981\u6570\u7ec4\u957f\u5ea6\u4e3a n \uff0c\u57fa\u672c\u64cd\u4f5c\u90fd\u4f1a\u6267\u884c n \u6b21\uff0c\u56e0\u6b64\u6700\u574f\u60c5\u51b5\u4e3a O(n)\u3002 \u7279\u6b8a\u60c5\u51b5 \uff1a \u5982\u679c\u6570\u7ec4\u4e3a\u7a7a\uff0c\u5faa\u73af\u4e0d\u4f1a\u6267\u884c\uff0c\u4f46\u6211\u4eec\u4ecd\u7136\u8ba4\u4e3a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n)\uff0c\u56e0\u4e3a\u6211\u4eec\u5173\u6ce8\u7684\u662f\u8f93\u5165\u7684\u89c4\u6a21\u3002 \u968f\u5802\u7ec3\u4e60 \u5224\u65ad\u4ee5\u4e0b\u4ee3\u7801\u7684\u65f6\u95f4\u590d\u6742\u5ea6 #include <iostream> using namespace std; int findMax(int arr[], int n) { int maxNum = arr[0]; for (int i = 0; i < n; i++) { // \u57fa\u672c\u64cd\u4f5c if (arr[i] > maxNum) { maxNum = arr[i]; } } return maxNum; } int main() { int arr[] = {1, 5, 3, 9, 2}; int n = sizeof(arr) / sizeof(arr[0]); cout << \"Max number: \" << findMax(arr, n) << endl; return 0; } \u89e3\u7b54 \u7b2c\u4e00\u6bb5\u4ee3\u7801\uff08findMax\uff09 \uff1a - \u57fa\u672c\u64cd\u4f5c\u662f if (arr[i] > maxNum) \u3002 - \u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u5faa\u73af\u6267\u884c n \u6b21\u3002 - \u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(n)\u3002 2. \u6392\u5e8f\u7b97\u6cd5\u4e0e\u5e94\u7528 \u6392\u5e8f\u662f\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\u4e00\u4e2a\u975e\u5e38\u57fa\u7840\u4f46\u91cd\u8981\u7684\u64cd\u4f5c\u3002\u5b83\u4e0d\u4ec5\u53ef\u4ee5\u8ba9\u6570\u636e\u6309\u7279\u5b9a\u987a\u5e8f\u6392\u5217\uff0c\u8fd8\u80fd\u5e2e\u52a9\u6211\u4eec\u89e3\u51b3\u8bb8\u591a\u4e0e\u6570\u636e\u5904\u7406\u76f8\u5173\u7684\u95ee\u9898\u3002\u901a\u8fc7\u6392\u5e8f\uff0c\u6211\u4eec\u53ef\u4ee5\u66f4\u5feb\u5730\u89e3\u51b3\u627e\u7b2c K \u5927\u5143\u7d20\u3001\u5408\u5e76\u91cd\u53e0\u533a\u95f4\u7b49\u95ee\u9898\u3002 \u9002\u7528\u573a\u666f \u6392\u5e8f\u7684\u5e94\u7528\u573a\u666f\u975e\u5e38\u5e7f\u6cdb\uff0c\u5c24\u5176\u662f\u5728\u6570\u636e\u5904\u7406\u4e2d\uff0c\u4f60\u4f1a\u7ecf\u5e38\u9047\u5230\u9700\u8981\u5bf9\u6570\u636e\u8fdb\u884c\u6392\u5e8f\u7684\u60c5\u51b5\uff1a \u627e\u51fa\u7b2c K \u5927\u5143\u7d20 \uff1a\u901a\u8fc7\u6392\u5e8f\u6570\u636e\uff0c\u53ef\u4ee5\u5f88\u5feb\u627e\u51fa\u7b2c K \u5927\uff08\u6216\u7b2c K \u5c0f\uff09\u7684\u5143\u7d20\u3002 \u5408\u5e76\u533a\u95f4 \uff1a\u5f53\u5904\u7406\u591a\u4e2a\u533a\u95f4\u6216\u6bb5\u65f6\uff0c\u5e38\u5e38\u9700\u8981\u5148\u5c06\u8fd9\u4e9b\u533a\u95f4\u6309\u67d0\u4e2a\u7ef4\u5ea6\u6392\u5e8f\uff0c\u7136\u540e\u5408\u5e76\u5b83\u4eec\u3002 \u4f8b\u5b50 \uff1a\u5408\u5e76\u65e5\u7a0b\u3001\u4efb\u52a1\u65f6\u95f4\u6bb5\u7b49\u6570\u636e\uff0c\u89e3\u51b3\u533a\u95f4\u91cd\u53e0\u95ee\u9898\u3002 \u4f18\u5316\u64cd\u4f5c \uff1a\u4e0d\u540c\u7684\u6392\u5e8f\u7b97\u6cd5\u5728\u9762\u5bf9\u4e0d\u540c\u89c4\u6a21\u7684\u6570\u636e\u65f6\u8868\u73b0\u5404\u5f02\uff0c\u56e0\u6b64\u9009\u62e9\u5408\u9002\u7684\u6392\u5e8f\u7b97\u6cd5\u5bf9\u4e8e\u63d0\u9ad8\u7a0b\u5e8f\u6027\u80fd\u975e\u5e38\u91cd\u8981\u3002 \u5e38\u7528\u6280\u5de7 1. \u5185\u7f6e\u6392\u5e8f\u51fd\u6570 \u5927\u591a\u6570\u7f16\u7a0b\u8bed\u8a00\u90fd\u63d0\u4f9b\u4e86\u5185\u7f6e\u7684\u6392\u5e8f\u51fd\u6570\uff0c\u5b83\u4eec\u7ecf\u8fc7\u4f18\u5316\uff0c\u80fd\u4ee5\u9ad8\u6548\u7684\u65b9\u5f0f\u8fdb\u884c\u6392\u5e8f\u3002C++ \u63d0\u4f9b\u4e86 std::sort() \u51fd\u6570\u3002 \u793a\u4f8b\u4ee3\u7801 \uff1a #include <iostream> #include <vector> #include <algorithm> // \u5305\u542b std::sort \u51fd\u6570 using namespace std; int main() { vector<int> nums = {3, 1, 4, 1, 5, 9}; // \u5b9a\u4e49\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 // \u4f7f\u7528\u5185\u7f6e\u7684\u6392\u5e8f\u51fd\u6570\u5bf9\u6570\u7ec4\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f sort(nums.begin(), nums.end()); // \u8f93\u51fa\u6392\u5e8f\u540e\u7684\u6570\u7ec4 cout << \"Sorted array: \"; for (int num : nums) { cout << num << \" \"; } cout << endl; return 0; } \u8bf4\u660e \uff1a - \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u4e86 std::sort() \u51fd\u6570\uff0c\u5b83\u4f1a\u5bf9 nums \u6570\u7ec4\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\u3002 - \u4f7f\u7528\u5185\u7f6e\u51fd\u6570 sort() \u662f\u4e00\u79cd\u975e\u5e38\u5feb\u6377\u7684\u65b9\u6cd5\uff0c\u5bf9\u4e8e\u5927\u591a\u6570\u7b80\u5355\u6392\u5e8f\u4efb\u52a1\uff0c\u5b83\u7684\u6548\u7387\u975e\u5e38\u9ad8\u3002 2. \u81ea\u5b9a\u4e49\u6392\u5e8f \u6709\u65f6\u6211\u4eec\u9700\u8981\u6309\u7167\u81ea\u5b9a\u4e49\u7684\u89c4\u5219\u5bf9\u6570\u636e\u8fdb\u884c\u6392\u5e8f\u3002\u6bd4\u5982\uff0c\u6211\u4eec\u53ef\u80fd\u5e0c\u671b\u6309\u6570\u7ec4\u7684\u67d0\u4e2a\u7279\u5b9a\u5143\u7d20\u8fdb\u884c\u6392\u5e8f\uff0c\u800c\u4e0d\u662f\u6309\u9ed8\u8ba4\u7684\u987a\u5e8f\u3002\u5728 C++ \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 std::sort() \u51fd\u6570\u7684\u7b2c\u4e09\u4e2a\u53c2\u6570\u6765\u81ea\u5b9a\u4e49\u6392\u5e8f\u89c4\u5219\u3002 \u793a\u4f8b\u4ee3\u7801 \uff1a #include <iostream> #include <vector> #include <algorithm> using namespace std; // \u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\uff0c\u6309\u6570\u7ec4\u4e2d\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5347\u5e8f\u6392\u5e8f bool compareBySecondElement(const vector<int>& a, const vector<int>& b) { return a[1] < b[1]; } int main() { vector<vector<int>> data = {{1, 3}, {2, 2}, {3, 1}}; // \u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u6392\u5e8f\u89c4\u5219\u6309\u7b2c\u4e8c\u4e2a\u5143\u7d20\u6392\u5e8f sort(data.begin(), data.end(), compareBySecondElement); // \u8f93\u51fa\u6392\u5e8f\u540e\u7684\u4e8c\u7ef4\u6570\u7ec4 for (const auto& row : data) { cout << row[0] << \", \" << row[1] << endl; } return 0; } \u8bf4\u660e \uff1a - \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570 compareBySecondElement \u6765\u6309\u7167\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u6bcf\u4e00\u884c\u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20\u8fdb\u884c\u6392\u5e8f\u3002 - std::sort() \u7684\u7b2c\u4e09\u4e2a\u53c2\u6570\u5c31\u662f\u8fd9\u4e2a\u6bd4\u8f83\u51fd\u6570\uff0c\u7528\u4e8e\u544a\u8bc9 sort() \u5e94\u8be5\u5982\u4f55\u6bd4\u8f83\u6bcf\u5bf9\u5143\u7d20\u3002 3. \u6392\u5e8f\u4f18\u5316 \u6392\u5e8f\u7b97\u6cd5\u5728\u5904\u7406\u4e0d\u540c\u89c4\u6a21\u6570\u636e\u65f6\u8868\u73b0\u5404\u5f02\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u89c1\u7684\u6392\u5e8f\u7b97\u6cd5\u53ca\u5176\u9002\u7528\u573a\u666f\uff0c\u4f9b\u5927\u5bb6\u521d\u6b65\u4e86\u89e3\uff1a \u9009\u62e9\u6392\u5e8f \uff1a\u9002\u7528\u4e8e\u5c0f\u89c4\u6a21\u6570\u636e\u96c6\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a (O(n^2))\u3002 \u5b83\u7684\u7279\u70b9\u662f\u6bcf\u6b21\u9009\u62e9\u672a\u6392\u5e8f\u90e8\u5206\u4e2d\u7684\u6700\u5c0f\u503c\uff0c\u7136\u540e\u5c06\u5176\u4e0e\u5f53\u524d\u5143\u7d20\u4ea4\u6362\u3002\u867d\u7136\u7b80\u5355\u6613\u61c2\uff0c\u4f46\u6027\u80fd\u8f83\u5dee\uff0c\u4e0d\u9002\u5408\u5927\u6570\u636e\u96c6\u3002 \u63d2\u5165\u6392\u5e8f \uff1a\u9002\u5408\u4e8e\u51e0\u4e4e\u5df2\u6392\u5e8f\u7684\u6570\u636e\u96c6\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u662f (O(n^2))\u3002 \u63d2\u5165\u6392\u5e8f\u7684\u4f18\u52bf\u662f\u5f53\u6570\u636e\u51e0\u4e4e\u6709\u5e8f\u65f6\uff0c\u5b83\u7684\u6548\u7387\u4f1a\u6bd4\u9009\u62e9\u6392\u5e8f\u597d\u5f97\u591a\u3002 \u5feb\u901f\u6392\u5e8f \uff1a\u6027\u80fd\u8f83\u597d\u7684\u901a\u7528\u6392\u5e8f\u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a (O(n log n))\u3002 \u5b83\u901a\u8fc7\u9009\u62e9\u4e00\u4e2a\u57fa\u51c6\u5143\u7d20\uff08pivot\uff09\uff0c\u5c06\u6570\u7ec4\u5212\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5e76\u9012\u5f52\u5730\u5bf9\u8fd9\u4e24\u90e8\u5206\u8fdb\u884c\u6392\u5e8f\u3002\u9002\u5408\u5927\u89c4\u6a21\u6570\u636e\u96c6\u3002 \u5f52\u5e76\u6392\u5e8f \uff1a\u4e0e\u5feb\u901f\u6392\u5e8f\u4e00\u6837\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a (O(n log n))\uff0c\u4f46\u5b83\u662f\u7a33\u5b9a\u7684\u6392\u5e8f\u7b97\u6cd5\u3002 \u5f52\u5e76\u6392\u5e8f\u5c06\u6570\u7ec4\u4e0d\u65ad\u62c6\u5206\uff0c\u7136\u540e\u5408\u5e76\u6392\u5e8f\u597d\u7684\u5b50\u6570\u7ec4\u3002\u867d\u7136\u5b83\u7684\u6027\u80fd\u7a33\u5b9a\uff0c\u4f46\u9700\u8981\u989d\u5916\u7684\u5185\u5b58\u6765\u5b58\u50a8\u62c6\u5206\u7684\u6570\u7ec4\u3002 \u5192\u6ce1\u6392\u5e8f \uff1a\u662f\u4e00\u79cd\u7b80\u5355\u4f46\u6027\u80fd\u8f83\u5dee\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a (O(n^2))\u3002 \u5b83\u7684\u57fa\u672c\u601d\u60f3\u662f\u901a\u8fc7\u4e0d\u65ad\u6bd4\u8f83\u76f8\u90bb\u7684\u5143\u7d20\u5e76\u4ea4\u6362\u5b83\u4eec\uff0c\u5c06\u8f83\u5927\u7684\u5143\u7d20\u201c\u5192\u6ce1\u201d\u5230\u6570\u7ec4\u7684\u672b\u5c3e\u3002\u9002\u7528\u4e8e\u975e\u5e38\u5c0f\u89c4\u6a21\u7684\u6570\u636e\u96c6\u3002 \u5806\u6392\u5e8f \uff1a\u57fa\u4e8e\u4e8c\u53c9\u5806\u7ed3\u6784\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a (O(n log n))\u3002 \u5806\u6392\u5e8f\u901a\u8fc7\u5efa\u7acb\u4e00\u4e2a\u6700\u5927\u5806\u6216\u6700\u5c0f\u5806\u6765\u8fdb\u884c\u6392\u5e8f\u3002\u867d\u7136\u5806\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u5feb\u901f\u6392\u5e8f\u76f8\u540c\uff0c\u4f46\u5b83\u4e0d\u9700\u8981\u989d\u5916\u7684\u5185\u5b58\u7a7a\u95f4\uff08\u4e0d\u50cf\u5f52\u5e76\u6392\u5e8f\uff09\u3002 \u8ba1\u6570\u6392\u5e8f \uff1a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a (O(n+k))\uff0c\u9002\u7528\u4e8e\u6570\u636e\u8303\u56f4\u8f83\u5c0f\u7684\u573a\u666f\u3002 \u5b83\u901a\u8fc7\u7edf\u8ba1\u6bcf\u4e2a\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570\u6765\u6392\u5e8f\uff0c\u9002\u7528\u4e8e\u6574\u6570\u6392\u5e8f\u4e14\u6570\u636e\u8303\u56f4\u4e0d\u5927\u7684\u60c5\u51b5\u3002\u8ba1\u6570\u6392\u5e8f\u7684\u6027\u80fd\u5728\u6570\u636e\u8303\u56f4\u8f83\u5c0f\u65f6\u975e\u5e38\u4f18\u5f02\uff0c\u4f46\u5f53\u6570\u636e\u8303\u56f4\u5f88\u5927\u65f6\uff0c\u7a7a\u95f4\u6d88\u8017\u4f1a\u8fc7\u9ad8\u3002 \u6876\u6392\u5e8f \uff1a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a (O(n+k))\uff0c\u9002\u5408\u5747\u5300\u5206\u5e03\u7684\u6570\u636e\u96c6\u3002 \u5b83\u5c06\u5143\u7d20\u5206\u5e03\u5230\u591a\u4e2a\u6876\u4e2d\uff0c\u5206\u522b\u5bf9\u6bcf\u4e2a\u6876\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u518d\u5408\u5e76\u6240\u6709\u6876\u4e2d\u7684\u5143\u7d20\u3002\u5bf9\u4e8e\u5206\u5e03\u5747\u5300\u7684\u6570\u636e\uff0c\u6876\u6392\u5e8f\u7684\u6027\u80fd\u975e\u5e38\u597d\uff0c\u4f46\u5982\u679c\u6570\u636e\u5206\u5e03\u4e0d\u5747\uff0c\u6027\u80fd\u53ef\u80fd\u4f1a\u9000\u5316\u3002 \u57fa\u6570\u6392\u5e8f \uff1a\u4e00\u79cd\u975e\u6bd4\u8f83\u6392\u5e8f\u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a (O(n times k))\uff0c\u9002\u7528\u4e8e\u5904\u7406\u4f4d\u6570\u56fa\u5b9a\u7684\u6570\u636e\u3002 \u5b83\u901a\u8fc7\u6309\u4f4d\uff08\u6216\u6570\u5b57\uff09\u8fdb\u884c\u591a\u6b21\u6392\u5e8f\u6765\u5b8c\u6210\u6574\u4f53\u6392\u5e8f\uff0c\u9002\u7528\u4e8e\u5bf9\u6574\u6570\u6216\u5b57\u7b26\u4e32\u8fdb\u884c\u6392\u5e8f\u3002\u57fa\u6570\u6392\u5e8f\u7684\u6027\u80fd\u5728\u5904\u7406\u5927\u89c4\u6a21\u3001\u56fa\u5b9a\u4f4d\u6570\u7684\u6570\u5b57\u65f6\u8f83\u597d\u3002 2.1 \u6392\u5e8f\u7b97\u6cd5\u4f8b\u9898\u8bb2\u89e3 2.1.1 LC215\uff1a\u627e\u51fa\u6570\u7ec4\u4e2d\u7684\u7b2c K \u5927\u5143\u7d20 \u9898\u76ee\u63cf\u8ff0\uff1a \u7ed9\u5b9a\u4e00\u4e2a\u672a\u6392\u5e8f\u7684\u6570\u7ec4\uff0c\u627e\u51fa\u5176\u4e2d\u7b2c K \u5927\u7684\u5143\u7d20\u3002 \u89e3\u9898\u601d\u8def\uff1a \u53ef\u4ee5\u5148\u5bf9\u6570\u7ec4\u8fdb\u884c\u964d\u5e8f\u6392\u5e8f\uff0c\u7136\u540e\u76f4\u63a5\u8fd4\u56de\u6392\u597d\u5e8f\u540e\u7684\u6570\u7ec4\u4e2d\u7684\u7b2c K \u4e2a\u5143\u7d20\u3002 \u4ee3\u7801\u5b9e\u73b0\uff1a class Solution { public: // \u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\uff0c\u8fdb\u884c\u964d\u5e8f\u6392\u5e8f bool compareDesc(int a, int b) { return a > b; // \u8fd4\u56de a > b \u8868\u793a\u964d\u5e8f } int findKthLargest(vector<int>& nums, int k) { // \u5bf9\u6570\u7ec4\u8fdb\u884c\u964d\u5e8f\u6392\u5e8f sort(nums.begin(), nums.end(), compareDesc); // \u8fd4\u56de\u7b2c K \u4e2a\u5143\u7d20 return nums[k - 1]; } }; \u8bf4\u660e \uff1a - \u8fd9\u91cc\u6211\u4eec\u901a\u8fc7\u5b9a\u4e49 compareDesc \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5c06\u4e24\u4e2a\u6574\u6570 a \u548c b \u8fdb\u884c\u6bd4\u8f83\uff0c\u5e76\u8fd4\u56de true \u5982\u679c a > b \uff0c\u8fd9\u5c31\u5b9e\u73b0\u4e86\u964d\u5e8f\u6392\u5e8f\u3002 - sort() \u51fd\u6570\u7684\u7b2c\u4e09\u4e2a\u53c2\u6570\u4f20\u5165\u81ea\u5b9a\u4e49\u7684\u6bd4\u8f83\u51fd\u6570 compareDesc \u6765\u63a7\u5236\u6392\u5e8f\u987a\u5e8f\u3002 2.2 \u6392\u5e8f\u7b97\u6cd5\u4e3e\u4e00\u53cd\u4e09 2.2.1 LC56\uff1a\u5408\u5e76\u533a\u95f4 \u9898\u76ee\u63cf\u8ff0\uff1a \u7ed9\u5b9a\u82e5\u5e72\u4e2a\u95ed\u5408\u533a\u95f4 [x1, y1], [x2, y2], ... \uff0c\u8bf7\u5c06\u6240\u6709\u91cd\u53e0\u7684\u533a\u95f4\u5408\u5e76\u3002\u4f8b\u5982\uff0c\u533a\u95f4 [1, 3] \u548c [2, 6] \u53ef\u4ee5\u5408\u5e76\u4e3a [1, 6] \u3002 \u89e3\u9898\u601d\u8def\uff1a \u9996\u5148\uff0c\u6309\u7167\u533a\u95f4\u7684\u8d77\u59cb\u503c\u5bf9\u6240\u6709\u533a\u95f4\u8fdb\u884c\u6392\u5e8f\u3002 \u7136\u540e\u904d\u5386\u6bcf\u4e2a\u533a\u95f4\uff0c\u82e5\u5f53\u524d\u533a\u95f4\u4e0e\u524d\u4e00\u4e2a\u533a\u95f4\u91cd\u53e0\uff0c\u5219\u5408\u5e76\u5b83\u4eec\uff1b\u5426\u5219\u5c06\u5f53\u524d\u533a\u95f4\u76f4\u63a5\u52a0\u5165\u7ed3\u679c\u5217\u8868\u3002 \u4ee3\u7801\u5b9e\u73b0\uff1a class Solution { public: // \u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\uff0c\u6309\u533a\u95f4\u7684\u8d77\u59cb\u503c\u8fdb\u884c\u6392\u5e8f bool compareIntervals(const vector<int>& a, const vector<int>& b) { return a[0] < b[0]; // \u6309\u7167\u8d77\u59cb\u4f4d\u7f6e\u5347\u5e8f\u6392\u5e8f } vector<vector<int>> merge(vector<vector<int>>& intervals) { if (intervals.empty()) return {}; // \u6309\u533a\u95f4\u8d77\u59cb\u4f4d\u7f6e\u6392\u5e8f sort(intervals.begin(), intervals.end(), compareIntervals); vector<vector<int>> merged; // \u4f7f\u7528\u4f20\u7edf\u7684 for \u5faa\u73af\u904d\u5386\u533a\u95f4 for (int i = 0; i < intervals.size(); i++) { if (merged.empty() || merged.back()[1] < intervals[i][0]) { // \u5982\u679c\u7ed3\u679c\u4e3a\u7a7a\u6216\u5f53\u524d\u533a\u95f4\u4e0e\u4e0a\u4e00\u4e2a\u533a\u95f4\u4e0d\u91cd\u53e0\uff0c\u76f4\u63a5\u52a0\u5165\u7ed3\u679c merged.push_back(intervals[i]); } else { // \u5982\u679c\u91cd\u53e0\uff0c\u66f4\u65b0\u6700\u540e\u4e00\u4e2a\u533a\u95f4\u7684\u7ed3\u675f\u4f4d\u7f6e merged.back()[1] = max(merged.back()[1], intervals[i][1]); } } return merged; } }; \u8bb2\u89e3 \uff1a - \u81ea\u5b9a\u4e49\u6392\u5e8f \uff1a\u4e3a\u4e86\u5c06\u6240\u6709\u533a\u95f4\u6309\u8d77\u59cb\u503c\u5347\u5e8f\u6392\u5217\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86 compareIntervals \u51fd\u6570\uff0c\u5e76\u5c06\u5176\u4f20\u9012\u7ed9 sort() \u51fd\u6570\uff0c\u786e\u4fdd\u533a\u95f4\u6309\u7167\u8d77\u59cb\u503c\u6392\u5e8f\uff0c\u4fbf\u4e8e\u540e\u7eed\u7684\u5408\u5e76\u64cd\u4f5c\u3002 \u904d\u5386\u533a\u95f4 \uff1a\u6392\u5e8f\u540e\uff0c\u6211\u4eec\u904d\u5386\u6bcf\u4e00\u4e2a\u533a\u95f4\u3002\u901a\u8fc7\u6bd4\u8f83\u6bcf\u4e2a\u533a\u95f4\u7684\u8d77\u59cb\u503c\u548c\u4e0a\u4e00\u4e2a\u5408\u5e76\u533a\u95f4\u7684\u7ed3\u675f\u503c\uff0c\u5224\u65ad\u5b83\u4eec\u662f\u5426\u91cd\u53e0\uff1a \u5982\u679c\u6ca1\u6709\u91cd\u53e0\uff0c\u5c31\u5c06\u5f53\u524d\u533a\u95f4\u76f4\u63a5\u52a0\u5165 merged \u7ed3\u679c\u3002 \u5982\u679c\u91cd\u53e0\uff0c\u66f4\u65b0\u4e0a\u4e00\u4e2a\u5408\u5e76\u533a\u95f4\u7684\u7ed3\u675f\u503c\uff0c\u4f7f\u5f97\u5b83\u53ef\u4ee5\u6db5\u76d6\u5f53\u524d\u533a\u95f4\u3002 \u5408\u5e76\u903b\u8f91 \uff1a\u5408\u5e76\u662f\u901a\u8fc7\u6bd4\u8f83 merged.back()[1] \uff08\u5df2\u5408\u5e76\u7684\u6700\u540e\u4e00\u4e2a\u533a\u95f4\u7684\u7ed3\u675f\u503c\uff09\u4e0e\u5f53\u524d\u533a\u95f4\u7684\u8d77\u59cb\u503c\u6765\u8fdb\u884c\u7684\u3002\u5982\u679c\u5f53\u524d\u533a\u95f4\u7684\u8d77\u59cb\u503c\u5927\u4e8e\u4e0a\u4e00\u4e2a\u533a\u95f4\u7684\u7ed3\u675f\u503c\uff0c\u5219\u8bf4\u660e\u5b83\u4eec\u4e0d\u91cd\u53e0\uff0c\u5426\u5219\u8fdb\u884c\u5408\u5e76\u3002 2.2.2 LC252\uff1a\u4f1a\u8bae\u5ba4 \u9898\u76ee\u63cf\u8ff0\uff1a \u7ed9\u5b9a\u4e00\u7cfb\u5217\u4f1a\u8bae\u65f6\u95f4\u533a\u95f4\uff0c\u5224\u65ad\u662f\u5426\u80fd\u8ba9\u6240\u6709\u4f1a\u8bae\u65e0\u51b2\u7a81\u5730\u5b89\u6392\u5728\u4e00\u95f4\u4f1a\u8bae\u5ba4\u4e2d\u3002 \u89e3\u9898\u601d\u8def\uff1a \u53ef\u4ee5\u5c06\u6240\u6709\u7684\u4f1a\u8bae\u6309\u7167\u5f00\u59cb\u65f6\u95f4\u6392\u5e8f\uff0c\u7136\u540e\u904d\u5386\u6bcf\u4e2a\u4f1a\u8bae\uff0c\u68c0\u67e5\u662f\u5426\u6709\u91cd\u53e0\u533a\u95f4\u3002 \u4ee3\u7801\u5b9e\u73b0\uff1a class Solution { public: // \u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\uff0c\u6309\u4f1a\u8bae\u7684\u5f00\u59cb\u65f6\u95f4\u8fdb\u884c\u6392\u5e8f bool compareMeetings(const vector<int>& a, const vector<int>& b) { return a[0] < b[0]; // \u6309\u7167\u5f00\u59cb\u65f6\u95f4\u5347\u5e8f\u6392\u5e8f } bool canAttendMeetings(vector<vector<int>>& intervals) { // \u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u6bd4\u8f83\u51fd\u6570\u8fdb\u884c\u6392\u5e8f sort(intervals.begin(), intervals.end(), compareMeetings); // \u904d\u5386\u4f1a\u8bae\uff0c\u68c0\u67e5\u662f\u5426\u5b58\u5728\u91cd\u53e0 for (int i = 1; i < intervals.size(); i++) { if (intervals[i][0] < intervals[i - 1][1]) { return false; } } return true; } }; \u8bb2\u89e3\uff1a \u81ea\u5b9a\u4e49\u6392\u5e8f\u51fd\u6570 \uff1a\u5b9a\u4e49\u4e86 compareMeetings \u51fd\u6570\u6765\u6839\u636e\u4f1a\u8bae\u7684\u5f00\u59cb\u65f6\u95f4\u5bf9\u4f1a\u8bae\u533a\u95f4\u8fdb\u884c\u6392\u5e8f\u3002\u51fd\u6570\u901a\u8fc7\u6bd4\u8f83\u4f1a\u8bae\u7684\u5f00\u59cb\u65f6\u95f4\u6765\u51b3\u5b9a\u4f1a\u8bae\u7684\u987a\u5e8f\u3002 \u6392\u5e8f\u4f1a\u8bae \uff1a\u901a\u8fc7 sort() \u51fd\u6570\u5e76\u4f20\u5165\u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570 compareMeetings \uff0c\u6211\u4eec\u5c06\u4f1a\u8bae\u6309\u5f00\u59cb\u65f6\u95f4\u8fdb\u884c\u6392\u5e8f\u3002 \u68c0\u67e5\u91cd\u53e0 \uff1a\u6392\u5e8f\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u4f9d\u6b21\u68c0\u67e5\u6bcf\u4e2a\u4f1a\u8bae\u662f\u5426\u4e0e\u4e0a\u4e00\u4e2a\u4f1a\u8bae\u65f6\u95f4\u91cd\u53e0\u3002\u5982\u679c\u53d1\u73b0\u91cd\u53e0\uff0c\u8fd4\u56de false \uff1b\u5982\u679c\u6ca1\u6709\u91cd\u53e0\uff0c\u6700\u7ec8\u8fd4\u56de true \u3002 2.2.3 LC347\uff1a\u524d K \u4e2a\u9ad8\u9891\u5143\u7d20 \u9898\u76ee\u63cf\u8ff0\uff1a \u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u7684\u6574\u6570\u6570\u7ec4\uff0c\u8fd4\u56de\u5176\u4e2d\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684\u524d K \u4e2a\u5143\u7d20\u3002 \u89e3\u9898\u601d\u8def\uff1a \u4f7f\u7528\u54c8\u5e0c\u8868\u7edf\u8ba1\u6bcf\u4e2a\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570\u3002 \u5c06\u54c8\u5e0c\u8868\u4e2d\u7684\u5143\u7d20\u653e\u5165\u4e00\u4e2a\u6570\u7ec4\u4e2d\uff0c\u6309\u51fa\u73b0\u6b21\u6570\u4ece\u9ad8\u5230\u4f4e\u6392\u5e8f\u3002 \u8fd4\u56de\u6392\u5e8f\u540e\u524d K \u4e2a\u5143\u7d20\u3002 \u4ee3\u7801\u5b9e\u73b0\uff1a // \u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\uff0c\u6309\u9891\u7387\u964d\u5e8f\u6392\u5e8f bool compareByFrequency(const pair<int, int>& a, const pair<int, int>& b) { return a.second > b.second; // \u6309\u7167\u9891\u7387\u964d\u5e8f\u6392\u5217 } vector<int> topKFrequent(vector<int>& nums, int k) { // \u4f7f\u7528\u54c8\u5e0c\u8868\u7edf\u8ba1\u6bcf\u4e2a\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570 unordered_map<int, int> frequencyMap; for (int num : nums) { frequencyMap[num]++; } // \u5c06\u54c8\u5e0c\u8868\u4e2d\u7684\u5143\u7d20\u8f6c\u6362\u4e3a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u7b2c\u4e00\u7ef4\u662f\u6570\u5b57\uff0c\u7b2c\u4e8c\u7ef4\u662f\u9891\u7387 vector<pair<int, int>> frequencyList; for (auto& it : frequencyMap) { frequencyList.push_back(it); } // \u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u6bd4\u8f83\u51fd\u6570\u8fdb\u884c\u6392\u5e8f sort(frequencyList.begin(), frequencyList.end(), compareByFrequency); // \u53d6\u51fa\u524d K \u4e2a\u9891\u7387\u6700\u9ad8\u7684\u5143\u7d20 vector<int> result; for (int i = 0; i < k; i++) { result.push_back(frequencyList[i].first); } return result; } \u8bb2\u89e3\uff1a \u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570 \uff1a\u5b9a\u4e49\u4e86 compareByFrequency \u51fd\u6570\uff0c\u7528\u4e8e\u6bd4\u8f83 pair<int, int> \u7c7b\u578b\u7684\u6570\u636e\uff0c\u6309\u9891\u7387\u964d\u5e8f\u6392\u5217\u3002 \u54c8\u5e0c\u8868\u7edf\u8ba1\u9891\u7387 \uff1a\u4f7f\u7528 unordered_map \u6765\u8bb0\u5f55\u6bcf\u4e2a\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u952e\u4e3a\u5143\u7d20\uff0c\u503c\u4e3a\u8be5\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570\u3002 \u8f6c\u6362\u4e3a\u53ef\u6392\u5e8f\u5217\u8868 \uff1a\u5c06 unordered_map \u7684\u952e\u503c\u5bf9\u8f6c\u6362\u4e3a vector<pair<int, int>> \uff0c\u5176\u4e2d pair.first \u662f\u6570\u5b57\uff0c pair.second \u662f\u8be5\u6570\u5b57\u7684\u9891\u7387\u3002 \u6392\u5e8f \uff1a\u4f7f\u7528 sort() \u51fd\u6570\uff0c\u5e76\u4f20\u5165\u81ea\u5b9a\u4e49\u7684\u6bd4\u8f83\u51fd\u6570 compareByFrequency \uff0c\u5b9e\u73b0\u6309\u9891\u7387\u4ece\u9ad8\u5230\u4f4e\u7684\u6392\u5e8f\u3002 \u53d6\u524d K \u4e2a\u5143\u7d20 \uff1a\u4ece\u6392\u597d\u5e8f\u7684 frequencyList \u4e2d\u53d6\u524d K \u4e2a\u5143\u7d20\u7684 first \uff08\u5373\u6570\u5b57\uff09\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c\u3002 3. \u8d2a\u5fc3\u7b97\u6cd5 \u8d2a\u5fc3\u7b97\u6cd5\u662f\u4e00\u79cd\u89e3\u51b3\u95ee\u9898\u7684 \u7b56\u7565 \uff0c\u5176\u6838\u5fc3\u601d\u60f3\u662f\uff1a\u5728\u89e3\u51b3\u95ee\u9898\u7684\u6bcf\u4e00\u6b65\u4e2d\uff0c\u603b\u662f\u9009\u62e9\u5f53\u524d\u770b\u8d77\u6765 \u6700\u4f18\u7684\u9009\u62e9 \uff0c\u901a\u8fc7\u4e00\u7cfb\u5217\u8fd9\u6837\u7684\u5c40\u90e8\u6700\u4f18\u9009\u62e9\uff0c\u6700\u7ec8\u5e0c\u671b\u83b7\u5f97\u5168\u5c40\u6700\u4f18\u89e3\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c \u8d2a\u5fc3\u7b97\u6cd5\u5e76\u4e0d\u603b\u662f\u80fd\u5f97\u5230\u5168\u5c40\u6700\u4f18\u89e3 \u3002\u5b83\u53ea\u6709\u5728\u67d0\u4e9b\u7279\u5b9a\u95ee\u9898\u4e2d\u6709\u6548\uff0c\u7279\u522b\u662f\u5f53\u95ee\u9898\u6ee1\u8db3\u8d2a\u5fc3\u9009\u62e9\u6027\u8d28\u65f6\u3002 \u8d2a\u5fc3\u7b97\u6cd5\u7684\u7279\u70b9 \u5c40\u90e8\u6700\u4f18\u9009\u62e9 \uff1a \u8d2a\u5fc3\u7b97\u6cd5\u5728\u6bcf\u4e00\u6b65\u4e2d\u53ea\u505a\u51fa\u5f53\u524d\u770b\u8d77\u6765\u6700\u4f18\u7684\u9009\u62e9\uff0c\u800c \u4e0d\u5173\u5fc3\u4e4b\u540e\u53ef\u80fd\u53d1\u751f\u7684\u60c5\u51b5 \u3002\u5b83\u4e0d\u4f1a\u8003\u8651\u8fd9\u6b21\u9009\u62e9\u662f\u5426\u4f1a\u5f71\u54cd\u540e\u7eed\u51b3\u7b56\uff0c\u53ea\u770b\u5f53\u4e0b\u54ea\u4e2a\u9009\u9879\u662f\u6700\u6709\u5229\u7684\u3002\u4f8b\u5982\uff0c\u5728\u5206\u6570\u80cc\u5305\u95ee\u9898\u4e2d\uff0c\u8d2a\u5fc3\u7b56\u7565\u662f\u6bcf\u6b21\u4f18\u5148\u9009\u62e9\u5355\u4f4d\u91cd\u91cf\u4ef7\u503c\u6700\u9ad8\u7684\u7269\u54c1\uff0c\u56e0\u4e3a\u5b83\u5728\u5f53\u524d\u7684\u9009\u62e9\u4e2d\u5e26\u6765\u7684\u6536\u76ca\u6700\u5927\u3002 \u4f18\u70b9 \uff1a\u901a\u8fc7\u6bcf\u4e00\u6b65\u7684\u6700\u4f18\u9009\u62e9\uff0c\u53ef\u4ee5\u5feb\u901f\u627e\u5230\u4e00\u4e2a\u53ef\u884c\u89e3\u3002\u8d2a\u5fc3\u7b97\u6cd5\u7684\u89c4\u5219\u7b80\u5355\u3001\u76f4\u89c2\uff0c\u6613\u4e8e\u5b9e\u73b0\uff0c\u901a\u5e38\u53ef\u4ee5\u901a\u8fc7\u4e00\u6b21\u626b\u63cf\u6216\u6392\u5e8f\u89e3\u51b3\u95ee\u9898\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u4f4e\u3002\u4f8b\u5982\u5728\u5206\u6570\u80cc\u5305\u95ee\u9898\u4e2d\uff0c\u8d2a\u5fc3\u7b97\u6cd5\u53ea\u9700\u8981\u6309\u5355\u4f4d\u4ef7\u503c\u6392\u5e8f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a (O(n log n)) \u3002 \u7f3a\u70b9 \uff1a\u5c40\u90e8\u6700\u4f18\u89e3\u4e0d\u4e00\u5b9a\u80fd\u4fdd\u8bc1\u5168\u5c40\u6700\u4f18\uff0c\u56e0\u4e3a\u5728\u4e00\u4e9b\u95ee\u9898\u4e2d\uff0c\u6700\u4f73\u7684\u6574\u4f53\u65b9\u6848\u4f9d\u8d56\u4e8e\u591a\u6b65\u51b3\u7b56\u7684\u7efc\u5408\u6548\u679c\uff0c\u800c\u4e0d\u662f\u5355\u7eaf\u7684\u6bcf\u4e00\u6b65\u6700\u4f18\u3002\u8d2a\u5fc3\u7b97\u6cd5\u65e0\u6cd5\u901a\u8fc7\u5c40\u90e8\u6700\u4f18\u89e3\u627e\u5230\u5168\u5c40\u6700\u4f18\u89e3\uff0c\u5c24\u5176\u5728\u590d\u6742\u95ee\u9898\uff08\u5982 0-1 \u80cc\u5305\u95ee\u9898\uff09\u4e2d\uff0c\u5b83\u53ef\u80fd\u4f1a\u9677\u5165\u6b21\u4f18\u89e3\u3002 \u4e0d\u53ef\u56de\u6eaf \uff1a \u8d2a\u5fc3\u7b97\u6cd5\u7684\u4e00\u4e2a\u91cd\u8981\u7279\u70b9\u662f \u51b3\u7b56\u4e0d\u53ef\u56de\u5934\u4fee\u6539 \u3002\u4e00\u65e6\u505a\u51fa\u67d0\u4e2a\u9009\u62e9\uff0c\u7b97\u6cd5\u5c31\u4e0d\u4f1a\u518d\u8003\u8651\u6539\u53d8\u5b83\uff0c\u5373\u4f7f\u540e\u7eed\u53d1\u73b0\u8fd9\u4e2a\u9009\u62e9\u53ef\u80fd\u4e0d\u662f\u6700\u4f18\u7684\u3002\u56e0\u4e3a\u8d2a\u5fc3\u7b97\u6cd5\u4f9d\u8d56\u7684\u662f\u5f53\u524d\u6700\u4f18\u9009\u62e9\u7684\u7b56\u7565\uff0c\u6240\u4ee5\u5b83\u4e0d\u4f1a\u4e3a\u672a\u6765\u7684\u9009\u62e9\u7559\u4e0b\u56de\u65cb\u4f59\u5730\u3002 \u4f18\u70b9 \uff1a\u7531\u4e8e\u4e0d\u9700\u8981\u56de\u6eaf\uff0c\u8d2a\u5fc3\u7b97\u6cd5\u6267\u884c\u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u901a\u5e38\u6bd4\u9700\u8981\u56de\u6eaf\u7684\u7b97\u6cd5\uff08\u5982\u52a8\u6001\u89c4\u5212\u3001\u56de\u6eaf\u6cd5\u7b49\uff09\u66f4\u4f4e\u3002\u8d2a\u5fc3\u7b97\u6cd5\u7684\u9ad8\u6548\u6027\u4f53\u73b0\u5728\u5176\u5feb\u901f\u3001\u76f4\u63a5\u7684\u89e3\u51b3\u601d\u8def\u4e0a\uff0c\u9002\u7528\u4e8e\u5904\u7406\u5927\u89c4\u6a21\u95ee\u9898\u65f6\u7684\u9ad8\u6548\u6c42\u89e3\u3002 \u7f3a\u70b9 \uff1a\u7531\u4e8e\u8d2a\u5fc3\u7b97\u6cd5\u4e0d\u5177\u5907\u56de\u6eaf\u80fd\u529b\uff0c\u5b83\u53ea\u80fd\u5728\u7b26\u5408\u8d2a\u5fc3\u9009\u62e9\u6027\u8d28\u7684\u95ee\u9898\u4e2d\u6709\u6548\u3002\u5982\u679c\u95ee\u9898\u4e0d\u6ee1\u8db3\u8fd9\u79cd\u6027\u8d28\uff0c\u7b97\u6cd5\u53ef\u80fd\u4f1a\u5728\u540e\u7eed\u6b65\u9aa4\u4e2d\u9677\u5165\u6b21\u4f18\u89e3\u6216\u6b7b\u80e1\u540c\uff0c\u65e0\u6cd5\u8fbe\u5230\u5168\u5c40\u6700\u4f18\u89e3\u3002 \u5177\u4f53\u6b65\u9aa4 \u8d2a\u5fc3\u7b97\u6cd5\u901a\u5e38\u9075\u5faa\u4ee5\u4e0b\u57fa\u672c\u6b65\u9aa4\uff1a \u660e\u786e\u8d2a\u5fc3\u7b56\u7565 \uff1a\u786e\u5b9a\u6bcf\u4e00\u6b65\u7684\u5c40\u90e8\u6700\u4f18\u89e3\u9009\u62e9\u7b56\u7565\u3002 \u6392\u5e8f \uff1a\u5982\u679c\u95ee\u9898\u6d89\u53ca\u591a\u4e2a\u9009\u62e9\uff0c\u901a\u5e38\u9700\u8981\u5bf9\u5176\u8fdb\u884c\u6392\u5e8f\uff08\u5982\u6309\u7ed3\u675f\u65f6\u95f4\u3001\u5355\u4f4d\u4ef7\u503c\u7b49\uff09\u3002 \u9010\u6b65\u9009\u62e9 \uff1a\u6839\u636e\u8d2a\u5fc3\u7b56\u7565\uff0c\u6309\u7167\u6392\u5e8f\u7ed3\u679c\u9010\u6b65\u9009\u62e9\u6700\u4f18\u9879\u3002 \u68c0\u67e5\u53ef\u884c\u6027 \uff1a\u6bcf\u6b21\u9009\u62e9\u65f6\uff0c\u786e\u4fdd\u5f53\u524d\u9009\u62e9\u6ee1\u8db3\u95ee\u9898\u7684\u7ea6\u675f\u6761\u4ef6\uff08\u5982\u4e0d\u51b2\u7a81\u3001\u4e0d\u8d85\u51fa\u5bb9\u91cf\u7b49\uff09\u3002 \u6784\u9020\u89e3 \uff1a\u5c06\u6240\u6709\u7684\u9009\u62e9\u7ec4\u5408\u8d77\u6765\uff0c\u5f62\u6210\u95ee\u9898\u7684\u6700\u7ec8\u89e3\u3002 \u8d2a\u5fc3\u7b97\u6cd5\u7684\u9002\u7528\u6761\u4ef6 \u8981\u5224\u65ad\u4e00\u4e2a\u95ee\u9898\u662f\u5426\u9002\u5408\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u53ef\u4ee5\u89c2\u5bdf\u4ee5\u4e0b\u7279\u5f81\uff1a \u8d2a\u5fc3\u9009\u62e9\u6027\u8d28 \uff1a\u5728\u6bcf\u4e00\u6b65\u4e2d\uff0c\u9009\u62e9\u7684\u5c40\u90e8\u6700\u4f18\u89e3\u80fd\u591f\u4fdd\u8bc1\u4e0d\u4f1a\u5f71\u54cd\u540e\u7eed\u9009\u62e9\u7684\u6700\u4f18\u6027\uff0c\u5373\u8d2a\u5fc3\u9009\u62e9\u5728\u6bcf\u4e00\u6b65\u90fd\u80fd\u4fdd\u6301\u5168\u5c40\u6700\u4f18\u3002 \u65e0\u540e\u6548\u6027 \uff1a\u5f53\u524d\u7684\u9009\u62e9\u4e0d\u4f1a\u5f71\u54cd\u672a\u6765\u7684\u9009\u62e9\u3002\u6bcf\u4e2a\u9009\u62e9\u7684\u7ed3\u679c\u53ea\u4f9d\u8d56\u5f53\u524d\u72b6\u6001\uff0c\u800c\u4e0d\u4f1a\u4f9d\u8d56\u4e4b\u524d\u7684\u51b3\u7b56\u3002\u5373\u4e00\u65e6\u505a\u51fa\u4e86\u67d0\u4e2a\u9009\u62e9\uff0c\u8be5\u9009\u62e9\u5c31\u4e0d\u53ef\u6539\u53d8\u3002 \u5982\u679c\u95ee\u9898\u6ee1\u8db3\u4ee5\u4e0a\u4e24\u70b9\uff0c\u90a3\u4e48\u901a\u5e38\u53ef\u4ee5\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\u6c42\u89e3\u3002 \u8d2a\u5fc3\u7b97\u6cd5 vs \u52a8\u6001\u89c4\u5212\u7684\u5224\u5b9a\u6807\u51c6 \u5728\u533a\u5206\u4e00\u4e2a\u95ee\u9898\u662f\u5426\u9002\u5408\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\u6216\u52a8\u6001\u89c4\u5212\u65f6\uff0c \u6700\u4f18\u5b50\u7ed3\u6784 \u548c \u5b50\u95ee\u9898\u91cd\u53e0 \u662f\u5173\u952e\u7684\u5224\u5b9a\u6807\u51c6\uff1a \u8d2a\u5fc3\u9009\u62e9\u7684\u9002\u7528\u6761\u4ef6 \uff1a \u5c40\u90e8\u6700\u4f18\u9009\u62e9\u6027\u8d28 \uff1a\u8d2a\u5fc3\u7b97\u6cd5\u6bcf\u4e00\u6b65\u505a\u51fa\u7684\u9009\u62e9\u90fd\u662f\u5c40\u90e8\u6700\u4f18\u89e3\uff0c\u4e14\u8fd9\u4e9b\u5c40\u90e8\u6700\u4f18\u89e3\u6784\u6210\u4e86\u5168\u5c40\u6700\u4f18\u89e3\u3002\u8fd9\u79cd\u6027\u8d28\u4e00\u822c\u5b58\u5728\u4e8e\u53ef\u4ee5\u901a\u8fc7\u9010\u6b65\u9009\u62e9\u89e3\u51b3\u7684 \u7b80\u5355\u4f18\u5316\u95ee\u9898 \u3002 \u65e0\u540e\u6548\u6027 \uff1a\u672a\u6765\u7684\u51b3\u7b56\u4e0d\u4f9d\u8d56\u4e8e\u4e4b\u524d\u7684\u9009\u62e9\uff0c\u56e0\u6b64\u4e00\u65e6\u505a\u51fa\u4e86\u9009\u62e9\uff0c\u4e0d\u9700\u8981\u56de\u6eaf\u68c0\u67e5\u3002\u4f8b\u5982\uff0c \u5206\u6570\u80cc\u5305\u95ee\u9898 \uff0c\u6bcf\u6b21\u9009\u62e9\u5355\u4f4d\u4ef7\u503c\u6700\u9ad8\u7684\u7269\u54c1\u4e0d\u4f1a\u5f71\u54cd\u4e4b\u540e\u7684\u9009\u62e9\u3002 \u52a8\u6001\u89c4\u5212\u7684\u9002\u7528\u6761\u4ef6 \uff1a \u6700\u4f18\u5b50\u7ed3\u6784 \uff1a\u5168\u5c40\u6700\u4f18\u89e3\u4f9d\u8d56\u4e8e\u5b50\u95ee\u9898\u7684\u6700\u4f18\u89e3\u3002\u5982\u679c\u6bcf\u4e2a\u5b50\u95ee\u9898\u7684\u89e3\u90fd\u5f71\u54cd\u5230\u5168\u5c40\u6700\u4f18\u89e3\uff0c\u90a3\u4e48\u8fd9\u79cd\u95ee\u9898\u901a\u5e38\u9700\u8981\u4f7f\u7528\u52a8\u6001\u89c4\u5212\u6765\u89e3\u51b3\u3002\u80cc\u5305\u95ee\u9898\u4e2d\u7684 0-1 \u80cc\u5305\u95ee\u9898 \u5c31\u5c5e\u4e8e\u6b64\u7c7b\u95ee\u9898\uff0c\u5f53\u524d\u7269\u54c1\u662f\u5426\u9009\u5165\u80cc\u5305\u4f1a\u5f71\u54cd\u672a\u6765\u7684\u9009\u62e9\uff0c\u56e0\u6b64\u65e0\u6cd5\u7b80\u5355\u901a\u8fc7\u8d2a\u5fc3\u7b56\u7565\u5f97\u5230\u6700\u4f18\u89e3\u3002 \u5b50\u95ee\u9898\u91cd\u53e0 \uff1a\u5982\u679c\u95ee\u9898\u53ef\u4ee5\u88ab\u62c6\u5206\u4e3a\u591a\u4e2a\u5b50\u95ee\u9898\uff0c\u4e14\u8fd9\u4e9b\u5b50\u95ee\u9898\u4e4b\u95f4\u5b58\u5728\u91cd\u53e0\uff08\u5373\u67d0\u4e2a\u5b50\u95ee\u9898\u7684\u89e3\u4f1a\u591a\u6b21\u88ab\u4f7f\u7528\uff09\uff0c\u90a3\u4e48\u52a8\u6001\u89c4\u5212\u662f\u66f4\u6709\u6548\u7684\u9009\u62e9\u3002 \u603b\u7ed3\u6765\u770b\uff0c\u5982\u679c\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u5355\u7eaf\u7684 \u5c40\u90e8\u6700\u4f18\u9009\u62e9 \u89e3\u51b3\uff0c\u5e76\u4e14\u672a\u6765\u7684\u9009\u62e9\u4e0d\u4f9d\u8d56\u4e8e\u8fc7\u53bb\u7684\u9009\u62e9\uff0c\u901a\u5e38\u53ef\u4ee5\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\uff1b\u5426\u5219\u9700\u8981\u901a\u8fc7\u52a8\u6001\u89c4\u5212\u6765\u89e3\u51b3\u95ee\u9898\u3002 \u7b80\u5355\u4f8b\u5b50 1. \u5206\u6570\u80cc\u5305\u95ee\u9898 \uff08\u8d2a\u5fc3\u7b97\u6cd5\uff09 \u95ee\u9898\u63cf\u8ff0 \uff1a\u4f60\u6709\u4e00\u4e2a\u5bb9\u91cf\u4e3a 50 \u7684\u80cc\u5305\uff0c\u548c\u4e00\u5806\u7269\u54c1\uff0c\u6bcf\u4ef6\u7269\u54c1\u90fd\u6709\u91cd\u91cf\u548c\u4ef7\u503c\u3002\u4f60\u53ef\u4ee5\u5c06\u6bcf\u4ef6\u7269\u54c1\u6309\u4efb\u610f\u6bd4\u4f8b\u88c5\u5165\u80cc\u5305\uff08\u4f8b\u5982\u53ef\u4ee5\u88c5\u5165\u7269\u54c1\u7684\u4e00\u90e8\u5206\uff09\uff0c\u76ee\u6807\u662f\u8ba9\u80cc\u5305\u91cc\u7684\u7269\u54c1\u603b\u4ef7\u503c\u6700\u5927\u5316\u3002 \u8d2a\u5fc3\u7b56\u7565 \uff1a\u4f18\u5148\u9009\u62e9\u5355\u4f4d\u91cd\u91cf\u4ef7\u503c\u6700\u9ad8\u7684\u7269\u54c1\uff0c\u5c3d\u53ef\u80fd\u591a\u5730\u88c5\u5165\u80cc\u5305\u3002 \u5206\u6790\u6b65\u9aa4\uff1a \u660e\u786e\u8d2a\u5fc3\u7b56\u7565 \uff1a\u6bcf\u6b21\u9009\u62e9\u5355\u4f4d\u91cd\u91cf\u4ef7\u503c\u6700\u9ad8\u7684\u7269\u54c1\uff0c\u5c3d\u53ef\u80fd\u591a\u88c5\u5165\u80cc\u5305\u3002 \u6392\u5e8f \uff1a\u5c06\u6240\u6709\u7269\u54c1\u6309\u7167\u5355\u4f4d\u91cd\u91cf\u7684\u4ef7\u503c\u4ece\u9ad8\u5230\u4f4e\u6392\u5e8f\u3002 \u9010\u6b65\u9009\u62e9 \uff1a\u6309\u7167\u6392\u5e8f\u540e\u7684\u987a\u5e8f\uff0c\u4f18\u5148\u9009\u62e9\u5355\u4f4d\u4ef7\u503c\u6700\u9ad8\u7684\u7269\u54c1\uff0c\u76f4\u5230\u80cc\u5305\u88c5\u6ee1\u3002 \u68c0\u67e5\u53ef\u884c\u6027 \uff1a\u6bcf\u6b21\u9009\u62e9\u7269\u54c1\u65f6\uff0c\u68c0\u67e5\u80cc\u5305\u5269\u4f59\u5bb9\u91cf\u662f\u5426\u8db3\u591f\u3002\u5982\u679c\u5bb9\u91cf\u4e0d\u8db3\uff0c\u5c06\u7269\u54c1\u7684\u4e00\u90e8\u5206\u88c5\u5165\u80cc\u5305\u3002 \u6784\u9020\u89e3 \uff1a\u5c06\u9009\u5165\u80cc\u5305\u7684\u7269\u54c1\u7ec4\u5408\u8d77\u6765\uff0c\u8ba1\u7b97\u603b\u4ef7\u503c\uff0c\u5f97\u5230\u95ee\u9898\u7684\u89e3\u3002 2. 0-1 \u80cc\u5305\u95ee\u9898 \uff08\u52a8\u6001\u89c4\u5212\uff09 \u95ee\u9898\u63cf\u8ff0 \uff1a\u4f60\u6709\u4e00\u4e2a\u5bb9\u91cf\u4e3a 50 \u7684\u80cc\u5305\u548c\u4e00\u5806\u7269\u54c1\uff0c\u6bcf\u4ef6\u7269\u54c1\u90fd\u6709\u4e00\u4e2a\u786e\u5b9a\u7684\u91cd\u91cf\u548c\u4ef7\u503c\u3002\u4f60\u53ea\u80fd\u9009\u62e9 \u5c06\u67d0\u4ef6\u7269\u54c1\u5b8c\u5168\u653e\u5165\u80cc\u5305 \u6216\u8005 \u4e0d\u653e\u5165 \uff0c\u4e0d\u80fd\u53ea\u88c5\u4e00\u90e8\u5206\u3002\u76ee\u6807\u662f\u9009\u62e9\u4e00\u4e9b\u7269\u54c1\u653e\u5165\u80cc\u5305\uff0c\u4f7f\u5f97\u80cc\u5305\u4e2d\u7684\u7269\u54c1\u603b\u4ef7\u503c\u6700\u5927\u5316\u3002 \u52a8\u6001\u89c4\u5212\u601d\u8def \uff1a\u5bf9\u4e8e\u6bcf\u4ef6\u7269\u54c1\uff0c\u4f60\u9700\u8981\u51b3\u5b9a\u662f\u5426\u653e\u5165\u80cc\u5305\u3002\u6bcf\u6b21\u7684\u9009\u62e9\u90fd\u4f9d\u8d56\u4e8e\u80cc\u5305\u5f53\u524d\u7684\u5bb9\u91cf\u4ee5\u53ca\u4e4b\u524d\u7684\u9009\u62e9\u3002\u56e0\u4e3a\u9009\u62e9\u4e00\u6b21\u7269\u54c1\u4f1a\u5f71\u54cd\u5230\u540e\u7eed\u80fd\u88c5\u591a\u5c11\u4e1c\u897f\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u800c\u9700\u8981\u901a\u8fc7\u52a8\u6001\u89c4\u5212\u6765\u8003\u8651\u6240\u6709\u53ef\u80fd\u7684\u7ec4\u5408\u3002 \u7528\u7b80\u5355\u7684\u8bdd\u6765\u7406\u89e3\u52a8\u6001\u89c4\u5212\u7684\u601d\u8def\uff1a \u72b6\u6001 \uff1a\u6211\u4eec\u7528 dp[i][w] \u8868\u793a \u524d i \u4e2a\u7269\u54c1 \u5728 \u5bb9\u91cf\u4e3a w \u7684\u80cc\u5305 \u4e2d\u6240\u80fd\u88c5\u7684\u6700\u5927\u603b\u4ef7\u503c\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c dp[i][w] \u662f\u4e00\u4e2a\u4e2d\u95f4\u7ed3\u679c\uff0c\u544a\u8bc9\u6211\u4eec\u5982\u679c\u53ea\u8003\u8651\u524d i \u4e2a\u7269\u54c1\uff0c\u5e76\u4e14\u80cc\u5305\u5bb9\u91cf\u4e3a w\uff0c\u6211\u4eec\u80fd\u88c5\u7684\u6700\u9ad8\u4ef7\u503c\u662f\u591a\u5c11\u3002 \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b \uff1a\u8fd9\u4e2a\u5c31\u662f\u52a8\u6001\u89c4\u5212\u4e2d\u7684\u201c\u89c4\u5219\u201d\uff0c\u7528\u6765\u6307\u5bfc\u6211\u4eec\u5982\u4f55\u6839\u636e\u524d\u9762\u7684\u8ba1\u7b97\u7ed3\u679c\u63a8\u5bfc\u51fa\u5f53\u524d\u7684\u6700\u4f18\u89e3\u3002 \u5bf9\u4e8e\u6bcf\u4ef6\u7269\u54c1 i \uff0c\u4f60\u6709\u4e24\u79cd\u9009\u62e9\uff1a - \u4e0d\u9009\u8fd9\u4ef6\u7269\u54c1 \uff1a\u90a3\u4e48\u6700\u5927\u4ef7\u503c\u5c31\u662f dp[i-1][w] \uff0c\u5373\u80cc\u5305\u5bb9\u91cf\u4fdd\u6301\u4e0d\u53d8\uff0c\u524d\u9762 i-1 \u4e2a\u7269\u54c1\u7684\u6700\u4f18\u89e3\u3002 - \u9009\u8fd9\u4ef6\u7269\u54c1 \uff1a\u5982\u679c\u9009\u62e9\u7269\u54c1 i \uff0c\u5219\u5f53\u524d\u7684\u80cc\u5305\u5bb9\u91cf\u51cf\u5c11 weight[i] \uff0c\u800c\u6211\u4eec\u8fd8\u83b7\u5f97\u4e86 value[i] \u8fd9\u4e2a\u7269\u54c1\u7684\u4ef7\u503c\u3002\u6240\u4ee5\u6700\u5927\u4ef7\u503c\u53d8\u6210\u4e86 dp[i-1][w - weight[i]] + value[i] \u3002 \u4e24\u8005\u53d6\u8f83\u5927\u503c\uff1a dp[i][w] = max(dp[i-1][w], dp[i-1][w - weight[i]] + value[i]) \u7406\u89e3\u8fd9\u6bb5\u516c\u5f0f \uff1a \u5982\u679c\u4f60\u4e0d\u9009\u7269\u54c1 i \uff0c\u90a3\u4e48\u4f60\u53ea\u80fd\u4f9d\u8d56\u524d\u9762 i-1 \u4e2a\u7269\u54c1\u5728\u5bb9\u91cf\u4e3a w \u65f6\u7684\u6700\u4f18\u89e3\uff0c\u5373 dp[i-1][w] \u3002 \u5982\u679c\u4f60\u9009\u4e86\u7269\u54c1 i \uff0c\u90a3\u4f60\u9700\u8981\u817e\u51fa\u8db3\u591f\u7684\u7a7a\u95f4\u6765\u653e\u5b83\uff0c\u4e5f\u5c31\u662f\u8bf4\u80cc\u5305\u5bb9\u91cf\u4f1a\u51cf\u5c11 weight[i] \uff0c\u7136\u540e\u4f60\u80fd\u83b7\u5f97\u8fd9\u4ef6\u7269\u54c1\u7684\u4ef7\u503c value[i] \uff0c\u518d\u52a0\u4e0a\u524d i-1 \u4e2a\u7269\u54c1\u5728\u51cf\u5c11\u4e86\u7684\u5bb9\u91cf w - weight[i] \u65f6\u7684\u6700\u4f18\u89e3\uff0c\u5373 dp[i-1][w - weight[i]] \u3002 \u5982\u4f55\u6c42\u89e3 \uff1a\u6211\u4eec\u4ece\u7a7a\u80cc\u5305\u5f00\u59cb\uff0c\u9010\u6b65\u589e\u52a0\u7269\u54c1\u548c\u5bb9\u91cf\uff0c\u6bcf\u6b21\u7528\u4e0a\u9762\u8fd9\u4e2a\u516c\u5f0f\u53bb\u66f4\u65b0\u5f53\u524d\u80cc\u5305\u5bb9\u91cf\u7684\u6700\u4f18\u89e3\u3002\u901a\u8fc7\u8fd9\u4e2a\u9012\u63a8\u8fc7\u7a0b\uff0c\u6700\u540e\u5c31\u80fd\u5f97\u5230\u6574\u4e2a\u80cc\u5305\u7684\u6700\u5927\u4ef7\u503c\u3002 \u4e3e\u4e2a\u7b80\u5355\u4f8b\u5b50\uff1a \u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u80cc\u5305\u5bb9\u91cf\u4e3a 5\uff0c\u7269\u54c1\u5982\u4e0b\uff1a - \u7269\u54c1 1\uff1a\u91cd\u91cf 2\uff0c\u4ef7\u503c 3 - \u7269\u54c1 2\uff1a\u91cd\u91cf 3\uff0c\u4ef7\u503c 4 - \u7269\u54c1 3\uff1a\u91cd\u91cf 4\uff0c\u4ef7\u503c 5 \u52a8\u6001\u89c4\u5212\u8868\u7684\u6784\u5efa\u8fc7\u7a0b \uff1a i\\w 0 1 2 3 4 5 0 0 0 0 0 0 0 1 0 0 3 3 3 3 2 0 0 3 4 4 7 3 0 0 3 4 5 7 \u5f53 i = 1 \uff08\u53ea\u8003\u8651\u7269\u54c11\uff09\uff1a\u7269\u54c11\u7684\u91cd\u91cf\u4e3a2\uff0c\u6240\u4ee5\u5f53\u80cc\u5305\u5bb9\u91cf\u5c0f\u4e8e2\u65f6\uff0c\u65e0\u6cd5\u653e\u5165\uff0c\u4ef7\u503c\u4e3a0\uff1b\u5f53\u5bb9\u91cf\u7b49\u4e8e2\u6216\u5927\u4e8e2\u65f6\uff0c\u653e\u5165\u7269\u54c11\uff0c\u4ef7\u503c\u4e3a3\u3002 \u5f53 i = 2 \uff08\u8003\u8651\u524d\u4e24\u4e2a\u7269\u54c1\uff09\uff1a\u5728\u5bb9\u91cf\u4e3a3\u65f6\uff0c\u653e\u5165\u7269\u54c12\u6bd4\u7269\u54c11\u597d\uff0c\u4ef7\u503c\u4e3a4\uff1b\u5f53\u5bb9\u91cf\u4e3a5\u65f6\uff0c\u653e\u5165\u7269\u54c11\u548c\u7269\u54c12\uff0c\u4ef7\u503c\u4e3a7\u3002 \u5f53 i = 3 \uff08\u8003\u8651\u4e09\u4e2a\u7269\u54c1\uff09\uff1a\u7269\u54c13\u592a\u91cd\uff0c\u4e0d\u80fd\u653e\u5165\u80cc\u5305\uff0c\u4e4b\u524d\u7684\u6700\u4f18\u503c\u4fdd\u6301\u4e0d\u53d8\u3002 \u6700\u7ec8\uff0c\u6211\u4eec\u5f97\u5230\u7684\u6700\u5927\u4ef7\u503c\u4e3a7\u3002 3. \u6d3b\u52a8\u9009\u62e9\u95ee\u9898 \uff08\u8d2a\u5fc3\u7b97\u6cd5\uff09 \u95ee\u9898 \uff1a\u4f60\u6709\u4e00\u7cfb\u5217\u6d3b\u52a8\uff0c\u6bcf\u4e2a\u6d3b\u52a8\u90fd\u6709\u5f00\u59cb\u65f6\u95f4\u548c\u7ed3\u675f\u65f6\u95f4\u3002\u4f60\u9700\u8981\u9009\u62e9\u5c3d\u53ef\u80fd\u591a\u7684\u6d3b\u52a8\uff0c\u5e76\u4e14\u8fd9\u4e9b\u6d3b\u52a8\u4e0d\u80fd\u91cd\u53e0\u3002 \u8d2a\u5fc3\u7b56\u7565 \uff1a\u6bcf\u6b21\u9009\u62e9\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u4e14\u4e0d\u4e0e\u5176\u4ed6\u6d3b\u52a8\u51b2\u7a81\u7684\u6d3b\u52a8\u3002 \u6b65\u9aa4 \uff1a 1. \u660e\u786e\u8d2a\u5fc3\u7b56\u7565 \uff1a\u6bcf\u6b21\u9009\u62e9\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u7684\u6d3b\u52a8\uff0c\u4ee5\u7559\u51fa\u66f4\u591a\u65f6\u95f4\u7ed9\u5176\u4ed6\u6d3b\u52a8\u3002 2. \u6392\u5e8f \uff1a\u5c06\u6d3b\u52a8\u6309\u7ed3\u675f\u65f6\u95f4\u4ece\u65e9\u5230\u665a\u6392\u5e8f\u3002 3. \u9010\u6b65\u9009\u62e9 \uff1a\u4ece\u7b2c\u4e00\u4e2a\u6d3b\u52a8\u5f00\u59cb\uff0c\u4f9d\u6b21\u9009\u62e9\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u4e14\u4e0e\u4e4b\u524d\u6d3b\u52a8\u4e0d\u51b2\u7a81\u7684\u6d3b\u52a8\u3002 4. \u68c0\u67e5\u53ef\u884c\u6027 \uff1a\u6bcf\u6b21\u9009\u62e9\u6d3b\u52a8\u65f6\uff0c\u68c0\u67e5\u8be5\u6d3b\u52a8\u662f\u5426\u4e0e\u5df2\u7ecf\u9009\u62e9\u7684\u6d3b\u52a8\u51b2\u7a81\u3002 5. \u6784\u9020\u89e3 \uff1a\u5c06\u6bcf\u6b21\u9009\u62e9\u7684\u6d3b\u52a8\u52a0\u5165\u6700\u7ec8\u89e3\uff0c\u76f4\u5230\u6ca1\u6709\u6d3b\u52a8\u53ef\u4ee5\u518d\u9009\u3002 \u8d2a\u5fc3\u7b97\u6cd5\u7684\u5c40\u9650\u6027 \u8d2a\u5fc3\u7b97\u6cd5\u5e76\u4e0d\u603b\u662f\u80fd\u627e\u5230\u6700\u4f18\u89e3\u3002\u6bd4\u5982\uff1a 1. 0-1 \u80cc\u5305\u95ee\u9898 \u5728\u8fd9\u4e2a\u95ee\u9898\u4e2d\uff0c\u4f60\u5fc5\u987b\u9009\u62e9 \u5b8c\u6574\u7684\u7269\u54c1 \uff08\u8981\u4e48\u5168\u9009\uff0c\u8981\u4e48\u4e0d\u9009\uff09\uff0c\u800c\u4e0d\u80fd\u9009\u62e9\u7269\u54c1\u7684\u4e00\u90e8\u5206\u3002\u5982\u679c\u4f60\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\u6765\u9009\u62e9\u5355\u4f4d\u4ef7\u503c\u6700\u9ad8\u7684\u7269\u54c1\uff0c\u5f88\u53ef\u80fd\u4f1a\u56e0\u4e3a\u91cd\u91cf\u9650\u5236\u800c\u65e0\u6cd5\u9009\u62e9\u6700\u4f18\u7ec4\u5408\u3002 2. \u6700\u77ed\u8def\u5f84\u95ee\u9898 \u5728\u67d0\u4e9b\u56fe\u4e0a\uff0c\u8d2a\u5fc3\u7b56\u7565\uff08\u603b\u662f\u9009\u62e9\u8ddd\u79bb\u6700\u8fd1\u7684\u8282\u70b9\uff09\u5e76\u4e0d\u603b\u80fd\u627e\u5230\u6700\u77ed\u8def\u5f84\u3002 \u603b\u7ed3\uff1a \u8d2a\u5fc3\u7b97\u6cd5\u662f\u4e00\u79cd\u7b80\u5355\u800c\u9ad8\u6548\u7684\u7b56\u7565\uff0c\u9002\u5408\u7528\u5728\u90a3\u4e9b \u53ef\u4ee5\u901a\u8fc7\u5c40\u90e8\u6700\u4f18\u89e3\u5f97\u5230\u5168\u5c40\u6700\u4f18\u89e3 \u7684\u95ee\u9898\u4e0a\u3002\u5b83\u7684\u5173\u952e\u5728\u4e8e\u6bcf\u4e00\u6b65\u90fd\u505a\u51fa\u6700\u597d\u7684\u5c40\u90e8\u9009\u62e9\uff0c\u5e0c\u671b\u6700\u7ec8\u5f97\u5230\u6700\u4f18\u89e3\u3002\u867d\u7136\u5e76\u4e0d\u662f\u6240\u6709\u95ee\u9898\u90fd\u9002\u5408\u7528\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u4f46\u5728\u5408\u9002\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u80fd\u5feb\u901f\u627e\u5230\u89e3\u3002 3.1 \u8d2a\u5fc3\u7b97\u6cd5\u4f8b\u9898\u8bb2\u89e3 3.1.1 LC455: \u5206\u53d1\u997c\u5e72 \u9898\u76ee\u63cf\u8ff0 \uff1a\u6709 g \u4e2a\u5b69\u5b50\u548c s \u4e2a\u997c\u5e72\uff0c\u6bcf\u4e2a\u5b69\u5b50\u90fd\u6709\u4e00\u4e2a\u8d2a\u5fc3\u6307\u6570\uff0c\u8868\u793a\u4ed6\u6700\u5c11\u9700\u8981\u591a\u5c11\u997c\u5e72\u3002\u6bcf\u4e2a\u997c\u5e72\u90fd\u6709\u4e00\u4e2a\u5927\u5c0f\uff0c\u8868\u793a\u5b83\u53ef\u4ee5\u6ee1\u8db3\u67d0\u4e2a\u5b69\u5b50\u7684\u9700\u6c42\u3002\u4f60\u8981\u5206\u53d1\u5c3d\u53ef\u80fd\u591a\u7684\u997c\u5e72\u7ed9\u5b69\u5b50\uff0c\u4f7f\u5f97\u6700\u591a\u7684\u5b69\u5b50\u80fd\u5f97\u5230\u6ee1\u8db3\u3002 \u8d2a\u5fc3\u7b97\u6cd5\u6b65\u9aa4 \uff1a 1. \u6392\u5e8f \uff1a\u5c06\u5b69\u5b50\u7684\u9700\u6c42\uff08\u8d2a\u5fc3\u6307\u6570\uff09\u548c\u997c\u5e72\u7684\u5927\u5c0f\u90fd\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\u3002 - \u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u6211\u4eec\u53ef\u4ee5\u7528\u6700\u5c0f\u7684\u997c\u5e72\u53bb\u6ee1\u8db3\u6700\u5c0f\u9700\u6c42\u7684\u5b69\u5b50\uff0c\u4ece\u800c\u5c3d\u53ef\u80fd\u6ee1\u8db3\u66f4\u591a\u7684\u5b69\u5b50\u3002 \u5339\u914d \uff1a\u4ece\u6700\u5c0f\u7684\u997c\u5e72\u548c\u6700\u5c0f\u9700\u6c42\u7684\u5b69\u5b50\u5f00\u59cb\u5339\u914d\u3002 \u6bcf\u6b21\u5982\u679c\u997c\u5e72\u5927\u5c0f\u53ef\u4ee5\u6ee1\u8db3\u5f53\u524d\u5b69\u5b50\u7684\u9700\u6c42\uff0c\u5c31\u5c06\u8fd9\u4e2a\u997c\u5e72\u5206\u914d\u7ed9\u8fd9\u4e2a\u5b69\u5b50\uff0c\u7136\u540e\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u5b69\u5b50\u3002 \u5982\u679c\u5f53\u524d\u997c\u5e72\u4e0d\u591f\u6ee1\u8db3\u5b69\u5b50\u9700\u6c42\uff0c\u5c31\u7ee7\u7eed\u5c1d\u8bd5\u4e0b\u4e00\u4e2a\u66f4\u5927\u7684\u997c\u5e72\uff0c\u76f4\u5230\u6240\u6709\u5b69\u5b50\u6216\u997c\u5e72\u7528\u5b8c\u3002 \u4ee3\u7801\u5b9e\u73b0\uff1a class Solution { public: int findContentChildren(vector<int>& g, vector<int>& s) { // \u5c06\u5b69\u5b50\u7684\u9700\u6c42\u548c\u997c\u5e72\u7684\u5927\u5c0f\u6392\u5e8f sort(g.begin(), g.end()); sort(s.begin(), s.end()); int i = 0, j = 0; // \u904d\u5386\u5b69\u5b50\u548c\u997c\u5e72\u6570\u7ec4 while (i < g.size() && j < s.size()) { // \u5982\u679c\u5f53\u524d\u997c\u5e72\u80fd\u6ee1\u8db3\u5f53\u524d\u5b69\u5b50 if (s[j] >= g[i]) { i++; // \u6ee1\u8db3\u4e86\u5b69\u5b50 i\uff0c\u5904\u7406\u4e0b\u4e00\u4e2a\u5b69\u5b50 } j++; // \u5c1d\u8bd5\u4e0b\u4e00\u4e2a\u997c\u5e72 } return i; // \u8fd4\u56de\u6ee1\u8db3\u7684\u5b69\u5b50\u6570\u91cf } }; \u8bb2\u89e3\uff1a \u6392\u5e8f\u6b65\u9aa4 \uff1a \u9996\u5148\u5c06\u5b69\u5b50\u7684\u9700\u6c42\u6570\u7ec4 g \u548c\u997c\u5e72\u5927\u5c0f\u6570\u7ec4 s \u8fdb\u884c\u6392\u5e8f\u3002\u6392\u5e8f\u540e\uff0c\u8f83\u5c0f\u7684\u5b69\u5b50\u9700\u6c42\u548c\u8f83\u5c0f\u7684\u997c\u5e72\u4f1a\u6392\u5217\u5728\u6570\u7ec4\u524d\u9762\uff0c\u8fd9\u6837\u53ef\u4ee5\u5c3d\u91cf\u7528\u6700\u5c0f\u7684\u997c\u5e72\u53bb\u6ee1\u8db3\u6700\u5c0f\u9700\u6c42\u7684\u5b69\u5b50\u3002 \u5339\u914d\u8fc7\u7a0b \uff1a \u901a\u8fc7\u4e24\u4e2a\u6307\u9488 i \u548c j \u5206\u522b\u6307\u5411\u5b69\u5b50\u548c\u997c\u5e72\u7684\u6570\u7ec4\u3002\u521d\u59cb\u65f6\uff0c i = 0 \uff0c j = 0 \uff0c\u8868\u793a\u4ece\u7b2c\u4e00\u4e2a\u5b69\u5b50\u548c\u7b2c\u4e00\u4e2a\u997c\u5e72\u5f00\u59cb\u3002 \u5f53 s[j] >= g[i] \u65f6\uff0c\u8868\u793a\u5f53\u524d\u997c\u5e72\u53ef\u4ee5\u6ee1\u8db3\u5f53\u524d\u5b69\u5b50\u7684\u9700\u6c42\uff0c\u5b69\u5b50\u88ab\u6ee1\u8db3\uff0c\u79fb\u52a8\u6307\u9488 i \uff0c\u5904\u7406\u4e0b\u4e00\u4e2a\u5b69\u5b50\u3002 \u65e0\u8bba\u662f\u5426\u6ee1\u8db3\uff0c\u997c\u5e72\u90fd\u4f1a\u88ab\u4f7f\u7528\uff0c\u6240\u4ee5 j++ \u6bcf\u6b21\u90fd\u4f1a\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u997c\u5e72\u3002 \u6700\u7ec8\u7ed3\u679c \uff1a \u5f53\u904d\u5386\u7ed3\u675f\u65f6\uff0c i \u7684\u503c\u5c31\u662f\u80fd\u591f\u6ee1\u8db3\u7684\u5b69\u5b50\u6570\u91cf\uff0c\u5373\u6700\u540e\u8fd4\u56de\u7684\u7ed3\u679c\u3002 3.2 \u8d2a\u5fc3\u7b97\u6cd5\u4e3e\u4e00\u53cd\u4e09 3.2.1 LC 435: \u65e0\u91cd\u53e0\u533a\u95f4 \u9898\u76ee\u63cf\u8ff0 \uff1a\u7ed9\u5b9a\u4e00\u7ec4\u533a\u95f4\uff0c\u627e\u5230\u6700\u5c11\u9700\u8981\u79fb\u9664\u7684\u533a\u95f4\u6570\u91cf\uff0c\u4f7f\u5f97\u5269\u4e0b\u7684\u533a\u95f4\u4e92\u4e0d\u91cd\u53e0\u3002 \u8d2a\u5fc3\u7b97\u6cd5\u6b65\u9aa4 \uff1a 1. \u6392\u5e8f \uff1a\u6309\u7167\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\u3002\u6392\u5e8f\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f18\u5148\u9009\u62e9\u7ed3\u675f\u65f6\u95f4\u8f83\u65e9\u7684\u533a\u95f4\uff0c\u8fd9\u6837\u80fd\u591f\u4e3a\u540e\u7eed\u533a\u95f4\u7559\u51fa\u66f4\u591a\u7a7a\u95f4\uff0c\u51cf\u5c11\u51b2\u7a81\u3002 \u9009\u62e9\u533a\u95f4 \uff1a\u6bcf\u6b21\u9009\u62e9\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u4e14\u4e0d\u4e0e\u524d\u4e00\u4e2a\u9009\u62e9\u7684\u533a\u95f4\u91cd\u53e0\u7684\u533a\u95f4\u3002\u5982\u679c\u5f53\u524d\u533a\u95f4\u7684\u5f00\u59cb\u65f6\u95f4\u5c0f\u4e8e\u524d\u4e00\u4e2a\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4\uff0c\u8bf4\u660e\u53d1\u751f\u4e86\u91cd\u53e0\uff0c\u6211\u4eec\u5c31\u9700\u8981\u79fb\u9664\u5f53\u524d\u533a\u95f4\u3002\u5426\u5219\uff0c\u6211\u4eec\u66f4\u65b0\u5f53\u524d\u533a\u95f4\u4e3a\u65b0\u7684\u7ed3\u675f\u65f6\u95f4\uff0c\u5e76\u7ee7\u7eed\u5904\u7406\u4e0b\u4e00\u4e2a\u533a\u95f4\u3002 \u4ee3\u7801\u5b9e\u73b0\uff1a class Solution { public: // \u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\uff0c\u6309\u7ed3\u675f\u65f6\u95f4\u6392\u5e8f bool compareIntervals(const vector<int>& a, const vector<int>& b) { return a[1] < b[1]; // \u6309\u7167\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4\u5347\u5e8f\u6392\u5217 } int eraseOverlapIntervals(vector<vector<int>>& intervals) { if (intervals.empty()) return 0; // \u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u6bd4\u8f83\u51fd\u6570\u8fdb\u884c\u6392\u5e8f sort(intervals.begin(), intervals.end(), compareIntervals); int count = 0; int end = intervals[0][1]; for (int i = 1; i < intervals.size(); i++) { if (intervals[i][0] < end) { count++; } else { end = intervals[i][1]; } } return count; } }; \u8bb2\u89e3 \uff1a 1. \u6392\u5e8f\u6b65\u9aa4 \uff1a - \u6309\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4\u5bf9\u6240\u6709\u533a\u95f4\u8fdb\u884c\u6392\u5e8f\u3002\u6392\u5e8f\u540e\u7684\u533a\u95f4\u6309\u7ed3\u675f\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u6392\u5217\uff0c\u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u6211\u4eec\u6bcf\u6b21\u9009\u62e9\u7684\u533a\u95f4\u7ed3\u675f\u5f97\u6700\u65e9\uff0c\u80fd\u591f\u5c3d\u91cf\u907f\u514d\u540e\u7eed\u533a\u95f4\u4e0e\u5176\u53d1\u751f\u91cd\u53e0\u3002 \u904d\u5386\u9009\u62e9\u533a\u95f4 \uff1a \u521d\u59cb\u5316\u4e00\u4e2a end \u53d8\u91cf\uff0c\u8868\u793a\u5df2\u9009\u5b9a\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4\u3002\u904d\u5386\u5269\u4f59\u533a\u95f4\u65f6\uff0c\u68c0\u67e5\u6bcf\u4e2a\u533a\u95f4\u7684\u5f00\u59cb\u65f6\u95f4\u662f\u5426\u4e0e\u5f53\u524d\u9009\u5b9a\u7684\u7ed3\u675f\u65f6\u95f4\u53d1\u751f\u91cd\u53e0\u3002\u5982\u679c\u5f53\u524d\u533a\u95f4\u7684\u5f00\u59cb\u65f6\u95f4\u5c0f\u4e8e end \uff0c\u8bf4\u660e\u53d1\u751f\u4e86\u91cd\u53e0\uff0c\u5fc5\u987b\u79fb\u9664\u5f53\u524d\u533a\u95f4\u3002\u5982\u679c\u6ca1\u6709\u91cd\u53e0\uff0c\u5219\u66f4\u65b0 end \u4e3a\u5f53\u524d\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a count \u8bb0\u5f55\u4e86\u88ab\u79fb\u9664\u7684\u533a\u95f4\u6570\uff0c\u904d\u5386\u7ed3\u675f\u540e\uff0c\u8fd4\u56de\u8fd9\u4e2a\u79fb\u9664\u7684\u533a\u95f4\u6570\u3002 3.2.2 LC 605: \u79cd\u82b1\u95ee\u9898 \u9898\u76ee\u63cf\u8ff0 \uff1a \u7ed9\u5b9a\u4e00\u4e2a\u8868\u793a\u82b1\u575b\u7684\u6574\u6570\u6570\u7ec4 flowerbed \uff0c\u5176\u4e2d flowerbed[i] = 0 \u8868\u793a\u8be5\u4f4d\u7f6e\u662f\u7a7a\u7684\uff0c flowerbed[i] = 1 \u8868\u793a\u8be5\u4f4d\u7f6e\u5df2\u7ecf\u79cd\u4e86\u82b1\u3002\u82b1\u575b\u4e2d\u82b1\u4e0d\u80fd\u79cd\u5728\u76f8\u90bb\u7684\u5730\u5757\u4e0a\uff0c\u95ee\u662f\u5426\u80fd\u591f\u5728\u4e0d\u8fdd\u53cd\u89c4\u5219\u7684\u60c5\u51b5\u4e0b\u518d\u79cd\u4e0b n \u6735\u82b1\u3002 \u4f8b\u5982\uff1a - \u8f93\u5165\uff1a flowerbed = [1,0,0,0,1], n = 1 - \u8f93\u51fa\uff1a true - \u89e3\u91ca\uff1a\u6211\u4eec\u53ef\u4ee5\u5728\u4e0b\u6807\u4e3a 2 \u7684\u5730\u65b9\u79cd\u4e00\u6735\u82b1\u3002 \u8f93\u5165\uff1a flowerbed = [1,0,0,0,1], n = 2 \u8f93\u51fa\uff1a false \u89e3\u91ca\uff1a\u4e0d\u80fd\u79cd\u4e0b\u4e24\u6735\u82b1\u800c\u4e0d\u8fdd\u53cd\u76f8\u90bb\u89c4\u5219\u3002 \u8d2a\u5fc3\u7b97\u6cd5\u6b65\u9aa4 \uff1a 1. \u904d\u5386\u82b1\u575b \uff1a\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u68c0\u67e5\u6bcf\u4e2a\u4f4d\u7f6e\u3002\u5982\u679c\u5f53\u524d\u4f4d\u7f6e\u662f\u7a7a\u7684 0 \uff0c\u5e76\u4e14\u5b83\u7684\u524d\u4e00\u4e2a\u4f4d\u7f6e\u548c\u540e\u4e00\u4e2a\u4f4d\u7f6e\u4e5f\u662f\u7a7a\u7684\uff08\u5982\u679c\u5b58\u5728\uff09\uff0c\u90a3\u4e48\u53ef\u4ee5\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u79cd\u82b1\u3002 \u8ba1\u6570\u5e76\u8df3\u8fc7\u76f8\u90bb\u4f4d\u7f6e \uff1a\u6bcf\u6b21\u6210\u529f\u79cd\u82b1\u540e\uff0c\u589e\u52a0\u8ba1\u6570\uff0c\u5e76\u8df3\u8fc7\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u76f8\u90bb\u4f4d\u7f6e\u4e0d\u80fd\u79cd\u82b1\u3002 \u4ee3\u7801\u5b9e\u73b0\uff1a class Solution { public: bool canPlaceFlowers(vector<int>& flowerbed, int n) { int count = 0; // \u8bb0\u5f55\u53ef\u4ee5\u79cd\u82b1\u7684\u6570\u91cf // \u904d\u5386\u6574\u4e2a\u82b1\u575b for (int i = 0; i < flowerbed.size(); i++) { // \u5224\u65ad\u5f53\u524d\u4f4d\u7f6e\u662f\u5426\u53ef\u4ee5\u79cd\u82b1\uff08\u68c0\u67e5\u524d\u540e\u4f4d\u7f6e\uff0c\u6ce8\u610f\u8fb9\u754c\u6761\u4ef6\uff09 if (flowerbed[i] == 0 && (i == 0 || flowerbed[i - 1] == 0) && (i == flowerbed.size() - 1 || flowerbed[i + 1] == 0)) { flowerbed[i] = 1; // \u79cd\u82b1 count++; // \u8ba1\u6570\u589e\u52a0 i++; // \u8df3\u8fc7\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u907f\u514d\u76f8\u90bb\u79cd\u82b1 } if (count >= n) return true; // \u5982\u679c\u79cd\u591f n \u6735\u82b1\uff0c\u8fd4\u56de true } return count >= n; // \u904d\u5386\u7ed3\u675f\uff0c\u68c0\u67e5\u662f\u5426\u79cd\u591f n \u6735\u82b1 } }; \u8bb2\u89e3\uff1a \u904d\u5386\u5224\u65ad\u80fd\u5426\u79cd\u82b1 \uff1a \u904d\u5386\u6574\u4e2a\u82b1\u575b\uff0c\u68c0\u67e5\u6bcf\u4e2a\u4f4d\u7f6e\u662f\u5426\u53ef\u4ee5\u79cd\u82b1\u3002\u5f53\u524d\u4f4d\u7f6e\u5fc5\u987b\u6ee1\u8db3\u4e09\u4e2a\u6761\u4ef6\u624d\u80fd\u79cd\u82b1\uff1a\u5f53\u524d\u4e3a 0 \uff0c\u524d\u4e00\u4e2a\u4f4d\u7f6e\uff08\u5982\u679c\u5b58\u5728\uff09\u4e3a 0 \uff0c\u540e\u4e00\u4e2a\u4f4d\u7f6e\uff08\u5982\u679c\u5b58\u5728\uff09\u4e5f\u4e3a 0 \u3002\u6ce8\u610f\u68c0\u67e5\u82b1\u575b\u7684\u8fb9\u754c\uff08\u5373\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\uff09\u65f6\uff0c\u4e0d\u9700\u8981\u68c0\u67e5\u4e0d\u5b58\u5728\u7684\u524d\u540e\u4f4d\u7f6e\u3002 \u79cd\u82b1\u540e\u8df3\u8fc7\u76f8\u90bb\u4f4d\u7f6e \uff1a \u6bcf\u6b21\u6210\u529f\u79cd\u82b1\u540e\uff0c\u8df3\u8fc7\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u6839\u636e\u89c4\u5219\uff0c\u76f8\u90bb\u7684\u4f4d\u7f6e\u4e0d\u80fd\u79cd\u82b1\u3002 \u63d0\u524d\u7ec8\u6b62 \uff1a \u5982\u679c\u5728\u904d\u5386\u8fc7\u7a0b\u4e2d\u5df2\u7ecf\u79cd\u591f\u4e86 n \u6735\u82b1\uff0c\u5219\u53ef\u4ee5\u63d0\u524d\u8fd4\u56de true \u3002\u5982\u679c\u904d\u5386\u7ed3\u675f\u540e\u8fd8\u6ca1\u6709\u79cd\u591f\uff0c\u5219\u8fd4\u56de false \u3002 3.2.3 LC 1029: \u4e24\u5730\u8c03\u5ea6 \u9898\u76ee\u63cf\u8ff0 \uff1a \u6709 2N \u4e2a\u4eba\uff0c\u6bcf\u4e2a\u4eba\u90fd\u9700\u8981\u98de\u5f80 A \u5e02\u6216 B \u5e02\u3002\u7ed9\u5b9a\u4e00\u4e2a costs \u6570\u7ec4\uff0c\u5176\u4e2d costs[i] = [aCost, bCost] \u8868\u793a\u7b2c i \u4e2a\u4eba\u98de\u5f80 A \u5e02\u7684\u8d39\u7528\u548c\u98de\u5f80 B \u5e02\u7684\u8d39\u7528\u3002\u73b0\u5728\u9700\u8981\u628a\u8fd9\u4e9b\u4eba\u5206\u914d\u5230\u4e24\u4e2a\u57ce\u5e02\uff0c\u4f7f\u5f97 N \u4e2a\u4eba\u98de\u5f80 A \u5e02\uff0c N \u4e2a\u4eba\u98de\u5f80 B \u5e02\uff0c\u8981\u6c42\u603b\u8d39\u7528\u6700\u5c0f\u3002 \u8d2a\u5fc3\u7b97\u6cd5\u6b65\u9aa4 \uff1a 1. \u8ba1\u7b97\u6210\u672c\u5dee\u5f02 \uff1a\u6211\u4eec\u8ba1\u7b97\u6bcf\u4e2a\u4eba\u53bb A \u5e02\u548c B \u5e02\u7684\u8d39\u7528\u5dee\uff0c\u5373 aCost - bCost \u3002\u6211\u4eec\u5e0c\u671b\u4f18\u5148\u8ba9\u90a3\u4e9b\u53bb B \u5e02\u66f4\u4fbf\u5b9c\u7684\u4eba\u53bb B \u5e02\uff0c\u800c\u8ba9\u53bb A \u5e02\u66f4\u4fbf\u5b9c\u7684\u4eba\u53bb A \u5e02\u3002 \u6392\u5e8f\u9009\u62e9 \uff1a\u6839\u636e\u53bb A \u5e02\u548c B \u5e02\u7684\u8d39\u7528\u5dee\u5f02\u6392\u5e8f\u3002\u5dee\u5f02\u8d8a\u5927\u7684\u4eba\uff0c\u610f\u5473\u7740\u53bb A \u5e02\u6216 B \u5e02\u5bf9\u6210\u672c\u5f71\u54cd\u8d8a\u5927\uff0c\u56e0\u6b64\u6211\u4eec\u4f18\u5148\u8003\u8651\u8fd9\u4e9b\u4eba\u3002 \u5206\u914d\u57ce\u5e02 \uff1a\u524d N \u4e2a\u4eba\u5b89\u6392\u5230 A \u5e02\uff0c\u540e N \u4e2a\u4eba\u5b89\u6392\u5230 B \u5e02\uff0c\u6700\u7ec8\u5f97\u5230\u6700\u5c0f\u7684\u603b\u8d39\u7528\u3002 \u4ee3\u7801\u5b9e\u73b0\uff1a class Solution { public: // \u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\uff0c\u6309\u53bb A \u5e02\u548c B \u5e02\u7684\u8d39\u7528\u5dee\u8fdb\u884c\u6392\u5e8f bool compareCosts(const vector<int>& a, const vector<int>& b) { return (a[0] - a[1]) < (b[0] - b[1]); // \u6309 aCost - bCost \u8fdb\u884c\u5347\u5e8f\u6392\u5e8f } int twoCitySchedCost(vector<vector<int>>& costs) { // \u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u6bd4\u8f83\u51fd\u6570\u8fdb\u884c\u6392\u5e8f sort(costs.begin(), costs.end(), compareCosts); int totalCost = 0; int n = costs.size() / 2; // \u524d N \u4e2a\u4eba\u53bb A \u5e02\uff0c\u540e N \u4e2a\u4eba\u53bb B \u5e02 for (int i = 0; i < n; i++) { totalCost += costs[i][0]; // \u53bb A \u5e02\u7684\u8d39\u7528 } for (int i = n; i < 2 * n; i++) { totalCost += costs[i][1]; // \u53bb B \u5e02\u7684\u8d39\u7528 } return totalCost; } }; \u8bb2\u89e3\uff1a \u8ba1\u7b97\u6210\u672c\u5dee\u5f02 \uff1a \u6bcf\u4e2a\u4eba\u90fd\u6709\u53bb A \u5e02\u548c B \u5e02\u7684\u4e24\u79cd\u9009\u62e9\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 aCost - bCost \u6765\u8861\u91cf\u6bcf\u4e2a\u4eba\u53bb A \u5e02\u7684\u989d\u5916\u6210\u672c\u3002\u5982\u679c aCost < bCost \uff0c\u8bf4\u660e\u8ba9\u8fd9\u4e2a\u4eba\u53bb A \u5e02\u66f4\u5212\u7b97\uff0c\u53cd\u4e4b\u5219\u53bb B \u5e02\u66f4\u5212\u7b97\u3002 \u6392\u5e8f\u6b65\u9aa4 \uff1a \u6211\u4eec\u6839\u636e aCost - bCost \u5bf9 costs \u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\uff0c\u4f18\u5148\u8ba9\u90a3\u4e9b\u53bb A \u5e02\u66f4\u4fbf\u5b9c\u7684\u4eba\u53bb A \u5e02\uff0c\u53bb B \u5e02\u66f4\u4fbf\u5b9c\u7684\u4eba\u53bb B \u5e02\u3002 \u5206\u914d\u57ce\u5e02 \uff1a \u6392\u5e8f\u540e\uff0c\u524d\u4e00\u534a\u7684\u4eba\u53bb A \u5e02\uff0c\u540e\u4e00\u534a\u7684\u4eba\u53bb B \u5e02\u3002\u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u5728\u603b\u8d39\u7528\u6700\u5c0f\u7684\u60c5\u51b5\u4e0b\uff0c\u5e73\u8861\u53bb\u4e24\u5ea7\u57ce\u5e02\u7684\u4eba\u6570\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a \u6700\u7ec8\u8fd4\u56de\u603b\u7684\u8d39\u7528\uff0c\u5373\u524d N \u4e2a\u4eba\u7684 A \u5e02\u8d39\u7528\u548c\u540e N \u4e2a\u4eba\u7684 B \u5e02\u8d39\u7528\u4e4b\u548c\u3002 \u8bfe\u540e\u7ec3\u4e60 \u6392\u5e8f\u95ee\u9898 \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC1288 \u5220\u9664\u88ab\u8986\u76d6\u7684\u533a\u95f4 \u7ed9\u5b9a\u4e00\u7ec4\u533a\u95f4\uff0c\u627e\u51fa\u5176\u4e2d\u672a\u88ab\u8986\u76d6\u7684\u533a\u95f4\uff0c\u79fb\u9664\u88ab\u8986\u76d6\u7684\u533a\u95f4\u3002 LC1024 \u89c6\u9891\u62fc\u63a5 \u7ed9\u5b9a\u4e00\u7ec4\u533a\u95f4\uff0c\u5224\u65ad\u662f\u5426\u80fd\u591f\u901a\u8fc7\u62fc\u63a5\u533a\u95f4\u8986\u76d6\u6574\u4e2a\u89c6\u9891\u957f\u5ea6\u3002 LC763 \u5212\u5206\u5b57\u6bcd\u533a\u95f4 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5c06\u5176\u5212\u5206\u4e3a\u5c3d\u53ef\u80fd\u591a\u7684\u4e0d\u91cd\u53e0\u7684\u533a\u95f4\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u5b57\u6bcd\u6700\u591a\u51fa\u73b0\u5728\u4e00\u4e2a\u533a\u95f4\u4e2d\u3002 LC57 \u63d2\u5165\u533a\u95f4 \u7ed9\u5b9a\u4e00\u7ec4\u975e\u91cd\u53e0\u7684\u533a\u95f4\u548c\u4e00\u4e2a\u65b0\u7684\u533a\u95f4\uff0c\u5c06\u65b0\u533a\u95f4\u63d2\u5165\u5e76\u5408\u5e76\u6240\u6709\u53ef\u80fd\u7684\u91cd\u53e0\u533a\u95f4\u3002 LC179 \u6700\u5927\u6570 \u7ed9\u5b9a\u4e00\u7ec4\u975e\u8d1f\u6574\u6570\uff0c\u91cd\u65b0\u6392\u5217\u5b83\u4eec\u7684\u987a\u5e8f\u4f7f\u4e4b\u7ec4\u6210\u4e00\u4e2a\u6700\u5927\u7684\u6574\u6570\u3002 \u8d2a\u5fc3\u7b97\u6cd5\u95ee\u9898 \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC121 \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a \u7ed9\u5b9a\u80a1\u7968\u4ef7\u683c\uff0c\u627e\u5230\u5728\u6700\u4f73\u65f6\u673a\u4e70\u5165\u548c\u5356\u51fa\u4ee5\u83b7\u5f97\u6700\u5927\u5229\u6da6\u3002 LC122 \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a II \u5141\u8bb8\u591a\u6b21\u4e70\u5356\uff0c\u627e\u5230\u5728\u6700\u4f73\u65f6\u673a\u4e70\u5165\u548c\u5356\u51fa\u4ee5\u83b7\u5f97\u6700\u5927\u5229\u6da6\u3002 LC55 \u8df3\u8dc3\u6e38\u620f \u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u5224\u65ad\u662f\u5426\u80fd\u8df3\u5230\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u3002 LC45 \u8df3\u8dc3\u6e38\u620f II \u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u627e\u5230\u8df3\u5230\u6570\u7ec4\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u7684\u6700\u5c11\u8df3\u8dc3\u6b21\u6570\u3002 LC409 \u6700\u957f\u56de\u6587\u4e32 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u627e\u5230\u5176\u4e2d\u80fd\u7ec4\u6210\u7684\u6700\u957f\u56de\u6587\u4e32\u7684\u957f\u5ea6\u3002","title":"Lesson 13. \u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u6392\u5e8f\u548c\u8d2a\u5fc3\u7b97\u6cd5"},{"location":"lesson13/Lesson13%20C%2B%2B/#lesson-13","text":"","title":"Lesson 13. \u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u6392\u5e8f\u548c\u8d2a\u5fc3\u7b97\u6cd5"},{"location":"lesson13/Lesson13%20C%2B%2B/#_1","text":"\u65f6\u95f4\u590d\u6742\u5ea6\u7b80\u4ecb \u6392\u5e8f\u7b97\u6cd5\u4e0e\u5e94\u7528 2.1 \u6392\u5e8f\u7b97\u6cd5\u4f8b\u9898\u8bb2\u89e3 2.1.1 LC215\uff1a\u627e\u51fa\u6570\u7ec4\u4e2d\u7684\u7b2c K \u5927\u5143\u7d20 2.2 \u6392\u5e8f\u7b97\u6cd5\u4e3e\u4e00\u53cd\u4e09 2.2.1 LC56\uff1a\u5408\u5e76\u533a\u95f4 2.2.2 LC252\uff1a\u4f1a\u8bae\u5ba4 2.2.3 LC347\uff1a\u524d K \u4e2a\u9ad8\u9891\u5143\u7d20 \u8d2a\u5fc3\u7b97\u6cd5 3.1 \u8d2a\u5fc3\u7b97\u6cd5\u4f8b\u9898\u8bb2\u89e3 3.1.1 LC455: \u5206\u53d1\u997c\u5e72 3.2 \u8d2a\u5fc3\u7b97\u6cd5\u4e3e\u4e00\u53cd\u4e09 3.2.1 LC435: \u65e0\u91cd\u53e0\u533a\u95f4 3.2.2 LC605: \u79cd\u82b1\u95ee\u9898 3.2.3 LC1029: \u4e24\u5730\u8c03\u5ea6 \u8bfe\u540e\u7ec3\u4e60","title":"\u76ee\u5f55"},{"location":"lesson13/Lesson13%20C%2B%2B/#1","text":"\u65f6\u95f4\u590d\u6742\u5ea6 \u662f\u8861\u91cf\u7b97\u6cd5\u6267\u884c\u6548\u7387\u7684\u91cd\u8981\u6307\u6807\uff0c\u5b83\u63cf\u8ff0\u4e86\u968f\u7740\u8f93\u5165\u6570\u636e\u91cf\u7684\u589e\u5927\uff0c\u7b97\u6cd5\u6267\u884c\u65f6\u95f4\u7684\u589e\u957f\u901f\u5ea6\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u901a\u5e38\u8868\u793a\u4e3a O(\u67d0\u4e2a\u51fd\u6570) \uff0c\u5176\u4e2d \"O\" \u8868\u793a\u589e\u957f\u7684\u4e0a\u9650\u3002\u4ee5\u4e0b\u4ecb\u7ecd\u56db\u79cd\u5e38\u89c1\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff1a O(1) \u3001 O(n) \u3001 O(n^2) \u548c O(n log n) \u3002","title":"1. \u65f6\u95f4\u590d\u6742\u5ea6\u7b80\u4ecb"},{"location":"lesson13/Lesson13%20C%2B%2B/#_2","text":"O(1) \uff1a\u5e38\u6570\u65f6\u95f4\u590d\u6742\u5ea6 \u64cd\u4f5c\u7684\u6267\u884c\u65f6\u95f4\u4e0d\u968f\u8f93\u5165\u6570\u636e\u7684\u5927\u5c0f\u800c\u53d8\u5316\u3002 \u4f8b\u5b50 \uff1a\u4ece\u6570\u7ec4\u4e2d\u83b7\u53d6\u7b2c k \u4e2a\u5143\u7d20\u3002 ```cpp #include using namespace std; int main() { int arr[] = {1, 2, 3, 4, 5}; int k = 2; // \u83b7\u53d6\u7b2c\u4e09\u4e2a\u5143\u7d20\uff08\u7d22\u5f15\u4ece0\u5f00\u59cb\uff09 int element = arr[k]; // O(1) cout << \"Element at index \" << k << \": \" << element << endl; return 0; } ``` \u65f6\u95f4\u590d\u6742\u5ea6 \uff1a\u65e0\u8bba\u6570\u7ec4\u5927\u5c0f\u662f\u591a\u5c11\uff0c\u83b7\u53d6\u7b2c k \u4e2a\u5143\u7d20\u6240\u9700\u65f6\u95f4\u662f\u56fa\u5b9a\u7684\uff0c\u5c5e\u4e8e O(1) \u3002 O(n) \uff1a\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6 \u64cd\u4f5c\u7684\u6267\u884c\u65f6\u95f4\u968f\u7740\u8f93\u5165\u6570\u636e\u91cf\u7ebf\u6027\u589e\u957f\u3002 \u4f8b\u5b50 \uff1a\u904d\u5386\u4e00\u4e2a\u6570\u7ec4\u3002 ```cpp #include using namespace std; int main() { int arr[] = {1, 2, 3, 4, 5}; int n = sizeof(arr) / sizeof(arr[0]); for (int i = 0; i < n; i++) { // O(n) cout << \"Element at index \" << i << \": \" << arr[i] << endl; } return 0; } ``` \u65f6\u95f4\u590d\u6742\u5ea6 \uff1a\u904d\u5386\u6574\u4e2a\u6570\u7ec4\u9700\u8981\u7684\u65f6\u95f4\u4e0e\u6570\u7ec4\u7684\u957f\u5ea6 n \u6210\u6b63\u6bd4\uff0c\u5c5e\u4e8e O(n) \u3002 O(n^2) \uff1a\u5e73\u65b9\u65f6\u95f4\u590d\u6742\u5ea6 \u64cd\u4f5c\u7684\u6267\u884c\u65f6\u95f4\u4e0e\u8f93\u5165\u6570\u636e\u91cf\u7684\u5e73\u65b9\u6210\u6b63\u6bd4\uff0c\u5e38\u89c1\u4e8e\u53cc\u91cd\u5faa\u73af\u3002 \u4f8b\u5b50 \uff1a\u6253\u5370\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u3002 ```cpp #include using namespace std; int main() { int arr[3][3] = { {1, 2, 3}, {4, 5, 6}, {7, 8, 9} }; for (int i = 0; i < 3; i++) { // O(n) for (int j = 0; j < 3; j++) { // O(n) cout << \"Element at [\" << i << \"][\" << j << \"]: \" << arr[i][j] << endl; } } return 0; } ``` \u65f6\u95f4\u590d\u6742\u5ea6 \uff1a\u53cc\u91cd\u5faa\u73af\u5d4c\u5957\u904d\u5386\u6bcf\u4e2a\u5143\u7d20\uff0c\u603b\u7684\u6267\u884c\u65f6\u95f4\u662f n \u7684\u5e73\u65b9\uff0c\u5c5e\u4e8e O(n^2) \u3002 O(n log n) \uff1a\u5e38\u89c1\u4e8e\u6392\u5e8f\u7b97\u6cd5\uff08\u6b64\u7ae0\u8282\u540e\u534a\u90e8\u5206\u4f1a\u8be6\u7ec6\u8bb2\u89e3\uff09 \u4f8b\u5b50 \uff1a\u5f52\u5e76\u6392\u5e8f\u3001\u5feb\u901f\u6392\u5e8f\u3002 ```cpp #include #include using namespace std; void merge(vector & arr, int l, int m, int r) { int n1 = m - l + 1; int n2 = r - m; vector<int> L(n1), R(n2); for (int i = 0; i < n1; i++) L[i] = arr[l + i]; for (int i = 0; i < n2; i++) R[i] = arr[m + 1 + i]; int i = 0, j = 0, k = l; while (i < n1 && j < n2) { if (L[i] <= R[j]) { arr[k] = L[i]; i++; } else { arr[k] = R[j]; j++; } k++; } while (i < n1) { arr[k] = L[i]; i++; k++; } while (j < n2) { arr[k] = R[j]; j++; k++; } } void mergeSort(vector & arr, int l, int r) { if (l >= r) return; int m = l + (r - l) / 2; mergeSort(arr, l, m); mergeSort(arr, m + 1, r); merge(arr, l, m, r); } int main() { vector arr = {12, 11, 13, 5, 6, 7}; int arr_size = arr.size(); mergeSort(arr, 0, arr_size - 1); cout << \"Sorted array is: \"; for (int i = 0; i < arr_size; i++) cout << arr[i] << \" \"; return 0; } ``` \u65f6\u95f4\u590d\u6742\u5ea6 \uff1a\u5f52\u5e76\u6392\u5e8f\u901a\u8fc7\u9012\u5f52\u5c06\u6570\u7ec4\u5206\u6210\u66f4\u5c0f\u7684\u90e8\u5206\u8fdb\u884c\u6392\u5e8f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n log n) \u3002 \u4e3a\u4ec0\u4e48\u662f O(n log n) ? \u5f52\u5e76\u6392\u5e8f\u662f\u4e00\u79cd \u5206\u6cbb\u7b97\u6cd5 \uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5f52\u5e76\u6392\u5e8f\u7684\u6b65\u9aa4\u5206\u4e3a\u4e24\u90e8\u5206\uff1a \u62c6\u5206 \u548c \u5408\u5e76 \u3002 **1. \u62c6\u5206\u8fc7\u7a0b\uff1a\u9012\u5f52\u5206\u89e3\u6570\u7ec4** \u5f52\u5e76\u6392\u5e8f\u9996\u5148\u5c06\u6570\u7ec4\u9012\u5f52\u5730\u5bf9\u534a\u62c6\u5206\uff0c\u76f4\u5230\u6bcf\u4e2a\u5b50\u6570\u7ec4\u53ea\u5269\u4e0b\u4e00\u4e2a\u5143\u7d20\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u7c7b\u4f3c\u4e8e\u6784\u5efa\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u6bcf\u6b21\u5c06\u95ee\u9898\u7684\u89c4\u6a21\u51cf\u534a\u3002 - \u5bf9\u4e00\u4e2a\u957f\u5ea6\u4e3a `n` \u7684\u6570\u7ec4\uff1a - \u7b2c\u4e00\u5c42\uff1a1 \u4e2a\u957f\u5ea6\u4e3a `n` \u7684\u6570\u7ec4 - \u7b2c\u4e8c\u5c42\uff1a2 \u4e2a\u957f\u5ea6\u4e3a `n/2` \u7684\u6570\u7ec4 - \u7b2c\u4e09\u5c42\uff1a4 \u4e2a\u957f\u5ea6\u4e3a `n/4` \u7684\u6570\u7ec4 - ... - \u7b2c `log n` \u5c42\uff1a\u6bcf\u4e2a\u6570\u7ec4\u7684\u957f\u5ea6\u662f 1\uff0c\u5171\u6709 `n` \u4e2a\u6570\u7ec4 \u56e0\u4e3a\u6bcf\u6b21\u90fd\u5bf9\u6570\u7ec4\u8fdb\u884c\u4e8c\u5206\uff0c\u6240\u4ee5\u6574\u4e2a\u9012\u5f52\u6811\u7684\u6df1\u5ea6\u662f `log n`\u3002 **2. \u5408\u5e76\u8fc7\u7a0b\uff1a\u7ebf\u6027\u5408\u5e76** \u5f53\u5b50\u6570\u7ec4\u62c6\u5206\u5230\u6700\u5c0f\uff08\u6bcf\u4e2a\u6570\u7ec4\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff09\u65f6\uff0c\u5f52\u5e76\u6392\u5e8f\u5f00\u59cb\u5408\u5e76\u8fd9\u4e9b\u5b50\u6570\u7ec4\u3002\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\u7684\u65f6\u95f4\u4e0e\u5b83\u4eec\u7684\u957f\u5ea6\u6210\u6b63\u6bd4\uff0c\u4e5f\u5c31\u662f\u8bf4\u5408\u5e76\u4e24\u4e2a\u6570\u7ec4\u7684\u65f6\u95f4\u662f `O(n)`\u3002 \u5728\u9012\u5f52\u6811\u7684\u6bcf\u4e00\u5c42\uff0c\u6240\u6709\u6570\u7ec4\u7684\u603b\u957f\u5ea6\u59cb\u7ec8\u662f `n`\uff0c\u56e0\u6b64\uff1a - \u7b2c\u4e00\u5c42\uff1a\u5408\u5e76\u4e00\u4e2a\u957f\u5ea6\u4e3a `n` \u7684\u6570\u7ec4\uff0c\u65f6\u95f4\u662f `O(n)` - \u7b2c\u4e8c\u5c42\uff1a\u5408\u5e76\u4e24\u4e2a\u957f\u5ea6\u4e3a `n/2` \u7684\u6570\u7ec4\uff0c\u603b\u65f6\u95f4\u4ecd\u7136\u662f `O(n)` - \u7b2c\u4e09\u5c42\uff1a\u5408\u5e76\u56db\u4e2a\u957f\u5ea6\u4e3a `n/4` \u7684\u6570\u7ec4\uff0c\u603b\u65f6\u95f4\u4e5f\u662f `O(n)` \u65e0\u8bba\u6709\u591a\u5c11\u4e2a\u5c0f\u6570\u7ec4\uff0c\u5408\u5e76\u6bcf\u4e00\u5c42\u7684\u603b\u65f6\u95f4\u90fd\u662f `O(n)`\u3002 **3. \u9012\u5f52\u6811\u7684\u5c42\u6570** \u62c6\u5206\u7684\u8fc7\u7a0b\u6700\u591a\u8fdb\u884c `log n` \u6b21\uff08\u6bcf\u6b21\u5c06\u6570\u7ec4\u5bf9\u534a\u5206\uff09\u3002\u56e0\u6b64\uff0c\u9012\u5f52\u6811\u7684\u6df1\u5ea6\u662f `log n`\uff0c\u5373\u6700\u591a\u6709 `log n` \u5c42\u3002 **\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u8ba1\u7b97** \u56e0\u4e3a\u6bcf\u4e00\u5c42\u7684\u5408\u5e76\u65f6\u95f4\u90fd\u662f `O(n)`\uff0c\u800c\u6574\u4e2a\u9012\u5f52\u6811\u6709 `log n` \u5c42\uff0c\u6240\u4ee5\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f `O(n) * O(log n) = O(n log n)` **\u4e3a\u4ec0\u4e48\u4e0d\u4f1a\u8d85\u8fc7 `O(n log n)`** \u6709\u4eba\u53ef\u80fd\u4f1a\u7591\u60d1\uff1a\u65e2\u7136\u6211\u4eec\u5728\u9012\u5f52\u4e2d\u53cd\u590d\u5206\u88c2\u6570\u7ec4\uff0c\u4e3a\u4ec0\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u4f1a\u8d85\u8fc7 `O(n log n)` \u5462\uff1f - **\u6bcf\u5c42\u7684\u5408\u5e76\u64cd\u4f5c\u662f\u7ebf\u6027\u7684**\uff1a\u867d\u7136\u9012\u5f52\u5206\u88c2\u4f1a\u4ea7\u751f\u591a\u4e2a\u5c0f\u6570\u7ec4\uff0c\u4f46\u6bcf\u4e00\u5c42\u4e2d\u6240\u6709\u6570\u7ec4\u7684\u603b\u957f\u5ea6\u4ecd\u7136\u662f `n`\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u4e00\u5c42\u5408\u5e76\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u59cb\u7ec8\u662f `O(n)`\uff0c\u4e0d\u4f1a\u7d2f\u79ef\u66f4\u591a\u590d\u6742\u5ea6\u3002 - **\u9012\u5f52\u7684\u6df1\u5ea6\u662f `log n`**\uff1a\u7531\u4e8e\u6bcf\u6b21\u9012\u5f52\u90fd\u5c06\u6570\u7ec4\u5bf9\u534a\u5206\u88c2\uff0c\u6574\u4e2a\u9012\u5f52\u8fc7\u7a0b\u53ea\u4f1a\u8fdb\u884c `log n` \u6b21\u5206\u88c2\u3002\u56e0\u6b64\uff0c\u9012\u5f52\u6811\u7684\u6df1\u5ea6\u662f `log n`\u3002 \u6700\u7ec8\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u6bcf\u5c42\u7684\u65f6\u95f4 `O(n)` \u4e58\u4ee5\u9012\u5f52\u6811\u7684\u5c42\u6570 `log n`\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u662f `O(n log n)`\u3002","title":"\u5e38\u89c1\u7684\u65f6\u95f4\u590d\u6742\u5ea6"},{"location":"lesson13/Lesson13%20C%2B%2B/#_3","text":"O(1) \uff1a\u6267\u884c\u65f6\u95f4\u4e0d\u53d7\u8f93\u5165\u89c4\u6a21\u5f71\u54cd\u3002 O(n) \uff1a\u6267\u884c\u65f6\u95f4\u968f\u8f93\u5165\u89c4\u6a21\u7ebf\u6027\u589e\u957f\u3002 O(n^2) \uff1a\u6267\u884c\u65f6\u95f4\u4e0e\u8f93\u5165\u89c4\u6a21\u7684\u5e73\u65b9\u6210\u6b63\u6bd4\uff0c\u901a\u5e38\u53d1\u751f\u5728\u5d4c\u5957\u5faa\u73af\u4e2d\u3002 O(n log n) \uff1a\u5e38\u89c1\u4e8e\u9ad8\u6548\u7684\u6392\u5e8f\u7b97\u6cd5\u3002","title":"\u65f6\u95f4\u590d\u6742\u5ea6\u603b\u7ed3"},{"location":"lesson13/Lesson13%20C%2B%2B/#_4","text":"\u8003\u8651\u4e00\u4e2a\u7b80\u5355\u7684\u7b97\u6cd5\uff1a\u8ba1\u7b97\u6570\u7ec4\u4e2d\u6240\u6709\u5143\u7d20\u7684\u548c\u3002 #include <iostream> using namespace std; int sumArray(int arr[], int n) { int total = 0; for (int i = 0; i < n; i++) { total += arr[i]; // \u57fa\u672c\u64cd\u4f5c } return total; } int main() { int arr[] = {1, 2, 3, 4, 5}; int n = sizeof(arr) / sizeof(arr[0]); cout << \"Sum of array: \" << sumArray(arr, n) << endl; return 0; }","title":"\u5177\u4f53\u5b9e\u4f8b"},{"location":"lesson13/Lesson13%20C%2B%2B/#_5","text":"\u786e\u5b9a\u57fa\u672c\u64cd\u4f5c \uff1a \u57fa\u672c\u64cd\u4f5c\u662f total += arr[i] \u3002 \u8ba1\u7b97\u57fa\u672c\u64cd\u4f5c\u7684\u6b21\u6570 \uff1a \u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff0cfor \u5faa\u73af\u4f1a\u6267\u884c n \u6b21\uff08\u5176\u4e2d n \u662f\u6570\u7ec4 arr \u7684\u957f\u5ea6\uff09\u3002 \u56e0\u6b64\uff0c\u57fa\u672c\u64cd\u4f5c\u7684\u6b21\u6570\u4e3a n \u3002 \u4f7f\u7528\u5927 O \u8868\u793a\u6cd5 \uff1a \u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(n)\u3002 \u8003\u8651\u6700\u574f\u60c5\u51b5 \uff1a \u65e0\u8bba\u8f93\u5165\u7684\u5177\u4f53\u5185\u5bb9\u5982\u4f55\uff0c\u53ea\u8981\u6570\u7ec4\u957f\u5ea6\u4e3a n \uff0c\u57fa\u672c\u64cd\u4f5c\u90fd\u4f1a\u6267\u884c n \u6b21\uff0c\u56e0\u6b64\u6700\u574f\u60c5\u51b5\u4e3a O(n)\u3002 \u7279\u6b8a\u60c5\u51b5 \uff1a \u5982\u679c\u6570\u7ec4\u4e3a\u7a7a\uff0c\u5faa\u73af\u4e0d\u4f1a\u6267\u884c\uff0c\u4f46\u6211\u4eec\u4ecd\u7136\u8ba4\u4e3a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n)\uff0c\u56e0\u4e3a\u6211\u4eec\u5173\u6ce8\u7684\u662f\u8f93\u5165\u7684\u89c4\u6a21\u3002","title":"\u6b65\u9aa4\u5206\u6790"},{"location":"lesson13/Lesson13%20C%2B%2B/#_6","text":"","title":"\u968f\u5802\u7ec3\u4e60"},{"location":"lesson13/Lesson13%20C%2B%2B/#_7","text":"#include <iostream> using namespace std; int findMax(int arr[], int n) { int maxNum = arr[0]; for (int i = 0; i < n; i++) { // \u57fa\u672c\u64cd\u4f5c if (arr[i] > maxNum) { maxNum = arr[i]; } } return maxNum; } int main() { int arr[] = {1, 5, 3, 9, 2}; int n = sizeof(arr) / sizeof(arr[0]); cout << \"Max number: \" << findMax(arr, n) << endl; return 0; }","title":"\u5224\u65ad\u4ee5\u4e0b\u4ee3\u7801\u7684\u65f6\u95f4\u590d\u6742\u5ea6"},{"location":"lesson13/Lesson13%20C%2B%2B/#_8","text":"\u7b2c\u4e00\u6bb5\u4ee3\u7801\uff08findMax\uff09 \uff1a - \u57fa\u672c\u64cd\u4f5c\u662f if (arr[i] > maxNum) \u3002 - \u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u5faa\u73af\u6267\u884c n \u6b21\u3002 - \u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(n)\u3002","title":"\u89e3\u7b54"},{"location":"lesson13/Lesson13%20C%2B%2B/#2","text":"\u6392\u5e8f\u662f\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\u4e00\u4e2a\u975e\u5e38\u57fa\u7840\u4f46\u91cd\u8981\u7684\u64cd\u4f5c\u3002\u5b83\u4e0d\u4ec5\u53ef\u4ee5\u8ba9\u6570\u636e\u6309\u7279\u5b9a\u987a\u5e8f\u6392\u5217\uff0c\u8fd8\u80fd\u5e2e\u52a9\u6211\u4eec\u89e3\u51b3\u8bb8\u591a\u4e0e\u6570\u636e\u5904\u7406\u76f8\u5173\u7684\u95ee\u9898\u3002\u901a\u8fc7\u6392\u5e8f\uff0c\u6211\u4eec\u53ef\u4ee5\u66f4\u5feb\u5730\u89e3\u51b3\u627e\u7b2c K \u5927\u5143\u7d20\u3001\u5408\u5e76\u91cd\u53e0\u533a\u95f4\u7b49\u95ee\u9898\u3002","title":"2. \u6392\u5e8f\u7b97\u6cd5\u4e0e\u5e94\u7528"},{"location":"lesson13/Lesson13%20C%2B%2B/#_9","text":"\u6392\u5e8f\u7684\u5e94\u7528\u573a\u666f\u975e\u5e38\u5e7f\u6cdb\uff0c\u5c24\u5176\u662f\u5728\u6570\u636e\u5904\u7406\u4e2d\uff0c\u4f60\u4f1a\u7ecf\u5e38\u9047\u5230\u9700\u8981\u5bf9\u6570\u636e\u8fdb\u884c\u6392\u5e8f\u7684\u60c5\u51b5\uff1a \u627e\u51fa\u7b2c K \u5927\u5143\u7d20 \uff1a\u901a\u8fc7\u6392\u5e8f\u6570\u636e\uff0c\u53ef\u4ee5\u5f88\u5feb\u627e\u51fa\u7b2c K \u5927\uff08\u6216\u7b2c K \u5c0f\uff09\u7684\u5143\u7d20\u3002 \u5408\u5e76\u533a\u95f4 \uff1a\u5f53\u5904\u7406\u591a\u4e2a\u533a\u95f4\u6216\u6bb5\u65f6\uff0c\u5e38\u5e38\u9700\u8981\u5148\u5c06\u8fd9\u4e9b\u533a\u95f4\u6309\u67d0\u4e2a\u7ef4\u5ea6\u6392\u5e8f\uff0c\u7136\u540e\u5408\u5e76\u5b83\u4eec\u3002 \u4f8b\u5b50 \uff1a\u5408\u5e76\u65e5\u7a0b\u3001\u4efb\u52a1\u65f6\u95f4\u6bb5\u7b49\u6570\u636e\uff0c\u89e3\u51b3\u533a\u95f4\u91cd\u53e0\u95ee\u9898\u3002 \u4f18\u5316\u64cd\u4f5c \uff1a\u4e0d\u540c\u7684\u6392\u5e8f\u7b97\u6cd5\u5728\u9762\u5bf9\u4e0d\u540c\u89c4\u6a21\u7684\u6570\u636e\u65f6\u8868\u73b0\u5404\u5f02\uff0c\u56e0\u6b64\u9009\u62e9\u5408\u9002\u7684\u6392\u5e8f\u7b97\u6cd5\u5bf9\u4e8e\u63d0\u9ad8\u7a0b\u5e8f\u6027\u80fd\u975e\u5e38\u91cd\u8981\u3002","title":"\u9002\u7528\u573a\u666f"},{"location":"lesson13/Lesson13%20C%2B%2B/#_10","text":"","title":"\u5e38\u7528\u6280\u5de7"},{"location":"lesson13/Lesson13%20C%2B%2B/#1_1","text":"\u5927\u591a\u6570\u7f16\u7a0b\u8bed\u8a00\u90fd\u63d0\u4f9b\u4e86\u5185\u7f6e\u7684\u6392\u5e8f\u51fd\u6570\uff0c\u5b83\u4eec\u7ecf\u8fc7\u4f18\u5316\uff0c\u80fd\u4ee5\u9ad8\u6548\u7684\u65b9\u5f0f\u8fdb\u884c\u6392\u5e8f\u3002C++ \u63d0\u4f9b\u4e86 std::sort() \u51fd\u6570\u3002 \u793a\u4f8b\u4ee3\u7801 \uff1a #include <iostream> #include <vector> #include <algorithm> // \u5305\u542b std::sort \u51fd\u6570 using namespace std; int main() { vector<int> nums = {3, 1, 4, 1, 5, 9}; // \u5b9a\u4e49\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 // \u4f7f\u7528\u5185\u7f6e\u7684\u6392\u5e8f\u51fd\u6570\u5bf9\u6570\u7ec4\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f sort(nums.begin(), nums.end()); // \u8f93\u51fa\u6392\u5e8f\u540e\u7684\u6570\u7ec4 cout << \"Sorted array: \"; for (int num : nums) { cout << num << \" \"; } cout << endl; return 0; } \u8bf4\u660e \uff1a - \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528\u4e86 std::sort() \u51fd\u6570\uff0c\u5b83\u4f1a\u5bf9 nums \u6570\u7ec4\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\u3002 - \u4f7f\u7528\u5185\u7f6e\u51fd\u6570 sort() \u662f\u4e00\u79cd\u975e\u5e38\u5feb\u6377\u7684\u65b9\u6cd5\uff0c\u5bf9\u4e8e\u5927\u591a\u6570\u7b80\u5355\u6392\u5e8f\u4efb\u52a1\uff0c\u5b83\u7684\u6548\u7387\u975e\u5e38\u9ad8\u3002","title":"1. \u5185\u7f6e\u6392\u5e8f\u51fd\u6570"},{"location":"lesson13/Lesson13%20C%2B%2B/#2_1","text":"\u6709\u65f6\u6211\u4eec\u9700\u8981\u6309\u7167\u81ea\u5b9a\u4e49\u7684\u89c4\u5219\u5bf9\u6570\u636e\u8fdb\u884c\u6392\u5e8f\u3002\u6bd4\u5982\uff0c\u6211\u4eec\u53ef\u80fd\u5e0c\u671b\u6309\u6570\u7ec4\u7684\u67d0\u4e2a\u7279\u5b9a\u5143\u7d20\u8fdb\u884c\u6392\u5e8f\uff0c\u800c\u4e0d\u662f\u6309\u9ed8\u8ba4\u7684\u987a\u5e8f\u3002\u5728 C++ \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 std::sort() \u51fd\u6570\u7684\u7b2c\u4e09\u4e2a\u53c2\u6570\u6765\u81ea\u5b9a\u4e49\u6392\u5e8f\u89c4\u5219\u3002 \u793a\u4f8b\u4ee3\u7801 \uff1a #include <iostream> #include <vector> #include <algorithm> using namespace std; // \u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\uff0c\u6309\u6570\u7ec4\u4e2d\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5347\u5e8f\u6392\u5e8f bool compareBySecondElement(const vector<int>& a, const vector<int>& b) { return a[1] < b[1]; } int main() { vector<vector<int>> data = {{1, 3}, {2, 2}, {3, 1}}; // \u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u6392\u5e8f\u89c4\u5219\u6309\u7b2c\u4e8c\u4e2a\u5143\u7d20\u6392\u5e8f sort(data.begin(), data.end(), compareBySecondElement); // \u8f93\u51fa\u6392\u5e8f\u540e\u7684\u4e8c\u7ef4\u6570\u7ec4 for (const auto& row : data) { cout << row[0] << \", \" << row[1] << endl; } return 0; } \u8bf4\u660e \uff1a - \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570 compareBySecondElement \u6765\u6309\u7167\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u6bcf\u4e00\u884c\u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20\u8fdb\u884c\u6392\u5e8f\u3002 - std::sort() \u7684\u7b2c\u4e09\u4e2a\u53c2\u6570\u5c31\u662f\u8fd9\u4e2a\u6bd4\u8f83\u51fd\u6570\uff0c\u7528\u4e8e\u544a\u8bc9 sort() \u5e94\u8be5\u5982\u4f55\u6bd4\u8f83\u6bcf\u5bf9\u5143\u7d20\u3002","title":"2. \u81ea\u5b9a\u4e49\u6392\u5e8f"},{"location":"lesson13/Lesson13%20C%2B%2B/#3","text":"\u6392\u5e8f\u7b97\u6cd5\u5728\u5904\u7406\u4e0d\u540c\u89c4\u6a21\u6570\u636e\u65f6\u8868\u73b0\u5404\u5f02\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u89c1\u7684\u6392\u5e8f\u7b97\u6cd5\u53ca\u5176\u9002\u7528\u573a\u666f\uff0c\u4f9b\u5927\u5bb6\u521d\u6b65\u4e86\u89e3\uff1a \u9009\u62e9\u6392\u5e8f \uff1a\u9002\u7528\u4e8e\u5c0f\u89c4\u6a21\u6570\u636e\u96c6\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a (O(n^2))\u3002 \u5b83\u7684\u7279\u70b9\u662f\u6bcf\u6b21\u9009\u62e9\u672a\u6392\u5e8f\u90e8\u5206\u4e2d\u7684\u6700\u5c0f\u503c\uff0c\u7136\u540e\u5c06\u5176\u4e0e\u5f53\u524d\u5143\u7d20\u4ea4\u6362\u3002\u867d\u7136\u7b80\u5355\u6613\u61c2\uff0c\u4f46\u6027\u80fd\u8f83\u5dee\uff0c\u4e0d\u9002\u5408\u5927\u6570\u636e\u96c6\u3002 \u63d2\u5165\u6392\u5e8f \uff1a\u9002\u5408\u4e8e\u51e0\u4e4e\u5df2\u6392\u5e8f\u7684\u6570\u636e\u96c6\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u662f (O(n^2))\u3002 \u63d2\u5165\u6392\u5e8f\u7684\u4f18\u52bf\u662f\u5f53\u6570\u636e\u51e0\u4e4e\u6709\u5e8f\u65f6\uff0c\u5b83\u7684\u6548\u7387\u4f1a\u6bd4\u9009\u62e9\u6392\u5e8f\u597d\u5f97\u591a\u3002 \u5feb\u901f\u6392\u5e8f \uff1a\u6027\u80fd\u8f83\u597d\u7684\u901a\u7528\u6392\u5e8f\u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a (O(n log n))\u3002 \u5b83\u901a\u8fc7\u9009\u62e9\u4e00\u4e2a\u57fa\u51c6\u5143\u7d20\uff08pivot\uff09\uff0c\u5c06\u6570\u7ec4\u5212\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5e76\u9012\u5f52\u5730\u5bf9\u8fd9\u4e24\u90e8\u5206\u8fdb\u884c\u6392\u5e8f\u3002\u9002\u5408\u5927\u89c4\u6a21\u6570\u636e\u96c6\u3002 \u5f52\u5e76\u6392\u5e8f \uff1a\u4e0e\u5feb\u901f\u6392\u5e8f\u4e00\u6837\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a (O(n log n))\uff0c\u4f46\u5b83\u662f\u7a33\u5b9a\u7684\u6392\u5e8f\u7b97\u6cd5\u3002 \u5f52\u5e76\u6392\u5e8f\u5c06\u6570\u7ec4\u4e0d\u65ad\u62c6\u5206\uff0c\u7136\u540e\u5408\u5e76\u6392\u5e8f\u597d\u7684\u5b50\u6570\u7ec4\u3002\u867d\u7136\u5b83\u7684\u6027\u80fd\u7a33\u5b9a\uff0c\u4f46\u9700\u8981\u989d\u5916\u7684\u5185\u5b58\u6765\u5b58\u50a8\u62c6\u5206\u7684\u6570\u7ec4\u3002 \u5192\u6ce1\u6392\u5e8f \uff1a\u662f\u4e00\u79cd\u7b80\u5355\u4f46\u6027\u80fd\u8f83\u5dee\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a (O(n^2))\u3002 \u5b83\u7684\u57fa\u672c\u601d\u60f3\u662f\u901a\u8fc7\u4e0d\u65ad\u6bd4\u8f83\u76f8\u90bb\u7684\u5143\u7d20\u5e76\u4ea4\u6362\u5b83\u4eec\uff0c\u5c06\u8f83\u5927\u7684\u5143\u7d20\u201c\u5192\u6ce1\u201d\u5230\u6570\u7ec4\u7684\u672b\u5c3e\u3002\u9002\u7528\u4e8e\u975e\u5e38\u5c0f\u89c4\u6a21\u7684\u6570\u636e\u96c6\u3002 \u5806\u6392\u5e8f \uff1a\u57fa\u4e8e\u4e8c\u53c9\u5806\u7ed3\u6784\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a (O(n log n))\u3002 \u5806\u6392\u5e8f\u901a\u8fc7\u5efa\u7acb\u4e00\u4e2a\u6700\u5927\u5806\u6216\u6700\u5c0f\u5806\u6765\u8fdb\u884c\u6392\u5e8f\u3002\u867d\u7136\u5806\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u5feb\u901f\u6392\u5e8f\u76f8\u540c\uff0c\u4f46\u5b83\u4e0d\u9700\u8981\u989d\u5916\u7684\u5185\u5b58\u7a7a\u95f4\uff08\u4e0d\u50cf\u5f52\u5e76\u6392\u5e8f\uff09\u3002 \u8ba1\u6570\u6392\u5e8f \uff1a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a (O(n+k))\uff0c\u9002\u7528\u4e8e\u6570\u636e\u8303\u56f4\u8f83\u5c0f\u7684\u573a\u666f\u3002 \u5b83\u901a\u8fc7\u7edf\u8ba1\u6bcf\u4e2a\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570\u6765\u6392\u5e8f\uff0c\u9002\u7528\u4e8e\u6574\u6570\u6392\u5e8f\u4e14\u6570\u636e\u8303\u56f4\u4e0d\u5927\u7684\u60c5\u51b5\u3002\u8ba1\u6570\u6392\u5e8f\u7684\u6027\u80fd\u5728\u6570\u636e\u8303\u56f4\u8f83\u5c0f\u65f6\u975e\u5e38\u4f18\u5f02\uff0c\u4f46\u5f53\u6570\u636e\u8303\u56f4\u5f88\u5927\u65f6\uff0c\u7a7a\u95f4\u6d88\u8017\u4f1a\u8fc7\u9ad8\u3002 \u6876\u6392\u5e8f \uff1a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a (O(n+k))\uff0c\u9002\u5408\u5747\u5300\u5206\u5e03\u7684\u6570\u636e\u96c6\u3002 \u5b83\u5c06\u5143\u7d20\u5206\u5e03\u5230\u591a\u4e2a\u6876\u4e2d\uff0c\u5206\u522b\u5bf9\u6bcf\u4e2a\u6876\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u518d\u5408\u5e76\u6240\u6709\u6876\u4e2d\u7684\u5143\u7d20\u3002\u5bf9\u4e8e\u5206\u5e03\u5747\u5300\u7684\u6570\u636e\uff0c\u6876\u6392\u5e8f\u7684\u6027\u80fd\u975e\u5e38\u597d\uff0c\u4f46\u5982\u679c\u6570\u636e\u5206\u5e03\u4e0d\u5747\uff0c\u6027\u80fd\u53ef\u80fd\u4f1a\u9000\u5316\u3002 \u57fa\u6570\u6392\u5e8f \uff1a\u4e00\u79cd\u975e\u6bd4\u8f83\u6392\u5e8f\u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a (O(n times k))\uff0c\u9002\u7528\u4e8e\u5904\u7406\u4f4d\u6570\u56fa\u5b9a\u7684\u6570\u636e\u3002 \u5b83\u901a\u8fc7\u6309\u4f4d\uff08\u6216\u6570\u5b57\uff09\u8fdb\u884c\u591a\u6b21\u6392\u5e8f\u6765\u5b8c\u6210\u6574\u4f53\u6392\u5e8f\uff0c\u9002\u7528\u4e8e\u5bf9\u6574\u6570\u6216\u5b57\u7b26\u4e32\u8fdb\u884c\u6392\u5e8f\u3002\u57fa\u6570\u6392\u5e8f\u7684\u6027\u80fd\u5728\u5904\u7406\u5927\u89c4\u6a21\u3001\u56fa\u5b9a\u4f4d\u6570\u7684\u6570\u5b57\u65f6\u8f83\u597d\u3002","title":"3. \u6392\u5e8f\u4f18\u5316"},{"location":"lesson13/Lesson13%20C%2B%2B/#21","text":"","title":"2.1 \u6392\u5e8f\u7b97\u6cd5\u4f8b\u9898\u8bb2\u89e3"},{"location":"lesson13/Lesson13%20C%2B%2B/#211-lc215-k","text":"","title":"2.1.1 LC215\uff1a\u627e\u51fa\u6570\u7ec4\u4e2d\u7684\u7b2c K \u5927\u5143\u7d20"},{"location":"lesson13/Lesson13%20C%2B%2B/#_11","text":"\u7ed9\u5b9a\u4e00\u4e2a\u672a\u6392\u5e8f\u7684\u6570\u7ec4\uff0c\u627e\u51fa\u5176\u4e2d\u7b2c K \u5927\u7684\u5143\u7d20\u3002","title":"\u9898\u76ee\u63cf\u8ff0\uff1a"},{"location":"lesson13/Lesson13%20C%2B%2B/#_12","text":"\u53ef\u4ee5\u5148\u5bf9\u6570\u7ec4\u8fdb\u884c\u964d\u5e8f\u6392\u5e8f\uff0c\u7136\u540e\u76f4\u63a5\u8fd4\u56de\u6392\u597d\u5e8f\u540e\u7684\u6570\u7ec4\u4e2d\u7684\u7b2c K \u4e2a\u5143\u7d20\u3002","title":"\u89e3\u9898\u601d\u8def\uff1a"},{"location":"lesson13/Lesson13%20C%2B%2B/#_13","text":"class Solution { public: // \u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\uff0c\u8fdb\u884c\u964d\u5e8f\u6392\u5e8f bool compareDesc(int a, int b) { return a > b; // \u8fd4\u56de a > b \u8868\u793a\u964d\u5e8f } int findKthLargest(vector<int>& nums, int k) { // \u5bf9\u6570\u7ec4\u8fdb\u884c\u964d\u5e8f\u6392\u5e8f sort(nums.begin(), nums.end(), compareDesc); // \u8fd4\u56de\u7b2c K \u4e2a\u5143\u7d20 return nums[k - 1]; } }; \u8bf4\u660e \uff1a - \u8fd9\u91cc\u6211\u4eec\u901a\u8fc7\u5b9a\u4e49 compareDesc \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5c06\u4e24\u4e2a\u6574\u6570 a \u548c b \u8fdb\u884c\u6bd4\u8f83\uff0c\u5e76\u8fd4\u56de true \u5982\u679c a > b \uff0c\u8fd9\u5c31\u5b9e\u73b0\u4e86\u964d\u5e8f\u6392\u5e8f\u3002 - sort() \u51fd\u6570\u7684\u7b2c\u4e09\u4e2a\u53c2\u6570\u4f20\u5165\u81ea\u5b9a\u4e49\u7684\u6bd4\u8f83\u51fd\u6570 compareDesc \u6765\u63a7\u5236\u6392\u5e8f\u987a\u5e8f\u3002","title":"\u4ee3\u7801\u5b9e\u73b0\uff1a"},{"location":"lesson13/Lesson13%20C%2B%2B/#22","text":"","title":"2.2 \u6392\u5e8f\u7b97\u6cd5\u4e3e\u4e00\u53cd\u4e09"},{"location":"lesson13/Lesson13%20C%2B%2B/#221-lc56","text":"","title":"2.2.1 LC56\uff1a\u5408\u5e76\u533a\u95f4"},{"location":"lesson13/Lesson13%20C%2B%2B/#_14","text":"\u7ed9\u5b9a\u82e5\u5e72\u4e2a\u95ed\u5408\u533a\u95f4 [x1, y1], [x2, y2], ... \uff0c\u8bf7\u5c06\u6240\u6709\u91cd\u53e0\u7684\u533a\u95f4\u5408\u5e76\u3002\u4f8b\u5982\uff0c\u533a\u95f4 [1, 3] \u548c [2, 6] \u53ef\u4ee5\u5408\u5e76\u4e3a [1, 6] \u3002","title":"\u9898\u76ee\u63cf\u8ff0\uff1a"},{"location":"lesson13/Lesson13%20C%2B%2B/#_15","text":"\u9996\u5148\uff0c\u6309\u7167\u533a\u95f4\u7684\u8d77\u59cb\u503c\u5bf9\u6240\u6709\u533a\u95f4\u8fdb\u884c\u6392\u5e8f\u3002 \u7136\u540e\u904d\u5386\u6bcf\u4e2a\u533a\u95f4\uff0c\u82e5\u5f53\u524d\u533a\u95f4\u4e0e\u524d\u4e00\u4e2a\u533a\u95f4\u91cd\u53e0\uff0c\u5219\u5408\u5e76\u5b83\u4eec\uff1b\u5426\u5219\u5c06\u5f53\u524d\u533a\u95f4\u76f4\u63a5\u52a0\u5165\u7ed3\u679c\u5217\u8868\u3002","title":"\u89e3\u9898\u601d\u8def\uff1a"},{"location":"lesson13/Lesson13%20C%2B%2B/#_16","text":"class Solution { public: // \u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\uff0c\u6309\u533a\u95f4\u7684\u8d77\u59cb\u503c\u8fdb\u884c\u6392\u5e8f bool compareIntervals(const vector<int>& a, const vector<int>& b) { return a[0] < b[0]; // \u6309\u7167\u8d77\u59cb\u4f4d\u7f6e\u5347\u5e8f\u6392\u5e8f } vector<vector<int>> merge(vector<vector<int>>& intervals) { if (intervals.empty()) return {}; // \u6309\u533a\u95f4\u8d77\u59cb\u4f4d\u7f6e\u6392\u5e8f sort(intervals.begin(), intervals.end(), compareIntervals); vector<vector<int>> merged; // \u4f7f\u7528\u4f20\u7edf\u7684 for \u5faa\u73af\u904d\u5386\u533a\u95f4 for (int i = 0; i < intervals.size(); i++) { if (merged.empty() || merged.back()[1] < intervals[i][0]) { // \u5982\u679c\u7ed3\u679c\u4e3a\u7a7a\u6216\u5f53\u524d\u533a\u95f4\u4e0e\u4e0a\u4e00\u4e2a\u533a\u95f4\u4e0d\u91cd\u53e0\uff0c\u76f4\u63a5\u52a0\u5165\u7ed3\u679c merged.push_back(intervals[i]); } else { // \u5982\u679c\u91cd\u53e0\uff0c\u66f4\u65b0\u6700\u540e\u4e00\u4e2a\u533a\u95f4\u7684\u7ed3\u675f\u4f4d\u7f6e merged.back()[1] = max(merged.back()[1], intervals[i][1]); } } return merged; } }; \u8bb2\u89e3 \uff1a - \u81ea\u5b9a\u4e49\u6392\u5e8f \uff1a\u4e3a\u4e86\u5c06\u6240\u6709\u533a\u95f4\u6309\u8d77\u59cb\u503c\u5347\u5e8f\u6392\u5217\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86 compareIntervals \u51fd\u6570\uff0c\u5e76\u5c06\u5176\u4f20\u9012\u7ed9 sort() \u51fd\u6570\uff0c\u786e\u4fdd\u533a\u95f4\u6309\u7167\u8d77\u59cb\u503c\u6392\u5e8f\uff0c\u4fbf\u4e8e\u540e\u7eed\u7684\u5408\u5e76\u64cd\u4f5c\u3002 \u904d\u5386\u533a\u95f4 \uff1a\u6392\u5e8f\u540e\uff0c\u6211\u4eec\u904d\u5386\u6bcf\u4e00\u4e2a\u533a\u95f4\u3002\u901a\u8fc7\u6bd4\u8f83\u6bcf\u4e2a\u533a\u95f4\u7684\u8d77\u59cb\u503c\u548c\u4e0a\u4e00\u4e2a\u5408\u5e76\u533a\u95f4\u7684\u7ed3\u675f\u503c\uff0c\u5224\u65ad\u5b83\u4eec\u662f\u5426\u91cd\u53e0\uff1a \u5982\u679c\u6ca1\u6709\u91cd\u53e0\uff0c\u5c31\u5c06\u5f53\u524d\u533a\u95f4\u76f4\u63a5\u52a0\u5165 merged \u7ed3\u679c\u3002 \u5982\u679c\u91cd\u53e0\uff0c\u66f4\u65b0\u4e0a\u4e00\u4e2a\u5408\u5e76\u533a\u95f4\u7684\u7ed3\u675f\u503c\uff0c\u4f7f\u5f97\u5b83\u53ef\u4ee5\u6db5\u76d6\u5f53\u524d\u533a\u95f4\u3002 \u5408\u5e76\u903b\u8f91 \uff1a\u5408\u5e76\u662f\u901a\u8fc7\u6bd4\u8f83 merged.back()[1] \uff08\u5df2\u5408\u5e76\u7684\u6700\u540e\u4e00\u4e2a\u533a\u95f4\u7684\u7ed3\u675f\u503c\uff09\u4e0e\u5f53\u524d\u533a\u95f4\u7684\u8d77\u59cb\u503c\u6765\u8fdb\u884c\u7684\u3002\u5982\u679c\u5f53\u524d\u533a\u95f4\u7684\u8d77\u59cb\u503c\u5927\u4e8e\u4e0a\u4e00\u4e2a\u533a\u95f4\u7684\u7ed3\u675f\u503c\uff0c\u5219\u8bf4\u660e\u5b83\u4eec\u4e0d\u91cd\u53e0\uff0c\u5426\u5219\u8fdb\u884c\u5408\u5e76\u3002","title":"\u4ee3\u7801\u5b9e\u73b0\uff1a"},{"location":"lesson13/Lesson13%20C%2B%2B/#222-lc252","text":"","title":"2.2.2 LC252\uff1a\u4f1a\u8bae\u5ba4"},{"location":"lesson13/Lesson13%20C%2B%2B/#_17","text":"\u7ed9\u5b9a\u4e00\u7cfb\u5217\u4f1a\u8bae\u65f6\u95f4\u533a\u95f4\uff0c\u5224\u65ad\u662f\u5426\u80fd\u8ba9\u6240\u6709\u4f1a\u8bae\u65e0\u51b2\u7a81\u5730\u5b89\u6392\u5728\u4e00\u95f4\u4f1a\u8bae\u5ba4\u4e2d\u3002","title":"\u9898\u76ee\u63cf\u8ff0\uff1a"},{"location":"lesson13/Lesson13%20C%2B%2B/#_18","text":"\u53ef\u4ee5\u5c06\u6240\u6709\u7684\u4f1a\u8bae\u6309\u7167\u5f00\u59cb\u65f6\u95f4\u6392\u5e8f\uff0c\u7136\u540e\u904d\u5386\u6bcf\u4e2a\u4f1a\u8bae\uff0c\u68c0\u67e5\u662f\u5426\u6709\u91cd\u53e0\u533a\u95f4\u3002","title":"\u89e3\u9898\u601d\u8def\uff1a"},{"location":"lesson13/Lesson13%20C%2B%2B/#_19","text":"class Solution { public: // \u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\uff0c\u6309\u4f1a\u8bae\u7684\u5f00\u59cb\u65f6\u95f4\u8fdb\u884c\u6392\u5e8f bool compareMeetings(const vector<int>& a, const vector<int>& b) { return a[0] < b[0]; // \u6309\u7167\u5f00\u59cb\u65f6\u95f4\u5347\u5e8f\u6392\u5e8f } bool canAttendMeetings(vector<vector<int>>& intervals) { // \u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u6bd4\u8f83\u51fd\u6570\u8fdb\u884c\u6392\u5e8f sort(intervals.begin(), intervals.end(), compareMeetings); // \u904d\u5386\u4f1a\u8bae\uff0c\u68c0\u67e5\u662f\u5426\u5b58\u5728\u91cd\u53e0 for (int i = 1; i < intervals.size(); i++) { if (intervals[i][0] < intervals[i - 1][1]) { return false; } } return true; } };","title":"\u4ee3\u7801\u5b9e\u73b0\uff1a"},{"location":"lesson13/Lesson13%20C%2B%2B/#_20","text":"\u81ea\u5b9a\u4e49\u6392\u5e8f\u51fd\u6570 \uff1a\u5b9a\u4e49\u4e86 compareMeetings \u51fd\u6570\u6765\u6839\u636e\u4f1a\u8bae\u7684\u5f00\u59cb\u65f6\u95f4\u5bf9\u4f1a\u8bae\u533a\u95f4\u8fdb\u884c\u6392\u5e8f\u3002\u51fd\u6570\u901a\u8fc7\u6bd4\u8f83\u4f1a\u8bae\u7684\u5f00\u59cb\u65f6\u95f4\u6765\u51b3\u5b9a\u4f1a\u8bae\u7684\u987a\u5e8f\u3002 \u6392\u5e8f\u4f1a\u8bae \uff1a\u901a\u8fc7 sort() \u51fd\u6570\u5e76\u4f20\u5165\u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570 compareMeetings \uff0c\u6211\u4eec\u5c06\u4f1a\u8bae\u6309\u5f00\u59cb\u65f6\u95f4\u8fdb\u884c\u6392\u5e8f\u3002 \u68c0\u67e5\u91cd\u53e0 \uff1a\u6392\u5e8f\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u4f9d\u6b21\u68c0\u67e5\u6bcf\u4e2a\u4f1a\u8bae\u662f\u5426\u4e0e\u4e0a\u4e00\u4e2a\u4f1a\u8bae\u65f6\u95f4\u91cd\u53e0\u3002\u5982\u679c\u53d1\u73b0\u91cd\u53e0\uff0c\u8fd4\u56de false \uff1b\u5982\u679c\u6ca1\u6709\u91cd\u53e0\uff0c\u6700\u7ec8\u8fd4\u56de true \u3002","title":"\u8bb2\u89e3\uff1a"},{"location":"lesson13/Lesson13%20C%2B%2B/#223-lc347-k","text":"","title":"2.2.3 LC347\uff1a\u524d K \u4e2a\u9ad8\u9891\u5143\u7d20"},{"location":"lesson13/Lesson13%20C%2B%2B/#_21","text":"\u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u7684\u6574\u6570\u6570\u7ec4\uff0c\u8fd4\u56de\u5176\u4e2d\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684\u524d K \u4e2a\u5143\u7d20\u3002","title":"\u9898\u76ee\u63cf\u8ff0\uff1a"},{"location":"lesson13/Lesson13%20C%2B%2B/#_22","text":"\u4f7f\u7528\u54c8\u5e0c\u8868\u7edf\u8ba1\u6bcf\u4e2a\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570\u3002 \u5c06\u54c8\u5e0c\u8868\u4e2d\u7684\u5143\u7d20\u653e\u5165\u4e00\u4e2a\u6570\u7ec4\u4e2d\uff0c\u6309\u51fa\u73b0\u6b21\u6570\u4ece\u9ad8\u5230\u4f4e\u6392\u5e8f\u3002 \u8fd4\u56de\u6392\u5e8f\u540e\u524d K \u4e2a\u5143\u7d20\u3002","title":"\u89e3\u9898\u601d\u8def\uff1a"},{"location":"lesson13/Lesson13%20C%2B%2B/#_23","text":"// \u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\uff0c\u6309\u9891\u7387\u964d\u5e8f\u6392\u5e8f bool compareByFrequency(const pair<int, int>& a, const pair<int, int>& b) { return a.second > b.second; // \u6309\u7167\u9891\u7387\u964d\u5e8f\u6392\u5217 } vector<int> topKFrequent(vector<int>& nums, int k) { // \u4f7f\u7528\u54c8\u5e0c\u8868\u7edf\u8ba1\u6bcf\u4e2a\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570 unordered_map<int, int> frequencyMap; for (int num : nums) { frequencyMap[num]++; } // \u5c06\u54c8\u5e0c\u8868\u4e2d\u7684\u5143\u7d20\u8f6c\u6362\u4e3a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u7b2c\u4e00\u7ef4\u662f\u6570\u5b57\uff0c\u7b2c\u4e8c\u7ef4\u662f\u9891\u7387 vector<pair<int, int>> frequencyList; for (auto& it : frequencyMap) { frequencyList.push_back(it); } // \u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u6bd4\u8f83\u51fd\u6570\u8fdb\u884c\u6392\u5e8f sort(frequencyList.begin(), frequencyList.end(), compareByFrequency); // \u53d6\u51fa\u524d K \u4e2a\u9891\u7387\u6700\u9ad8\u7684\u5143\u7d20 vector<int> result; for (int i = 0; i < k; i++) { result.push_back(frequencyList[i].first); } return result; }","title":"\u4ee3\u7801\u5b9e\u73b0\uff1a"},{"location":"lesson13/Lesson13%20C%2B%2B/#_24","text":"\u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570 \uff1a\u5b9a\u4e49\u4e86 compareByFrequency \u51fd\u6570\uff0c\u7528\u4e8e\u6bd4\u8f83 pair<int, int> \u7c7b\u578b\u7684\u6570\u636e\uff0c\u6309\u9891\u7387\u964d\u5e8f\u6392\u5217\u3002 \u54c8\u5e0c\u8868\u7edf\u8ba1\u9891\u7387 \uff1a\u4f7f\u7528 unordered_map \u6765\u8bb0\u5f55\u6bcf\u4e2a\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u952e\u4e3a\u5143\u7d20\uff0c\u503c\u4e3a\u8be5\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570\u3002 \u8f6c\u6362\u4e3a\u53ef\u6392\u5e8f\u5217\u8868 \uff1a\u5c06 unordered_map \u7684\u952e\u503c\u5bf9\u8f6c\u6362\u4e3a vector<pair<int, int>> \uff0c\u5176\u4e2d pair.first \u662f\u6570\u5b57\uff0c pair.second \u662f\u8be5\u6570\u5b57\u7684\u9891\u7387\u3002 \u6392\u5e8f \uff1a\u4f7f\u7528 sort() \u51fd\u6570\uff0c\u5e76\u4f20\u5165\u81ea\u5b9a\u4e49\u7684\u6bd4\u8f83\u51fd\u6570 compareByFrequency \uff0c\u5b9e\u73b0\u6309\u9891\u7387\u4ece\u9ad8\u5230\u4f4e\u7684\u6392\u5e8f\u3002 \u53d6\u524d K \u4e2a\u5143\u7d20 \uff1a\u4ece\u6392\u597d\u5e8f\u7684 frequencyList \u4e2d\u53d6\u524d K \u4e2a\u5143\u7d20\u7684 first \uff08\u5373\u6570\u5b57\uff09\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c\u3002","title":"\u8bb2\u89e3\uff1a"},{"location":"lesson13/Lesson13%20C%2B%2B/#3_1","text":"\u8d2a\u5fc3\u7b97\u6cd5\u662f\u4e00\u79cd\u89e3\u51b3\u95ee\u9898\u7684 \u7b56\u7565 \uff0c\u5176\u6838\u5fc3\u601d\u60f3\u662f\uff1a\u5728\u89e3\u51b3\u95ee\u9898\u7684\u6bcf\u4e00\u6b65\u4e2d\uff0c\u603b\u662f\u9009\u62e9\u5f53\u524d\u770b\u8d77\u6765 \u6700\u4f18\u7684\u9009\u62e9 \uff0c\u901a\u8fc7\u4e00\u7cfb\u5217\u8fd9\u6837\u7684\u5c40\u90e8\u6700\u4f18\u9009\u62e9\uff0c\u6700\u7ec8\u5e0c\u671b\u83b7\u5f97\u5168\u5c40\u6700\u4f18\u89e3\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c \u8d2a\u5fc3\u7b97\u6cd5\u5e76\u4e0d\u603b\u662f\u80fd\u5f97\u5230\u5168\u5c40\u6700\u4f18\u89e3 \u3002\u5b83\u53ea\u6709\u5728\u67d0\u4e9b\u7279\u5b9a\u95ee\u9898\u4e2d\u6709\u6548\uff0c\u7279\u522b\u662f\u5f53\u95ee\u9898\u6ee1\u8db3\u8d2a\u5fc3\u9009\u62e9\u6027\u8d28\u65f6\u3002","title":"3. \u8d2a\u5fc3\u7b97\u6cd5"},{"location":"lesson13/Lesson13%20C%2B%2B/#_25","text":"\u5c40\u90e8\u6700\u4f18\u9009\u62e9 \uff1a \u8d2a\u5fc3\u7b97\u6cd5\u5728\u6bcf\u4e00\u6b65\u4e2d\u53ea\u505a\u51fa\u5f53\u524d\u770b\u8d77\u6765\u6700\u4f18\u7684\u9009\u62e9\uff0c\u800c \u4e0d\u5173\u5fc3\u4e4b\u540e\u53ef\u80fd\u53d1\u751f\u7684\u60c5\u51b5 \u3002\u5b83\u4e0d\u4f1a\u8003\u8651\u8fd9\u6b21\u9009\u62e9\u662f\u5426\u4f1a\u5f71\u54cd\u540e\u7eed\u51b3\u7b56\uff0c\u53ea\u770b\u5f53\u4e0b\u54ea\u4e2a\u9009\u9879\u662f\u6700\u6709\u5229\u7684\u3002\u4f8b\u5982\uff0c\u5728\u5206\u6570\u80cc\u5305\u95ee\u9898\u4e2d\uff0c\u8d2a\u5fc3\u7b56\u7565\u662f\u6bcf\u6b21\u4f18\u5148\u9009\u62e9\u5355\u4f4d\u91cd\u91cf\u4ef7\u503c\u6700\u9ad8\u7684\u7269\u54c1\uff0c\u56e0\u4e3a\u5b83\u5728\u5f53\u524d\u7684\u9009\u62e9\u4e2d\u5e26\u6765\u7684\u6536\u76ca\u6700\u5927\u3002 \u4f18\u70b9 \uff1a\u901a\u8fc7\u6bcf\u4e00\u6b65\u7684\u6700\u4f18\u9009\u62e9\uff0c\u53ef\u4ee5\u5feb\u901f\u627e\u5230\u4e00\u4e2a\u53ef\u884c\u89e3\u3002\u8d2a\u5fc3\u7b97\u6cd5\u7684\u89c4\u5219\u7b80\u5355\u3001\u76f4\u89c2\uff0c\u6613\u4e8e\u5b9e\u73b0\uff0c\u901a\u5e38\u53ef\u4ee5\u901a\u8fc7\u4e00\u6b21\u626b\u63cf\u6216\u6392\u5e8f\u89e3\u51b3\u95ee\u9898\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u4f4e\u3002\u4f8b\u5982\u5728\u5206\u6570\u80cc\u5305\u95ee\u9898\u4e2d\uff0c\u8d2a\u5fc3\u7b97\u6cd5\u53ea\u9700\u8981\u6309\u5355\u4f4d\u4ef7\u503c\u6392\u5e8f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a (O(n log n)) \u3002 \u7f3a\u70b9 \uff1a\u5c40\u90e8\u6700\u4f18\u89e3\u4e0d\u4e00\u5b9a\u80fd\u4fdd\u8bc1\u5168\u5c40\u6700\u4f18\uff0c\u56e0\u4e3a\u5728\u4e00\u4e9b\u95ee\u9898\u4e2d\uff0c\u6700\u4f73\u7684\u6574\u4f53\u65b9\u6848\u4f9d\u8d56\u4e8e\u591a\u6b65\u51b3\u7b56\u7684\u7efc\u5408\u6548\u679c\uff0c\u800c\u4e0d\u662f\u5355\u7eaf\u7684\u6bcf\u4e00\u6b65\u6700\u4f18\u3002\u8d2a\u5fc3\u7b97\u6cd5\u65e0\u6cd5\u901a\u8fc7\u5c40\u90e8\u6700\u4f18\u89e3\u627e\u5230\u5168\u5c40\u6700\u4f18\u89e3\uff0c\u5c24\u5176\u5728\u590d\u6742\u95ee\u9898\uff08\u5982 0-1 \u80cc\u5305\u95ee\u9898\uff09\u4e2d\uff0c\u5b83\u53ef\u80fd\u4f1a\u9677\u5165\u6b21\u4f18\u89e3\u3002 \u4e0d\u53ef\u56de\u6eaf \uff1a \u8d2a\u5fc3\u7b97\u6cd5\u7684\u4e00\u4e2a\u91cd\u8981\u7279\u70b9\u662f \u51b3\u7b56\u4e0d\u53ef\u56de\u5934\u4fee\u6539 \u3002\u4e00\u65e6\u505a\u51fa\u67d0\u4e2a\u9009\u62e9\uff0c\u7b97\u6cd5\u5c31\u4e0d\u4f1a\u518d\u8003\u8651\u6539\u53d8\u5b83\uff0c\u5373\u4f7f\u540e\u7eed\u53d1\u73b0\u8fd9\u4e2a\u9009\u62e9\u53ef\u80fd\u4e0d\u662f\u6700\u4f18\u7684\u3002\u56e0\u4e3a\u8d2a\u5fc3\u7b97\u6cd5\u4f9d\u8d56\u7684\u662f\u5f53\u524d\u6700\u4f18\u9009\u62e9\u7684\u7b56\u7565\uff0c\u6240\u4ee5\u5b83\u4e0d\u4f1a\u4e3a\u672a\u6765\u7684\u9009\u62e9\u7559\u4e0b\u56de\u65cb\u4f59\u5730\u3002 \u4f18\u70b9 \uff1a\u7531\u4e8e\u4e0d\u9700\u8981\u56de\u6eaf\uff0c\u8d2a\u5fc3\u7b97\u6cd5\u6267\u884c\u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u901a\u5e38\u6bd4\u9700\u8981\u56de\u6eaf\u7684\u7b97\u6cd5\uff08\u5982\u52a8\u6001\u89c4\u5212\u3001\u56de\u6eaf\u6cd5\u7b49\uff09\u66f4\u4f4e\u3002\u8d2a\u5fc3\u7b97\u6cd5\u7684\u9ad8\u6548\u6027\u4f53\u73b0\u5728\u5176\u5feb\u901f\u3001\u76f4\u63a5\u7684\u89e3\u51b3\u601d\u8def\u4e0a\uff0c\u9002\u7528\u4e8e\u5904\u7406\u5927\u89c4\u6a21\u95ee\u9898\u65f6\u7684\u9ad8\u6548\u6c42\u89e3\u3002 \u7f3a\u70b9 \uff1a\u7531\u4e8e\u8d2a\u5fc3\u7b97\u6cd5\u4e0d\u5177\u5907\u56de\u6eaf\u80fd\u529b\uff0c\u5b83\u53ea\u80fd\u5728\u7b26\u5408\u8d2a\u5fc3\u9009\u62e9\u6027\u8d28\u7684\u95ee\u9898\u4e2d\u6709\u6548\u3002\u5982\u679c\u95ee\u9898\u4e0d\u6ee1\u8db3\u8fd9\u79cd\u6027\u8d28\uff0c\u7b97\u6cd5\u53ef\u80fd\u4f1a\u5728\u540e\u7eed\u6b65\u9aa4\u4e2d\u9677\u5165\u6b21\u4f18\u89e3\u6216\u6b7b\u80e1\u540c\uff0c\u65e0\u6cd5\u8fbe\u5230\u5168\u5c40\u6700\u4f18\u89e3\u3002","title":"\u8d2a\u5fc3\u7b97\u6cd5\u7684\u7279\u70b9"},{"location":"lesson13/Lesson13%20C%2B%2B/#_26","text":"\u8d2a\u5fc3\u7b97\u6cd5\u901a\u5e38\u9075\u5faa\u4ee5\u4e0b\u57fa\u672c\u6b65\u9aa4\uff1a \u660e\u786e\u8d2a\u5fc3\u7b56\u7565 \uff1a\u786e\u5b9a\u6bcf\u4e00\u6b65\u7684\u5c40\u90e8\u6700\u4f18\u89e3\u9009\u62e9\u7b56\u7565\u3002 \u6392\u5e8f \uff1a\u5982\u679c\u95ee\u9898\u6d89\u53ca\u591a\u4e2a\u9009\u62e9\uff0c\u901a\u5e38\u9700\u8981\u5bf9\u5176\u8fdb\u884c\u6392\u5e8f\uff08\u5982\u6309\u7ed3\u675f\u65f6\u95f4\u3001\u5355\u4f4d\u4ef7\u503c\u7b49\uff09\u3002 \u9010\u6b65\u9009\u62e9 \uff1a\u6839\u636e\u8d2a\u5fc3\u7b56\u7565\uff0c\u6309\u7167\u6392\u5e8f\u7ed3\u679c\u9010\u6b65\u9009\u62e9\u6700\u4f18\u9879\u3002 \u68c0\u67e5\u53ef\u884c\u6027 \uff1a\u6bcf\u6b21\u9009\u62e9\u65f6\uff0c\u786e\u4fdd\u5f53\u524d\u9009\u62e9\u6ee1\u8db3\u95ee\u9898\u7684\u7ea6\u675f\u6761\u4ef6\uff08\u5982\u4e0d\u51b2\u7a81\u3001\u4e0d\u8d85\u51fa\u5bb9\u91cf\u7b49\uff09\u3002 \u6784\u9020\u89e3 \uff1a\u5c06\u6240\u6709\u7684\u9009\u62e9\u7ec4\u5408\u8d77\u6765\uff0c\u5f62\u6210\u95ee\u9898\u7684\u6700\u7ec8\u89e3\u3002","title":"\u5177\u4f53\u6b65\u9aa4"},{"location":"lesson13/Lesson13%20C%2B%2B/#_27","text":"\u8981\u5224\u65ad\u4e00\u4e2a\u95ee\u9898\u662f\u5426\u9002\u5408\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u53ef\u4ee5\u89c2\u5bdf\u4ee5\u4e0b\u7279\u5f81\uff1a \u8d2a\u5fc3\u9009\u62e9\u6027\u8d28 \uff1a\u5728\u6bcf\u4e00\u6b65\u4e2d\uff0c\u9009\u62e9\u7684\u5c40\u90e8\u6700\u4f18\u89e3\u80fd\u591f\u4fdd\u8bc1\u4e0d\u4f1a\u5f71\u54cd\u540e\u7eed\u9009\u62e9\u7684\u6700\u4f18\u6027\uff0c\u5373\u8d2a\u5fc3\u9009\u62e9\u5728\u6bcf\u4e00\u6b65\u90fd\u80fd\u4fdd\u6301\u5168\u5c40\u6700\u4f18\u3002 \u65e0\u540e\u6548\u6027 \uff1a\u5f53\u524d\u7684\u9009\u62e9\u4e0d\u4f1a\u5f71\u54cd\u672a\u6765\u7684\u9009\u62e9\u3002\u6bcf\u4e2a\u9009\u62e9\u7684\u7ed3\u679c\u53ea\u4f9d\u8d56\u5f53\u524d\u72b6\u6001\uff0c\u800c\u4e0d\u4f1a\u4f9d\u8d56\u4e4b\u524d\u7684\u51b3\u7b56\u3002\u5373\u4e00\u65e6\u505a\u51fa\u4e86\u67d0\u4e2a\u9009\u62e9\uff0c\u8be5\u9009\u62e9\u5c31\u4e0d\u53ef\u6539\u53d8\u3002 \u5982\u679c\u95ee\u9898\u6ee1\u8db3\u4ee5\u4e0a\u4e24\u70b9\uff0c\u90a3\u4e48\u901a\u5e38\u53ef\u4ee5\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\u6c42\u89e3\u3002","title":"\u8d2a\u5fc3\u7b97\u6cd5\u7684\u9002\u7528\u6761\u4ef6"},{"location":"lesson13/Lesson13%20C%2B%2B/#vs","text":"\u5728\u533a\u5206\u4e00\u4e2a\u95ee\u9898\u662f\u5426\u9002\u5408\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\u6216\u52a8\u6001\u89c4\u5212\u65f6\uff0c \u6700\u4f18\u5b50\u7ed3\u6784 \u548c \u5b50\u95ee\u9898\u91cd\u53e0 \u662f\u5173\u952e\u7684\u5224\u5b9a\u6807\u51c6\uff1a \u8d2a\u5fc3\u9009\u62e9\u7684\u9002\u7528\u6761\u4ef6 \uff1a \u5c40\u90e8\u6700\u4f18\u9009\u62e9\u6027\u8d28 \uff1a\u8d2a\u5fc3\u7b97\u6cd5\u6bcf\u4e00\u6b65\u505a\u51fa\u7684\u9009\u62e9\u90fd\u662f\u5c40\u90e8\u6700\u4f18\u89e3\uff0c\u4e14\u8fd9\u4e9b\u5c40\u90e8\u6700\u4f18\u89e3\u6784\u6210\u4e86\u5168\u5c40\u6700\u4f18\u89e3\u3002\u8fd9\u79cd\u6027\u8d28\u4e00\u822c\u5b58\u5728\u4e8e\u53ef\u4ee5\u901a\u8fc7\u9010\u6b65\u9009\u62e9\u89e3\u51b3\u7684 \u7b80\u5355\u4f18\u5316\u95ee\u9898 \u3002 \u65e0\u540e\u6548\u6027 \uff1a\u672a\u6765\u7684\u51b3\u7b56\u4e0d\u4f9d\u8d56\u4e8e\u4e4b\u524d\u7684\u9009\u62e9\uff0c\u56e0\u6b64\u4e00\u65e6\u505a\u51fa\u4e86\u9009\u62e9\uff0c\u4e0d\u9700\u8981\u56de\u6eaf\u68c0\u67e5\u3002\u4f8b\u5982\uff0c \u5206\u6570\u80cc\u5305\u95ee\u9898 \uff0c\u6bcf\u6b21\u9009\u62e9\u5355\u4f4d\u4ef7\u503c\u6700\u9ad8\u7684\u7269\u54c1\u4e0d\u4f1a\u5f71\u54cd\u4e4b\u540e\u7684\u9009\u62e9\u3002 \u52a8\u6001\u89c4\u5212\u7684\u9002\u7528\u6761\u4ef6 \uff1a \u6700\u4f18\u5b50\u7ed3\u6784 \uff1a\u5168\u5c40\u6700\u4f18\u89e3\u4f9d\u8d56\u4e8e\u5b50\u95ee\u9898\u7684\u6700\u4f18\u89e3\u3002\u5982\u679c\u6bcf\u4e2a\u5b50\u95ee\u9898\u7684\u89e3\u90fd\u5f71\u54cd\u5230\u5168\u5c40\u6700\u4f18\u89e3\uff0c\u90a3\u4e48\u8fd9\u79cd\u95ee\u9898\u901a\u5e38\u9700\u8981\u4f7f\u7528\u52a8\u6001\u89c4\u5212\u6765\u89e3\u51b3\u3002\u80cc\u5305\u95ee\u9898\u4e2d\u7684 0-1 \u80cc\u5305\u95ee\u9898 \u5c31\u5c5e\u4e8e\u6b64\u7c7b\u95ee\u9898\uff0c\u5f53\u524d\u7269\u54c1\u662f\u5426\u9009\u5165\u80cc\u5305\u4f1a\u5f71\u54cd\u672a\u6765\u7684\u9009\u62e9\uff0c\u56e0\u6b64\u65e0\u6cd5\u7b80\u5355\u901a\u8fc7\u8d2a\u5fc3\u7b56\u7565\u5f97\u5230\u6700\u4f18\u89e3\u3002 \u5b50\u95ee\u9898\u91cd\u53e0 \uff1a\u5982\u679c\u95ee\u9898\u53ef\u4ee5\u88ab\u62c6\u5206\u4e3a\u591a\u4e2a\u5b50\u95ee\u9898\uff0c\u4e14\u8fd9\u4e9b\u5b50\u95ee\u9898\u4e4b\u95f4\u5b58\u5728\u91cd\u53e0\uff08\u5373\u67d0\u4e2a\u5b50\u95ee\u9898\u7684\u89e3\u4f1a\u591a\u6b21\u88ab\u4f7f\u7528\uff09\uff0c\u90a3\u4e48\u52a8\u6001\u89c4\u5212\u662f\u66f4\u6709\u6548\u7684\u9009\u62e9\u3002 \u603b\u7ed3\u6765\u770b\uff0c\u5982\u679c\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u5355\u7eaf\u7684 \u5c40\u90e8\u6700\u4f18\u9009\u62e9 \u89e3\u51b3\uff0c\u5e76\u4e14\u672a\u6765\u7684\u9009\u62e9\u4e0d\u4f9d\u8d56\u4e8e\u8fc7\u53bb\u7684\u9009\u62e9\uff0c\u901a\u5e38\u53ef\u4ee5\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\uff1b\u5426\u5219\u9700\u8981\u901a\u8fc7\u52a8\u6001\u89c4\u5212\u6765\u89e3\u51b3\u95ee\u9898\u3002","title":"\u8d2a\u5fc3\u7b97\u6cd5 vs \u52a8\u6001\u89c4\u5212\u7684\u5224\u5b9a\u6807\u51c6"},{"location":"lesson13/Lesson13%20C%2B%2B/#_28","text":"","title":"\u7b80\u5355\u4f8b\u5b50"},{"location":"lesson13/Lesson13%20C%2B%2B/#1_2","text":"\u95ee\u9898\u63cf\u8ff0 \uff1a\u4f60\u6709\u4e00\u4e2a\u5bb9\u91cf\u4e3a 50 \u7684\u80cc\u5305\uff0c\u548c\u4e00\u5806\u7269\u54c1\uff0c\u6bcf\u4ef6\u7269\u54c1\u90fd\u6709\u91cd\u91cf\u548c\u4ef7\u503c\u3002\u4f60\u53ef\u4ee5\u5c06\u6bcf\u4ef6\u7269\u54c1\u6309\u4efb\u610f\u6bd4\u4f8b\u88c5\u5165\u80cc\u5305\uff08\u4f8b\u5982\u53ef\u4ee5\u88c5\u5165\u7269\u54c1\u7684\u4e00\u90e8\u5206\uff09\uff0c\u76ee\u6807\u662f\u8ba9\u80cc\u5305\u91cc\u7684\u7269\u54c1\u603b\u4ef7\u503c\u6700\u5927\u5316\u3002 \u8d2a\u5fc3\u7b56\u7565 \uff1a\u4f18\u5148\u9009\u62e9\u5355\u4f4d\u91cd\u91cf\u4ef7\u503c\u6700\u9ad8\u7684\u7269\u54c1\uff0c\u5c3d\u53ef\u80fd\u591a\u5730\u88c5\u5165\u80cc\u5305\u3002","title":"1. \u5206\u6570\u80cc\u5305\u95ee\u9898\uff08\u8d2a\u5fc3\u7b97\u6cd5\uff09"},{"location":"lesson13/Lesson13%20C%2B%2B/#_29","text":"\u660e\u786e\u8d2a\u5fc3\u7b56\u7565 \uff1a\u6bcf\u6b21\u9009\u62e9\u5355\u4f4d\u91cd\u91cf\u4ef7\u503c\u6700\u9ad8\u7684\u7269\u54c1\uff0c\u5c3d\u53ef\u80fd\u591a\u88c5\u5165\u80cc\u5305\u3002 \u6392\u5e8f \uff1a\u5c06\u6240\u6709\u7269\u54c1\u6309\u7167\u5355\u4f4d\u91cd\u91cf\u7684\u4ef7\u503c\u4ece\u9ad8\u5230\u4f4e\u6392\u5e8f\u3002 \u9010\u6b65\u9009\u62e9 \uff1a\u6309\u7167\u6392\u5e8f\u540e\u7684\u987a\u5e8f\uff0c\u4f18\u5148\u9009\u62e9\u5355\u4f4d\u4ef7\u503c\u6700\u9ad8\u7684\u7269\u54c1\uff0c\u76f4\u5230\u80cc\u5305\u88c5\u6ee1\u3002 \u68c0\u67e5\u53ef\u884c\u6027 \uff1a\u6bcf\u6b21\u9009\u62e9\u7269\u54c1\u65f6\uff0c\u68c0\u67e5\u80cc\u5305\u5269\u4f59\u5bb9\u91cf\u662f\u5426\u8db3\u591f\u3002\u5982\u679c\u5bb9\u91cf\u4e0d\u8db3\uff0c\u5c06\u7269\u54c1\u7684\u4e00\u90e8\u5206\u88c5\u5165\u80cc\u5305\u3002 \u6784\u9020\u89e3 \uff1a\u5c06\u9009\u5165\u80cc\u5305\u7684\u7269\u54c1\u7ec4\u5408\u8d77\u6765\uff0c\u8ba1\u7b97\u603b\u4ef7\u503c\uff0c\u5f97\u5230\u95ee\u9898\u7684\u89e3\u3002","title":"\u5206\u6790\u6b65\u9aa4\uff1a"},{"location":"lesson13/Lesson13%20C%2B%2B/#2-0-1","text":"\u95ee\u9898\u63cf\u8ff0 \uff1a\u4f60\u6709\u4e00\u4e2a\u5bb9\u91cf\u4e3a 50 \u7684\u80cc\u5305\u548c\u4e00\u5806\u7269\u54c1\uff0c\u6bcf\u4ef6\u7269\u54c1\u90fd\u6709\u4e00\u4e2a\u786e\u5b9a\u7684\u91cd\u91cf\u548c\u4ef7\u503c\u3002\u4f60\u53ea\u80fd\u9009\u62e9 \u5c06\u67d0\u4ef6\u7269\u54c1\u5b8c\u5168\u653e\u5165\u80cc\u5305 \u6216\u8005 \u4e0d\u653e\u5165 \uff0c\u4e0d\u80fd\u53ea\u88c5\u4e00\u90e8\u5206\u3002\u76ee\u6807\u662f\u9009\u62e9\u4e00\u4e9b\u7269\u54c1\u653e\u5165\u80cc\u5305\uff0c\u4f7f\u5f97\u80cc\u5305\u4e2d\u7684\u7269\u54c1\u603b\u4ef7\u503c\u6700\u5927\u5316\u3002 \u52a8\u6001\u89c4\u5212\u601d\u8def \uff1a\u5bf9\u4e8e\u6bcf\u4ef6\u7269\u54c1\uff0c\u4f60\u9700\u8981\u51b3\u5b9a\u662f\u5426\u653e\u5165\u80cc\u5305\u3002\u6bcf\u6b21\u7684\u9009\u62e9\u90fd\u4f9d\u8d56\u4e8e\u80cc\u5305\u5f53\u524d\u7684\u5bb9\u91cf\u4ee5\u53ca\u4e4b\u524d\u7684\u9009\u62e9\u3002\u56e0\u4e3a\u9009\u62e9\u4e00\u6b21\u7269\u54c1\u4f1a\u5f71\u54cd\u5230\u540e\u7eed\u80fd\u88c5\u591a\u5c11\u4e1c\u897f\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u800c\u9700\u8981\u901a\u8fc7\u52a8\u6001\u89c4\u5212\u6765\u8003\u8651\u6240\u6709\u53ef\u80fd\u7684\u7ec4\u5408\u3002","title":"2. 0-1 \u80cc\u5305\u95ee\u9898\uff08\u52a8\u6001\u89c4\u5212\uff09"},{"location":"lesson13/Lesson13%20C%2B%2B/#_30","text":"\u72b6\u6001 \uff1a\u6211\u4eec\u7528 dp[i][w] \u8868\u793a \u524d i \u4e2a\u7269\u54c1 \u5728 \u5bb9\u91cf\u4e3a w \u7684\u80cc\u5305 \u4e2d\u6240\u80fd\u88c5\u7684\u6700\u5927\u603b\u4ef7\u503c\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c dp[i][w] \u662f\u4e00\u4e2a\u4e2d\u95f4\u7ed3\u679c\uff0c\u544a\u8bc9\u6211\u4eec\u5982\u679c\u53ea\u8003\u8651\u524d i \u4e2a\u7269\u54c1\uff0c\u5e76\u4e14\u80cc\u5305\u5bb9\u91cf\u4e3a w\uff0c\u6211\u4eec\u80fd\u88c5\u7684\u6700\u9ad8\u4ef7\u503c\u662f\u591a\u5c11\u3002 \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b \uff1a\u8fd9\u4e2a\u5c31\u662f\u52a8\u6001\u89c4\u5212\u4e2d\u7684\u201c\u89c4\u5219\u201d\uff0c\u7528\u6765\u6307\u5bfc\u6211\u4eec\u5982\u4f55\u6839\u636e\u524d\u9762\u7684\u8ba1\u7b97\u7ed3\u679c\u63a8\u5bfc\u51fa\u5f53\u524d\u7684\u6700\u4f18\u89e3\u3002 \u5bf9\u4e8e\u6bcf\u4ef6\u7269\u54c1 i \uff0c\u4f60\u6709\u4e24\u79cd\u9009\u62e9\uff1a - \u4e0d\u9009\u8fd9\u4ef6\u7269\u54c1 \uff1a\u90a3\u4e48\u6700\u5927\u4ef7\u503c\u5c31\u662f dp[i-1][w] \uff0c\u5373\u80cc\u5305\u5bb9\u91cf\u4fdd\u6301\u4e0d\u53d8\uff0c\u524d\u9762 i-1 \u4e2a\u7269\u54c1\u7684\u6700\u4f18\u89e3\u3002 - \u9009\u8fd9\u4ef6\u7269\u54c1 \uff1a\u5982\u679c\u9009\u62e9\u7269\u54c1 i \uff0c\u5219\u5f53\u524d\u7684\u80cc\u5305\u5bb9\u91cf\u51cf\u5c11 weight[i] \uff0c\u800c\u6211\u4eec\u8fd8\u83b7\u5f97\u4e86 value[i] \u8fd9\u4e2a\u7269\u54c1\u7684\u4ef7\u503c\u3002\u6240\u4ee5\u6700\u5927\u4ef7\u503c\u53d8\u6210\u4e86 dp[i-1][w - weight[i]] + value[i] \u3002 \u4e24\u8005\u53d6\u8f83\u5927\u503c\uff1a dp[i][w] = max(dp[i-1][w], dp[i-1][w - weight[i]] + value[i]) \u7406\u89e3\u8fd9\u6bb5\u516c\u5f0f \uff1a \u5982\u679c\u4f60\u4e0d\u9009\u7269\u54c1 i \uff0c\u90a3\u4e48\u4f60\u53ea\u80fd\u4f9d\u8d56\u524d\u9762 i-1 \u4e2a\u7269\u54c1\u5728\u5bb9\u91cf\u4e3a w \u65f6\u7684\u6700\u4f18\u89e3\uff0c\u5373 dp[i-1][w] \u3002 \u5982\u679c\u4f60\u9009\u4e86\u7269\u54c1 i \uff0c\u90a3\u4f60\u9700\u8981\u817e\u51fa\u8db3\u591f\u7684\u7a7a\u95f4\u6765\u653e\u5b83\uff0c\u4e5f\u5c31\u662f\u8bf4\u80cc\u5305\u5bb9\u91cf\u4f1a\u51cf\u5c11 weight[i] \uff0c\u7136\u540e\u4f60\u80fd\u83b7\u5f97\u8fd9\u4ef6\u7269\u54c1\u7684\u4ef7\u503c value[i] \uff0c\u518d\u52a0\u4e0a\u524d i-1 \u4e2a\u7269\u54c1\u5728\u51cf\u5c11\u4e86\u7684\u5bb9\u91cf w - weight[i] \u65f6\u7684\u6700\u4f18\u89e3\uff0c\u5373 dp[i-1][w - weight[i]] \u3002 \u5982\u4f55\u6c42\u89e3 \uff1a\u6211\u4eec\u4ece\u7a7a\u80cc\u5305\u5f00\u59cb\uff0c\u9010\u6b65\u589e\u52a0\u7269\u54c1\u548c\u5bb9\u91cf\uff0c\u6bcf\u6b21\u7528\u4e0a\u9762\u8fd9\u4e2a\u516c\u5f0f\u53bb\u66f4\u65b0\u5f53\u524d\u80cc\u5305\u5bb9\u91cf\u7684\u6700\u4f18\u89e3\u3002\u901a\u8fc7\u8fd9\u4e2a\u9012\u63a8\u8fc7\u7a0b\uff0c\u6700\u540e\u5c31\u80fd\u5f97\u5230\u6574\u4e2a\u80cc\u5305\u7684\u6700\u5927\u4ef7\u503c\u3002","title":"\u7528\u7b80\u5355\u7684\u8bdd\u6765\u7406\u89e3\u52a8\u6001\u89c4\u5212\u7684\u601d\u8def\uff1a"},{"location":"lesson13/Lesson13%20C%2B%2B/#_31","text":"\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u80cc\u5305\u5bb9\u91cf\u4e3a 5\uff0c\u7269\u54c1\u5982\u4e0b\uff1a - \u7269\u54c1 1\uff1a\u91cd\u91cf 2\uff0c\u4ef7\u503c 3 - \u7269\u54c1 2\uff1a\u91cd\u91cf 3\uff0c\u4ef7\u503c 4 - \u7269\u54c1 3\uff1a\u91cd\u91cf 4\uff0c\u4ef7\u503c 5 \u52a8\u6001\u89c4\u5212\u8868\u7684\u6784\u5efa\u8fc7\u7a0b \uff1a i\\w 0 1 2 3 4 5 0 0 0 0 0 0 0 1 0 0 3 3 3 3 2 0 0 3 4 4 7 3 0 0 3 4 5 7 \u5f53 i = 1 \uff08\u53ea\u8003\u8651\u7269\u54c11\uff09\uff1a\u7269\u54c11\u7684\u91cd\u91cf\u4e3a2\uff0c\u6240\u4ee5\u5f53\u80cc\u5305\u5bb9\u91cf\u5c0f\u4e8e2\u65f6\uff0c\u65e0\u6cd5\u653e\u5165\uff0c\u4ef7\u503c\u4e3a0\uff1b\u5f53\u5bb9\u91cf\u7b49\u4e8e2\u6216\u5927\u4e8e2\u65f6\uff0c\u653e\u5165\u7269\u54c11\uff0c\u4ef7\u503c\u4e3a3\u3002 \u5f53 i = 2 \uff08\u8003\u8651\u524d\u4e24\u4e2a\u7269\u54c1\uff09\uff1a\u5728\u5bb9\u91cf\u4e3a3\u65f6\uff0c\u653e\u5165\u7269\u54c12\u6bd4\u7269\u54c11\u597d\uff0c\u4ef7\u503c\u4e3a4\uff1b\u5f53\u5bb9\u91cf\u4e3a5\u65f6\uff0c\u653e\u5165\u7269\u54c11\u548c\u7269\u54c12\uff0c\u4ef7\u503c\u4e3a7\u3002 \u5f53 i = 3 \uff08\u8003\u8651\u4e09\u4e2a\u7269\u54c1\uff09\uff1a\u7269\u54c13\u592a\u91cd\uff0c\u4e0d\u80fd\u653e\u5165\u80cc\u5305\uff0c\u4e4b\u524d\u7684\u6700\u4f18\u503c\u4fdd\u6301\u4e0d\u53d8\u3002 \u6700\u7ec8\uff0c\u6211\u4eec\u5f97\u5230\u7684\u6700\u5927\u4ef7\u503c\u4e3a7\u3002","title":"\u4e3e\u4e2a\u7b80\u5355\u4f8b\u5b50\uff1a"},{"location":"lesson13/Lesson13%20C%2B%2B/#3_2","text":"\u95ee\u9898 \uff1a\u4f60\u6709\u4e00\u7cfb\u5217\u6d3b\u52a8\uff0c\u6bcf\u4e2a\u6d3b\u52a8\u90fd\u6709\u5f00\u59cb\u65f6\u95f4\u548c\u7ed3\u675f\u65f6\u95f4\u3002\u4f60\u9700\u8981\u9009\u62e9\u5c3d\u53ef\u80fd\u591a\u7684\u6d3b\u52a8\uff0c\u5e76\u4e14\u8fd9\u4e9b\u6d3b\u52a8\u4e0d\u80fd\u91cd\u53e0\u3002 \u8d2a\u5fc3\u7b56\u7565 \uff1a\u6bcf\u6b21\u9009\u62e9\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u4e14\u4e0d\u4e0e\u5176\u4ed6\u6d3b\u52a8\u51b2\u7a81\u7684\u6d3b\u52a8\u3002 \u6b65\u9aa4 \uff1a 1. \u660e\u786e\u8d2a\u5fc3\u7b56\u7565 \uff1a\u6bcf\u6b21\u9009\u62e9\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u7684\u6d3b\u52a8\uff0c\u4ee5\u7559\u51fa\u66f4\u591a\u65f6\u95f4\u7ed9\u5176\u4ed6\u6d3b\u52a8\u3002 2. \u6392\u5e8f \uff1a\u5c06\u6d3b\u52a8\u6309\u7ed3\u675f\u65f6\u95f4\u4ece\u65e9\u5230\u665a\u6392\u5e8f\u3002 3. \u9010\u6b65\u9009\u62e9 \uff1a\u4ece\u7b2c\u4e00\u4e2a\u6d3b\u52a8\u5f00\u59cb\uff0c\u4f9d\u6b21\u9009\u62e9\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u4e14\u4e0e\u4e4b\u524d\u6d3b\u52a8\u4e0d\u51b2\u7a81\u7684\u6d3b\u52a8\u3002 4. \u68c0\u67e5\u53ef\u884c\u6027 \uff1a\u6bcf\u6b21\u9009\u62e9\u6d3b\u52a8\u65f6\uff0c\u68c0\u67e5\u8be5\u6d3b\u52a8\u662f\u5426\u4e0e\u5df2\u7ecf\u9009\u62e9\u7684\u6d3b\u52a8\u51b2\u7a81\u3002 5. \u6784\u9020\u89e3 \uff1a\u5c06\u6bcf\u6b21\u9009\u62e9\u7684\u6d3b\u52a8\u52a0\u5165\u6700\u7ec8\u89e3\uff0c\u76f4\u5230\u6ca1\u6709\u6d3b\u52a8\u53ef\u4ee5\u518d\u9009\u3002","title":"3. \u6d3b\u52a8\u9009\u62e9\u95ee\u9898\uff08\u8d2a\u5fc3\u7b97\u6cd5\uff09"},{"location":"lesson13/Lesson13%20C%2B%2B/#_32","text":"\u8d2a\u5fc3\u7b97\u6cd5\u5e76\u4e0d\u603b\u662f\u80fd\u627e\u5230\u6700\u4f18\u89e3\u3002\u6bd4\u5982\uff1a","title":"\u8d2a\u5fc3\u7b97\u6cd5\u7684\u5c40\u9650\u6027"},{"location":"lesson13/Lesson13%20C%2B%2B/#1-0-1","text":"\u5728\u8fd9\u4e2a\u95ee\u9898\u4e2d\uff0c\u4f60\u5fc5\u987b\u9009\u62e9 \u5b8c\u6574\u7684\u7269\u54c1 \uff08\u8981\u4e48\u5168\u9009\uff0c\u8981\u4e48\u4e0d\u9009\uff09\uff0c\u800c\u4e0d\u80fd\u9009\u62e9\u7269\u54c1\u7684\u4e00\u90e8\u5206\u3002\u5982\u679c\u4f60\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\u6765\u9009\u62e9\u5355\u4f4d\u4ef7\u503c\u6700\u9ad8\u7684\u7269\u54c1\uff0c\u5f88\u53ef\u80fd\u4f1a\u56e0\u4e3a\u91cd\u91cf\u9650\u5236\u800c\u65e0\u6cd5\u9009\u62e9\u6700\u4f18\u7ec4\u5408\u3002","title":"1. 0-1 \u80cc\u5305\u95ee\u9898"},{"location":"lesson13/Lesson13%20C%2B%2B/#2_2","text":"\u5728\u67d0\u4e9b\u56fe\u4e0a\uff0c\u8d2a\u5fc3\u7b56\u7565\uff08\u603b\u662f\u9009\u62e9\u8ddd\u79bb\u6700\u8fd1\u7684\u8282\u70b9\uff09\u5e76\u4e0d\u603b\u80fd\u627e\u5230\u6700\u77ed\u8def\u5f84\u3002","title":"2. \u6700\u77ed\u8def\u5f84\u95ee\u9898"},{"location":"lesson13/Lesson13%20C%2B%2B/#_33","text":"\u8d2a\u5fc3\u7b97\u6cd5\u662f\u4e00\u79cd\u7b80\u5355\u800c\u9ad8\u6548\u7684\u7b56\u7565\uff0c\u9002\u5408\u7528\u5728\u90a3\u4e9b \u53ef\u4ee5\u901a\u8fc7\u5c40\u90e8\u6700\u4f18\u89e3\u5f97\u5230\u5168\u5c40\u6700\u4f18\u89e3 \u7684\u95ee\u9898\u4e0a\u3002\u5b83\u7684\u5173\u952e\u5728\u4e8e\u6bcf\u4e00\u6b65\u90fd\u505a\u51fa\u6700\u597d\u7684\u5c40\u90e8\u9009\u62e9\uff0c\u5e0c\u671b\u6700\u7ec8\u5f97\u5230\u6700\u4f18\u89e3\u3002\u867d\u7136\u5e76\u4e0d\u662f\u6240\u6709\u95ee\u9898\u90fd\u9002\u5408\u7528\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u4f46\u5728\u5408\u9002\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u80fd\u5feb\u901f\u627e\u5230\u89e3\u3002","title":"\u603b\u7ed3\uff1a"},{"location":"lesson13/Lesson13%20C%2B%2B/#31","text":"","title":"3.1 \u8d2a\u5fc3\u7b97\u6cd5\u4f8b\u9898\u8bb2\u89e3"},{"location":"lesson13/Lesson13%20C%2B%2B/#311-lc455","text":"\u9898\u76ee\u63cf\u8ff0 \uff1a\u6709 g \u4e2a\u5b69\u5b50\u548c s \u4e2a\u997c\u5e72\uff0c\u6bcf\u4e2a\u5b69\u5b50\u90fd\u6709\u4e00\u4e2a\u8d2a\u5fc3\u6307\u6570\uff0c\u8868\u793a\u4ed6\u6700\u5c11\u9700\u8981\u591a\u5c11\u997c\u5e72\u3002\u6bcf\u4e2a\u997c\u5e72\u90fd\u6709\u4e00\u4e2a\u5927\u5c0f\uff0c\u8868\u793a\u5b83\u53ef\u4ee5\u6ee1\u8db3\u67d0\u4e2a\u5b69\u5b50\u7684\u9700\u6c42\u3002\u4f60\u8981\u5206\u53d1\u5c3d\u53ef\u80fd\u591a\u7684\u997c\u5e72\u7ed9\u5b69\u5b50\uff0c\u4f7f\u5f97\u6700\u591a\u7684\u5b69\u5b50\u80fd\u5f97\u5230\u6ee1\u8db3\u3002 \u8d2a\u5fc3\u7b97\u6cd5\u6b65\u9aa4 \uff1a 1. \u6392\u5e8f \uff1a\u5c06\u5b69\u5b50\u7684\u9700\u6c42\uff08\u8d2a\u5fc3\u6307\u6570\uff09\u548c\u997c\u5e72\u7684\u5927\u5c0f\u90fd\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\u3002 - \u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u6211\u4eec\u53ef\u4ee5\u7528\u6700\u5c0f\u7684\u997c\u5e72\u53bb\u6ee1\u8db3\u6700\u5c0f\u9700\u6c42\u7684\u5b69\u5b50\uff0c\u4ece\u800c\u5c3d\u53ef\u80fd\u6ee1\u8db3\u66f4\u591a\u7684\u5b69\u5b50\u3002 \u5339\u914d \uff1a\u4ece\u6700\u5c0f\u7684\u997c\u5e72\u548c\u6700\u5c0f\u9700\u6c42\u7684\u5b69\u5b50\u5f00\u59cb\u5339\u914d\u3002 \u6bcf\u6b21\u5982\u679c\u997c\u5e72\u5927\u5c0f\u53ef\u4ee5\u6ee1\u8db3\u5f53\u524d\u5b69\u5b50\u7684\u9700\u6c42\uff0c\u5c31\u5c06\u8fd9\u4e2a\u997c\u5e72\u5206\u914d\u7ed9\u8fd9\u4e2a\u5b69\u5b50\uff0c\u7136\u540e\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u5b69\u5b50\u3002 \u5982\u679c\u5f53\u524d\u997c\u5e72\u4e0d\u591f\u6ee1\u8db3\u5b69\u5b50\u9700\u6c42\uff0c\u5c31\u7ee7\u7eed\u5c1d\u8bd5\u4e0b\u4e00\u4e2a\u66f4\u5927\u7684\u997c\u5e72\uff0c\u76f4\u5230\u6240\u6709\u5b69\u5b50\u6216\u997c\u5e72\u7528\u5b8c\u3002","title":"3.1.1 LC455: \u5206\u53d1\u997c\u5e72"},{"location":"lesson13/Lesson13%20C%2B%2B/#_34","text":"class Solution { public: int findContentChildren(vector<int>& g, vector<int>& s) { // \u5c06\u5b69\u5b50\u7684\u9700\u6c42\u548c\u997c\u5e72\u7684\u5927\u5c0f\u6392\u5e8f sort(g.begin(), g.end()); sort(s.begin(), s.end()); int i = 0, j = 0; // \u904d\u5386\u5b69\u5b50\u548c\u997c\u5e72\u6570\u7ec4 while (i < g.size() && j < s.size()) { // \u5982\u679c\u5f53\u524d\u997c\u5e72\u80fd\u6ee1\u8db3\u5f53\u524d\u5b69\u5b50 if (s[j] >= g[i]) { i++; // \u6ee1\u8db3\u4e86\u5b69\u5b50 i\uff0c\u5904\u7406\u4e0b\u4e00\u4e2a\u5b69\u5b50 } j++; // \u5c1d\u8bd5\u4e0b\u4e00\u4e2a\u997c\u5e72 } return i; // \u8fd4\u56de\u6ee1\u8db3\u7684\u5b69\u5b50\u6570\u91cf } };","title":"\u4ee3\u7801\u5b9e\u73b0\uff1a"},{"location":"lesson13/Lesson13%20C%2B%2B/#_35","text":"\u6392\u5e8f\u6b65\u9aa4 \uff1a \u9996\u5148\u5c06\u5b69\u5b50\u7684\u9700\u6c42\u6570\u7ec4 g \u548c\u997c\u5e72\u5927\u5c0f\u6570\u7ec4 s \u8fdb\u884c\u6392\u5e8f\u3002\u6392\u5e8f\u540e\uff0c\u8f83\u5c0f\u7684\u5b69\u5b50\u9700\u6c42\u548c\u8f83\u5c0f\u7684\u997c\u5e72\u4f1a\u6392\u5217\u5728\u6570\u7ec4\u524d\u9762\uff0c\u8fd9\u6837\u53ef\u4ee5\u5c3d\u91cf\u7528\u6700\u5c0f\u7684\u997c\u5e72\u53bb\u6ee1\u8db3\u6700\u5c0f\u9700\u6c42\u7684\u5b69\u5b50\u3002 \u5339\u914d\u8fc7\u7a0b \uff1a \u901a\u8fc7\u4e24\u4e2a\u6307\u9488 i \u548c j \u5206\u522b\u6307\u5411\u5b69\u5b50\u548c\u997c\u5e72\u7684\u6570\u7ec4\u3002\u521d\u59cb\u65f6\uff0c i = 0 \uff0c j = 0 \uff0c\u8868\u793a\u4ece\u7b2c\u4e00\u4e2a\u5b69\u5b50\u548c\u7b2c\u4e00\u4e2a\u997c\u5e72\u5f00\u59cb\u3002 \u5f53 s[j] >= g[i] \u65f6\uff0c\u8868\u793a\u5f53\u524d\u997c\u5e72\u53ef\u4ee5\u6ee1\u8db3\u5f53\u524d\u5b69\u5b50\u7684\u9700\u6c42\uff0c\u5b69\u5b50\u88ab\u6ee1\u8db3\uff0c\u79fb\u52a8\u6307\u9488 i \uff0c\u5904\u7406\u4e0b\u4e00\u4e2a\u5b69\u5b50\u3002 \u65e0\u8bba\u662f\u5426\u6ee1\u8db3\uff0c\u997c\u5e72\u90fd\u4f1a\u88ab\u4f7f\u7528\uff0c\u6240\u4ee5 j++ \u6bcf\u6b21\u90fd\u4f1a\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u997c\u5e72\u3002 \u6700\u7ec8\u7ed3\u679c \uff1a \u5f53\u904d\u5386\u7ed3\u675f\u65f6\uff0c i \u7684\u503c\u5c31\u662f\u80fd\u591f\u6ee1\u8db3\u7684\u5b69\u5b50\u6570\u91cf\uff0c\u5373\u6700\u540e\u8fd4\u56de\u7684\u7ed3\u679c\u3002","title":"\u8bb2\u89e3\uff1a"},{"location":"lesson13/Lesson13%20C%2B%2B/#32","text":"","title":"3.2 \u8d2a\u5fc3\u7b97\u6cd5\u4e3e\u4e00\u53cd\u4e09"},{"location":"lesson13/Lesson13%20C%2B%2B/#321-lc-435","text":"\u9898\u76ee\u63cf\u8ff0 \uff1a\u7ed9\u5b9a\u4e00\u7ec4\u533a\u95f4\uff0c\u627e\u5230\u6700\u5c11\u9700\u8981\u79fb\u9664\u7684\u533a\u95f4\u6570\u91cf\uff0c\u4f7f\u5f97\u5269\u4e0b\u7684\u533a\u95f4\u4e92\u4e0d\u91cd\u53e0\u3002 \u8d2a\u5fc3\u7b97\u6cd5\u6b65\u9aa4 \uff1a 1. \u6392\u5e8f \uff1a\u6309\u7167\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\u3002\u6392\u5e8f\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f18\u5148\u9009\u62e9\u7ed3\u675f\u65f6\u95f4\u8f83\u65e9\u7684\u533a\u95f4\uff0c\u8fd9\u6837\u80fd\u591f\u4e3a\u540e\u7eed\u533a\u95f4\u7559\u51fa\u66f4\u591a\u7a7a\u95f4\uff0c\u51cf\u5c11\u51b2\u7a81\u3002 \u9009\u62e9\u533a\u95f4 \uff1a\u6bcf\u6b21\u9009\u62e9\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u4e14\u4e0d\u4e0e\u524d\u4e00\u4e2a\u9009\u62e9\u7684\u533a\u95f4\u91cd\u53e0\u7684\u533a\u95f4\u3002\u5982\u679c\u5f53\u524d\u533a\u95f4\u7684\u5f00\u59cb\u65f6\u95f4\u5c0f\u4e8e\u524d\u4e00\u4e2a\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4\uff0c\u8bf4\u660e\u53d1\u751f\u4e86\u91cd\u53e0\uff0c\u6211\u4eec\u5c31\u9700\u8981\u79fb\u9664\u5f53\u524d\u533a\u95f4\u3002\u5426\u5219\uff0c\u6211\u4eec\u66f4\u65b0\u5f53\u524d\u533a\u95f4\u4e3a\u65b0\u7684\u7ed3\u675f\u65f6\u95f4\uff0c\u5e76\u7ee7\u7eed\u5904\u7406\u4e0b\u4e00\u4e2a\u533a\u95f4\u3002","title":"3.2.1 LC 435: \u65e0\u91cd\u53e0\u533a\u95f4"},{"location":"lesson13/Lesson13%20C%2B%2B/#_36","text":"class Solution { public: // \u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\uff0c\u6309\u7ed3\u675f\u65f6\u95f4\u6392\u5e8f bool compareIntervals(const vector<int>& a, const vector<int>& b) { return a[1] < b[1]; // \u6309\u7167\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4\u5347\u5e8f\u6392\u5217 } int eraseOverlapIntervals(vector<vector<int>>& intervals) { if (intervals.empty()) return 0; // \u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u6bd4\u8f83\u51fd\u6570\u8fdb\u884c\u6392\u5e8f sort(intervals.begin(), intervals.end(), compareIntervals); int count = 0; int end = intervals[0][1]; for (int i = 1; i < intervals.size(); i++) { if (intervals[i][0] < end) { count++; } else { end = intervals[i][1]; } } return count; } }; \u8bb2\u89e3 \uff1a 1. \u6392\u5e8f\u6b65\u9aa4 \uff1a - \u6309\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4\u5bf9\u6240\u6709\u533a\u95f4\u8fdb\u884c\u6392\u5e8f\u3002\u6392\u5e8f\u540e\u7684\u533a\u95f4\u6309\u7ed3\u675f\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u6392\u5217\uff0c\u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u6211\u4eec\u6bcf\u6b21\u9009\u62e9\u7684\u533a\u95f4\u7ed3\u675f\u5f97\u6700\u65e9\uff0c\u80fd\u591f\u5c3d\u91cf\u907f\u514d\u540e\u7eed\u533a\u95f4\u4e0e\u5176\u53d1\u751f\u91cd\u53e0\u3002 \u904d\u5386\u9009\u62e9\u533a\u95f4 \uff1a \u521d\u59cb\u5316\u4e00\u4e2a end \u53d8\u91cf\uff0c\u8868\u793a\u5df2\u9009\u5b9a\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4\u3002\u904d\u5386\u5269\u4f59\u533a\u95f4\u65f6\uff0c\u68c0\u67e5\u6bcf\u4e2a\u533a\u95f4\u7684\u5f00\u59cb\u65f6\u95f4\u662f\u5426\u4e0e\u5f53\u524d\u9009\u5b9a\u7684\u7ed3\u675f\u65f6\u95f4\u53d1\u751f\u91cd\u53e0\u3002\u5982\u679c\u5f53\u524d\u533a\u95f4\u7684\u5f00\u59cb\u65f6\u95f4\u5c0f\u4e8e end \uff0c\u8bf4\u660e\u53d1\u751f\u4e86\u91cd\u53e0\uff0c\u5fc5\u987b\u79fb\u9664\u5f53\u524d\u533a\u95f4\u3002\u5982\u679c\u6ca1\u6709\u91cd\u53e0\uff0c\u5219\u66f4\u65b0 end \u4e3a\u5f53\u524d\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a count \u8bb0\u5f55\u4e86\u88ab\u79fb\u9664\u7684\u533a\u95f4\u6570\uff0c\u904d\u5386\u7ed3\u675f\u540e\uff0c\u8fd4\u56de\u8fd9\u4e2a\u79fb\u9664\u7684\u533a\u95f4\u6570\u3002","title":"\u4ee3\u7801\u5b9e\u73b0\uff1a"},{"location":"lesson13/Lesson13%20C%2B%2B/#322-lc-605","text":"\u9898\u76ee\u63cf\u8ff0 \uff1a \u7ed9\u5b9a\u4e00\u4e2a\u8868\u793a\u82b1\u575b\u7684\u6574\u6570\u6570\u7ec4 flowerbed \uff0c\u5176\u4e2d flowerbed[i] = 0 \u8868\u793a\u8be5\u4f4d\u7f6e\u662f\u7a7a\u7684\uff0c flowerbed[i] = 1 \u8868\u793a\u8be5\u4f4d\u7f6e\u5df2\u7ecf\u79cd\u4e86\u82b1\u3002\u82b1\u575b\u4e2d\u82b1\u4e0d\u80fd\u79cd\u5728\u76f8\u90bb\u7684\u5730\u5757\u4e0a\uff0c\u95ee\u662f\u5426\u80fd\u591f\u5728\u4e0d\u8fdd\u53cd\u89c4\u5219\u7684\u60c5\u51b5\u4e0b\u518d\u79cd\u4e0b n \u6735\u82b1\u3002 \u4f8b\u5982\uff1a - \u8f93\u5165\uff1a flowerbed = [1,0,0,0,1], n = 1 - \u8f93\u51fa\uff1a true - \u89e3\u91ca\uff1a\u6211\u4eec\u53ef\u4ee5\u5728\u4e0b\u6807\u4e3a 2 \u7684\u5730\u65b9\u79cd\u4e00\u6735\u82b1\u3002 \u8f93\u5165\uff1a flowerbed = [1,0,0,0,1], n = 2 \u8f93\u51fa\uff1a false \u89e3\u91ca\uff1a\u4e0d\u80fd\u79cd\u4e0b\u4e24\u6735\u82b1\u800c\u4e0d\u8fdd\u53cd\u76f8\u90bb\u89c4\u5219\u3002 \u8d2a\u5fc3\u7b97\u6cd5\u6b65\u9aa4 \uff1a 1. \u904d\u5386\u82b1\u575b \uff1a\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u68c0\u67e5\u6bcf\u4e2a\u4f4d\u7f6e\u3002\u5982\u679c\u5f53\u524d\u4f4d\u7f6e\u662f\u7a7a\u7684 0 \uff0c\u5e76\u4e14\u5b83\u7684\u524d\u4e00\u4e2a\u4f4d\u7f6e\u548c\u540e\u4e00\u4e2a\u4f4d\u7f6e\u4e5f\u662f\u7a7a\u7684\uff08\u5982\u679c\u5b58\u5728\uff09\uff0c\u90a3\u4e48\u53ef\u4ee5\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u79cd\u82b1\u3002 \u8ba1\u6570\u5e76\u8df3\u8fc7\u76f8\u90bb\u4f4d\u7f6e \uff1a\u6bcf\u6b21\u6210\u529f\u79cd\u82b1\u540e\uff0c\u589e\u52a0\u8ba1\u6570\uff0c\u5e76\u8df3\u8fc7\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u76f8\u90bb\u4f4d\u7f6e\u4e0d\u80fd\u79cd\u82b1\u3002","title":"3.2.2 LC 605: \u79cd\u82b1\u95ee\u9898"},{"location":"lesson13/Lesson13%20C%2B%2B/#_37","text":"class Solution { public: bool canPlaceFlowers(vector<int>& flowerbed, int n) { int count = 0; // \u8bb0\u5f55\u53ef\u4ee5\u79cd\u82b1\u7684\u6570\u91cf // \u904d\u5386\u6574\u4e2a\u82b1\u575b for (int i = 0; i < flowerbed.size(); i++) { // \u5224\u65ad\u5f53\u524d\u4f4d\u7f6e\u662f\u5426\u53ef\u4ee5\u79cd\u82b1\uff08\u68c0\u67e5\u524d\u540e\u4f4d\u7f6e\uff0c\u6ce8\u610f\u8fb9\u754c\u6761\u4ef6\uff09 if (flowerbed[i] == 0 && (i == 0 || flowerbed[i - 1] == 0) && (i == flowerbed.size() - 1 || flowerbed[i + 1] == 0)) { flowerbed[i] = 1; // \u79cd\u82b1 count++; // \u8ba1\u6570\u589e\u52a0 i++; // \u8df3\u8fc7\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u907f\u514d\u76f8\u90bb\u79cd\u82b1 } if (count >= n) return true; // \u5982\u679c\u79cd\u591f n \u6735\u82b1\uff0c\u8fd4\u56de true } return count >= n; // \u904d\u5386\u7ed3\u675f\uff0c\u68c0\u67e5\u662f\u5426\u79cd\u591f n \u6735\u82b1 } }; \u8bb2\u89e3\uff1a \u904d\u5386\u5224\u65ad\u80fd\u5426\u79cd\u82b1 \uff1a \u904d\u5386\u6574\u4e2a\u82b1\u575b\uff0c\u68c0\u67e5\u6bcf\u4e2a\u4f4d\u7f6e\u662f\u5426\u53ef\u4ee5\u79cd\u82b1\u3002\u5f53\u524d\u4f4d\u7f6e\u5fc5\u987b\u6ee1\u8db3\u4e09\u4e2a\u6761\u4ef6\u624d\u80fd\u79cd\u82b1\uff1a\u5f53\u524d\u4e3a 0 \uff0c\u524d\u4e00\u4e2a\u4f4d\u7f6e\uff08\u5982\u679c\u5b58\u5728\uff09\u4e3a 0 \uff0c\u540e\u4e00\u4e2a\u4f4d\u7f6e\uff08\u5982\u679c\u5b58\u5728\uff09\u4e5f\u4e3a 0 \u3002\u6ce8\u610f\u68c0\u67e5\u82b1\u575b\u7684\u8fb9\u754c\uff08\u5373\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\uff09\u65f6\uff0c\u4e0d\u9700\u8981\u68c0\u67e5\u4e0d\u5b58\u5728\u7684\u524d\u540e\u4f4d\u7f6e\u3002 \u79cd\u82b1\u540e\u8df3\u8fc7\u76f8\u90bb\u4f4d\u7f6e \uff1a \u6bcf\u6b21\u6210\u529f\u79cd\u82b1\u540e\uff0c\u8df3\u8fc7\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u6839\u636e\u89c4\u5219\uff0c\u76f8\u90bb\u7684\u4f4d\u7f6e\u4e0d\u80fd\u79cd\u82b1\u3002 \u63d0\u524d\u7ec8\u6b62 \uff1a \u5982\u679c\u5728\u904d\u5386\u8fc7\u7a0b\u4e2d\u5df2\u7ecf\u79cd\u591f\u4e86 n \u6735\u82b1\uff0c\u5219\u53ef\u4ee5\u63d0\u524d\u8fd4\u56de true \u3002\u5982\u679c\u904d\u5386\u7ed3\u675f\u540e\u8fd8\u6ca1\u6709\u79cd\u591f\uff0c\u5219\u8fd4\u56de false \u3002","title":"\u4ee3\u7801\u5b9e\u73b0\uff1a"},{"location":"lesson13/Lesson13%20C%2B%2B/#323-lc-1029","text":"\u9898\u76ee\u63cf\u8ff0 \uff1a \u6709 2N \u4e2a\u4eba\uff0c\u6bcf\u4e2a\u4eba\u90fd\u9700\u8981\u98de\u5f80 A \u5e02\u6216 B \u5e02\u3002\u7ed9\u5b9a\u4e00\u4e2a costs \u6570\u7ec4\uff0c\u5176\u4e2d costs[i] = [aCost, bCost] \u8868\u793a\u7b2c i \u4e2a\u4eba\u98de\u5f80 A \u5e02\u7684\u8d39\u7528\u548c\u98de\u5f80 B \u5e02\u7684\u8d39\u7528\u3002\u73b0\u5728\u9700\u8981\u628a\u8fd9\u4e9b\u4eba\u5206\u914d\u5230\u4e24\u4e2a\u57ce\u5e02\uff0c\u4f7f\u5f97 N \u4e2a\u4eba\u98de\u5f80 A \u5e02\uff0c N \u4e2a\u4eba\u98de\u5f80 B \u5e02\uff0c\u8981\u6c42\u603b\u8d39\u7528\u6700\u5c0f\u3002 \u8d2a\u5fc3\u7b97\u6cd5\u6b65\u9aa4 \uff1a 1. \u8ba1\u7b97\u6210\u672c\u5dee\u5f02 \uff1a\u6211\u4eec\u8ba1\u7b97\u6bcf\u4e2a\u4eba\u53bb A \u5e02\u548c B \u5e02\u7684\u8d39\u7528\u5dee\uff0c\u5373 aCost - bCost \u3002\u6211\u4eec\u5e0c\u671b\u4f18\u5148\u8ba9\u90a3\u4e9b\u53bb B \u5e02\u66f4\u4fbf\u5b9c\u7684\u4eba\u53bb B \u5e02\uff0c\u800c\u8ba9\u53bb A \u5e02\u66f4\u4fbf\u5b9c\u7684\u4eba\u53bb A \u5e02\u3002 \u6392\u5e8f\u9009\u62e9 \uff1a\u6839\u636e\u53bb A \u5e02\u548c B \u5e02\u7684\u8d39\u7528\u5dee\u5f02\u6392\u5e8f\u3002\u5dee\u5f02\u8d8a\u5927\u7684\u4eba\uff0c\u610f\u5473\u7740\u53bb A \u5e02\u6216 B \u5e02\u5bf9\u6210\u672c\u5f71\u54cd\u8d8a\u5927\uff0c\u56e0\u6b64\u6211\u4eec\u4f18\u5148\u8003\u8651\u8fd9\u4e9b\u4eba\u3002 \u5206\u914d\u57ce\u5e02 \uff1a\u524d N \u4e2a\u4eba\u5b89\u6392\u5230 A \u5e02\uff0c\u540e N \u4e2a\u4eba\u5b89\u6392\u5230 B \u5e02\uff0c\u6700\u7ec8\u5f97\u5230\u6700\u5c0f\u7684\u603b\u8d39\u7528\u3002","title":"3.2.3 LC 1029: \u4e24\u5730\u8c03\u5ea6"},{"location":"lesson13/Lesson13%20C%2B%2B/#_38","text":"class Solution { public: // \u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\uff0c\u6309\u53bb A \u5e02\u548c B \u5e02\u7684\u8d39\u7528\u5dee\u8fdb\u884c\u6392\u5e8f bool compareCosts(const vector<int>& a, const vector<int>& b) { return (a[0] - a[1]) < (b[0] - b[1]); // \u6309 aCost - bCost \u8fdb\u884c\u5347\u5e8f\u6392\u5e8f } int twoCitySchedCost(vector<vector<int>>& costs) { // \u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u6bd4\u8f83\u51fd\u6570\u8fdb\u884c\u6392\u5e8f sort(costs.begin(), costs.end(), compareCosts); int totalCost = 0; int n = costs.size() / 2; // \u524d N \u4e2a\u4eba\u53bb A \u5e02\uff0c\u540e N \u4e2a\u4eba\u53bb B \u5e02 for (int i = 0; i < n; i++) { totalCost += costs[i][0]; // \u53bb A \u5e02\u7684\u8d39\u7528 } for (int i = n; i < 2 * n; i++) { totalCost += costs[i][1]; // \u53bb B \u5e02\u7684\u8d39\u7528 } return totalCost; } }; \u8bb2\u89e3\uff1a \u8ba1\u7b97\u6210\u672c\u5dee\u5f02 \uff1a \u6bcf\u4e2a\u4eba\u90fd\u6709\u53bb A \u5e02\u548c B \u5e02\u7684\u4e24\u79cd\u9009\u62e9\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 aCost - bCost \u6765\u8861\u91cf\u6bcf\u4e2a\u4eba\u53bb A \u5e02\u7684\u989d\u5916\u6210\u672c\u3002\u5982\u679c aCost < bCost \uff0c\u8bf4\u660e\u8ba9\u8fd9\u4e2a\u4eba\u53bb A \u5e02\u66f4\u5212\u7b97\uff0c\u53cd\u4e4b\u5219\u53bb B \u5e02\u66f4\u5212\u7b97\u3002 \u6392\u5e8f\u6b65\u9aa4 \uff1a \u6211\u4eec\u6839\u636e aCost - bCost \u5bf9 costs \u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\uff0c\u4f18\u5148\u8ba9\u90a3\u4e9b\u53bb A \u5e02\u66f4\u4fbf\u5b9c\u7684\u4eba\u53bb A \u5e02\uff0c\u53bb B \u5e02\u66f4\u4fbf\u5b9c\u7684\u4eba\u53bb B \u5e02\u3002 \u5206\u914d\u57ce\u5e02 \uff1a \u6392\u5e8f\u540e\uff0c\u524d\u4e00\u534a\u7684\u4eba\u53bb A \u5e02\uff0c\u540e\u4e00\u534a\u7684\u4eba\u53bb B \u5e02\u3002\u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u5728\u603b\u8d39\u7528\u6700\u5c0f\u7684\u60c5\u51b5\u4e0b\uff0c\u5e73\u8861\u53bb\u4e24\u5ea7\u57ce\u5e02\u7684\u4eba\u6570\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a \u6700\u7ec8\u8fd4\u56de\u603b\u7684\u8d39\u7528\uff0c\u5373\u524d N \u4e2a\u4eba\u7684 A \u5e02\u8d39\u7528\u548c\u540e N \u4e2a\u4eba\u7684 B \u5e02\u8d39\u7528\u4e4b\u548c\u3002","title":"\u4ee3\u7801\u5b9e\u73b0\uff1a"},{"location":"lesson13/Lesson13%20C%2B%2B/#_39","text":"","title":"\u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson13/Lesson13%20C%2B%2B/#_40","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC1288 \u5220\u9664\u88ab\u8986\u76d6\u7684\u533a\u95f4 \u7ed9\u5b9a\u4e00\u7ec4\u533a\u95f4\uff0c\u627e\u51fa\u5176\u4e2d\u672a\u88ab\u8986\u76d6\u7684\u533a\u95f4\uff0c\u79fb\u9664\u88ab\u8986\u76d6\u7684\u533a\u95f4\u3002 LC1024 \u89c6\u9891\u62fc\u63a5 \u7ed9\u5b9a\u4e00\u7ec4\u533a\u95f4\uff0c\u5224\u65ad\u662f\u5426\u80fd\u591f\u901a\u8fc7\u62fc\u63a5\u533a\u95f4\u8986\u76d6\u6574\u4e2a\u89c6\u9891\u957f\u5ea6\u3002 LC763 \u5212\u5206\u5b57\u6bcd\u533a\u95f4 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5c06\u5176\u5212\u5206\u4e3a\u5c3d\u53ef\u80fd\u591a\u7684\u4e0d\u91cd\u53e0\u7684\u533a\u95f4\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u5b57\u6bcd\u6700\u591a\u51fa\u73b0\u5728\u4e00\u4e2a\u533a\u95f4\u4e2d\u3002 LC57 \u63d2\u5165\u533a\u95f4 \u7ed9\u5b9a\u4e00\u7ec4\u975e\u91cd\u53e0\u7684\u533a\u95f4\u548c\u4e00\u4e2a\u65b0\u7684\u533a\u95f4\uff0c\u5c06\u65b0\u533a\u95f4\u63d2\u5165\u5e76\u5408\u5e76\u6240\u6709\u53ef\u80fd\u7684\u91cd\u53e0\u533a\u95f4\u3002 LC179 \u6700\u5927\u6570 \u7ed9\u5b9a\u4e00\u7ec4\u975e\u8d1f\u6574\u6570\uff0c\u91cd\u65b0\u6392\u5217\u5b83\u4eec\u7684\u987a\u5e8f\u4f7f\u4e4b\u7ec4\u6210\u4e00\u4e2a\u6700\u5927\u7684\u6574\u6570\u3002","title":"\u6392\u5e8f\u95ee\u9898"},{"location":"lesson13/Lesson13%20C%2B%2B/#_41","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC121 \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a \u7ed9\u5b9a\u80a1\u7968\u4ef7\u683c\uff0c\u627e\u5230\u5728\u6700\u4f73\u65f6\u673a\u4e70\u5165\u548c\u5356\u51fa\u4ee5\u83b7\u5f97\u6700\u5927\u5229\u6da6\u3002 LC122 \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a II \u5141\u8bb8\u591a\u6b21\u4e70\u5356\uff0c\u627e\u5230\u5728\u6700\u4f73\u65f6\u673a\u4e70\u5165\u548c\u5356\u51fa\u4ee5\u83b7\u5f97\u6700\u5927\u5229\u6da6\u3002 LC55 \u8df3\u8dc3\u6e38\u620f \u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u5224\u65ad\u662f\u5426\u80fd\u8df3\u5230\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u3002 LC45 \u8df3\u8dc3\u6e38\u620f II \u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u627e\u5230\u8df3\u5230\u6570\u7ec4\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u7684\u6700\u5c11\u8df3\u8dc3\u6b21\u6570\u3002 LC409 \u6700\u957f\u56de\u6587\u4e32 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u627e\u5230\u5176\u4e2d\u80fd\u7ec4\u6210\u7684\u6700\u957f\u56de\u6587\u4e32\u7684\u957f\u5ea6\u3002","title":"\u8d2a\u5fc3\u7b97\u6cd5\u95ee\u9898"},{"location":"lesson13/Lesson13%20Java/","text":"Lesson 13. \u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u6392\u5e8f\u548c\u8d2a\u5fc3\u7b97\u6cd5 \u76ee\u5f55 \u65f6\u95f4\u590d\u6742\u5ea6\u7b80\u4ecb \u6392\u5e8f\u7b97\u6cd5\u4e0e\u5e94\u7528 2.1 \u6392\u5e8f\u7b97\u6cd5\u4f8b\u9898\u8bb2\u89e3 2.1.1 LC215\uff1a\u627e\u51fa\u6570\u7ec4\u4e2d\u7684\u7b2c K \u5927\u5143\u7d20 2.2 \u6392\u5e8f\u7b97\u6cd5\u4e3e\u4e00\u53cd\u4e09 2.2.1 LC56\uff1a\u5408\u5e76\u533a\u95f4 2.2.2 LC252\uff1a\u4f1a\u8bae\u5ba4 2.2.3 LC347\uff1a\u524d K \u4e2a\u9ad8\u9891\u5143\u7d20 \u8d2a\u5fc3\u7b97\u6cd5 3.1 \u8d2a\u5fc3\u7b97\u6cd5\u4f8b\u9898\u8bb2\u89e3 3.1.1 LC455: \u5206\u53d1\u997c\u5e72 3.2 \u8d2a\u5fc3\u7b97\u6cd5\u4e3e\u4e00\u53cd\u4e09 3.2.1 LC435: \u65e0\u91cd\u53e0\u533a\u95f4 3.2.2 LC605: \u79cd\u82b1\u95ee\u9898 3.2.3 LC1029: \u4e24\u5730\u8c03\u5ea6 \u8bfe\u540e\u7ec3\u4e60 1. \u65f6\u95f4\u590d\u6742\u5ea6\u7b80\u4ecb \u65f6\u95f4\u590d\u6742\u5ea6 \u662f\u8861\u91cf\u7b97\u6cd5\u6267\u884c\u6548\u7387\u7684\u91cd\u8981\u6307\u6807\uff0c\u5b83\u63cf\u8ff0\u4e86\u968f\u7740\u8f93\u5165\u6570\u636e\u91cf\u7684\u589e\u5927\uff0c\u7b97\u6cd5\u6267\u884c\u65f6\u95f4\u7684\u589e\u957f\u901f\u5ea6\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u901a\u5e38\u8868\u793a\u4e3a O(\u67d0\u4e2a\u51fd\u6570) \uff0c\u5176\u4e2d \"O\" \u8868\u793a\u589e\u957f\u7684\u4e0a\u9650\u3002\u4ee5\u4e0b\u4ecb\u7ecd\u56db\u79cd\u5e38\u89c1\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff1a O(1) \u3001 O(n) \u3001 O(n^2) \u548c O(n log n) \u3002 \u5e38\u89c1\u7684\u65f6\u95f4\u590d\u6742\u5ea6 O(1) \uff1a\u5e38\u6570\u65f6\u95f4\u590d\u6742\u5ea6 \u64cd\u4f5c\u7684\u6267\u884c\u65f6\u95f4\u4e0d\u968f\u8f93\u5165\u6570\u636e\u7684\u5927\u5c0f\u800c\u53d8\u5316\u3002 \u4f8b\u5b50 \uff1a\u4ece\u6570\u7ec4\u4e2d\u83b7\u53d6\u7b2c k \u4e2a\u5143\u7d20\u3002 java public class Main { public static void main(String[] args) { int[] arr = {1, 2, 3, 4, 5}; int k = 2; // \u83b7\u53d6\u7b2c\u4e09\u4e2a\u5143\u7d20\uff08\u7d22\u5f15\u4ece0\u5f00\u59cb\uff09 int element = arr[k]; // O(1) System.out.println(\"Element at index \" + k + \": \" + element); } } \u65f6\u95f4\u590d\u6742\u5ea6 \uff1a\u65e0\u8bba\u6570\u7ec4\u5927\u5c0f\u662f\u591a\u5c11\uff0c\u83b7\u53d6\u7b2c k \u4e2a\u5143\u7d20\u6240\u9700\u65f6\u95f4\u662f\u56fa\u5b9a\u7684\uff0c\u5c5e\u4e8e O(1) \u3002 O(n) \uff1a\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6 \u64cd\u4f5c\u7684\u6267\u884c\u65f6\u95f4\u968f\u7740\u8f93\u5165\u6570\u636e\u91cf\u7ebf\u6027\u589e\u957f\u3002 \u4f8b\u5b50 \uff1a\u904d\u5386\u4e00\u4e2a\u6570\u7ec4\u3002 java public class Main { public static void main(String[] args) { int[] arr = {1, 2, 3, 4, 5}; int n = arr.length; // \u83b7\u53d6\u6570\u7ec4\u7684\u957f\u5ea6 for (int i = 0; i < n; i++) { // O(n) System.out.println(\"Element at index \" + i + \": \" + arr[i]); } } } \u65f6\u95f4\u590d\u6742\u5ea6 \uff1a\u904d\u5386\u6574\u4e2a\u6570\u7ec4\u9700\u8981\u7684\u65f6\u95f4\u4e0e\u6570\u7ec4\u7684\u957f\u5ea6 n \u6210\u6b63\u6bd4\uff0c\u5c5e\u4e8e O(n) \u3002 O(n^2) \uff1a\u5e73\u65b9\u65f6\u95f4\u590d\u6742\u5ea6 \u64cd\u4f5c\u7684\u6267\u884c\u65f6\u95f4\u4e0e\u8f93\u5165\u6570\u636e\u91cf\u7684\u5e73\u65b9\u6210\u6b63\u6bd4\uff0c\u5e38\u89c1\u4e8e\u53cc\u91cd\u5faa\u73af\u3002 \u4f8b\u5b50 \uff1a\u6253\u5370\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u3002 ```java public class Main { public static void main(String[] args) { int[][] arr = { {1, 2, 3}, {4, 5, 6}, {7, 8, 9} }; for (int i = 0; i < 3; i++) { // O(n) for (int j = 0; j < 3; j++) { // O(n) System.out.println(\"Element at [\" + i + \"][\" + j + \"]: \" + arr[i][j]); } } } } `` **\u65f6\u95f4\u590d\u6742\u5ea6**\uff1a\u53cc\u91cd\u5faa\u73af\u5d4c\u5957\u904d\u5386\u6bcf\u4e2a\u5143\u7d20\uff0c\u603b\u7684\u6267\u884c\u65f6\u95f4\u662f n` \u7684\u5e73\u65b9\uff0c\u5c5e\u4e8e O(n^2) \u3002 O(n log n) \uff1a\u5e38\u89c1\u4e8e\u6392\u5e8f\u7b97\u6cd5\uff08\u6b64\u7ae0\u8282\u540e\u534a\u90e8\u5206\u4f1a\u8be6\u7ec6\u8bb2\u89e3\uff09 \u4f8b\u5b50 \uff1a\u5f52\u5e76\u6392\u5e8f\u3001\u5feb\u901f\u6392\u5e8f\u3002 ```java import java.util.Arrays; public class Main { // \u5408\u5e76\u4e24\u4e2a\u5b50\u6570\u7ec4 public static void merge(int[] arr, int l, int m, int r) { int n1 = m - l + 1; int n2 = r - m; int[] L = new int[n1]; int[] R = new int[n2]; // \u5c06\u6570\u636e\u590d\u5236\u5230\u4e34\u65f6\u6570\u7ec4 L \u548c R for (int i = 0; i < n1; i++) L[i] = arr[l + i]; for (int i = 0; i < n2; i++) R[i] = arr[m + 1 + i]; // \u5408\u5e76\u4e34\u65f6\u6570\u7ec4\u5230 arr int i = 0, j = 0, k = l; while (i < n1 && j < n2) { if (L[i] <= R[j]) { arr[k] = L[i]; i++; } else { arr[k] = R[j]; j++; } k++; } // \u590d\u5236\u5269\u4f59\u7684 L \u4e2d\u7684\u5143\u7d20\uff08\u5982\u679c\u6709\uff09 while (i < n1) { arr[k] = L[i]; i++; k++; } // \u590d\u5236\u5269\u4f59\u7684 R \u4e2d\u7684\u5143\u7d20\uff08\u5982\u679c\u6709\uff09 while (j < n2) { arr[k] = R[j]; j++; k++; } } // \u9012\u5f52\u62c6\u5206\u6570\u7ec4 public static void mergeSort(int[] arr, int l, int r) { if (l < r) { int m = l + (r - l) / 2; // \u9012\u5f52\u6392\u5e8f\u4e24\u534a mergeSort(arr, l, m); mergeSort(arr, m + 1, r); // \u5408\u5e76\u4e24\u4e2a\u6392\u5e8f\u597d\u7684\u5b50\u6570\u7ec4 merge(arr, l, m, r); } } public static void main(String[] args) { int[] arr = {12, 11, 13, 5, 6, 7}; int arr_size = arr.length; mergeSort(arr, 0, arr_size - 1); System.out.println(\"Sorted array is: \" + Arrays.toString(arr)); } } ``` \u65f6\u95f4\u590d\u6742\u5ea6 \uff1a\u5f52\u5e76\u6392\u5e8f\u901a\u8fc7\u9012\u5f52\u5c06\u6570\u7ec4\u5206\u6210\u66f4\u5c0f\u7684\u90e8\u5206\u8fdb\u884c\u6392\u5e8f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n log n) \u3002 \u4e3a\u4ec0\u4e48\u662f O(n log n) ? \u5f52\u5e76\u6392\u5e8f\u662f\u4e00\u79cd \u5206\u6cbb\u7b97\u6cd5 \uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5f52\u5e76\u6392\u5e8f\u7684\u6b65\u9aa4\u5206\u4e3a\u4e24\u90e8\u5206\uff1a \u62c6\u5206 \u548c \u5408\u5e76 \u3002 1. \u62c6\u5206\u8fc7\u7a0b\uff1a\u9012\u5f52\u5206\u89e3\u6570\u7ec4 \u5f52\u5e76\u6392\u5e8f\u9996\u5148\u5c06\u6570\u7ec4\u9012\u5f52\u5730\u5bf9\u534a\u62c6\u5206\uff0c\u76f4\u5230\u6bcf\u4e2a\u5b50\u6570\u7ec4\u53ea\u5269\u4e0b\u4e00\u4e2a\u5143\u7d20\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u7c7b\u4f3c\u4e8e\u6784\u5efa\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u6bcf\u6b21\u5c06\u95ee\u9898\u7684\u89c4\u6a21\u51cf\u534a\u3002 \u5bf9\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u6570\u7ec4\uff1a \u7b2c\u4e00\u5c42\uff1a1 \u4e2a\u957f\u5ea6\u4e3a n \u7684\u6570\u7ec4 \u7b2c\u4e8c\u5c42\uff1a2 \u4e2a\u957f\u5ea6\u4e3a n/2 \u7684\u6570\u7ec4 \u7b2c\u4e09\u5c42\uff1a4 \u4e2a\u957f\u5ea6\u4e3a n/4 \u7684\u6570\u7ec4 ... \u7b2c log n \u5c42\uff1a\u6bcf\u4e2a\u6570\u7ec4\u7684\u957f\u5ea6\u662f 1\uff0c\u5171\u6709 n \u4e2a\u6570\u7ec4 \u56e0\u4e3a\u6bcf\u6b21\u90fd\u5bf9\u6570\u7ec4\u8fdb\u884c\u4e8c\u5206\uff0c\u6240\u4ee5\u6574\u4e2a\u9012\u5f52\u6811\u7684\u6df1\u5ea6\u662f log n \u3002 2. \u5408\u5e76\u8fc7\u7a0b\uff1a\u7ebf\u6027\u5408\u5e76 \u5f53\u5b50\u6570\u7ec4\u62c6\u5206\u5230\u6700\u5c0f\uff08\u6bcf\u4e2a\u6570\u7ec4\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff09\u65f6\uff0c\u5f52\u5e76\u6392\u5e8f\u5f00\u59cb\u5408\u5e76\u8fd9\u4e9b\u5b50\u6570\u7ec4\u3002\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\u7684\u65f6\u95f4\u4e0e\u5b83\u4eec\u7684\u957f\u5ea6\u6210\u6b63\u6bd4\uff0c\u4e5f\u5c31\u662f\u8bf4\u5408\u5e76\u4e24\u4e2a\u6570\u7ec4\u7684\u65f6\u95f4\u662f O(n) \u3002 \u5728\u9012\u5f52\u6811\u7684\u6bcf\u4e00\u5c42\uff0c\u6240\u6709\u6570\u7ec4\u7684\u603b\u957f\u5ea6\u59cb\u7ec8\u662f n \uff0c\u56e0\u6b64\uff1a \u7b2c\u4e00\u5c42\uff1a\u5408\u5e76\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u6570\u7ec4\uff0c\u65f6\u95f4\u662f O(n) \u7b2c\u4e8c\u5c42\uff1a\u5408\u5e76\u4e24\u4e2a\u957f\u5ea6\u4e3a n/2 \u7684\u6570\u7ec4\uff0c\u603b\u65f6\u95f4\u4ecd\u7136\u662f O(n) \u7b2c\u4e09\u5c42\uff1a\u5408\u5e76\u56db\u4e2a\u957f\u5ea6\u4e3a n/4 \u7684\u6570\u7ec4\uff0c\u603b\u65f6\u95f4\u4e5f\u662f O(n) \u65e0\u8bba\u6709\u591a\u5c11\u4e2a\u5c0f\u6570\u7ec4\uff0c\u5408\u5e76\u6bcf\u4e00\u5c42\u7684\u603b\u65f6\u95f4\u90fd\u662f O(n) \u3002 3. \u9012\u5f52\u6811\u7684\u5c42\u6570 \u62c6\u5206\u7684\u8fc7\u7a0b\u6700\u591a\u8fdb\u884c log n \u6b21\uff08\u6bcf\u6b21\u5c06\u6570\u7ec4\u5bf9\u534a\u5206\uff09\u3002\u56e0\u6b64\uff0c\u9012\u5f52\u6811\u7684\u6df1\u5ea6\u662f log n \uff0c\u5373\u6700\u591a\u6709 log n \u5c42\u3002 \u603b\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u8ba1\u7b97 \u56e0\u4e3a\u6bcf\u4e00\u5c42\u7684\u5408\u5e76\u65f6\u95f4\u90fd\u662f O(n) \uff0c\u800c\u6574\u4e2a\u9012\u5f52\u6811\u6709 log n \u5c42\uff0c\u6240\u4ee5\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(n) * O(log n) = O(n log n) \u4e3a\u4ec0\u4e48\u4e0d\u4f1a\u8d85\u8fc7 O(n log n) \u6709\u4eba\u53ef\u80fd\u4f1a\u7591\u60d1\uff1a\u65e2\u7136\u6211\u4eec\u5728\u9012\u5f52\u4e2d\u53cd\u590d\u5206\u88c2\u6570\u7ec4\uff0c\u4e3a\u4ec0\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u4f1a\u8d85\u8fc7 O(n log n) \u5462\uff1f \u6bcf\u5c42\u7684\u5408\u5e76\u64cd\u4f5c\u662f\u7ebf\u6027\u7684 \uff1a\u867d\u7136\u9012\u5f52\u5206\u88c2\u4f1a\u4ea7\u751f\u591a\u4e2a\u5c0f\u6570\u7ec4\uff0c\u4f46\u6bcf\u4e00\u5c42\u4e2d\u6240\u6709\u6570\u7ec4\u7684\u603b\u957f\u5ea6\u4ecd\u7136\u662f n \u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u4e00\u5c42\u5408\u5e76\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u59cb\u7ec8\u662f O(n) \uff0c\u4e0d\u4f1a\u7d2f\u79ef\u66f4\u591a\u590d\u6742\u5ea6\u3002 \u9012\u5f52\u7684\u6df1\u5ea6\u662f log n \uff1a\u7531\u4e8e\u6bcf\u6b21\u9012\u5f52\u90fd\u5c06\u6570\u7ec4\u5bf9\u534a\u5206\u88c2\uff0c\u6574\u4e2a\u9012\u5f52\u8fc7\u7a0b\u53ea\u4f1a\u8fdb\u884c log n \u6b21\u5206\u88c2\u3002\u56e0\u6b64\uff0c\u9012\u5f52\u6811\u7684\u6df1\u5ea6\u662f log n \u3002 \u6700\u7ec8\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u6bcf\u5c42\u7684\u65f6\u95f4 O(n) \u4e58\u4ee5\u9012\u5f52\u6811\u7684\u5c42\u6570 log n \uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(n log n) \u3002 \u65f6\u95f4\u590d\u6742\u5ea6\u603b\u7ed3 O(1) \uff1a\u6267\u884c\u65f6\u95f4\u4e0d\u53d7\u8f93\u5165\u89c4\u6a21\u5f71\u54cd\u3002 O(n) \uff1a\u6267\u884c\u65f6\u95f4\u968f\u8f93\u5165\u89c4\u6a21\u7ebf\u6027\u589e\u957f\u3002 O(n^2) \uff1a\u6267\u884c\u65f6\u95f4\u4e0e\u8f93\u5165\u89c4\u6a21\u7684\u5e73\u65b9\u6210\u6b63\u6bd4\uff0c\u901a\u5e38\u53d1\u751f\u5728\u5d4c\u5957\u5faa\u73af\u4e2d\u3002 O(n log n) \uff1a\u5e38\u89c1\u4e8e\u9ad8\u6548\u7684\u6392\u5e8f\u7b97\u6cd5\u3002 \u5177\u4f53\u5b9e\u4f8b \u8003\u8651\u4e00\u4e2a\u7b80\u5355\u7684\u7b97\u6cd5\uff1a\u8ba1\u7b97\u6570\u7ec4\u4e2d\u6240\u6709\u5143\u7d20\u7684\u548c\u3002 public class Main { public static int sumArray(int[] arr, int n) { int total = 0; for (int i = 0; i < n; i++) { total += arr[i]; } return total; } public static void main(String[] args) { int[] arr = {1, 2, 3, 4, 5}; int n = arr.length; System.out.println(\"Sum of array: \" + sumArray(arr, n)); } } \u6b65\u9aa4\u5206\u6790 \u786e\u5b9a\u57fa\u672c\u64cd\u4f5c \uff1a \u57fa\u672c\u64cd\u4f5c\u662f total += arr[i] \uff0c\u8fd9\u662f\u4e00\u79cd\u6570\u7ec4\u5143\u7d20\u7684\u52a0\u6cd5\u3002 \u8ba1\u7b97\u57fa\u672c\u64cd\u4f5c\u7684\u6b21\u6570 \uff1a \u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff0c for \u5faa\u73af\u5c06\u6267\u884c n \u6b21\uff08\u5176\u4e2d n \u662f\u6570\u7ec4 arr \u7684\u957f\u5ea6\uff09\u3002 \u56e0\u6b64\uff0c\u57fa\u672c\u64cd\u4f5c\u7684\u6b21\u6570\u4e3a n \u3002 \u4f7f\u7528\u5927 O \u8868\u793a\u6cd5 \uff1a \u7531\u4e8e\u5faa\u73af\u6267\u884c\u4e86 n \u6b21\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n) \u3002 \u8003\u8651\u6700\u574f\u60c5\u51b5 \uff1a \u65e0\u8bba\u8f93\u5165\u7684\u5177\u4f53\u5185\u5bb9\u5982\u4f55\uff0c\u53ea\u8981\u6570\u7ec4\u957f\u5ea6\u4e3a n \uff0c\u57fa\u672c\u64cd\u4f5c\u90fd\u4f1a\u6267\u884c n \u6b21\uff0c\u6700\u574f\u60c5\u51b5\u4ecd\u4e3a O(n) \u3002 \u7279\u6b8a\u60c5\u51b5 \uff1a \u5982\u679c\u6570\u7ec4\u4e3a\u7a7a\uff08\u957f\u5ea6\u4e3a 0\uff09\uff0c for \u5faa\u73af\u4e0d\u4f1a\u6267\u884c\uff0c\u4f46\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4f9d\u7136\u4e3a O(n) \uff0c\u56e0\u4e3a\u6211\u4eec\u8003\u8651\u7684\u662f\u8f93\u5165\u7684\u89c4\u6a21\u3002 \u968f\u5802\u7ec3\u4e60 \u5224\u65ad\u4ee5\u4e0b\u4ee3\u7801\u7684\u65f6\u95f4\u590d\u6742\u5ea6 public class Main { public static int findMax(int[] arr, int n) { int maxNum = arr[0]; for (int i = 0; i < n; i++) { // \u57fa\u672c\u64cd\u4f5c if (arr[i] > maxNum) { maxNum = arr[i]; } } return maxNum; } public static void main(String[] args) { int[] arr = {1, 5, 3, 9, 2}; int n = arr.length; System.out.println(\"Max number: \" + findMax(arr, n)); } } \u89e3\u7b54 \u7b2c\u4e00\u6bb5\u4ee3\u7801\uff08 findMax \u65b9\u6cd5\uff09 \uff1a - \u57fa\u672c\u64cd\u4f5c \u662f if (arr[i] > maxNum) \uff0c\u5373\u5728\u6bcf\u6b21\u5faa\u73af\u4e2d\u8fdb\u884c\u4e00\u6b21\u6bd4\u8f83\u64cd\u4f5c\u3002 \u5faa\u73af\u6267\u884c\u6b21\u6570 \uff1a for \u5faa\u73af\u4ece i = 0 \u5230 i = n - 1 \uff0c\u56e0\u6b64\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u5faa\u73af\u6267\u884c n \u6b21\uff08\u5373\u6570\u7ec4\u7684\u957f\u5ea6\u4e3a n \uff09\u3002 \u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790 \uff1a\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e2d\uff0c\u6267\u884c\u4e00\u6b21\u6bd4\u8f83\u548c\u53ef\u80fd\u7684\u8d4b\u503c\u64cd\u4f5c\uff0c\u64cd\u4f5c\u7684\u6b21\u6570\u548c\u8f93\u5165\u89c4\u6a21 n \u6210\u7ebf\u6027\u5173\u7cfb\u3002\u56e0\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n) \u3002 2. \u6392\u5e8f\u7b97\u6cd5\u4e0e\u5e94\u7528 \u6392\u5e8f\u662f\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\u4e00\u4e2a\u975e\u5e38\u57fa\u7840\u4f46\u91cd\u8981\u7684\u64cd\u4f5c\u3002\u5b83\u4e0d\u4ec5\u53ef\u4ee5\u8ba9\u6570\u636e\u6309\u7279\u5b9a\u987a\u5e8f\u6392\u5217\uff0c\u8fd8\u80fd\u5e2e\u52a9\u6211\u4eec\u89e3\u51b3\u8bb8\u591a\u4e0e\u6570\u636e\u5904\u7406\u76f8\u5173\u7684\u95ee\u9898\u3002\u901a\u8fc7\u6392\u5e8f\uff0c\u6211\u4eec\u53ef\u4ee5\u66f4\u5feb\u5730\u89e3\u51b3\u627e\u7b2c K \u5927\u5143\u7d20\u3001\u5408\u5e76\u91cd\u53e0\u533a\u95f4\u7b49\u95ee\u9898\u3002 \u9002\u7528\u573a\u666f \u6392\u5e8f\u7684\u5e94\u7528\u573a\u666f\u975e\u5e38\u5e7f\u6cdb\uff0c\u5c24\u5176\u662f\u5728\u6570\u636e\u5904\u7406\u4e2d\uff0c\u4f60\u4f1a\u7ecf\u5e38\u9047\u5230\u9700\u8981\u5bf9\u6570\u636e\u8fdb\u884c\u6392\u5e8f\u7684\u60c5\u51b5\uff1a \u627e\u51fa\u7b2c K \u5927\u5143\u7d20 \uff1a\u901a\u8fc7\u6392\u5e8f\u6570\u636e\uff0c\u53ef\u4ee5\u5f88\u5feb\u627e\u51fa\u7b2c K \u5927\uff08\u6216\u7b2c K \u5c0f\uff09\u7684\u5143\u7d20\u3002 \u5408\u5e76\u533a\u95f4 \uff1a\u5f53\u5904\u7406\u591a\u4e2a\u533a\u95f4\u6216\u6bb5\u65f6\uff0c\u5e38\u5e38\u9700\u8981\u5148\u5c06\u8fd9\u4e9b\u533a\u95f4\u6309\u67d0\u4e2a\u7ef4\u5ea6\u6392\u5e8f\uff0c\u7136\u540e\u5408\u5e76\u5b83\u4eec\u3002 \u4f8b\u5b50 \uff1a\u5408\u5e76\u65e5\u7a0b\u3001\u4efb\u52a1\u65f6\u95f4\u6bb5\u7b49\u6570\u636e\uff0c\u89e3\u51b3\u533a\u95f4\u91cd\u53e0\u95ee\u9898\u3002 \u4f18\u5316\u64cd\u4f5c \uff1a\u4e0d\u540c\u7684\u6392\u5e8f\u7b97\u6cd5\u5728\u9762\u5bf9\u4e0d\u540c\u89c4\u6a21\u7684\u6570\u636e\u65f6\u8868\u73b0\u5404\u5f02\uff0c\u56e0\u6b64\u9009\u62e9\u5408\u9002\u7684\u6392\u5e8f\u7b97\u6cd5\u5bf9\u4e8e\u63d0\u9ad8\u7a0b\u5e8f\u6027\u80fd\u975e\u5e38\u91cd\u8981\u3002 \u5e38\u7528\u6280\u5de7 1. \u5185\u7f6e\u6392\u5e8f\u51fd\u6570 Java \u63d0\u4f9b\u4e86\u975e\u5e38\u65b9\u4fbf\u7684\u6392\u5e8f\u51fd\u6570 Arrays.sort() \uff0c\u7528\u4e8e\u5bf9\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\u3002\u8fd9\u4e2a\u65b9\u6cd5\u4f7f\u7528\u4e86\u7ecf\u8fc7\u4f18\u5316\u7684\u5feb\u901f\u6392\u5e8f\u3001\u5f52\u5e76\u6392\u5e8f\u7b49\u9ad8\u6548\u7684\u6392\u5e8f\u7b97\u6cd5\u3002 \u793a\u4f8b\u4ee3\u7801 \uff1a import java.util.Arrays; public class Main { public static void main(String[] args) { int[] nums = {3, 1, 4, 1, 5, 9}; // \u5b9a\u4e49\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 // \u4f7f\u7528\u5185\u7f6e\u7684\u6392\u5e8f\u51fd\u6570\u5bf9\u6570\u7ec4\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f Arrays.sort(nums); // \u8f93\u51fa\u6392\u5e8f\u540e\u7684\u6570\u7ec4 System.out.print(\"Sorted array: \"); for (int num : nums) { System.out.print(num + \" \"); } } } \u8bf4\u660e \uff1a - \u5728 Java \u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 Arrays.sort() \u6765\u5bf9\u6570\u7ec4 nums \u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\u3002 - \u5185\u7f6e\u7684 Arrays.sort() \u975e\u5e38\u5feb\u6377\u4e14\u9ad8\u6548\uff0c\u9002\u7528\u4e8e\u5927\u591a\u6570\u60c5\u51b5\u3002 2. \u81ea\u5b9a\u4e49\u6392\u5e8f \u5728 Java \u4e2d\uff0c Comparator \u662f\u4e00\u4e2a\u63a5\u53e3\uff0c\u7528\u4e8e\u5b9a\u4e49\u81ea\u5b9a\u4e49\u7684\u6392\u5e8f\u903b\u8f91\u3002\u901a\u8fc7\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\uff0c\u6211\u4eec\u53ef\u4ee5\u4e3a\u96c6\u5408\uff08\u5982\u6570\u7ec4\u3001\u5217\u8868\u7b49\uff09\u63d0\u4f9b\u7279\u5b9a\u7684\u6392\u5e8f\u89c4\u5219\u3002 \u81ea\u5b9a\u4e49 Comparator \u8981\u521b\u5efa\u81ea\u5b9a\u4e49\u7684 Comparator \uff0c\u4f60\u53ef\u4ee5\u91c7\u7528\u4ee5\u4e0b\u4e24\u79cd\u65b9\u6cd5\uff1a \u65b9\u6cd5\u4e00\uff1a\u5b9e\u73b0 Comparator \u63a5\u53e3 \u4f60\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u4e00\u4e2a\u5b9e\u73b0 Comparator \u63a5\u53e3\u7684\u7c7b\u6765\u5b9a\u4e49\u6392\u5e8f\u903b\u8f91\u3002 ```java import java.util.Comparator; class Person { String name; int age; Person(String name, int age) { this.name = name; this.age = age; } public String getName() { return name; } public int getAge() { return age; } } // \u81ea\u5b9a\u4e49\u6bd4\u8f83\u5668\uff0c\u6839\u636e\u5e74\u9f84\u6392\u5e8f class AgeComparator implements Comparator { @Override public int compare(Person p1, Person p2) { return Integer.compare(p1.getAge(), p2.getAge()); } } ``` \u65b9\u6cd5\u4e8c\uff1a\u4f7f\u7528 Lambda \u8868\u8fbe\u5f0f\uff08Java 8 \u53ca\u4ee5\u4e0a\uff09 \u5728 Java 8 \u53ca\u4ee5\u4e0a\u7248\u672c\u4e2d\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 Lambda \u8868\u8fbe\u5f0f\u6765\u7b80\u5316 Comparator \u7684\u5b9e\u73b0\uff1a ```java import java.util.Arrays; import java.util.Comparator; class Person { String name; int age; Person(String name, int age) { this.name = name; this.name = name; this.age = age; } public String getName() { return name; } public int getAge() { return age; } } public class Main { public static void main(String[] args) { Person[] people = { new Person(\"Alice\", 30), new Person(\"Bob\", 25), new Person(\"Charlie\", 35) }; // \u4f7f\u7528 Lambda \u8868\u8fbe\u5f0f\u6309\u5e74\u9f84\u6392\u5e8f Arrays.sort(people, (p1, p2) -> Integer.compare(p1.getAge(), p2.getAge())); // \u6253\u5370\u6392\u5e8f\u540e\u7684\u7ed3\u679c for (Person p : people) { System.out.println(p.getName() + \": \" + p.getAge()); } } } ``` \u591a\u91cd\u6392\u5e8f \u5982\u679c\u4f60\u60f3\u8981\u6839\u636e\u591a\u4e2a\u6761\u4ef6\u8fdb\u884c\u6392\u5e8f\uff0c\u53ef\u4ee5\u5728 compare \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u989d\u5916\u7684\u903b\u8f91\u3002\u4f8b\u5982\uff0c\u9996\u5148\u6309\u5e74\u9f84\u6392\u5e8f\uff0c\u5982\u679c\u5e74\u9f84\u76f8\u540c\uff0c\u5219\u6309\u540d\u5b57\u6392\u5e8f\uff1a java Arrays.sort(people, (p1, p2) -> { int ageComparison = Integer.compare(p1.getAge(), p2.getAge()); if (ageComparison != 0) { return ageComparison; // \u5982\u679c\u5e74\u9f84\u4e0d\u540c\uff0c\u8fd4\u56de\u6bd4\u8f83\u7ed3\u679c } else { return p1.getName().compareTo(p2.getName()); // \u5e74\u9f84\u76f8\u540c\u5219\u6309\u540d\u5b57\u6392\u5e8f } }); \u793a\u4f8b\u4ee3\u7801 \u4ee5\u4e0b\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u793a\u4f8b\uff0c\u5305\u62ec\u81ea\u5b9a\u4e49 Comparator \u548c\u4f7f\u7528 Lambda \u8868\u8fbe\u5f0f\u8fdb\u884c\u6392\u5e8f\uff1a ```java import java.util.Arrays; import java.util.Comparator; class Person { String name; int age; Person(String name, int age) { this.name = name; this.age = age; } public String getName() { return name; } public int getAge() { return age; } } public class Main { public static void main(String[] args) { Person[] people = { new Person(\"Alice\", 30), new Person(\"Bob\", 25), new Person(\"Charlie\", 35), new Person(\"David\", 25) }; // \u6309\u5e74\u9f84\u6392\u5e8f Arrays.sort(people, Comparator.comparingInt(Person::getAge) .thenComparing(Person::getName)); // \u82e5\u5e74\u9f84\u76f8\u540c\u5219\u6309\u540d\u5b57\u6392\u5e8f // \u6253\u5370\u6392\u5e8f\u540e\u7684\u7ed3\u679c for (Person p : people) { System.out.println(p.getName() + \": \" + p.getAge()); } } } ``` \u6ce8\u610f\u4e8b\u9879 \u5728 compare \u65b9\u6cd5\u4e2d\uff0c\u786e\u4fdd\u4f20\u5165\u7684\u5bf9\u8c61\u4e0d\u4e3a null \uff0c\u4ee5\u907f\u514d\u629b\u51fa NullPointerException \u3002 \u5728\u6bd4\u8f83\u65f6\uff0c\u5982\u679c\u8fd4\u56de\u503c\u4e0d\u7b26\u5408\u9884\u671f\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6392\u5e8f\u9519\u8bef\uff0c\u56e0\u6b64\u9700\u8981\u4ed4\u7ec6\u6d4b\u8bd5\u81ea\u5b9a\u4e49\u7684\u6bd4\u8f83\u5668\u3002 3. \u6392\u5e8f\u4f18\u5316 \u6392\u5e8f\u7b97\u6cd5\u5728\u5904\u7406\u4e0d\u540c\u89c4\u6a21\u6570\u636e\u65f6\u8868\u73b0\u5404\u5f02\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u89c1\u7684\u6392\u5e8f\u7b97\u6cd5\u53ca\u5176\u9002\u7528\u573a\u666f\uff0c\u4f9b\u5927\u5bb6\u521d\u6b65\u4e86\u89e3\uff1a \u9009\u62e9\u6392\u5e8f \uff1a\u9002\u7528\u4e8e\u5c0f\u89c4\u6a21\u6570\u636e\u96c6\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a (O(n^2))\u3002 \u5b83\u7684\u7279\u70b9\u662f\u6bcf\u6b21\u9009\u62e9\u672a\u6392\u5e8f\u90e8\u5206\u4e2d\u7684\u6700\u5c0f\u503c\uff0c\u7136\u540e\u5c06\u5176\u4e0e\u5f53\u524d\u5143\u7d20\u4ea4\u6362\u3002\u867d\u7136\u7b80\u5355\u6613\u61c2\uff0c\u4f46\u6027\u80fd\u8f83\u5dee\uff0c\u4e0d\u9002\u5408\u5927\u6570\u636e\u96c6\u3002 \u63d2\u5165\u6392\u5e8f \uff1a\u9002\u5408\u4e8e\u51e0\u4e4e\u5df2\u6392\u5e8f\u7684\u6570\u636e\u96c6\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u662f (O(n^2))\u3002 \u63d2\u5165\u6392\u5e8f\u7684\u4f18\u52bf\u662f\u5f53\u6570\u636e\u51e0\u4e4e\u6709\u5e8f\u65f6\uff0c\u5b83\u7684\u6548\u7387\u4f1a\u6bd4\u9009\u62e9\u6392\u5e8f\u597d\u5f97\u591a\u3002 \u5feb\u901f\u6392\u5e8f \uff1a\u6027\u80fd\u8f83\u597d\u7684\u901a\u7528\u6392\u5e8f\u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a (O(n log n))\u3002 \u5b83\u901a\u8fc7\u9009\u62e9\u4e00\u4e2a\u57fa\u51c6\u5143\u7d20\uff08pivot\uff09\uff0c\u5c06\u6570\u7ec4\u5212\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5e76\u9012\u5f52\u5730\u5bf9\u8fd9\u4e24\u90e8\u5206\u8fdb\u884c\u6392\u5e8f\u3002\u9002\u5408\u5927\u89c4\u6a21\u6570\u636e\u96c6\u3002 \u5f52\u5e76\u6392\u5e8f \uff1a\u4e0e\u5feb\u901f\u6392\u5e8f\u4e00\u6837\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a (O(n log n))\uff0c\u4f46\u5b83\u662f\u7a33\u5b9a\u7684\u6392\u5e8f\u7b97\u6cd5\u3002 \u5f52\u5e76\u6392\u5e8f\u5c06\u6570\u7ec4\u4e0d\u65ad\u62c6\u5206\uff0c\u7136\u540e\u5408\u5e76\u6392\u5e8f\u597d\u7684\u5b50\u6570\u7ec4\u3002\u867d\u7136\u5b83\u7684\u6027\u80fd\u7a33\u5b9a\uff0c\u4f46\u9700\u8981\u989d\u5916\u7684\u5185\u5b58\u6765\u5b58\u50a8\u62c6\u5206\u7684\u6570\u7ec4\u3002 \u5192\u6ce1\u6392\u5e8f \uff1a\u662f\u4e00\u79cd\u7b80\u5355\u4f46\u6027\u80fd\u8f83\u5dee\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a (O(n^2))\u3002 \u5b83\u7684\u57fa\u672c\u601d\u60f3\u662f\u901a\u8fc7\u4e0d\u65ad\u6bd4\u8f83\u76f8\u90bb\u7684\u5143\u7d20\u5e76\u4ea4\u6362\u5b83\u4eec\uff0c\u5c06\u8f83\u5927\u7684\u5143\u7d20\u201c\u5192\u6ce1\u201d\u5230\u6570\u7ec4\u7684\u672b\u5c3e\u3002\u9002\u7528\u4e8e\u975e\u5e38\u5c0f\u89c4\u6a21\u7684\u6570\u636e\u96c6\u3002 \u5806\u6392\u5e8f \uff1a\u57fa\u4e8e\u4e8c\u53c9\u5806\u7ed3\u6784\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a (O(n log n))\u3002 \u5806\u6392\u5e8f\u901a\u8fc7\u5efa\u7acb\u4e00\u4e2a\u6700\u5927\u5806\u6216\u6700\u5c0f\u5806\u6765\u8fdb\u884c\u6392\u5e8f\u3002\u867d\u7136\u5806\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u5feb\u901f\u6392\u5e8f\u76f8\u540c\uff0c\u4f46\u5b83\u4e0d\u9700\u8981\u989d\u5916\u7684\u5185\u5b58\u7a7a\u95f4\uff08\u4e0d\u50cf\u5f52\u5e76\u6392\u5e8f\uff09\u3002 \u8ba1\u6570\u6392\u5e8f \uff1a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a (O(n+k))\uff0c\u9002\u7528\u4e8e\u6570\u636e\u8303\u56f4\u8f83\u5c0f\u7684\u573a\u666f\u3002 \u5b83\u901a\u8fc7\u7edf\u8ba1\u6bcf\u4e2a\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570\u6765\u6392\u5e8f\uff0c\u9002\u7528\u4e8e\u6574\u6570\u6392\u5e8f\u4e14\u6570\u636e\u8303\u56f4\u4e0d\u5927\u7684\u60c5\u51b5\u3002\u8ba1\u6570\u6392\u5e8f\u7684\u6027\u80fd\u5728\u6570\u636e\u8303\u56f4\u8f83\u5c0f\u65f6\u975e\u5e38\u4f18\u5f02\uff0c\u4f46\u5f53\u6570\u636e\u8303\u56f4\u5f88\u5927\u65f6\uff0c\u7a7a\u95f4\u6d88\u8017\u4f1a\u8fc7\u9ad8\u3002 \u6876\u6392\u5e8f \uff1a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a (O(n+k))\uff0c\u9002\u5408\u5747\u5300\u5206\u5e03\u7684\u6570\u636e\u96c6\u3002 \u5b83\u5c06\u5143\u7d20\u5206\u5e03\u5230\u591a\u4e2a\u6876\u4e2d\uff0c\u5206\u522b\u5bf9\u6bcf\u4e2a\u6876\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u518d\u5408\u5e76\u6240\u6709\u6876\u4e2d\u7684\u5143\u7d20\u3002\u5bf9\u4e8e\u5206\u5e03\u5747\u5300\u7684\u6570\u636e\uff0c\u6876\u6392\u5e8f\u7684\u6027\u80fd\u975e\u5e38\u597d\uff0c\u4f46\u5982\u679c\u6570\u636e\u5206\u5e03\u4e0d\u5747\uff0c\u6027\u80fd\u53ef\u80fd\u4f1a\u9000\u5316\u3002 \u57fa\u6570\u6392\u5e8f \uff1a\u4e00\u79cd\u975e\u6bd4\u8f83\u6392\u5e8f\u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a (O(n * k))\uff0c\u9002\u7528\u4e8e\u5904\u7406\u4f4d\u6570\u56fa\u5b9a\u7684\u6570\u636e\u3002 \u5b83\u901a\u8fc7\u6309\u4f4d\uff08\u6216\u6570\u5b57\uff09\u8fdb\u884c\u591a\u6b21\u6392\u5e8f\u6765\u5b8c\u6210\u6574\u4f53\u6392\u5e8f\uff0c\u9002\u7528\u4e8e\u5bf9\u6574\u6570\u6216\u5b57\u7b26\u4e32\u8fdb\u884c\u6392\u5e8f\u3002\u57fa\u6570\u6392\u5e8f\u7684\u6027\u80fd\u5728\u5904\u7406\u5927\u89c4\u6a21\u3001\u56fa\u5b9a\u4f4d\u6570\u7684\u6570\u5b57\u65f6\u8f83\u597d\u3002 2.1 \u6392\u5e8f\u7b97\u6cd5\u4f8b\u9898\u8bb2\u89e3 2.1.1 LC215\uff1a\u627e\u51fa\u6570\u7ec4\u4e2d\u7684\u7b2c K \u5927\u5143\u7d20 \u9898\u76ee\u63cf\u8ff0\uff1a \u7ed9\u5b9a\u4e00\u4e2a\u672a\u6392\u5e8f\u7684\u6570\u7ec4\uff0c\u627e\u51fa\u5176\u4e2d\u7b2c K \u5927\u7684\u5143\u7d20\u3002 \u89e3\u9898\u601d\u8def\uff1a \u53ef\u4ee5\u5148\u5bf9\u6570\u7ec4\u8fdb\u884c\u964d\u5e8f\u6392\u5e8f\uff0c\u7136\u540e\u76f4\u63a5\u8fd4\u56de\u6392\u597d\u5e8f\u540e\u7684\u6570\u7ec4\u4e2d\u7684\u7b2c K \u4e2a\u5143\u7d20\u3002 \u4ee3\u7801\u5b9e\u73b0\uff1a import java.util.Arrays; import java.util.Comparator; class Solution { // \u81ea\u5b9a\u4e49\u6bd4\u8f83\u5668\uff0c\u8fdb\u884c\u964d\u5e8f\u6392\u5e8f public int findKthLargest(int[] nums, int k) { // \u5c06 int[] \u6570\u7ec4\u8f6c\u6362\u4e3a Integer[]\uff0c\u56e0\u4e3a Arrays.sort \u4e0d\u652f\u6301\u539f\u751f\u7c7b\u578b\u7684\u81ea\u5b9a\u4e49 Comparator Integer[] numsArray = Arrays.stream(nums).boxed().toArray(Integer[]::new); // \u4f7f\u7528\u81ea\u5b9a\u4e49\u7684 Comparator \u8fdb\u884c\u964d\u5e8f\u6392\u5e8f Arrays.sort(numsArray, new Comparator<Integer>() { @Override public int compare(Integer a, Integer b) { return b - a; // \u964d\u5e8f\u6392\u5e8f } }); // \u8fd4\u56de\u6392\u5e8f\u540e\u7684\u7b2c K \u5927\u5143\u7d20 return numsArray[k - 1]; } public static void main(String[] args) { Solution sol = new Solution(); int[] nums = {3, 2, 1, 5, 6, 4}; int k = 2; System.out.println(\"The \" + k + \"th largest element is \" + sol.findKthLargest(nums, k)); } } \u8bf4\u660e\uff1a \u8f6c\u6362\u6570\u7ec4\u7c7b\u578b \uff1aJava \u4e2d\uff0c Arrays.sort() \u4e0d\u652f\u6301\u5bf9\u539f\u751f\u7c7b\u578b\uff08\u5982 int[] \uff09\u7684\u81ea\u5b9a\u4e49\u6bd4\u8f83\u5668\u3002\u56e0\u6b64\uff0c\u9700\u8981\u5c06 int[] \u8f6c\u6362\u4e3a Integer[] \uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7 Arrays.stream(nums).boxed().toArray(Integer[]::new) \u5b9e\u73b0\u3002 \u81ea\u5b9a\u4e49\u6392\u5e8f\u89c4\u5219 \uff1a\u901a\u8fc7 Comparator<Integer> \u63a5\u53e3\u5b9e\u73b0\u964d\u5e8f\u6392\u5e8f\uff0c\u6bd4\u8f83\u65f6 b - a \u4f1a\u5c06\u6570\u7ec4\u5143\u7d20\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u3002 \u8fd4\u56de\u7b2c K \u5927\u5143\u7d20 \uff1a\u6392\u5e8f\u5b8c\u6210\u540e\uff0c\u8fd4\u56de\u6570\u7ec4\u4e2d\u7b2c K \u4e2a\u5143\u7d20\uff08\u6570\u7ec4\u7d22\u5f15\u4e3a k - 1 \uff09\u3002 2.2 \u6392\u5e8f\u7b97\u6cd5\u4e3e\u4e00\u53cd\u4e09 2.2.1 LC56\uff1a\u5408\u5e76\u533a\u95f4 \u9898\u76ee\u63cf\u8ff0 \u7ed9\u5b9a\u82e5\u5e72\u4e2a\u95ed\u5408\u533a\u95f4 [x1, y1], [x2, y2], ... \uff0c\u8bf7\u5c06\u6240\u6709\u91cd\u53e0\u7684\u533a\u95f4\u5408\u5e76\u3002\u4f8b\u5982\uff0c\u533a\u95f4 [1, 3] \u548c [2, 6] \u53ef\u4ee5\u5408\u5e76\u4e3a [1, 6] \u3002 \u89e3\u9898\u601d\u8def \u6392\u5e8f \uff1a\u9996\u5148\uff0c\u6309\u7167\u533a\u95f4\u7684\u8d77\u59cb\u503c\u5bf9\u6240\u6709\u533a\u95f4\u8fdb\u884c\u6392\u5e8f\u3002 \u904d\u5386 \uff1a\u7136\u540e\u904d\u5386\u6bcf\u4e2a\u533a\u95f4\uff0c\u82e5\u5f53\u524d\u533a\u95f4\u4e0e\u524d\u4e00\u4e2a\u533a\u95f4\u91cd\u53e0\uff0c\u5219\u5408\u5e76\u5b83\u4eec\uff1b\u5426\u5219\u5c06\u5f53\u524d\u533a\u95f4\u76f4\u63a5\u52a0\u5165\u7ed3\u679c\u5217\u8868\u3002 \u4ee3\u7801\u5b9e\u73b0 import java.util.ArrayList; import java.util.Arrays; import java.util.List; class Solution { public int[][] merge(int[][] intervals) { // \u5982\u679c\u8f93\u5165\u4e3a\u7a7a\uff0c\u76f4\u63a5\u8fd4\u56de if (intervals.length == 0) return new int[0][0]; // \u6309\u7167\u533a\u95f4\u7684\u8d77\u59cb\u503c\u8fdb\u884c\u6392\u5e8f Arrays.sort(intervals, (a, b) -> Integer.compare(a[0], b[0])); List<int[]> merged = new ArrayList<>(); // \u904d\u5386\u6bcf\u4e00\u4e2a\u533a\u95f4 for (int[] interval : intervals) { // \u5982\u679c merged \u4e3a\u7a7a\u6216\u8005\u5f53\u524d\u533a\u95f4\u4e0e\u4e0a\u4e00\u4e2a\u533a\u95f4\u4e0d\u91cd\u53e0\uff0c\u76f4\u63a5\u52a0\u5165 if (merged.isEmpty() || merged.get(merged.size() - 1)[1] < interval[0]) { merged.add(interval); } else { // \u5982\u679c\u91cd\u53e0\uff0c\u66f4\u65b0\u4e0a\u4e00\u4e2a\u533a\u95f4\u7684\u7ed3\u675f\u4f4d\u7f6e merged.get(merged.size() - 1)[1] = Math.max(merged.get(merged.size() - 1)[1], interval[1]); } } // \u5c06 List<int[]> \u8f6c\u6362\u4e3a int[][] \u8fd4\u56de return merged.toArray(new int[merged.size()][]); } } \u8bb2\u89e3 \u81ea\u5b9a\u4e49\u6392\u5e8f \uff1a\u5728 Arrays.sort() \u4e2d\u4f7f\u7528 Lambda \u8868\u8fbe\u5f0f\u6765\u5bf9\u533a\u95f4\u8fdb\u884c\u6392\u5e8f\uff0c\u786e\u4fdd\u533a\u95f4\u6309\u7167\u8d77\u59cb\u503c\u5347\u5e8f\u6392\u5217\uff0c\u4fbf\u4e8e\u540e\u7eed\u7684\u5408\u5e76\u64cd\u4f5c\u3002 \u904d\u5386\u533a\u95f4 \uff1a\u4f7f\u7528\u589e\u5f3a\u7684 for \u5faa\u73af\u904d\u5386\u6bcf\u4e2a\u533a\u95f4\u3002\u901a\u8fc7\u6bd4\u8f83\u6bcf\u4e2a\u533a\u95f4\u7684\u8d77\u59cb\u503c\u4e0e\u5df2\u5408\u5e76\u533a\u95f4\u7684\u7ed3\u675f\u503c\u6765\u5224\u65ad\u5b83\u4eec\u662f\u5426\u91cd\u53e0\uff1a \u5982\u679c\u6ca1\u6709\u91cd\u53e0\uff0c\u5219\u5c06\u5f53\u524d\u533a\u95f4\u76f4\u63a5\u52a0\u5165 merged \u5217\u8868\u3002 \u5982\u679c\u91cd\u53e0\uff0c\u5219\u66f4\u65b0\u5df2\u5408\u5e76\u533a\u95f4\u7684\u7ed3\u675f\u503c\uff0c\u786e\u4fdd\u5b83\u53ef\u4ee5\u6db5\u76d6\u5f53\u524d\u533a\u95f4\u3002 \u7ed3\u679c\u8f6c\u6362 \uff1a\u7531\u4e8e merged \u662f\u4e00\u4e2a List<int[]> \uff0c\u6700\u540e\u4f7f\u7528 toArray() \u65b9\u6cd5\u5c06\u5176\u8f6c\u6362\u4e3a int[][] \u7c7b\u578b\u4ee5\u8fd4\u56de\u7ed3\u679c\u3002 2.2.2 LC252\uff1a\u4f1a\u8bae\u5ba4 \u9898\u76ee\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u7cfb\u5217\u4f1a\u8bae\u65f6\u95f4\u533a\u95f4\uff0c\u5224\u65ad\u662f\u5426\u80fd\u8ba9\u6240\u6709\u4f1a\u8bae\u65e0\u51b2\u7a81\u5730\u5b89\u6392\u5728\u4e00\u95f4\u4f1a\u8bae\u5ba4\u4e2d\u3002 \u89e3\u9898\u601d\u8def \u6392\u5e8f \uff1a\u9996\u5148\u5c06\u6240\u6709\u7684\u4f1a\u8bae\u6309\u7167\u5f00\u59cb\u65f6\u95f4\u8fdb\u884c\u6392\u5e8f\u3002 \u904d\u5386\u68c0\u67e5 \uff1a\u904d\u5386\u6bcf\u4e2a\u4f1a\u8bae\uff0c\u68c0\u67e5\u662f\u5426\u6709\u91cd\u53e0\u533a\u95f4\u3002 \u4ee3\u7801\u5b9e\u73b0 import java.util.Arrays; class Solution { public boolean canAttendMeetings(int[][] intervals) { // \u5982\u679c\u6ca1\u6709\u4f1a\u8bae\uff0c\u76f4\u63a5\u8fd4\u56de true if (intervals.length == 0) return true; // \u6309\u7167\u4f1a\u8bae\u7684\u5f00\u59cb\u65f6\u95f4\u8fdb\u884c\u6392\u5e8f Arrays.sort(intervals, (a, b) -> Integer.compare(a[0], b[0])); // \u68c0\u67e5\u4f1a\u8bae\u662f\u5426\u91cd\u53e0 for (int i = 1; i < intervals.length; i++) { // \u5982\u679c\u5f53\u524d\u4f1a\u8bae\u7684\u5f00\u59cb\u65f6\u95f4\u5c0f\u4e8e\u4e0a\u4e00\u4e2a\u4f1a\u8bae\u7684\u7ed3\u675f\u65f6\u95f4\uff0c\u5219\u6709\u91cd\u53e0 if (intervals[i][0] < intervals[i - 1][1]) { return false; } } return true; // \u5982\u679c\u6ca1\u6709\u91cd\u53e0\uff0c\u8fd4\u56de true } } \u8bb2\u89e3 \u6392\u5e8f \uff1a\u4f7f\u7528 Arrays.sort() \u65b9\u6cd5\u5c06\u4f1a\u8bae\u533a\u95f4\u6309\u7167\u5f00\u59cb\u65f6\u95f4\u8fdb\u884c\u6392\u5e8f\u3002Lambda \u8868\u8fbe\u5f0f (a, b) -> Integer.compare(a[0], b[0]) \u7528\u4e8e\u6307\u5b9a\u6392\u5e8f\u7684\u89c4\u5219\u3002 \u68c0\u67e5\u91cd\u53e0 \uff1a\u904d\u5386\u6392\u5e8f\u540e\u7684\u4f1a\u8bae\u533a\u95f4\uff0c\u4ece\u7b2c\u4e8c\u4e2a\u4f1a\u8bae\u5f00\u59cb\uff0c\u68c0\u67e5\u5176\u5f00\u59cb\u65f6\u95f4\u662f\u5426\u5c0f\u4e8e\u4e0a\u4e00\u4e2a\u4f1a\u8bae\u7684\u7ed3\u675f\u65f6\u95f4\u3002\u5982\u679c\u53d1\u73b0\u91cd\u53e0\uff0c\u7acb\u5373\u8fd4\u56de false \uff1b\u5982\u679c\u904d\u5386\u5b8c\u6240\u6709\u4f1a\u8bae\u90fd\u6ca1\u6709\u91cd\u53e0\uff0c\u5219\u8fd4\u56de true \u3002 2.2.3 LC347\uff1a\u524d K \u4e2a\u9ad8\u9891\u5143\u7d20 \u9898\u76ee\u63cf\u8ff0\uff1a \u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u7684\u6574\u6570\u6570\u7ec4\uff0c\u8fd4\u56de\u5176\u4e2d\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684\u524d K \u4e2a\u5143\u7d20\u3002 \u89e3\u9898\u601d\u8def\uff1a \u4f7f\u7528\u54c8\u5e0c\u8868\u7edf\u8ba1\u6bcf\u4e2a\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570\u3002 \u5c06\u54c8\u5e0c\u8868\u4e2d\u7684\u5143\u7d20\u653e\u5165\u4e00\u4e2a\u6570\u7ec4\u4e2d\uff0c\u6309\u51fa\u73b0\u6b21\u6570\u4ece\u9ad8\u5230\u4f4e\u6392\u5e8f\u3002 \u8fd4\u56de\u6392\u5e8f\u540e\u524d K \u4e2a\u5143\u7d20\u3002 import java.util.HashMap; import java.util.List; import java.util.ArrayList; import java.util.Map; class Solution { public int[] topKFrequent(int[] nums, int k) { // \u4f7f\u7528\u54c8\u5e0c\u8868\u7edf\u8ba1\u6bcf\u4e2a\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570 HashMap<Integer, Integer> frequencyMap = new HashMap<>(); for (int num : nums) { frequencyMap.put(num, frequencyMap.getOrDefault(num, 0) + 1); } // \u5c06\u54c8\u5e0c\u8868\u4e2d\u7684\u5143\u7d20\u8f6c\u6362\u4e3a\u5217\u8868 List<Map.Entry<Integer, Integer>> frequencyList = new ArrayList<>(frequencyMap.entrySet()); // \u4f7f\u7528\u9ed8\u8ba4\u7684\u6392\u5e8f\u51fd\u6570\u6309\u9891\u7387\u964d\u5e8f\u6392\u5217 frequencyList.sort((a, b) -> b.getValue() - a.getValue()); // \u53d6\u51fa\u524d K \u4e2a\u9891\u7387\u6700\u9ad8\u7684\u5143\u7d20 int[] result = new int[k]; for (int i = 0; i < k; i++) { result[i] = frequencyList.get(i).getKey(); } return result; } } 3. \u8d2a\u5fc3\u7b97\u6cd5 \u8d2a\u5fc3\u7b97\u6cd5\u662f\u4e00\u79cd\u89e3\u51b3\u95ee\u9898\u7684 \u7b56\u7565 \uff0c\u5176\u6838\u5fc3\u601d\u60f3\u662f\uff1a\u5728\u89e3\u51b3\u95ee\u9898\u7684\u6bcf\u4e00\u6b65\u4e2d\uff0c\u603b\u662f\u9009\u62e9\u5f53\u524d\u770b\u8d77\u6765 \u6700\u4f18\u7684\u9009\u62e9 \uff0c\u901a\u8fc7\u4e00\u7cfb\u5217\u8fd9\u6837\u7684\u5c40\u90e8\u6700\u4f18\u9009\u62e9\uff0c\u6700\u7ec8\u5e0c\u671b\u83b7\u5f97\u5168\u5c40\u6700\u4f18\u89e3\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c \u8d2a\u5fc3\u7b97\u6cd5\u5e76\u4e0d\u603b\u662f\u80fd\u5f97\u5230\u5168\u5c40\u6700\u4f18\u89e3 \u3002\u5b83\u53ea\u6709\u5728\u67d0\u4e9b\u7279\u5b9a\u95ee\u9898\u4e2d\u6709\u6548\uff0c\u7279\u522b\u662f\u5f53\u95ee\u9898\u6ee1\u8db3\u8d2a\u5fc3\u9009\u62e9\u6027\u8d28\u65f6\u3002 \u8d2a\u5fc3\u7b97\u6cd5\u7684\u7279\u70b9 \u5c40\u90e8\u6700\u4f18\u9009\u62e9 \uff1a \u8d2a\u5fc3\u7b97\u6cd5\u5728\u6bcf\u4e00\u6b65\u4e2d\u53ea\u505a\u51fa\u5f53\u524d\u770b\u8d77\u6765\u6700\u4f18\u7684\u9009\u62e9\uff0c\u800c \u4e0d\u5173\u5fc3\u4e4b\u540e\u53ef\u80fd\u53d1\u751f\u7684\u60c5\u51b5 \u3002\u5b83\u4e0d\u4f1a\u8003\u8651\u8fd9\u6b21\u9009\u62e9\u662f\u5426\u4f1a\u5f71\u54cd\u540e\u7eed\u51b3\u7b56\uff0c\u53ea\u770b\u5f53\u4e0b\u54ea\u4e2a\u9009\u9879\u662f\u6700\u6709\u5229\u7684\u3002\u4f8b\u5982\uff0c\u5728\u5206\u6570\u80cc\u5305\u95ee\u9898\u4e2d\uff0c\u8d2a\u5fc3\u7b56\u7565\u662f\u6bcf\u6b21\u4f18\u5148\u9009\u62e9\u5355\u4f4d\u91cd\u91cf\u4ef7\u503c\u6700\u9ad8\u7684\u7269\u54c1\uff0c\u56e0\u4e3a\u5b83\u5728\u5f53\u524d\u7684\u9009\u62e9\u4e2d\u5e26\u6765\u7684\u6536\u76ca\u6700\u5927\u3002 \u4f18\u70b9 \uff1a\u901a\u8fc7\u6bcf\u4e00\u6b65\u7684\u6700\u4f18\u9009\u62e9\uff0c\u53ef\u4ee5\u5feb\u901f\u627e\u5230\u4e00\u4e2a\u53ef\u884c\u89e3\u3002\u8d2a\u5fc3\u7b97\u6cd5\u7684\u89c4\u5219\u7b80\u5355\u3001\u76f4\u89c2\uff0c\u6613\u4e8e\u5b9e\u73b0\uff0c\u901a\u5e38\u53ef\u4ee5\u901a\u8fc7\u4e00\u6b21\u626b\u63cf\u6216\u6392\u5e8f\u89e3\u51b3\u95ee\u9898\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u4f4e\u3002\u4f8b\u5982\u5728\u5206\u6570\u80cc\u5305\u95ee\u9898\u4e2d\uff0c\u8d2a\u5fc3\u7b97\u6cd5\u53ea\u9700\u8981\u6309\u5355\u4f4d\u4ef7\u503c\u6392\u5e8f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a (O(n log n)) \u3002 \u7f3a\u70b9 \uff1a\u5c40\u90e8\u6700\u4f18\u89e3\u4e0d\u4e00\u5b9a\u80fd\u4fdd\u8bc1\u5168\u5c40\u6700\u4f18\uff0c\u56e0\u4e3a\u5728\u4e00\u4e9b\u95ee\u9898\u4e2d\uff0c\u6700\u4f73\u7684\u6574\u4f53\u65b9\u6848\u4f9d\u8d56\u4e8e\u591a\u6b65\u51b3\u7b56\u7684\u7efc\u5408\u6548\u679c\uff0c\u800c\u4e0d\u662f\u5355\u7eaf\u7684\u6bcf\u4e00\u6b65\u6700\u4f18\u3002\u8d2a\u5fc3\u7b97\u6cd5\u65e0\u6cd5\u901a\u8fc7\u5c40\u90e8\u6700\u4f18\u89e3\u627e\u5230\u5168\u5c40\u6700\u4f18\u89e3\uff0c\u5c24\u5176\u5728\u590d\u6742\u95ee\u9898\uff08\u5982 0-1 \u80cc\u5305\u95ee\u9898\uff09\u4e2d\uff0c\u5b83\u53ef\u80fd\u4f1a\u9677\u5165\u6b21\u4f18\u89e3\u3002 \u4e0d\u53ef\u56de\u6eaf \uff1a \u8d2a\u5fc3\u7b97\u6cd5\u7684\u4e00\u4e2a\u91cd\u8981\u7279\u70b9\u662f \u51b3\u7b56\u4e0d\u53ef\u56de\u5934\u4fee\u6539 \u3002\u4e00\u65e6\u505a\u51fa\u67d0\u4e2a\u9009\u62e9\uff0c\u7b97\u6cd5\u5c31\u4e0d\u4f1a\u518d\u8003\u8651\u6539\u53d8\u5b83\uff0c\u5373\u4f7f\u540e\u7eed\u53d1\u73b0\u8fd9\u4e2a\u9009\u62e9\u53ef\u80fd\u4e0d\u662f\u6700\u4f18\u7684\u3002\u56e0\u4e3a\u8d2a\u5fc3\u7b97\u6cd5\u4f9d\u8d56\u7684\u662f\u5f53\u524d\u6700\u4f18\u9009\u62e9\u7684\u7b56\u7565\uff0c\u6240\u4ee5\u5b83\u4e0d\u4f1a\u4e3a\u672a\u6765\u7684\u9009\u62e9\u7559\u4e0b\u56de\u65cb\u4f59\u5730\u3002 \u4f18\u70b9 \uff1a\u7531\u4e8e\u4e0d\u9700\u8981\u56de\u6eaf\uff0c\u8d2a\u5fc3\u7b97\u6cd5\u6267\u884c\u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u901a\u5e38\u6bd4\u9700\u8981\u56de\u6eaf\u7684\u7b97\u6cd5\uff08\u5982\u52a8\u6001\u89c4\u5212\u3001\u56de\u6eaf\u6cd5\u7b49\uff09\u66f4\u4f4e\u3002\u8d2a\u5fc3\u7b97\u6cd5\u7684\u9ad8\u6548\u6027\u4f53\u73b0\u5728\u5176\u5feb\u901f\u3001\u76f4\u63a5\u7684\u89e3\u51b3\u601d\u8def\u4e0a\uff0c\u9002\u7528\u4e8e\u5904\u7406\u5927\u89c4\u6a21\u95ee\u9898\u65f6\u7684\u9ad8\u6548\u6c42\u89e3\u3002 \u7f3a\u70b9 \uff1a\u7531\u4e8e\u8d2a\u5fc3\u7b97\u6cd5\u4e0d\u5177\u5907\u56de\u6eaf\u80fd\u529b\uff0c\u5b83\u53ea\u80fd\u5728\u7b26\u5408\u8d2a\u5fc3\u9009\u62e9\u6027\u8d28\u7684\u95ee\u9898\u4e2d\u6709\u6548\u3002\u5982\u679c\u95ee\u9898\u4e0d\u6ee1\u8db3\u8fd9\u79cd\u6027\u8d28\uff0c\u7b97\u6cd5\u53ef\u80fd\u4f1a\u5728\u540e\u7eed\u6b65\u9aa4\u4e2d\u9677\u5165\u6b21\u4f18\u89e3\u6216\u6b7b\u80e1\u540c\uff0c\u65e0\u6cd5\u8fbe\u5230\u5168\u5c40\u6700\u4f18\u89e3\u3002 \u5177\u4f53\u6b65\u9aa4 \u8d2a\u5fc3\u7b97\u6cd5\u901a\u5e38\u9075\u5faa\u4ee5\u4e0b\u57fa\u672c\u6b65\u9aa4\uff1a \u660e\u786e\u8d2a\u5fc3\u7b56\u7565 \uff1a\u786e\u5b9a\u6bcf\u4e00\u6b65\u7684\u5c40\u90e8\u6700\u4f18\u89e3\u9009\u62e9\u7b56\u7565\u3002 \u6392\u5e8f \uff1a\u5982\u679c\u95ee\u9898\u6d89\u53ca\u591a\u4e2a\u9009\u62e9\uff0c\u901a\u5e38\u9700\u8981\u5bf9\u5176\u8fdb\u884c\u6392\u5e8f\uff08\u5982\u6309\u7ed3\u675f\u65f6\u95f4\u3001\u5355\u4f4d\u4ef7\u503c\u7b49\uff09\u3002 \u9010\u6b65\u9009\u62e9 \uff1a\u6839\u636e\u8d2a\u5fc3\u7b56\u7565\uff0c\u6309\u7167\u6392\u5e8f\u7ed3\u679c\u9010\u6b65\u9009\u62e9\u6700\u4f18\u9879\u3002 \u68c0\u67e5\u53ef\u884c\u6027 \uff1a\u6bcf\u6b21\u9009\u62e9\u65f6\uff0c\u786e\u4fdd\u5f53\u524d\u9009\u62e9\u6ee1\u8db3\u95ee\u9898\u7684\u7ea6\u675f\u6761\u4ef6\uff08\u5982\u4e0d\u51b2\u7a81\u3001\u4e0d\u8d85\u51fa\u5bb9\u91cf\u7b49\uff09\u3002 \u6784\u9020\u89e3 \uff1a\u5c06\u6240\u6709\u7684\u9009\u62e9\u7ec4\u5408\u8d77\u6765\uff0c\u5f62\u6210\u95ee\u9898\u7684\u6700\u7ec8\u89e3\u3002 \u8d2a\u5fc3\u7b97\u6cd5\u7684\u9002\u7528\u6761\u4ef6 \u8981\u5224\u65ad\u4e00\u4e2a\u95ee\u9898\u662f\u5426\u9002\u5408\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u53ef\u4ee5\u89c2\u5bdf\u4ee5\u4e0b\u7279\u5f81\uff1a \u8d2a\u5fc3\u9009\u62e9\u6027\u8d28 \uff1a\u5728\u6bcf\u4e00\u6b65\u4e2d\uff0c\u9009\u62e9\u7684\u5c40\u90e8\u6700\u4f18\u89e3\u80fd\u591f\u4fdd\u8bc1\u4e0d\u4f1a\u5f71\u54cd\u540e\u7eed\u9009\u62e9\u7684\u6700\u4f18\u6027\uff0c\u5373\u8d2a\u5fc3\u9009\u62e9\u5728\u6bcf\u4e00\u6b65\u90fd\u80fd\u4fdd\u6301\u5168\u5c40\u6700\u4f18\u3002 \u65e0\u540e\u6548\u6027 \uff1a\u5f53\u524d\u7684\u9009\u62e9\u4e0d\u4f1a\u5f71\u54cd\u672a\u6765\u7684\u9009\u62e9\u3002\u6bcf\u4e2a\u9009\u62e9\u7684\u7ed3\u679c\u53ea\u4f9d\u8d56\u5f53\u524d\u72b6\u6001\uff0c\u800c\u4e0d\u4f1a\u4f9d\u8d56\u4e4b\u524d\u7684\u51b3\u7b56\u3002\u5373\u4e00\u65e6\u505a\u51fa\u4e86\u67d0\u4e2a\u9009\u62e9\uff0c\u8be5\u9009\u62e9\u5c31\u4e0d\u53ef\u6539\u53d8\u3002 \u5982\u679c\u95ee\u9898\u6ee1\u8db3\u4ee5\u4e0a\u4e24\u70b9\uff0c\u90a3\u4e48\u901a\u5e38\u53ef\u4ee5\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\u6c42\u89e3\u3002 \u8d2a\u5fc3\u7b97\u6cd5 vs \u52a8\u6001\u89c4\u5212\u7684\u5224\u5b9a\u6807\u51c6 \u5728\u533a\u5206\u4e00\u4e2a\u95ee\u9898\u662f\u5426\u9002\u5408\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\u6216\u52a8\u6001\u89c4\u5212\u65f6\uff0c \u6700\u4f18\u5b50\u7ed3\u6784 \u548c \u5b50\u95ee\u9898\u91cd\u53e0 \u662f\u5173\u952e\u7684\u5224\u5b9a\u6807\u51c6\uff1a \u8d2a\u5fc3\u9009\u62e9\u7684\u9002\u7528\u6761\u4ef6 \uff1a \u5c40\u90e8\u6700\u4f18\u9009\u62e9\u6027\u8d28 \uff1a\u8d2a\u5fc3\u7b97\u6cd5\u6bcf\u4e00\u6b65\u505a\u51fa\u7684\u9009\u62e9\u90fd\u662f\u5c40\u90e8\u6700\u4f18\u89e3\uff0c\u4e14\u8fd9\u4e9b\u5c40\u90e8\u6700\u4f18\u89e3\u6784\u6210\u4e86\u5168\u5c40\u6700\u4f18\u89e3\u3002\u8fd9\u79cd\u6027\u8d28\u4e00\u822c\u5b58\u5728\u4e8e\u53ef\u4ee5\u901a\u8fc7\u9010\u6b65\u9009\u62e9\u89e3\u51b3\u7684 \u7b80\u5355\u4f18\u5316\u95ee\u9898 \u3002 \u65e0\u540e\u6548\u6027 \uff1a\u672a\u6765\u7684\u51b3\u7b56\u4e0d\u4f9d\u8d56\u4e8e\u4e4b\u524d\u7684\u9009\u62e9\uff0c\u56e0\u6b64\u4e00\u65e6\u505a\u51fa\u4e86\u9009\u62e9\uff0c\u4e0d\u9700\u8981\u56de\u6eaf\u68c0\u67e5\u3002\u4f8b\u5982\uff0c \u5206\u6570\u80cc\u5305\u95ee\u9898 \uff0c\u6bcf\u6b21\u9009\u62e9\u5355\u4f4d\u4ef7\u503c\u6700\u9ad8\u7684\u7269\u54c1\u4e0d\u4f1a\u5f71\u54cd\u4e4b\u540e\u7684\u9009\u62e9\u3002 \u52a8\u6001\u89c4\u5212\u7684\u9002\u7528\u6761\u4ef6 \uff1a \u6700\u4f18\u5b50\u7ed3\u6784 \uff1a\u5168\u5c40\u6700\u4f18\u89e3\u4f9d\u8d56\u4e8e\u5b50\u95ee\u9898\u7684\u6700\u4f18\u89e3\u3002\u5982\u679c\u6bcf\u4e2a\u5b50\u95ee\u9898\u7684\u89e3\u90fd\u5f71\u54cd\u5230\u5168\u5c40\u6700\u4f18\u89e3\uff0c\u90a3\u4e48\u8fd9\u79cd\u95ee\u9898\u901a\u5e38\u9700\u8981\u4f7f\u7528\u52a8\u6001\u89c4\u5212\u6765\u89e3\u51b3\u3002\u80cc\u5305\u95ee\u9898\u4e2d\u7684 0-1 \u80cc\u5305\u95ee\u9898 \u5c31\u5c5e\u4e8e\u6b64\u7c7b\u95ee\u9898\uff0c\u5f53\u524d\u7269\u54c1\u662f\u5426\u9009\u5165\u80cc\u5305\u4f1a\u5f71\u54cd\u672a\u6765\u7684\u9009\u62e9\uff0c\u56e0\u6b64\u65e0\u6cd5\u7b80\u5355\u901a\u8fc7\u8d2a\u5fc3\u7b56\u7565\u5f97\u5230\u6700\u4f18\u89e3\u3002 \u5b50\u95ee\u9898\u91cd\u53e0 \uff1a\u5982\u679c\u95ee\u9898\u53ef\u4ee5\u88ab\u62c6\u5206\u4e3a\u591a\u4e2a\u5b50\u95ee\u9898\uff0c\u4e14\u8fd9\u4e9b\u5b50\u95ee\u9898\u4e4b\u95f4\u5b58\u5728\u91cd\u53e0\uff08\u5373\u67d0\u4e2a\u5b50\u95ee\u9898\u7684\u89e3\u4f1a\u591a\u6b21\u88ab\u4f7f\u7528\uff09\uff0c\u90a3\u4e48\u52a8\u6001\u89c4\u5212\u662f\u66f4\u6709\u6548\u7684\u9009\u62e9\u3002 \u603b\u7ed3\u6765\u770b\uff0c\u5982\u679c\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u5355\u7eaf\u7684 \u5c40\u90e8\u6700\u4f18\u9009\u62e9 \u89e3\u51b3\uff0c\u5e76\u4e14\u672a\u6765\u7684\u9009\u62e9\u4e0d\u4f9d\u8d56\u4e8e\u8fc7\u53bb\u7684\u9009\u62e9\uff0c\u901a\u5e38\u53ef\u4ee5\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\uff1b\u5426\u5219\u9700\u8981\u901a\u8fc7\u52a8\u6001\u89c4\u5212\u6765\u89e3\u51b3\u95ee\u9898\u3002 \u7b80\u5355\u4f8b\u5b50 1. \u5206\u6570\u80cc\u5305\u95ee\u9898 \uff08\u8d2a\u5fc3\u7b97\u6cd5\uff09 \u95ee\u9898\u63cf\u8ff0 \uff1a\u4f60\u6709\u4e00\u4e2a\u5bb9\u91cf\u4e3a 50 \u7684\u80cc\u5305\uff0c\u548c\u4e00\u5806\u7269\u54c1\uff0c\u6bcf\u4ef6\u7269\u54c1\u90fd\u6709\u91cd\u91cf\u548c\u4ef7\u503c\u3002\u4f60\u53ef\u4ee5\u5c06\u6bcf\u4ef6\u7269\u54c1\u6309\u4efb\u610f\u6bd4\u4f8b\u88c5\u5165\u80cc\u5305\uff08\u4f8b\u5982\u53ef\u4ee5\u88c5\u5165\u7269\u54c1\u7684\u4e00\u90e8\u5206\uff09\uff0c\u76ee\u6807\u662f\u8ba9\u80cc\u5305\u91cc\u7684\u7269\u54c1\u603b\u4ef7\u503c\u6700\u5927\u5316\u3002 \u8d2a\u5fc3\u7b56\u7565 \uff1a\u4f18\u5148\u9009\u62e9\u5355\u4f4d\u91cd\u91cf\u4ef7\u503c\u6700\u9ad8\u7684\u7269\u54c1\uff0c\u5c3d\u53ef\u80fd\u591a\u5730\u88c5\u5165\u80cc\u5305\u3002 \u5206\u6790\u6b65\u9aa4\uff1a \u660e\u786e\u8d2a\u5fc3\u7b56\u7565 \uff1a\u6bcf\u6b21\u9009\u62e9\u5355\u4f4d\u91cd\u91cf\u4ef7\u503c\u6700\u9ad8\u7684\u7269\u54c1\uff0c\u5c3d\u53ef\u80fd\u591a\u88c5\u5165\u80cc\u5305\u3002 \u6392\u5e8f \uff1a\u5c06\u6240\u6709\u7269\u54c1\u6309\u7167\u5355\u4f4d\u91cd\u91cf\u7684\u4ef7\u503c\u4ece\u9ad8\u5230\u4f4e\u6392\u5e8f\u3002 \u9010\u6b65\u9009\u62e9 \uff1a\u6309\u7167\u6392\u5e8f\u540e\u7684\u987a\u5e8f\uff0c\u4f18\u5148\u9009\u62e9\u5355\u4f4d\u4ef7\u503c\u6700\u9ad8\u7684\u7269\u54c1\uff0c\u76f4\u5230\u80cc\u5305\u88c5\u6ee1\u3002 \u68c0\u67e5\u53ef\u884c\u6027 \uff1a\u6bcf\u6b21\u9009\u62e9\u7269\u54c1\u65f6\uff0c\u68c0\u67e5\u80cc\u5305\u5269\u4f59\u5bb9\u91cf\u662f\u5426\u8db3\u591f\u3002\u5982\u679c\u5bb9\u91cf\u4e0d\u8db3\uff0c\u5c06\u7269\u54c1\u7684\u4e00\u90e8\u5206\u88c5\u5165\u80cc\u5305\u3002 \u6784\u9020\u89e3 \uff1a\u5c06\u9009\u5165\u80cc\u5305\u7684\u7269\u54c1\u7ec4\u5408\u8d77\u6765\uff0c\u8ba1\u7b97\u603b\u4ef7\u503c\uff0c\u5f97\u5230\u95ee\u9898\u7684\u89e3\u3002 2. 0-1 \u80cc\u5305\u95ee\u9898 \uff08\u52a8\u6001\u89c4\u5212\uff09 \u95ee\u9898\u63cf\u8ff0 \uff1a\u4f60\u6709\u4e00\u4e2a\u5bb9\u91cf\u4e3a 50 \u7684\u80cc\u5305\u548c\u4e00\u5806\u7269\u54c1\uff0c\u6bcf\u4ef6\u7269\u54c1\u90fd\u6709\u4e00\u4e2a\u786e\u5b9a\u7684\u91cd\u91cf\u548c\u4ef7\u503c\u3002\u4f60\u53ea\u80fd\u9009\u62e9 \u5c06\u67d0\u4ef6\u7269\u54c1\u5b8c\u5168\u653e\u5165\u80cc\u5305 \u6216\u8005 \u4e0d\u653e\u5165 \uff0c\u4e0d\u80fd\u53ea\u88c5\u4e00\u90e8\u5206\u3002\u76ee\u6807\u662f\u9009\u62e9\u4e00\u4e9b\u7269\u54c1\u653e\u5165\u80cc\u5305\uff0c\u4f7f\u5f97\u80cc\u5305\u4e2d\u7684\u7269\u54c1\u603b\u4ef7\u503c\u6700\u5927\u5316\u3002 \u52a8\u6001\u89c4\u5212\u601d\u8def \uff1a\u5bf9\u4e8e\u6bcf\u4ef6\u7269\u54c1\uff0c\u4f60\u9700\u8981\u51b3\u5b9a\u662f\u5426\u653e\u5165\u80cc\u5305\u3002\u6bcf\u6b21\u7684\u9009\u62e9\u90fd\u4f9d\u8d56\u4e8e\u80cc\u5305\u5f53\u524d\u7684\u5bb9\u91cf\u4ee5\u53ca\u4e4b\u524d\u7684\u9009\u62e9\u3002\u56e0\u4e3a\u9009\u62e9\u4e00\u6b21\u7269\u54c1\u4f1a\u5f71\u54cd\u5230\u540e\u7eed\u80fd\u88c5\u591a\u5c11\u4e1c\u897f\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u800c\u9700\u8981\u901a\u8fc7\u52a8\u6001\u89c4\u5212\u6765\u8003\u8651\u6240\u6709\u53ef\u80fd\u7684\u7ec4\u5408\u3002 \u7528\u7b80\u5355\u7684\u8bdd\u6765\u7406\u89e3\u52a8\u6001\u89c4\u5212\u7684\u601d\u8def\uff1a \u72b6\u6001 \uff1a\u6211\u4eec\u7528 dp[i][w] \u8868\u793a \u524d i \u4e2a\u7269\u54c1 \u5728 \u5bb9\u91cf\u4e3a w \u7684\u80cc\u5305 \u4e2d\u6240\u80fd\u88c5\u7684\u6700\u5927\u603b\u4ef7\u503c\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c dp[i][w] \u662f\u4e00\u4e2a\u4e2d\u95f4\u7ed3\u679c\uff0c\u544a\u8bc9\u6211\u4eec\u5982\u679c\u53ea\u8003\u8651\u524d i \u4e2a\u7269\u54c1\uff0c\u5e76\u4e14\u80cc\u5305\u5bb9\u91cf\u4e3a w\uff0c\u6211\u4eec\u80fd\u88c5\u7684\u6700\u9ad8\u4ef7\u503c\u662f\u591a\u5c11\u3002 \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b \uff1a\u8fd9\u4e2a\u5c31\u662f\u52a8\u6001\u89c4\u5212\u4e2d\u7684\u201c\u89c4\u5219\u201d\uff0c\u7528\u6765\u6307\u5bfc\u6211\u4eec\u5982\u4f55\u6839\u636e\u524d\u9762\u7684\u8ba1\u7b97\u7ed3\u679c\u63a8\u5bfc\u51fa\u5f53\u524d\u7684\u6700\u4f18\u89e3\u3002 \u5bf9\u4e8e\u6bcf\u4ef6\u7269\u54c1 i \uff0c\u4f60\u6709\u4e24\u79cd\u9009\u62e9\uff1a - \u4e0d\u9009\u8fd9\u4ef6\u7269\u54c1 \uff1a\u90a3\u4e48\u6700\u5927\u4ef7\u503c\u5c31\u662f dp[i-1][w] \uff0c\u5373\u80cc\u5305\u5bb9\u91cf\u4fdd\u6301\u4e0d\u53d8\uff0c\u524d\u9762 i-1 \u4e2a\u7269\u54c1\u7684\u6700\u4f18\u89e3\u3002 - \u9009\u8fd9\u4ef6\u7269\u54c1 \uff1a\u5982\u679c\u9009\u62e9\u7269\u54c1 i \uff0c\u5219\u5f53\u524d\u7684\u80cc\u5305\u5bb9\u91cf\u51cf\u5c11 weight[i] \uff0c\u800c\u6211\u4eec\u8fd8\u83b7\u5f97\u4e86 value[i] \u8fd9\u4e2a\u7269\u54c1\u7684\u4ef7\u503c\u3002\u6240\u4ee5\u6700\u5927\u4ef7\u503c\u53d8\u6210\u4e86 dp[i-1][w - weight[i]] + value[i] \u3002 \u4e24\u8005\u53d6\u8f83\u5927\u503c\uff1a dp[i][w] = max(dp[i-1][w], dp[i-1][w - weight[i]] + value[i]) \u7406\u89e3\u8fd9\u6bb5\u516c\u5f0f \uff1a \u5982\u679c\u4f60\u4e0d\u9009\u7269\u54c1 i \uff0c\u90a3\u4e48\u4f60\u53ea\u80fd\u4f9d\u8d56\u524d\u9762 i-1 \u4e2a\u7269\u54c1\u5728\u5bb9\u91cf\u4e3a w \u65f6\u7684\u6700\u4f18\u89e3\uff0c\u5373 dp[i-1][w] \u3002 \u5982\u679c\u4f60\u9009\u4e86\u7269\u54c1 i \uff0c\u90a3\u4f60\u9700\u8981\u817e\u51fa\u8db3\u591f\u7684\u7a7a\u95f4\u6765\u653e\u5b83\uff0c\u4e5f\u5c31\u662f\u8bf4\u80cc\u5305\u5bb9\u91cf\u4f1a\u51cf\u5c11 weight[i] \uff0c\u7136\u540e\u4f60\u80fd\u83b7\u5f97\u8fd9\u4ef6\u7269\u54c1\u7684\u4ef7\u503c value[i] \uff0c\u518d\u52a0\u4e0a\u524d i-1 \u4e2a\u7269\u54c1\u5728\u51cf\u5c11\u4e86\u7684\u5bb9\u91cf w - weight[i] \u65f6\u7684\u6700\u4f18\u89e3\uff0c\u5373 dp[i-1][w - weight[i]] \u3002 \u5982\u4f55\u6c42\u89e3 \uff1a\u6211\u4eec\u4ece\u7a7a\u80cc\u5305\u5f00\u59cb\uff0c\u9010\u6b65\u589e\u52a0\u7269\u54c1\u548c\u5bb9\u91cf\uff0c\u6bcf\u6b21\u7528\u4e0a\u9762\u8fd9\u4e2a\u516c\u5f0f\u53bb\u66f4\u65b0\u5f53\u524d\u80cc\u5305\u5bb9\u91cf\u7684\u6700\u4f18\u89e3\u3002\u901a\u8fc7\u8fd9\u4e2a\u9012\u63a8\u8fc7\u7a0b\uff0c\u6700\u540e\u5c31\u80fd\u5f97\u5230\u6574\u4e2a\u80cc\u5305\u7684\u6700\u5927\u4ef7\u503c\u3002 \u4e3e\u4e2a\u7b80\u5355\u4f8b\u5b50\uff1a \u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u80cc\u5305\u5bb9\u91cf\u4e3a 5\uff0c\u7269\u54c1\u5982\u4e0b\uff1a - \u7269\u54c1 1\uff1a\u91cd\u91cf 2\uff0c\u4ef7\u503c 3 - \u7269\u54c1 2\uff1a\u91cd\u91cf 3\uff0c\u4ef7\u503c 4 - \u7269\u54c1 3\uff1a\u91cd\u91cf 4\uff0c\u4ef7\u503c 5 \u52a8\u6001\u89c4\u5212\u8868\u7684\u6784\u5efa\u8fc7\u7a0b \uff1a i\\w 0 1 2 3 4 5 0 0 0 0 0 0 0 1 0 0 3 3 3 3 2 0 0 3 4 4 7 3 0 0 3 4 5 7 \u5f53 i = 1 \uff08\u53ea\u8003\u8651\u7269\u54c11\uff09\uff1a\u7269\u54c11\u7684\u91cd\u91cf\u4e3a2\uff0c\u6240\u4ee5\u5f53\u80cc\u5305\u5bb9\u91cf\u5c0f\u4e8e2\u65f6\uff0c\u65e0\u6cd5\u653e\u5165\uff0c\u4ef7\u503c\u4e3a0\uff1b\u5f53\u5bb9\u91cf\u7b49\u4e8e2\u6216\u5927\u4e8e2\u65f6\uff0c\u653e\u5165\u7269\u54c11\uff0c\u4ef7\u503c\u4e3a3\u3002 \u5f53 i = 2 \uff08\u8003\u8651\u524d\u4e24\u4e2a\u7269\u54c1\uff09\uff1a\u5728\u5bb9\u91cf\u4e3a3\u65f6\uff0c\u653e\u5165\u7269\u54c12\u6bd4\u7269\u54c11\u597d\uff0c\u4ef7\u503c\u4e3a4\uff1b\u5f53\u5bb9\u91cf\u4e3a5\u65f6\uff0c\u653e\u5165\u7269\u54c11\u548c\u7269\u54c12\uff0c\u4ef7\u503c\u4e3a7\u3002 \u5f53 i = 3 \uff08\u8003\u8651\u4e09\u4e2a\u7269\u54c1\uff09\uff1a\u7269\u54c13\u592a\u91cd\uff0c\u4e0d\u80fd\u653e\u5165\u80cc\u5305\uff0c\u4e4b\u524d\u7684\u6700\u4f18\u503c\u4fdd\u6301\u4e0d\u53d8\u3002 \u6700\u7ec8\uff0c\u6211\u4eec\u5f97\u5230\u7684\u6700\u5927\u4ef7\u503c\u4e3a7\u3002 3. \u6d3b\u52a8\u9009\u62e9\u95ee\u9898 \uff08\u8d2a\u5fc3\u7b97\u6cd5\uff09 \u95ee\u9898 \uff1a\u4f60\u6709\u4e00\u7cfb\u5217\u6d3b\u52a8\uff0c\u6bcf\u4e2a\u6d3b\u52a8\u90fd\u6709\u5f00\u59cb\u65f6\u95f4\u548c\u7ed3\u675f\u65f6\u95f4\u3002\u4f60\u9700\u8981\u9009\u62e9\u5c3d\u53ef\u80fd\u591a\u7684\u6d3b\u52a8\uff0c\u5e76\u4e14\u8fd9\u4e9b\u6d3b\u52a8\u4e0d\u80fd\u91cd\u53e0\u3002 \u8d2a\u5fc3\u7b56\u7565 \uff1a\u6bcf\u6b21\u9009\u62e9\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u4e14\u4e0d\u4e0e\u5176\u4ed6\u6d3b\u52a8\u51b2\u7a81\u7684\u6d3b\u52a8\u3002 \u6b65\u9aa4 \uff1a 1. \u660e\u786e\u8d2a\u5fc3\u7b56\u7565 \uff1a\u6bcf\u6b21\u9009\u62e9\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u7684\u6d3b\u52a8\uff0c\u4ee5\u7559\u51fa\u66f4\u591a\u65f6\u95f4\u7ed9\u5176\u4ed6\u6d3b\u52a8\u3002 2. \u6392\u5e8f \uff1a\u5c06\u6d3b\u52a8\u6309\u7ed3\u675f\u65f6\u95f4\u4ece\u65e9\u5230\u665a\u6392\u5e8f\u3002 3. \u9010\u6b65\u9009\u62e9 \uff1a\u4ece\u7b2c\u4e00\u4e2a\u6d3b\u52a8\u5f00\u59cb\uff0c\u4f9d\u6b21\u9009\u62e9\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u4e14\u4e0e\u4e4b\u524d\u6d3b\u52a8\u4e0d\u51b2\u7a81\u7684\u6d3b\u52a8\u3002 4. \u68c0\u67e5\u53ef\u884c\u6027 \uff1a\u6bcf\u6b21\u9009\u62e9\u6d3b\u52a8\u65f6\uff0c\u68c0\u67e5\u8be5\u6d3b\u52a8\u662f\u5426\u4e0e\u5df2\u7ecf\u9009\u62e9\u7684\u6d3b\u52a8\u51b2\u7a81\u3002 5. \u6784\u9020\u89e3 \uff1a\u5c06\u6bcf\u6b21\u9009\u62e9\u7684\u6d3b\u52a8\u52a0\u5165\u6700\u7ec8\u89e3\uff0c\u76f4\u5230\u6ca1\u6709\u6d3b\u52a8\u53ef\u4ee5\u518d\u9009\u3002 \u8d2a\u5fc3\u7b97\u6cd5\u7684\u5c40\u9650\u6027 \u8d2a\u5fc3\u7b97\u6cd5\u5e76\u4e0d\u603b\u662f\u80fd\u627e\u5230\u6700\u4f18\u89e3\u3002\u6bd4\u5982\uff1a 1. 0-1 \u80cc\u5305\u95ee\u9898 \u5728\u8fd9\u4e2a\u95ee\u9898\u4e2d\uff0c\u4f60\u5fc5\u987b\u9009\u62e9 \u5b8c\u6574\u7684\u7269\u54c1 \uff08\u8981\u4e48\u5168\u9009\uff0c\u8981\u4e48\u4e0d\u9009\uff09\uff0c\u800c\u4e0d\u80fd\u9009\u62e9\u7269\u54c1\u7684\u4e00\u90e8\u5206\u3002\u5982\u679c\u4f60\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\u6765\u9009\u62e9\u5355\u4f4d\u4ef7\u503c\u6700\u9ad8\u7684\u7269\u54c1\uff0c\u5f88\u53ef\u80fd\u4f1a\u56e0\u4e3a\u91cd\u91cf\u9650\u5236\u800c\u65e0\u6cd5\u9009\u62e9\u6700\u4f18\u7ec4\u5408\u3002 2. \u6700\u77ed\u8def\u5f84\u95ee\u9898 \u5728\u67d0\u4e9b\u56fe\u4e0a\uff0c\u8d2a\u5fc3\u7b56\u7565\uff08\u603b\u662f\u9009\u62e9\u8ddd\u79bb\u6700\u8fd1\u7684\u8282\u70b9\uff09\u5e76\u4e0d\u603b\u80fd\u627e\u5230\u6700\u77ed\u8def\u5f84\u3002 \u603b\u7ed3\uff1a \u8d2a\u5fc3\u7b97\u6cd5\u662f\u4e00\u79cd\u7b80\u5355\u800c\u9ad8\u6548\u7684\u7b56\u7565\uff0c\u9002\u5408\u7528\u5728\u90a3\u4e9b \u53ef\u4ee5\u901a\u8fc7\u5c40\u90e8\u6700\u4f18\u89e3\u5f97\u5230\u5168\u5c40\u6700\u4f18\u89e3 \u7684\u95ee\u9898\u4e0a\u3002\u5b83\u7684\u5173\u952e\u5728\u4e8e\u6bcf\u4e00\u6b65\u90fd\u505a\u51fa\u6700\u597d\u7684\u5c40\u90e8\u9009\u62e9\uff0c\u5e0c\u671b\u6700\u7ec8\u5f97\u5230\u6700\u4f18\u89e3\u3002\u867d\u7136\u5e76\u4e0d\u662f\u6240\u6709\u95ee\u9898\u90fd\u9002\u5408\u7528\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u4f46\u5728\u5408\u9002\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u80fd\u5feb\u901f\u627e\u5230\u89e3\u3002 3.1 \u8d2a\u5fc3\u7b97\u6cd5\u4f8b\u9898\u8bb2\u89e3 3.1.1 LC455: \u5206\u53d1\u997c\u5e72 \u9898\u76ee\u63cf\u8ff0 \u7ed9\u5b9a\u4e24\u4e2a\u6570\u7ec4\uff0c g \u8868\u793a\u5b69\u5b50\u7684\u9700\u6c42\u5927\u5c0f\uff0c s \u8868\u793a\u997c\u5e72\u7684\u5927\u5c0f\u3002\u8bf7\u4f60\u5c3d\u53ef\u80fd\u5730\u7528\u997c\u5e72\u6ee1\u8db3\u5b69\u5b50\u7684\u9700\u6c42\uff0c\u6bcf\u4e2a\u5b69\u5b50\u6700\u591a\u53ea\u80fd\u83b7\u5f97\u4e00\u5757\u997c\u5e72\u3002\u5982\u679c\u4e00\u4e2a\u5b69\u5b50\u7684\u9700\u6c42\u5f97\u5230\u6ee1\u8db3\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5b69\u5b50\u5c31\u53ef\u4ee5\u5feb\u4e50\u5730\u5403\u5230\u997c\u5e72\u3002\u8bf7\u4f60\u8fd4\u56de\u80fd\u591f\u4f7f\u591a\u5c11\u4e2a\u5b69\u5b50\u6ee1\u8db3\u3002 \u4ee3\u7801\u5b9e\u73b0 class Solution { public int findContentChildren(int[] g, int[] s) { // \u5c06\u5b69\u5b50\u7684\u9700\u6c42\u548c\u997c\u5e72\u7684\u5927\u5c0f\u6392\u5e8f Arrays.sort(g); Arrays.sort(s); int i = 0; // \u6307\u5411\u5b69\u5b50\u7684\u6307\u9488 int j = 0; // \u6307\u5411\u997c\u5e72\u7684\u6307\u9488 // \u904d\u5386\u5b69\u5b50\u548c\u997c\u5e72\u6570\u7ec4 while (i < g.length && j < s.length) { // \u5982\u679c\u5f53\u524d\u997c\u5e72\u80fd\u6ee1\u8db3\u5f53\u524d\u5b69\u5b50 if (s[j] >= g[i]) { i++; // \u6ee1\u8db3\u4e86\u5b69\u5b50 i\uff0c\u5904\u7406\u4e0b\u4e00\u4e2a\u5b69\u5b50 } j++; // \u5c1d\u8bd5\u4e0b\u4e00\u4e2a\u997c\u5e72 } return i; // \u8fd4\u56de\u6ee1\u8db3\u7684\u5b69\u5b50\u6570\u91cf } } \u4ee3\u7801\u8bb2\u89e3 \u6392\u5e8f\u6b65\u9aa4 \uff1a \u4f7f\u7528 Arrays.sort() \u65b9\u6cd5\u5bf9\u5b69\u5b50\u7684\u9700\u6c42\u6570\u7ec4 g \u548c\u997c\u5e72\u5927\u5c0f\u6570\u7ec4 s \u8fdb\u884c\u6392\u5e8f\u3002\u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u8f83\u5c0f\u7684\u9700\u6c42\u4e0e\u8f83\u5c0f\u7684\u997c\u5e72\u914d\u5bf9\uff0c\u4ece\u800c\u5c3d\u91cf\u4f7f\u7528\u6700\u5c0f\u7684\u997c\u5e72\u6ee1\u8db3\u6700\u5c0f\u9700\u6c42\u7684\u5b69\u5b50\u3002 \u5339\u914d\u8fc7\u7a0b \uff1a \u4f7f\u7528\u4e24\u4e2a\u6307\u9488 i \u548c j \uff0c\u5206\u522b\u6307\u5411\u5b69\u5b50\u548c\u997c\u5e72\u6570\u7ec4\u7684\u5f00\u59cb\u4f4d\u7f6e\u3002 \u5728 while \u5faa\u73af\u4e2d\uff0c\u68c0\u67e5\u5f53\u524d\u997c\u5e72\u662f\u5426\u80fd\u6ee1\u8db3\u5f53\u524d\u5b69\u5b50\u7684\u9700\u6c42\u3002\u5982\u679c s[j] \uff08\u5f53\u524d\u997c\u5e72\uff09\u5927\u4e8e\u7b49\u4e8e g[i] \uff08\u5f53\u524d\u5b69\u5b50\u7684\u9700\u6c42\uff09\uff0c\u5219\u8ba4\u4e3a\u8be5\u5b69\u5b50\u5f97\u5230\u4e86\u6ee1\u8db3\uff0c\u79fb\u52a8 i \u6307\u9488\uff0c\u51c6\u5907\u5904\u7406\u4e0b\u4e00\u4e2a\u5b69\u5b50\u3002 \u4e0d\u8bba\u997c\u5e72\u662f\u5426\u6ee1\u8db3\u5b69\u5b50\uff0c j \u6307\u9488\u90fd\u4f1a\u5411\u524d\u79fb\u52a8\uff0c\u5c1d\u8bd5\u4e0b\u4e00\u4e2a\u997c\u5e72\u3002 3.2 \u8d2a\u5fc3\u7b97\u6cd5\u4e3e\u4e00\u53cd\u4e09 3.2.1 LC 435: \u65e0\u91cd\u53e0\u533a\u95f4 \u9898\u76ee\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u7ec4\u533a\u95f4\uff0c\u627e\u5230\u6700\u5c11\u9700\u8981\u79fb\u9664\u7684\u533a\u95f4\u6570\u91cf\uff0c\u4f7f\u5f97\u5269\u4e0b\u7684\u533a\u95f4\u4e92\u4e0d\u91cd\u53e0\u3002 \u8d2a\u5fc3\u7b97\u6cd5\u6b65\u9aa4 \uff1a 1. \u6392\u5e8f \uff1a\u6309\u7167\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\u3002\u6392\u5e8f\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f18\u5148\u9009\u62e9\u7ed3\u675f\u65f6\u95f4\u8f83\u65e9\u7684\u533a\u95f4\uff0c\u8fd9\u6837\u80fd\u591f\u4e3a\u540e\u7eed\u533a\u95f4\u7559\u51fa\u66f4\u591a\u7a7a\u95f4\uff0c\u51cf\u5c11\u51b2\u7a81\u3002 \u9009\u62e9\u533a\u95f4 \uff1a\u6bcf\u6b21\u9009\u62e9\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u4e14\u4e0d\u4e0e\u524d\u4e00\u4e2a\u9009\u62e9\u7684\u533a\u95f4\u91cd\u53e0\u7684\u533a\u95f4\u3002\u5982\u679c\u5f53\u524d\u533a\u95f4\u7684\u5f00\u59cb\u65f6\u95f4\u5c0f\u4e8e\u524d\u4e00\u4e2a\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4\uff0c\u8bf4\u660e\u53d1\u751f\u4e86\u91cd\u53e0\uff0c\u6211\u4eec\u5c31\u9700\u8981\u79fb\u9664\u5f53\u524d\u533a\u95f4\u3002\u5426\u5219\uff0c\u6211\u4eec\u66f4\u65b0\u5f53\u524d\u533a\u95f4\u4e3a\u65b0\u7684\u7ed3\u675f\u65f6\u95f4\uff0c\u5e76\u7ee7\u7eed\u5904\u7406\u4e0b\u4e00\u4e2a\u533a\u95f4\u3002 \u4ee3\u7801\u5b9e\u73b0 import java.util.Arrays; class Solution { // \u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\uff0c\u6309\u7ed3\u675f\u65f6\u95f4\u6392\u5e8f private static class IntervalComparator implements java.util.Comparator<int[]> { @Override public int compare(int[] a, int[] b) { return Integer.compare(a[1], b[1]); // \u6309\u7167\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4\u5347\u5e8f\u6392\u5217 } } public int eraseOverlapIntervals(int[][] intervals) { if (intervals.length == 0) return 0; // \u6309\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4\u8fdb\u884c\u6392\u5e8f Arrays.sort(intervals, new IntervalComparator()); int count = 0; int end = intervals[0][1]; // \u5f53\u524d\u9009\u5b9a\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4 // \u904d\u5386\u5269\u4f59\u533a\u95f4 for (int i = 1; i < intervals.length; i++) { if (intervals[i][0] < end) { count++; // \u53d1\u751f\u91cd\u53e0\uff0c\u589e\u52a0\u79fb\u9664\u7684\u533a\u95f4\u6570 } else { end = intervals[i][1]; // \u66f4\u65b0\u5f53\u524d\u9009\u5b9a\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4 } } return count; // \u8fd4\u56de\u88ab\u79fb\u9664\u7684\u533a\u95f4\u6570 } } \u4ee3\u7801\u8bb2\u89e3 \u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570 \uff1a \u4f7f\u7528 IntervalComparator \u7c7b\u5b9e\u73b0 Comparator \u63a5\u53e3\uff0c\u6309\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4\u8fdb\u884c\u6392\u5e8f\u3002 \u6392\u5e8f\u6b65\u9aa4 \uff1a \u4f7f\u7528 Arrays.sort() \u65b9\u6cd5\u5c06\u533a\u95f4\u6309\u7ed3\u675f\u65f6\u95f4\u5347\u5e8f\u6392\u5e8f\u3002\u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u6211\u4eec\u6bcf\u6b21\u9009\u62e9\u7684\u533a\u95f4\u7ed3\u675f\u5f97\u6700\u65e9\uff0c\u80fd\u4e3a\u540e\u7eed\u7684\u533a\u95f4\u7559\u51fa\u66f4\u591a\u7a7a\u95f4\uff0c\u51cf\u5c11\u91cd\u53e0\u7684\u53ef\u80fd\u6027\u3002 \u904d\u5386\u9009\u62e9\u533a\u95f4 \uff1a \u521d\u59cb\u5316\u4e00\u4e2a end \u53d8\u91cf\uff0c\u8868\u793a\u5f53\u524d\u9009\u5b9a\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4\u3002\u904d\u5386\u5269\u4f59\u7684\u533a\u95f4\uff0c\u68c0\u67e5\u6bcf\u4e2a\u533a\u95f4\u7684\u5f00\u59cb\u65f6\u95f4\u662f\u5426\u4e0e\u5f53\u524d\u9009\u5b9a\u7684\u7ed3\u675f\u65f6\u95f4\u53d1\u751f\u91cd\u53e0\u3002\u5982\u679c\u5f53\u524d\u533a\u95f4\u7684\u5f00\u59cb\u65f6\u95f4\u5c0f\u4e8e end \uff0c\u5219\u8bf4\u660e\u53d1\u751f\u4e86\u91cd\u53e0\uff0c\u5fc5\u987b\u79fb\u9664\u8be5\u533a\u95f4\u3002\u5982\u679c\u6ca1\u6709\u91cd\u53e0\uff0c\u5219\u66f4\u65b0 end \u4e3a\u5f53\u524d\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4\u3002 3.2.2 LC 605: \u79cd\u82b1\u95ee\u9898 \u9898\u76ee\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u8868\u793a\u82b1\u575b\u7684\u6574\u6570\u6570\u7ec4 flowerbed \uff0c\u5176\u4e2d flowerbed[i] = 0 \u8868\u793a\u8be5\u4f4d\u7f6e\u662f\u7a7a\u7684\uff0c flowerbed[i] = 1 \u8868\u793a\u8be5\u4f4d\u7f6e\u5df2\u7ecf\u79cd\u4e86\u82b1\u3002\u82b1\u575b\u4e2d\u82b1\u4e0d\u80fd\u79cd\u5728\u76f8\u90bb\u7684\u5730\u5757\u4e0a\uff0c\u95ee\u662f\u5426\u80fd\u591f\u5728\u4e0d\u8fdd\u53cd\u89c4\u5219\u7684\u60c5\u51b5\u4e0b\u518d\u79cd\u4e0b n \u6735\u82b1\u3002 \u8d2a\u5fc3\u7b97\u6cd5\u6b65\u9aa4 \uff1a 1. \u904d\u5386\u82b1\u575b \uff1a\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u68c0\u67e5\u6bcf\u4e2a\u4f4d\u7f6e\u3002\u5982\u679c\u5f53\u524d\u4f4d\u7f6e\u662f\u7a7a\u7684 0 \uff0c\u5e76\u4e14\u5b83\u7684\u524d\u4e00\u4e2a\u4f4d\u7f6e\u548c\u540e\u4e00\u4e2a\u4f4d\u7f6e\u4e5f\u662f\u7a7a\u7684\uff08\u5982\u679c\u5b58\u5728\uff09\uff0c\u90a3\u4e48\u53ef\u4ee5\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u79cd\u82b1\u3002 \u8ba1\u6570\u5e76\u8df3\u8fc7\u76f8\u90bb\u4f4d\u7f6e \uff1a\u6bcf\u6b21\u6210\u529f\u79cd\u82b1\u540e\uff0c\u589e\u52a0\u8ba1\u6570\uff0c\u5e76\u8df3\u8fc7\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u76f8\u90bb\u4f4d\u7f6e\u4e0d\u80fd\u79cd\u82b1\u3002 \u4ee3\u7801\u5b9e\u73b0 class Solution { public boolean canPlaceFlowers(int[] flowerbed, int n) { int count = 0; // \u8bb0\u5f55\u53ef\u4ee5\u79cd\u82b1\u7684\u6570\u91cf // \u904d\u5386\u6574\u4e2a\u82b1\u575b for (int i = 0; i < flowerbed.length; i++) { // \u5224\u65ad\u5f53\u524d\u4f4d\u7f6e\u662f\u5426\u53ef\u4ee5\u79cd\u82b1\uff08\u68c0\u67e5\u524d\u540e\u4f4d\u7f6e\uff0c\u6ce8\u610f\u8fb9\u754c\u6761\u4ef6\uff09 if (flowerbed[i] == 0 && (i == 0 || flowerbed[i - 1] == 0) && (i == flowerbed.length - 1 || flowerbed[i + 1] == 0)) { flowerbed[i] = 1; // \u79cd\u82b1 count++; // \u8ba1\u6570\u589e\u52a0 i++; // \u8df3\u8fc7\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u907f\u514d\u76f8\u90bb\u79cd\u82b1 } if (count >= n) return true; // \u5982\u679c\u79cd\u591f n \u6735\u82b1\uff0c\u8fd4\u56de true } return count >= n; // \u904d\u5386\u7ed3\u675f\uff0c\u68c0\u67e5\u662f\u5426\u79cd\u591f n \u6735\u82b1 } } \u4ee3\u7801\u8bb2\u89e3 \u904d\u5386\u5224\u65ad\u80fd\u5426\u79cd\u82b1 \uff1a \u904d\u5386\u6574\u4e2a flowerbed \u6570\u7ec4\uff0c\u68c0\u67e5\u6bcf\u4e2a\u4f4d\u7f6e\u662f\u5426\u53ef\u4ee5\u79cd\u82b1\u3002\u5f53\u524d\u7684\u4f4d\u7f6e\u5fc5\u987b\u6ee1\u8db3\u4e09\u4e2a\u6761\u4ef6\u624d\u80fd\u79cd\u82b1\uff1a\u5f53\u524d\u4f4d\u7f6e\u4e3a 0 \uff0c\u524d\u4e00\u4e2a\u4f4d\u7f6e\uff08\u5982\u679c\u5b58\u5728\uff09\u4e3a 0 \uff0c\u540e\u4e00\u4e2a\u4f4d\u7f6e\uff08\u5982\u679c\u5b58\u5728\uff09\u4e5f\u4e3a 0 \u3002\u5728\u68c0\u67e5\u8fb9\u754c\u65f6\uff08\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\uff09\uff0c\u53ef\u4ee5\u7528\u6761\u4ef6\u8bed\u53e5\u907f\u514d\u8bbf\u95ee\u4e0d\u5b58\u5728\u7684\u524d\u540e\u4f4d\u7f6e\u3002 \u79cd\u82b1\u540e\u8df3\u8fc7\u76f8\u90bb\u4f4d\u7f6e \uff1a \u6bcf\u6b21\u6210\u529f\u79cd\u82b1\u540e\uff0c\u66f4\u65b0 flowerbed \u6570\u7ec4\uff0c\u5c06\u5f53\u524d\u7684\u4f4d\u7f6e\u8bbe\u7f6e\u4e3a 1 \uff0c\u5e76\u589e\u52a0 count \u8ba1\u6570\u3002\u540c\u65f6\uff0c\u8df3\u8fc7\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\uff08 i++ \uff09\uff0c\u56e0\u4e3a\u76f8\u90bb\u7684\u4f4d\u7f6e\u4e0d\u80fd\u518d\u79cd\u82b1\u3002 \u63d0\u524d\u7ec8\u6b62 \uff1a \u5982\u679c\u5728\u904d\u5386\u8fc7\u7a0b\u4e2d\u5df2\u7ecf\u79cd\u591f\u4e86 n \u6735\u82b1\uff0c\u5219\u53ef\u4ee5\u63d0\u524d\u8fd4\u56de true \u3002\u5982\u679c\u904d\u5386\u7ed3\u675f\u540e\u8fd8\u6ca1\u6709\u79cd\u591f\uff0c\u5219\u8fd4\u56de false \u3002 3.2.3 LC 1029: \u4e24\u5730\u8c03\u5ea6 \u9898\u76ee\u63cf\u8ff0\uff1a \u6709 2N \u4e2a\u4eba\uff0c\u6bcf\u4e2a\u4eba\u90fd\u9700\u8981\u98de\u5f80 A \u5e02\u6216 B \u5e02\u3002\u7ed9\u5b9a\u4e00\u4e2a costs \u6570\u7ec4\uff0c\u5176\u4e2d costs[i] = [aCost, bCost] \u8868\u793a\u7b2c i \u4e2a\u4eba\u98de\u5f80 A \u5e02\u7684\u8d39\u7528\u548c\u98de\u5f80 B \u5e02\u7684\u8d39\u7528\u3002\u73b0\u5728\u9700\u8981\u628a\u8fd9\u4e9b\u4eba\u5206\u914d\u5230\u4e24\u4e2a\u57ce\u5e02\uff0c\u4f7f\u5f97 N \u4e2a\u4eba\u98de\u5f80 A \u5e02\uff0c N \u4e2a\u4eba\u98de\u5f80 B \u5e02\uff0c\u8981\u6c42\u603b\u8d39\u7528\u6700\u5c0f\u3002 \u8d2a\u5fc3\u7b97\u6cd5\u6b65\u9aa4 \uff1a 1. \u8ba1\u7b97\u6210\u672c\u5dee\u5f02 \uff1a\u6211\u4eec\u8ba1\u7b97\u6bcf\u4e2a\u4eba\u53bb A \u5e02\u548c B \u5e02\u7684\u8d39\u7528\u5dee\uff0c\u5373 aCost - bCost \u3002\u6211\u4eec\u5e0c\u671b\u4f18\u5148\u8ba9\u90a3\u4e9b\u53bb B \u5e02\u66f4\u4fbf\u5b9c\u7684\u4eba\u53bb B \u5e02\uff0c\u800c\u8ba9\u53bb A \u5e02\u66f4\u4fbf\u5b9c\u7684\u4eba\u53bb A \u5e02\u3002 \u6392\u5e8f\u9009\u62e9 \uff1a\u6839\u636e\u53bb A \u5e02\u548c B \u5e02\u7684\u8d39\u7528\u5dee\u5f02\u6392\u5e8f\u3002\u5dee\u5f02\u8d8a\u5927\u7684\u4eba\uff0c\u610f\u5473\u7740\u53bb A \u5e02\u6216 B \u5e02\u5bf9\u6210\u672c\u5f71\u54cd\u8d8a\u5927\uff0c\u56e0\u6b64\u6211\u4eec\u4f18\u5148\u8003\u8651\u8fd9\u4e9b\u4eba\u3002 \u5206\u914d\u57ce\u5e02 \uff1a\u524d N \u4e2a\u4eba\u5b89\u6392\u5230 A \u5e02\uff0c\u540e N \u4e2a\u4eba\u5b89\u6392\u5230 B \u5e02\uff0c\u6700\u7ec8\u5f97\u5230\u6700\u5c0f\u7684\u603b\u8d39\u7528\u3002 \u4ee3\u7801\u5b9e\u73b0 import java.util.Arrays; class Solution { public int twoCitySchedCost(int[][] costs) { // \u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\uff0c\u6309\u53bb A \u5e02\u548c B \u5e02\u7684\u8d39\u7528\u5dee\u8fdb\u884c\u6392\u5e8f Arrays.sort(costs, (a, b) -> (a[0] - a[1]) - (b[0] - b[1])); int totalCost = 0; int n = costs.length / 2; // \u524d N \u4e2a\u4eba\u53bb A \u5e02\uff0c\u540e N \u4e2a\u4eba\u53bb B \u5e02 for (int i = 0; i < n; i++) { totalCost += costs[i][0]; // \u53bb A \u5e02\u7684\u8d39\u7528 } for (int i = n; i < 2 * n; i++) { totalCost += costs[i][1]; // \u53bb B \u5e02\u7684\u8d39\u7528 } return totalCost; } } \u4ee3\u7801\u8bb2\u89e3 \u8ba1\u7b97\u6210\u672c\u5dee\u5f02 \uff1a \u6bcf\u4e2a\u4eba\u6709\u53bb A \u5e02\u548c B \u5e02\u7684\u4e24\u79cd\u9009\u62e9\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 aCost - bCost \u6765\u8861\u91cf\u6bcf\u4e2a\u4eba\u53bb A \u5e02\u7684\u989d\u5916\u6210\u672c\u3002\u5982\u679c aCost < bCost \uff0c\u8bf4\u660e\u8ba9\u8fd9\u4e2a\u4eba\u53bb A \u5e02\u66f4\u5212\u7b97\uff0c\u53cd\u4e4b\u5219\u53bb B \u5e02\u66f4\u5212\u7b97\u3002 \u6392\u5e8f\u6b65\u9aa4 \uff1a \u4f7f\u7528 Java \u7684 Arrays.sort() \u65b9\u6cd5\u5bf9 costs \u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\uff0c\u6392\u5e8f\u4f9d\u636e\u4e3a aCost - bCost \u3002\u8fd9\u786e\u4fdd\u4e86\u90a3\u4e9b\u53bb A \u5e02\u66f4\u4fbf\u5b9c\u7684\u4eba\u4f1a\u88ab\u4f18\u5148\u5b89\u6392\u53bb A \u5e02\uff0c\u800c\u53bb B \u5e02\u66f4\u4fbf\u5b9c\u7684\u4eba\u4f1a\u88ab\u5b89\u6392\u53bb B \u5e02\u3002 \u5206\u914d\u57ce\u5e02 \uff1a \u6392\u5e8f\u540e\uff0c\u524d\u4e00\u534a\u7684\u4eba\u53bb A \u5e02\uff0c\u540e\u4e00\u534a\u7684\u4eba\u53bb B \u5e02\u3002\u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u5728\u603b\u8d39\u7528\u6700\u5c0f\u7684\u60c5\u51b5\u4e0b\uff0c\u5e73\u8861\u53bb\u4e24\u5ea7\u57ce\u5e02\u7684\u4eba\u6570\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a \u6700\u7ec8\u8fd4\u56de\u603b\u7684\u8d39\u7528\uff0c\u5373\u524d N \u4e2a\u4eba\u7684 A \u5e02\u8d39\u7528\u548c\u540e N \u4e2a\u4eba\u7684 B \u5e02\u8d39\u7528\u4e4b\u548c\u3002 4. \u8bfe\u540e\u7ec3\u4e60 \u6392\u5e8f\u95ee\u9898 \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC1288 \u5220\u9664\u88ab\u8986\u76d6\u7684\u533a\u95f4 \u7ed9\u5b9a\u4e00\u7ec4\u533a\u95f4\uff0c\u627e\u51fa\u5176\u4e2d\u672a\u88ab\u8986\u76d6\u7684\u533a\u95f4\uff0c\u79fb\u9664\u88ab\u8986\u76d6\u7684\u533a\u95f4\u3002 LC1024 \u89c6\u9891\u62fc\u63a5 \u7ed9\u5b9a\u4e00\u7ec4\u533a\u95f4\uff0c\u5224\u65ad\u662f\u5426\u80fd\u591f\u901a\u8fc7\u62fc\u63a5\u533a\u95f4\u8986\u76d6\u6574\u4e2a\u89c6\u9891\u957f\u5ea6\u3002 LC763 \u5212\u5206\u5b57\u6bcd\u533a\u95f4 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5c06\u5176\u5212\u5206\u4e3a\u5c3d\u53ef\u80fd\u591a\u7684\u4e0d\u91cd\u53e0\u7684\u533a\u95f4\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u5b57\u6bcd\u6700\u591a\u51fa\u73b0\u5728\u4e00\u4e2a\u533a\u95f4\u4e2d\u3002 LC57 \u63d2\u5165\u533a\u95f4 \u7ed9\u5b9a\u4e00\u7ec4\u975e\u91cd\u53e0\u7684\u533a\u95f4\u548c\u4e00\u4e2a\u65b0\u7684\u533a\u95f4\uff0c\u5c06\u65b0\u533a\u95f4\u63d2\u5165\u5e76\u5408\u5e76\u6240\u6709\u53ef\u80fd\u7684\u91cd\u53e0\u533a\u95f4\u3002 LC179 \u6700\u5927\u6570 \u7ed9\u5b9a\u4e00\u7ec4\u975e\u8d1f\u6574\u6570\uff0c\u91cd\u65b0\u6392\u5217\u5b83\u4eec\u7684\u987a\u5e8f\u4f7f\u4e4b\u7ec4\u6210\u4e00\u4e2a\u6700\u5927\u7684\u6574\u6570\u3002 \u8d2a\u5fc3\u7b97\u6cd5\u95ee\u9898 \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC121 \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a \u7ed9\u5b9a\u80a1\u7968\u4ef7\u683c\uff0c\u627e\u5230\u5728\u6700\u4f73\u65f6\u673a\u4e70\u5165\u548c\u5356\u51fa\u4ee5\u83b7\u5f97\u6700\u5927\u5229\u6da6\u3002 LC122 \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a II \u5141\u8bb8\u591a\u6b21\u4e70\u5356\uff0c\u627e\u5230\u5728\u6700\u4f73\u65f6\u673a\u4e70\u5165\u548c\u5356\u51fa\u4ee5\u83b7\u5f97\u6700\u5927\u5229\u6da6\u3002 LC55 \u8df3\u8dc3\u6e38\u620f \u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u5224\u65ad\u662f\u5426\u80fd\u8df3\u5230\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u3002 LC45 \u8df3\u8dc3\u6e38\u620f II \u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u627e\u5230\u8df3\u5230\u6570\u7ec4\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u7684\u6700\u5c11\u8df3\u8dc3\u6b21\u6570\u3002 LC409 \u6700\u957f\u56de\u6587\u4e32 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u627e\u5230\u5176\u4e2d\u80fd\u7ec4\u6210\u7684\u6700\u957f\u56de\u6587\u4e32\u7684\u957f\u5ea6\u3002","title":"Lesson 13. \u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u6392\u5e8f\u548c\u8d2a\u5fc3\u7b97\u6cd5"},{"location":"lesson13/Lesson13%20Java/#lesson-13","text":"","title":"Lesson 13. \u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u6392\u5e8f\u548c\u8d2a\u5fc3\u7b97\u6cd5"},{"location":"lesson13/Lesson13%20Java/#_1","text":"\u65f6\u95f4\u590d\u6742\u5ea6\u7b80\u4ecb \u6392\u5e8f\u7b97\u6cd5\u4e0e\u5e94\u7528 2.1 \u6392\u5e8f\u7b97\u6cd5\u4f8b\u9898\u8bb2\u89e3 2.1.1 LC215\uff1a\u627e\u51fa\u6570\u7ec4\u4e2d\u7684\u7b2c K \u5927\u5143\u7d20 2.2 \u6392\u5e8f\u7b97\u6cd5\u4e3e\u4e00\u53cd\u4e09 2.2.1 LC56\uff1a\u5408\u5e76\u533a\u95f4 2.2.2 LC252\uff1a\u4f1a\u8bae\u5ba4 2.2.3 LC347\uff1a\u524d K \u4e2a\u9ad8\u9891\u5143\u7d20 \u8d2a\u5fc3\u7b97\u6cd5 3.1 \u8d2a\u5fc3\u7b97\u6cd5\u4f8b\u9898\u8bb2\u89e3 3.1.1 LC455: \u5206\u53d1\u997c\u5e72 3.2 \u8d2a\u5fc3\u7b97\u6cd5\u4e3e\u4e00\u53cd\u4e09 3.2.1 LC435: \u65e0\u91cd\u53e0\u533a\u95f4 3.2.2 LC605: \u79cd\u82b1\u95ee\u9898 3.2.3 LC1029: \u4e24\u5730\u8c03\u5ea6 \u8bfe\u540e\u7ec3\u4e60","title":"\u76ee\u5f55"},{"location":"lesson13/Lesson13%20Java/#1","text":"\u65f6\u95f4\u590d\u6742\u5ea6 \u662f\u8861\u91cf\u7b97\u6cd5\u6267\u884c\u6548\u7387\u7684\u91cd\u8981\u6307\u6807\uff0c\u5b83\u63cf\u8ff0\u4e86\u968f\u7740\u8f93\u5165\u6570\u636e\u91cf\u7684\u589e\u5927\uff0c\u7b97\u6cd5\u6267\u884c\u65f6\u95f4\u7684\u589e\u957f\u901f\u5ea6\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u901a\u5e38\u8868\u793a\u4e3a O(\u67d0\u4e2a\u51fd\u6570) \uff0c\u5176\u4e2d \"O\" \u8868\u793a\u589e\u957f\u7684\u4e0a\u9650\u3002\u4ee5\u4e0b\u4ecb\u7ecd\u56db\u79cd\u5e38\u89c1\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff1a O(1) \u3001 O(n) \u3001 O(n^2) \u548c O(n log n) \u3002","title":"1. \u65f6\u95f4\u590d\u6742\u5ea6\u7b80\u4ecb"},{"location":"lesson13/Lesson13%20Java/#_2","text":"O(1) \uff1a\u5e38\u6570\u65f6\u95f4\u590d\u6742\u5ea6 \u64cd\u4f5c\u7684\u6267\u884c\u65f6\u95f4\u4e0d\u968f\u8f93\u5165\u6570\u636e\u7684\u5927\u5c0f\u800c\u53d8\u5316\u3002 \u4f8b\u5b50 \uff1a\u4ece\u6570\u7ec4\u4e2d\u83b7\u53d6\u7b2c k \u4e2a\u5143\u7d20\u3002 java public class Main { public static void main(String[] args) { int[] arr = {1, 2, 3, 4, 5}; int k = 2; // \u83b7\u53d6\u7b2c\u4e09\u4e2a\u5143\u7d20\uff08\u7d22\u5f15\u4ece0\u5f00\u59cb\uff09 int element = arr[k]; // O(1) System.out.println(\"Element at index \" + k + \": \" + element); } } \u65f6\u95f4\u590d\u6742\u5ea6 \uff1a\u65e0\u8bba\u6570\u7ec4\u5927\u5c0f\u662f\u591a\u5c11\uff0c\u83b7\u53d6\u7b2c k \u4e2a\u5143\u7d20\u6240\u9700\u65f6\u95f4\u662f\u56fa\u5b9a\u7684\uff0c\u5c5e\u4e8e O(1) \u3002 O(n) \uff1a\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6 \u64cd\u4f5c\u7684\u6267\u884c\u65f6\u95f4\u968f\u7740\u8f93\u5165\u6570\u636e\u91cf\u7ebf\u6027\u589e\u957f\u3002 \u4f8b\u5b50 \uff1a\u904d\u5386\u4e00\u4e2a\u6570\u7ec4\u3002 java public class Main { public static void main(String[] args) { int[] arr = {1, 2, 3, 4, 5}; int n = arr.length; // \u83b7\u53d6\u6570\u7ec4\u7684\u957f\u5ea6 for (int i = 0; i < n; i++) { // O(n) System.out.println(\"Element at index \" + i + \": \" + arr[i]); } } } \u65f6\u95f4\u590d\u6742\u5ea6 \uff1a\u904d\u5386\u6574\u4e2a\u6570\u7ec4\u9700\u8981\u7684\u65f6\u95f4\u4e0e\u6570\u7ec4\u7684\u957f\u5ea6 n \u6210\u6b63\u6bd4\uff0c\u5c5e\u4e8e O(n) \u3002 O(n^2) \uff1a\u5e73\u65b9\u65f6\u95f4\u590d\u6742\u5ea6 \u64cd\u4f5c\u7684\u6267\u884c\u65f6\u95f4\u4e0e\u8f93\u5165\u6570\u636e\u91cf\u7684\u5e73\u65b9\u6210\u6b63\u6bd4\uff0c\u5e38\u89c1\u4e8e\u53cc\u91cd\u5faa\u73af\u3002 \u4f8b\u5b50 \uff1a\u6253\u5370\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u3002 ```java public class Main { public static void main(String[] args) { int[][] arr = { {1, 2, 3}, {4, 5, 6}, {7, 8, 9} }; for (int i = 0; i < 3; i++) { // O(n) for (int j = 0; j < 3; j++) { // O(n) System.out.println(\"Element at [\" + i + \"][\" + j + \"]: \" + arr[i][j]); } } } } `` **\u65f6\u95f4\u590d\u6742\u5ea6**\uff1a\u53cc\u91cd\u5faa\u73af\u5d4c\u5957\u904d\u5386\u6bcf\u4e2a\u5143\u7d20\uff0c\u603b\u7684\u6267\u884c\u65f6\u95f4\u662f n` \u7684\u5e73\u65b9\uff0c\u5c5e\u4e8e O(n^2) \u3002 O(n log n) \uff1a\u5e38\u89c1\u4e8e\u6392\u5e8f\u7b97\u6cd5\uff08\u6b64\u7ae0\u8282\u540e\u534a\u90e8\u5206\u4f1a\u8be6\u7ec6\u8bb2\u89e3\uff09 \u4f8b\u5b50 \uff1a\u5f52\u5e76\u6392\u5e8f\u3001\u5feb\u901f\u6392\u5e8f\u3002 ```java import java.util.Arrays; public class Main { // \u5408\u5e76\u4e24\u4e2a\u5b50\u6570\u7ec4 public static void merge(int[] arr, int l, int m, int r) { int n1 = m - l + 1; int n2 = r - m; int[] L = new int[n1]; int[] R = new int[n2]; // \u5c06\u6570\u636e\u590d\u5236\u5230\u4e34\u65f6\u6570\u7ec4 L \u548c R for (int i = 0; i < n1; i++) L[i] = arr[l + i]; for (int i = 0; i < n2; i++) R[i] = arr[m + 1 + i]; // \u5408\u5e76\u4e34\u65f6\u6570\u7ec4\u5230 arr int i = 0, j = 0, k = l; while (i < n1 && j < n2) { if (L[i] <= R[j]) { arr[k] = L[i]; i++; } else { arr[k] = R[j]; j++; } k++; } // \u590d\u5236\u5269\u4f59\u7684 L \u4e2d\u7684\u5143\u7d20\uff08\u5982\u679c\u6709\uff09 while (i < n1) { arr[k] = L[i]; i++; k++; } // \u590d\u5236\u5269\u4f59\u7684 R \u4e2d\u7684\u5143\u7d20\uff08\u5982\u679c\u6709\uff09 while (j < n2) { arr[k] = R[j]; j++; k++; } } // \u9012\u5f52\u62c6\u5206\u6570\u7ec4 public static void mergeSort(int[] arr, int l, int r) { if (l < r) { int m = l + (r - l) / 2; // \u9012\u5f52\u6392\u5e8f\u4e24\u534a mergeSort(arr, l, m); mergeSort(arr, m + 1, r); // \u5408\u5e76\u4e24\u4e2a\u6392\u5e8f\u597d\u7684\u5b50\u6570\u7ec4 merge(arr, l, m, r); } } public static void main(String[] args) { int[] arr = {12, 11, 13, 5, 6, 7}; int arr_size = arr.length; mergeSort(arr, 0, arr_size - 1); System.out.println(\"Sorted array is: \" + Arrays.toString(arr)); } } ``` \u65f6\u95f4\u590d\u6742\u5ea6 \uff1a\u5f52\u5e76\u6392\u5e8f\u901a\u8fc7\u9012\u5f52\u5c06\u6570\u7ec4\u5206\u6210\u66f4\u5c0f\u7684\u90e8\u5206\u8fdb\u884c\u6392\u5e8f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n log n) \u3002","title":"\u5e38\u89c1\u7684\u65f6\u95f4\u590d\u6742\u5ea6"},{"location":"lesson13/Lesson13%20Java/#on-log-n","text":"\u5f52\u5e76\u6392\u5e8f\u662f\u4e00\u79cd \u5206\u6cbb\u7b97\u6cd5 \uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5f52\u5e76\u6392\u5e8f\u7684\u6b65\u9aa4\u5206\u4e3a\u4e24\u90e8\u5206\uff1a \u62c6\u5206 \u548c \u5408\u5e76 \u3002 1. \u62c6\u5206\u8fc7\u7a0b\uff1a\u9012\u5f52\u5206\u89e3\u6570\u7ec4 \u5f52\u5e76\u6392\u5e8f\u9996\u5148\u5c06\u6570\u7ec4\u9012\u5f52\u5730\u5bf9\u534a\u62c6\u5206\uff0c\u76f4\u5230\u6bcf\u4e2a\u5b50\u6570\u7ec4\u53ea\u5269\u4e0b\u4e00\u4e2a\u5143\u7d20\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u7c7b\u4f3c\u4e8e\u6784\u5efa\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u6bcf\u6b21\u5c06\u95ee\u9898\u7684\u89c4\u6a21\u51cf\u534a\u3002 \u5bf9\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u6570\u7ec4\uff1a \u7b2c\u4e00\u5c42\uff1a1 \u4e2a\u957f\u5ea6\u4e3a n \u7684\u6570\u7ec4 \u7b2c\u4e8c\u5c42\uff1a2 \u4e2a\u957f\u5ea6\u4e3a n/2 \u7684\u6570\u7ec4 \u7b2c\u4e09\u5c42\uff1a4 \u4e2a\u957f\u5ea6\u4e3a n/4 \u7684\u6570\u7ec4 ... \u7b2c log n \u5c42\uff1a\u6bcf\u4e2a\u6570\u7ec4\u7684\u957f\u5ea6\u662f 1\uff0c\u5171\u6709 n \u4e2a\u6570\u7ec4 \u56e0\u4e3a\u6bcf\u6b21\u90fd\u5bf9\u6570\u7ec4\u8fdb\u884c\u4e8c\u5206\uff0c\u6240\u4ee5\u6574\u4e2a\u9012\u5f52\u6811\u7684\u6df1\u5ea6\u662f log n \u3002 2. \u5408\u5e76\u8fc7\u7a0b\uff1a\u7ebf\u6027\u5408\u5e76 \u5f53\u5b50\u6570\u7ec4\u62c6\u5206\u5230\u6700\u5c0f\uff08\u6bcf\u4e2a\u6570\u7ec4\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff09\u65f6\uff0c\u5f52\u5e76\u6392\u5e8f\u5f00\u59cb\u5408\u5e76\u8fd9\u4e9b\u5b50\u6570\u7ec4\u3002\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\u7684\u65f6\u95f4\u4e0e\u5b83\u4eec\u7684\u957f\u5ea6\u6210\u6b63\u6bd4\uff0c\u4e5f\u5c31\u662f\u8bf4\u5408\u5e76\u4e24\u4e2a\u6570\u7ec4\u7684\u65f6\u95f4\u662f O(n) \u3002 \u5728\u9012\u5f52\u6811\u7684\u6bcf\u4e00\u5c42\uff0c\u6240\u6709\u6570\u7ec4\u7684\u603b\u957f\u5ea6\u59cb\u7ec8\u662f n \uff0c\u56e0\u6b64\uff1a \u7b2c\u4e00\u5c42\uff1a\u5408\u5e76\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u6570\u7ec4\uff0c\u65f6\u95f4\u662f O(n) \u7b2c\u4e8c\u5c42\uff1a\u5408\u5e76\u4e24\u4e2a\u957f\u5ea6\u4e3a n/2 \u7684\u6570\u7ec4\uff0c\u603b\u65f6\u95f4\u4ecd\u7136\u662f O(n) \u7b2c\u4e09\u5c42\uff1a\u5408\u5e76\u56db\u4e2a\u957f\u5ea6\u4e3a n/4 \u7684\u6570\u7ec4\uff0c\u603b\u65f6\u95f4\u4e5f\u662f O(n) \u65e0\u8bba\u6709\u591a\u5c11\u4e2a\u5c0f\u6570\u7ec4\uff0c\u5408\u5e76\u6bcf\u4e00\u5c42\u7684\u603b\u65f6\u95f4\u90fd\u662f O(n) \u3002 3. \u9012\u5f52\u6811\u7684\u5c42\u6570 \u62c6\u5206\u7684\u8fc7\u7a0b\u6700\u591a\u8fdb\u884c log n \u6b21\uff08\u6bcf\u6b21\u5c06\u6570\u7ec4\u5bf9\u534a\u5206\uff09\u3002\u56e0\u6b64\uff0c\u9012\u5f52\u6811\u7684\u6df1\u5ea6\u662f log n \uff0c\u5373\u6700\u591a\u6709 log n \u5c42\u3002 \u603b\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u8ba1\u7b97 \u56e0\u4e3a\u6bcf\u4e00\u5c42\u7684\u5408\u5e76\u65f6\u95f4\u90fd\u662f O(n) \uff0c\u800c\u6574\u4e2a\u9012\u5f52\u6811\u6709 log n \u5c42\uff0c\u6240\u4ee5\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(n) * O(log n) = O(n log n) \u4e3a\u4ec0\u4e48\u4e0d\u4f1a\u8d85\u8fc7 O(n log n) \u6709\u4eba\u53ef\u80fd\u4f1a\u7591\u60d1\uff1a\u65e2\u7136\u6211\u4eec\u5728\u9012\u5f52\u4e2d\u53cd\u590d\u5206\u88c2\u6570\u7ec4\uff0c\u4e3a\u4ec0\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u4f1a\u8d85\u8fc7 O(n log n) \u5462\uff1f \u6bcf\u5c42\u7684\u5408\u5e76\u64cd\u4f5c\u662f\u7ebf\u6027\u7684 \uff1a\u867d\u7136\u9012\u5f52\u5206\u88c2\u4f1a\u4ea7\u751f\u591a\u4e2a\u5c0f\u6570\u7ec4\uff0c\u4f46\u6bcf\u4e00\u5c42\u4e2d\u6240\u6709\u6570\u7ec4\u7684\u603b\u957f\u5ea6\u4ecd\u7136\u662f n \u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u4e00\u5c42\u5408\u5e76\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u59cb\u7ec8\u662f O(n) \uff0c\u4e0d\u4f1a\u7d2f\u79ef\u66f4\u591a\u590d\u6742\u5ea6\u3002 \u9012\u5f52\u7684\u6df1\u5ea6\u662f log n \uff1a\u7531\u4e8e\u6bcf\u6b21\u9012\u5f52\u90fd\u5c06\u6570\u7ec4\u5bf9\u534a\u5206\u88c2\uff0c\u6574\u4e2a\u9012\u5f52\u8fc7\u7a0b\u53ea\u4f1a\u8fdb\u884c log n \u6b21\u5206\u88c2\u3002\u56e0\u6b64\uff0c\u9012\u5f52\u6811\u7684\u6df1\u5ea6\u662f log n \u3002 \u6700\u7ec8\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u6bcf\u5c42\u7684\u65f6\u95f4 O(n) \u4e58\u4ee5\u9012\u5f52\u6811\u7684\u5c42\u6570 log n \uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(n log n) \u3002","title":"\u4e3a\u4ec0\u4e48\u662f O(n log n)?"},{"location":"lesson13/Lesson13%20Java/#_3","text":"O(1) \uff1a\u6267\u884c\u65f6\u95f4\u4e0d\u53d7\u8f93\u5165\u89c4\u6a21\u5f71\u54cd\u3002 O(n) \uff1a\u6267\u884c\u65f6\u95f4\u968f\u8f93\u5165\u89c4\u6a21\u7ebf\u6027\u589e\u957f\u3002 O(n^2) \uff1a\u6267\u884c\u65f6\u95f4\u4e0e\u8f93\u5165\u89c4\u6a21\u7684\u5e73\u65b9\u6210\u6b63\u6bd4\uff0c\u901a\u5e38\u53d1\u751f\u5728\u5d4c\u5957\u5faa\u73af\u4e2d\u3002 O(n log n) \uff1a\u5e38\u89c1\u4e8e\u9ad8\u6548\u7684\u6392\u5e8f\u7b97\u6cd5\u3002","title":"\u65f6\u95f4\u590d\u6742\u5ea6\u603b\u7ed3"},{"location":"lesson13/Lesson13%20Java/#_4","text":"\u8003\u8651\u4e00\u4e2a\u7b80\u5355\u7684\u7b97\u6cd5\uff1a\u8ba1\u7b97\u6570\u7ec4\u4e2d\u6240\u6709\u5143\u7d20\u7684\u548c\u3002 public class Main { public static int sumArray(int[] arr, int n) { int total = 0; for (int i = 0; i < n; i++) { total += arr[i]; } return total; } public static void main(String[] args) { int[] arr = {1, 2, 3, 4, 5}; int n = arr.length; System.out.println(\"Sum of array: \" + sumArray(arr, n)); } }","title":"\u5177\u4f53\u5b9e\u4f8b"},{"location":"lesson13/Lesson13%20Java/#_5","text":"\u786e\u5b9a\u57fa\u672c\u64cd\u4f5c \uff1a \u57fa\u672c\u64cd\u4f5c\u662f total += arr[i] \uff0c\u8fd9\u662f\u4e00\u79cd\u6570\u7ec4\u5143\u7d20\u7684\u52a0\u6cd5\u3002 \u8ba1\u7b97\u57fa\u672c\u64cd\u4f5c\u7684\u6b21\u6570 \uff1a \u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff0c for \u5faa\u73af\u5c06\u6267\u884c n \u6b21\uff08\u5176\u4e2d n \u662f\u6570\u7ec4 arr \u7684\u957f\u5ea6\uff09\u3002 \u56e0\u6b64\uff0c\u57fa\u672c\u64cd\u4f5c\u7684\u6b21\u6570\u4e3a n \u3002 \u4f7f\u7528\u5927 O \u8868\u793a\u6cd5 \uff1a \u7531\u4e8e\u5faa\u73af\u6267\u884c\u4e86 n \u6b21\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n) \u3002 \u8003\u8651\u6700\u574f\u60c5\u51b5 \uff1a \u65e0\u8bba\u8f93\u5165\u7684\u5177\u4f53\u5185\u5bb9\u5982\u4f55\uff0c\u53ea\u8981\u6570\u7ec4\u957f\u5ea6\u4e3a n \uff0c\u57fa\u672c\u64cd\u4f5c\u90fd\u4f1a\u6267\u884c n \u6b21\uff0c\u6700\u574f\u60c5\u51b5\u4ecd\u4e3a O(n) \u3002 \u7279\u6b8a\u60c5\u51b5 \uff1a \u5982\u679c\u6570\u7ec4\u4e3a\u7a7a\uff08\u957f\u5ea6\u4e3a 0\uff09\uff0c for \u5faa\u73af\u4e0d\u4f1a\u6267\u884c\uff0c\u4f46\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4f9d\u7136\u4e3a O(n) \uff0c\u56e0\u4e3a\u6211\u4eec\u8003\u8651\u7684\u662f\u8f93\u5165\u7684\u89c4\u6a21\u3002","title":"\u6b65\u9aa4\u5206\u6790"},{"location":"lesson13/Lesson13%20Java/#_6","text":"","title":"\u968f\u5802\u7ec3\u4e60"},{"location":"lesson13/Lesson13%20Java/#_7","text":"public class Main { public static int findMax(int[] arr, int n) { int maxNum = arr[0]; for (int i = 0; i < n; i++) { // \u57fa\u672c\u64cd\u4f5c if (arr[i] > maxNum) { maxNum = arr[i]; } } return maxNum; } public static void main(String[] args) { int[] arr = {1, 5, 3, 9, 2}; int n = arr.length; System.out.println(\"Max number: \" + findMax(arr, n)); } }","title":"\u5224\u65ad\u4ee5\u4e0b\u4ee3\u7801\u7684\u65f6\u95f4\u590d\u6742\u5ea6"},{"location":"lesson13/Lesson13%20Java/#_8","text":"\u7b2c\u4e00\u6bb5\u4ee3\u7801\uff08 findMax \u65b9\u6cd5\uff09 \uff1a - \u57fa\u672c\u64cd\u4f5c \u662f if (arr[i] > maxNum) \uff0c\u5373\u5728\u6bcf\u6b21\u5faa\u73af\u4e2d\u8fdb\u884c\u4e00\u6b21\u6bd4\u8f83\u64cd\u4f5c\u3002 \u5faa\u73af\u6267\u884c\u6b21\u6570 \uff1a for \u5faa\u73af\u4ece i = 0 \u5230 i = n - 1 \uff0c\u56e0\u6b64\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u5faa\u73af\u6267\u884c n \u6b21\uff08\u5373\u6570\u7ec4\u7684\u957f\u5ea6\u4e3a n \uff09\u3002 \u65f6\u95f4\u590d\u6742\u5ea6\u5206\u6790 \uff1a\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e2d\uff0c\u6267\u884c\u4e00\u6b21\u6bd4\u8f83\u548c\u53ef\u80fd\u7684\u8d4b\u503c\u64cd\u4f5c\uff0c\u64cd\u4f5c\u7684\u6b21\u6570\u548c\u8f93\u5165\u89c4\u6a21 n \u6210\u7ebf\u6027\u5173\u7cfb\u3002\u56e0\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n) \u3002","title":"\u89e3\u7b54"},{"location":"lesson13/Lesson13%20Java/#2","text":"\u6392\u5e8f\u662f\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\u4e00\u4e2a\u975e\u5e38\u57fa\u7840\u4f46\u91cd\u8981\u7684\u64cd\u4f5c\u3002\u5b83\u4e0d\u4ec5\u53ef\u4ee5\u8ba9\u6570\u636e\u6309\u7279\u5b9a\u987a\u5e8f\u6392\u5217\uff0c\u8fd8\u80fd\u5e2e\u52a9\u6211\u4eec\u89e3\u51b3\u8bb8\u591a\u4e0e\u6570\u636e\u5904\u7406\u76f8\u5173\u7684\u95ee\u9898\u3002\u901a\u8fc7\u6392\u5e8f\uff0c\u6211\u4eec\u53ef\u4ee5\u66f4\u5feb\u5730\u89e3\u51b3\u627e\u7b2c K \u5927\u5143\u7d20\u3001\u5408\u5e76\u91cd\u53e0\u533a\u95f4\u7b49\u95ee\u9898\u3002","title":"2. \u6392\u5e8f\u7b97\u6cd5\u4e0e\u5e94\u7528"},{"location":"lesson13/Lesson13%20Java/#_9","text":"\u6392\u5e8f\u7684\u5e94\u7528\u573a\u666f\u975e\u5e38\u5e7f\u6cdb\uff0c\u5c24\u5176\u662f\u5728\u6570\u636e\u5904\u7406\u4e2d\uff0c\u4f60\u4f1a\u7ecf\u5e38\u9047\u5230\u9700\u8981\u5bf9\u6570\u636e\u8fdb\u884c\u6392\u5e8f\u7684\u60c5\u51b5\uff1a \u627e\u51fa\u7b2c K \u5927\u5143\u7d20 \uff1a\u901a\u8fc7\u6392\u5e8f\u6570\u636e\uff0c\u53ef\u4ee5\u5f88\u5feb\u627e\u51fa\u7b2c K \u5927\uff08\u6216\u7b2c K \u5c0f\uff09\u7684\u5143\u7d20\u3002 \u5408\u5e76\u533a\u95f4 \uff1a\u5f53\u5904\u7406\u591a\u4e2a\u533a\u95f4\u6216\u6bb5\u65f6\uff0c\u5e38\u5e38\u9700\u8981\u5148\u5c06\u8fd9\u4e9b\u533a\u95f4\u6309\u67d0\u4e2a\u7ef4\u5ea6\u6392\u5e8f\uff0c\u7136\u540e\u5408\u5e76\u5b83\u4eec\u3002 \u4f8b\u5b50 \uff1a\u5408\u5e76\u65e5\u7a0b\u3001\u4efb\u52a1\u65f6\u95f4\u6bb5\u7b49\u6570\u636e\uff0c\u89e3\u51b3\u533a\u95f4\u91cd\u53e0\u95ee\u9898\u3002 \u4f18\u5316\u64cd\u4f5c \uff1a\u4e0d\u540c\u7684\u6392\u5e8f\u7b97\u6cd5\u5728\u9762\u5bf9\u4e0d\u540c\u89c4\u6a21\u7684\u6570\u636e\u65f6\u8868\u73b0\u5404\u5f02\uff0c\u56e0\u6b64\u9009\u62e9\u5408\u9002\u7684\u6392\u5e8f\u7b97\u6cd5\u5bf9\u4e8e\u63d0\u9ad8\u7a0b\u5e8f\u6027\u80fd\u975e\u5e38\u91cd\u8981\u3002","title":"\u9002\u7528\u573a\u666f"},{"location":"lesson13/Lesson13%20Java/#_10","text":"","title":"\u5e38\u7528\u6280\u5de7"},{"location":"lesson13/Lesson13%20Java/#1_1","text":"Java \u63d0\u4f9b\u4e86\u975e\u5e38\u65b9\u4fbf\u7684\u6392\u5e8f\u51fd\u6570 Arrays.sort() \uff0c\u7528\u4e8e\u5bf9\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\u3002\u8fd9\u4e2a\u65b9\u6cd5\u4f7f\u7528\u4e86\u7ecf\u8fc7\u4f18\u5316\u7684\u5feb\u901f\u6392\u5e8f\u3001\u5f52\u5e76\u6392\u5e8f\u7b49\u9ad8\u6548\u7684\u6392\u5e8f\u7b97\u6cd5\u3002 \u793a\u4f8b\u4ee3\u7801 \uff1a import java.util.Arrays; public class Main { public static void main(String[] args) { int[] nums = {3, 1, 4, 1, 5, 9}; // \u5b9a\u4e49\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 // \u4f7f\u7528\u5185\u7f6e\u7684\u6392\u5e8f\u51fd\u6570\u5bf9\u6570\u7ec4\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f Arrays.sort(nums); // \u8f93\u51fa\u6392\u5e8f\u540e\u7684\u6570\u7ec4 System.out.print(\"Sorted array: \"); for (int num : nums) { System.out.print(num + \" \"); } } } \u8bf4\u660e \uff1a - \u5728 Java \u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 Arrays.sort() \u6765\u5bf9\u6570\u7ec4 nums \u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\u3002 - \u5185\u7f6e\u7684 Arrays.sort() \u975e\u5e38\u5feb\u6377\u4e14\u9ad8\u6548\uff0c\u9002\u7528\u4e8e\u5927\u591a\u6570\u60c5\u51b5\u3002","title":"1. \u5185\u7f6e\u6392\u5e8f\u51fd\u6570"},{"location":"lesson13/Lesson13%20Java/#2_1","text":"\u5728 Java \u4e2d\uff0c Comparator \u662f\u4e00\u4e2a\u63a5\u53e3\uff0c\u7528\u4e8e\u5b9a\u4e49\u81ea\u5b9a\u4e49\u7684\u6392\u5e8f\u903b\u8f91\u3002\u901a\u8fc7\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\uff0c\u6211\u4eec\u53ef\u4ee5\u4e3a\u96c6\u5408\uff08\u5982\u6570\u7ec4\u3001\u5217\u8868\u7b49\uff09\u63d0\u4f9b\u7279\u5b9a\u7684\u6392\u5e8f\u89c4\u5219\u3002","title":"2. \u81ea\u5b9a\u4e49\u6392\u5e8f"},{"location":"lesson13/Lesson13%20Java/#comparator","text":"\u8981\u521b\u5efa\u81ea\u5b9a\u4e49\u7684 Comparator \uff0c\u4f60\u53ef\u4ee5\u91c7\u7528\u4ee5\u4e0b\u4e24\u79cd\u65b9\u6cd5\uff1a","title":"\u81ea\u5b9a\u4e49 Comparator"},{"location":"lesson13/Lesson13%20Java/#comparator_1","text":"\u4f60\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u4e00\u4e2a\u5b9e\u73b0 Comparator \u63a5\u53e3\u7684\u7c7b\u6765\u5b9a\u4e49\u6392\u5e8f\u903b\u8f91\u3002 ```java import java.util.Comparator; class Person { String name; int age; Person(String name, int age) { this.name = name; this.age = age; } public String getName() { return name; } public int getAge() { return age; } } // \u81ea\u5b9a\u4e49\u6bd4\u8f83\u5668\uff0c\u6839\u636e\u5e74\u9f84\u6392\u5e8f class AgeComparator implements Comparator { @Override public int compare(Person p1, Person p2) { return Integer.compare(p1.getAge(), p2.getAge()); } } ```","title":"\u65b9\u6cd5\u4e00\uff1a\u5b9e\u73b0 Comparator \u63a5\u53e3"},{"location":"lesson13/Lesson13%20Java/#lambda-java-8","text":"\u5728 Java 8 \u53ca\u4ee5\u4e0a\u7248\u672c\u4e2d\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 Lambda \u8868\u8fbe\u5f0f\u6765\u7b80\u5316 Comparator \u7684\u5b9e\u73b0\uff1a ```java import java.util.Arrays; import java.util.Comparator; class Person { String name; int age; Person(String name, int age) { this.name = name; this.name = name; this.age = age; } public String getName() { return name; } public int getAge() { return age; } } public class Main { public static void main(String[] args) { Person[] people = { new Person(\"Alice\", 30), new Person(\"Bob\", 25), new Person(\"Charlie\", 35) }; // \u4f7f\u7528 Lambda \u8868\u8fbe\u5f0f\u6309\u5e74\u9f84\u6392\u5e8f Arrays.sort(people, (p1, p2) -> Integer.compare(p1.getAge(), p2.getAge())); // \u6253\u5370\u6392\u5e8f\u540e\u7684\u7ed3\u679c for (Person p : people) { System.out.println(p.getName() + \": \" + p.getAge()); } } } ```","title":"\u65b9\u6cd5\u4e8c\uff1a\u4f7f\u7528 Lambda \u8868\u8fbe\u5f0f\uff08Java 8 \u53ca\u4ee5\u4e0a\uff09"},{"location":"lesson13/Lesson13%20Java/#_11","text":"\u5982\u679c\u4f60\u60f3\u8981\u6839\u636e\u591a\u4e2a\u6761\u4ef6\u8fdb\u884c\u6392\u5e8f\uff0c\u53ef\u4ee5\u5728 compare \u65b9\u6cd5\u4e2d\u6dfb\u52a0\u989d\u5916\u7684\u903b\u8f91\u3002\u4f8b\u5982\uff0c\u9996\u5148\u6309\u5e74\u9f84\u6392\u5e8f\uff0c\u5982\u679c\u5e74\u9f84\u76f8\u540c\uff0c\u5219\u6309\u540d\u5b57\u6392\u5e8f\uff1a java Arrays.sort(people, (p1, p2) -> { int ageComparison = Integer.compare(p1.getAge(), p2.getAge()); if (ageComparison != 0) { return ageComparison; // \u5982\u679c\u5e74\u9f84\u4e0d\u540c\uff0c\u8fd4\u56de\u6bd4\u8f83\u7ed3\u679c } else { return p1.getName().compareTo(p2.getName()); // \u5e74\u9f84\u76f8\u540c\u5219\u6309\u540d\u5b57\u6392\u5e8f } });","title":"\u591a\u91cd\u6392\u5e8f"},{"location":"lesson13/Lesson13%20Java/#_12","text":"\u4ee5\u4e0b\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u793a\u4f8b\uff0c\u5305\u62ec\u81ea\u5b9a\u4e49 Comparator \u548c\u4f7f\u7528 Lambda \u8868\u8fbe\u5f0f\u8fdb\u884c\u6392\u5e8f\uff1a ```java import java.util.Arrays; import java.util.Comparator; class Person { String name; int age; Person(String name, int age) { this.name = name; this.age = age; } public String getName() { return name; } public int getAge() { return age; } } public class Main { public static void main(String[] args) { Person[] people = { new Person(\"Alice\", 30), new Person(\"Bob\", 25), new Person(\"Charlie\", 35), new Person(\"David\", 25) }; // \u6309\u5e74\u9f84\u6392\u5e8f Arrays.sort(people, Comparator.comparingInt(Person::getAge) .thenComparing(Person::getName)); // \u82e5\u5e74\u9f84\u76f8\u540c\u5219\u6309\u540d\u5b57\u6392\u5e8f // \u6253\u5370\u6392\u5e8f\u540e\u7684\u7ed3\u679c for (Person p : people) { System.out.println(p.getName() + \": \" + p.getAge()); } } } ```","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"lesson13/Lesson13%20Java/#_13","text":"\u5728 compare \u65b9\u6cd5\u4e2d\uff0c\u786e\u4fdd\u4f20\u5165\u7684\u5bf9\u8c61\u4e0d\u4e3a null \uff0c\u4ee5\u907f\u514d\u629b\u51fa NullPointerException \u3002 \u5728\u6bd4\u8f83\u65f6\uff0c\u5982\u679c\u8fd4\u56de\u503c\u4e0d\u7b26\u5408\u9884\u671f\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6392\u5e8f\u9519\u8bef\uff0c\u56e0\u6b64\u9700\u8981\u4ed4\u7ec6\u6d4b\u8bd5\u81ea\u5b9a\u4e49\u7684\u6bd4\u8f83\u5668\u3002","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"lesson13/Lesson13%20Java/#3","text":"\u6392\u5e8f\u7b97\u6cd5\u5728\u5904\u7406\u4e0d\u540c\u89c4\u6a21\u6570\u636e\u65f6\u8868\u73b0\u5404\u5f02\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u89c1\u7684\u6392\u5e8f\u7b97\u6cd5\u53ca\u5176\u9002\u7528\u573a\u666f\uff0c\u4f9b\u5927\u5bb6\u521d\u6b65\u4e86\u89e3\uff1a \u9009\u62e9\u6392\u5e8f \uff1a\u9002\u7528\u4e8e\u5c0f\u89c4\u6a21\u6570\u636e\u96c6\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a (O(n^2))\u3002 \u5b83\u7684\u7279\u70b9\u662f\u6bcf\u6b21\u9009\u62e9\u672a\u6392\u5e8f\u90e8\u5206\u4e2d\u7684\u6700\u5c0f\u503c\uff0c\u7136\u540e\u5c06\u5176\u4e0e\u5f53\u524d\u5143\u7d20\u4ea4\u6362\u3002\u867d\u7136\u7b80\u5355\u6613\u61c2\uff0c\u4f46\u6027\u80fd\u8f83\u5dee\uff0c\u4e0d\u9002\u5408\u5927\u6570\u636e\u96c6\u3002 \u63d2\u5165\u6392\u5e8f \uff1a\u9002\u5408\u4e8e\u51e0\u4e4e\u5df2\u6392\u5e8f\u7684\u6570\u636e\u96c6\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u662f (O(n^2))\u3002 \u63d2\u5165\u6392\u5e8f\u7684\u4f18\u52bf\u662f\u5f53\u6570\u636e\u51e0\u4e4e\u6709\u5e8f\u65f6\uff0c\u5b83\u7684\u6548\u7387\u4f1a\u6bd4\u9009\u62e9\u6392\u5e8f\u597d\u5f97\u591a\u3002 \u5feb\u901f\u6392\u5e8f \uff1a\u6027\u80fd\u8f83\u597d\u7684\u901a\u7528\u6392\u5e8f\u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a (O(n log n))\u3002 \u5b83\u901a\u8fc7\u9009\u62e9\u4e00\u4e2a\u57fa\u51c6\u5143\u7d20\uff08pivot\uff09\uff0c\u5c06\u6570\u7ec4\u5212\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5e76\u9012\u5f52\u5730\u5bf9\u8fd9\u4e24\u90e8\u5206\u8fdb\u884c\u6392\u5e8f\u3002\u9002\u5408\u5927\u89c4\u6a21\u6570\u636e\u96c6\u3002 \u5f52\u5e76\u6392\u5e8f \uff1a\u4e0e\u5feb\u901f\u6392\u5e8f\u4e00\u6837\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a (O(n log n))\uff0c\u4f46\u5b83\u662f\u7a33\u5b9a\u7684\u6392\u5e8f\u7b97\u6cd5\u3002 \u5f52\u5e76\u6392\u5e8f\u5c06\u6570\u7ec4\u4e0d\u65ad\u62c6\u5206\uff0c\u7136\u540e\u5408\u5e76\u6392\u5e8f\u597d\u7684\u5b50\u6570\u7ec4\u3002\u867d\u7136\u5b83\u7684\u6027\u80fd\u7a33\u5b9a\uff0c\u4f46\u9700\u8981\u989d\u5916\u7684\u5185\u5b58\u6765\u5b58\u50a8\u62c6\u5206\u7684\u6570\u7ec4\u3002 \u5192\u6ce1\u6392\u5e8f \uff1a\u662f\u4e00\u79cd\u7b80\u5355\u4f46\u6027\u80fd\u8f83\u5dee\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a (O(n^2))\u3002 \u5b83\u7684\u57fa\u672c\u601d\u60f3\u662f\u901a\u8fc7\u4e0d\u65ad\u6bd4\u8f83\u76f8\u90bb\u7684\u5143\u7d20\u5e76\u4ea4\u6362\u5b83\u4eec\uff0c\u5c06\u8f83\u5927\u7684\u5143\u7d20\u201c\u5192\u6ce1\u201d\u5230\u6570\u7ec4\u7684\u672b\u5c3e\u3002\u9002\u7528\u4e8e\u975e\u5e38\u5c0f\u89c4\u6a21\u7684\u6570\u636e\u96c6\u3002 \u5806\u6392\u5e8f \uff1a\u57fa\u4e8e\u4e8c\u53c9\u5806\u7ed3\u6784\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a (O(n log n))\u3002 \u5806\u6392\u5e8f\u901a\u8fc7\u5efa\u7acb\u4e00\u4e2a\u6700\u5927\u5806\u6216\u6700\u5c0f\u5806\u6765\u8fdb\u884c\u6392\u5e8f\u3002\u867d\u7136\u5806\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u5feb\u901f\u6392\u5e8f\u76f8\u540c\uff0c\u4f46\u5b83\u4e0d\u9700\u8981\u989d\u5916\u7684\u5185\u5b58\u7a7a\u95f4\uff08\u4e0d\u50cf\u5f52\u5e76\u6392\u5e8f\uff09\u3002 \u8ba1\u6570\u6392\u5e8f \uff1a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a (O(n+k))\uff0c\u9002\u7528\u4e8e\u6570\u636e\u8303\u56f4\u8f83\u5c0f\u7684\u573a\u666f\u3002 \u5b83\u901a\u8fc7\u7edf\u8ba1\u6bcf\u4e2a\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570\u6765\u6392\u5e8f\uff0c\u9002\u7528\u4e8e\u6574\u6570\u6392\u5e8f\u4e14\u6570\u636e\u8303\u56f4\u4e0d\u5927\u7684\u60c5\u51b5\u3002\u8ba1\u6570\u6392\u5e8f\u7684\u6027\u80fd\u5728\u6570\u636e\u8303\u56f4\u8f83\u5c0f\u65f6\u975e\u5e38\u4f18\u5f02\uff0c\u4f46\u5f53\u6570\u636e\u8303\u56f4\u5f88\u5927\u65f6\uff0c\u7a7a\u95f4\u6d88\u8017\u4f1a\u8fc7\u9ad8\u3002 \u6876\u6392\u5e8f \uff1a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a (O(n+k))\uff0c\u9002\u5408\u5747\u5300\u5206\u5e03\u7684\u6570\u636e\u96c6\u3002 \u5b83\u5c06\u5143\u7d20\u5206\u5e03\u5230\u591a\u4e2a\u6876\u4e2d\uff0c\u5206\u522b\u5bf9\u6bcf\u4e2a\u6876\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u518d\u5408\u5e76\u6240\u6709\u6876\u4e2d\u7684\u5143\u7d20\u3002\u5bf9\u4e8e\u5206\u5e03\u5747\u5300\u7684\u6570\u636e\uff0c\u6876\u6392\u5e8f\u7684\u6027\u80fd\u975e\u5e38\u597d\uff0c\u4f46\u5982\u679c\u6570\u636e\u5206\u5e03\u4e0d\u5747\uff0c\u6027\u80fd\u53ef\u80fd\u4f1a\u9000\u5316\u3002 \u57fa\u6570\u6392\u5e8f \uff1a\u4e00\u79cd\u975e\u6bd4\u8f83\u6392\u5e8f\u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a (O(n * k))\uff0c\u9002\u7528\u4e8e\u5904\u7406\u4f4d\u6570\u56fa\u5b9a\u7684\u6570\u636e\u3002 \u5b83\u901a\u8fc7\u6309\u4f4d\uff08\u6216\u6570\u5b57\uff09\u8fdb\u884c\u591a\u6b21\u6392\u5e8f\u6765\u5b8c\u6210\u6574\u4f53\u6392\u5e8f\uff0c\u9002\u7528\u4e8e\u5bf9\u6574\u6570\u6216\u5b57\u7b26\u4e32\u8fdb\u884c\u6392\u5e8f\u3002\u57fa\u6570\u6392\u5e8f\u7684\u6027\u80fd\u5728\u5904\u7406\u5927\u89c4\u6a21\u3001\u56fa\u5b9a\u4f4d\u6570\u7684\u6570\u5b57\u65f6\u8f83\u597d\u3002","title":"3. \u6392\u5e8f\u4f18\u5316"},{"location":"lesson13/Lesson13%20Java/#21","text":"","title":"2.1 \u6392\u5e8f\u7b97\u6cd5\u4f8b\u9898\u8bb2\u89e3"},{"location":"lesson13/Lesson13%20Java/#211-lc215-k","text":"","title":"2.1.1 LC215\uff1a\u627e\u51fa\u6570\u7ec4\u4e2d\u7684\u7b2c K \u5927\u5143\u7d20"},{"location":"lesson13/Lesson13%20Java/#_14","text":"\u7ed9\u5b9a\u4e00\u4e2a\u672a\u6392\u5e8f\u7684\u6570\u7ec4\uff0c\u627e\u51fa\u5176\u4e2d\u7b2c K \u5927\u7684\u5143\u7d20\u3002","title":"\u9898\u76ee\u63cf\u8ff0\uff1a"},{"location":"lesson13/Lesson13%20Java/#_15","text":"\u53ef\u4ee5\u5148\u5bf9\u6570\u7ec4\u8fdb\u884c\u964d\u5e8f\u6392\u5e8f\uff0c\u7136\u540e\u76f4\u63a5\u8fd4\u56de\u6392\u597d\u5e8f\u540e\u7684\u6570\u7ec4\u4e2d\u7684\u7b2c K \u4e2a\u5143\u7d20\u3002","title":"\u89e3\u9898\u601d\u8def\uff1a"},{"location":"lesson13/Lesson13%20Java/#_16","text":"import java.util.Arrays; import java.util.Comparator; class Solution { // \u81ea\u5b9a\u4e49\u6bd4\u8f83\u5668\uff0c\u8fdb\u884c\u964d\u5e8f\u6392\u5e8f public int findKthLargest(int[] nums, int k) { // \u5c06 int[] \u6570\u7ec4\u8f6c\u6362\u4e3a Integer[]\uff0c\u56e0\u4e3a Arrays.sort \u4e0d\u652f\u6301\u539f\u751f\u7c7b\u578b\u7684\u81ea\u5b9a\u4e49 Comparator Integer[] numsArray = Arrays.stream(nums).boxed().toArray(Integer[]::new); // \u4f7f\u7528\u81ea\u5b9a\u4e49\u7684 Comparator \u8fdb\u884c\u964d\u5e8f\u6392\u5e8f Arrays.sort(numsArray, new Comparator<Integer>() { @Override public int compare(Integer a, Integer b) { return b - a; // \u964d\u5e8f\u6392\u5e8f } }); // \u8fd4\u56de\u6392\u5e8f\u540e\u7684\u7b2c K \u5927\u5143\u7d20 return numsArray[k - 1]; } public static void main(String[] args) { Solution sol = new Solution(); int[] nums = {3, 2, 1, 5, 6, 4}; int k = 2; System.out.println(\"The \" + k + \"th largest element is \" + sol.findKthLargest(nums, k)); } }","title":"\u4ee3\u7801\u5b9e\u73b0\uff1a"},{"location":"lesson13/Lesson13%20Java/#_17","text":"\u8f6c\u6362\u6570\u7ec4\u7c7b\u578b \uff1aJava \u4e2d\uff0c Arrays.sort() \u4e0d\u652f\u6301\u5bf9\u539f\u751f\u7c7b\u578b\uff08\u5982 int[] \uff09\u7684\u81ea\u5b9a\u4e49\u6bd4\u8f83\u5668\u3002\u56e0\u6b64\uff0c\u9700\u8981\u5c06 int[] \u8f6c\u6362\u4e3a Integer[] \uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7 Arrays.stream(nums).boxed().toArray(Integer[]::new) \u5b9e\u73b0\u3002 \u81ea\u5b9a\u4e49\u6392\u5e8f\u89c4\u5219 \uff1a\u901a\u8fc7 Comparator<Integer> \u63a5\u53e3\u5b9e\u73b0\u964d\u5e8f\u6392\u5e8f\uff0c\u6bd4\u8f83\u65f6 b - a \u4f1a\u5c06\u6570\u7ec4\u5143\u7d20\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u3002 \u8fd4\u56de\u7b2c K \u5927\u5143\u7d20 \uff1a\u6392\u5e8f\u5b8c\u6210\u540e\uff0c\u8fd4\u56de\u6570\u7ec4\u4e2d\u7b2c K \u4e2a\u5143\u7d20\uff08\u6570\u7ec4\u7d22\u5f15\u4e3a k - 1 \uff09\u3002","title":"\u8bf4\u660e\uff1a"},{"location":"lesson13/Lesson13%20Java/#22","text":"","title":"2.2 \u6392\u5e8f\u7b97\u6cd5\u4e3e\u4e00\u53cd\u4e09"},{"location":"lesson13/Lesson13%20Java/#221-lc56","text":"","title":"2.2.1 LC56\uff1a\u5408\u5e76\u533a\u95f4"},{"location":"lesson13/Lesson13%20Java/#_18","text":"\u7ed9\u5b9a\u82e5\u5e72\u4e2a\u95ed\u5408\u533a\u95f4 [x1, y1], [x2, y2], ... \uff0c\u8bf7\u5c06\u6240\u6709\u91cd\u53e0\u7684\u533a\u95f4\u5408\u5e76\u3002\u4f8b\u5982\uff0c\u533a\u95f4 [1, 3] \u548c [2, 6] \u53ef\u4ee5\u5408\u5e76\u4e3a [1, 6] \u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"lesson13/Lesson13%20Java/#_19","text":"\u6392\u5e8f \uff1a\u9996\u5148\uff0c\u6309\u7167\u533a\u95f4\u7684\u8d77\u59cb\u503c\u5bf9\u6240\u6709\u533a\u95f4\u8fdb\u884c\u6392\u5e8f\u3002 \u904d\u5386 \uff1a\u7136\u540e\u904d\u5386\u6bcf\u4e2a\u533a\u95f4\uff0c\u82e5\u5f53\u524d\u533a\u95f4\u4e0e\u524d\u4e00\u4e2a\u533a\u95f4\u91cd\u53e0\uff0c\u5219\u5408\u5e76\u5b83\u4eec\uff1b\u5426\u5219\u5c06\u5f53\u524d\u533a\u95f4\u76f4\u63a5\u52a0\u5165\u7ed3\u679c\u5217\u8868\u3002","title":"\u89e3\u9898\u601d\u8def"},{"location":"lesson13/Lesson13%20Java/#_20","text":"import java.util.ArrayList; import java.util.Arrays; import java.util.List; class Solution { public int[][] merge(int[][] intervals) { // \u5982\u679c\u8f93\u5165\u4e3a\u7a7a\uff0c\u76f4\u63a5\u8fd4\u56de if (intervals.length == 0) return new int[0][0]; // \u6309\u7167\u533a\u95f4\u7684\u8d77\u59cb\u503c\u8fdb\u884c\u6392\u5e8f Arrays.sort(intervals, (a, b) -> Integer.compare(a[0], b[0])); List<int[]> merged = new ArrayList<>(); // \u904d\u5386\u6bcf\u4e00\u4e2a\u533a\u95f4 for (int[] interval : intervals) { // \u5982\u679c merged \u4e3a\u7a7a\u6216\u8005\u5f53\u524d\u533a\u95f4\u4e0e\u4e0a\u4e00\u4e2a\u533a\u95f4\u4e0d\u91cd\u53e0\uff0c\u76f4\u63a5\u52a0\u5165 if (merged.isEmpty() || merged.get(merged.size() - 1)[1] < interval[0]) { merged.add(interval); } else { // \u5982\u679c\u91cd\u53e0\uff0c\u66f4\u65b0\u4e0a\u4e00\u4e2a\u533a\u95f4\u7684\u7ed3\u675f\u4f4d\u7f6e merged.get(merged.size() - 1)[1] = Math.max(merged.get(merged.size() - 1)[1], interval[1]); } } // \u5c06 List<int[]> \u8f6c\u6362\u4e3a int[][] \u8fd4\u56de return merged.toArray(new int[merged.size()][]); } }","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"lesson13/Lesson13%20Java/#_21","text":"\u81ea\u5b9a\u4e49\u6392\u5e8f \uff1a\u5728 Arrays.sort() \u4e2d\u4f7f\u7528 Lambda \u8868\u8fbe\u5f0f\u6765\u5bf9\u533a\u95f4\u8fdb\u884c\u6392\u5e8f\uff0c\u786e\u4fdd\u533a\u95f4\u6309\u7167\u8d77\u59cb\u503c\u5347\u5e8f\u6392\u5217\uff0c\u4fbf\u4e8e\u540e\u7eed\u7684\u5408\u5e76\u64cd\u4f5c\u3002 \u904d\u5386\u533a\u95f4 \uff1a\u4f7f\u7528\u589e\u5f3a\u7684 for \u5faa\u73af\u904d\u5386\u6bcf\u4e2a\u533a\u95f4\u3002\u901a\u8fc7\u6bd4\u8f83\u6bcf\u4e2a\u533a\u95f4\u7684\u8d77\u59cb\u503c\u4e0e\u5df2\u5408\u5e76\u533a\u95f4\u7684\u7ed3\u675f\u503c\u6765\u5224\u65ad\u5b83\u4eec\u662f\u5426\u91cd\u53e0\uff1a \u5982\u679c\u6ca1\u6709\u91cd\u53e0\uff0c\u5219\u5c06\u5f53\u524d\u533a\u95f4\u76f4\u63a5\u52a0\u5165 merged \u5217\u8868\u3002 \u5982\u679c\u91cd\u53e0\uff0c\u5219\u66f4\u65b0\u5df2\u5408\u5e76\u533a\u95f4\u7684\u7ed3\u675f\u503c\uff0c\u786e\u4fdd\u5b83\u53ef\u4ee5\u6db5\u76d6\u5f53\u524d\u533a\u95f4\u3002 \u7ed3\u679c\u8f6c\u6362 \uff1a\u7531\u4e8e merged \u662f\u4e00\u4e2a List<int[]> \uff0c\u6700\u540e\u4f7f\u7528 toArray() \u65b9\u6cd5\u5c06\u5176\u8f6c\u6362\u4e3a int[][] \u7c7b\u578b\u4ee5\u8fd4\u56de\u7ed3\u679c\u3002","title":"\u8bb2\u89e3"},{"location":"lesson13/Lesson13%20Java/#222-lc252","text":"","title":"2.2.2 LC252\uff1a\u4f1a\u8bae\u5ba4"},{"location":"lesson13/Lesson13%20Java/#_22","text":"\u7ed9\u5b9a\u4e00\u7cfb\u5217\u4f1a\u8bae\u65f6\u95f4\u533a\u95f4\uff0c\u5224\u65ad\u662f\u5426\u80fd\u8ba9\u6240\u6709\u4f1a\u8bae\u65e0\u51b2\u7a81\u5730\u5b89\u6392\u5728\u4e00\u95f4\u4f1a\u8bae\u5ba4\u4e2d\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"lesson13/Lesson13%20Java/#_23","text":"\u6392\u5e8f \uff1a\u9996\u5148\u5c06\u6240\u6709\u7684\u4f1a\u8bae\u6309\u7167\u5f00\u59cb\u65f6\u95f4\u8fdb\u884c\u6392\u5e8f\u3002 \u904d\u5386\u68c0\u67e5 \uff1a\u904d\u5386\u6bcf\u4e2a\u4f1a\u8bae\uff0c\u68c0\u67e5\u662f\u5426\u6709\u91cd\u53e0\u533a\u95f4\u3002","title":"\u89e3\u9898\u601d\u8def"},{"location":"lesson13/Lesson13%20Java/#_24","text":"import java.util.Arrays; class Solution { public boolean canAttendMeetings(int[][] intervals) { // \u5982\u679c\u6ca1\u6709\u4f1a\u8bae\uff0c\u76f4\u63a5\u8fd4\u56de true if (intervals.length == 0) return true; // \u6309\u7167\u4f1a\u8bae\u7684\u5f00\u59cb\u65f6\u95f4\u8fdb\u884c\u6392\u5e8f Arrays.sort(intervals, (a, b) -> Integer.compare(a[0], b[0])); // \u68c0\u67e5\u4f1a\u8bae\u662f\u5426\u91cd\u53e0 for (int i = 1; i < intervals.length; i++) { // \u5982\u679c\u5f53\u524d\u4f1a\u8bae\u7684\u5f00\u59cb\u65f6\u95f4\u5c0f\u4e8e\u4e0a\u4e00\u4e2a\u4f1a\u8bae\u7684\u7ed3\u675f\u65f6\u95f4\uff0c\u5219\u6709\u91cd\u53e0 if (intervals[i][0] < intervals[i - 1][1]) { return false; } } return true; // \u5982\u679c\u6ca1\u6709\u91cd\u53e0\uff0c\u8fd4\u56de true } }","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"lesson13/Lesson13%20Java/#_25","text":"\u6392\u5e8f \uff1a\u4f7f\u7528 Arrays.sort() \u65b9\u6cd5\u5c06\u4f1a\u8bae\u533a\u95f4\u6309\u7167\u5f00\u59cb\u65f6\u95f4\u8fdb\u884c\u6392\u5e8f\u3002Lambda \u8868\u8fbe\u5f0f (a, b) -> Integer.compare(a[0], b[0]) \u7528\u4e8e\u6307\u5b9a\u6392\u5e8f\u7684\u89c4\u5219\u3002 \u68c0\u67e5\u91cd\u53e0 \uff1a\u904d\u5386\u6392\u5e8f\u540e\u7684\u4f1a\u8bae\u533a\u95f4\uff0c\u4ece\u7b2c\u4e8c\u4e2a\u4f1a\u8bae\u5f00\u59cb\uff0c\u68c0\u67e5\u5176\u5f00\u59cb\u65f6\u95f4\u662f\u5426\u5c0f\u4e8e\u4e0a\u4e00\u4e2a\u4f1a\u8bae\u7684\u7ed3\u675f\u65f6\u95f4\u3002\u5982\u679c\u53d1\u73b0\u91cd\u53e0\uff0c\u7acb\u5373\u8fd4\u56de false \uff1b\u5982\u679c\u904d\u5386\u5b8c\u6240\u6709\u4f1a\u8bae\u90fd\u6ca1\u6709\u91cd\u53e0\uff0c\u5219\u8fd4\u56de true \u3002","title":"\u8bb2\u89e3"},{"location":"lesson13/Lesson13%20Java/#223-lc347-k","text":"","title":"2.2.3 LC347\uff1a\u524d K \u4e2a\u9ad8\u9891\u5143\u7d20"},{"location":"lesson13/Lesson13%20Java/#_26","text":"\u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u7684\u6574\u6570\u6570\u7ec4\uff0c\u8fd4\u56de\u5176\u4e2d\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684\u524d K \u4e2a\u5143\u7d20\u3002","title":"\u9898\u76ee\u63cf\u8ff0\uff1a"},{"location":"lesson13/Lesson13%20Java/#_27","text":"\u4f7f\u7528\u54c8\u5e0c\u8868\u7edf\u8ba1\u6bcf\u4e2a\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570\u3002 \u5c06\u54c8\u5e0c\u8868\u4e2d\u7684\u5143\u7d20\u653e\u5165\u4e00\u4e2a\u6570\u7ec4\u4e2d\uff0c\u6309\u51fa\u73b0\u6b21\u6570\u4ece\u9ad8\u5230\u4f4e\u6392\u5e8f\u3002 \u8fd4\u56de\u6392\u5e8f\u540e\u524d K \u4e2a\u5143\u7d20\u3002 import java.util.HashMap; import java.util.List; import java.util.ArrayList; import java.util.Map; class Solution { public int[] topKFrequent(int[] nums, int k) { // \u4f7f\u7528\u54c8\u5e0c\u8868\u7edf\u8ba1\u6bcf\u4e2a\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570 HashMap<Integer, Integer> frequencyMap = new HashMap<>(); for (int num : nums) { frequencyMap.put(num, frequencyMap.getOrDefault(num, 0) + 1); } // \u5c06\u54c8\u5e0c\u8868\u4e2d\u7684\u5143\u7d20\u8f6c\u6362\u4e3a\u5217\u8868 List<Map.Entry<Integer, Integer>> frequencyList = new ArrayList<>(frequencyMap.entrySet()); // \u4f7f\u7528\u9ed8\u8ba4\u7684\u6392\u5e8f\u51fd\u6570\u6309\u9891\u7387\u964d\u5e8f\u6392\u5217 frequencyList.sort((a, b) -> b.getValue() - a.getValue()); // \u53d6\u51fa\u524d K \u4e2a\u9891\u7387\u6700\u9ad8\u7684\u5143\u7d20 int[] result = new int[k]; for (int i = 0; i < k; i++) { result[i] = frequencyList.get(i).getKey(); } return result; } }","title":"\u89e3\u9898\u601d\u8def\uff1a"},{"location":"lesson13/Lesson13%20Java/#3_1","text":"\u8d2a\u5fc3\u7b97\u6cd5\u662f\u4e00\u79cd\u89e3\u51b3\u95ee\u9898\u7684 \u7b56\u7565 \uff0c\u5176\u6838\u5fc3\u601d\u60f3\u662f\uff1a\u5728\u89e3\u51b3\u95ee\u9898\u7684\u6bcf\u4e00\u6b65\u4e2d\uff0c\u603b\u662f\u9009\u62e9\u5f53\u524d\u770b\u8d77\u6765 \u6700\u4f18\u7684\u9009\u62e9 \uff0c\u901a\u8fc7\u4e00\u7cfb\u5217\u8fd9\u6837\u7684\u5c40\u90e8\u6700\u4f18\u9009\u62e9\uff0c\u6700\u7ec8\u5e0c\u671b\u83b7\u5f97\u5168\u5c40\u6700\u4f18\u89e3\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c \u8d2a\u5fc3\u7b97\u6cd5\u5e76\u4e0d\u603b\u662f\u80fd\u5f97\u5230\u5168\u5c40\u6700\u4f18\u89e3 \u3002\u5b83\u53ea\u6709\u5728\u67d0\u4e9b\u7279\u5b9a\u95ee\u9898\u4e2d\u6709\u6548\uff0c\u7279\u522b\u662f\u5f53\u95ee\u9898\u6ee1\u8db3\u8d2a\u5fc3\u9009\u62e9\u6027\u8d28\u65f6\u3002","title":"3. \u8d2a\u5fc3\u7b97\u6cd5"},{"location":"lesson13/Lesson13%20Java/#_28","text":"\u5c40\u90e8\u6700\u4f18\u9009\u62e9 \uff1a \u8d2a\u5fc3\u7b97\u6cd5\u5728\u6bcf\u4e00\u6b65\u4e2d\u53ea\u505a\u51fa\u5f53\u524d\u770b\u8d77\u6765\u6700\u4f18\u7684\u9009\u62e9\uff0c\u800c \u4e0d\u5173\u5fc3\u4e4b\u540e\u53ef\u80fd\u53d1\u751f\u7684\u60c5\u51b5 \u3002\u5b83\u4e0d\u4f1a\u8003\u8651\u8fd9\u6b21\u9009\u62e9\u662f\u5426\u4f1a\u5f71\u54cd\u540e\u7eed\u51b3\u7b56\uff0c\u53ea\u770b\u5f53\u4e0b\u54ea\u4e2a\u9009\u9879\u662f\u6700\u6709\u5229\u7684\u3002\u4f8b\u5982\uff0c\u5728\u5206\u6570\u80cc\u5305\u95ee\u9898\u4e2d\uff0c\u8d2a\u5fc3\u7b56\u7565\u662f\u6bcf\u6b21\u4f18\u5148\u9009\u62e9\u5355\u4f4d\u91cd\u91cf\u4ef7\u503c\u6700\u9ad8\u7684\u7269\u54c1\uff0c\u56e0\u4e3a\u5b83\u5728\u5f53\u524d\u7684\u9009\u62e9\u4e2d\u5e26\u6765\u7684\u6536\u76ca\u6700\u5927\u3002 \u4f18\u70b9 \uff1a\u901a\u8fc7\u6bcf\u4e00\u6b65\u7684\u6700\u4f18\u9009\u62e9\uff0c\u53ef\u4ee5\u5feb\u901f\u627e\u5230\u4e00\u4e2a\u53ef\u884c\u89e3\u3002\u8d2a\u5fc3\u7b97\u6cd5\u7684\u89c4\u5219\u7b80\u5355\u3001\u76f4\u89c2\uff0c\u6613\u4e8e\u5b9e\u73b0\uff0c\u901a\u5e38\u53ef\u4ee5\u901a\u8fc7\u4e00\u6b21\u626b\u63cf\u6216\u6392\u5e8f\u89e3\u51b3\u95ee\u9898\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u4f4e\u3002\u4f8b\u5982\u5728\u5206\u6570\u80cc\u5305\u95ee\u9898\u4e2d\uff0c\u8d2a\u5fc3\u7b97\u6cd5\u53ea\u9700\u8981\u6309\u5355\u4f4d\u4ef7\u503c\u6392\u5e8f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a (O(n log n)) \u3002 \u7f3a\u70b9 \uff1a\u5c40\u90e8\u6700\u4f18\u89e3\u4e0d\u4e00\u5b9a\u80fd\u4fdd\u8bc1\u5168\u5c40\u6700\u4f18\uff0c\u56e0\u4e3a\u5728\u4e00\u4e9b\u95ee\u9898\u4e2d\uff0c\u6700\u4f73\u7684\u6574\u4f53\u65b9\u6848\u4f9d\u8d56\u4e8e\u591a\u6b65\u51b3\u7b56\u7684\u7efc\u5408\u6548\u679c\uff0c\u800c\u4e0d\u662f\u5355\u7eaf\u7684\u6bcf\u4e00\u6b65\u6700\u4f18\u3002\u8d2a\u5fc3\u7b97\u6cd5\u65e0\u6cd5\u901a\u8fc7\u5c40\u90e8\u6700\u4f18\u89e3\u627e\u5230\u5168\u5c40\u6700\u4f18\u89e3\uff0c\u5c24\u5176\u5728\u590d\u6742\u95ee\u9898\uff08\u5982 0-1 \u80cc\u5305\u95ee\u9898\uff09\u4e2d\uff0c\u5b83\u53ef\u80fd\u4f1a\u9677\u5165\u6b21\u4f18\u89e3\u3002 \u4e0d\u53ef\u56de\u6eaf \uff1a \u8d2a\u5fc3\u7b97\u6cd5\u7684\u4e00\u4e2a\u91cd\u8981\u7279\u70b9\u662f \u51b3\u7b56\u4e0d\u53ef\u56de\u5934\u4fee\u6539 \u3002\u4e00\u65e6\u505a\u51fa\u67d0\u4e2a\u9009\u62e9\uff0c\u7b97\u6cd5\u5c31\u4e0d\u4f1a\u518d\u8003\u8651\u6539\u53d8\u5b83\uff0c\u5373\u4f7f\u540e\u7eed\u53d1\u73b0\u8fd9\u4e2a\u9009\u62e9\u53ef\u80fd\u4e0d\u662f\u6700\u4f18\u7684\u3002\u56e0\u4e3a\u8d2a\u5fc3\u7b97\u6cd5\u4f9d\u8d56\u7684\u662f\u5f53\u524d\u6700\u4f18\u9009\u62e9\u7684\u7b56\u7565\uff0c\u6240\u4ee5\u5b83\u4e0d\u4f1a\u4e3a\u672a\u6765\u7684\u9009\u62e9\u7559\u4e0b\u56de\u65cb\u4f59\u5730\u3002 \u4f18\u70b9 \uff1a\u7531\u4e8e\u4e0d\u9700\u8981\u56de\u6eaf\uff0c\u8d2a\u5fc3\u7b97\u6cd5\u6267\u884c\u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u901a\u5e38\u6bd4\u9700\u8981\u56de\u6eaf\u7684\u7b97\u6cd5\uff08\u5982\u52a8\u6001\u89c4\u5212\u3001\u56de\u6eaf\u6cd5\u7b49\uff09\u66f4\u4f4e\u3002\u8d2a\u5fc3\u7b97\u6cd5\u7684\u9ad8\u6548\u6027\u4f53\u73b0\u5728\u5176\u5feb\u901f\u3001\u76f4\u63a5\u7684\u89e3\u51b3\u601d\u8def\u4e0a\uff0c\u9002\u7528\u4e8e\u5904\u7406\u5927\u89c4\u6a21\u95ee\u9898\u65f6\u7684\u9ad8\u6548\u6c42\u89e3\u3002 \u7f3a\u70b9 \uff1a\u7531\u4e8e\u8d2a\u5fc3\u7b97\u6cd5\u4e0d\u5177\u5907\u56de\u6eaf\u80fd\u529b\uff0c\u5b83\u53ea\u80fd\u5728\u7b26\u5408\u8d2a\u5fc3\u9009\u62e9\u6027\u8d28\u7684\u95ee\u9898\u4e2d\u6709\u6548\u3002\u5982\u679c\u95ee\u9898\u4e0d\u6ee1\u8db3\u8fd9\u79cd\u6027\u8d28\uff0c\u7b97\u6cd5\u53ef\u80fd\u4f1a\u5728\u540e\u7eed\u6b65\u9aa4\u4e2d\u9677\u5165\u6b21\u4f18\u89e3\u6216\u6b7b\u80e1\u540c\uff0c\u65e0\u6cd5\u8fbe\u5230\u5168\u5c40\u6700\u4f18\u89e3\u3002","title":"\u8d2a\u5fc3\u7b97\u6cd5\u7684\u7279\u70b9"},{"location":"lesson13/Lesson13%20Java/#_29","text":"\u8d2a\u5fc3\u7b97\u6cd5\u901a\u5e38\u9075\u5faa\u4ee5\u4e0b\u57fa\u672c\u6b65\u9aa4\uff1a \u660e\u786e\u8d2a\u5fc3\u7b56\u7565 \uff1a\u786e\u5b9a\u6bcf\u4e00\u6b65\u7684\u5c40\u90e8\u6700\u4f18\u89e3\u9009\u62e9\u7b56\u7565\u3002 \u6392\u5e8f \uff1a\u5982\u679c\u95ee\u9898\u6d89\u53ca\u591a\u4e2a\u9009\u62e9\uff0c\u901a\u5e38\u9700\u8981\u5bf9\u5176\u8fdb\u884c\u6392\u5e8f\uff08\u5982\u6309\u7ed3\u675f\u65f6\u95f4\u3001\u5355\u4f4d\u4ef7\u503c\u7b49\uff09\u3002 \u9010\u6b65\u9009\u62e9 \uff1a\u6839\u636e\u8d2a\u5fc3\u7b56\u7565\uff0c\u6309\u7167\u6392\u5e8f\u7ed3\u679c\u9010\u6b65\u9009\u62e9\u6700\u4f18\u9879\u3002 \u68c0\u67e5\u53ef\u884c\u6027 \uff1a\u6bcf\u6b21\u9009\u62e9\u65f6\uff0c\u786e\u4fdd\u5f53\u524d\u9009\u62e9\u6ee1\u8db3\u95ee\u9898\u7684\u7ea6\u675f\u6761\u4ef6\uff08\u5982\u4e0d\u51b2\u7a81\u3001\u4e0d\u8d85\u51fa\u5bb9\u91cf\u7b49\uff09\u3002 \u6784\u9020\u89e3 \uff1a\u5c06\u6240\u6709\u7684\u9009\u62e9\u7ec4\u5408\u8d77\u6765\uff0c\u5f62\u6210\u95ee\u9898\u7684\u6700\u7ec8\u89e3\u3002","title":"\u5177\u4f53\u6b65\u9aa4"},{"location":"lesson13/Lesson13%20Java/#_30","text":"\u8981\u5224\u65ad\u4e00\u4e2a\u95ee\u9898\u662f\u5426\u9002\u5408\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u53ef\u4ee5\u89c2\u5bdf\u4ee5\u4e0b\u7279\u5f81\uff1a \u8d2a\u5fc3\u9009\u62e9\u6027\u8d28 \uff1a\u5728\u6bcf\u4e00\u6b65\u4e2d\uff0c\u9009\u62e9\u7684\u5c40\u90e8\u6700\u4f18\u89e3\u80fd\u591f\u4fdd\u8bc1\u4e0d\u4f1a\u5f71\u54cd\u540e\u7eed\u9009\u62e9\u7684\u6700\u4f18\u6027\uff0c\u5373\u8d2a\u5fc3\u9009\u62e9\u5728\u6bcf\u4e00\u6b65\u90fd\u80fd\u4fdd\u6301\u5168\u5c40\u6700\u4f18\u3002 \u65e0\u540e\u6548\u6027 \uff1a\u5f53\u524d\u7684\u9009\u62e9\u4e0d\u4f1a\u5f71\u54cd\u672a\u6765\u7684\u9009\u62e9\u3002\u6bcf\u4e2a\u9009\u62e9\u7684\u7ed3\u679c\u53ea\u4f9d\u8d56\u5f53\u524d\u72b6\u6001\uff0c\u800c\u4e0d\u4f1a\u4f9d\u8d56\u4e4b\u524d\u7684\u51b3\u7b56\u3002\u5373\u4e00\u65e6\u505a\u51fa\u4e86\u67d0\u4e2a\u9009\u62e9\uff0c\u8be5\u9009\u62e9\u5c31\u4e0d\u53ef\u6539\u53d8\u3002 \u5982\u679c\u95ee\u9898\u6ee1\u8db3\u4ee5\u4e0a\u4e24\u70b9\uff0c\u90a3\u4e48\u901a\u5e38\u53ef\u4ee5\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\u6c42\u89e3\u3002","title":"\u8d2a\u5fc3\u7b97\u6cd5\u7684\u9002\u7528\u6761\u4ef6"},{"location":"lesson13/Lesson13%20Java/#vs","text":"\u5728\u533a\u5206\u4e00\u4e2a\u95ee\u9898\u662f\u5426\u9002\u5408\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\u6216\u52a8\u6001\u89c4\u5212\u65f6\uff0c \u6700\u4f18\u5b50\u7ed3\u6784 \u548c \u5b50\u95ee\u9898\u91cd\u53e0 \u662f\u5173\u952e\u7684\u5224\u5b9a\u6807\u51c6\uff1a \u8d2a\u5fc3\u9009\u62e9\u7684\u9002\u7528\u6761\u4ef6 \uff1a \u5c40\u90e8\u6700\u4f18\u9009\u62e9\u6027\u8d28 \uff1a\u8d2a\u5fc3\u7b97\u6cd5\u6bcf\u4e00\u6b65\u505a\u51fa\u7684\u9009\u62e9\u90fd\u662f\u5c40\u90e8\u6700\u4f18\u89e3\uff0c\u4e14\u8fd9\u4e9b\u5c40\u90e8\u6700\u4f18\u89e3\u6784\u6210\u4e86\u5168\u5c40\u6700\u4f18\u89e3\u3002\u8fd9\u79cd\u6027\u8d28\u4e00\u822c\u5b58\u5728\u4e8e\u53ef\u4ee5\u901a\u8fc7\u9010\u6b65\u9009\u62e9\u89e3\u51b3\u7684 \u7b80\u5355\u4f18\u5316\u95ee\u9898 \u3002 \u65e0\u540e\u6548\u6027 \uff1a\u672a\u6765\u7684\u51b3\u7b56\u4e0d\u4f9d\u8d56\u4e8e\u4e4b\u524d\u7684\u9009\u62e9\uff0c\u56e0\u6b64\u4e00\u65e6\u505a\u51fa\u4e86\u9009\u62e9\uff0c\u4e0d\u9700\u8981\u56de\u6eaf\u68c0\u67e5\u3002\u4f8b\u5982\uff0c \u5206\u6570\u80cc\u5305\u95ee\u9898 \uff0c\u6bcf\u6b21\u9009\u62e9\u5355\u4f4d\u4ef7\u503c\u6700\u9ad8\u7684\u7269\u54c1\u4e0d\u4f1a\u5f71\u54cd\u4e4b\u540e\u7684\u9009\u62e9\u3002 \u52a8\u6001\u89c4\u5212\u7684\u9002\u7528\u6761\u4ef6 \uff1a \u6700\u4f18\u5b50\u7ed3\u6784 \uff1a\u5168\u5c40\u6700\u4f18\u89e3\u4f9d\u8d56\u4e8e\u5b50\u95ee\u9898\u7684\u6700\u4f18\u89e3\u3002\u5982\u679c\u6bcf\u4e2a\u5b50\u95ee\u9898\u7684\u89e3\u90fd\u5f71\u54cd\u5230\u5168\u5c40\u6700\u4f18\u89e3\uff0c\u90a3\u4e48\u8fd9\u79cd\u95ee\u9898\u901a\u5e38\u9700\u8981\u4f7f\u7528\u52a8\u6001\u89c4\u5212\u6765\u89e3\u51b3\u3002\u80cc\u5305\u95ee\u9898\u4e2d\u7684 0-1 \u80cc\u5305\u95ee\u9898 \u5c31\u5c5e\u4e8e\u6b64\u7c7b\u95ee\u9898\uff0c\u5f53\u524d\u7269\u54c1\u662f\u5426\u9009\u5165\u80cc\u5305\u4f1a\u5f71\u54cd\u672a\u6765\u7684\u9009\u62e9\uff0c\u56e0\u6b64\u65e0\u6cd5\u7b80\u5355\u901a\u8fc7\u8d2a\u5fc3\u7b56\u7565\u5f97\u5230\u6700\u4f18\u89e3\u3002 \u5b50\u95ee\u9898\u91cd\u53e0 \uff1a\u5982\u679c\u95ee\u9898\u53ef\u4ee5\u88ab\u62c6\u5206\u4e3a\u591a\u4e2a\u5b50\u95ee\u9898\uff0c\u4e14\u8fd9\u4e9b\u5b50\u95ee\u9898\u4e4b\u95f4\u5b58\u5728\u91cd\u53e0\uff08\u5373\u67d0\u4e2a\u5b50\u95ee\u9898\u7684\u89e3\u4f1a\u591a\u6b21\u88ab\u4f7f\u7528\uff09\uff0c\u90a3\u4e48\u52a8\u6001\u89c4\u5212\u662f\u66f4\u6709\u6548\u7684\u9009\u62e9\u3002 \u603b\u7ed3\u6765\u770b\uff0c\u5982\u679c\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u5355\u7eaf\u7684 \u5c40\u90e8\u6700\u4f18\u9009\u62e9 \u89e3\u51b3\uff0c\u5e76\u4e14\u672a\u6765\u7684\u9009\u62e9\u4e0d\u4f9d\u8d56\u4e8e\u8fc7\u53bb\u7684\u9009\u62e9\uff0c\u901a\u5e38\u53ef\u4ee5\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\uff1b\u5426\u5219\u9700\u8981\u901a\u8fc7\u52a8\u6001\u89c4\u5212\u6765\u89e3\u51b3\u95ee\u9898\u3002","title":"\u8d2a\u5fc3\u7b97\u6cd5 vs \u52a8\u6001\u89c4\u5212\u7684\u5224\u5b9a\u6807\u51c6"},{"location":"lesson13/Lesson13%20Java/#_31","text":"","title":"\u7b80\u5355\u4f8b\u5b50"},{"location":"lesson13/Lesson13%20Java/#1_2","text":"\u95ee\u9898\u63cf\u8ff0 \uff1a\u4f60\u6709\u4e00\u4e2a\u5bb9\u91cf\u4e3a 50 \u7684\u80cc\u5305\uff0c\u548c\u4e00\u5806\u7269\u54c1\uff0c\u6bcf\u4ef6\u7269\u54c1\u90fd\u6709\u91cd\u91cf\u548c\u4ef7\u503c\u3002\u4f60\u53ef\u4ee5\u5c06\u6bcf\u4ef6\u7269\u54c1\u6309\u4efb\u610f\u6bd4\u4f8b\u88c5\u5165\u80cc\u5305\uff08\u4f8b\u5982\u53ef\u4ee5\u88c5\u5165\u7269\u54c1\u7684\u4e00\u90e8\u5206\uff09\uff0c\u76ee\u6807\u662f\u8ba9\u80cc\u5305\u91cc\u7684\u7269\u54c1\u603b\u4ef7\u503c\u6700\u5927\u5316\u3002 \u8d2a\u5fc3\u7b56\u7565 \uff1a\u4f18\u5148\u9009\u62e9\u5355\u4f4d\u91cd\u91cf\u4ef7\u503c\u6700\u9ad8\u7684\u7269\u54c1\uff0c\u5c3d\u53ef\u80fd\u591a\u5730\u88c5\u5165\u80cc\u5305\u3002","title":"1. \u5206\u6570\u80cc\u5305\u95ee\u9898\uff08\u8d2a\u5fc3\u7b97\u6cd5\uff09"},{"location":"lesson13/Lesson13%20Java/#_32","text":"\u660e\u786e\u8d2a\u5fc3\u7b56\u7565 \uff1a\u6bcf\u6b21\u9009\u62e9\u5355\u4f4d\u91cd\u91cf\u4ef7\u503c\u6700\u9ad8\u7684\u7269\u54c1\uff0c\u5c3d\u53ef\u80fd\u591a\u88c5\u5165\u80cc\u5305\u3002 \u6392\u5e8f \uff1a\u5c06\u6240\u6709\u7269\u54c1\u6309\u7167\u5355\u4f4d\u91cd\u91cf\u7684\u4ef7\u503c\u4ece\u9ad8\u5230\u4f4e\u6392\u5e8f\u3002 \u9010\u6b65\u9009\u62e9 \uff1a\u6309\u7167\u6392\u5e8f\u540e\u7684\u987a\u5e8f\uff0c\u4f18\u5148\u9009\u62e9\u5355\u4f4d\u4ef7\u503c\u6700\u9ad8\u7684\u7269\u54c1\uff0c\u76f4\u5230\u80cc\u5305\u88c5\u6ee1\u3002 \u68c0\u67e5\u53ef\u884c\u6027 \uff1a\u6bcf\u6b21\u9009\u62e9\u7269\u54c1\u65f6\uff0c\u68c0\u67e5\u80cc\u5305\u5269\u4f59\u5bb9\u91cf\u662f\u5426\u8db3\u591f\u3002\u5982\u679c\u5bb9\u91cf\u4e0d\u8db3\uff0c\u5c06\u7269\u54c1\u7684\u4e00\u90e8\u5206\u88c5\u5165\u80cc\u5305\u3002 \u6784\u9020\u89e3 \uff1a\u5c06\u9009\u5165\u80cc\u5305\u7684\u7269\u54c1\u7ec4\u5408\u8d77\u6765\uff0c\u8ba1\u7b97\u603b\u4ef7\u503c\uff0c\u5f97\u5230\u95ee\u9898\u7684\u89e3\u3002","title":"\u5206\u6790\u6b65\u9aa4\uff1a"},{"location":"lesson13/Lesson13%20Java/#2-0-1","text":"\u95ee\u9898\u63cf\u8ff0 \uff1a\u4f60\u6709\u4e00\u4e2a\u5bb9\u91cf\u4e3a 50 \u7684\u80cc\u5305\u548c\u4e00\u5806\u7269\u54c1\uff0c\u6bcf\u4ef6\u7269\u54c1\u90fd\u6709\u4e00\u4e2a\u786e\u5b9a\u7684\u91cd\u91cf\u548c\u4ef7\u503c\u3002\u4f60\u53ea\u80fd\u9009\u62e9 \u5c06\u67d0\u4ef6\u7269\u54c1\u5b8c\u5168\u653e\u5165\u80cc\u5305 \u6216\u8005 \u4e0d\u653e\u5165 \uff0c\u4e0d\u80fd\u53ea\u88c5\u4e00\u90e8\u5206\u3002\u76ee\u6807\u662f\u9009\u62e9\u4e00\u4e9b\u7269\u54c1\u653e\u5165\u80cc\u5305\uff0c\u4f7f\u5f97\u80cc\u5305\u4e2d\u7684\u7269\u54c1\u603b\u4ef7\u503c\u6700\u5927\u5316\u3002 \u52a8\u6001\u89c4\u5212\u601d\u8def \uff1a\u5bf9\u4e8e\u6bcf\u4ef6\u7269\u54c1\uff0c\u4f60\u9700\u8981\u51b3\u5b9a\u662f\u5426\u653e\u5165\u80cc\u5305\u3002\u6bcf\u6b21\u7684\u9009\u62e9\u90fd\u4f9d\u8d56\u4e8e\u80cc\u5305\u5f53\u524d\u7684\u5bb9\u91cf\u4ee5\u53ca\u4e4b\u524d\u7684\u9009\u62e9\u3002\u56e0\u4e3a\u9009\u62e9\u4e00\u6b21\u7269\u54c1\u4f1a\u5f71\u54cd\u5230\u540e\u7eed\u80fd\u88c5\u591a\u5c11\u4e1c\u897f\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u800c\u9700\u8981\u901a\u8fc7\u52a8\u6001\u89c4\u5212\u6765\u8003\u8651\u6240\u6709\u53ef\u80fd\u7684\u7ec4\u5408\u3002","title":"2. 0-1 \u80cc\u5305\u95ee\u9898\uff08\u52a8\u6001\u89c4\u5212\uff09"},{"location":"lesson13/Lesson13%20Java/#_33","text":"\u72b6\u6001 \uff1a\u6211\u4eec\u7528 dp[i][w] \u8868\u793a \u524d i \u4e2a\u7269\u54c1 \u5728 \u5bb9\u91cf\u4e3a w \u7684\u80cc\u5305 \u4e2d\u6240\u80fd\u88c5\u7684\u6700\u5927\u603b\u4ef7\u503c\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c dp[i][w] \u662f\u4e00\u4e2a\u4e2d\u95f4\u7ed3\u679c\uff0c\u544a\u8bc9\u6211\u4eec\u5982\u679c\u53ea\u8003\u8651\u524d i \u4e2a\u7269\u54c1\uff0c\u5e76\u4e14\u80cc\u5305\u5bb9\u91cf\u4e3a w\uff0c\u6211\u4eec\u80fd\u88c5\u7684\u6700\u9ad8\u4ef7\u503c\u662f\u591a\u5c11\u3002 \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b \uff1a\u8fd9\u4e2a\u5c31\u662f\u52a8\u6001\u89c4\u5212\u4e2d\u7684\u201c\u89c4\u5219\u201d\uff0c\u7528\u6765\u6307\u5bfc\u6211\u4eec\u5982\u4f55\u6839\u636e\u524d\u9762\u7684\u8ba1\u7b97\u7ed3\u679c\u63a8\u5bfc\u51fa\u5f53\u524d\u7684\u6700\u4f18\u89e3\u3002 \u5bf9\u4e8e\u6bcf\u4ef6\u7269\u54c1 i \uff0c\u4f60\u6709\u4e24\u79cd\u9009\u62e9\uff1a - \u4e0d\u9009\u8fd9\u4ef6\u7269\u54c1 \uff1a\u90a3\u4e48\u6700\u5927\u4ef7\u503c\u5c31\u662f dp[i-1][w] \uff0c\u5373\u80cc\u5305\u5bb9\u91cf\u4fdd\u6301\u4e0d\u53d8\uff0c\u524d\u9762 i-1 \u4e2a\u7269\u54c1\u7684\u6700\u4f18\u89e3\u3002 - \u9009\u8fd9\u4ef6\u7269\u54c1 \uff1a\u5982\u679c\u9009\u62e9\u7269\u54c1 i \uff0c\u5219\u5f53\u524d\u7684\u80cc\u5305\u5bb9\u91cf\u51cf\u5c11 weight[i] \uff0c\u800c\u6211\u4eec\u8fd8\u83b7\u5f97\u4e86 value[i] \u8fd9\u4e2a\u7269\u54c1\u7684\u4ef7\u503c\u3002\u6240\u4ee5\u6700\u5927\u4ef7\u503c\u53d8\u6210\u4e86 dp[i-1][w - weight[i]] + value[i] \u3002 \u4e24\u8005\u53d6\u8f83\u5927\u503c\uff1a dp[i][w] = max(dp[i-1][w], dp[i-1][w - weight[i]] + value[i]) \u7406\u89e3\u8fd9\u6bb5\u516c\u5f0f \uff1a \u5982\u679c\u4f60\u4e0d\u9009\u7269\u54c1 i \uff0c\u90a3\u4e48\u4f60\u53ea\u80fd\u4f9d\u8d56\u524d\u9762 i-1 \u4e2a\u7269\u54c1\u5728\u5bb9\u91cf\u4e3a w \u65f6\u7684\u6700\u4f18\u89e3\uff0c\u5373 dp[i-1][w] \u3002 \u5982\u679c\u4f60\u9009\u4e86\u7269\u54c1 i \uff0c\u90a3\u4f60\u9700\u8981\u817e\u51fa\u8db3\u591f\u7684\u7a7a\u95f4\u6765\u653e\u5b83\uff0c\u4e5f\u5c31\u662f\u8bf4\u80cc\u5305\u5bb9\u91cf\u4f1a\u51cf\u5c11 weight[i] \uff0c\u7136\u540e\u4f60\u80fd\u83b7\u5f97\u8fd9\u4ef6\u7269\u54c1\u7684\u4ef7\u503c value[i] \uff0c\u518d\u52a0\u4e0a\u524d i-1 \u4e2a\u7269\u54c1\u5728\u51cf\u5c11\u4e86\u7684\u5bb9\u91cf w - weight[i] \u65f6\u7684\u6700\u4f18\u89e3\uff0c\u5373 dp[i-1][w - weight[i]] \u3002 \u5982\u4f55\u6c42\u89e3 \uff1a\u6211\u4eec\u4ece\u7a7a\u80cc\u5305\u5f00\u59cb\uff0c\u9010\u6b65\u589e\u52a0\u7269\u54c1\u548c\u5bb9\u91cf\uff0c\u6bcf\u6b21\u7528\u4e0a\u9762\u8fd9\u4e2a\u516c\u5f0f\u53bb\u66f4\u65b0\u5f53\u524d\u80cc\u5305\u5bb9\u91cf\u7684\u6700\u4f18\u89e3\u3002\u901a\u8fc7\u8fd9\u4e2a\u9012\u63a8\u8fc7\u7a0b\uff0c\u6700\u540e\u5c31\u80fd\u5f97\u5230\u6574\u4e2a\u80cc\u5305\u7684\u6700\u5927\u4ef7\u503c\u3002","title":"\u7528\u7b80\u5355\u7684\u8bdd\u6765\u7406\u89e3\u52a8\u6001\u89c4\u5212\u7684\u601d\u8def\uff1a"},{"location":"lesson13/Lesson13%20Java/#_34","text":"\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u80cc\u5305\u5bb9\u91cf\u4e3a 5\uff0c\u7269\u54c1\u5982\u4e0b\uff1a - \u7269\u54c1 1\uff1a\u91cd\u91cf 2\uff0c\u4ef7\u503c 3 - \u7269\u54c1 2\uff1a\u91cd\u91cf 3\uff0c\u4ef7\u503c 4 - \u7269\u54c1 3\uff1a\u91cd\u91cf 4\uff0c\u4ef7\u503c 5 \u52a8\u6001\u89c4\u5212\u8868\u7684\u6784\u5efa\u8fc7\u7a0b \uff1a i\\w 0 1 2 3 4 5 0 0 0 0 0 0 0 1 0 0 3 3 3 3 2 0 0 3 4 4 7 3 0 0 3 4 5 7 \u5f53 i = 1 \uff08\u53ea\u8003\u8651\u7269\u54c11\uff09\uff1a\u7269\u54c11\u7684\u91cd\u91cf\u4e3a2\uff0c\u6240\u4ee5\u5f53\u80cc\u5305\u5bb9\u91cf\u5c0f\u4e8e2\u65f6\uff0c\u65e0\u6cd5\u653e\u5165\uff0c\u4ef7\u503c\u4e3a0\uff1b\u5f53\u5bb9\u91cf\u7b49\u4e8e2\u6216\u5927\u4e8e2\u65f6\uff0c\u653e\u5165\u7269\u54c11\uff0c\u4ef7\u503c\u4e3a3\u3002 \u5f53 i = 2 \uff08\u8003\u8651\u524d\u4e24\u4e2a\u7269\u54c1\uff09\uff1a\u5728\u5bb9\u91cf\u4e3a3\u65f6\uff0c\u653e\u5165\u7269\u54c12\u6bd4\u7269\u54c11\u597d\uff0c\u4ef7\u503c\u4e3a4\uff1b\u5f53\u5bb9\u91cf\u4e3a5\u65f6\uff0c\u653e\u5165\u7269\u54c11\u548c\u7269\u54c12\uff0c\u4ef7\u503c\u4e3a7\u3002 \u5f53 i = 3 \uff08\u8003\u8651\u4e09\u4e2a\u7269\u54c1\uff09\uff1a\u7269\u54c13\u592a\u91cd\uff0c\u4e0d\u80fd\u653e\u5165\u80cc\u5305\uff0c\u4e4b\u524d\u7684\u6700\u4f18\u503c\u4fdd\u6301\u4e0d\u53d8\u3002 \u6700\u7ec8\uff0c\u6211\u4eec\u5f97\u5230\u7684\u6700\u5927\u4ef7\u503c\u4e3a7\u3002","title":"\u4e3e\u4e2a\u7b80\u5355\u4f8b\u5b50\uff1a"},{"location":"lesson13/Lesson13%20Java/#3_2","text":"\u95ee\u9898 \uff1a\u4f60\u6709\u4e00\u7cfb\u5217\u6d3b\u52a8\uff0c\u6bcf\u4e2a\u6d3b\u52a8\u90fd\u6709\u5f00\u59cb\u65f6\u95f4\u548c\u7ed3\u675f\u65f6\u95f4\u3002\u4f60\u9700\u8981\u9009\u62e9\u5c3d\u53ef\u80fd\u591a\u7684\u6d3b\u52a8\uff0c\u5e76\u4e14\u8fd9\u4e9b\u6d3b\u52a8\u4e0d\u80fd\u91cd\u53e0\u3002 \u8d2a\u5fc3\u7b56\u7565 \uff1a\u6bcf\u6b21\u9009\u62e9\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u4e14\u4e0d\u4e0e\u5176\u4ed6\u6d3b\u52a8\u51b2\u7a81\u7684\u6d3b\u52a8\u3002 \u6b65\u9aa4 \uff1a 1. \u660e\u786e\u8d2a\u5fc3\u7b56\u7565 \uff1a\u6bcf\u6b21\u9009\u62e9\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u7684\u6d3b\u52a8\uff0c\u4ee5\u7559\u51fa\u66f4\u591a\u65f6\u95f4\u7ed9\u5176\u4ed6\u6d3b\u52a8\u3002 2. \u6392\u5e8f \uff1a\u5c06\u6d3b\u52a8\u6309\u7ed3\u675f\u65f6\u95f4\u4ece\u65e9\u5230\u665a\u6392\u5e8f\u3002 3. \u9010\u6b65\u9009\u62e9 \uff1a\u4ece\u7b2c\u4e00\u4e2a\u6d3b\u52a8\u5f00\u59cb\uff0c\u4f9d\u6b21\u9009\u62e9\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u4e14\u4e0e\u4e4b\u524d\u6d3b\u52a8\u4e0d\u51b2\u7a81\u7684\u6d3b\u52a8\u3002 4. \u68c0\u67e5\u53ef\u884c\u6027 \uff1a\u6bcf\u6b21\u9009\u62e9\u6d3b\u52a8\u65f6\uff0c\u68c0\u67e5\u8be5\u6d3b\u52a8\u662f\u5426\u4e0e\u5df2\u7ecf\u9009\u62e9\u7684\u6d3b\u52a8\u51b2\u7a81\u3002 5. \u6784\u9020\u89e3 \uff1a\u5c06\u6bcf\u6b21\u9009\u62e9\u7684\u6d3b\u52a8\u52a0\u5165\u6700\u7ec8\u89e3\uff0c\u76f4\u5230\u6ca1\u6709\u6d3b\u52a8\u53ef\u4ee5\u518d\u9009\u3002","title":"3. \u6d3b\u52a8\u9009\u62e9\u95ee\u9898\uff08\u8d2a\u5fc3\u7b97\u6cd5\uff09"},{"location":"lesson13/Lesson13%20Java/#_35","text":"\u8d2a\u5fc3\u7b97\u6cd5\u5e76\u4e0d\u603b\u662f\u80fd\u627e\u5230\u6700\u4f18\u89e3\u3002\u6bd4\u5982\uff1a","title":"\u8d2a\u5fc3\u7b97\u6cd5\u7684\u5c40\u9650\u6027"},{"location":"lesson13/Lesson13%20Java/#1-0-1","text":"\u5728\u8fd9\u4e2a\u95ee\u9898\u4e2d\uff0c\u4f60\u5fc5\u987b\u9009\u62e9 \u5b8c\u6574\u7684\u7269\u54c1 \uff08\u8981\u4e48\u5168\u9009\uff0c\u8981\u4e48\u4e0d\u9009\uff09\uff0c\u800c\u4e0d\u80fd\u9009\u62e9\u7269\u54c1\u7684\u4e00\u90e8\u5206\u3002\u5982\u679c\u4f60\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\u6765\u9009\u62e9\u5355\u4f4d\u4ef7\u503c\u6700\u9ad8\u7684\u7269\u54c1\uff0c\u5f88\u53ef\u80fd\u4f1a\u56e0\u4e3a\u91cd\u91cf\u9650\u5236\u800c\u65e0\u6cd5\u9009\u62e9\u6700\u4f18\u7ec4\u5408\u3002","title":"1. 0-1 \u80cc\u5305\u95ee\u9898"},{"location":"lesson13/Lesson13%20Java/#2_2","text":"\u5728\u67d0\u4e9b\u56fe\u4e0a\uff0c\u8d2a\u5fc3\u7b56\u7565\uff08\u603b\u662f\u9009\u62e9\u8ddd\u79bb\u6700\u8fd1\u7684\u8282\u70b9\uff09\u5e76\u4e0d\u603b\u80fd\u627e\u5230\u6700\u77ed\u8def\u5f84\u3002","title":"2. \u6700\u77ed\u8def\u5f84\u95ee\u9898"},{"location":"lesson13/Lesson13%20Java/#_36","text":"\u8d2a\u5fc3\u7b97\u6cd5\u662f\u4e00\u79cd\u7b80\u5355\u800c\u9ad8\u6548\u7684\u7b56\u7565\uff0c\u9002\u5408\u7528\u5728\u90a3\u4e9b \u53ef\u4ee5\u901a\u8fc7\u5c40\u90e8\u6700\u4f18\u89e3\u5f97\u5230\u5168\u5c40\u6700\u4f18\u89e3 \u7684\u95ee\u9898\u4e0a\u3002\u5b83\u7684\u5173\u952e\u5728\u4e8e\u6bcf\u4e00\u6b65\u90fd\u505a\u51fa\u6700\u597d\u7684\u5c40\u90e8\u9009\u62e9\uff0c\u5e0c\u671b\u6700\u7ec8\u5f97\u5230\u6700\u4f18\u89e3\u3002\u867d\u7136\u5e76\u4e0d\u662f\u6240\u6709\u95ee\u9898\u90fd\u9002\u5408\u7528\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u4f46\u5728\u5408\u9002\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u80fd\u5feb\u901f\u627e\u5230\u89e3\u3002","title":"\u603b\u7ed3\uff1a"},{"location":"lesson13/Lesson13%20Java/#31","text":"","title":"3.1 \u8d2a\u5fc3\u7b97\u6cd5\u4f8b\u9898\u8bb2\u89e3"},{"location":"lesson13/Lesson13%20Java/#311-lc455","text":"","title":"3.1.1 LC455: \u5206\u53d1\u997c\u5e72"},{"location":"lesson13/Lesson13%20Java/#_37","text":"\u7ed9\u5b9a\u4e24\u4e2a\u6570\u7ec4\uff0c g \u8868\u793a\u5b69\u5b50\u7684\u9700\u6c42\u5927\u5c0f\uff0c s \u8868\u793a\u997c\u5e72\u7684\u5927\u5c0f\u3002\u8bf7\u4f60\u5c3d\u53ef\u80fd\u5730\u7528\u997c\u5e72\u6ee1\u8db3\u5b69\u5b50\u7684\u9700\u6c42\uff0c\u6bcf\u4e2a\u5b69\u5b50\u6700\u591a\u53ea\u80fd\u83b7\u5f97\u4e00\u5757\u997c\u5e72\u3002\u5982\u679c\u4e00\u4e2a\u5b69\u5b50\u7684\u9700\u6c42\u5f97\u5230\u6ee1\u8db3\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5b69\u5b50\u5c31\u53ef\u4ee5\u5feb\u4e50\u5730\u5403\u5230\u997c\u5e72\u3002\u8bf7\u4f60\u8fd4\u56de\u80fd\u591f\u4f7f\u591a\u5c11\u4e2a\u5b69\u5b50\u6ee1\u8db3\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"lesson13/Lesson13%20Java/#_38","text":"class Solution { public int findContentChildren(int[] g, int[] s) { // \u5c06\u5b69\u5b50\u7684\u9700\u6c42\u548c\u997c\u5e72\u7684\u5927\u5c0f\u6392\u5e8f Arrays.sort(g); Arrays.sort(s); int i = 0; // \u6307\u5411\u5b69\u5b50\u7684\u6307\u9488 int j = 0; // \u6307\u5411\u997c\u5e72\u7684\u6307\u9488 // \u904d\u5386\u5b69\u5b50\u548c\u997c\u5e72\u6570\u7ec4 while (i < g.length && j < s.length) { // \u5982\u679c\u5f53\u524d\u997c\u5e72\u80fd\u6ee1\u8db3\u5f53\u524d\u5b69\u5b50 if (s[j] >= g[i]) { i++; // \u6ee1\u8db3\u4e86\u5b69\u5b50 i\uff0c\u5904\u7406\u4e0b\u4e00\u4e2a\u5b69\u5b50 } j++; // \u5c1d\u8bd5\u4e0b\u4e00\u4e2a\u997c\u5e72 } return i; // \u8fd4\u56de\u6ee1\u8db3\u7684\u5b69\u5b50\u6570\u91cf } }","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"lesson13/Lesson13%20Java/#_39","text":"\u6392\u5e8f\u6b65\u9aa4 \uff1a \u4f7f\u7528 Arrays.sort() \u65b9\u6cd5\u5bf9\u5b69\u5b50\u7684\u9700\u6c42\u6570\u7ec4 g \u548c\u997c\u5e72\u5927\u5c0f\u6570\u7ec4 s \u8fdb\u884c\u6392\u5e8f\u3002\u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u8f83\u5c0f\u7684\u9700\u6c42\u4e0e\u8f83\u5c0f\u7684\u997c\u5e72\u914d\u5bf9\uff0c\u4ece\u800c\u5c3d\u91cf\u4f7f\u7528\u6700\u5c0f\u7684\u997c\u5e72\u6ee1\u8db3\u6700\u5c0f\u9700\u6c42\u7684\u5b69\u5b50\u3002 \u5339\u914d\u8fc7\u7a0b \uff1a \u4f7f\u7528\u4e24\u4e2a\u6307\u9488 i \u548c j \uff0c\u5206\u522b\u6307\u5411\u5b69\u5b50\u548c\u997c\u5e72\u6570\u7ec4\u7684\u5f00\u59cb\u4f4d\u7f6e\u3002 \u5728 while \u5faa\u73af\u4e2d\uff0c\u68c0\u67e5\u5f53\u524d\u997c\u5e72\u662f\u5426\u80fd\u6ee1\u8db3\u5f53\u524d\u5b69\u5b50\u7684\u9700\u6c42\u3002\u5982\u679c s[j] \uff08\u5f53\u524d\u997c\u5e72\uff09\u5927\u4e8e\u7b49\u4e8e g[i] \uff08\u5f53\u524d\u5b69\u5b50\u7684\u9700\u6c42\uff09\uff0c\u5219\u8ba4\u4e3a\u8be5\u5b69\u5b50\u5f97\u5230\u4e86\u6ee1\u8db3\uff0c\u79fb\u52a8 i \u6307\u9488\uff0c\u51c6\u5907\u5904\u7406\u4e0b\u4e00\u4e2a\u5b69\u5b50\u3002 \u4e0d\u8bba\u997c\u5e72\u662f\u5426\u6ee1\u8db3\u5b69\u5b50\uff0c j \u6307\u9488\u90fd\u4f1a\u5411\u524d\u79fb\u52a8\uff0c\u5c1d\u8bd5\u4e0b\u4e00\u4e2a\u997c\u5e72\u3002","title":"\u4ee3\u7801\u8bb2\u89e3"},{"location":"lesson13/Lesson13%20Java/#32","text":"","title":"3.2 \u8d2a\u5fc3\u7b97\u6cd5\u4e3e\u4e00\u53cd\u4e09"},{"location":"lesson13/Lesson13%20Java/#321-lc-435","text":"","title":"3.2.1 LC 435: \u65e0\u91cd\u53e0\u533a\u95f4"},{"location":"lesson13/Lesson13%20Java/#_40","text":"\u7ed9\u5b9a\u4e00\u7ec4\u533a\u95f4\uff0c\u627e\u5230\u6700\u5c11\u9700\u8981\u79fb\u9664\u7684\u533a\u95f4\u6570\u91cf\uff0c\u4f7f\u5f97\u5269\u4e0b\u7684\u533a\u95f4\u4e92\u4e0d\u91cd\u53e0\u3002 \u8d2a\u5fc3\u7b97\u6cd5\u6b65\u9aa4 \uff1a 1. \u6392\u5e8f \uff1a\u6309\u7167\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\u3002\u6392\u5e8f\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f18\u5148\u9009\u62e9\u7ed3\u675f\u65f6\u95f4\u8f83\u65e9\u7684\u533a\u95f4\uff0c\u8fd9\u6837\u80fd\u591f\u4e3a\u540e\u7eed\u533a\u95f4\u7559\u51fa\u66f4\u591a\u7a7a\u95f4\uff0c\u51cf\u5c11\u51b2\u7a81\u3002 \u9009\u62e9\u533a\u95f4 \uff1a\u6bcf\u6b21\u9009\u62e9\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u4e14\u4e0d\u4e0e\u524d\u4e00\u4e2a\u9009\u62e9\u7684\u533a\u95f4\u91cd\u53e0\u7684\u533a\u95f4\u3002\u5982\u679c\u5f53\u524d\u533a\u95f4\u7684\u5f00\u59cb\u65f6\u95f4\u5c0f\u4e8e\u524d\u4e00\u4e2a\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4\uff0c\u8bf4\u660e\u53d1\u751f\u4e86\u91cd\u53e0\uff0c\u6211\u4eec\u5c31\u9700\u8981\u79fb\u9664\u5f53\u524d\u533a\u95f4\u3002\u5426\u5219\uff0c\u6211\u4eec\u66f4\u65b0\u5f53\u524d\u533a\u95f4\u4e3a\u65b0\u7684\u7ed3\u675f\u65f6\u95f4\uff0c\u5e76\u7ee7\u7eed\u5904\u7406\u4e0b\u4e00\u4e2a\u533a\u95f4\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"lesson13/Lesson13%20Java/#_41","text":"import java.util.Arrays; class Solution { // \u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\uff0c\u6309\u7ed3\u675f\u65f6\u95f4\u6392\u5e8f private static class IntervalComparator implements java.util.Comparator<int[]> { @Override public int compare(int[] a, int[] b) { return Integer.compare(a[1], b[1]); // \u6309\u7167\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4\u5347\u5e8f\u6392\u5217 } } public int eraseOverlapIntervals(int[][] intervals) { if (intervals.length == 0) return 0; // \u6309\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4\u8fdb\u884c\u6392\u5e8f Arrays.sort(intervals, new IntervalComparator()); int count = 0; int end = intervals[0][1]; // \u5f53\u524d\u9009\u5b9a\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4 // \u904d\u5386\u5269\u4f59\u533a\u95f4 for (int i = 1; i < intervals.length; i++) { if (intervals[i][0] < end) { count++; // \u53d1\u751f\u91cd\u53e0\uff0c\u589e\u52a0\u79fb\u9664\u7684\u533a\u95f4\u6570 } else { end = intervals[i][1]; // \u66f4\u65b0\u5f53\u524d\u9009\u5b9a\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4 } } return count; // \u8fd4\u56de\u88ab\u79fb\u9664\u7684\u533a\u95f4\u6570 } }","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"lesson13/Lesson13%20Java/#_42","text":"\u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570 \uff1a \u4f7f\u7528 IntervalComparator \u7c7b\u5b9e\u73b0 Comparator \u63a5\u53e3\uff0c\u6309\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4\u8fdb\u884c\u6392\u5e8f\u3002 \u6392\u5e8f\u6b65\u9aa4 \uff1a \u4f7f\u7528 Arrays.sort() \u65b9\u6cd5\u5c06\u533a\u95f4\u6309\u7ed3\u675f\u65f6\u95f4\u5347\u5e8f\u6392\u5e8f\u3002\u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u6211\u4eec\u6bcf\u6b21\u9009\u62e9\u7684\u533a\u95f4\u7ed3\u675f\u5f97\u6700\u65e9\uff0c\u80fd\u4e3a\u540e\u7eed\u7684\u533a\u95f4\u7559\u51fa\u66f4\u591a\u7a7a\u95f4\uff0c\u51cf\u5c11\u91cd\u53e0\u7684\u53ef\u80fd\u6027\u3002 \u904d\u5386\u9009\u62e9\u533a\u95f4 \uff1a \u521d\u59cb\u5316\u4e00\u4e2a end \u53d8\u91cf\uff0c\u8868\u793a\u5f53\u524d\u9009\u5b9a\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4\u3002\u904d\u5386\u5269\u4f59\u7684\u533a\u95f4\uff0c\u68c0\u67e5\u6bcf\u4e2a\u533a\u95f4\u7684\u5f00\u59cb\u65f6\u95f4\u662f\u5426\u4e0e\u5f53\u524d\u9009\u5b9a\u7684\u7ed3\u675f\u65f6\u95f4\u53d1\u751f\u91cd\u53e0\u3002\u5982\u679c\u5f53\u524d\u533a\u95f4\u7684\u5f00\u59cb\u65f6\u95f4\u5c0f\u4e8e end \uff0c\u5219\u8bf4\u660e\u53d1\u751f\u4e86\u91cd\u53e0\uff0c\u5fc5\u987b\u79fb\u9664\u8be5\u533a\u95f4\u3002\u5982\u679c\u6ca1\u6709\u91cd\u53e0\uff0c\u5219\u66f4\u65b0 end \u4e3a\u5f53\u524d\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4\u3002","title":"\u4ee3\u7801\u8bb2\u89e3"},{"location":"lesson13/Lesson13%20Java/#322-lc-605","text":"","title":"3.2.2 LC 605: \u79cd\u82b1\u95ee\u9898"},{"location":"lesson13/Lesson13%20Java/#_43","text":"\u7ed9\u5b9a\u4e00\u4e2a\u8868\u793a\u82b1\u575b\u7684\u6574\u6570\u6570\u7ec4 flowerbed \uff0c\u5176\u4e2d flowerbed[i] = 0 \u8868\u793a\u8be5\u4f4d\u7f6e\u662f\u7a7a\u7684\uff0c flowerbed[i] = 1 \u8868\u793a\u8be5\u4f4d\u7f6e\u5df2\u7ecf\u79cd\u4e86\u82b1\u3002\u82b1\u575b\u4e2d\u82b1\u4e0d\u80fd\u79cd\u5728\u76f8\u90bb\u7684\u5730\u5757\u4e0a\uff0c\u95ee\u662f\u5426\u80fd\u591f\u5728\u4e0d\u8fdd\u53cd\u89c4\u5219\u7684\u60c5\u51b5\u4e0b\u518d\u79cd\u4e0b n \u6735\u82b1\u3002 \u8d2a\u5fc3\u7b97\u6cd5\u6b65\u9aa4 \uff1a 1. \u904d\u5386\u82b1\u575b \uff1a\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u68c0\u67e5\u6bcf\u4e2a\u4f4d\u7f6e\u3002\u5982\u679c\u5f53\u524d\u4f4d\u7f6e\u662f\u7a7a\u7684 0 \uff0c\u5e76\u4e14\u5b83\u7684\u524d\u4e00\u4e2a\u4f4d\u7f6e\u548c\u540e\u4e00\u4e2a\u4f4d\u7f6e\u4e5f\u662f\u7a7a\u7684\uff08\u5982\u679c\u5b58\u5728\uff09\uff0c\u90a3\u4e48\u53ef\u4ee5\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u79cd\u82b1\u3002 \u8ba1\u6570\u5e76\u8df3\u8fc7\u76f8\u90bb\u4f4d\u7f6e \uff1a\u6bcf\u6b21\u6210\u529f\u79cd\u82b1\u540e\uff0c\u589e\u52a0\u8ba1\u6570\uff0c\u5e76\u8df3\u8fc7\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u76f8\u90bb\u4f4d\u7f6e\u4e0d\u80fd\u79cd\u82b1\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"lesson13/Lesson13%20Java/#_44","text":"class Solution { public boolean canPlaceFlowers(int[] flowerbed, int n) { int count = 0; // \u8bb0\u5f55\u53ef\u4ee5\u79cd\u82b1\u7684\u6570\u91cf // \u904d\u5386\u6574\u4e2a\u82b1\u575b for (int i = 0; i < flowerbed.length; i++) { // \u5224\u65ad\u5f53\u524d\u4f4d\u7f6e\u662f\u5426\u53ef\u4ee5\u79cd\u82b1\uff08\u68c0\u67e5\u524d\u540e\u4f4d\u7f6e\uff0c\u6ce8\u610f\u8fb9\u754c\u6761\u4ef6\uff09 if (flowerbed[i] == 0 && (i == 0 || flowerbed[i - 1] == 0) && (i == flowerbed.length - 1 || flowerbed[i + 1] == 0)) { flowerbed[i] = 1; // \u79cd\u82b1 count++; // \u8ba1\u6570\u589e\u52a0 i++; // \u8df3\u8fc7\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u907f\u514d\u76f8\u90bb\u79cd\u82b1 } if (count >= n) return true; // \u5982\u679c\u79cd\u591f n \u6735\u82b1\uff0c\u8fd4\u56de true } return count >= n; // \u904d\u5386\u7ed3\u675f\uff0c\u68c0\u67e5\u662f\u5426\u79cd\u591f n \u6735\u82b1 } }","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"lesson13/Lesson13%20Java/#_45","text":"\u904d\u5386\u5224\u65ad\u80fd\u5426\u79cd\u82b1 \uff1a \u904d\u5386\u6574\u4e2a flowerbed \u6570\u7ec4\uff0c\u68c0\u67e5\u6bcf\u4e2a\u4f4d\u7f6e\u662f\u5426\u53ef\u4ee5\u79cd\u82b1\u3002\u5f53\u524d\u7684\u4f4d\u7f6e\u5fc5\u987b\u6ee1\u8db3\u4e09\u4e2a\u6761\u4ef6\u624d\u80fd\u79cd\u82b1\uff1a\u5f53\u524d\u4f4d\u7f6e\u4e3a 0 \uff0c\u524d\u4e00\u4e2a\u4f4d\u7f6e\uff08\u5982\u679c\u5b58\u5728\uff09\u4e3a 0 \uff0c\u540e\u4e00\u4e2a\u4f4d\u7f6e\uff08\u5982\u679c\u5b58\u5728\uff09\u4e5f\u4e3a 0 \u3002\u5728\u68c0\u67e5\u8fb9\u754c\u65f6\uff08\u7b2c\u4e00\u4e2a\u548c\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\uff09\uff0c\u53ef\u4ee5\u7528\u6761\u4ef6\u8bed\u53e5\u907f\u514d\u8bbf\u95ee\u4e0d\u5b58\u5728\u7684\u524d\u540e\u4f4d\u7f6e\u3002 \u79cd\u82b1\u540e\u8df3\u8fc7\u76f8\u90bb\u4f4d\u7f6e \uff1a \u6bcf\u6b21\u6210\u529f\u79cd\u82b1\u540e\uff0c\u66f4\u65b0 flowerbed \u6570\u7ec4\uff0c\u5c06\u5f53\u524d\u7684\u4f4d\u7f6e\u8bbe\u7f6e\u4e3a 1 \uff0c\u5e76\u589e\u52a0 count \u8ba1\u6570\u3002\u540c\u65f6\uff0c\u8df3\u8fc7\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\uff08 i++ \uff09\uff0c\u56e0\u4e3a\u76f8\u90bb\u7684\u4f4d\u7f6e\u4e0d\u80fd\u518d\u79cd\u82b1\u3002 \u63d0\u524d\u7ec8\u6b62 \uff1a \u5982\u679c\u5728\u904d\u5386\u8fc7\u7a0b\u4e2d\u5df2\u7ecf\u79cd\u591f\u4e86 n \u6735\u82b1\uff0c\u5219\u53ef\u4ee5\u63d0\u524d\u8fd4\u56de true \u3002\u5982\u679c\u904d\u5386\u7ed3\u675f\u540e\u8fd8\u6ca1\u6709\u79cd\u591f\uff0c\u5219\u8fd4\u56de false \u3002","title":"\u4ee3\u7801\u8bb2\u89e3"},{"location":"lesson13/Lesson13%20Java/#323-lc-1029","text":"","title":"3.2.3 LC 1029: \u4e24\u5730\u8c03\u5ea6"},{"location":"lesson13/Lesson13%20Java/#_46","text":"\u6709 2N \u4e2a\u4eba\uff0c\u6bcf\u4e2a\u4eba\u90fd\u9700\u8981\u98de\u5f80 A \u5e02\u6216 B \u5e02\u3002\u7ed9\u5b9a\u4e00\u4e2a costs \u6570\u7ec4\uff0c\u5176\u4e2d costs[i] = [aCost, bCost] \u8868\u793a\u7b2c i \u4e2a\u4eba\u98de\u5f80 A \u5e02\u7684\u8d39\u7528\u548c\u98de\u5f80 B \u5e02\u7684\u8d39\u7528\u3002\u73b0\u5728\u9700\u8981\u628a\u8fd9\u4e9b\u4eba\u5206\u914d\u5230\u4e24\u4e2a\u57ce\u5e02\uff0c\u4f7f\u5f97 N \u4e2a\u4eba\u98de\u5f80 A \u5e02\uff0c N \u4e2a\u4eba\u98de\u5f80 B \u5e02\uff0c\u8981\u6c42\u603b\u8d39\u7528\u6700\u5c0f\u3002 \u8d2a\u5fc3\u7b97\u6cd5\u6b65\u9aa4 \uff1a 1. \u8ba1\u7b97\u6210\u672c\u5dee\u5f02 \uff1a\u6211\u4eec\u8ba1\u7b97\u6bcf\u4e2a\u4eba\u53bb A \u5e02\u548c B \u5e02\u7684\u8d39\u7528\u5dee\uff0c\u5373 aCost - bCost \u3002\u6211\u4eec\u5e0c\u671b\u4f18\u5148\u8ba9\u90a3\u4e9b\u53bb B \u5e02\u66f4\u4fbf\u5b9c\u7684\u4eba\u53bb B \u5e02\uff0c\u800c\u8ba9\u53bb A \u5e02\u66f4\u4fbf\u5b9c\u7684\u4eba\u53bb A \u5e02\u3002 \u6392\u5e8f\u9009\u62e9 \uff1a\u6839\u636e\u53bb A \u5e02\u548c B \u5e02\u7684\u8d39\u7528\u5dee\u5f02\u6392\u5e8f\u3002\u5dee\u5f02\u8d8a\u5927\u7684\u4eba\uff0c\u610f\u5473\u7740\u53bb A \u5e02\u6216 B \u5e02\u5bf9\u6210\u672c\u5f71\u54cd\u8d8a\u5927\uff0c\u56e0\u6b64\u6211\u4eec\u4f18\u5148\u8003\u8651\u8fd9\u4e9b\u4eba\u3002 \u5206\u914d\u57ce\u5e02 \uff1a\u524d N \u4e2a\u4eba\u5b89\u6392\u5230 A \u5e02\uff0c\u540e N \u4e2a\u4eba\u5b89\u6392\u5230 B \u5e02\uff0c\u6700\u7ec8\u5f97\u5230\u6700\u5c0f\u7684\u603b\u8d39\u7528\u3002","title":"\u9898\u76ee\u63cf\u8ff0\uff1a"},{"location":"lesson13/Lesson13%20Java/#_47","text":"import java.util.Arrays; class Solution { public int twoCitySchedCost(int[][] costs) { // \u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\uff0c\u6309\u53bb A \u5e02\u548c B \u5e02\u7684\u8d39\u7528\u5dee\u8fdb\u884c\u6392\u5e8f Arrays.sort(costs, (a, b) -> (a[0] - a[1]) - (b[0] - b[1])); int totalCost = 0; int n = costs.length / 2; // \u524d N \u4e2a\u4eba\u53bb A \u5e02\uff0c\u540e N \u4e2a\u4eba\u53bb B \u5e02 for (int i = 0; i < n; i++) { totalCost += costs[i][0]; // \u53bb A \u5e02\u7684\u8d39\u7528 } for (int i = n; i < 2 * n; i++) { totalCost += costs[i][1]; // \u53bb B \u5e02\u7684\u8d39\u7528 } return totalCost; } }","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"lesson13/Lesson13%20Java/#_48","text":"\u8ba1\u7b97\u6210\u672c\u5dee\u5f02 \uff1a \u6bcf\u4e2a\u4eba\u6709\u53bb A \u5e02\u548c B \u5e02\u7684\u4e24\u79cd\u9009\u62e9\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 aCost - bCost \u6765\u8861\u91cf\u6bcf\u4e2a\u4eba\u53bb A \u5e02\u7684\u989d\u5916\u6210\u672c\u3002\u5982\u679c aCost < bCost \uff0c\u8bf4\u660e\u8ba9\u8fd9\u4e2a\u4eba\u53bb A \u5e02\u66f4\u5212\u7b97\uff0c\u53cd\u4e4b\u5219\u53bb B \u5e02\u66f4\u5212\u7b97\u3002 \u6392\u5e8f\u6b65\u9aa4 \uff1a \u4f7f\u7528 Java \u7684 Arrays.sort() \u65b9\u6cd5\u5bf9 costs \u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\uff0c\u6392\u5e8f\u4f9d\u636e\u4e3a aCost - bCost \u3002\u8fd9\u786e\u4fdd\u4e86\u90a3\u4e9b\u53bb A \u5e02\u66f4\u4fbf\u5b9c\u7684\u4eba\u4f1a\u88ab\u4f18\u5148\u5b89\u6392\u53bb A \u5e02\uff0c\u800c\u53bb B \u5e02\u66f4\u4fbf\u5b9c\u7684\u4eba\u4f1a\u88ab\u5b89\u6392\u53bb B \u5e02\u3002 \u5206\u914d\u57ce\u5e02 \uff1a \u6392\u5e8f\u540e\uff0c\u524d\u4e00\u534a\u7684\u4eba\u53bb A \u5e02\uff0c\u540e\u4e00\u534a\u7684\u4eba\u53bb B \u5e02\u3002\u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u5728\u603b\u8d39\u7528\u6700\u5c0f\u7684\u60c5\u51b5\u4e0b\uff0c\u5e73\u8861\u53bb\u4e24\u5ea7\u57ce\u5e02\u7684\u4eba\u6570\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a \u6700\u7ec8\u8fd4\u56de\u603b\u7684\u8d39\u7528\uff0c\u5373\u524d N \u4e2a\u4eba\u7684 A \u5e02\u8d39\u7528\u548c\u540e N \u4e2a\u4eba\u7684 B \u5e02\u8d39\u7528\u4e4b\u548c\u3002","title":"\u4ee3\u7801\u8bb2\u89e3"},{"location":"lesson13/Lesson13%20Java/#4","text":"","title":"4. \u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson13/Lesson13%20Java/#_49","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC1288 \u5220\u9664\u88ab\u8986\u76d6\u7684\u533a\u95f4 \u7ed9\u5b9a\u4e00\u7ec4\u533a\u95f4\uff0c\u627e\u51fa\u5176\u4e2d\u672a\u88ab\u8986\u76d6\u7684\u533a\u95f4\uff0c\u79fb\u9664\u88ab\u8986\u76d6\u7684\u533a\u95f4\u3002 LC1024 \u89c6\u9891\u62fc\u63a5 \u7ed9\u5b9a\u4e00\u7ec4\u533a\u95f4\uff0c\u5224\u65ad\u662f\u5426\u80fd\u591f\u901a\u8fc7\u62fc\u63a5\u533a\u95f4\u8986\u76d6\u6574\u4e2a\u89c6\u9891\u957f\u5ea6\u3002 LC763 \u5212\u5206\u5b57\u6bcd\u533a\u95f4 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5c06\u5176\u5212\u5206\u4e3a\u5c3d\u53ef\u80fd\u591a\u7684\u4e0d\u91cd\u53e0\u7684\u533a\u95f4\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u5b57\u6bcd\u6700\u591a\u51fa\u73b0\u5728\u4e00\u4e2a\u533a\u95f4\u4e2d\u3002 LC57 \u63d2\u5165\u533a\u95f4 \u7ed9\u5b9a\u4e00\u7ec4\u975e\u91cd\u53e0\u7684\u533a\u95f4\u548c\u4e00\u4e2a\u65b0\u7684\u533a\u95f4\uff0c\u5c06\u65b0\u533a\u95f4\u63d2\u5165\u5e76\u5408\u5e76\u6240\u6709\u53ef\u80fd\u7684\u91cd\u53e0\u533a\u95f4\u3002 LC179 \u6700\u5927\u6570 \u7ed9\u5b9a\u4e00\u7ec4\u975e\u8d1f\u6574\u6570\uff0c\u91cd\u65b0\u6392\u5217\u5b83\u4eec\u7684\u987a\u5e8f\u4f7f\u4e4b\u7ec4\u6210\u4e00\u4e2a\u6700\u5927\u7684\u6574\u6570\u3002","title":"\u6392\u5e8f\u95ee\u9898"},{"location":"lesson13/Lesson13%20Java/#_50","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC121 \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a \u7ed9\u5b9a\u80a1\u7968\u4ef7\u683c\uff0c\u627e\u5230\u5728\u6700\u4f73\u65f6\u673a\u4e70\u5165\u548c\u5356\u51fa\u4ee5\u83b7\u5f97\u6700\u5927\u5229\u6da6\u3002 LC122 \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a II \u5141\u8bb8\u591a\u6b21\u4e70\u5356\uff0c\u627e\u5230\u5728\u6700\u4f73\u65f6\u673a\u4e70\u5165\u548c\u5356\u51fa\u4ee5\u83b7\u5f97\u6700\u5927\u5229\u6da6\u3002 LC55 \u8df3\u8dc3\u6e38\u620f \u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u5224\u65ad\u662f\u5426\u80fd\u8df3\u5230\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u3002 LC45 \u8df3\u8dc3\u6e38\u620f II \u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u627e\u5230\u8df3\u5230\u6570\u7ec4\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u7684\u6700\u5c11\u8df3\u8dc3\u6b21\u6570\u3002 LC409 \u6700\u957f\u56de\u6587\u4e32 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u627e\u5230\u5176\u4e2d\u80fd\u7ec4\u6210\u7684\u6700\u957f\u56de\u6587\u4e32\u7684\u957f\u5ea6\u3002","title":"\u8d2a\u5fc3\u7b97\u6cd5\u95ee\u9898"},{"location":"lesson13/Lesson13%20Python/","text":"Lesson 13. \u65f6\u95f4\u590d\u6742\u5ea6\u4e0e\u6eda\u52a8\u6c42\u6700\u503c \u76ee\u5f55 \u65f6\u95f4\u590d\u6742\u5ea6\u7b80\u4ecb \u6392\u5e8f\u7b97\u6cd5\u4e0e\u5e94\u7528 2.1 \u6392\u5e8f\u7b97\u6cd5\u4f8b\u9898\u8bb2\u89e3 2.1.1 LC215\uff1a\u627e\u51fa\u6570\u7ec4\u4e2d\u7684\u7b2c K \u5927\u5143\u7d20 2.2 \u6392\u5e8f\u7b97\u6cd5\u4e3e\u4e00\u53cd\u4e09 2.2.1 LC56\uff1a\u5408\u5e76\u533a\u95f4 2.2.2 LC252\uff1a\u4f1a\u8bae\u5ba4 2.2.3 LC347\uff1a\u524d K \u4e2a\u9ad8\u9891\u5143\u7d20 \u8d2a\u5fc3\u7b97\u6cd5 3.1 \u8d2a\u5fc3\u7b97\u6cd5\u4f8b\u9898\u8bb2\u89e3 3.1.1 LC455: \u5206\u53d1\u997c\u5e72 3.2 \u8d2a\u5fc3\u7b97\u6cd5\u4e3e\u4e00\u53cd\u4e09 3.2.1 LC435: \u65e0\u91cd\u53e0\u533a\u95f4 3.2.2 LC605: \u79cd\u82b1\u95ee\u9898 3.2.3 LC1029: \u4e24\u5730\u8c03\u5ea6 \u8bfe\u540e\u7ec3\u4e60 1. \u65f6\u95f4\u590d\u6742\u5ea6\u7b80\u4ecb \u65f6\u95f4\u590d\u6742\u5ea6 \u662f\u8861\u91cf\u7b97\u6cd5\u6267\u884c\u6548\u7387\u7684\u91cd\u8981\u6307\u6807\uff0c\u5b83\u63cf\u8ff0\u4e86\u968f\u7740\u8f93\u5165\u6570\u636e\u91cf\u7684\u589e\u5927\uff0c\u7b97\u6cd5\u6267\u884c\u65f6\u95f4\u7684\u589e\u957f\u901f\u5ea6\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u901a\u5e38\u8868\u793a\u4e3a O(\u67d0\u4e2a\u51fd\u6570) \uff0c\u5176\u4e2d \"O\" \u8868\u793a\u589e\u957f\u7684\u4e0a\u9650\u3002\u4ee5\u4e0b\u4ecb\u7ecd\u56db\u79cd\u5e38\u89c1\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff1a O(1) \u3001 O(n) \u3001 O(n^2) \u548c O(n log n) \u3002 \u5e38\u89c1\u7684\u65f6\u95f4\u590d\u6742\u5ea6 O(1) \uff1a\u5e38\u6570\u65f6\u95f4\u590d\u6742\u5ea6 \u64cd\u4f5c\u7684\u6267\u884c\u65f6\u95f4\u4e0d\u968f\u8f93\u5165\u6570\u636e\u7684\u5927\u5c0f\u800c\u53d8\u5316\u3002 \u4f8b\u5b50 \uff1a\u4ece\u6570\u7ec4\u4e2d\u83b7\u53d6\u7b2c k \u4e2a\u5143\u7d20\u3002 python arr = [1, 2, 3, 4, 5] k = 2 # \u83b7\u53d6\u7b2c\u4e09\u4e2a\u5143\u7d20\uff08\u7d22\u5f15\u4ece0\u5f00\u59cb\uff09 element = arr[k] # O(1) print(f\"Element at index {k}: {element}\") \u65f6\u95f4\u590d\u6742\u5ea6 \uff1a\u65e0\u8bba\u6570\u7ec4\u5927\u5c0f\u662f\u591a\u5c11\uff0c\u83b7\u53d6\u7b2c k \u4e2a\u5143\u7d20\u6240\u9700\u65f6\u95f4\u662f\u56fa\u5b9a\u7684\uff0c\u5c5e\u4e8e O(1) \u3002 O(n) \uff1a\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6 \u64cd\u4f5c\u7684\u6267\u884c\u65f6\u95f4\u968f\u7740\u8f93\u5165\u6570\u636e\u91cf\u7ebf\u6027\u589e\u957f\u3002 \u4f8b\u5b50 \uff1a\u904d\u5386\u4e00\u4e2a\u6570\u7ec4\u3002 # \u5047\u8bbe arr \u662f\u4e00\u4e2a\u5df2\u7ecf\u5b9a\u4e49\u5e76\u521d\u59cb\u5316\u7684\u5217\u8868 arr = [1, 2, 3, 4, 5] # \u4f7f\u7528 for \u5faa\u73af\u904d\u5386\u5217\u8868 for i in range(len(arr)): print(arr[i]) \u65f6\u95f4\u590d\u6742\u5ea6 \uff1a\u904d\u5386\u6574\u4e2a\u6570\u7ec4\u9700\u8981\u7684\u65f6\u95f4\u4e0e\u6570\u7ec4\u7684\u957f\u5ea6 n \u6210\u6b63\u6bd4\uff0c\u5c5e\u4e8e O(n) \u3002 O(n^2) \uff1a\u5e73\u65b9\u65f6\u95f4\u590d\u6742\u5ea6 \u64cd\u4f5c\u7684\u6267\u884c\u65f6\u95f4\u4e0e\u8f93\u5165\u6570\u636e\u91cf\u7684\u5e73\u65b9\u6210\u6b63\u6bd4\uff0c\u5e38\u89c1\u4e8e\u53cc\u91cd\u5faa\u73af\u3002 \u4f8b\u5b50 \uff1a\u6253\u5370\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u3002 arr = [[1, 2, 3], [4, 5, 6], [7, 8, 9]] for i in range(3): for j in range(3): print(arr[i][j], end=\" \") print() # \u6bcf\u6253\u5370\u5b8c\u4e00\u884c\u540e\u6362\u884c \u65f6\u95f4\u590d\u6742\u5ea6 \uff1a\u53cc\u91cd\u5faa\u73af\u5d4c\u5957\u904d\u5386\u6bcf\u4e2a\u5143\u7d20\uff0c\u603b\u7684\u6267\u884c\u65f6\u95f4\u662f n \u7684\u5e73\u65b9\uff0c\u5c5e\u4e8e O(n^2) \u3002 O(log n) \uff1a\u5e38\u89c1\u4e8e\u6392\u5e8f\u7b97\u6cd5\uff08\u6b64\u7ae0\u8282\u540e\u534a\u90e8\u5206\u4f1a\u8be6\u7ec6\u8bb2\u89e3\uff09 \u4f8b\u5b50 \uff1a\u5f52\u5e76\u6392\u5e8f\u3001\u5feb\u901f\u6392\u5e8f\u3002 def merge(arr, l, m, r): # \u8ba1\u7b97\u4e24\u4e2a\u5b50\u6570\u7ec4\u7684\u957f\u5ea6 n1 = m - l + 1 n2 = r - m # \u521b\u5efa\u4e34\u65f6\u6570\u7ec4 L = [0] * n1 R = [0] * n2 # \u5c06\u6570\u636e\u62f7\u8d1d\u5230\u4e34\u65f6\u6570\u7ec4 L[] \u548c R[] for i in range(n1): L[i] = arr[l + i] for j in range(n2): R[j] = arr[m + 1 + j] # \u521d\u59cb\u5316\u7d22\u5f15 i = 0 # \u5de6\u5b50\u6570\u7ec4\u7684\u7d22\u5f15 j = 0 # \u53f3\u5b50\u6570\u7ec4\u7684\u7d22\u5f15 k = l # \u5408\u5e76\u540e\u6570\u7ec4\u7684\u7d22\u5f15 # \u5408\u5e76\u4e34\u65f6\u6570\u7ec4\u5230\u539f\u6570\u7ec4 while i < n1 and j < n2: if L[i] <= R[j]: arr[k] = L[i] i += 1 else: arr[k] = R[j] j += 1 k += 1 # \u62f7\u8d1d\u5de6\u5b50\u6570\u7ec4\u5269\u4f59\u7684\u5143\u7d20 while i < n1: arr[k] = L[i] i += 1 k += 1 # \u62f7\u8d1d\u53f3\u5b50\u6570\u7ec4\u5269\u4f59\u7684\u5143\u7d20 while j < n2: arr[k] = R[j] j += 1 k += 1 def mergeSort(arr, l, r): # \u9012\u5f52\u7ed3\u675f\u6761\u4ef6 if l >= r: return # \u8ba1\u7b97\u4e2d\u95f4\u70b9 m = l + (r - l) // 2 # \u9012\u5f52\u6392\u5e8f\u5de6\u534a\u90e8\u5206 mergeSort(arr, l, m) # \u9012\u5f52\u6392\u5e8f\u53f3\u534a\u90e8\u5206 mergeSort(arr, m + 1, r) # \u5408\u5e76\u5df2\u6392\u5e8f\u7684\u4e24\u90e8\u5206 merge(arr, l, m, r) \u65f6\u95f4\u590d\u6742\u5ea6 \uff1a\u5f52\u5e76\u6392\u5e8f\u901a\u8fc7\u9012\u5f52\u5c06\u6570\u7ec4\u5206\u6210\u66f4\u5c0f\u7684\u90e8\u5206\u8fdb\u884c\u6392\u5e8f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n log n) \u3002 \u4e3a\u4ec0\u4e48\u662f O(n log n) ? \u5f52\u5e76\u6392\u5e8f\u662f\u4e00\u79cd \u5206\u6cbb\u7b97\u6cd5 \uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5f52\u5e76\u6392\u5e8f\u7684\u6b65\u9aa4\u5206\u4e3a\u4e24\u90e8\u5206\uff1a \u62c6\u5206 \u548c \u5408\u5e76 \u3002 1. \u62c6\u5206\u8fc7\u7a0b\uff1a\u9012\u5f52\u5206\u89e3\u6570\u7ec4 \u5f52\u5e76\u6392\u5e8f\u9996\u5148\u5c06\u6570\u7ec4\u9012\u5f52\u5730\u5bf9\u534a\u62c6\u5206\uff0c\u76f4\u5230\u6bcf\u4e2a\u5b50\u6570\u7ec4\u53ea\u5269\u4e0b\u4e00\u4e2a\u5143\u7d20\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u7c7b\u4f3c\u4e8e\u6784\u5efa\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u6bcf\u6b21\u5c06\u95ee\u9898\u7684\u89c4\u6a21\u51cf\u534a\u3002 \u5bf9\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u6570\u7ec4\uff1a \u7b2c\u4e00\u5c42\uff1a1 \u4e2a\u957f\u5ea6\u4e3a n \u7684\u6570\u7ec4 \u7b2c\u4e8c\u5c42\uff1a2 \u4e2a\u957f\u5ea6\u4e3a n/2 \u7684\u6570\u7ec4 \u7b2c\u4e09\u5c42\uff1a4 \u4e2a\u957f\u5ea6\u4e3a n/4 \u7684\u6570\u7ec4 ... \u7b2c log n \u5c42\uff1a\u6bcf\u4e2a\u6570\u7ec4\u7684\u957f\u5ea6\u662f 1\uff0c\u5171\u6709 n \u4e2a\u6570\u7ec4 \u56e0\u4e3a\u6bcf\u6b21\u90fd\u5bf9\u6570\u7ec4\u8fdb\u884c\u4e8c\u5206\uff0c\u6240\u4ee5\u6574\u4e2a\u9012\u5f52\u6811\u7684\u6df1\u5ea6\u662f log n \u3002 2. \u5408\u5e76\u8fc7\u7a0b\uff1a\u7ebf\u6027\u5408\u5e76 \u5f53\u5b50\u6570\u7ec4\u62c6\u5206\u5230\u6700\u5c0f\uff08\u6bcf\u4e2a\u6570\u7ec4\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff09\u65f6\uff0c\u5f52\u5e76\u6392\u5e8f\u5f00\u59cb\u5408\u5e76\u8fd9\u4e9b\u5b50\u6570\u7ec4\u3002\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\u7684\u65f6\u95f4\u4e0e\u5b83\u4eec\u7684\u957f\u5ea6\u6210\u6b63\u6bd4\uff0c\u4e5f\u5c31\u662f\u8bf4\u5408\u5e76\u4e24\u4e2a\u6570\u7ec4\u7684\u65f6\u95f4\u662f O(n) \u3002 \u5728\u9012\u5f52\u6811\u7684\u6bcf\u4e00\u5c42\uff0c\u6240\u6709\u6570\u7ec4\u7684\u603b\u957f\u5ea6\u59cb\u7ec8\u662f n \uff0c\u56e0\u6b64\uff1a \u7b2c\u4e00\u5c42\uff1a\u5408\u5e76\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u6570\u7ec4\uff0c\u65f6\u95f4\u662f O(n) \u7b2c\u4e8c\u5c42\uff1a\u5408\u5e76\u4e24\u4e2a\u957f\u5ea6\u4e3a n/2 \u7684\u6570\u7ec4\uff0c\u603b\u65f6\u95f4\u4ecd\u7136\u662f O(n) \u7b2c\u4e09\u5c42\uff1a\u5408\u5e76\u56db\u4e2a\u957f\u5ea6\u4e3a n/4 \u7684\u6570\u7ec4\uff0c\u603b\u65f6\u95f4\u4e5f\u662f O(n) \u65e0\u8bba\u6709\u591a\u5c11\u4e2a\u5c0f\u6570\u7ec4\uff0c\u5408\u5e76\u6bcf\u4e00\u5c42\u7684\u603b\u65f6\u95f4\u90fd\u662f O(n) \u3002 3. \u9012\u5f52\u6811\u7684\u5c42\u6570 \u62c6\u5206\u7684\u8fc7\u7a0b\u6700\u591a\u8fdb\u884c log n \u6b21\uff08\u6bcf\u6b21\u5c06\u6570\u7ec4\u5bf9\u534a\u5206\uff09\u3002\u56e0\u6b64\uff0c\u9012\u5f52\u6811\u7684\u6df1\u5ea6\u662f log n \uff0c\u5373\u6700\u591a\u6709 log n \u5c42\u3002 \u603b\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u8ba1\u7b97 \u56e0\u4e3a\u6bcf\u4e00\u5c42\u7684\u5408\u5e76\u65f6\u95f4\u90fd\u662f O(n) \uff0c\u800c\u6574\u4e2a\u9012\u5f52\u6811\u6709 log n \u5c42\uff0c\u6240\u4ee5\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(n) * O(log n) = O(n log n) \u4e3a\u4ec0\u4e48\u4e0d\u4f1a\u8d85\u8fc7 O(n log n) \u6709\u4eba\u53ef\u80fd\u4f1a\u7591\u60d1\uff1a\u65e2\u7136\u6211\u4eec\u5728\u9012\u5f52\u4e2d\u53cd\u590d\u5206\u88c2\u6570\u7ec4\uff0c\u4e3a\u4ec0\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u4f1a\u8d85\u8fc7 O(n log n) \u5462\uff1f \u6bcf\u5c42\u7684\u5408\u5e76\u64cd\u4f5c\u662f\u7ebf\u6027\u7684 \uff1a\u867d\u7136\u9012\u5f52\u5206\u88c2\u4f1a\u4ea7\u751f\u591a\u4e2a\u5c0f\u6570\u7ec4\uff0c\u4f46\u6bcf\u4e00\u5c42\u4e2d\u6240\u6709\u6570\u7ec4\u7684\u603b\u957f\u5ea6\u4ecd\u7136\u662f n \u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u4e00\u5c42\u5408\u5e76\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u59cb\u7ec8\u662f O(n) \uff0c\u4e0d\u4f1a\u7d2f\u79ef\u66f4\u591a\u590d\u6742\u5ea6\u3002 \u9012\u5f52\u7684\u6df1\u5ea6\u662f log n \uff1a\u7531\u4e8e\u6bcf\u6b21\u9012\u5f52\u90fd\u5c06\u6570\u7ec4\u5bf9\u534a\u5206\u88c2\uff0c\u6574\u4e2a\u9012\u5f52\u8fc7\u7a0b\u53ea\u4f1a\u8fdb\u884c log n \u6b21\u5206\u88c2\u3002\u56e0\u6b64\uff0c\u9012\u5f52\u6811\u7684\u6df1\u5ea6\u662f log n \u3002 \u6700\u7ec8\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u6bcf\u5c42\u7684\u65f6\u95f4 O(n) \u4e58\u4ee5\u9012\u5f52\u6811\u7684\u5c42\u6570 log n \uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(n log n) \u3002 \u65f6\u95f4\u590d\u6742\u5ea6\u603b\u7ed3 O(1) \uff1a\u6267\u884c\u65f6\u95f4\u4e0d\u53d7\u8f93\u5165\u89c4\u6a21\u5f71\u54cd\u3002 O(n) \uff1a\u6267\u884c\u65f6\u95f4\u968f\u8f93\u5165\u89c4\u6a21\u7ebf\u6027\u589e\u957f\u3002 O(n^2) \uff1a\u6267\u884c\u65f6\u95f4\u4e0e\u8f93\u5165\u89c4\u6a21\u7684\u5e73\u65b9\u6210\u6b63\u6bd4\uff0c\u901a\u5e38\u53d1\u751f\u5728\u5d4c\u5957\u5faa\u73af\u4e2d\u3002 O(n log n) \uff1a\u5e38\u89c1\u4e8e\u9ad8\u6548\u7684\u6392\u5e8f\u7b97\u6cd5\u3002 \u5177\u4f53\u5b9e\u4f8b \u8003\u8651\u4e00\u4e2a\u7b80\u5355\u7684\u7b97\u6cd5\uff1a\u8ba1\u7b97\u6570\u7ec4\u4e2d\u6240\u6709\u5143\u7d20\u7684\u548c\u3002 def sumArray(arr, n): total = 0 for i in range(n): total += arr[i] # \u57fa\u672c\u64cd\u4f5c return total # \u5b9a\u4e49\u6570\u7ec4 arr = [1, 2, 3, 4, 5] n = len(arr) # \u83b7\u53d6\u6570\u7ec4\u957f\u5ea6 # \u8f93\u51fa\u6570\u7ec4\u7684\u548c print(\"Sum of array:\", sumArray(arr, n)) \u6b65\u9aa4\u5206\u6790 \u786e\u5b9a\u57fa\u672c\u64cd\u4f5c \uff1a \u57fa\u672c\u64cd\u4f5c\u662f total += arr[i] \u3002 \u8ba1\u7b97\u57fa\u672c\u64cd\u4f5c\u7684\u6b21\u6570 \uff1a \u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff0cfor \u5faa\u73af\u4f1a\u6267\u884c n \u6b21\uff08\u5176\u4e2d n \u662f\u6570\u7ec4 arr \u7684\u957f\u5ea6\uff09\u3002 \u56e0\u6b64\uff0c\u57fa\u672c\u64cd\u4f5c\u7684\u6b21\u6570\u4e3a n \u3002 \u4f7f\u7528\u5927 O \u8868\u793a\u6cd5 \uff1a \u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(n)\u3002 \u8003\u8651\u6700\u574f\u60c5\u51b5 \uff1a \u65e0\u8bba\u8f93\u5165\u7684\u5177\u4f53\u5185\u5bb9\u5982\u4f55\uff0c\u53ea\u8981\u6570\u7ec4\u957f\u5ea6\u4e3a n \uff0c\u57fa\u672c\u64cd\u4f5c\u90fd\u4f1a\u6267\u884c n \u6b21\uff0c\u56e0\u6b64\u6700\u574f\u60c5\u51b5\u4e3a O(n)\u3002 \u7279\u6b8a\u60c5\u51b5 \uff1a \u5982\u679c\u6570\u7ec4\u4e3a\u7a7a\uff0c\u5faa\u73af\u4e0d\u4f1a\u6267\u884c\uff0c\u4f46\u6211\u4eec\u4ecd\u7136\u8ba4\u4e3a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n)\uff0c\u56e0\u4e3a\u6211\u4eec\u5173\u6ce8\u7684\u662f\u8f93\u5165\u7684\u89c4\u6a21\u3002 \u968f\u5802\u7ec3\u4e60 \u5224\u65ad\u4ee5\u4e0b\u4ee3\u7801\u7684\u65f6\u95f4\u590d\u6742\u5ea6 def find_max(arr): max_num = arr[0] for num in arr: # \u57fa\u672c\u64cd\u4f5c if num > max_num: max_num = num return max_num # Example usage arr = [1, 5, 3, 9, 2] print(f\"Max number: {find_max(arr)}\") \u89e3\u7b54 \u7b2c\u4e00\u6bb5\u4ee3\u7801\uff08find_max\uff09 \uff1a \u57fa\u672c\u64cd\u4f5c\u662f if num > max_num \u3002 \u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u5faa\u73af\u6267\u884c n \u6b21\u3002 \u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(n)\u3002 2. \u6392\u5e8f\u7b97\u6cd5\u4e0e\u5e94\u7528 \u6392\u5e8f\u662f\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\u4e00\u4e2a\u975e\u5e38\u57fa\u7840\u4f46\u91cd\u8981\u7684\u64cd\u4f5c\u3002\u5b83\u4e0d\u4ec5\u53ef\u4ee5\u8ba9\u6570\u636e\u6309\u7279\u5b9a\u987a\u5e8f\u6392\u5217\uff0c\u8fd8\u80fd\u5e2e\u52a9\u6211\u4eec\u89e3\u51b3\u8bb8\u591a\u4e0e\u6570\u636e\u5904\u7406\u76f8\u5173\u7684\u95ee\u9898\u3002\u901a\u8fc7\u6392\u5e8f\uff0c\u6211\u4eec\u53ef\u4ee5\u66f4\u5feb\u5730\u89e3\u51b3\u627e\u7b2c K \u5927\u5143\u7d20\u3001\u5408\u5e76\u91cd\u53e0\u533a\u95f4\u7b49\u95ee\u9898\u3002 \u9002\u7528\u573a\u666f \u6392\u5e8f\u7684\u5e94\u7528\u573a\u666f\u975e\u5e38\u5e7f\u6cdb\uff0c\u5c24\u5176\u662f\u5728\u6570\u636e\u5904\u7406\u4e2d\uff0c\u4f60\u4f1a\u7ecf\u5e38\u9047\u5230\u9700\u8981\u5bf9\u6570\u636e\u8fdb\u884c\u6392\u5e8f\u7684\u60c5\u51b5\uff1a \u627e\u51fa\u7b2c K \u5927\u5143\u7d20 \uff1a\u901a\u8fc7\u6392\u5e8f\u6570\u636e\uff0c\u53ef\u4ee5\u5f88\u5feb\u627e\u51fa\u7b2c K \u5927\uff08\u6216\u7b2c K \u5c0f\uff09\u7684\u5143\u7d20\u3002 \u5408\u5e76\u533a\u95f4 \uff1a\u5f53\u5904\u7406\u591a\u4e2a\u533a\u95f4\u6216\u6bb5\u65f6\uff0c\u5e38\u5e38\u9700\u8981\u5148\u5c06\u8fd9\u4e9b\u533a\u95f4\u6309\u67d0\u4e2a\u7ef4\u5ea6\u6392\u5e8f\uff0c\u7136\u540e\u5408\u5e76\u5b83\u4eec\u3002 \u4f8b\u5b50 \uff1a\u5408\u5e76\u65e5\u7a0b\u3001\u4efb\u52a1\u65f6\u95f4\u6bb5\u7b49\u6570\u636e\uff0c\u89e3\u51b3\u533a\u95f4\u91cd\u53e0\u95ee\u9898\u3002 \u4f18\u5316\u64cd\u4f5c \uff1a\u4e0d\u540c\u7684\u6392\u5e8f\u7b97\u6cd5\u5728\u9762\u5bf9\u4e0d\u540c\u89c4\u6a21\u7684\u6570\u636e\u65f6\u8868\u73b0\u5404\u5f02\uff0c\u56e0\u6b64\u9009\u62e9\u5408\u9002\u7684\u6392\u5e8f\u7b97\u6cd5\u5bf9\u4e8e\u63d0\u9ad8\u7a0b\u5e8f\u6027\u80fd\u975e\u5e38\u91cd\u8981\u3002 \u5e38\u7528\u6280\u5de7 1. \u5185\u7f6e\u6392\u5e8f\u51fd\u6570 \u5927\u591a\u6570\u7f16\u7a0b\u8bed\u8a00\u90fd\u63d0\u4f9b\u4e86\u5185\u7f6e\u7684\u6392\u5e8f\u51fd\u6570\uff0c\u5b83\u4eec\u7ecf\u8fc7\u4f18\u5316\uff0c\u80fd\u4ee5\u9ad8\u6548\u7684\u65b9\u5f0f\u8fdb\u884c\u6392\u5e8f\u3002Python \u63d0\u4f9b\u4e86 list.sort() \u65b9\u6cd5\u548c sorted() \u51fd\u6570\u3002 \u793a\u4f8b\u4ee3\u7801 \uff1a # \u5b9a\u4e49\u4e00\u4e2a\u6574\u6570\u5217\u8868 nums = [3, 1, 4, 1, 5, 9] # \u4f7f\u7528\u5185\u7f6e\u7684\u6392\u5e8f\u65b9\u6cd5\u5bf9\u5217\u8868\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\uff08\u539f\u5730\u6392\u5e8f\uff09 nums.sort() # \u8f93\u51fa\u6392\u5e8f\u540e\u7684\u5217\u8868 print(\"Sorted array:\", nums) \u6216\u8005\u4f7f\u7528 sorted() \u51fd\u6570\uff1a # \u5b9a\u4e49\u4e00\u4e2a\u6574\u6570\u5217\u8868 nums = [3, 1, 4, 1, 5, 9] # \u4f7f\u7528\u5185\u7f6e\u7684 sorted() \u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u6392\u5e8f\u540e\u7684\u5217\u8868 sorted_nums = sorted(nums) # \u8f93\u51fa\u6392\u5e8f\u540e\u7684\u5217\u8868 print(\"Sorted array:\", sorted_nums) \u8bf4\u660e \uff1a list.sort() \u65b9\u6cd5\u4f1a\u5bf9\u5217\u8868\u8fdb\u884c\u539f\u5730\u5347\u5e8f\u6392\u5e8f\uff0c\u4e0d\u4f1a\u521b\u5efa\u65b0\u7684\u5217\u8868\u3002 sorted() \u51fd\u6570\u4f1a\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u6392\u5e8f\u540e\u7684\u5217\u8868\uff0c\u539f\u5217\u8868\u4fdd\u6301\u4e0d\u53d8\u3002 \u4f7f\u7528\u5185\u7f6e\u7684\u6392\u5e8f\u65b9\u6cd5\u662f\u975e\u5e38\u5feb\u6377\u4e14\u9ad8\u6548\u7684\uff0c\u5bf9\u4e8e\u5927\u591a\u6570\u7b80\u5355\u6392\u5e8f\u4efb\u52a1\uff0c\u5b83\u7684\u6548\u7387\u975e\u5e38\u9ad8\u3002 2. \u81ea\u5b9a\u4e49\u6392\u5e8f \u6709\u65f6\u6211\u4eec\u9700\u8981\u6309\u7167\u81ea\u5b9a\u4e49\u7684\u89c4\u5219\u5bf9\u6570\u636e\u8fdb\u884c\u6392\u5e8f\u3002\u6bd4\u5982\uff0c\u6211\u4eec\u53ef\u80fd\u5e0c\u671b\u6309\u5217\u8868\u7684\u67d0\u4e2a\u7279\u5b9a\u5143\u7d20\u8fdb\u884c\u6392\u5e8f\uff0c\u800c\u4e0d\u662f\u6309\u9ed8\u8ba4\u7684\u987a\u5e8f\u3002\u5728 Python \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 sort() \u65b9\u6cd5\u6216 sorted() \u51fd\u6570\u7684 key \u53c2\u6570\u6765\u81ea\u5b9a\u4e49\u6392\u5e8f\u89c4\u5219\u3002 \u793a\u4f8b\u4ee3\u7801 \uff1a # \u5b9a\u4e49\u4e00\u4e2a\u4e8c\u7ef4\u5217\u8868 data = [[1, 3], [2, 2], [3, 1]] # \u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u6392\u5e8f\u89c4\u5219\u6309\u7b2c\u4e8c\u4e2a\u5143\u7d20\u6392\u5e8f data.sort(key=lambda x: x[1]) # \u8f93\u51fa\u6392\u5e8f\u540e\u7684\u4e8c\u7ef4\u5217\u8868 for row in data: print(f\"{row[0]}, {row[1]}\") \u8bf4\u660e \uff1a \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e86 sort() \u65b9\u6cd5\u7684 key \u53c2\u6570\uff0c\u4f20\u5165\u4e86\u4e00\u4e2a\u533f\u540d\u51fd\u6570 lambda x: x[1] \uff0c\u6309\u7167\u6bcf\u4e2a\u5b50\u5217\u8868\u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20\u8fdb\u884c\u6392\u5e8f\u3002 sort() \u65b9\u6cd5\u7684 key \u53c2\u6570\u7528\u4e8e\u6307\u5b9a\u6392\u5e8f\u7684\u4f9d\u636e\uff0c lambda \u51fd\u6570\u53ef\u4ee5\u7075\u6d3b\u5730\u5b9a\u4e49\u6392\u5e8f\u89c4\u5219\u3002 \u5982\u679c\u9700\u8981\u8fd4\u56de\u65b0\u7684\u6392\u5e8f\u5217\u8868\u800c\u4e0d\u6539\u53d8\u539f\u5217\u8868\uff0c\u53ef\u4ee5\u4f7f\u7528 sorted() \u51fd\u6570\uff1a python sorted_data = sorted(data, key=lambda x: x[1]) \u4f7f\u7528 cmp_to_key \u8fdb\u884c\u590d\u6742\u6392\u5e8f \u9664\u4e86\u4f7f\u7528\u7b80\u5355\u7684 lambda \u51fd\u6570\u5916\uff0cPython \u8fd8\u63d0\u4f9b\u4e86 functools.cmp_to_key \uff0c\u9002\u7528\u4e8e\u9700\u8981\u66f4\u52a0\u590d\u6742\u6392\u5e8f\u903b\u8f91\u7684\u60c5\u51b5\u3002\u5b83\u53ef\u4ee5\u5c06\u57fa\u4e8e\u6bd4\u8f83\u51fd\u6570\u7684\u903b\u8f91\u8f6c\u6362\u4e3a\u73b0\u4ee3\u7684 key \u51fd\u6570\uff0c\u4f7f\u5176\u53ef\u4ee5\u7528\u4e8e sorted() \u6216 sort() \u51fd\u6570\u3002 \u793a\u4f8b\u4ee3\u7801 \u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u9700\u8981\u6839\u636e\u81ea\u5b9a\u4e49\u89c4\u5219\u8fdb\u884c\u6392\u5e8f\u7684\u5217\u8868\u3002\u4f8b\u5982\uff0c\u6309\u5947\u6570\u4f18\u5148\u3001\u5076\u6570\u5176\u6b21\u7684\u89c4\u5219\u6392\u5e8f\uff0c\u5982\u679c\u4e24\u8005\u76f8\u540c\uff0c\u5219\u6309\u6570\u5b57\u5927\u5c0f\u6392\u5e8f\uff1a from functools import cmp_to_key # \u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570 def custom_compare(x, y): # \u5947\u6570\u4f18\u5148\uff0c\u5076\u6570\u9760\u540e if (x % 2 == 1) and (y % 2 == 0): return -1 elif (x % 2 == 0) and (y % 2 == 1): return 1 # \u5982\u679c\u540c\u4e3a\u5947\u6570\u6216\u5076\u6570\uff0c\u6309\u6570\u5b57\u5927\u5c0f\u6392\u5e8f else: return (x > y) - (x < y) # \u5f85\u6392\u5e8f\u5217\u8868 arr = [3, 1, 4, 1, 5, 9, 2, 6, 8, 7] # \u4f7f\u7528 cmp_to_key \u5c06\u6bd4\u8f83\u51fd\u6570\u8f6c\u6362\u4e3a key sorted_arr = sorted(arr, key=cmp_to_key(custom_compare)) print(sorted_arr) # \u8f93\u51fa: [3, 1, 1, 5, 9, 7, 2, 4, 6, 8] \u8bf4\u660e custom_compare \u662f\u81ea\u5b9a\u4e49\u7684\u6bd4\u8f83\u51fd\u6570\uff0c\u6309\u5947\u5076\u6027\u6392\u5e8f\u3002\u5982\u679c x \u662f\u5947\u6570\u800c y \u662f\u5076\u6570\uff0c\u5219\u8fd4\u56de -1\uff0c\u8868\u793a x \u5e94\u8be5\u6392\u5728\u524d\u9762\uff1b\u53cd\u4e4b\uff0c\u8fd4\u56de 1 \u8868\u793a y \u5e94\u8be5\u6392\u5728\u524d\u9762\u3002\u5bf9\u4e8e\u540c\u7c7b\u578b\uff08\u5947\u6570\u6216\u5076\u6570\uff09\uff0c\u76f4\u63a5\u6309\u6570\u5b57\u5927\u5c0f\u6392\u5e8f\u3002 cmp_to_key \u5c06\u8fd9\u4e2a\u6bd4\u8f83\u51fd\u6570\u8f6c\u6362\u4e3a sorted() \u51fd\u6570\u7684 key \u53c2\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528\u81ea\u5b9a\u4e49\u6392\u5e8f\u903b\u8f91\u3002 \u8fd9\u79cd\u65b9\u6cd5\u975e\u5e38\u9002\u5408\u5f53 lambda \u65e0\u6cd5\u8f7b\u677e\u8868\u8fbe\u590d\u6742\u6392\u5e8f\u903b\u8f91\u65f6\u4f7f\u7528\u3002 3. \u6392\u5e8f\u4f18\u5316 \u6392\u5e8f\u7b97\u6cd5\u5728\u5904\u7406\u4e0d\u540c\u89c4\u6a21\u6570\u636e\u65f6\u8868\u73b0\u5404\u5f02\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u89c1\u7684\u6392\u5e8f\u7b97\u6cd5\u53ca\u5176\u9002\u7528\u573a\u666f\uff0c\u4f9b\u5927\u5bb6\u521d\u6b65\u4e86\u89e3\uff1a \u9009\u62e9\u6392\u5e8f \uff1a\u9002\u7528\u4e8e\u5c0f\u89c4\u6a21\u6570\u636e\u96c6\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n\u00b2)\u3002 \u7279\u70b9\u662f\u6bcf\u6b21\u4ece\u672a\u6392\u5e8f\u90e8\u5206\u4e2d\u9009\u62e9\u6700\u5c0f\uff08\u6216\u6700\u5927\uff09\u7684\u5143\u7d20\uff0c\u7136\u540e\u5c06\u5176\u653e\u5230\u5df2\u6392\u5e8f\u90e8\u5206\u7684\u672b\u5c3e\u3002\u7b80\u5355\u6613\u61c2\uff0c\u4f46\u6027\u80fd\u8f83\u5dee\uff0c\u4e0d\u9002\u5408\u5927\u6570\u636e\u96c6\u3002 \u63d2\u5165\u6392\u5e8f \uff1a\u9002\u5408\u4e8e\u51e0\u4e4e\u5df2\u6392\u5e8f\u7684\u6570\u636e\u96c6\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u662f O(n\u00b2)\u3002 \u5f53\u6570\u636e\u51e0\u4e4e\u6709\u5e8f\u65f6\uff0c\u63d2\u5165\u6392\u5e8f\u7684\u6548\u7387\u4f1a\u6bd4\u9009\u62e9\u6392\u5e8f\u597d\u5f97\u591a\uff0c\u56e0\u4e3a\u5b83\u51cf\u5c11\u4e86\u4e0d\u5fc5\u8981\u7684\u6bd4\u8f83\u548c\u79fb\u52a8\u3002 \u5feb\u901f\u6392\u5e8f \uff1a\u6027\u80fd\u8f83\u597d\u7684\u901a\u7528\u6392\u5e8f\u7b97\u6cd5\uff0c\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n log n)\u3002 \u901a\u8fc7\u9009\u62e9\u4e00\u4e2a\u57fa\u51c6\u5143\u7d20\uff08pivot\uff09\uff0c\u5c06\u6570\u7ec4\u5212\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u9012\u5f52\u5730\u5bf9\u4e24\u90e8\u5206\u8fdb\u884c\u6392\u5e8f\u3002\u9002\u5408\u5927\u89c4\u6a21\u6570\u636e\u96c6\uff0c\u4f46\u6700\u574f\u60c5\u51b5\u4e0b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n\u00b2)\u3002 \u5f52\u5e76\u6392\u5e8f \uff1a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n log n)\uff0c\u4e14\u662f\u7a33\u5b9a\u7684\u6392\u5e8f\u7b97\u6cd5\u3002 \u5c06\u6570\u7ec4\u4e0d\u65ad\u62c6\u5206\u6210\u5b50\u6570\u7ec4\uff0c\u5206\u522b\u6392\u5e8f\u540e\u518d\u5408\u5e76\u3002\u6027\u80fd\u7a33\u5b9a\uff0c\u4f46\u9700\u8981\u989d\u5916\u7684\u5185\u5b58\u7a7a\u95f4\u5b58\u50a8\u4e34\u65f6\u6570\u7ec4\u3002 \u5192\u6ce1\u6392\u5e8f \uff1a\u7b80\u5355\u4f46\u6027\u80fd\u8f83\u5dee\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n\u00b2)\u3002 \u901a\u8fc7\u91cd\u590d\u904d\u5386\u5217\u8868\uff0c\u6bd4\u8f83\u76f8\u90bb\u5143\u7d20\u5e76\u4ea4\u6362\uff0c\u5c06\u8f83\u5927\u7684\u5143\u7d20\u9010\u6e10\u79fb\u52a8\u5230\u5217\u8868\u672b\u5c3e\u3002\u9002\u7528\u4e8e\u975e\u5e38\u5c0f\u89c4\u6a21\u7684\u6570\u636e\u96c6\u3002 \u5806\u6392\u5e8f \uff1a\u57fa\u4e8e\u5806\u6570\u636e\u7ed3\u6784\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n log n)\u3002 \u901a\u8fc7\u5efa\u7acb\u6700\u5927\u5806\u6216\u6700\u5c0f\u5806\u6765\u6392\u5e8f\uff0c\u4e0d\u9700\u8981\u989d\u5916\u7684\u5185\u5b58\u7a7a\u95f4\u3002\u867d\u7136\u6548\u7387\u548c\u5feb\u901f\u6392\u5e8f\u76f8\u5f53\uff0c\u4f46\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u5e38\u7528\u5feb\u901f\u6392\u5e8f\u3002 \u8ba1\u6570\u6392\u5e8f \uff1a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n + k)\uff0c\u9002\u7528\u4e8e\u6570\u636e\u8303\u56f4\u8f83\u5c0f\u7684\u6574\u6570\u6392\u5e8f\u3002 \u901a\u8fc7\u7edf\u8ba1\u6bcf\u4e2a\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570\u6765\u6392\u5e8f\u3002\u5f53\u6570\u636e\u8303\u56f4\u8f83\u5c0f\u65f6\uff0c\u6027\u80fd\u975e\u5e38\u4f18\u5f02\uff0c\u4f46\u8303\u56f4\u5f88\u5927\u65f6\uff0c\u7a7a\u95f4\u6d88\u8017\u4f1a\u8fc7\u9ad8\u3002 \u6876\u6392\u5e8f \uff1a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n + k)\uff0c\u9002\u5408\u5747\u5300\u5206\u5e03\u7684\u6570\u636e\u96c6\u3002 \u5c06\u6570\u636e\u5206\u5230\u591a\u4e2a\u6876\u4e2d\uff0c\u5206\u522b\u5bf9\u6bcf\u4e2a\u6876\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u5408\u5e76\u6240\u6709\u6876\u4e2d\u7684\u5143\u7d20\u3002\u5bf9\u4e8e\u5206\u5e03\u5747\u5300\u7684\u6570\u636e\uff0c\u6027\u80fd\u5f88\u597d\uff0c\u4f46\u6570\u636e\u5206\u5e03\u4e0d\u5747\u65f6\u6027\u80fd\u53ef\u80fd\u4e0b\u964d\u3002 \u57fa\u6570\u6392\u5e8f \uff1a\u975e\u6bd4\u8f83\u6392\u5e8f\u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n * k)\uff0c\u9002\u7528\u4e8e\u4f4d\u6570\u56fa\u5b9a\u7684\u6570\u636e\u3002 \u901a\u8fc7\u6309\u4f4d\uff08\u5982\u4e2a\u4f4d\u3001\u5341\u4f4d\uff09\u8fdb\u884c\u591a\u6b21\u6392\u5e8f\u6765\u5b8c\u6210\u6574\u4f53\u6392\u5e8f\u3002\u9002\u7528\u4e8e\u5bf9\u6574\u6570\u6216\u5b57\u7b26\u4e32\u8fdb\u884c\u6392\u5e8f\uff0c\u5c24\u5176\u662f\u5f53\u4f4d\u6570 k \u8f83\u5c0f\u65f6\u3002 \u6b64\u5916\uff0cPython \u7684\u5185\u7f6e\u6392\u5e8f\u7b97\u6cd5\uff08 list.sort() \u548c sorted() \uff09\u4f7f\u7528\u7684\u662f Timsort \uff0c\u4e00\u79cd\u7ed3\u5408\u4e86\u5f52\u5e76\u6392\u5e8f\u548c\u63d2\u5165\u6392\u5e8f\u7684\u6df7\u5408\u7b97\u6cd5\u3002\u5b83\u7684\u5e73\u5747\u548c\u6700\u574f\u60c5\u51b5\u4e0b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f O(n log n)\uff0c\u5728\u5904\u7406\u51e0\u4e4e\u6709\u5e8f\u7684\u6570\u636e\u65f6\u6027\u80fd\u975e\u5e38\u4f18\u79c0\u3002 2.1 \u6392\u5e8f\u7b97\u6cd5\u4f8b\u9898\u8bb2\u89e3 2.1.1 LC 215\uff1a\u627e\u51fa\u6570\u7ec4\u4e2d\u7684\u7b2c K \u5927\u5143\u7d20 \u9898\u76ee\u63cf\u8ff0\uff1a \u7ed9\u5b9a\u4e00\u4e2a\u672a\u6392\u5e8f\u7684\u6570\u7ec4\uff0c\u627e\u51fa\u5176\u4e2d\u7b2c K \u5927\u7684\u5143\u7d20\u3002 \u89e3\u9898\u601d\u8def\uff1a \u53ef\u4ee5\u5148\u5bf9\u6570\u7ec4\u8fdb\u884c\u964d\u5e8f\u6392\u5e8f\uff0c\u7136\u540e\u76f4\u63a5\u8fd4\u56de\u6392\u597d\u5e8f\u540e\u7684\u6570\u7ec4\u4e2d\u7684\u7b2c K \u4e2a\u5143\u7d20\u3002 \u4ee3\u7801\u5b9e\u73b0\uff1a class Solution: def findKthLargest(self, nums: List[int], k: int) -> int: # \u5bf9\u6570\u7ec4\u8fdb\u884c\u964d\u5e8f\u6392\u5e8f nums.sort(reverse=True) # \u8fd4\u56de\u7b2c K \u4e2a\u5143\u7d20 return nums[k - 1] \u8bf4\u660e \uff1a \u8fd9\u91cc\u6211\u4eec\u901a\u8fc7\u4f7f\u7528 sort() \u65b9\u6cd5\u7684 reverse=True \u53c2\u6570\uff0c\u5c06\u6570\u7ec4 nums \u6309\u7167\u964d\u5e8f\u6392\u5e8f\u3002 \u7136\u540e\u76f4\u63a5\u8fd4\u56de\u6392\u5e8f\u540e\u7684\u6570\u7ec4\u4e2d\u7684\u7b2c k-1 \u4e2a\u5143\u7d20\uff0c\u5373\u4e3a\u7b2c K \u5927\u7684\u5143\u7d20\u3002 2.2 \u6392\u5e8f\u7b97\u6cd5\u4e3e\u4e00\u53cd\u4e09 2.2.1 LC 56\uff1a\u5408\u5e76\u533a\u95f4 \u9898\u76ee\u63cf\u8ff0\uff1a \u7ed9\u5b9a\u82e5\u5e72\u4e2a\u95ed\u5408\u533a\u95f4 [x1, y1], [x2, y2], ... \uff0c\u8bf7\u5c06\u6240\u6709\u91cd\u53e0\u7684\u533a\u95f4\u5408\u5e76\u3002\u4f8b\u5982\uff0c\u533a\u95f4 [1, 3] \u548c [2, 6] \u53ef\u4ee5\u5408\u5e76\u4e3a [1, 6] \u3002 \u89e3\u9898\u601d\u8def\uff1a \u6392\u5e8f \uff1a\u9996\u5148\uff0c\u6309\u7167\u533a\u95f4\u7684\u8d77\u59cb\u503c\u5bf9\u6240\u6709\u533a\u95f4\u8fdb\u884c\u6392\u5e8f\u3002 \u5408\u5e76 \uff1a\u904d\u5386\u6bcf\u4e2a\u533a\u95f4\uff0c\u82e5\u5f53\u524d\u533a\u95f4\u4e0e\u524d\u4e00\u4e2a\u533a\u95f4\u91cd\u53e0\uff0c\u5219\u5408\u5e76\u5b83\u4eec\uff1b\u5426\u5219\u5c06\u5f53\u524d\u533a\u95f4\u76f4\u63a5\u52a0\u5165\u7ed3\u679c\u5217\u8868\u3002 \u4ee3\u7801\u5b9e\u73b0\uff1a class Solution: def merge(self, intervals: List[List[int]]) -> List[List[int]]: if not intervals: return [] # \u6309\u533a\u95f4\u8d77\u59cb\u4f4d\u7f6e\u6392\u5e8f intervals.sort(key=lambda x: x[0]) merged = [] for interval in intervals: if not merged or merged[-1][1] < interval[0]: # \u5982\u679c\u7ed3\u679c\u4e3a\u7a7a\u6216\u5f53\u524d\u533a\u95f4\u4e0e\u4e0a\u4e00\u4e2a\u533a\u95f4\u4e0d\u91cd\u53e0\uff0c\u76f4\u63a5\u52a0\u5165\u7ed3\u679c merged.append(interval) else: # \u5982\u679c\u91cd\u53e0\uff0c\u66f4\u65b0\u6700\u540e\u4e00\u4e2a\u533a\u95f4\u7684\u7ed3\u675f\u4f4d\u7f6e merged[-1][1] = max(merged[-1][1], interval[1]) return merged \u8bb2\u89e3 \uff1a \u6392\u5e8f \uff1a\u4f7f\u7528 sort() \u65b9\u6cd5\u548c key=lambda x: x[0] \u6309\u7167\u6bcf\u4e2a\u533a\u95f4\u7684\u8d77\u59cb\u503c\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\u3002 \u904d\u5386\u533a\u95f4 \u5982\u679c merged \u4e3a\u7a7a\uff0c\u6216\u8005\u5f53\u524d\u533a\u95f4\u7684\u8d77\u59cb\u503c\u5927\u4e8e merged \u4e2d\u6700\u540e\u4e00\u4e2a\u533a\u95f4\u7684\u7ed3\u675f\u503c\uff0c\u8bf4\u660e\u6ca1\u6709\u91cd\u53e0\uff0c\u76f4\u63a5\u5c06\u5f53\u524d\u533a\u95f4\u52a0\u5165 merged \u3002 \u5982\u679c\u6709\u91cd\u53e0\uff0c\u66f4\u65b0 merged \u4e2d\u6700\u540e\u4e00\u4e2a\u533a\u95f4\u7684\u7ed3\u675f\u503c\u4e3a\u4e24\u8005\u7ed3\u675f\u503c\u7684\u6700\u5927\u503c\u3002 2.2.2 LC 252\uff1a\u4f1a\u8bae\u5ba4 \u9898\u76ee\u63cf\u8ff0\uff1a \u7ed9\u5b9a\u4e00\u7cfb\u5217\u4f1a\u8bae\u65f6\u95f4\u533a\u95f4\uff0c\u5224\u65ad\u662f\u5426\u80fd\u8ba9\u6240\u6709\u4f1a\u8bae\u65e0\u51b2\u7a81\u5730\u5b89\u6392\u5728\u4e00\u95f4\u4f1a\u8bae\u5ba4\u4e2d\u3002 \u89e3\u9898\u601d\u8def\uff1a \u5c06\u6240\u6709\u7684\u4f1a\u8bae\u6309\u7167\u5f00\u59cb\u65f6\u95f4\u6392\u5e8f\uff0c\u7136\u540e\u904d\u5386\u6bcf\u4e2a\u4f1a\u8bae\uff0c\u68c0\u67e5\u662f\u5426\u6709\u91cd\u53e0\u533a\u95f4\u3002 \u4ee3\u7801\u5b9e\u73b0\uff1a class Solution: def canAttendMeetings(self, intervals: List[List[int]]) -> bool: # \u6309\u4f1a\u8bae\u7684\u5f00\u59cb\u65f6\u95f4\u8fdb\u884c\u6392\u5e8f intervals.sort(key=lambda x: x[0]) # \u904d\u5386\u4f1a\u8bae\uff0c\u68c0\u67e5\u662f\u5426\u5b58\u5728\u91cd\u53e0 for i in range(1, len(intervals)): if intervals[i][0] < intervals[i - 1][1]: return False # \u5b58\u5728\u91cd\u53e0\uff0c\u65e0\u6cd5\u53c2\u52a0\u6240\u6709\u4f1a\u8bae return True # \u65e0\u91cd\u53e0\uff0c\u53ef\u4ee5\u53c2\u52a0\u6240\u6709\u4f1a\u8bae \u8bb2\u89e3\uff1a \u6392\u5e8f\u4f1a\u8bae \uff1a\u4f7f\u7528 sort() \u65b9\u6cd5\u6309\u4f1a\u8bae\u7684\u5f00\u59cb\u65f6\u95f4\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\uff0c\u65b9\u4fbf\u540e\u7eed\u68c0\u67e5\u3002 \u68c0\u67e5\u91cd\u53e0 \u4ece\u7b2c\u4e8c\u4e2a\u4f1a\u8bae\u5f00\u59cb\uff0c\u6bd4\u8f83\u5f53\u524d\u4f1a\u8bae\u7684\u5f00\u59cb\u65f6\u95f4\u548c\u524d\u4e00\u4e2a\u4f1a\u8bae\u7684\u7ed3\u675f\u65f6\u95f4\u3002 \u5982\u679c\u5f53\u524d\u4f1a\u8bae\u7684\u5f00\u59cb\u65f6\u95f4\u5c0f\u4e8e\u524d\u4e00\u4e2a\u4f1a\u8bae\u7684\u7ed3\u675f\u65f6\u95f4\uff0c\u8bf4\u660e\u4f1a\u8bae\u65f6\u95f4\u6709\u91cd\u53e0\uff0c\u65e0\u6cd5\u53c2\u52a0\u6240\u6709\u4f1a\u8bae\u3002 \u5982\u679c\u6ca1\u6709\u53d1\u73b0\u91cd\u53e0\uff0c\u8fd4\u56de True \u3002 2.2.3 LC 347\uff1a\u524d K \u4e2a\u9ad8\u9891\u5143\u7d20 \u9898\u76ee\u63cf\u8ff0\uff1a \u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u7684\u6574\u6570\u6570\u7ec4\uff0c\u8fd4\u56de\u5176\u4e2d\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684\u524d K \u4e2a\u5143\u7d20\u3002 \u89e3\u9898\u601d\u8def\uff1a 1 . \u7edf\u8ba1\u9891\u7387 \uff1a\u4f7f\u7528\u54c8\u5e0c\u8868\uff08\u5b57\u5178\uff09\u624b\u52a8\u7edf\u8ba1\u6bcf\u4e2a\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570\u3002 2. \u81ea\u5b9a\u4e49\u6392\u5e8f \uff1a\u5c06\u54c8\u5e0c\u8868\u4e2d\u7684\u5143\u7d20\u6839\u636e\u5176\u51fa\u73b0\u9891\u7387\u8fdb\u884c\u964d\u5e8f\u6392\u5e8f\u3002 3. \u63d0\u53d6\u7ed3\u679c \uff1a\u5728\u6392\u5e8f\u540e\u7684\u5217\u8868\u4e2d\uff0c\u9009\u53d6\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684\u524d K \u4e2a\u5143\u7d20\u5e76\u8fd4\u56de\u3002 \u4ee3\u7801\u5b9e\u73b0\uff1a class Solution: def topKFrequent(self, nums: List[int], k: int) -> List[int]: # \u7edf\u8ba1\u6bcf\u4e2a\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570 count = {} for num in nums: if num in count: count[num] += 1 else: count[num] = 1 # \u5bf9\u5b57\u5178\u7684 items \u8fdb\u884c\u6392\u5e8f\uff0c\u6309\u7167\u51fa\u73b0\u9891\u7387\u4ece\u9ad8\u5230\u4f4e\u6392\u5e8f sorted_items = sorted(count.items(), key=lambda x: x[1], reverse=True) # 3 \u9009\u53d6\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684\u524d K \u4e2a\u5143\u7d20 result = [item[0] for item in sorted_items[:k]] return result \u8bb2\u89e3\uff1a \u7edf\u8ba1\u9891\u7387 \uff1a\u904d\u5386\u6570\u7ec4\u65f6\uff0c\u4f7f\u7528\u5b57\u5178 count \u6765\u8bb0\u5f55\u6bcf\u4e2a\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570\u3002\u6bcf\u5f53\u5143\u7d20\u51fa\u73b0\u65f6\uff0c\u5982\u679c\u8be5\u5143\u7d20\u5df2\u7ecf\u5b58\u5728\u4e8e\u5b57\u5178\u4e2d\uff0c\u5219\u5c06\u5bf9\u5e94\u7684\u503c\u52a01\uff1b\u5982\u679c\u8be5\u5143\u7d20\u4e0d\u5b58\u5728\uff0c\u5219\u5c06\u5176\u521d\u59cb\u503c\u8bbe\u4e3a1\u3002 \u6392\u5e8f \uff1a\u901a\u8fc7 sorted() \u51fd\u6570\u5bf9\u5b57\u5178\u4e2d\u7684\u952e\u503c\u5bf9\uff08\u5373 (\u5143\u7d20, \u51fa\u73b0\u6b21\u6570) \u7684\u5143\u7ec4\uff09\u8fdb\u884c\u6392\u5e8f\uff0c key=lambda x: x[1] \u8868\u793a\u6309\u7167\u51fa\u73b0\u6b21\u6570\uff08\u9891\u7387\uff09\u8fdb\u884c\u6392\u5e8f\uff0c reverse=True \u8868\u793a\u4ece\u9ad8\u5230\u4f4e\u6392\u5e8f\u3002 \u63d0\u53d6\u5143\u7d20 \uff1a\u5728\u6392\u5e8f\u540e\u7684\u7ed3\u679c\u4e2d\uff0c\u63d0\u53d6\u524d K \u4e2a\u9891\u7387\u6700\u9ad8\u7684\u5143\u7d20\u3002\u8fd9\u4e00\u6b65\u901a\u8fc7\u5217\u8868\u63a8\u5bfc\u5f0f\u6765\u5b9e\u73b0\uff0c\u53d6\u51fa\u6392\u5e8f\u7ed3\u679c\u4e2d\u7684\u524d K \u4e2a\u5143\u7d20\u7684\u952e\uff0c\u5e76\u5c06\u5176\u5b58\u5165\u7ed3\u679c\u5217\u8868 result \u3002 3. \u8d2a\u5fc3\u7b97\u6cd5 \u8d2a\u5fc3\u7b97\u6cd5\u662f\u4e00\u79cd\u89e3\u51b3\u95ee\u9898\u7684 \u7b56\u7565 \uff0c\u5176\u6838\u5fc3\u601d\u60f3\u662f\uff1a\u5728\u89e3\u51b3\u95ee\u9898\u7684\u6bcf\u4e00\u6b65\u4e2d\uff0c\u603b\u662f\u9009\u62e9\u5f53\u524d\u770b\u8d77\u6765 \u6700\u4f18\u7684\u9009\u62e9 \uff0c\u901a\u8fc7\u4e00\u7cfb\u5217\u8fd9\u6837\u7684\u5c40\u90e8\u6700\u4f18\u9009\u62e9\uff0c\u6700\u7ec8\u5e0c\u671b\u83b7\u5f97\u5168\u5c40\u6700\u4f18\u89e3\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c \u8d2a\u5fc3\u7b97\u6cd5\u5e76\u4e0d\u603b\u662f\u80fd\u5f97\u5230\u5168\u5c40\u6700\u4f18\u89e3 \u3002\u5b83\u53ea\u6709\u5728\u67d0\u4e9b\u7279\u5b9a\u95ee\u9898\u4e2d\u6709\u6548\uff0c\u7279\u522b\u662f\u5f53\u95ee\u9898\u6ee1\u8db3\u8d2a\u5fc3\u9009\u62e9\u6027\u8d28\u65f6\u3002 \u8d2a\u5fc3\u7b97\u6cd5\u7684\u7279\u70b9 \u5c40\u90e8\u6700\u4f18\u9009\u62e9 \uff1a \u8d2a\u5fc3\u7b97\u6cd5\u5728\u6bcf\u4e00\u6b65\u4e2d\u53ea\u505a\u51fa\u5f53\u524d\u770b\u8d77\u6765\u6700\u4f18\u7684\u9009\u62e9\uff0c\u800c \u4e0d\u5173\u5fc3\u4e4b\u540e\u53ef\u80fd\u53d1\u751f\u7684\u60c5\u51b5 \u3002\u5b83\u4e0d\u4f1a\u8003\u8651\u8fd9\u6b21\u9009\u62e9\u662f\u5426\u4f1a\u5f71\u54cd\u540e\u7eed\u51b3\u7b56\uff0c\u53ea\u770b\u5f53\u4e0b\u54ea\u4e2a\u9009\u9879\u662f\u6700\u6709\u5229\u7684\u3002\u4f8b\u5982\uff0c\u5728\u5206\u6570\u80cc\u5305\u95ee\u9898\u4e2d\uff0c\u8d2a\u5fc3\u7b56\u7565\u662f\u6bcf\u6b21\u4f18\u5148\u9009\u62e9\u5355\u4f4d\u91cd\u91cf\u4ef7\u503c\u6700\u9ad8\u7684\u7269\u54c1\uff0c\u56e0\u4e3a\u5b83\u5728\u5f53\u524d\u7684\u9009\u62e9\u4e2d\u5e26\u6765\u7684\u6536\u76ca\u6700\u5927\u3002 \u4f18\u70b9 \uff1a\u901a\u8fc7\u6bcf\u4e00\u6b65\u7684\u6700\u4f18\u9009\u62e9\uff0c\u53ef\u4ee5\u5feb\u901f\u627e\u5230\u4e00\u4e2a\u53ef\u884c\u89e3\u3002\u8d2a\u5fc3\u7b97\u6cd5\u7684\u89c4\u5219\u7b80\u5355\u3001\u76f4\u89c2\uff0c\u6613\u4e8e\u5b9e\u73b0\uff0c\u901a\u5e38\u53ef\u4ee5\u901a\u8fc7\u4e00\u6b21\u626b\u63cf\u6216\u6392\u5e8f\u89e3\u51b3\u95ee\u9898\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u4f4e\u3002\u4f8b\u5982\u5728\u5206\u6570\u80cc\u5305\u95ee\u9898\u4e2d\uff0c\u8d2a\u5fc3\u7b97\u6cd5\u53ea\u9700\u8981\u6309\u5355\u4f4d\u4ef7\u503c\u6392\u5e8f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a (O(n log n)) \u3002 \u7f3a\u70b9 \uff1a\u5c40\u90e8\u6700\u4f18\u89e3\u4e0d\u4e00\u5b9a\u80fd\u4fdd\u8bc1\u5168\u5c40\u6700\u4f18\uff0c\u56e0\u4e3a\u5728\u4e00\u4e9b\u95ee\u9898\u4e2d\uff0c\u6700\u4f73\u7684\u6574\u4f53\u65b9\u6848\u4f9d\u8d56\u4e8e\u591a\u6b65\u51b3\u7b56\u7684\u7efc\u5408\u6548\u679c\uff0c\u800c\u4e0d\u662f\u5355\u7eaf\u7684\u6bcf\u4e00\u6b65\u6700\u4f18\u3002\u8d2a\u5fc3\u7b97\u6cd5\u65e0\u6cd5\u901a\u8fc7\u5c40\u90e8\u6700\u4f18\u89e3\u627e\u5230\u5168\u5c40\u6700\u4f18\u89e3\uff0c\u5c24\u5176\u5728\u590d\u6742\u95ee\u9898\uff08\u5982 0-1 \u80cc\u5305\u95ee\u9898\uff09\u4e2d\uff0c\u5b83\u53ef\u80fd\u4f1a\u9677\u5165\u6b21\u4f18\u89e3\u3002 \u4e0d\u53ef\u56de\u6eaf \uff1a \u8d2a\u5fc3\u7b97\u6cd5\u7684\u4e00\u4e2a\u91cd\u8981\u7279\u70b9\u662f \u51b3\u7b56\u4e0d\u53ef\u56de\u5934\u4fee\u6539 \u3002\u4e00\u65e6\u505a\u51fa\u67d0\u4e2a\u9009\u62e9\uff0c\u7b97\u6cd5\u5c31\u4e0d\u4f1a\u518d\u8003\u8651\u6539\u53d8\u5b83\uff0c\u5373\u4f7f\u540e\u7eed\u53d1\u73b0\u8fd9\u4e2a\u9009\u62e9\u53ef\u80fd\u4e0d\u662f\u6700\u4f18\u7684\u3002\u56e0\u4e3a\u8d2a\u5fc3\u7b97\u6cd5\u4f9d\u8d56\u7684\u662f\u5f53\u524d\u6700\u4f18\u9009\u62e9\u7684\u7b56\u7565\uff0c\u6240\u4ee5\u5b83\u4e0d\u4f1a\u4e3a\u672a\u6765\u7684\u9009\u62e9\u7559\u4e0b\u56de\u65cb\u4f59\u5730\u3002 \u4f18\u70b9 \uff1a\u7531\u4e8e\u4e0d\u9700\u8981\u56de\u6eaf\uff0c\u8d2a\u5fc3\u7b97\u6cd5\u6267\u884c\u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u901a\u5e38\u6bd4\u9700\u8981\u56de\u6eaf\u7684\u7b97\u6cd5\uff08\u5982\u52a8\u6001\u89c4\u5212\u3001\u56de\u6eaf\u6cd5\u7b49\uff09\u66f4\u4f4e\u3002\u8d2a\u5fc3\u7b97\u6cd5\u7684\u9ad8\u6548\u6027\u4f53\u73b0\u5728\u5176\u5feb\u901f\u3001\u76f4\u63a5\u7684\u89e3\u51b3\u601d\u8def\u4e0a\uff0c\u9002\u7528\u4e8e\u5904\u7406\u5927\u89c4\u6a21\u95ee\u9898\u65f6\u7684\u9ad8\u6548\u6c42\u89e3\u3002 \u7f3a\u70b9 \uff1a\u7531\u4e8e\u8d2a\u5fc3\u7b97\u6cd5\u4e0d\u5177\u5907\u56de\u6eaf\u80fd\u529b\uff0c\u5b83\u53ea\u80fd\u5728\u7b26\u5408\u8d2a\u5fc3\u9009\u62e9\u6027\u8d28\u7684\u95ee\u9898\u4e2d\u6709\u6548\u3002\u5982\u679c\u95ee\u9898\u4e0d\u6ee1\u8db3\u8fd9\u79cd\u6027\u8d28\uff0c\u7b97\u6cd5\u53ef\u80fd\u4f1a\u5728\u540e\u7eed\u6b65\u9aa4\u4e2d\u9677\u5165\u6b21\u4f18\u89e3\u6216\u6b7b\u80e1\u540c\uff0c\u65e0\u6cd5\u8fbe\u5230\u5168\u5c40\u6700\u4f18\u89e3\u3002 \u5177\u4f53\u6b65\u9aa4 \u8d2a\u5fc3\u7b97\u6cd5\u901a\u5e38\u9075\u5faa\u4ee5\u4e0b\u57fa\u672c\u6b65\u9aa4\uff1a \u660e\u786e\u8d2a\u5fc3\u7b56\u7565 \uff1a\u786e\u5b9a\u6bcf\u4e00\u6b65\u7684\u5c40\u90e8\u6700\u4f18\u89e3\u9009\u62e9\u7b56\u7565\u3002 \u6392\u5e8f \uff1a\u5982\u679c\u95ee\u9898\u6d89\u53ca\u591a\u4e2a\u9009\u62e9\uff0c\u901a\u5e38\u9700\u8981\u5bf9\u5176\u8fdb\u884c\u6392\u5e8f\uff08\u5982\u6309\u7ed3\u675f\u65f6\u95f4\u3001\u5355\u4f4d\u4ef7\u503c\u7b49\uff09\u3002 \u9010\u6b65\u9009\u62e9 \uff1a\u6839\u636e\u8d2a\u5fc3\u7b56\u7565\uff0c\u6309\u7167\u6392\u5e8f\u7ed3\u679c\u9010\u6b65\u9009\u62e9\u6700\u4f18\u9879\u3002 \u68c0\u67e5\u53ef\u884c\u6027 \uff1a\u6bcf\u6b21\u9009\u62e9\u65f6\uff0c\u786e\u4fdd\u5f53\u524d\u9009\u62e9\u6ee1\u8db3\u95ee\u9898\u7684\u7ea6\u675f\u6761\u4ef6\uff08\u5982\u4e0d\u51b2\u7a81\u3001\u4e0d\u8d85\u51fa\u5bb9\u91cf\u7b49\uff09\u3002 \u6784\u9020\u89e3 \uff1a\u5c06\u6240\u6709\u7684\u9009\u62e9\u7ec4\u5408\u8d77\u6765\uff0c\u5f62\u6210\u95ee\u9898\u7684\u6700\u7ec8\u89e3\u3002 \u8d2a\u5fc3\u7b97\u6cd5\u7684\u9002\u7528\u6761\u4ef6 \u8981\u5224\u65ad\u4e00\u4e2a\u95ee\u9898\u662f\u5426\u9002\u5408\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u53ef\u4ee5\u89c2\u5bdf\u4ee5\u4e0b\u7279\u5f81\uff1a \u8d2a\u5fc3\u9009\u62e9\u6027\u8d28 \uff1a\u5728\u6bcf\u4e00\u6b65\u4e2d\uff0c\u9009\u62e9\u7684\u5c40\u90e8\u6700\u4f18\u89e3\u80fd\u591f\u4fdd\u8bc1\u4e0d\u4f1a\u5f71\u54cd\u540e\u7eed\u9009\u62e9\u7684\u6700\u4f18\u6027\uff0c\u5373\u8d2a\u5fc3\u9009\u62e9\u5728\u6bcf\u4e00\u6b65\u90fd\u80fd\u4fdd\u6301\u5168\u5c40\u6700\u4f18\u3002 \u65e0\u540e\u6548\u6027 \uff1a\u5f53\u524d\u7684\u9009\u62e9\u4e0d\u4f1a\u5f71\u54cd\u672a\u6765\u7684\u9009\u62e9\u3002\u6bcf\u4e2a\u9009\u62e9\u7684\u7ed3\u679c\u53ea\u4f9d\u8d56\u5f53\u524d\u72b6\u6001\uff0c\u800c\u4e0d\u4f1a\u4f9d\u8d56\u4e4b\u524d\u7684\u51b3\u7b56\u3002\u5373\u4e00\u65e6\u505a\u51fa\u4e86\u67d0\u4e2a\u9009\u62e9\uff0c\u8be5\u9009\u62e9\u5c31\u4e0d\u53ef\u6539\u53d8\u3002 \u5982\u679c\u95ee\u9898\u6ee1\u8db3\u4ee5\u4e0a\u4e24\u70b9\uff0c\u90a3\u4e48\u901a\u5e38\u53ef\u4ee5\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\u6c42\u89e3\u3002 \u8d2a\u5fc3\u7b97\u6cd5 vs \u52a8\u6001\u89c4\u5212\u7684\u5224\u5b9a\u6807\u51c6 \u5728\u533a\u5206\u4e00\u4e2a\u95ee\u9898\u662f\u5426\u9002\u5408\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\u6216\u52a8\u6001\u89c4\u5212\u65f6\uff0c \u6700\u4f18\u5b50\u7ed3\u6784 \u548c \u5b50\u95ee\u9898\u91cd\u53e0 \u662f\u5173\u952e\u7684\u5224\u5b9a\u6807\u51c6\uff1a \u8d2a\u5fc3\u9009\u62e9\u7684\u9002\u7528\u6761\u4ef6 \uff1a \u5c40\u90e8\u6700\u4f18\u9009\u62e9\u6027\u8d28 \uff1a\u8d2a\u5fc3\u7b97\u6cd5\u6bcf\u4e00\u6b65\u505a\u51fa\u7684\u9009\u62e9\u90fd\u662f\u5c40\u90e8\u6700\u4f18\u89e3\uff0c\u4e14\u8fd9\u4e9b\u5c40\u90e8\u6700\u4f18\u89e3\u6784\u6210\u4e86\u5168\u5c40\u6700\u4f18\u89e3\u3002\u8fd9\u79cd\u6027\u8d28\u4e00\u822c\u5b58\u5728\u4e8e\u53ef\u4ee5\u901a\u8fc7\u9010\u6b65\u9009\u62e9\u89e3\u51b3\u7684 \u7b80\u5355\u4f18\u5316\u95ee\u9898 \u3002 \u65e0\u540e\u6548\u6027 \uff1a\u672a\u6765\u7684\u51b3\u7b56\u4e0d\u4f9d\u8d56\u4e8e\u4e4b\u524d\u7684\u9009\u62e9\uff0c\u56e0\u6b64\u4e00\u65e6\u505a\u51fa\u4e86\u9009\u62e9\uff0c\u4e0d\u9700\u8981\u56de\u6eaf\u68c0\u67e5\u3002\u4f8b\u5982\uff0c \u5206\u6570\u80cc\u5305\u95ee\u9898 \uff0c\u6bcf\u6b21\u9009\u62e9\u5355\u4f4d\u4ef7\u503c\u6700\u9ad8\u7684\u7269\u54c1\u4e0d\u4f1a\u5f71\u54cd\u4e4b\u540e\u7684\u9009\u62e9\u3002 \u52a8\u6001\u89c4\u5212\u7684\u9002\u7528\u6761\u4ef6 \uff1a \u6700\u4f18\u5b50\u7ed3\u6784 \uff1a\u5168\u5c40\u6700\u4f18\u89e3\u4f9d\u8d56\u4e8e\u5b50\u95ee\u9898\u7684\u6700\u4f18\u89e3\u3002\u5982\u679c\u6bcf\u4e2a\u5b50\u95ee\u9898\u7684\u89e3\u90fd\u5f71\u54cd\u5230\u5168\u5c40\u6700\u4f18\u89e3\uff0c\u90a3\u4e48\u8fd9\u79cd\u95ee\u9898\u901a\u5e38\u9700\u8981\u4f7f\u7528\u52a8\u6001\u89c4\u5212\u6765\u89e3\u51b3\u3002\u80cc\u5305\u95ee\u9898\u4e2d\u7684 0-1 \u80cc\u5305\u95ee\u9898 \u5c31\u5c5e\u4e8e\u6b64\u7c7b\u95ee\u9898\uff0c\u5f53\u524d\u7269\u54c1\u662f\u5426\u9009\u5165\u80cc\u5305\u4f1a\u5f71\u54cd\u672a\u6765\u7684\u9009\u62e9\uff0c\u56e0\u6b64\u65e0\u6cd5\u7b80\u5355\u901a\u8fc7\u8d2a\u5fc3\u7b56\u7565\u5f97\u5230\u6700\u4f18\u89e3\u3002 \u5b50\u95ee\u9898\u91cd\u53e0 \uff1a\u5982\u679c\u95ee\u9898\u53ef\u4ee5\u88ab\u62c6\u5206\u4e3a\u591a\u4e2a\u5b50\u95ee\u9898\uff0c\u4e14\u8fd9\u4e9b\u5b50\u95ee\u9898\u4e4b\u95f4\u5b58\u5728\u91cd\u53e0\uff08\u5373\u67d0\u4e2a\u5b50\u95ee\u9898\u7684\u89e3\u4f1a\u591a\u6b21\u88ab\u4f7f\u7528\uff09\uff0c\u90a3\u4e48\u52a8\u6001\u89c4\u5212\u662f\u66f4\u6709\u6548\u7684\u9009\u62e9\u3002 \u603b\u7ed3\u6765\u770b\uff0c\u5982\u679c\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u5355\u7eaf\u7684 \u5c40\u90e8\u6700\u4f18\u9009\u62e9 \u89e3\u51b3\uff0c\u5e76\u4e14\u672a\u6765\u7684\u9009\u62e9\u4e0d\u4f9d\u8d56\u4e8e\u8fc7\u53bb\u7684\u9009\u62e9\uff0c\u901a\u5e38\u53ef\u4ee5\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\uff1b\u5426\u5219\u9700\u8981\u901a\u8fc7\u52a8\u6001\u89c4\u5212\u6765\u89e3\u51b3\u95ee\u9898\u3002 \u7b80\u5355\u4f8b\u5b50 1. \u5206\u6570\u80cc\u5305\u95ee\u9898 \uff08\u8d2a\u5fc3\u7b97\u6cd5\uff09 \u95ee\u9898\u63cf\u8ff0 \uff1a\u4f60\u6709\u4e00\u4e2a\u5bb9\u91cf\u4e3a 50 \u7684\u80cc\u5305\uff0c\u548c\u4e00\u5806\u7269\u54c1\uff0c\u6bcf\u4ef6\u7269\u54c1\u90fd\u6709\u91cd\u91cf\u548c\u4ef7\u503c\u3002\u4f60\u53ef\u4ee5\u5c06\u6bcf\u4ef6\u7269\u54c1\u6309\u4efb\u610f\u6bd4\u4f8b\u88c5\u5165\u80cc\u5305\uff08\u4f8b\u5982\u53ef\u4ee5\u88c5\u5165\u7269\u54c1\u7684\u4e00\u90e8\u5206\uff09\uff0c\u76ee\u6807\u662f\u8ba9\u80cc\u5305\u91cc\u7684\u7269\u54c1\u603b\u4ef7\u503c\u6700\u5927\u5316\u3002 \u8d2a\u5fc3\u7b56\u7565 \uff1a\u4f18\u5148\u9009\u62e9\u5355\u4f4d\u91cd\u91cf\u4ef7\u503c\u6700\u9ad8\u7684\u7269\u54c1\uff0c\u5c3d\u53ef\u80fd\u591a\u5730\u88c5\u5165\u80cc\u5305\u3002 \u5206\u6790\u6b65\u9aa4\uff1a \u660e\u786e\u8d2a\u5fc3\u7b56\u7565 \uff1a\u6bcf\u6b21\u9009\u62e9\u5355\u4f4d\u91cd\u91cf\u4ef7\u503c\u6700\u9ad8\u7684\u7269\u54c1\uff0c\u5c3d\u53ef\u80fd\u591a\u88c5\u5165\u80cc\u5305\u3002 \u6392\u5e8f \uff1a\u5c06\u6240\u6709\u7269\u54c1\u6309\u7167\u5355\u4f4d\u91cd\u91cf\u7684\u4ef7\u503c\u4ece\u9ad8\u5230\u4f4e\u6392\u5e8f\u3002 \u9010\u6b65\u9009\u62e9 \uff1a\u6309\u7167\u6392\u5e8f\u540e\u7684\u987a\u5e8f\uff0c\u4f18\u5148\u9009\u62e9\u5355\u4f4d\u4ef7\u503c\u6700\u9ad8\u7684\u7269\u54c1\uff0c\u76f4\u5230\u80cc\u5305\u88c5\u6ee1\u3002 \u68c0\u67e5\u53ef\u884c\u6027 \uff1a\u6bcf\u6b21\u9009\u62e9\u7269\u54c1\u65f6\uff0c\u68c0\u67e5\u80cc\u5305\u5269\u4f59\u5bb9\u91cf\u662f\u5426\u8db3\u591f\u3002\u5982\u679c\u5bb9\u91cf\u4e0d\u8db3\uff0c\u5c06\u7269\u54c1\u7684\u4e00\u90e8\u5206\u88c5\u5165\u80cc\u5305\u3002 \u6784\u9020\u89e3 \uff1a\u5c06\u9009\u5165\u80cc\u5305\u7684\u7269\u54c1\u7ec4\u5408\u8d77\u6765\uff0c\u8ba1\u7b97\u603b\u4ef7\u503c\uff0c\u5f97\u5230\u95ee\u9898\u7684\u89e3\u3002 2. 0-1 \u80cc\u5305\u95ee\u9898 \uff08\u52a8\u6001\u89c4\u5212\uff09 \u95ee\u9898\u63cf\u8ff0 \uff1a\u4f60\u6709\u4e00\u4e2a\u5bb9\u91cf\u4e3a 50 \u7684\u80cc\u5305\u548c\u4e00\u5806\u7269\u54c1\uff0c\u6bcf\u4ef6\u7269\u54c1\u90fd\u6709\u4e00\u4e2a\u786e\u5b9a\u7684\u91cd\u91cf\u548c\u4ef7\u503c\u3002\u4f60\u53ea\u80fd\u9009\u62e9 \u5c06\u67d0\u4ef6\u7269\u54c1\u5b8c\u5168\u653e\u5165\u80cc\u5305 \u6216\u8005 \u4e0d\u653e\u5165 \uff0c\u4e0d\u80fd\u53ea\u88c5\u4e00\u90e8\u5206\u3002\u76ee\u6807\u662f\u9009\u62e9\u4e00\u4e9b\u7269\u54c1\u653e\u5165\u80cc\u5305\uff0c\u4f7f\u5f97\u80cc\u5305\u4e2d\u7684\u7269\u54c1\u603b\u4ef7\u503c\u6700\u5927\u5316\u3002 \u52a8\u6001\u89c4\u5212\u601d\u8def \uff1a\u5bf9\u4e8e\u6bcf\u4ef6\u7269\u54c1\uff0c\u4f60\u9700\u8981\u51b3\u5b9a\u662f\u5426\u653e\u5165\u80cc\u5305\u3002\u6bcf\u6b21\u7684\u9009\u62e9\u90fd\u4f9d\u8d56\u4e8e\u80cc\u5305\u5f53\u524d\u7684\u5bb9\u91cf\u4ee5\u53ca\u4e4b\u524d\u7684\u9009\u62e9\u3002\u56e0\u4e3a\u9009\u62e9\u4e00\u6b21\u7269\u54c1\u4f1a\u5f71\u54cd\u5230\u540e\u7eed\u80fd\u88c5\u591a\u5c11\u4e1c\u897f\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u800c\u9700\u8981\u901a\u8fc7\u52a8\u6001\u89c4\u5212\u6765\u8003\u8651\u6240\u6709\u53ef\u80fd\u7684\u7ec4\u5408\u3002 \u7528\u7b80\u5355\u7684\u8bdd\u6765\u7406\u89e3\u52a8\u6001\u89c4\u5212\u7684\u601d\u8def\uff1a \u72b6\u6001 \uff1a\u6211\u4eec\u7528 dp[i][w] \u8868\u793a \u524d i \u4e2a\u7269\u54c1 \u5728 \u5bb9\u91cf\u4e3a w \u7684\u80cc\u5305 \u4e2d\u6240\u80fd\u88c5\u7684\u6700\u5927\u603b\u4ef7\u503c\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c dp[i][w] \u662f\u4e00\u4e2a\u4e2d\u95f4\u7ed3\u679c\uff0c\u544a\u8bc9\u6211\u4eec\u5982\u679c\u53ea\u8003\u8651\u524d i \u4e2a\u7269\u54c1\uff0c\u5e76\u4e14\u80cc\u5305\u5bb9\u91cf\u4e3a w\uff0c\u6211\u4eec\u80fd\u88c5\u7684\u6700\u9ad8\u4ef7\u503c\u662f\u591a\u5c11\u3002 \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b \uff1a\u8fd9\u4e2a\u5c31\u662f\u52a8\u6001\u89c4\u5212\u4e2d\u7684\u201c\u89c4\u5219\u201d\uff0c\u7528\u6765\u6307\u5bfc\u6211\u4eec\u5982\u4f55\u6839\u636e\u524d\u9762\u7684\u8ba1\u7b97\u7ed3\u679c\u63a8\u5bfc\u51fa\u5f53\u524d\u7684\u6700\u4f18\u89e3\u3002 \u5bf9\u4e8e\u6bcf\u4ef6\u7269\u54c1 i \uff0c\u4f60\u6709\u4e24\u79cd\u9009\u62e9\uff1a \u4e0d\u9009\u8fd9\u4ef6\u7269\u54c1 \uff1a\u90a3\u4e48\u6700\u5927\u4ef7\u503c\u5c31\u662f dp[i-1][w] \uff0c\u5373\u80cc\u5305\u5bb9\u91cf\u4fdd\u6301\u4e0d\u53d8\uff0c\u524d\u9762 i-1 \u4e2a\u7269\u54c1\u7684\u6700\u4f18\u89e3\u3002 \u9009\u8fd9\u4ef6\u7269\u54c1 \uff1a\u5982\u679c\u9009\u62e9\u7269\u54c1 i \uff0c\u5219\u5f53\u524d\u7684\u80cc\u5305\u5bb9\u91cf\u51cf\u5c11 weight[i] \uff0c\u800c\u6211\u4eec\u8fd8\u83b7\u5f97\u4e86 value[i] \u8fd9\u4e2a\u7269\u54c1\u7684\u4ef7\u503c\u3002\u6240\u4ee5\u6700\u5927\u4ef7\u503c\u53d8\u6210\u4e86 dp[i-1][w - weight[i]] + value[i] \u3002 \u4e24\u8005\u53d6\u8f83\u5927\u503c\uff1a dp[i][w] = max(dp[i-1][w], dp[i-1][w - weight[i]] + value[i]) \u7406\u89e3\u8fd9\u6bb5\u516c\u5f0f \uff1a \u5982\u679c\u4f60\u4e0d\u9009\u7269\u54c1 i \uff0c\u90a3\u4e48\u4f60\u53ea\u80fd\u4f9d\u8d56\u524d\u9762 i-1 \u4e2a\u7269\u54c1\u5728\u5bb9\u91cf\u4e3a w \u65f6\u7684\u6700\u4f18\u89e3\uff0c\u5373 dp[i-1][w] \u3002 \u5982\u679c\u4f60\u9009\u4e86\u7269\u54c1 i \uff0c\u90a3\u4f60\u9700\u8981\u817e\u51fa\u8db3\u591f\u7684\u7a7a\u95f4\u6765\u653e\u5b83\uff0c\u4e5f\u5c31\u662f\u8bf4\u80cc\u5305\u5bb9\u91cf\u4f1a\u51cf\u5c11 weight[i] \uff0c\u7136\u540e\u4f60\u80fd\u83b7\u5f97\u8fd9\u4ef6\u7269\u54c1\u7684\u4ef7\u503c value[i] \uff0c\u518d\u52a0\u4e0a\u524d i-1 \u4e2a\u7269\u54c1\u5728\u51cf\u5c11\u4e86\u7684\u5bb9\u91cf w - weight[i] \u65f6\u7684\u6700\u4f18\u89e3\uff0c\u5373 dp[i-1][w - weight[i]] \u3002 \u5982\u4f55\u6c42\u89e3 \uff1a\u6211\u4eec\u4ece\u7a7a\u80cc\u5305\u5f00\u59cb\uff0c\u9010\u6b65\u589e\u52a0\u7269\u54c1\u548c\u5bb9\u91cf\uff0c\u6bcf\u6b21\u7528\u4e0a\u9762\u8fd9\u4e2a\u516c\u5f0f\u53bb\u66f4\u65b0\u5f53\u524d\u80cc\u5305\u5bb9\u91cf\u7684\u6700\u4f18\u89e3\u3002\u901a\u8fc7\u8fd9\u4e2a\u9012\u63a8\u8fc7\u7a0b\uff0c\u6700\u540e\u5c31\u80fd\u5f97\u5230\u6574\u4e2a\u80cc\u5305\u7684\u6700\u5927\u4ef7\u503c\u3002 \u4e3e\u4e2a\u7b80\u5355\u4f8b\u5b50\uff1a \u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u80cc\u5305\u5bb9\u91cf\u4e3a 5\uff0c\u7269\u54c1\u5982\u4e0b\uff1a \u7269\u54c1 1\uff1a\u91cd\u91cf 2\uff0c\u4ef7\u503c 3 \u7269\u54c1 2\uff1a\u91cd\u91cf 3\uff0c\u4ef7\u503c 4 \u7269\u54c1 3\uff1a\u91cd\u91cf 4\uff0c\u4ef7\u503c 5 \u52a8\u6001\u89c4\u5212\u8868\u7684\u6784\u5efa\u8fc7\u7a0b \uff1a i\\w 0 1 2 3 4 5 0 0 0 0 0 0 0 1 0 0 3 3 3 3 2 0 0 3 4 4 7 3 0 0 3 4 5 7 \u5f53 i = 1 \uff08\u53ea\u8003\u8651\u7269\u54c11\uff09\uff1a\u7269\u54c11\u7684\u91cd\u91cf\u4e3a2\uff0c\u6240\u4ee5\u5f53\u80cc\u5305\u5bb9\u91cf\u5c0f\u4e8e2\u65f6\uff0c\u65e0\u6cd5\u653e\u5165\uff0c\u4ef7\u503c\u4e3a0\uff1b\u5f53\u5bb9\u91cf\u7b49\u4e8e2\u6216\u5927\u4e8e2\u65f6\uff0c\u653e\u5165\u7269\u54c11\uff0c\u4ef7\u503c\u4e3a3\u3002 \u5f53 i = 2 \uff08\u8003\u8651\u524d\u4e24\u4e2a\u7269\u54c1\uff09\uff1a\u5728\u5bb9\u91cf\u4e3a3\u65f6\uff0c\u653e\u5165\u7269\u54c12\u6bd4\u7269\u54c11\u597d\uff0c\u4ef7\u503c\u4e3a4\uff1b\u5f53\u5bb9\u91cf\u4e3a5\u65f6\uff0c\u653e\u5165\u7269\u54c11\u548c\u7269\u54c12\uff0c\u4ef7\u503c\u4e3a7\u3002 \u5f53 i = 3 \uff08\u8003\u8651\u4e09\u4e2a\u7269\u54c1\uff09\uff1a\u7269\u54c13\u592a\u91cd\uff0c\u4e0d\u80fd\u653e\u5165\u80cc\u5305\uff0c\u4e4b\u524d\u7684\u6700\u4f18\u503c\u4fdd\u6301\u4e0d\u53d8\u3002 \u6700\u7ec8\uff0c\u6211\u4eec\u5f97\u5230\u7684\u6700\u5927\u4ef7\u503c\u4e3a7\u3002 3. \u6d3b\u52a8\u9009\u62e9\u95ee\u9898 \uff08\u8d2a\u5fc3\u7b97\u6cd5\uff09 \u95ee\u9898 \uff1a\u4f60\u6709\u4e00\u7cfb\u5217\u6d3b\u52a8\uff0c\u6bcf\u4e2a\u6d3b\u52a8\u90fd\u6709\u5f00\u59cb\u65f6\u95f4\u548c\u7ed3\u675f\u65f6\u95f4\u3002\u4f60\u9700\u8981\u9009\u62e9\u5c3d\u53ef\u80fd\u591a\u7684\u6d3b\u52a8\uff0c\u5e76\u4e14\u8fd9\u4e9b\u6d3b\u52a8\u4e0d\u80fd\u91cd\u53e0\u3002 \u8d2a\u5fc3\u7b56\u7565 \uff1a\u6bcf\u6b21\u9009\u62e9\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u4e14\u4e0d\u4e0e\u5176\u4ed6\u6d3b\u52a8\u51b2\u7a81\u7684\u6d3b\u52a8\u3002 \u6b65\u9aa4 \uff1a \u660e\u786e\u8d2a\u5fc3\u7b56\u7565 \uff1a\u6bcf\u6b21\u9009\u62e9\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u7684\u6d3b\u52a8\uff0c\u4ee5\u7559\u51fa\u66f4\u591a\u65f6\u95f4\u7ed9\u5176\u4ed6\u6d3b\u52a8\u3002 \u6392\u5e8f \uff1a\u5c06\u6d3b\u52a8\u6309\u7ed3\u675f\u65f6\u95f4\u4ece\u65e9\u5230\u665a\u6392\u5e8f\u3002 \u9010\u6b65\u9009\u62e9 \uff1a\u4ece\u7b2c\u4e00\u4e2a\u6d3b\u52a8\u5f00\u59cb\uff0c\u4f9d\u6b21\u9009\u62e9\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u4e14\u4e0e\u4e4b\u524d\u6d3b\u52a8\u4e0d\u51b2\u7a81\u7684\u6d3b\u52a8\u3002 \u68c0\u67e5\u53ef\u884c\u6027 \uff1a\u6bcf\u6b21\u9009\u62e9\u6d3b\u52a8\u65f6\uff0c\u68c0\u67e5\u8be5\u6d3b\u52a8\u662f\u5426\u4e0e\u5df2\u7ecf\u9009\u62e9\u7684\u6d3b\u52a8\u51b2\u7a81\u3002 \u6784\u9020\u89e3 \uff1a\u5c06\u6bcf\u6b21\u9009\u62e9\u7684\u6d3b\u52a8\u52a0\u5165\u6700\u7ec8\u89e3\uff0c\u76f4\u5230\u6ca1\u6709\u6d3b\u52a8\u53ef\u4ee5\u518d\u9009\u3002 \u8d2a\u5fc3\u7b97\u6cd5\u7684\u5c40\u9650\u6027 \u8d2a\u5fc3\u7b97\u6cd5\u5e76\u4e0d\u603b\u662f\u80fd\u627e\u5230\u6700\u4f18\u89e3\u3002\u6bd4\u5982\uff1a 1. 0-1 \u80cc\u5305\u95ee\u9898 \u5728\u8fd9\u4e2a\u95ee\u9898\u4e2d\uff0c\u4f60\u5fc5\u987b\u9009\u62e9 \u5b8c\u6574\u7684\u7269\u54c1 \uff08\u8981\u4e48\u5168\u9009\uff0c\u8981\u4e48\u4e0d\u9009\uff09\uff0c\u800c\u4e0d\u80fd\u9009\u62e9\u7269\u54c1\u7684\u4e00\u90e8\u5206\u3002\u5982\u679c\u4f60\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\u6765\u9009\u62e9\u5355\u4f4d\u4ef7\u503c\u6700\u9ad8\u7684\u7269\u54c1\uff0c\u5f88\u53ef\u80fd\u4f1a\u56e0\u4e3a\u91cd\u91cf\u9650\u5236\u800c\u65e0\u6cd5\u9009\u62e9\u6700\u4f18\u7ec4\u5408\u3002 2. \u6700\u77ed\u8def\u5f84\u95ee\u9898 \u5728\u67d0\u4e9b\u56fe\u4e0a\uff0c\u8d2a\u5fc3\u7b56\u7565\uff08\u603b\u662f\u9009\u62e9\u8ddd\u79bb\u6700\u8fd1\u7684\u8282\u70b9\uff09\u5e76\u4e0d\u603b\u80fd\u627e\u5230\u6700\u77ed\u8def\u5f84\u3002 \u603b\u7ed3\uff1a \u8d2a\u5fc3\u7b97\u6cd5\u662f\u4e00\u79cd\u7b80\u5355\u800c\u9ad8\u6548\u7684\u7b56\u7565\uff0c\u9002\u5408\u7528\u5728\u90a3\u4e9b \u53ef\u4ee5\u901a\u8fc7\u5c40\u90e8\u6700\u4f18\u89e3\u5f97\u5230\u5168\u5c40\u6700\u4f18\u89e3 \u7684\u95ee\u9898\u4e0a\u3002\u5b83\u7684\u5173\u952e\u5728\u4e8e\u6bcf\u4e00\u6b65\u90fd\u505a\u51fa\u6700\u597d\u7684\u5c40\u90e8\u9009\u62e9\uff0c\u5e0c\u671b\u6700\u7ec8\u5f97\u5230\u6700\u4f18\u89e3\u3002\u867d\u7136\u5e76\u4e0d\u662f\u6240\u6709\u95ee\u9898\u90fd\u9002\u5408\u7528\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u4f46\u5728\u5408\u9002\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u80fd\u5feb\u901f\u627e\u5230\u89e3\u3002 3.1 \u8d2a\u5fc3\u7b97\u6cd5\u4f8b\u9898\u8bb2\u89e3 3.1.1 LC 455: \u5206\u53d1\u997c\u5e72 \u9898\u76ee\u63cf\u8ff0 \uff1a\u6709 g \u4e2a\u5b69\u5b50\u548c s \u4e2a\u997c\u5e72\uff0c\u6bcf\u4e2a\u5b69\u5b50\u90fd\u6709\u4e00\u4e2a\u8d2a\u5fc3\u6307\u6570\uff0c\u8868\u793a\u4ed6\u6700\u5c11\u9700\u8981\u591a\u5c11\u997c\u5e72\u3002\u6bcf\u4e2a\u997c\u5e72\u90fd\u6709\u4e00\u4e2a\u5927\u5c0f\uff0c\u8868\u793a\u5b83\u53ef\u4ee5\u6ee1\u8db3\u67d0\u4e2a\u5b69\u5b50\u7684\u9700\u6c42\u3002\u4f60\u8981\u5206\u53d1\u5c3d\u53ef\u80fd\u591a\u7684\u997c\u5e72\u7ed9\u5b69\u5b50\uff0c\u4f7f\u5f97\u6700\u591a\u7684\u5b69\u5b50\u80fd\u5f97\u5230\u6ee1\u8db3\u3002 \u8d2a\u5fc3\u7b97\u6cd5\u6b65\u9aa4 \uff1a \u6392\u5e8f \uff1a\u5c06\u5b69\u5b50\u7684\u9700\u6c42\uff08\u8d2a\u5fc3\u6307\u6570\uff09\u548c\u997c\u5e72\u7684\u5927\u5c0f\u90fd\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\u3002 \u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u6211\u4eec\u53ef\u4ee5\u7528\u6700\u5c0f\u7684\u997c\u5e72\u53bb\u6ee1\u8db3\u6700\u5c0f\u9700\u6c42\u7684\u5b69\u5b50\uff0c\u4ece\u800c\u5c3d\u53ef\u80fd\u6ee1\u8db3\u66f4\u591a\u7684\u5b69\u5b50\u3002 \u5339\u914d \uff1a\u4ece\u6700\u5c0f\u7684\u997c\u5e72\u548c\u6700\u5c0f\u9700\u6c42\u7684\u5b69\u5b50\u5f00\u59cb\u5339\u914d\u3002 \u6bcf\u6b21\u5982\u679c\u997c\u5e72\u5927\u5c0f\u53ef\u4ee5\u6ee1\u8db3\u5f53\u524d\u5b69\u5b50\u7684\u9700\u6c42\uff0c\u5c31\u5c06\u8fd9\u4e2a\u997c\u5e72\u5206\u914d\u7ed9\u8fd9\u4e2a\u5b69\u5b50\uff0c\u7136\u540e\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u5b69\u5b50\u3002 \u5982\u679c\u5f53\u524d\u997c\u5e72\u4e0d\u591f\u6ee1\u8db3\u5b69\u5b50\u9700\u6c42\uff0c\u5c31\u7ee7\u7eed\u5c1d\u8bd5\u4e0b\u4e00\u4e2a\u66f4\u5927\u7684\u997c\u5e72\uff0c\u76f4\u5230\u6240\u6709\u5b69\u5b50\u6216\u997c\u5e72\u7528\u5b8c\u3002 \u4ee3\u7801\u5b9e\u73b0\uff1a class Solution: def findContentChildren(self, g: List[int], s: List[int]) -> int: # \u5c06\u5b69\u5b50\u7684\u9700\u6c42\u548c\u997c\u5e72\u7684\u5927\u5c0f\u6392\u5e8f g.sort() s.sort() i = 0 # \u5b69\u5b50\u7d22\u5f15 j = 0 # \u997c\u5e72\u7d22\u5f15 # \u904d\u5386\u5b69\u5b50\u548c\u997c\u5e72\u6570\u7ec4 while i < len(g) and j < len(s): # \u5982\u679c\u5f53\u524d\u997c\u5e72\u80fd\u6ee1\u8db3\u5f53\u524d\u5b69\u5b50 if s[j] >= g[i]: i += 1 # \u6ee1\u8db3\u4e86\u5b69\u5b50 i\uff0c\u5904\u7406\u4e0b\u4e00\u4e2a\u5b69\u5b50 j += 1 # \u5c1d\u8bd5\u4e0b\u4e00\u4e2a\u997c\u5e72 return i # \u8fd4\u56de\u6ee1\u8db3\u7684\u5b69\u5b50\u6570\u91cf \u8bb2\u89e3\uff1a \u6392\u5e8f\u6b65\u9aa4 \uff1a \u9996\u5148\u5c06\u5b69\u5b50\u7684\u9700\u6c42\u6570\u7ec4 g \u548c\u997c\u5e72\u5927\u5c0f\u6570\u7ec4 s \u8fdb\u884c\u6392\u5e8f\u3002\u6392\u5e8f\u540e\uff0c\u8f83\u5c0f\u7684\u5b69\u5b50\u9700\u6c42\u548c\u8f83\u5c0f\u7684\u997c\u5e72\u4f1a\u6392\u5217\u5728\u6570\u7ec4\u524d\u9762\uff0c\u8fd9\u6837\u53ef\u4ee5\u5c3d\u91cf\u7528\u6700\u5c0f\u7684\u997c\u5e72\u53bb\u6ee1\u8db3\u6700\u5c0f\u9700\u6c42\u7684\u5b69\u5b50\u3002 \u5339\u914d\u8fc7\u7a0b \uff1a \u4f7f\u7528\u4e24\u4e2a\u6307\u9488 i \u548c j \uff0c\u5206\u522b\u6307\u5411\u5b69\u5b50\u548c\u997c\u5e72\u6570\u7ec4\u7684\u8d77\u59cb\u4f4d\u7f6e\u3002 \u5f53 s[j] >= g[i] \u65f6\uff0c\u8868\u793a\u5f53\u524d\u997c\u5e72\u53ef\u4ee5\u6ee1\u8db3\u5f53\u524d\u5b69\u5b50\uff0c\u5b69\u5b50\u88ab\u6ee1\u8db3\uff0c\u79fb\u52a8\u6307\u9488 i \uff0c\u5904\u7406\u4e0b\u4e00\u4e2a\u5b69\u5b50\u3002 \u65e0\u8bba\u662f\u5426\u6ee1\u8db3\uff0c\u997c\u5e72\u90fd\u4f1a\u88ab\u5c1d\u8bd5\uff0c\u6240\u4ee5 j \u6bcf\u6b21\u90fd\u4f1a\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u997c\u5e72\u3002 \u6700\u7ec8\u7ed3\u679c \uff1a \u5f53\u904d\u5386\u7ed3\u675f\u65f6\uff0c i \u7684\u503c\u5c31\u662f\u80fd\u591f\u6ee1\u8db3\u7684\u5b69\u5b50\u6570\u91cf\uff0c\u5373\u6700\u540e\u8fd4\u56de\u7684\u7ed3\u679c\u3002 3.2 \u8d2a\u5fc3\u7b97\u6cd5\u4e3e\u4e00\u53cd\u4e09 3.2.1 LC 435: \u65e0\u91cd\u53e0\u533a\u95f4 \u9898\u76ee\u63cf\u8ff0 \uff1a \u7ed9\u5b9a\u4e00\u7ec4\u533a\u95f4\uff0c\u627e\u5230\u6700\u5c11\u9700\u8981\u79fb\u9664\u7684\u533a\u95f4\u6570\u91cf\uff0c\u4f7f\u5f97\u5269\u4e0b\u7684\u533a\u95f4\u4e92\u4e0d\u91cd\u53e0\u3002 \u8d2a\u5fc3\u7b97\u6cd5\u6b65\u9aa4 \uff1a \u6392\u5e8f \uff1a\u6309\u7167\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\u3002\u6392\u5e8f\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f18\u5148\u9009\u62e9\u7ed3\u675f\u65f6\u95f4\u8f83\u65e9\u7684\u533a\u95f4\uff0c\u8fd9\u6837\u80fd\u591f\u4e3a\u540e\u7eed\u533a\u95f4\u7559\u51fa\u66f4\u591a\u7a7a\u95f4\uff0c\u51cf\u5c11\u51b2\u7a81\u3002 \u9009\u62e9\u533a\u95f4 \uff1a\u6bcf\u6b21\u9009\u62e9\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u4e14\u4e0d\u4e0e\u524d\u4e00\u4e2a\u9009\u62e9\u7684\u533a\u95f4\u91cd\u53e0\u7684\u533a\u95f4\u3002\u5982\u679c\u5f53\u524d\u533a\u95f4\u7684\u5f00\u59cb\u65f6\u95f4\u5c0f\u4e8e\u524d\u4e00\u4e2a\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4\uff0c\u8bf4\u660e\u53d1\u751f\u4e86\u91cd\u53e0\uff0c\u6211\u4eec\u5c31\u9700\u8981\u79fb\u9664\u5f53\u524d\u533a\u95f4\u3002\u5426\u5219\uff0c\u6211\u4eec\u66f4\u65b0\u5f53\u524d\u533a\u95f4\u4e3a\u65b0\u7684\u7ed3\u675f\u65f6\u95f4\uff0c\u5e76\u7ee7\u7eed\u5904\u7406\u4e0b\u4e00\u4e2a\u533a\u95f4\u3002 \u4ee3\u7801\u5b9e\u73b0\uff1a class Solution: def eraseOverlapIntervals(self, intervals: List[List[int]]) -> int: if not intervals: return 0 # \u6309\u7ed3\u675f\u65f6\u95f4\u6392\u5e8f intervals.sort(key=lambda x: x[1]) count = 0 end = intervals[0][1] for i in range(1, len(intervals)): if intervals[i][0] < end: count += 1 # \u6709\u91cd\u53e0\uff0c\u9700\u8981\u79fb\u9664 else: end = intervals[i][1] # \u66f4\u65b0\u7ed3\u675f\u65f6\u95f4 return count \u8bb2\u89e3 \uff1a \u6392\u5e8f\u6b65\u9aa4 \uff1a \u6309\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4\u5bf9\u6240\u6709\u533a\u95f4\u8fdb\u884c\u6392\u5e8f\u3002\u6392\u5e8f\u540e\u7684\u533a\u95f4\u6309\u7ed3\u675f\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u6392\u5217\uff0c\u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u6bcf\u6b21\u9009\u62e9\u7684\u533a\u95f4\u7ed3\u675f\u5f97\u6700\u65e9\uff0c\u80fd\u591f\u5c3d\u91cf\u907f\u514d\u540e\u7eed\u533a\u95f4\u4e0e\u5176\u53d1\u751f\u91cd\u53e0\u3002 \u904d\u5386\u9009\u62e9\u533a\u95f4 \uff1a \u521d\u59cb\u5316\u4e00\u4e2a end \u53d8\u91cf\uff0c\u8868\u793a\u5df2\u9009\u5b9a\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4\u3002\u904d\u5386\u5269\u4f59\u533a\u95f4\u65f6\uff0c\u68c0\u67e5\u6bcf\u4e2a\u533a\u95f4\u7684\u5f00\u59cb\u65f6\u95f4\u662f\u5426\u4e0e\u5f53\u524d\u9009\u5b9a\u7684\u7ed3\u675f\u65f6\u95f4\u53d1\u751f\u91cd\u53e0\u3002 \u5982\u679c\u5f53\u524d\u533a\u95f4\u7684\u5f00\u59cb\u65f6\u95f4\u5c0f\u4e8e end \uff0c\u8bf4\u660e\u53d1\u751f\u4e86\u91cd\u53e0\uff0c\u5fc5\u987b\u79fb\u9664\u5f53\u524d\u533a\u95f4\uff0c count \u52a0 1\u3002 \u5982\u679c\u6ca1\u6709\u91cd\u53e0\uff0c\u5219\u66f4\u65b0 end \u4e3a\u5f53\u524d\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a count \u8bb0\u5f55\u4e86\u88ab\u79fb\u9664\u7684\u533a\u95f4\u6570\uff0c\u904d\u5386\u7ed3\u675f\u540e\uff0c\u8fd4\u56de\u8fd9\u4e2a\u79fb\u9664\u7684\u533a\u95f4\u6570\u3002 3.2.2 LC 605: \u79cd\u82b1\u95ee\u9898 \u9898\u76ee\u63cf\u8ff0 \uff1a \u7ed9\u5b9a\u4e00\u4e2a\u8868\u793a\u82b1\u575b\u7684\u6574\u6570\u6570\u7ec4 flowerbed \uff0c\u5176\u4e2d flowerbed[i] = 0 \u8868\u793a\u8be5\u4f4d\u7f6e\u662f\u7a7a\u7684\uff0c flowerbed[i] = 1 \u8868\u793a\u8be5\u4f4d\u7f6e\u5df2\u7ecf\u79cd\u4e86\u82b1\u3002\u82b1\u575b\u4e2d\u82b1\u4e0d\u80fd\u79cd\u5728\u76f8\u90bb\u7684\u5730\u5757\u4e0a\uff0c\u95ee\u662f\u5426\u80fd\u591f\u5728\u4e0d\u8fdd\u53cd\u89c4\u5219\u7684\u60c5\u51b5\u4e0b\u518d\u79cd\u4e0b n \u6735\u82b1\u3002 \u8d2a\u5fc3\u7b97\u6cd5\u6b65\u9aa4 \uff1a \u904d\u5386\u82b1\u575b \uff1a\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u68c0\u67e5\u6bcf\u4e2a\u4f4d\u7f6e\u3002\u5982\u679c\u5f53\u524d\u4f4d\u7f6e\u662f\u7a7a\u7684 0 \uff0c\u5e76\u4e14\u5b83\u7684\u524d\u4e00\u4e2a\u4f4d\u7f6e\u548c\u540e\u4e00\u4e2a\u4f4d\u7f6e\u4e5f\u662f\u7a7a\u7684\uff08\u5982\u679c\u5b58\u5728\uff09\uff0c\u90a3\u4e48\u53ef\u4ee5\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u79cd\u82b1\u3002 \u8ba1\u6570\u5e76\u8df3\u8fc7\u76f8\u90bb\u4f4d\u7f6e \uff1a\u6bcf\u6b21\u6210\u529f\u79cd\u82b1\u540e\uff0c\u589e\u52a0\u8ba1\u6570\uff0c\u5e76\u8df3\u8fc7\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u76f8\u90bb\u7684\u4f4d\u7f6e\u4e0d\u80fd\u79cd\u82b1\u3002 \u4ee3\u7801\u5b9e\u73b0\uff1a class Solution: def canPlaceFlowers(self, flowerbed: List[int], n: int) -> bool: count = 0 # \u8bb0\u5f55\u53ef\u4ee5\u79cd\u82b1\u7684\u6570\u91cf i = 0 length = len(flowerbed) while i < length: if flowerbed[i] == 0: prev_empty = (i == 0) or (flowerbed[i - 1] == 0) next_empty = (i == length - 1) or (flowerbed[i + 1] == 0) if prev_empty and next_empty: flowerbed[i] = 1 # \u79cd\u82b1 count += 1 if count >= n: return True i += 1 # \u8df3\u8fc7\u4e0b\u4e00\u4e2a\u4f4d\u7f6e i += 1 # \u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u4f4d\u7f6e return count >= n # \u68c0\u67e5\u662f\u5426\u79cd\u591f n \u6735\u82b1 \u8bb2\u89e3\uff1a \u904d\u5386\u5224\u65ad\u80fd\u5426\u79cd\u82b1 \uff1a \u904d\u5386\u6574\u4e2a\u82b1\u575b\uff0c\u68c0\u67e5\u6bcf\u4e2a\u4f4d\u7f6e\u662f\u5426\u53ef\u4ee5\u79cd\u82b1\u3002\u5f53\u524d\u4f4d\u7f6e\u5fc5\u987b\u6ee1\u8db3\u4e09\u4e2a\u6761\u4ef6\u624d\u80fd\u79cd\u82b1\uff1a \u5f53\u524d\u4e3a 0 \uff0c\u5373\u7a7a\u5730\u3002 \u524d\u4e00\u4e2a\u4f4d\u7f6e\u4e3a 0 \u6216\u8005\u662f\u82b1\u575b\u7684\u8d77\u59cb\u4f4d\u7f6e\u3002 \u540e\u4e00\u4e2a\u4f4d\u7f6e\u4e3a 0 \u6216\u8005\u662f\u82b1\u575b\u7684\u672b\u5c3e\u4f4d\u7f6e\u3002 \u79cd\u82b1\u540e\u8df3\u8fc7\u76f8\u90bb\u4f4d\u7f6e \uff1a \u6bcf\u6b21\u6210\u529f\u79cd\u82b1\u540e\uff0c\u9700\u8981\u8df3\u8fc7\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u907f\u514d\u76f8\u90bb\u79cd\u82b1\u3002 \u63d0\u524d\u7ec8\u6b62 \uff1a \u5982\u679c\u5728\u904d\u5386\u8fc7\u7a0b\u4e2d\u5df2\u7ecf\u79cd\u591f\u4e86 n \u6735\u82b1\uff0c\u5219\u53ef\u4ee5\u63d0\u524d\u8fd4\u56de True \u3002 3.2.3 LC 1029: \u4e24\u5730\u8c03\u5ea6 \u9898\u76ee\u63cf\u8ff0 \uff1a \u6709 2N \u4e2a\u4eba\uff0c\u6bcf\u4e2a\u4eba\u90fd\u9700\u8981\u98de\u5f80 A \u5e02\u6216 B \u5e02\u3002\u7ed9\u5b9a\u4e00\u4e2a costs \u6570\u7ec4\uff0c\u5176\u4e2d costs[i] = [aCost, bCost] \u8868\u793a\u7b2c i \u4e2a\u4eba\u98de\u5f80 A \u5e02\u7684\u8d39\u7528\u548c\u98de\u5f80 B \u5e02\u7684\u8d39\u7528\u3002\u73b0\u5728\u9700\u8981\u628a\u8fd9\u4e9b\u4eba\u5206\u914d\u5230\u4e24\u4e2a\u57ce\u5e02\uff0c\u4f7f\u5f97 N \u4e2a\u4eba\u98de\u5f80 A \u5e02\uff0c N \u4e2a\u4eba\u98de\u5f80 B \u5e02\uff0c\u8981\u6c42\u603b\u8d39\u7528\u6700\u5c0f\u3002 \u8d2a\u5fc3\u7b97\u6cd5\u6b65\u9aa4 \uff1a \u8ba1\u7b97\u6210\u672c\u5dee\u5f02 \uff1a\u8ba1\u7b97\u6bcf\u4e2a\u4eba\u53bb A \u5e02\u548c B \u5e02\u7684\u8d39\u7528\u5dee\uff0c\u5373 aCost - bCost \u3002\u6211\u4eec\u5e0c\u671b\u4f18\u5148\u8ba9\u90a3\u4e9b\u53bb A \u5e02\u66f4\u4fbf\u5b9c\u7684\u4eba\u53bb A \u5e02\uff0c\u53bb B \u5e02\u66f4\u4fbf\u5b9c\u7684\u4eba\u53bb B \u5e02\u3002 \u6392\u5e8f\u9009\u62e9 \uff1a\u6839\u636e\u8d39\u7528\u5dee\u8fdb\u884c\u6392\u5e8f\u3002\u5dee\u5f02\u8d8a\u5927\u7684\u4eba\uff0c\u610f\u5473\u7740\u53bb A \u5e02\u66f4\u5212\u7b97\uff1b\u5dee\u5f02\u8d8a\u5c0f\u751a\u81f3\u4e3a\u8d1f\uff0c\u610f\u5473\u7740\u53bb B \u5e02\u66f4\u5212\u7b97\u3002 \u5206\u914d\u57ce\u5e02 \uff1a\u524d N \u4e2a\u4eba\u5b89\u6392\u5230 A \u5e02\uff0c\u540e N \u4e2a\u4eba\u5b89\u6392\u5230 B \u5e02\uff0c\u6700\u7ec8\u5f97\u5230\u6700\u5c0f\u7684\u603b\u8d39\u7528\u3002 \u4ee3\u7801\u5b9e\u73b0\uff1a class Solution: def twoCitySchedCost(self, costs: List[List[int]]) -> int: # \u6309\u7167 aCost - bCost \u5347\u5e8f\u6392\u5e8f costs.sort(key=lambda x: x[0] - x[1]) totalCost = 0 n = len(costs) // 2 # \u524d N \u4e2a\u4eba\u53bb A \u5e02 for i in range(n): totalCost += costs[i][0] # \u540e N \u4e2a\u4eba\u53bb B \u5e02 for i in range(n, 2 * n): totalCost += costs[i][1] return totalCost \u8bb2\u89e3\uff1a \u8ba1\u7b97\u6210\u672c\u5dee\u5f02 \uff1a \u6bcf\u4e2a\u4eba\u90fd\u6709\u53bb A \u5e02\u548c B \u5e02\u7684\u4e24\u79cd\u9009\u62e9\uff0c\u901a\u8fc7 aCost - bCost \u6765\u8861\u91cf\u53bb\u54ea\u4e2a\u57ce\u5e02\u66f4\u5212\u7b97\u3002 \u6392\u5e8f\u6b65\u9aa4 \uff1a \u6839\u636e aCost - bCost \u5bf9 costs \u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\uff0c\u5dee\u503c\u5c0f\u7684\uff08\u53bb B \u5e02\u66f4\u5212\u7b97\uff09\u6392\u5728\u540e\u9762\u3002 \u5206\u914d\u57ce\u5e02 \uff1a \u6392\u5e8f\u540e\uff0c\u524d\u4e00\u534a\u7684\u4eba\uff08\u53bb A \u5e02\u66f4\u5212\u7b97\uff09\u5206\u914d\u5230 A \u5e02\uff0c\u540e\u4e00\u534a\u7684\u4eba\uff08\u53bb B \u5e02\u66f4\u5212\u7b97\uff09\u5206\u914d\u5230 B \u5e02\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a \u6700\u7ec8\u8fd4\u56de\u603b\u7684\u8d39\u7528\uff0c\u5373\u524d N \u4e2a\u4eba\u7684 A \u5e02\u8d39\u7528\u548c\u540e N \u4e2a\u4eba\u7684 B \u5e02\u8d39\u7528\u4e4b\u548c\u3002 4. \u8bfe\u540e\u7ec3\u4e60 \u6392\u5e8f\u95ee\u9898 \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC1288 \u5220\u9664\u88ab\u8986\u76d6\u7684\u533a\u95f4 \u7ed9\u5b9a\u4e00\u7ec4\u533a\u95f4\uff0c\u627e\u51fa\u5176\u4e2d\u672a\u88ab\u8986\u76d6\u7684\u533a\u95f4\uff0c\u79fb\u9664\u88ab\u8986\u76d6\u7684\u533a\u95f4\u3002 LC1024 \u89c6\u9891\u62fc\u63a5 \u7ed9\u5b9a\u4e00\u7ec4\u533a\u95f4\uff0c\u5224\u65ad\u662f\u5426\u80fd\u591f\u901a\u8fc7\u62fc\u63a5\u533a\u95f4\u8986\u76d6\u6574\u4e2a\u89c6\u9891\u957f\u5ea6\u3002 LC763 \u5212\u5206\u5b57\u6bcd\u533a\u95f4 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5c06\u5176\u5212\u5206\u4e3a\u5c3d\u53ef\u80fd\u591a\u7684\u4e0d\u91cd\u53e0\u7684\u533a\u95f4\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u5b57\u6bcd\u6700\u591a\u51fa\u73b0\u5728\u4e00\u4e2a\u533a\u95f4\u4e2d\u3002 LC57 \u63d2\u5165\u533a\u95f4 \u7ed9\u5b9a\u4e00\u7ec4\u975e\u91cd\u53e0\u7684\u533a\u95f4\u548c\u4e00\u4e2a\u65b0\u7684\u533a\u95f4\uff0c\u5c06\u65b0\u533a\u95f4\u63d2\u5165\u5e76\u5408\u5e76\u6240\u6709\u53ef\u80fd\u7684\u91cd\u53e0\u533a\u95f4\u3002 LC179 \u6700\u5927\u6570 \u7ed9\u5b9a\u4e00\u7ec4\u975e\u8d1f\u6574\u6570\uff0c\u91cd\u65b0\u6392\u5217\u5b83\u4eec\u7684\u987a\u5e8f\u4f7f\u4e4b\u7ec4\u6210\u4e00\u4e2a\u6700\u5927\u7684\u6574\u6570\u3002 \u8d2a\u5fc3\u7b97\u6cd5\u95ee\u9898 \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC121 \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a \u7ed9\u5b9a\u80a1\u7968\u4ef7\u683c\uff0c\u627e\u5230\u5728\u6700\u4f73\u65f6\u673a\u4e70\u5165\u548c\u5356\u51fa\u4ee5\u83b7\u5f97\u6700\u5927\u5229\u6da6\u3002 LC122 \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a II \u5141\u8bb8\u591a\u6b21\u4e70\u5356\uff0c\u627e\u5230\u5728\u6700\u4f73\u65f6\u673a\u4e70\u5165\u548c\u5356\u51fa\u4ee5\u83b7\u5f97\u6700\u5927\u5229\u6da6\u3002 LC55 \u8df3\u8dc3\u6e38\u620f \u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u5224\u65ad\u662f\u5426\u80fd\u8df3\u5230\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u3002 LC45 \u8df3\u8dc3\u6e38\u620f II \u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u627e\u5230\u8df3\u5230\u6570\u7ec4\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u7684\u6700\u5c11\u8df3\u8dc3\u6b21\u6570\u3002 LC409 \u6700\u957f\u56de\u6587\u4e32 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u627e\u5230\u5176\u4e2d\u80fd\u7ec4\u6210\u7684\u6700\u957f\u56de\u6587\u4e32\u7684\u957f\u5ea6\u3002","title":"Lesson 13. \u65f6\u95f4\u590d\u6742\u5ea6\u4e0e\u6eda\u52a8\u6c42\u6700\u503c"},{"location":"lesson13/Lesson13%20Python/#lesson-13","text":"","title":"Lesson 13. \u65f6\u95f4\u590d\u6742\u5ea6\u4e0e\u6eda\u52a8\u6c42\u6700\u503c"},{"location":"lesson13/Lesson13%20Python/#_1","text":"\u65f6\u95f4\u590d\u6742\u5ea6\u7b80\u4ecb \u6392\u5e8f\u7b97\u6cd5\u4e0e\u5e94\u7528 2.1 \u6392\u5e8f\u7b97\u6cd5\u4f8b\u9898\u8bb2\u89e3 2.1.1 LC215\uff1a\u627e\u51fa\u6570\u7ec4\u4e2d\u7684\u7b2c K \u5927\u5143\u7d20 2.2 \u6392\u5e8f\u7b97\u6cd5\u4e3e\u4e00\u53cd\u4e09 2.2.1 LC56\uff1a\u5408\u5e76\u533a\u95f4 2.2.2 LC252\uff1a\u4f1a\u8bae\u5ba4 2.2.3 LC347\uff1a\u524d K \u4e2a\u9ad8\u9891\u5143\u7d20 \u8d2a\u5fc3\u7b97\u6cd5 3.1 \u8d2a\u5fc3\u7b97\u6cd5\u4f8b\u9898\u8bb2\u89e3 3.1.1 LC455: \u5206\u53d1\u997c\u5e72 3.2 \u8d2a\u5fc3\u7b97\u6cd5\u4e3e\u4e00\u53cd\u4e09 3.2.1 LC435: \u65e0\u91cd\u53e0\u533a\u95f4 3.2.2 LC605: \u79cd\u82b1\u95ee\u9898 3.2.3 LC1029: \u4e24\u5730\u8c03\u5ea6 \u8bfe\u540e\u7ec3\u4e60","title":"\u76ee\u5f55"},{"location":"lesson13/Lesson13%20Python/#1","text":"\u65f6\u95f4\u590d\u6742\u5ea6 \u662f\u8861\u91cf\u7b97\u6cd5\u6267\u884c\u6548\u7387\u7684\u91cd\u8981\u6307\u6807\uff0c\u5b83\u63cf\u8ff0\u4e86\u968f\u7740\u8f93\u5165\u6570\u636e\u91cf\u7684\u589e\u5927\uff0c\u7b97\u6cd5\u6267\u884c\u65f6\u95f4\u7684\u589e\u957f\u901f\u5ea6\u3002\u65f6\u95f4\u590d\u6742\u5ea6\u901a\u5e38\u8868\u793a\u4e3a O(\u67d0\u4e2a\u51fd\u6570) \uff0c\u5176\u4e2d \"O\" \u8868\u793a\u589e\u957f\u7684\u4e0a\u9650\u3002\u4ee5\u4e0b\u4ecb\u7ecd\u56db\u79cd\u5e38\u89c1\u7684\u65f6\u95f4\u590d\u6742\u5ea6\uff1a O(1) \u3001 O(n) \u3001 O(n^2) \u548c O(n log n) \u3002","title":"1. \u65f6\u95f4\u590d\u6742\u5ea6\u7b80\u4ecb"},{"location":"lesson13/Lesson13%20Python/#_2","text":"O(1) \uff1a\u5e38\u6570\u65f6\u95f4\u590d\u6742\u5ea6 \u64cd\u4f5c\u7684\u6267\u884c\u65f6\u95f4\u4e0d\u968f\u8f93\u5165\u6570\u636e\u7684\u5927\u5c0f\u800c\u53d8\u5316\u3002 \u4f8b\u5b50 \uff1a\u4ece\u6570\u7ec4\u4e2d\u83b7\u53d6\u7b2c k \u4e2a\u5143\u7d20\u3002 python arr = [1, 2, 3, 4, 5] k = 2 # \u83b7\u53d6\u7b2c\u4e09\u4e2a\u5143\u7d20\uff08\u7d22\u5f15\u4ece0\u5f00\u59cb\uff09 element = arr[k] # O(1) print(f\"Element at index {k}: {element}\") \u65f6\u95f4\u590d\u6742\u5ea6 \uff1a\u65e0\u8bba\u6570\u7ec4\u5927\u5c0f\u662f\u591a\u5c11\uff0c\u83b7\u53d6\u7b2c k \u4e2a\u5143\u7d20\u6240\u9700\u65f6\u95f4\u662f\u56fa\u5b9a\u7684\uff0c\u5c5e\u4e8e O(1) \u3002 O(n) \uff1a\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6 \u64cd\u4f5c\u7684\u6267\u884c\u65f6\u95f4\u968f\u7740\u8f93\u5165\u6570\u636e\u91cf\u7ebf\u6027\u589e\u957f\u3002 \u4f8b\u5b50 \uff1a\u904d\u5386\u4e00\u4e2a\u6570\u7ec4\u3002 # \u5047\u8bbe arr \u662f\u4e00\u4e2a\u5df2\u7ecf\u5b9a\u4e49\u5e76\u521d\u59cb\u5316\u7684\u5217\u8868 arr = [1, 2, 3, 4, 5] # \u4f7f\u7528 for \u5faa\u73af\u904d\u5386\u5217\u8868 for i in range(len(arr)): print(arr[i]) \u65f6\u95f4\u590d\u6742\u5ea6 \uff1a\u904d\u5386\u6574\u4e2a\u6570\u7ec4\u9700\u8981\u7684\u65f6\u95f4\u4e0e\u6570\u7ec4\u7684\u957f\u5ea6 n \u6210\u6b63\u6bd4\uff0c\u5c5e\u4e8e O(n) \u3002 O(n^2) \uff1a\u5e73\u65b9\u65f6\u95f4\u590d\u6742\u5ea6 \u64cd\u4f5c\u7684\u6267\u884c\u65f6\u95f4\u4e0e\u8f93\u5165\u6570\u636e\u91cf\u7684\u5e73\u65b9\u6210\u6b63\u6bd4\uff0c\u5e38\u89c1\u4e8e\u53cc\u91cd\u5faa\u73af\u3002 \u4f8b\u5b50 \uff1a\u6253\u5370\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u3002 arr = [[1, 2, 3], [4, 5, 6], [7, 8, 9]] for i in range(3): for j in range(3): print(arr[i][j], end=\" \") print() # \u6bcf\u6253\u5370\u5b8c\u4e00\u884c\u540e\u6362\u884c \u65f6\u95f4\u590d\u6742\u5ea6 \uff1a\u53cc\u91cd\u5faa\u73af\u5d4c\u5957\u904d\u5386\u6bcf\u4e2a\u5143\u7d20\uff0c\u603b\u7684\u6267\u884c\u65f6\u95f4\u662f n \u7684\u5e73\u65b9\uff0c\u5c5e\u4e8e O(n^2) \u3002 O(log n) \uff1a\u5e38\u89c1\u4e8e\u6392\u5e8f\u7b97\u6cd5\uff08\u6b64\u7ae0\u8282\u540e\u534a\u90e8\u5206\u4f1a\u8be6\u7ec6\u8bb2\u89e3\uff09 \u4f8b\u5b50 \uff1a\u5f52\u5e76\u6392\u5e8f\u3001\u5feb\u901f\u6392\u5e8f\u3002 def merge(arr, l, m, r): # \u8ba1\u7b97\u4e24\u4e2a\u5b50\u6570\u7ec4\u7684\u957f\u5ea6 n1 = m - l + 1 n2 = r - m # \u521b\u5efa\u4e34\u65f6\u6570\u7ec4 L = [0] * n1 R = [0] * n2 # \u5c06\u6570\u636e\u62f7\u8d1d\u5230\u4e34\u65f6\u6570\u7ec4 L[] \u548c R[] for i in range(n1): L[i] = arr[l + i] for j in range(n2): R[j] = arr[m + 1 + j] # \u521d\u59cb\u5316\u7d22\u5f15 i = 0 # \u5de6\u5b50\u6570\u7ec4\u7684\u7d22\u5f15 j = 0 # \u53f3\u5b50\u6570\u7ec4\u7684\u7d22\u5f15 k = l # \u5408\u5e76\u540e\u6570\u7ec4\u7684\u7d22\u5f15 # \u5408\u5e76\u4e34\u65f6\u6570\u7ec4\u5230\u539f\u6570\u7ec4 while i < n1 and j < n2: if L[i] <= R[j]: arr[k] = L[i] i += 1 else: arr[k] = R[j] j += 1 k += 1 # \u62f7\u8d1d\u5de6\u5b50\u6570\u7ec4\u5269\u4f59\u7684\u5143\u7d20 while i < n1: arr[k] = L[i] i += 1 k += 1 # \u62f7\u8d1d\u53f3\u5b50\u6570\u7ec4\u5269\u4f59\u7684\u5143\u7d20 while j < n2: arr[k] = R[j] j += 1 k += 1 def mergeSort(arr, l, r): # \u9012\u5f52\u7ed3\u675f\u6761\u4ef6 if l >= r: return # \u8ba1\u7b97\u4e2d\u95f4\u70b9 m = l + (r - l) // 2 # \u9012\u5f52\u6392\u5e8f\u5de6\u534a\u90e8\u5206 mergeSort(arr, l, m) # \u9012\u5f52\u6392\u5e8f\u53f3\u534a\u90e8\u5206 mergeSort(arr, m + 1, r) # \u5408\u5e76\u5df2\u6392\u5e8f\u7684\u4e24\u90e8\u5206 merge(arr, l, m, r) \u65f6\u95f4\u590d\u6742\u5ea6 \uff1a\u5f52\u5e76\u6392\u5e8f\u901a\u8fc7\u9012\u5f52\u5c06\u6570\u7ec4\u5206\u6210\u66f4\u5c0f\u7684\u90e8\u5206\u8fdb\u884c\u6392\u5e8f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n log n) \u3002","title":"\u5e38\u89c1\u7684\u65f6\u95f4\u590d\u6742\u5ea6"},{"location":"lesson13/Lesson13%20Python/#on-log-n","text":"\u5f52\u5e76\u6392\u5e8f\u662f\u4e00\u79cd \u5206\u6cbb\u7b97\u6cd5 \uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u5f52\u5e76\u6392\u5e8f\u7684\u6b65\u9aa4\u5206\u4e3a\u4e24\u90e8\u5206\uff1a \u62c6\u5206 \u548c \u5408\u5e76 \u3002 1. \u62c6\u5206\u8fc7\u7a0b\uff1a\u9012\u5f52\u5206\u89e3\u6570\u7ec4 \u5f52\u5e76\u6392\u5e8f\u9996\u5148\u5c06\u6570\u7ec4\u9012\u5f52\u5730\u5bf9\u534a\u62c6\u5206\uff0c\u76f4\u5230\u6bcf\u4e2a\u5b50\u6570\u7ec4\u53ea\u5269\u4e0b\u4e00\u4e2a\u5143\u7d20\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u7c7b\u4f3c\u4e8e\u6784\u5efa\u4e00\u68f5\u4e8c\u53c9\u6811\uff0c\u6bcf\u6b21\u5c06\u95ee\u9898\u7684\u89c4\u6a21\u51cf\u534a\u3002 \u5bf9\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u6570\u7ec4\uff1a \u7b2c\u4e00\u5c42\uff1a1 \u4e2a\u957f\u5ea6\u4e3a n \u7684\u6570\u7ec4 \u7b2c\u4e8c\u5c42\uff1a2 \u4e2a\u957f\u5ea6\u4e3a n/2 \u7684\u6570\u7ec4 \u7b2c\u4e09\u5c42\uff1a4 \u4e2a\u957f\u5ea6\u4e3a n/4 \u7684\u6570\u7ec4 ... \u7b2c log n \u5c42\uff1a\u6bcf\u4e2a\u6570\u7ec4\u7684\u957f\u5ea6\u662f 1\uff0c\u5171\u6709 n \u4e2a\u6570\u7ec4 \u56e0\u4e3a\u6bcf\u6b21\u90fd\u5bf9\u6570\u7ec4\u8fdb\u884c\u4e8c\u5206\uff0c\u6240\u4ee5\u6574\u4e2a\u9012\u5f52\u6811\u7684\u6df1\u5ea6\u662f log n \u3002 2. \u5408\u5e76\u8fc7\u7a0b\uff1a\u7ebf\u6027\u5408\u5e76 \u5f53\u5b50\u6570\u7ec4\u62c6\u5206\u5230\u6700\u5c0f\uff08\u6bcf\u4e2a\u6570\u7ec4\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff09\u65f6\uff0c\u5f52\u5e76\u6392\u5e8f\u5f00\u59cb\u5408\u5e76\u8fd9\u4e9b\u5b50\u6570\u7ec4\u3002\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\u7684\u65f6\u95f4\u4e0e\u5b83\u4eec\u7684\u957f\u5ea6\u6210\u6b63\u6bd4\uff0c\u4e5f\u5c31\u662f\u8bf4\u5408\u5e76\u4e24\u4e2a\u6570\u7ec4\u7684\u65f6\u95f4\u662f O(n) \u3002 \u5728\u9012\u5f52\u6811\u7684\u6bcf\u4e00\u5c42\uff0c\u6240\u6709\u6570\u7ec4\u7684\u603b\u957f\u5ea6\u59cb\u7ec8\u662f n \uff0c\u56e0\u6b64\uff1a \u7b2c\u4e00\u5c42\uff1a\u5408\u5e76\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u6570\u7ec4\uff0c\u65f6\u95f4\u662f O(n) \u7b2c\u4e8c\u5c42\uff1a\u5408\u5e76\u4e24\u4e2a\u957f\u5ea6\u4e3a n/2 \u7684\u6570\u7ec4\uff0c\u603b\u65f6\u95f4\u4ecd\u7136\u662f O(n) \u7b2c\u4e09\u5c42\uff1a\u5408\u5e76\u56db\u4e2a\u957f\u5ea6\u4e3a n/4 \u7684\u6570\u7ec4\uff0c\u603b\u65f6\u95f4\u4e5f\u662f O(n) \u65e0\u8bba\u6709\u591a\u5c11\u4e2a\u5c0f\u6570\u7ec4\uff0c\u5408\u5e76\u6bcf\u4e00\u5c42\u7684\u603b\u65f6\u95f4\u90fd\u662f O(n) \u3002 3. \u9012\u5f52\u6811\u7684\u5c42\u6570 \u62c6\u5206\u7684\u8fc7\u7a0b\u6700\u591a\u8fdb\u884c log n \u6b21\uff08\u6bcf\u6b21\u5c06\u6570\u7ec4\u5bf9\u534a\u5206\uff09\u3002\u56e0\u6b64\uff0c\u9012\u5f52\u6811\u7684\u6df1\u5ea6\u662f log n \uff0c\u5373\u6700\u591a\u6709 log n \u5c42\u3002 \u603b\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u8ba1\u7b97 \u56e0\u4e3a\u6bcf\u4e00\u5c42\u7684\u5408\u5e76\u65f6\u95f4\u90fd\u662f O(n) \uff0c\u800c\u6574\u4e2a\u9012\u5f52\u6811\u6709 log n \u5c42\uff0c\u6240\u4ee5\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(n) * O(log n) = O(n log n) \u4e3a\u4ec0\u4e48\u4e0d\u4f1a\u8d85\u8fc7 O(n log n) \u6709\u4eba\u53ef\u80fd\u4f1a\u7591\u60d1\uff1a\u65e2\u7136\u6211\u4eec\u5728\u9012\u5f52\u4e2d\u53cd\u590d\u5206\u88c2\u6570\u7ec4\uff0c\u4e3a\u4ec0\u4e48\u65f6\u95f4\u590d\u6742\u5ea6\u4e0d\u4f1a\u8d85\u8fc7 O(n log n) \u5462\uff1f \u6bcf\u5c42\u7684\u5408\u5e76\u64cd\u4f5c\u662f\u7ebf\u6027\u7684 \uff1a\u867d\u7136\u9012\u5f52\u5206\u88c2\u4f1a\u4ea7\u751f\u591a\u4e2a\u5c0f\u6570\u7ec4\uff0c\u4f46\u6bcf\u4e00\u5c42\u4e2d\u6240\u6709\u6570\u7ec4\u7684\u603b\u957f\u5ea6\u4ecd\u7136\u662f n \u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6bcf\u4e00\u5c42\u5408\u5e76\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u59cb\u7ec8\u662f O(n) \uff0c\u4e0d\u4f1a\u7d2f\u79ef\u66f4\u591a\u590d\u6742\u5ea6\u3002 \u9012\u5f52\u7684\u6df1\u5ea6\u662f log n \uff1a\u7531\u4e8e\u6bcf\u6b21\u9012\u5f52\u90fd\u5c06\u6570\u7ec4\u5bf9\u534a\u5206\u88c2\uff0c\u6574\u4e2a\u9012\u5f52\u8fc7\u7a0b\u53ea\u4f1a\u8fdb\u884c log n \u6b21\u5206\u88c2\u3002\u56e0\u6b64\uff0c\u9012\u5f52\u6811\u7684\u6df1\u5ea6\u662f log n \u3002 \u6700\u7ec8\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\u6bcf\u5c42\u7684\u65f6\u95f4 O(n) \u4e58\u4ee5\u9012\u5f52\u6811\u7684\u5c42\u6570 log n \uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(n log n) \u3002","title":"\u4e3a\u4ec0\u4e48\u662f O(n log n)?"},{"location":"lesson13/Lesson13%20Python/#_3","text":"O(1) \uff1a\u6267\u884c\u65f6\u95f4\u4e0d\u53d7\u8f93\u5165\u89c4\u6a21\u5f71\u54cd\u3002 O(n) \uff1a\u6267\u884c\u65f6\u95f4\u968f\u8f93\u5165\u89c4\u6a21\u7ebf\u6027\u589e\u957f\u3002 O(n^2) \uff1a\u6267\u884c\u65f6\u95f4\u4e0e\u8f93\u5165\u89c4\u6a21\u7684\u5e73\u65b9\u6210\u6b63\u6bd4\uff0c\u901a\u5e38\u53d1\u751f\u5728\u5d4c\u5957\u5faa\u73af\u4e2d\u3002 O(n log n) \uff1a\u5e38\u89c1\u4e8e\u9ad8\u6548\u7684\u6392\u5e8f\u7b97\u6cd5\u3002","title":"\u65f6\u95f4\u590d\u6742\u5ea6\u603b\u7ed3"},{"location":"lesson13/Lesson13%20Python/#_4","text":"\u8003\u8651\u4e00\u4e2a\u7b80\u5355\u7684\u7b97\u6cd5\uff1a\u8ba1\u7b97\u6570\u7ec4\u4e2d\u6240\u6709\u5143\u7d20\u7684\u548c\u3002 def sumArray(arr, n): total = 0 for i in range(n): total += arr[i] # \u57fa\u672c\u64cd\u4f5c return total # \u5b9a\u4e49\u6570\u7ec4 arr = [1, 2, 3, 4, 5] n = len(arr) # \u83b7\u53d6\u6570\u7ec4\u957f\u5ea6 # \u8f93\u51fa\u6570\u7ec4\u7684\u548c print(\"Sum of array:\", sumArray(arr, n))","title":"\u5177\u4f53\u5b9e\u4f8b"},{"location":"lesson13/Lesson13%20Python/#_5","text":"\u786e\u5b9a\u57fa\u672c\u64cd\u4f5c \uff1a \u57fa\u672c\u64cd\u4f5c\u662f total += arr[i] \u3002 \u8ba1\u7b97\u57fa\u672c\u64cd\u4f5c\u7684\u6b21\u6570 \uff1a \u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff0cfor \u5faa\u73af\u4f1a\u6267\u884c n \u6b21\uff08\u5176\u4e2d n \u662f\u6570\u7ec4 arr \u7684\u957f\u5ea6\uff09\u3002 \u56e0\u6b64\uff0c\u57fa\u672c\u64cd\u4f5c\u7684\u6b21\u6570\u4e3a n \u3002 \u4f7f\u7528\u5927 O \u8868\u793a\u6cd5 \uff1a \u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(n)\u3002 \u8003\u8651\u6700\u574f\u60c5\u51b5 \uff1a \u65e0\u8bba\u8f93\u5165\u7684\u5177\u4f53\u5185\u5bb9\u5982\u4f55\uff0c\u53ea\u8981\u6570\u7ec4\u957f\u5ea6\u4e3a n \uff0c\u57fa\u672c\u64cd\u4f5c\u90fd\u4f1a\u6267\u884c n \u6b21\uff0c\u56e0\u6b64\u6700\u574f\u60c5\u51b5\u4e3a O(n)\u3002 \u7279\u6b8a\u60c5\u51b5 \uff1a \u5982\u679c\u6570\u7ec4\u4e3a\u7a7a\uff0c\u5faa\u73af\u4e0d\u4f1a\u6267\u884c\uff0c\u4f46\u6211\u4eec\u4ecd\u7136\u8ba4\u4e3a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n)\uff0c\u56e0\u4e3a\u6211\u4eec\u5173\u6ce8\u7684\u662f\u8f93\u5165\u7684\u89c4\u6a21\u3002","title":"\u6b65\u9aa4\u5206\u6790"},{"location":"lesson13/Lesson13%20Python/#_6","text":"","title":"\u968f\u5802\u7ec3\u4e60"},{"location":"lesson13/Lesson13%20Python/#_7","text":"def find_max(arr): max_num = arr[0] for num in arr: # \u57fa\u672c\u64cd\u4f5c if num > max_num: max_num = num return max_num # Example usage arr = [1, 5, 3, 9, 2] print(f\"Max number: {find_max(arr)}\")","title":"\u5224\u65ad\u4ee5\u4e0b\u4ee3\u7801\u7684\u65f6\u95f4\u590d\u6742\u5ea6"},{"location":"lesson13/Lesson13%20Python/#_8","text":"\u7b2c\u4e00\u6bb5\u4ee3\u7801\uff08find_max\uff09 \uff1a \u57fa\u672c\u64cd\u4f5c\u662f if num > max_num \u3002 \u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u5faa\u73af\u6267\u884c n \u6b21\u3002 \u6240\u4ee5\u65f6\u95f4\u590d\u6742\u5ea6\u662f O(n)\u3002","title":"\u89e3\u7b54"},{"location":"lesson13/Lesson13%20Python/#2","text":"\u6392\u5e8f\u662f\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\u4e00\u4e2a\u975e\u5e38\u57fa\u7840\u4f46\u91cd\u8981\u7684\u64cd\u4f5c\u3002\u5b83\u4e0d\u4ec5\u53ef\u4ee5\u8ba9\u6570\u636e\u6309\u7279\u5b9a\u987a\u5e8f\u6392\u5217\uff0c\u8fd8\u80fd\u5e2e\u52a9\u6211\u4eec\u89e3\u51b3\u8bb8\u591a\u4e0e\u6570\u636e\u5904\u7406\u76f8\u5173\u7684\u95ee\u9898\u3002\u901a\u8fc7\u6392\u5e8f\uff0c\u6211\u4eec\u53ef\u4ee5\u66f4\u5feb\u5730\u89e3\u51b3\u627e\u7b2c K \u5927\u5143\u7d20\u3001\u5408\u5e76\u91cd\u53e0\u533a\u95f4\u7b49\u95ee\u9898\u3002","title":"2. \u6392\u5e8f\u7b97\u6cd5\u4e0e\u5e94\u7528"},{"location":"lesson13/Lesson13%20Python/#_9","text":"\u6392\u5e8f\u7684\u5e94\u7528\u573a\u666f\u975e\u5e38\u5e7f\u6cdb\uff0c\u5c24\u5176\u662f\u5728\u6570\u636e\u5904\u7406\u4e2d\uff0c\u4f60\u4f1a\u7ecf\u5e38\u9047\u5230\u9700\u8981\u5bf9\u6570\u636e\u8fdb\u884c\u6392\u5e8f\u7684\u60c5\u51b5\uff1a \u627e\u51fa\u7b2c K \u5927\u5143\u7d20 \uff1a\u901a\u8fc7\u6392\u5e8f\u6570\u636e\uff0c\u53ef\u4ee5\u5f88\u5feb\u627e\u51fa\u7b2c K \u5927\uff08\u6216\u7b2c K \u5c0f\uff09\u7684\u5143\u7d20\u3002 \u5408\u5e76\u533a\u95f4 \uff1a\u5f53\u5904\u7406\u591a\u4e2a\u533a\u95f4\u6216\u6bb5\u65f6\uff0c\u5e38\u5e38\u9700\u8981\u5148\u5c06\u8fd9\u4e9b\u533a\u95f4\u6309\u67d0\u4e2a\u7ef4\u5ea6\u6392\u5e8f\uff0c\u7136\u540e\u5408\u5e76\u5b83\u4eec\u3002 \u4f8b\u5b50 \uff1a\u5408\u5e76\u65e5\u7a0b\u3001\u4efb\u52a1\u65f6\u95f4\u6bb5\u7b49\u6570\u636e\uff0c\u89e3\u51b3\u533a\u95f4\u91cd\u53e0\u95ee\u9898\u3002 \u4f18\u5316\u64cd\u4f5c \uff1a\u4e0d\u540c\u7684\u6392\u5e8f\u7b97\u6cd5\u5728\u9762\u5bf9\u4e0d\u540c\u89c4\u6a21\u7684\u6570\u636e\u65f6\u8868\u73b0\u5404\u5f02\uff0c\u56e0\u6b64\u9009\u62e9\u5408\u9002\u7684\u6392\u5e8f\u7b97\u6cd5\u5bf9\u4e8e\u63d0\u9ad8\u7a0b\u5e8f\u6027\u80fd\u975e\u5e38\u91cd\u8981\u3002","title":"\u9002\u7528\u573a\u666f"},{"location":"lesson13/Lesson13%20Python/#_10","text":"","title":"\u5e38\u7528\u6280\u5de7"},{"location":"lesson13/Lesson13%20Python/#1_1","text":"\u5927\u591a\u6570\u7f16\u7a0b\u8bed\u8a00\u90fd\u63d0\u4f9b\u4e86\u5185\u7f6e\u7684\u6392\u5e8f\u51fd\u6570\uff0c\u5b83\u4eec\u7ecf\u8fc7\u4f18\u5316\uff0c\u80fd\u4ee5\u9ad8\u6548\u7684\u65b9\u5f0f\u8fdb\u884c\u6392\u5e8f\u3002Python \u63d0\u4f9b\u4e86 list.sort() \u65b9\u6cd5\u548c sorted() \u51fd\u6570\u3002 \u793a\u4f8b\u4ee3\u7801 \uff1a # \u5b9a\u4e49\u4e00\u4e2a\u6574\u6570\u5217\u8868 nums = [3, 1, 4, 1, 5, 9] # \u4f7f\u7528\u5185\u7f6e\u7684\u6392\u5e8f\u65b9\u6cd5\u5bf9\u5217\u8868\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\uff08\u539f\u5730\u6392\u5e8f\uff09 nums.sort() # \u8f93\u51fa\u6392\u5e8f\u540e\u7684\u5217\u8868 print(\"Sorted array:\", nums) \u6216\u8005\u4f7f\u7528 sorted() \u51fd\u6570\uff1a # \u5b9a\u4e49\u4e00\u4e2a\u6574\u6570\u5217\u8868 nums = [3, 1, 4, 1, 5, 9] # \u4f7f\u7528\u5185\u7f6e\u7684 sorted() \u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u6392\u5e8f\u540e\u7684\u5217\u8868 sorted_nums = sorted(nums) # \u8f93\u51fa\u6392\u5e8f\u540e\u7684\u5217\u8868 print(\"Sorted array:\", sorted_nums) \u8bf4\u660e \uff1a list.sort() \u65b9\u6cd5\u4f1a\u5bf9\u5217\u8868\u8fdb\u884c\u539f\u5730\u5347\u5e8f\u6392\u5e8f\uff0c\u4e0d\u4f1a\u521b\u5efa\u65b0\u7684\u5217\u8868\u3002 sorted() \u51fd\u6570\u4f1a\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u6392\u5e8f\u540e\u7684\u5217\u8868\uff0c\u539f\u5217\u8868\u4fdd\u6301\u4e0d\u53d8\u3002 \u4f7f\u7528\u5185\u7f6e\u7684\u6392\u5e8f\u65b9\u6cd5\u662f\u975e\u5e38\u5feb\u6377\u4e14\u9ad8\u6548\u7684\uff0c\u5bf9\u4e8e\u5927\u591a\u6570\u7b80\u5355\u6392\u5e8f\u4efb\u52a1\uff0c\u5b83\u7684\u6548\u7387\u975e\u5e38\u9ad8\u3002","title":"1. \u5185\u7f6e\u6392\u5e8f\u51fd\u6570"},{"location":"lesson13/Lesson13%20Python/#2_1","text":"\u6709\u65f6\u6211\u4eec\u9700\u8981\u6309\u7167\u81ea\u5b9a\u4e49\u7684\u89c4\u5219\u5bf9\u6570\u636e\u8fdb\u884c\u6392\u5e8f\u3002\u6bd4\u5982\uff0c\u6211\u4eec\u53ef\u80fd\u5e0c\u671b\u6309\u5217\u8868\u7684\u67d0\u4e2a\u7279\u5b9a\u5143\u7d20\u8fdb\u884c\u6392\u5e8f\uff0c\u800c\u4e0d\u662f\u6309\u9ed8\u8ba4\u7684\u987a\u5e8f\u3002\u5728 Python \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 sort() \u65b9\u6cd5\u6216 sorted() \u51fd\u6570\u7684 key \u53c2\u6570\u6765\u81ea\u5b9a\u4e49\u6392\u5e8f\u89c4\u5219\u3002 \u793a\u4f8b\u4ee3\u7801 \uff1a # \u5b9a\u4e49\u4e00\u4e2a\u4e8c\u7ef4\u5217\u8868 data = [[1, 3], [2, 2], [3, 1]] # \u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u6392\u5e8f\u89c4\u5219\u6309\u7b2c\u4e8c\u4e2a\u5143\u7d20\u6392\u5e8f data.sort(key=lambda x: x[1]) # \u8f93\u51fa\u6392\u5e8f\u540e\u7684\u4e8c\u7ef4\u5217\u8868 for row in data: print(f\"{row[0]}, {row[1]}\") \u8bf4\u660e \uff1a \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e86 sort() \u65b9\u6cd5\u7684 key \u53c2\u6570\uff0c\u4f20\u5165\u4e86\u4e00\u4e2a\u533f\u540d\u51fd\u6570 lambda x: x[1] \uff0c\u6309\u7167\u6bcf\u4e2a\u5b50\u5217\u8868\u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20\u8fdb\u884c\u6392\u5e8f\u3002 sort() \u65b9\u6cd5\u7684 key \u53c2\u6570\u7528\u4e8e\u6307\u5b9a\u6392\u5e8f\u7684\u4f9d\u636e\uff0c lambda \u51fd\u6570\u53ef\u4ee5\u7075\u6d3b\u5730\u5b9a\u4e49\u6392\u5e8f\u89c4\u5219\u3002 \u5982\u679c\u9700\u8981\u8fd4\u56de\u65b0\u7684\u6392\u5e8f\u5217\u8868\u800c\u4e0d\u6539\u53d8\u539f\u5217\u8868\uff0c\u53ef\u4ee5\u4f7f\u7528 sorted() \u51fd\u6570\uff1a python sorted_data = sorted(data, key=lambda x: x[1])","title":"2. \u81ea\u5b9a\u4e49\u6392\u5e8f"},{"location":"lesson13/Lesson13%20Python/#cmp_to_key","text":"\u9664\u4e86\u4f7f\u7528\u7b80\u5355\u7684 lambda \u51fd\u6570\u5916\uff0cPython \u8fd8\u63d0\u4f9b\u4e86 functools.cmp_to_key \uff0c\u9002\u7528\u4e8e\u9700\u8981\u66f4\u52a0\u590d\u6742\u6392\u5e8f\u903b\u8f91\u7684\u60c5\u51b5\u3002\u5b83\u53ef\u4ee5\u5c06\u57fa\u4e8e\u6bd4\u8f83\u51fd\u6570\u7684\u903b\u8f91\u8f6c\u6362\u4e3a\u73b0\u4ee3\u7684 key \u51fd\u6570\uff0c\u4f7f\u5176\u53ef\u4ee5\u7528\u4e8e sorted() \u6216 sort() \u51fd\u6570\u3002","title":"\u4f7f\u7528 cmp_to_key \u8fdb\u884c\u590d\u6742\u6392\u5e8f"},{"location":"lesson13/Lesson13%20Python/#_11","text":"\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u9700\u8981\u6839\u636e\u81ea\u5b9a\u4e49\u89c4\u5219\u8fdb\u884c\u6392\u5e8f\u7684\u5217\u8868\u3002\u4f8b\u5982\uff0c\u6309\u5947\u6570\u4f18\u5148\u3001\u5076\u6570\u5176\u6b21\u7684\u89c4\u5219\u6392\u5e8f\uff0c\u5982\u679c\u4e24\u8005\u76f8\u540c\uff0c\u5219\u6309\u6570\u5b57\u5927\u5c0f\u6392\u5e8f\uff1a from functools import cmp_to_key # \u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570 def custom_compare(x, y): # \u5947\u6570\u4f18\u5148\uff0c\u5076\u6570\u9760\u540e if (x % 2 == 1) and (y % 2 == 0): return -1 elif (x % 2 == 0) and (y % 2 == 1): return 1 # \u5982\u679c\u540c\u4e3a\u5947\u6570\u6216\u5076\u6570\uff0c\u6309\u6570\u5b57\u5927\u5c0f\u6392\u5e8f else: return (x > y) - (x < y) # \u5f85\u6392\u5e8f\u5217\u8868 arr = [3, 1, 4, 1, 5, 9, 2, 6, 8, 7] # \u4f7f\u7528 cmp_to_key \u5c06\u6bd4\u8f83\u51fd\u6570\u8f6c\u6362\u4e3a key sorted_arr = sorted(arr, key=cmp_to_key(custom_compare)) print(sorted_arr) # \u8f93\u51fa: [3, 1, 1, 5, 9, 7, 2, 4, 6, 8]","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"lesson13/Lesson13%20Python/#_12","text":"custom_compare \u662f\u81ea\u5b9a\u4e49\u7684\u6bd4\u8f83\u51fd\u6570\uff0c\u6309\u5947\u5076\u6027\u6392\u5e8f\u3002\u5982\u679c x \u662f\u5947\u6570\u800c y \u662f\u5076\u6570\uff0c\u5219\u8fd4\u56de -1\uff0c\u8868\u793a x \u5e94\u8be5\u6392\u5728\u524d\u9762\uff1b\u53cd\u4e4b\uff0c\u8fd4\u56de 1 \u8868\u793a y \u5e94\u8be5\u6392\u5728\u524d\u9762\u3002\u5bf9\u4e8e\u540c\u7c7b\u578b\uff08\u5947\u6570\u6216\u5076\u6570\uff09\uff0c\u76f4\u63a5\u6309\u6570\u5b57\u5927\u5c0f\u6392\u5e8f\u3002 cmp_to_key \u5c06\u8fd9\u4e2a\u6bd4\u8f83\u51fd\u6570\u8f6c\u6362\u4e3a sorted() \u51fd\u6570\u7684 key \u53c2\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528\u81ea\u5b9a\u4e49\u6392\u5e8f\u903b\u8f91\u3002 \u8fd9\u79cd\u65b9\u6cd5\u975e\u5e38\u9002\u5408\u5f53 lambda \u65e0\u6cd5\u8f7b\u677e\u8868\u8fbe\u590d\u6742\u6392\u5e8f\u903b\u8f91\u65f6\u4f7f\u7528\u3002","title":"\u8bf4\u660e"},{"location":"lesson13/Lesson13%20Python/#3","text":"\u6392\u5e8f\u7b97\u6cd5\u5728\u5904\u7406\u4e0d\u540c\u89c4\u6a21\u6570\u636e\u65f6\u8868\u73b0\u5404\u5f02\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u89c1\u7684\u6392\u5e8f\u7b97\u6cd5\u53ca\u5176\u9002\u7528\u573a\u666f\uff0c\u4f9b\u5927\u5bb6\u521d\u6b65\u4e86\u89e3\uff1a \u9009\u62e9\u6392\u5e8f \uff1a\u9002\u7528\u4e8e\u5c0f\u89c4\u6a21\u6570\u636e\u96c6\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n\u00b2)\u3002 \u7279\u70b9\u662f\u6bcf\u6b21\u4ece\u672a\u6392\u5e8f\u90e8\u5206\u4e2d\u9009\u62e9\u6700\u5c0f\uff08\u6216\u6700\u5927\uff09\u7684\u5143\u7d20\uff0c\u7136\u540e\u5c06\u5176\u653e\u5230\u5df2\u6392\u5e8f\u90e8\u5206\u7684\u672b\u5c3e\u3002\u7b80\u5355\u6613\u61c2\uff0c\u4f46\u6027\u80fd\u8f83\u5dee\uff0c\u4e0d\u9002\u5408\u5927\u6570\u636e\u96c6\u3002 \u63d2\u5165\u6392\u5e8f \uff1a\u9002\u5408\u4e8e\u51e0\u4e4e\u5df2\u6392\u5e8f\u7684\u6570\u636e\u96c6\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u662f O(n\u00b2)\u3002 \u5f53\u6570\u636e\u51e0\u4e4e\u6709\u5e8f\u65f6\uff0c\u63d2\u5165\u6392\u5e8f\u7684\u6548\u7387\u4f1a\u6bd4\u9009\u62e9\u6392\u5e8f\u597d\u5f97\u591a\uff0c\u56e0\u4e3a\u5b83\u51cf\u5c11\u4e86\u4e0d\u5fc5\u8981\u7684\u6bd4\u8f83\u548c\u79fb\u52a8\u3002 \u5feb\u901f\u6392\u5e8f \uff1a\u6027\u80fd\u8f83\u597d\u7684\u901a\u7528\u6392\u5e8f\u7b97\u6cd5\uff0c\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n log n)\u3002 \u901a\u8fc7\u9009\u62e9\u4e00\u4e2a\u57fa\u51c6\u5143\u7d20\uff08pivot\uff09\uff0c\u5c06\u6570\u7ec4\u5212\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u9012\u5f52\u5730\u5bf9\u4e24\u90e8\u5206\u8fdb\u884c\u6392\u5e8f\u3002\u9002\u5408\u5927\u89c4\u6a21\u6570\u636e\u96c6\uff0c\u4f46\u6700\u574f\u60c5\u51b5\u4e0b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n\u00b2)\u3002 \u5f52\u5e76\u6392\u5e8f \uff1a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n log n)\uff0c\u4e14\u662f\u7a33\u5b9a\u7684\u6392\u5e8f\u7b97\u6cd5\u3002 \u5c06\u6570\u7ec4\u4e0d\u65ad\u62c6\u5206\u6210\u5b50\u6570\u7ec4\uff0c\u5206\u522b\u6392\u5e8f\u540e\u518d\u5408\u5e76\u3002\u6027\u80fd\u7a33\u5b9a\uff0c\u4f46\u9700\u8981\u989d\u5916\u7684\u5185\u5b58\u7a7a\u95f4\u5b58\u50a8\u4e34\u65f6\u6570\u7ec4\u3002 \u5192\u6ce1\u6392\u5e8f \uff1a\u7b80\u5355\u4f46\u6027\u80fd\u8f83\u5dee\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n\u00b2)\u3002 \u901a\u8fc7\u91cd\u590d\u904d\u5386\u5217\u8868\uff0c\u6bd4\u8f83\u76f8\u90bb\u5143\u7d20\u5e76\u4ea4\u6362\uff0c\u5c06\u8f83\u5927\u7684\u5143\u7d20\u9010\u6e10\u79fb\u52a8\u5230\u5217\u8868\u672b\u5c3e\u3002\u9002\u7528\u4e8e\u975e\u5e38\u5c0f\u89c4\u6a21\u7684\u6570\u636e\u96c6\u3002 \u5806\u6392\u5e8f \uff1a\u57fa\u4e8e\u5806\u6570\u636e\u7ed3\u6784\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n log n)\u3002 \u901a\u8fc7\u5efa\u7acb\u6700\u5927\u5806\u6216\u6700\u5c0f\u5806\u6765\u6392\u5e8f\uff0c\u4e0d\u9700\u8981\u989d\u5916\u7684\u5185\u5b58\u7a7a\u95f4\u3002\u867d\u7136\u6548\u7387\u548c\u5feb\u901f\u6392\u5e8f\u76f8\u5f53\uff0c\u4f46\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u5e38\u7528\u5feb\u901f\u6392\u5e8f\u3002 \u8ba1\u6570\u6392\u5e8f \uff1a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n + k)\uff0c\u9002\u7528\u4e8e\u6570\u636e\u8303\u56f4\u8f83\u5c0f\u7684\u6574\u6570\u6392\u5e8f\u3002 \u901a\u8fc7\u7edf\u8ba1\u6bcf\u4e2a\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570\u6765\u6392\u5e8f\u3002\u5f53\u6570\u636e\u8303\u56f4\u8f83\u5c0f\u65f6\uff0c\u6027\u80fd\u975e\u5e38\u4f18\u5f02\uff0c\u4f46\u8303\u56f4\u5f88\u5927\u65f6\uff0c\u7a7a\u95f4\u6d88\u8017\u4f1a\u8fc7\u9ad8\u3002 \u6876\u6392\u5e8f \uff1a\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n + k)\uff0c\u9002\u5408\u5747\u5300\u5206\u5e03\u7684\u6570\u636e\u96c6\u3002 \u5c06\u6570\u636e\u5206\u5230\u591a\u4e2a\u6876\u4e2d\uff0c\u5206\u522b\u5bf9\u6bcf\u4e2a\u6876\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u5408\u5e76\u6240\u6709\u6876\u4e2d\u7684\u5143\u7d20\u3002\u5bf9\u4e8e\u5206\u5e03\u5747\u5300\u7684\u6570\u636e\uff0c\u6027\u80fd\u5f88\u597d\uff0c\u4f46\u6570\u636e\u5206\u5e03\u4e0d\u5747\u65f6\u6027\u80fd\u53ef\u80fd\u4e0b\u964d\u3002 \u57fa\u6570\u6392\u5e8f \uff1a\u975e\u6bd4\u8f83\u6392\u5e8f\u7b97\u6cd5\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n * k)\uff0c\u9002\u7528\u4e8e\u4f4d\u6570\u56fa\u5b9a\u7684\u6570\u636e\u3002 \u901a\u8fc7\u6309\u4f4d\uff08\u5982\u4e2a\u4f4d\u3001\u5341\u4f4d\uff09\u8fdb\u884c\u591a\u6b21\u6392\u5e8f\u6765\u5b8c\u6210\u6574\u4f53\u6392\u5e8f\u3002\u9002\u7528\u4e8e\u5bf9\u6574\u6570\u6216\u5b57\u7b26\u4e32\u8fdb\u884c\u6392\u5e8f\uff0c\u5c24\u5176\u662f\u5f53\u4f4d\u6570 k \u8f83\u5c0f\u65f6\u3002 \u6b64\u5916\uff0cPython \u7684\u5185\u7f6e\u6392\u5e8f\u7b97\u6cd5\uff08 list.sort() \u548c sorted() \uff09\u4f7f\u7528\u7684\u662f Timsort \uff0c\u4e00\u79cd\u7ed3\u5408\u4e86\u5f52\u5e76\u6392\u5e8f\u548c\u63d2\u5165\u6392\u5e8f\u7684\u6df7\u5408\u7b97\u6cd5\u3002\u5b83\u7684\u5e73\u5747\u548c\u6700\u574f\u60c5\u51b5\u4e0b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u662f O(n log n)\uff0c\u5728\u5904\u7406\u51e0\u4e4e\u6709\u5e8f\u7684\u6570\u636e\u65f6\u6027\u80fd\u975e\u5e38\u4f18\u79c0\u3002","title":"3. \u6392\u5e8f\u4f18\u5316"},{"location":"lesson13/Lesson13%20Python/#21","text":"","title":"2.1 \u6392\u5e8f\u7b97\u6cd5\u4f8b\u9898\u8bb2\u89e3"},{"location":"lesson13/Lesson13%20Python/#211-lc-215-k","text":"","title":"2.1.1 LC 215\uff1a\u627e\u51fa\u6570\u7ec4\u4e2d\u7684\u7b2c K \u5927\u5143\u7d20"},{"location":"lesson13/Lesson13%20Python/#_13","text":"\u7ed9\u5b9a\u4e00\u4e2a\u672a\u6392\u5e8f\u7684\u6570\u7ec4\uff0c\u627e\u51fa\u5176\u4e2d\u7b2c K \u5927\u7684\u5143\u7d20\u3002","title":"\u9898\u76ee\u63cf\u8ff0\uff1a"},{"location":"lesson13/Lesson13%20Python/#_14","text":"\u53ef\u4ee5\u5148\u5bf9\u6570\u7ec4\u8fdb\u884c\u964d\u5e8f\u6392\u5e8f\uff0c\u7136\u540e\u76f4\u63a5\u8fd4\u56de\u6392\u597d\u5e8f\u540e\u7684\u6570\u7ec4\u4e2d\u7684\u7b2c K \u4e2a\u5143\u7d20\u3002","title":"\u89e3\u9898\u601d\u8def\uff1a"},{"location":"lesson13/Lesson13%20Python/#_15","text":"class Solution: def findKthLargest(self, nums: List[int], k: int) -> int: # \u5bf9\u6570\u7ec4\u8fdb\u884c\u964d\u5e8f\u6392\u5e8f nums.sort(reverse=True) # \u8fd4\u56de\u7b2c K \u4e2a\u5143\u7d20 return nums[k - 1] \u8bf4\u660e \uff1a \u8fd9\u91cc\u6211\u4eec\u901a\u8fc7\u4f7f\u7528 sort() \u65b9\u6cd5\u7684 reverse=True \u53c2\u6570\uff0c\u5c06\u6570\u7ec4 nums \u6309\u7167\u964d\u5e8f\u6392\u5e8f\u3002 \u7136\u540e\u76f4\u63a5\u8fd4\u56de\u6392\u5e8f\u540e\u7684\u6570\u7ec4\u4e2d\u7684\u7b2c k-1 \u4e2a\u5143\u7d20\uff0c\u5373\u4e3a\u7b2c K \u5927\u7684\u5143\u7d20\u3002","title":"\u4ee3\u7801\u5b9e\u73b0\uff1a"},{"location":"lesson13/Lesson13%20Python/#22","text":"","title":"2.2 \u6392\u5e8f\u7b97\u6cd5\u4e3e\u4e00\u53cd\u4e09"},{"location":"lesson13/Lesson13%20Python/#221-lc-56","text":"","title":"2.2.1 LC 56\uff1a\u5408\u5e76\u533a\u95f4"},{"location":"lesson13/Lesson13%20Python/#_16","text":"\u7ed9\u5b9a\u82e5\u5e72\u4e2a\u95ed\u5408\u533a\u95f4 [x1, y1], [x2, y2], ... \uff0c\u8bf7\u5c06\u6240\u6709\u91cd\u53e0\u7684\u533a\u95f4\u5408\u5e76\u3002\u4f8b\u5982\uff0c\u533a\u95f4 [1, 3] \u548c [2, 6] \u53ef\u4ee5\u5408\u5e76\u4e3a [1, 6] \u3002","title":"\u9898\u76ee\u63cf\u8ff0\uff1a"},{"location":"lesson13/Lesson13%20Python/#_17","text":"\u6392\u5e8f \uff1a\u9996\u5148\uff0c\u6309\u7167\u533a\u95f4\u7684\u8d77\u59cb\u503c\u5bf9\u6240\u6709\u533a\u95f4\u8fdb\u884c\u6392\u5e8f\u3002 \u5408\u5e76 \uff1a\u904d\u5386\u6bcf\u4e2a\u533a\u95f4\uff0c\u82e5\u5f53\u524d\u533a\u95f4\u4e0e\u524d\u4e00\u4e2a\u533a\u95f4\u91cd\u53e0\uff0c\u5219\u5408\u5e76\u5b83\u4eec\uff1b\u5426\u5219\u5c06\u5f53\u524d\u533a\u95f4\u76f4\u63a5\u52a0\u5165\u7ed3\u679c\u5217\u8868\u3002","title":"\u89e3\u9898\u601d\u8def\uff1a"},{"location":"lesson13/Lesson13%20Python/#_18","text":"class Solution: def merge(self, intervals: List[List[int]]) -> List[List[int]]: if not intervals: return [] # \u6309\u533a\u95f4\u8d77\u59cb\u4f4d\u7f6e\u6392\u5e8f intervals.sort(key=lambda x: x[0]) merged = [] for interval in intervals: if not merged or merged[-1][1] < interval[0]: # \u5982\u679c\u7ed3\u679c\u4e3a\u7a7a\u6216\u5f53\u524d\u533a\u95f4\u4e0e\u4e0a\u4e00\u4e2a\u533a\u95f4\u4e0d\u91cd\u53e0\uff0c\u76f4\u63a5\u52a0\u5165\u7ed3\u679c merged.append(interval) else: # \u5982\u679c\u91cd\u53e0\uff0c\u66f4\u65b0\u6700\u540e\u4e00\u4e2a\u533a\u95f4\u7684\u7ed3\u675f\u4f4d\u7f6e merged[-1][1] = max(merged[-1][1], interval[1]) return merged \u8bb2\u89e3 \uff1a \u6392\u5e8f \uff1a\u4f7f\u7528 sort() \u65b9\u6cd5\u548c key=lambda x: x[0] \u6309\u7167\u6bcf\u4e2a\u533a\u95f4\u7684\u8d77\u59cb\u503c\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\u3002 \u904d\u5386\u533a\u95f4 \u5982\u679c merged \u4e3a\u7a7a\uff0c\u6216\u8005\u5f53\u524d\u533a\u95f4\u7684\u8d77\u59cb\u503c\u5927\u4e8e merged \u4e2d\u6700\u540e\u4e00\u4e2a\u533a\u95f4\u7684\u7ed3\u675f\u503c\uff0c\u8bf4\u660e\u6ca1\u6709\u91cd\u53e0\uff0c\u76f4\u63a5\u5c06\u5f53\u524d\u533a\u95f4\u52a0\u5165 merged \u3002 \u5982\u679c\u6709\u91cd\u53e0\uff0c\u66f4\u65b0 merged \u4e2d\u6700\u540e\u4e00\u4e2a\u533a\u95f4\u7684\u7ed3\u675f\u503c\u4e3a\u4e24\u8005\u7ed3\u675f\u503c\u7684\u6700\u5927\u503c\u3002","title":"\u4ee3\u7801\u5b9e\u73b0\uff1a"},{"location":"lesson13/Lesson13%20Python/#222-lc-252","text":"","title":"2.2.2 LC 252\uff1a\u4f1a\u8bae\u5ba4"},{"location":"lesson13/Lesson13%20Python/#_19","text":"\u7ed9\u5b9a\u4e00\u7cfb\u5217\u4f1a\u8bae\u65f6\u95f4\u533a\u95f4\uff0c\u5224\u65ad\u662f\u5426\u80fd\u8ba9\u6240\u6709\u4f1a\u8bae\u65e0\u51b2\u7a81\u5730\u5b89\u6392\u5728\u4e00\u95f4\u4f1a\u8bae\u5ba4\u4e2d\u3002","title":"\u9898\u76ee\u63cf\u8ff0\uff1a"},{"location":"lesson13/Lesson13%20Python/#_20","text":"\u5c06\u6240\u6709\u7684\u4f1a\u8bae\u6309\u7167\u5f00\u59cb\u65f6\u95f4\u6392\u5e8f\uff0c\u7136\u540e\u904d\u5386\u6bcf\u4e2a\u4f1a\u8bae\uff0c\u68c0\u67e5\u662f\u5426\u6709\u91cd\u53e0\u533a\u95f4\u3002","title":"\u89e3\u9898\u601d\u8def\uff1a"},{"location":"lesson13/Lesson13%20Python/#_21","text":"class Solution: def canAttendMeetings(self, intervals: List[List[int]]) -> bool: # \u6309\u4f1a\u8bae\u7684\u5f00\u59cb\u65f6\u95f4\u8fdb\u884c\u6392\u5e8f intervals.sort(key=lambda x: x[0]) # \u904d\u5386\u4f1a\u8bae\uff0c\u68c0\u67e5\u662f\u5426\u5b58\u5728\u91cd\u53e0 for i in range(1, len(intervals)): if intervals[i][0] < intervals[i - 1][1]: return False # \u5b58\u5728\u91cd\u53e0\uff0c\u65e0\u6cd5\u53c2\u52a0\u6240\u6709\u4f1a\u8bae return True # \u65e0\u91cd\u53e0\uff0c\u53ef\u4ee5\u53c2\u52a0\u6240\u6709\u4f1a\u8bae","title":"\u4ee3\u7801\u5b9e\u73b0\uff1a"},{"location":"lesson13/Lesson13%20Python/#_22","text":"\u6392\u5e8f\u4f1a\u8bae \uff1a\u4f7f\u7528 sort() \u65b9\u6cd5\u6309\u4f1a\u8bae\u7684\u5f00\u59cb\u65f6\u95f4\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\uff0c\u65b9\u4fbf\u540e\u7eed\u68c0\u67e5\u3002 \u68c0\u67e5\u91cd\u53e0 \u4ece\u7b2c\u4e8c\u4e2a\u4f1a\u8bae\u5f00\u59cb\uff0c\u6bd4\u8f83\u5f53\u524d\u4f1a\u8bae\u7684\u5f00\u59cb\u65f6\u95f4\u548c\u524d\u4e00\u4e2a\u4f1a\u8bae\u7684\u7ed3\u675f\u65f6\u95f4\u3002 \u5982\u679c\u5f53\u524d\u4f1a\u8bae\u7684\u5f00\u59cb\u65f6\u95f4\u5c0f\u4e8e\u524d\u4e00\u4e2a\u4f1a\u8bae\u7684\u7ed3\u675f\u65f6\u95f4\uff0c\u8bf4\u660e\u4f1a\u8bae\u65f6\u95f4\u6709\u91cd\u53e0\uff0c\u65e0\u6cd5\u53c2\u52a0\u6240\u6709\u4f1a\u8bae\u3002 \u5982\u679c\u6ca1\u6709\u53d1\u73b0\u91cd\u53e0\uff0c\u8fd4\u56de True \u3002","title":"\u8bb2\u89e3\uff1a"},{"location":"lesson13/Lesson13%20Python/#223-lc-347-k","text":"","title":"2.2.3 LC 347\uff1a\u524d K \u4e2a\u9ad8\u9891\u5143\u7d20"},{"location":"lesson13/Lesson13%20Python/#_23","text":"\u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u7684\u6574\u6570\u6570\u7ec4\uff0c\u8fd4\u56de\u5176\u4e2d\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684\u524d K \u4e2a\u5143\u7d20\u3002","title":"\u9898\u76ee\u63cf\u8ff0\uff1a"},{"location":"lesson13/Lesson13%20Python/#_24","text":"1 . \u7edf\u8ba1\u9891\u7387 \uff1a\u4f7f\u7528\u54c8\u5e0c\u8868\uff08\u5b57\u5178\uff09\u624b\u52a8\u7edf\u8ba1\u6bcf\u4e2a\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570\u3002 2. \u81ea\u5b9a\u4e49\u6392\u5e8f \uff1a\u5c06\u54c8\u5e0c\u8868\u4e2d\u7684\u5143\u7d20\u6839\u636e\u5176\u51fa\u73b0\u9891\u7387\u8fdb\u884c\u964d\u5e8f\u6392\u5e8f\u3002 3. \u63d0\u53d6\u7ed3\u679c \uff1a\u5728\u6392\u5e8f\u540e\u7684\u5217\u8868\u4e2d\uff0c\u9009\u53d6\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684\u524d K \u4e2a\u5143\u7d20\u5e76\u8fd4\u56de\u3002","title":"\u89e3\u9898\u601d\u8def\uff1a"},{"location":"lesson13/Lesson13%20Python/#_25","text":"class Solution: def topKFrequent(self, nums: List[int], k: int) -> List[int]: # \u7edf\u8ba1\u6bcf\u4e2a\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570 count = {} for num in nums: if num in count: count[num] += 1 else: count[num] = 1 # \u5bf9\u5b57\u5178\u7684 items \u8fdb\u884c\u6392\u5e8f\uff0c\u6309\u7167\u51fa\u73b0\u9891\u7387\u4ece\u9ad8\u5230\u4f4e\u6392\u5e8f sorted_items = sorted(count.items(), key=lambda x: x[1], reverse=True) # 3 \u9009\u53d6\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684\u524d K \u4e2a\u5143\u7d20 result = [item[0] for item in sorted_items[:k]] return result","title":"\u4ee3\u7801\u5b9e\u73b0\uff1a"},{"location":"lesson13/Lesson13%20Python/#_26","text":"\u7edf\u8ba1\u9891\u7387 \uff1a\u904d\u5386\u6570\u7ec4\u65f6\uff0c\u4f7f\u7528\u5b57\u5178 count \u6765\u8bb0\u5f55\u6bcf\u4e2a\u5143\u7d20\u7684\u51fa\u73b0\u6b21\u6570\u3002\u6bcf\u5f53\u5143\u7d20\u51fa\u73b0\u65f6\uff0c\u5982\u679c\u8be5\u5143\u7d20\u5df2\u7ecf\u5b58\u5728\u4e8e\u5b57\u5178\u4e2d\uff0c\u5219\u5c06\u5bf9\u5e94\u7684\u503c\u52a01\uff1b\u5982\u679c\u8be5\u5143\u7d20\u4e0d\u5b58\u5728\uff0c\u5219\u5c06\u5176\u521d\u59cb\u503c\u8bbe\u4e3a1\u3002 \u6392\u5e8f \uff1a\u901a\u8fc7 sorted() \u51fd\u6570\u5bf9\u5b57\u5178\u4e2d\u7684\u952e\u503c\u5bf9\uff08\u5373 (\u5143\u7d20, \u51fa\u73b0\u6b21\u6570) \u7684\u5143\u7ec4\uff09\u8fdb\u884c\u6392\u5e8f\uff0c key=lambda x: x[1] \u8868\u793a\u6309\u7167\u51fa\u73b0\u6b21\u6570\uff08\u9891\u7387\uff09\u8fdb\u884c\u6392\u5e8f\uff0c reverse=True \u8868\u793a\u4ece\u9ad8\u5230\u4f4e\u6392\u5e8f\u3002 \u63d0\u53d6\u5143\u7d20 \uff1a\u5728\u6392\u5e8f\u540e\u7684\u7ed3\u679c\u4e2d\uff0c\u63d0\u53d6\u524d K \u4e2a\u9891\u7387\u6700\u9ad8\u7684\u5143\u7d20\u3002\u8fd9\u4e00\u6b65\u901a\u8fc7\u5217\u8868\u63a8\u5bfc\u5f0f\u6765\u5b9e\u73b0\uff0c\u53d6\u51fa\u6392\u5e8f\u7ed3\u679c\u4e2d\u7684\u524d K \u4e2a\u5143\u7d20\u7684\u952e\uff0c\u5e76\u5c06\u5176\u5b58\u5165\u7ed3\u679c\u5217\u8868 result \u3002","title":"\u8bb2\u89e3\uff1a"},{"location":"lesson13/Lesson13%20Python/#3_1","text":"\u8d2a\u5fc3\u7b97\u6cd5\u662f\u4e00\u79cd\u89e3\u51b3\u95ee\u9898\u7684 \u7b56\u7565 \uff0c\u5176\u6838\u5fc3\u601d\u60f3\u662f\uff1a\u5728\u89e3\u51b3\u95ee\u9898\u7684\u6bcf\u4e00\u6b65\u4e2d\uff0c\u603b\u662f\u9009\u62e9\u5f53\u524d\u770b\u8d77\u6765 \u6700\u4f18\u7684\u9009\u62e9 \uff0c\u901a\u8fc7\u4e00\u7cfb\u5217\u8fd9\u6837\u7684\u5c40\u90e8\u6700\u4f18\u9009\u62e9\uff0c\u6700\u7ec8\u5e0c\u671b\u83b7\u5f97\u5168\u5c40\u6700\u4f18\u89e3\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c \u8d2a\u5fc3\u7b97\u6cd5\u5e76\u4e0d\u603b\u662f\u80fd\u5f97\u5230\u5168\u5c40\u6700\u4f18\u89e3 \u3002\u5b83\u53ea\u6709\u5728\u67d0\u4e9b\u7279\u5b9a\u95ee\u9898\u4e2d\u6709\u6548\uff0c\u7279\u522b\u662f\u5f53\u95ee\u9898\u6ee1\u8db3\u8d2a\u5fc3\u9009\u62e9\u6027\u8d28\u65f6\u3002","title":"3. \u8d2a\u5fc3\u7b97\u6cd5"},{"location":"lesson13/Lesson13%20Python/#_27","text":"\u5c40\u90e8\u6700\u4f18\u9009\u62e9 \uff1a \u8d2a\u5fc3\u7b97\u6cd5\u5728\u6bcf\u4e00\u6b65\u4e2d\u53ea\u505a\u51fa\u5f53\u524d\u770b\u8d77\u6765\u6700\u4f18\u7684\u9009\u62e9\uff0c\u800c \u4e0d\u5173\u5fc3\u4e4b\u540e\u53ef\u80fd\u53d1\u751f\u7684\u60c5\u51b5 \u3002\u5b83\u4e0d\u4f1a\u8003\u8651\u8fd9\u6b21\u9009\u62e9\u662f\u5426\u4f1a\u5f71\u54cd\u540e\u7eed\u51b3\u7b56\uff0c\u53ea\u770b\u5f53\u4e0b\u54ea\u4e2a\u9009\u9879\u662f\u6700\u6709\u5229\u7684\u3002\u4f8b\u5982\uff0c\u5728\u5206\u6570\u80cc\u5305\u95ee\u9898\u4e2d\uff0c\u8d2a\u5fc3\u7b56\u7565\u662f\u6bcf\u6b21\u4f18\u5148\u9009\u62e9\u5355\u4f4d\u91cd\u91cf\u4ef7\u503c\u6700\u9ad8\u7684\u7269\u54c1\uff0c\u56e0\u4e3a\u5b83\u5728\u5f53\u524d\u7684\u9009\u62e9\u4e2d\u5e26\u6765\u7684\u6536\u76ca\u6700\u5927\u3002 \u4f18\u70b9 \uff1a\u901a\u8fc7\u6bcf\u4e00\u6b65\u7684\u6700\u4f18\u9009\u62e9\uff0c\u53ef\u4ee5\u5feb\u901f\u627e\u5230\u4e00\u4e2a\u53ef\u884c\u89e3\u3002\u8d2a\u5fc3\u7b97\u6cd5\u7684\u89c4\u5219\u7b80\u5355\u3001\u76f4\u89c2\uff0c\u6613\u4e8e\u5b9e\u73b0\uff0c\u901a\u5e38\u53ef\u4ee5\u901a\u8fc7\u4e00\u6b21\u626b\u63cf\u6216\u6392\u5e8f\u89e3\u51b3\u95ee\u9898\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u8f83\u4f4e\u3002\u4f8b\u5982\u5728\u5206\u6570\u80cc\u5305\u95ee\u9898\u4e2d\uff0c\u8d2a\u5fc3\u7b97\u6cd5\u53ea\u9700\u8981\u6309\u5355\u4f4d\u4ef7\u503c\u6392\u5e8f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a (O(n log n)) \u3002 \u7f3a\u70b9 \uff1a\u5c40\u90e8\u6700\u4f18\u89e3\u4e0d\u4e00\u5b9a\u80fd\u4fdd\u8bc1\u5168\u5c40\u6700\u4f18\uff0c\u56e0\u4e3a\u5728\u4e00\u4e9b\u95ee\u9898\u4e2d\uff0c\u6700\u4f73\u7684\u6574\u4f53\u65b9\u6848\u4f9d\u8d56\u4e8e\u591a\u6b65\u51b3\u7b56\u7684\u7efc\u5408\u6548\u679c\uff0c\u800c\u4e0d\u662f\u5355\u7eaf\u7684\u6bcf\u4e00\u6b65\u6700\u4f18\u3002\u8d2a\u5fc3\u7b97\u6cd5\u65e0\u6cd5\u901a\u8fc7\u5c40\u90e8\u6700\u4f18\u89e3\u627e\u5230\u5168\u5c40\u6700\u4f18\u89e3\uff0c\u5c24\u5176\u5728\u590d\u6742\u95ee\u9898\uff08\u5982 0-1 \u80cc\u5305\u95ee\u9898\uff09\u4e2d\uff0c\u5b83\u53ef\u80fd\u4f1a\u9677\u5165\u6b21\u4f18\u89e3\u3002 \u4e0d\u53ef\u56de\u6eaf \uff1a \u8d2a\u5fc3\u7b97\u6cd5\u7684\u4e00\u4e2a\u91cd\u8981\u7279\u70b9\u662f \u51b3\u7b56\u4e0d\u53ef\u56de\u5934\u4fee\u6539 \u3002\u4e00\u65e6\u505a\u51fa\u67d0\u4e2a\u9009\u62e9\uff0c\u7b97\u6cd5\u5c31\u4e0d\u4f1a\u518d\u8003\u8651\u6539\u53d8\u5b83\uff0c\u5373\u4f7f\u540e\u7eed\u53d1\u73b0\u8fd9\u4e2a\u9009\u62e9\u53ef\u80fd\u4e0d\u662f\u6700\u4f18\u7684\u3002\u56e0\u4e3a\u8d2a\u5fc3\u7b97\u6cd5\u4f9d\u8d56\u7684\u662f\u5f53\u524d\u6700\u4f18\u9009\u62e9\u7684\u7b56\u7565\uff0c\u6240\u4ee5\u5b83\u4e0d\u4f1a\u4e3a\u672a\u6765\u7684\u9009\u62e9\u7559\u4e0b\u56de\u65cb\u4f59\u5730\u3002 \u4f18\u70b9 \uff1a\u7531\u4e8e\u4e0d\u9700\u8981\u56de\u6eaf\uff0c\u8d2a\u5fc3\u7b97\u6cd5\u6267\u884c\u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u901a\u5e38\u6bd4\u9700\u8981\u56de\u6eaf\u7684\u7b97\u6cd5\uff08\u5982\u52a8\u6001\u89c4\u5212\u3001\u56de\u6eaf\u6cd5\u7b49\uff09\u66f4\u4f4e\u3002\u8d2a\u5fc3\u7b97\u6cd5\u7684\u9ad8\u6548\u6027\u4f53\u73b0\u5728\u5176\u5feb\u901f\u3001\u76f4\u63a5\u7684\u89e3\u51b3\u601d\u8def\u4e0a\uff0c\u9002\u7528\u4e8e\u5904\u7406\u5927\u89c4\u6a21\u95ee\u9898\u65f6\u7684\u9ad8\u6548\u6c42\u89e3\u3002 \u7f3a\u70b9 \uff1a\u7531\u4e8e\u8d2a\u5fc3\u7b97\u6cd5\u4e0d\u5177\u5907\u56de\u6eaf\u80fd\u529b\uff0c\u5b83\u53ea\u80fd\u5728\u7b26\u5408\u8d2a\u5fc3\u9009\u62e9\u6027\u8d28\u7684\u95ee\u9898\u4e2d\u6709\u6548\u3002\u5982\u679c\u95ee\u9898\u4e0d\u6ee1\u8db3\u8fd9\u79cd\u6027\u8d28\uff0c\u7b97\u6cd5\u53ef\u80fd\u4f1a\u5728\u540e\u7eed\u6b65\u9aa4\u4e2d\u9677\u5165\u6b21\u4f18\u89e3\u6216\u6b7b\u80e1\u540c\uff0c\u65e0\u6cd5\u8fbe\u5230\u5168\u5c40\u6700\u4f18\u89e3\u3002","title":"\u8d2a\u5fc3\u7b97\u6cd5\u7684\u7279\u70b9"},{"location":"lesson13/Lesson13%20Python/#_28","text":"\u8d2a\u5fc3\u7b97\u6cd5\u901a\u5e38\u9075\u5faa\u4ee5\u4e0b\u57fa\u672c\u6b65\u9aa4\uff1a \u660e\u786e\u8d2a\u5fc3\u7b56\u7565 \uff1a\u786e\u5b9a\u6bcf\u4e00\u6b65\u7684\u5c40\u90e8\u6700\u4f18\u89e3\u9009\u62e9\u7b56\u7565\u3002 \u6392\u5e8f \uff1a\u5982\u679c\u95ee\u9898\u6d89\u53ca\u591a\u4e2a\u9009\u62e9\uff0c\u901a\u5e38\u9700\u8981\u5bf9\u5176\u8fdb\u884c\u6392\u5e8f\uff08\u5982\u6309\u7ed3\u675f\u65f6\u95f4\u3001\u5355\u4f4d\u4ef7\u503c\u7b49\uff09\u3002 \u9010\u6b65\u9009\u62e9 \uff1a\u6839\u636e\u8d2a\u5fc3\u7b56\u7565\uff0c\u6309\u7167\u6392\u5e8f\u7ed3\u679c\u9010\u6b65\u9009\u62e9\u6700\u4f18\u9879\u3002 \u68c0\u67e5\u53ef\u884c\u6027 \uff1a\u6bcf\u6b21\u9009\u62e9\u65f6\uff0c\u786e\u4fdd\u5f53\u524d\u9009\u62e9\u6ee1\u8db3\u95ee\u9898\u7684\u7ea6\u675f\u6761\u4ef6\uff08\u5982\u4e0d\u51b2\u7a81\u3001\u4e0d\u8d85\u51fa\u5bb9\u91cf\u7b49\uff09\u3002 \u6784\u9020\u89e3 \uff1a\u5c06\u6240\u6709\u7684\u9009\u62e9\u7ec4\u5408\u8d77\u6765\uff0c\u5f62\u6210\u95ee\u9898\u7684\u6700\u7ec8\u89e3\u3002","title":"\u5177\u4f53\u6b65\u9aa4"},{"location":"lesson13/Lesson13%20Python/#_29","text":"\u8981\u5224\u65ad\u4e00\u4e2a\u95ee\u9898\u662f\u5426\u9002\u5408\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u53ef\u4ee5\u89c2\u5bdf\u4ee5\u4e0b\u7279\u5f81\uff1a \u8d2a\u5fc3\u9009\u62e9\u6027\u8d28 \uff1a\u5728\u6bcf\u4e00\u6b65\u4e2d\uff0c\u9009\u62e9\u7684\u5c40\u90e8\u6700\u4f18\u89e3\u80fd\u591f\u4fdd\u8bc1\u4e0d\u4f1a\u5f71\u54cd\u540e\u7eed\u9009\u62e9\u7684\u6700\u4f18\u6027\uff0c\u5373\u8d2a\u5fc3\u9009\u62e9\u5728\u6bcf\u4e00\u6b65\u90fd\u80fd\u4fdd\u6301\u5168\u5c40\u6700\u4f18\u3002 \u65e0\u540e\u6548\u6027 \uff1a\u5f53\u524d\u7684\u9009\u62e9\u4e0d\u4f1a\u5f71\u54cd\u672a\u6765\u7684\u9009\u62e9\u3002\u6bcf\u4e2a\u9009\u62e9\u7684\u7ed3\u679c\u53ea\u4f9d\u8d56\u5f53\u524d\u72b6\u6001\uff0c\u800c\u4e0d\u4f1a\u4f9d\u8d56\u4e4b\u524d\u7684\u51b3\u7b56\u3002\u5373\u4e00\u65e6\u505a\u51fa\u4e86\u67d0\u4e2a\u9009\u62e9\uff0c\u8be5\u9009\u62e9\u5c31\u4e0d\u53ef\u6539\u53d8\u3002 \u5982\u679c\u95ee\u9898\u6ee1\u8db3\u4ee5\u4e0a\u4e24\u70b9\uff0c\u90a3\u4e48\u901a\u5e38\u53ef\u4ee5\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\u6c42\u89e3\u3002","title":"\u8d2a\u5fc3\u7b97\u6cd5\u7684\u9002\u7528\u6761\u4ef6"},{"location":"lesson13/Lesson13%20Python/#vs","text":"\u5728\u533a\u5206\u4e00\u4e2a\u95ee\u9898\u662f\u5426\u9002\u5408\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\u6216\u52a8\u6001\u89c4\u5212\u65f6\uff0c \u6700\u4f18\u5b50\u7ed3\u6784 \u548c \u5b50\u95ee\u9898\u91cd\u53e0 \u662f\u5173\u952e\u7684\u5224\u5b9a\u6807\u51c6\uff1a \u8d2a\u5fc3\u9009\u62e9\u7684\u9002\u7528\u6761\u4ef6 \uff1a \u5c40\u90e8\u6700\u4f18\u9009\u62e9\u6027\u8d28 \uff1a\u8d2a\u5fc3\u7b97\u6cd5\u6bcf\u4e00\u6b65\u505a\u51fa\u7684\u9009\u62e9\u90fd\u662f\u5c40\u90e8\u6700\u4f18\u89e3\uff0c\u4e14\u8fd9\u4e9b\u5c40\u90e8\u6700\u4f18\u89e3\u6784\u6210\u4e86\u5168\u5c40\u6700\u4f18\u89e3\u3002\u8fd9\u79cd\u6027\u8d28\u4e00\u822c\u5b58\u5728\u4e8e\u53ef\u4ee5\u901a\u8fc7\u9010\u6b65\u9009\u62e9\u89e3\u51b3\u7684 \u7b80\u5355\u4f18\u5316\u95ee\u9898 \u3002 \u65e0\u540e\u6548\u6027 \uff1a\u672a\u6765\u7684\u51b3\u7b56\u4e0d\u4f9d\u8d56\u4e8e\u4e4b\u524d\u7684\u9009\u62e9\uff0c\u56e0\u6b64\u4e00\u65e6\u505a\u51fa\u4e86\u9009\u62e9\uff0c\u4e0d\u9700\u8981\u56de\u6eaf\u68c0\u67e5\u3002\u4f8b\u5982\uff0c \u5206\u6570\u80cc\u5305\u95ee\u9898 \uff0c\u6bcf\u6b21\u9009\u62e9\u5355\u4f4d\u4ef7\u503c\u6700\u9ad8\u7684\u7269\u54c1\u4e0d\u4f1a\u5f71\u54cd\u4e4b\u540e\u7684\u9009\u62e9\u3002 \u52a8\u6001\u89c4\u5212\u7684\u9002\u7528\u6761\u4ef6 \uff1a \u6700\u4f18\u5b50\u7ed3\u6784 \uff1a\u5168\u5c40\u6700\u4f18\u89e3\u4f9d\u8d56\u4e8e\u5b50\u95ee\u9898\u7684\u6700\u4f18\u89e3\u3002\u5982\u679c\u6bcf\u4e2a\u5b50\u95ee\u9898\u7684\u89e3\u90fd\u5f71\u54cd\u5230\u5168\u5c40\u6700\u4f18\u89e3\uff0c\u90a3\u4e48\u8fd9\u79cd\u95ee\u9898\u901a\u5e38\u9700\u8981\u4f7f\u7528\u52a8\u6001\u89c4\u5212\u6765\u89e3\u51b3\u3002\u80cc\u5305\u95ee\u9898\u4e2d\u7684 0-1 \u80cc\u5305\u95ee\u9898 \u5c31\u5c5e\u4e8e\u6b64\u7c7b\u95ee\u9898\uff0c\u5f53\u524d\u7269\u54c1\u662f\u5426\u9009\u5165\u80cc\u5305\u4f1a\u5f71\u54cd\u672a\u6765\u7684\u9009\u62e9\uff0c\u56e0\u6b64\u65e0\u6cd5\u7b80\u5355\u901a\u8fc7\u8d2a\u5fc3\u7b56\u7565\u5f97\u5230\u6700\u4f18\u89e3\u3002 \u5b50\u95ee\u9898\u91cd\u53e0 \uff1a\u5982\u679c\u95ee\u9898\u53ef\u4ee5\u88ab\u62c6\u5206\u4e3a\u591a\u4e2a\u5b50\u95ee\u9898\uff0c\u4e14\u8fd9\u4e9b\u5b50\u95ee\u9898\u4e4b\u95f4\u5b58\u5728\u91cd\u53e0\uff08\u5373\u67d0\u4e2a\u5b50\u95ee\u9898\u7684\u89e3\u4f1a\u591a\u6b21\u88ab\u4f7f\u7528\uff09\uff0c\u90a3\u4e48\u52a8\u6001\u89c4\u5212\u662f\u66f4\u6709\u6548\u7684\u9009\u62e9\u3002 \u603b\u7ed3\u6765\u770b\uff0c\u5982\u679c\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u5355\u7eaf\u7684 \u5c40\u90e8\u6700\u4f18\u9009\u62e9 \u89e3\u51b3\uff0c\u5e76\u4e14\u672a\u6765\u7684\u9009\u62e9\u4e0d\u4f9d\u8d56\u4e8e\u8fc7\u53bb\u7684\u9009\u62e9\uff0c\u901a\u5e38\u53ef\u4ee5\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\uff1b\u5426\u5219\u9700\u8981\u901a\u8fc7\u52a8\u6001\u89c4\u5212\u6765\u89e3\u51b3\u95ee\u9898\u3002","title":"\u8d2a\u5fc3\u7b97\u6cd5 vs \u52a8\u6001\u89c4\u5212\u7684\u5224\u5b9a\u6807\u51c6"},{"location":"lesson13/Lesson13%20Python/#_30","text":"","title":"\u7b80\u5355\u4f8b\u5b50"},{"location":"lesson13/Lesson13%20Python/#1_2","text":"\u95ee\u9898\u63cf\u8ff0 \uff1a\u4f60\u6709\u4e00\u4e2a\u5bb9\u91cf\u4e3a 50 \u7684\u80cc\u5305\uff0c\u548c\u4e00\u5806\u7269\u54c1\uff0c\u6bcf\u4ef6\u7269\u54c1\u90fd\u6709\u91cd\u91cf\u548c\u4ef7\u503c\u3002\u4f60\u53ef\u4ee5\u5c06\u6bcf\u4ef6\u7269\u54c1\u6309\u4efb\u610f\u6bd4\u4f8b\u88c5\u5165\u80cc\u5305\uff08\u4f8b\u5982\u53ef\u4ee5\u88c5\u5165\u7269\u54c1\u7684\u4e00\u90e8\u5206\uff09\uff0c\u76ee\u6807\u662f\u8ba9\u80cc\u5305\u91cc\u7684\u7269\u54c1\u603b\u4ef7\u503c\u6700\u5927\u5316\u3002 \u8d2a\u5fc3\u7b56\u7565 \uff1a\u4f18\u5148\u9009\u62e9\u5355\u4f4d\u91cd\u91cf\u4ef7\u503c\u6700\u9ad8\u7684\u7269\u54c1\uff0c\u5c3d\u53ef\u80fd\u591a\u5730\u88c5\u5165\u80cc\u5305\u3002","title":"1. \u5206\u6570\u80cc\u5305\u95ee\u9898\uff08\u8d2a\u5fc3\u7b97\u6cd5\uff09"},{"location":"lesson13/Lesson13%20Python/#_31","text":"\u660e\u786e\u8d2a\u5fc3\u7b56\u7565 \uff1a\u6bcf\u6b21\u9009\u62e9\u5355\u4f4d\u91cd\u91cf\u4ef7\u503c\u6700\u9ad8\u7684\u7269\u54c1\uff0c\u5c3d\u53ef\u80fd\u591a\u88c5\u5165\u80cc\u5305\u3002 \u6392\u5e8f \uff1a\u5c06\u6240\u6709\u7269\u54c1\u6309\u7167\u5355\u4f4d\u91cd\u91cf\u7684\u4ef7\u503c\u4ece\u9ad8\u5230\u4f4e\u6392\u5e8f\u3002 \u9010\u6b65\u9009\u62e9 \uff1a\u6309\u7167\u6392\u5e8f\u540e\u7684\u987a\u5e8f\uff0c\u4f18\u5148\u9009\u62e9\u5355\u4f4d\u4ef7\u503c\u6700\u9ad8\u7684\u7269\u54c1\uff0c\u76f4\u5230\u80cc\u5305\u88c5\u6ee1\u3002 \u68c0\u67e5\u53ef\u884c\u6027 \uff1a\u6bcf\u6b21\u9009\u62e9\u7269\u54c1\u65f6\uff0c\u68c0\u67e5\u80cc\u5305\u5269\u4f59\u5bb9\u91cf\u662f\u5426\u8db3\u591f\u3002\u5982\u679c\u5bb9\u91cf\u4e0d\u8db3\uff0c\u5c06\u7269\u54c1\u7684\u4e00\u90e8\u5206\u88c5\u5165\u80cc\u5305\u3002 \u6784\u9020\u89e3 \uff1a\u5c06\u9009\u5165\u80cc\u5305\u7684\u7269\u54c1\u7ec4\u5408\u8d77\u6765\uff0c\u8ba1\u7b97\u603b\u4ef7\u503c\uff0c\u5f97\u5230\u95ee\u9898\u7684\u89e3\u3002","title":"\u5206\u6790\u6b65\u9aa4\uff1a"},{"location":"lesson13/Lesson13%20Python/#2-0-1","text":"\u95ee\u9898\u63cf\u8ff0 \uff1a\u4f60\u6709\u4e00\u4e2a\u5bb9\u91cf\u4e3a 50 \u7684\u80cc\u5305\u548c\u4e00\u5806\u7269\u54c1\uff0c\u6bcf\u4ef6\u7269\u54c1\u90fd\u6709\u4e00\u4e2a\u786e\u5b9a\u7684\u91cd\u91cf\u548c\u4ef7\u503c\u3002\u4f60\u53ea\u80fd\u9009\u62e9 \u5c06\u67d0\u4ef6\u7269\u54c1\u5b8c\u5168\u653e\u5165\u80cc\u5305 \u6216\u8005 \u4e0d\u653e\u5165 \uff0c\u4e0d\u80fd\u53ea\u88c5\u4e00\u90e8\u5206\u3002\u76ee\u6807\u662f\u9009\u62e9\u4e00\u4e9b\u7269\u54c1\u653e\u5165\u80cc\u5305\uff0c\u4f7f\u5f97\u80cc\u5305\u4e2d\u7684\u7269\u54c1\u603b\u4ef7\u503c\u6700\u5927\u5316\u3002 \u52a8\u6001\u89c4\u5212\u601d\u8def \uff1a\u5bf9\u4e8e\u6bcf\u4ef6\u7269\u54c1\uff0c\u4f60\u9700\u8981\u51b3\u5b9a\u662f\u5426\u653e\u5165\u80cc\u5305\u3002\u6bcf\u6b21\u7684\u9009\u62e9\u90fd\u4f9d\u8d56\u4e8e\u80cc\u5305\u5f53\u524d\u7684\u5bb9\u91cf\u4ee5\u53ca\u4e4b\u524d\u7684\u9009\u62e9\u3002\u56e0\u4e3a\u9009\u62e9\u4e00\u6b21\u7269\u54c1\u4f1a\u5f71\u54cd\u5230\u540e\u7eed\u80fd\u88c5\u591a\u5c11\u4e1c\u897f\uff0c\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u800c\u9700\u8981\u901a\u8fc7\u52a8\u6001\u89c4\u5212\u6765\u8003\u8651\u6240\u6709\u53ef\u80fd\u7684\u7ec4\u5408\u3002","title":"2. 0-1 \u80cc\u5305\u95ee\u9898\uff08\u52a8\u6001\u89c4\u5212\uff09"},{"location":"lesson13/Lesson13%20Python/#_32","text":"\u72b6\u6001 \uff1a\u6211\u4eec\u7528 dp[i][w] \u8868\u793a \u524d i \u4e2a\u7269\u54c1 \u5728 \u5bb9\u91cf\u4e3a w \u7684\u80cc\u5305 \u4e2d\u6240\u80fd\u88c5\u7684\u6700\u5927\u603b\u4ef7\u503c\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c dp[i][w] \u662f\u4e00\u4e2a\u4e2d\u95f4\u7ed3\u679c\uff0c\u544a\u8bc9\u6211\u4eec\u5982\u679c\u53ea\u8003\u8651\u524d i \u4e2a\u7269\u54c1\uff0c\u5e76\u4e14\u80cc\u5305\u5bb9\u91cf\u4e3a w\uff0c\u6211\u4eec\u80fd\u88c5\u7684\u6700\u9ad8\u4ef7\u503c\u662f\u591a\u5c11\u3002 \u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b \uff1a\u8fd9\u4e2a\u5c31\u662f\u52a8\u6001\u89c4\u5212\u4e2d\u7684\u201c\u89c4\u5219\u201d\uff0c\u7528\u6765\u6307\u5bfc\u6211\u4eec\u5982\u4f55\u6839\u636e\u524d\u9762\u7684\u8ba1\u7b97\u7ed3\u679c\u63a8\u5bfc\u51fa\u5f53\u524d\u7684\u6700\u4f18\u89e3\u3002 \u5bf9\u4e8e\u6bcf\u4ef6\u7269\u54c1 i \uff0c\u4f60\u6709\u4e24\u79cd\u9009\u62e9\uff1a \u4e0d\u9009\u8fd9\u4ef6\u7269\u54c1 \uff1a\u90a3\u4e48\u6700\u5927\u4ef7\u503c\u5c31\u662f dp[i-1][w] \uff0c\u5373\u80cc\u5305\u5bb9\u91cf\u4fdd\u6301\u4e0d\u53d8\uff0c\u524d\u9762 i-1 \u4e2a\u7269\u54c1\u7684\u6700\u4f18\u89e3\u3002 \u9009\u8fd9\u4ef6\u7269\u54c1 \uff1a\u5982\u679c\u9009\u62e9\u7269\u54c1 i \uff0c\u5219\u5f53\u524d\u7684\u80cc\u5305\u5bb9\u91cf\u51cf\u5c11 weight[i] \uff0c\u800c\u6211\u4eec\u8fd8\u83b7\u5f97\u4e86 value[i] \u8fd9\u4e2a\u7269\u54c1\u7684\u4ef7\u503c\u3002\u6240\u4ee5\u6700\u5927\u4ef7\u503c\u53d8\u6210\u4e86 dp[i-1][w - weight[i]] + value[i] \u3002 \u4e24\u8005\u53d6\u8f83\u5927\u503c\uff1a dp[i][w] = max(dp[i-1][w], dp[i-1][w - weight[i]] + value[i]) \u7406\u89e3\u8fd9\u6bb5\u516c\u5f0f \uff1a \u5982\u679c\u4f60\u4e0d\u9009\u7269\u54c1 i \uff0c\u90a3\u4e48\u4f60\u53ea\u80fd\u4f9d\u8d56\u524d\u9762 i-1 \u4e2a\u7269\u54c1\u5728\u5bb9\u91cf\u4e3a w \u65f6\u7684\u6700\u4f18\u89e3\uff0c\u5373 dp[i-1][w] \u3002 \u5982\u679c\u4f60\u9009\u4e86\u7269\u54c1 i \uff0c\u90a3\u4f60\u9700\u8981\u817e\u51fa\u8db3\u591f\u7684\u7a7a\u95f4\u6765\u653e\u5b83\uff0c\u4e5f\u5c31\u662f\u8bf4\u80cc\u5305\u5bb9\u91cf\u4f1a\u51cf\u5c11 weight[i] \uff0c\u7136\u540e\u4f60\u80fd\u83b7\u5f97\u8fd9\u4ef6\u7269\u54c1\u7684\u4ef7\u503c value[i] \uff0c\u518d\u52a0\u4e0a\u524d i-1 \u4e2a\u7269\u54c1\u5728\u51cf\u5c11\u4e86\u7684\u5bb9\u91cf w - weight[i] \u65f6\u7684\u6700\u4f18\u89e3\uff0c\u5373 dp[i-1][w - weight[i]] \u3002 \u5982\u4f55\u6c42\u89e3 \uff1a\u6211\u4eec\u4ece\u7a7a\u80cc\u5305\u5f00\u59cb\uff0c\u9010\u6b65\u589e\u52a0\u7269\u54c1\u548c\u5bb9\u91cf\uff0c\u6bcf\u6b21\u7528\u4e0a\u9762\u8fd9\u4e2a\u516c\u5f0f\u53bb\u66f4\u65b0\u5f53\u524d\u80cc\u5305\u5bb9\u91cf\u7684\u6700\u4f18\u89e3\u3002\u901a\u8fc7\u8fd9\u4e2a\u9012\u63a8\u8fc7\u7a0b\uff0c\u6700\u540e\u5c31\u80fd\u5f97\u5230\u6574\u4e2a\u80cc\u5305\u7684\u6700\u5927\u4ef7\u503c\u3002","title":"\u7528\u7b80\u5355\u7684\u8bdd\u6765\u7406\u89e3\u52a8\u6001\u89c4\u5212\u7684\u601d\u8def\uff1a"},{"location":"lesson13/Lesson13%20Python/#_33","text":"\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u80cc\u5305\u5bb9\u91cf\u4e3a 5\uff0c\u7269\u54c1\u5982\u4e0b\uff1a \u7269\u54c1 1\uff1a\u91cd\u91cf 2\uff0c\u4ef7\u503c 3 \u7269\u54c1 2\uff1a\u91cd\u91cf 3\uff0c\u4ef7\u503c 4 \u7269\u54c1 3\uff1a\u91cd\u91cf 4\uff0c\u4ef7\u503c 5 \u52a8\u6001\u89c4\u5212\u8868\u7684\u6784\u5efa\u8fc7\u7a0b \uff1a i\\w 0 1 2 3 4 5 0 0 0 0 0 0 0 1 0 0 3 3 3 3 2 0 0 3 4 4 7 3 0 0 3 4 5 7 \u5f53 i = 1 \uff08\u53ea\u8003\u8651\u7269\u54c11\uff09\uff1a\u7269\u54c11\u7684\u91cd\u91cf\u4e3a2\uff0c\u6240\u4ee5\u5f53\u80cc\u5305\u5bb9\u91cf\u5c0f\u4e8e2\u65f6\uff0c\u65e0\u6cd5\u653e\u5165\uff0c\u4ef7\u503c\u4e3a0\uff1b\u5f53\u5bb9\u91cf\u7b49\u4e8e2\u6216\u5927\u4e8e2\u65f6\uff0c\u653e\u5165\u7269\u54c11\uff0c\u4ef7\u503c\u4e3a3\u3002 \u5f53 i = 2 \uff08\u8003\u8651\u524d\u4e24\u4e2a\u7269\u54c1\uff09\uff1a\u5728\u5bb9\u91cf\u4e3a3\u65f6\uff0c\u653e\u5165\u7269\u54c12\u6bd4\u7269\u54c11\u597d\uff0c\u4ef7\u503c\u4e3a4\uff1b\u5f53\u5bb9\u91cf\u4e3a5\u65f6\uff0c\u653e\u5165\u7269\u54c11\u548c\u7269\u54c12\uff0c\u4ef7\u503c\u4e3a7\u3002 \u5f53 i = 3 \uff08\u8003\u8651\u4e09\u4e2a\u7269\u54c1\uff09\uff1a\u7269\u54c13\u592a\u91cd\uff0c\u4e0d\u80fd\u653e\u5165\u80cc\u5305\uff0c\u4e4b\u524d\u7684\u6700\u4f18\u503c\u4fdd\u6301\u4e0d\u53d8\u3002 \u6700\u7ec8\uff0c\u6211\u4eec\u5f97\u5230\u7684\u6700\u5927\u4ef7\u503c\u4e3a7\u3002","title":"\u4e3e\u4e2a\u7b80\u5355\u4f8b\u5b50\uff1a"},{"location":"lesson13/Lesson13%20Python/#3_2","text":"\u95ee\u9898 \uff1a\u4f60\u6709\u4e00\u7cfb\u5217\u6d3b\u52a8\uff0c\u6bcf\u4e2a\u6d3b\u52a8\u90fd\u6709\u5f00\u59cb\u65f6\u95f4\u548c\u7ed3\u675f\u65f6\u95f4\u3002\u4f60\u9700\u8981\u9009\u62e9\u5c3d\u53ef\u80fd\u591a\u7684\u6d3b\u52a8\uff0c\u5e76\u4e14\u8fd9\u4e9b\u6d3b\u52a8\u4e0d\u80fd\u91cd\u53e0\u3002 \u8d2a\u5fc3\u7b56\u7565 \uff1a\u6bcf\u6b21\u9009\u62e9\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u4e14\u4e0d\u4e0e\u5176\u4ed6\u6d3b\u52a8\u51b2\u7a81\u7684\u6d3b\u52a8\u3002 \u6b65\u9aa4 \uff1a \u660e\u786e\u8d2a\u5fc3\u7b56\u7565 \uff1a\u6bcf\u6b21\u9009\u62e9\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u7684\u6d3b\u52a8\uff0c\u4ee5\u7559\u51fa\u66f4\u591a\u65f6\u95f4\u7ed9\u5176\u4ed6\u6d3b\u52a8\u3002 \u6392\u5e8f \uff1a\u5c06\u6d3b\u52a8\u6309\u7ed3\u675f\u65f6\u95f4\u4ece\u65e9\u5230\u665a\u6392\u5e8f\u3002 \u9010\u6b65\u9009\u62e9 \uff1a\u4ece\u7b2c\u4e00\u4e2a\u6d3b\u52a8\u5f00\u59cb\uff0c\u4f9d\u6b21\u9009\u62e9\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u4e14\u4e0e\u4e4b\u524d\u6d3b\u52a8\u4e0d\u51b2\u7a81\u7684\u6d3b\u52a8\u3002 \u68c0\u67e5\u53ef\u884c\u6027 \uff1a\u6bcf\u6b21\u9009\u62e9\u6d3b\u52a8\u65f6\uff0c\u68c0\u67e5\u8be5\u6d3b\u52a8\u662f\u5426\u4e0e\u5df2\u7ecf\u9009\u62e9\u7684\u6d3b\u52a8\u51b2\u7a81\u3002 \u6784\u9020\u89e3 \uff1a\u5c06\u6bcf\u6b21\u9009\u62e9\u7684\u6d3b\u52a8\u52a0\u5165\u6700\u7ec8\u89e3\uff0c\u76f4\u5230\u6ca1\u6709\u6d3b\u52a8\u53ef\u4ee5\u518d\u9009\u3002","title":"3. \u6d3b\u52a8\u9009\u62e9\u95ee\u9898\uff08\u8d2a\u5fc3\u7b97\u6cd5\uff09"},{"location":"lesson13/Lesson13%20Python/#_34","text":"\u8d2a\u5fc3\u7b97\u6cd5\u5e76\u4e0d\u603b\u662f\u80fd\u627e\u5230\u6700\u4f18\u89e3\u3002\u6bd4\u5982\uff1a","title":"\u8d2a\u5fc3\u7b97\u6cd5\u7684\u5c40\u9650\u6027"},{"location":"lesson13/Lesson13%20Python/#1-0-1","text":"\u5728\u8fd9\u4e2a\u95ee\u9898\u4e2d\uff0c\u4f60\u5fc5\u987b\u9009\u62e9 \u5b8c\u6574\u7684\u7269\u54c1 \uff08\u8981\u4e48\u5168\u9009\uff0c\u8981\u4e48\u4e0d\u9009\uff09\uff0c\u800c\u4e0d\u80fd\u9009\u62e9\u7269\u54c1\u7684\u4e00\u90e8\u5206\u3002\u5982\u679c\u4f60\u4f7f\u7528\u8d2a\u5fc3\u7b97\u6cd5\u6765\u9009\u62e9\u5355\u4f4d\u4ef7\u503c\u6700\u9ad8\u7684\u7269\u54c1\uff0c\u5f88\u53ef\u80fd\u4f1a\u56e0\u4e3a\u91cd\u91cf\u9650\u5236\u800c\u65e0\u6cd5\u9009\u62e9\u6700\u4f18\u7ec4\u5408\u3002","title":"1. 0-1 \u80cc\u5305\u95ee\u9898"},{"location":"lesson13/Lesson13%20Python/#2_2","text":"\u5728\u67d0\u4e9b\u56fe\u4e0a\uff0c\u8d2a\u5fc3\u7b56\u7565\uff08\u603b\u662f\u9009\u62e9\u8ddd\u79bb\u6700\u8fd1\u7684\u8282\u70b9\uff09\u5e76\u4e0d\u603b\u80fd\u627e\u5230\u6700\u77ed\u8def\u5f84\u3002","title":"2. \u6700\u77ed\u8def\u5f84\u95ee\u9898"},{"location":"lesson13/Lesson13%20Python/#_35","text":"\u8d2a\u5fc3\u7b97\u6cd5\u662f\u4e00\u79cd\u7b80\u5355\u800c\u9ad8\u6548\u7684\u7b56\u7565\uff0c\u9002\u5408\u7528\u5728\u90a3\u4e9b \u53ef\u4ee5\u901a\u8fc7\u5c40\u90e8\u6700\u4f18\u89e3\u5f97\u5230\u5168\u5c40\u6700\u4f18\u89e3 \u7684\u95ee\u9898\u4e0a\u3002\u5b83\u7684\u5173\u952e\u5728\u4e8e\u6bcf\u4e00\u6b65\u90fd\u505a\u51fa\u6700\u597d\u7684\u5c40\u90e8\u9009\u62e9\uff0c\u5e0c\u671b\u6700\u7ec8\u5f97\u5230\u6700\u4f18\u89e3\u3002\u867d\u7136\u5e76\u4e0d\u662f\u6240\u6709\u95ee\u9898\u90fd\u9002\u5408\u7528\u8d2a\u5fc3\u7b97\u6cd5\uff0c\u4f46\u5728\u5408\u9002\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u80fd\u5feb\u901f\u627e\u5230\u89e3\u3002","title":"\u603b\u7ed3\uff1a"},{"location":"lesson13/Lesson13%20Python/#31","text":"","title":"3.1 \u8d2a\u5fc3\u7b97\u6cd5\u4f8b\u9898\u8bb2\u89e3"},{"location":"lesson13/Lesson13%20Python/#311-lc-455","text":"\u9898\u76ee\u63cf\u8ff0 \uff1a\u6709 g \u4e2a\u5b69\u5b50\u548c s \u4e2a\u997c\u5e72\uff0c\u6bcf\u4e2a\u5b69\u5b50\u90fd\u6709\u4e00\u4e2a\u8d2a\u5fc3\u6307\u6570\uff0c\u8868\u793a\u4ed6\u6700\u5c11\u9700\u8981\u591a\u5c11\u997c\u5e72\u3002\u6bcf\u4e2a\u997c\u5e72\u90fd\u6709\u4e00\u4e2a\u5927\u5c0f\uff0c\u8868\u793a\u5b83\u53ef\u4ee5\u6ee1\u8db3\u67d0\u4e2a\u5b69\u5b50\u7684\u9700\u6c42\u3002\u4f60\u8981\u5206\u53d1\u5c3d\u53ef\u80fd\u591a\u7684\u997c\u5e72\u7ed9\u5b69\u5b50\uff0c\u4f7f\u5f97\u6700\u591a\u7684\u5b69\u5b50\u80fd\u5f97\u5230\u6ee1\u8db3\u3002 \u8d2a\u5fc3\u7b97\u6cd5\u6b65\u9aa4 \uff1a \u6392\u5e8f \uff1a\u5c06\u5b69\u5b50\u7684\u9700\u6c42\uff08\u8d2a\u5fc3\u6307\u6570\uff09\u548c\u997c\u5e72\u7684\u5927\u5c0f\u90fd\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\u3002 \u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u6211\u4eec\u53ef\u4ee5\u7528\u6700\u5c0f\u7684\u997c\u5e72\u53bb\u6ee1\u8db3\u6700\u5c0f\u9700\u6c42\u7684\u5b69\u5b50\uff0c\u4ece\u800c\u5c3d\u53ef\u80fd\u6ee1\u8db3\u66f4\u591a\u7684\u5b69\u5b50\u3002 \u5339\u914d \uff1a\u4ece\u6700\u5c0f\u7684\u997c\u5e72\u548c\u6700\u5c0f\u9700\u6c42\u7684\u5b69\u5b50\u5f00\u59cb\u5339\u914d\u3002 \u6bcf\u6b21\u5982\u679c\u997c\u5e72\u5927\u5c0f\u53ef\u4ee5\u6ee1\u8db3\u5f53\u524d\u5b69\u5b50\u7684\u9700\u6c42\uff0c\u5c31\u5c06\u8fd9\u4e2a\u997c\u5e72\u5206\u914d\u7ed9\u8fd9\u4e2a\u5b69\u5b50\uff0c\u7136\u540e\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u5b69\u5b50\u3002 \u5982\u679c\u5f53\u524d\u997c\u5e72\u4e0d\u591f\u6ee1\u8db3\u5b69\u5b50\u9700\u6c42\uff0c\u5c31\u7ee7\u7eed\u5c1d\u8bd5\u4e0b\u4e00\u4e2a\u66f4\u5927\u7684\u997c\u5e72\uff0c\u76f4\u5230\u6240\u6709\u5b69\u5b50\u6216\u997c\u5e72\u7528\u5b8c\u3002","title":"3.1.1 LC 455: \u5206\u53d1\u997c\u5e72"},{"location":"lesson13/Lesson13%20Python/#_36","text":"class Solution: def findContentChildren(self, g: List[int], s: List[int]) -> int: # \u5c06\u5b69\u5b50\u7684\u9700\u6c42\u548c\u997c\u5e72\u7684\u5927\u5c0f\u6392\u5e8f g.sort() s.sort() i = 0 # \u5b69\u5b50\u7d22\u5f15 j = 0 # \u997c\u5e72\u7d22\u5f15 # \u904d\u5386\u5b69\u5b50\u548c\u997c\u5e72\u6570\u7ec4 while i < len(g) and j < len(s): # \u5982\u679c\u5f53\u524d\u997c\u5e72\u80fd\u6ee1\u8db3\u5f53\u524d\u5b69\u5b50 if s[j] >= g[i]: i += 1 # \u6ee1\u8db3\u4e86\u5b69\u5b50 i\uff0c\u5904\u7406\u4e0b\u4e00\u4e2a\u5b69\u5b50 j += 1 # \u5c1d\u8bd5\u4e0b\u4e00\u4e2a\u997c\u5e72 return i # \u8fd4\u56de\u6ee1\u8db3\u7684\u5b69\u5b50\u6570\u91cf","title":"\u4ee3\u7801\u5b9e\u73b0\uff1a"},{"location":"lesson13/Lesson13%20Python/#_37","text":"\u6392\u5e8f\u6b65\u9aa4 \uff1a \u9996\u5148\u5c06\u5b69\u5b50\u7684\u9700\u6c42\u6570\u7ec4 g \u548c\u997c\u5e72\u5927\u5c0f\u6570\u7ec4 s \u8fdb\u884c\u6392\u5e8f\u3002\u6392\u5e8f\u540e\uff0c\u8f83\u5c0f\u7684\u5b69\u5b50\u9700\u6c42\u548c\u8f83\u5c0f\u7684\u997c\u5e72\u4f1a\u6392\u5217\u5728\u6570\u7ec4\u524d\u9762\uff0c\u8fd9\u6837\u53ef\u4ee5\u5c3d\u91cf\u7528\u6700\u5c0f\u7684\u997c\u5e72\u53bb\u6ee1\u8db3\u6700\u5c0f\u9700\u6c42\u7684\u5b69\u5b50\u3002 \u5339\u914d\u8fc7\u7a0b \uff1a \u4f7f\u7528\u4e24\u4e2a\u6307\u9488 i \u548c j \uff0c\u5206\u522b\u6307\u5411\u5b69\u5b50\u548c\u997c\u5e72\u6570\u7ec4\u7684\u8d77\u59cb\u4f4d\u7f6e\u3002 \u5f53 s[j] >= g[i] \u65f6\uff0c\u8868\u793a\u5f53\u524d\u997c\u5e72\u53ef\u4ee5\u6ee1\u8db3\u5f53\u524d\u5b69\u5b50\uff0c\u5b69\u5b50\u88ab\u6ee1\u8db3\uff0c\u79fb\u52a8\u6307\u9488 i \uff0c\u5904\u7406\u4e0b\u4e00\u4e2a\u5b69\u5b50\u3002 \u65e0\u8bba\u662f\u5426\u6ee1\u8db3\uff0c\u997c\u5e72\u90fd\u4f1a\u88ab\u5c1d\u8bd5\uff0c\u6240\u4ee5 j \u6bcf\u6b21\u90fd\u4f1a\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u997c\u5e72\u3002 \u6700\u7ec8\u7ed3\u679c \uff1a \u5f53\u904d\u5386\u7ed3\u675f\u65f6\uff0c i \u7684\u503c\u5c31\u662f\u80fd\u591f\u6ee1\u8db3\u7684\u5b69\u5b50\u6570\u91cf\uff0c\u5373\u6700\u540e\u8fd4\u56de\u7684\u7ed3\u679c\u3002","title":"\u8bb2\u89e3\uff1a"},{"location":"lesson13/Lesson13%20Python/#32","text":"","title":"3.2 \u8d2a\u5fc3\u7b97\u6cd5\u4e3e\u4e00\u53cd\u4e09"},{"location":"lesson13/Lesson13%20Python/#321-lc-435","text":"\u9898\u76ee\u63cf\u8ff0 \uff1a \u7ed9\u5b9a\u4e00\u7ec4\u533a\u95f4\uff0c\u627e\u5230\u6700\u5c11\u9700\u8981\u79fb\u9664\u7684\u533a\u95f4\u6570\u91cf\uff0c\u4f7f\u5f97\u5269\u4e0b\u7684\u533a\u95f4\u4e92\u4e0d\u91cd\u53e0\u3002 \u8d2a\u5fc3\u7b97\u6cd5\u6b65\u9aa4 \uff1a \u6392\u5e8f \uff1a\u6309\u7167\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4\u8fdb\u884c\u5347\u5e8f\u6392\u5e8f\u3002\u6392\u5e8f\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f18\u5148\u9009\u62e9\u7ed3\u675f\u65f6\u95f4\u8f83\u65e9\u7684\u533a\u95f4\uff0c\u8fd9\u6837\u80fd\u591f\u4e3a\u540e\u7eed\u533a\u95f4\u7559\u51fa\u66f4\u591a\u7a7a\u95f4\uff0c\u51cf\u5c11\u51b2\u7a81\u3002 \u9009\u62e9\u533a\u95f4 \uff1a\u6bcf\u6b21\u9009\u62e9\u7ed3\u675f\u65f6\u95f4\u6700\u65e9\u4e14\u4e0d\u4e0e\u524d\u4e00\u4e2a\u9009\u62e9\u7684\u533a\u95f4\u91cd\u53e0\u7684\u533a\u95f4\u3002\u5982\u679c\u5f53\u524d\u533a\u95f4\u7684\u5f00\u59cb\u65f6\u95f4\u5c0f\u4e8e\u524d\u4e00\u4e2a\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4\uff0c\u8bf4\u660e\u53d1\u751f\u4e86\u91cd\u53e0\uff0c\u6211\u4eec\u5c31\u9700\u8981\u79fb\u9664\u5f53\u524d\u533a\u95f4\u3002\u5426\u5219\uff0c\u6211\u4eec\u66f4\u65b0\u5f53\u524d\u533a\u95f4\u4e3a\u65b0\u7684\u7ed3\u675f\u65f6\u95f4\uff0c\u5e76\u7ee7\u7eed\u5904\u7406\u4e0b\u4e00\u4e2a\u533a\u95f4\u3002","title":"3.2.1 LC 435: \u65e0\u91cd\u53e0\u533a\u95f4"},{"location":"lesson13/Lesson13%20Python/#_38","text":"class Solution: def eraseOverlapIntervals(self, intervals: List[List[int]]) -> int: if not intervals: return 0 # \u6309\u7ed3\u675f\u65f6\u95f4\u6392\u5e8f intervals.sort(key=lambda x: x[1]) count = 0 end = intervals[0][1] for i in range(1, len(intervals)): if intervals[i][0] < end: count += 1 # \u6709\u91cd\u53e0\uff0c\u9700\u8981\u79fb\u9664 else: end = intervals[i][1] # \u66f4\u65b0\u7ed3\u675f\u65f6\u95f4 return count \u8bb2\u89e3 \uff1a \u6392\u5e8f\u6b65\u9aa4 \uff1a \u6309\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4\u5bf9\u6240\u6709\u533a\u95f4\u8fdb\u884c\u6392\u5e8f\u3002\u6392\u5e8f\u540e\u7684\u533a\u95f4\u6309\u7ed3\u675f\u65f6\u95f4\u4ece\u5c0f\u5230\u5927\u6392\u5217\uff0c\u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u6bcf\u6b21\u9009\u62e9\u7684\u533a\u95f4\u7ed3\u675f\u5f97\u6700\u65e9\uff0c\u80fd\u591f\u5c3d\u91cf\u907f\u514d\u540e\u7eed\u533a\u95f4\u4e0e\u5176\u53d1\u751f\u91cd\u53e0\u3002 \u904d\u5386\u9009\u62e9\u533a\u95f4 \uff1a \u521d\u59cb\u5316\u4e00\u4e2a end \u53d8\u91cf\uff0c\u8868\u793a\u5df2\u9009\u5b9a\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4\u3002\u904d\u5386\u5269\u4f59\u533a\u95f4\u65f6\uff0c\u68c0\u67e5\u6bcf\u4e2a\u533a\u95f4\u7684\u5f00\u59cb\u65f6\u95f4\u662f\u5426\u4e0e\u5f53\u524d\u9009\u5b9a\u7684\u7ed3\u675f\u65f6\u95f4\u53d1\u751f\u91cd\u53e0\u3002 \u5982\u679c\u5f53\u524d\u533a\u95f4\u7684\u5f00\u59cb\u65f6\u95f4\u5c0f\u4e8e end \uff0c\u8bf4\u660e\u53d1\u751f\u4e86\u91cd\u53e0\uff0c\u5fc5\u987b\u79fb\u9664\u5f53\u524d\u533a\u95f4\uff0c count \u52a0 1\u3002 \u5982\u679c\u6ca1\u6709\u91cd\u53e0\uff0c\u5219\u66f4\u65b0 end \u4e3a\u5f53\u524d\u533a\u95f4\u7684\u7ed3\u675f\u65f6\u95f4\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a count \u8bb0\u5f55\u4e86\u88ab\u79fb\u9664\u7684\u533a\u95f4\u6570\uff0c\u904d\u5386\u7ed3\u675f\u540e\uff0c\u8fd4\u56de\u8fd9\u4e2a\u79fb\u9664\u7684\u533a\u95f4\u6570\u3002","title":"\u4ee3\u7801\u5b9e\u73b0\uff1a"},{"location":"lesson13/Lesson13%20Python/#322-lc-605","text":"\u9898\u76ee\u63cf\u8ff0 \uff1a \u7ed9\u5b9a\u4e00\u4e2a\u8868\u793a\u82b1\u575b\u7684\u6574\u6570\u6570\u7ec4 flowerbed \uff0c\u5176\u4e2d flowerbed[i] = 0 \u8868\u793a\u8be5\u4f4d\u7f6e\u662f\u7a7a\u7684\uff0c flowerbed[i] = 1 \u8868\u793a\u8be5\u4f4d\u7f6e\u5df2\u7ecf\u79cd\u4e86\u82b1\u3002\u82b1\u575b\u4e2d\u82b1\u4e0d\u80fd\u79cd\u5728\u76f8\u90bb\u7684\u5730\u5757\u4e0a\uff0c\u95ee\u662f\u5426\u80fd\u591f\u5728\u4e0d\u8fdd\u53cd\u89c4\u5219\u7684\u60c5\u51b5\u4e0b\u518d\u79cd\u4e0b n \u6735\u82b1\u3002 \u8d2a\u5fc3\u7b97\u6cd5\u6b65\u9aa4 \uff1a \u904d\u5386\u82b1\u575b \uff1a\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u68c0\u67e5\u6bcf\u4e2a\u4f4d\u7f6e\u3002\u5982\u679c\u5f53\u524d\u4f4d\u7f6e\u662f\u7a7a\u7684 0 \uff0c\u5e76\u4e14\u5b83\u7684\u524d\u4e00\u4e2a\u4f4d\u7f6e\u548c\u540e\u4e00\u4e2a\u4f4d\u7f6e\u4e5f\u662f\u7a7a\u7684\uff08\u5982\u679c\u5b58\u5728\uff09\uff0c\u90a3\u4e48\u53ef\u4ee5\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u79cd\u82b1\u3002 \u8ba1\u6570\u5e76\u8df3\u8fc7\u76f8\u90bb\u4f4d\u7f6e \uff1a\u6bcf\u6b21\u6210\u529f\u79cd\u82b1\u540e\uff0c\u589e\u52a0\u8ba1\u6570\uff0c\u5e76\u8df3\u8fc7\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u56e0\u4e3a\u76f8\u90bb\u7684\u4f4d\u7f6e\u4e0d\u80fd\u79cd\u82b1\u3002","title":"3.2.2 LC 605: \u79cd\u82b1\u95ee\u9898"},{"location":"lesson13/Lesson13%20Python/#_39","text":"class Solution: def canPlaceFlowers(self, flowerbed: List[int], n: int) -> bool: count = 0 # \u8bb0\u5f55\u53ef\u4ee5\u79cd\u82b1\u7684\u6570\u91cf i = 0 length = len(flowerbed) while i < length: if flowerbed[i] == 0: prev_empty = (i == 0) or (flowerbed[i - 1] == 0) next_empty = (i == length - 1) or (flowerbed[i + 1] == 0) if prev_empty and next_empty: flowerbed[i] = 1 # \u79cd\u82b1 count += 1 if count >= n: return True i += 1 # \u8df3\u8fc7\u4e0b\u4e00\u4e2a\u4f4d\u7f6e i += 1 # \u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u4f4d\u7f6e return count >= n # \u68c0\u67e5\u662f\u5426\u79cd\u591f n \u6735\u82b1 \u8bb2\u89e3\uff1a \u904d\u5386\u5224\u65ad\u80fd\u5426\u79cd\u82b1 \uff1a \u904d\u5386\u6574\u4e2a\u82b1\u575b\uff0c\u68c0\u67e5\u6bcf\u4e2a\u4f4d\u7f6e\u662f\u5426\u53ef\u4ee5\u79cd\u82b1\u3002\u5f53\u524d\u4f4d\u7f6e\u5fc5\u987b\u6ee1\u8db3\u4e09\u4e2a\u6761\u4ef6\u624d\u80fd\u79cd\u82b1\uff1a \u5f53\u524d\u4e3a 0 \uff0c\u5373\u7a7a\u5730\u3002 \u524d\u4e00\u4e2a\u4f4d\u7f6e\u4e3a 0 \u6216\u8005\u662f\u82b1\u575b\u7684\u8d77\u59cb\u4f4d\u7f6e\u3002 \u540e\u4e00\u4e2a\u4f4d\u7f6e\u4e3a 0 \u6216\u8005\u662f\u82b1\u575b\u7684\u672b\u5c3e\u4f4d\u7f6e\u3002 \u79cd\u82b1\u540e\u8df3\u8fc7\u76f8\u90bb\u4f4d\u7f6e \uff1a \u6bcf\u6b21\u6210\u529f\u79cd\u82b1\u540e\uff0c\u9700\u8981\u8df3\u8fc7\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u907f\u514d\u76f8\u90bb\u79cd\u82b1\u3002 \u63d0\u524d\u7ec8\u6b62 \uff1a \u5982\u679c\u5728\u904d\u5386\u8fc7\u7a0b\u4e2d\u5df2\u7ecf\u79cd\u591f\u4e86 n \u6735\u82b1\uff0c\u5219\u53ef\u4ee5\u63d0\u524d\u8fd4\u56de True \u3002","title":"\u4ee3\u7801\u5b9e\u73b0\uff1a"},{"location":"lesson13/Lesson13%20Python/#323-lc-1029","text":"\u9898\u76ee\u63cf\u8ff0 \uff1a \u6709 2N \u4e2a\u4eba\uff0c\u6bcf\u4e2a\u4eba\u90fd\u9700\u8981\u98de\u5f80 A \u5e02\u6216 B \u5e02\u3002\u7ed9\u5b9a\u4e00\u4e2a costs \u6570\u7ec4\uff0c\u5176\u4e2d costs[i] = [aCost, bCost] \u8868\u793a\u7b2c i \u4e2a\u4eba\u98de\u5f80 A \u5e02\u7684\u8d39\u7528\u548c\u98de\u5f80 B \u5e02\u7684\u8d39\u7528\u3002\u73b0\u5728\u9700\u8981\u628a\u8fd9\u4e9b\u4eba\u5206\u914d\u5230\u4e24\u4e2a\u57ce\u5e02\uff0c\u4f7f\u5f97 N \u4e2a\u4eba\u98de\u5f80 A \u5e02\uff0c N \u4e2a\u4eba\u98de\u5f80 B \u5e02\uff0c\u8981\u6c42\u603b\u8d39\u7528\u6700\u5c0f\u3002 \u8d2a\u5fc3\u7b97\u6cd5\u6b65\u9aa4 \uff1a \u8ba1\u7b97\u6210\u672c\u5dee\u5f02 \uff1a\u8ba1\u7b97\u6bcf\u4e2a\u4eba\u53bb A \u5e02\u548c B \u5e02\u7684\u8d39\u7528\u5dee\uff0c\u5373 aCost - bCost \u3002\u6211\u4eec\u5e0c\u671b\u4f18\u5148\u8ba9\u90a3\u4e9b\u53bb A \u5e02\u66f4\u4fbf\u5b9c\u7684\u4eba\u53bb A \u5e02\uff0c\u53bb B \u5e02\u66f4\u4fbf\u5b9c\u7684\u4eba\u53bb B \u5e02\u3002 \u6392\u5e8f\u9009\u62e9 \uff1a\u6839\u636e\u8d39\u7528\u5dee\u8fdb\u884c\u6392\u5e8f\u3002\u5dee\u5f02\u8d8a\u5927\u7684\u4eba\uff0c\u610f\u5473\u7740\u53bb A \u5e02\u66f4\u5212\u7b97\uff1b\u5dee\u5f02\u8d8a\u5c0f\u751a\u81f3\u4e3a\u8d1f\uff0c\u610f\u5473\u7740\u53bb B \u5e02\u66f4\u5212\u7b97\u3002 \u5206\u914d\u57ce\u5e02 \uff1a\u524d N \u4e2a\u4eba\u5b89\u6392\u5230 A \u5e02\uff0c\u540e N \u4e2a\u4eba\u5b89\u6392\u5230 B \u5e02\uff0c\u6700\u7ec8\u5f97\u5230\u6700\u5c0f\u7684\u603b\u8d39\u7528\u3002","title":"3.2.3 LC 1029: \u4e24\u5730\u8c03\u5ea6"},{"location":"lesson13/Lesson13%20Python/#_40","text":"class Solution: def twoCitySchedCost(self, costs: List[List[int]]) -> int: # \u6309\u7167 aCost - bCost \u5347\u5e8f\u6392\u5e8f costs.sort(key=lambda x: x[0] - x[1]) totalCost = 0 n = len(costs) // 2 # \u524d N \u4e2a\u4eba\u53bb A \u5e02 for i in range(n): totalCost += costs[i][0] # \u540e N \u4e2a\u4eba\u53bb B \u5e02 for i in range(n, 2 * n): totalCost += costs[i][1] return totalCost \u8bb2\u89e3\uff1a \u8ba1\u7b97\u6210\u672c\u5dee\u5f02 \uff1a \u6bcf\u4e2a\u4eba\u90fd\u6709\u53bb A \u5e02\u548c B \u5e02\u7684\u4e24\u79cd\u9009\u62e9\uff0c\u901a\u8fc7 aCost - bCost \u6765\u8861\u91cf\u53bb\u54ea\u4e2a\u57ce\u5e02\u66f4\u5212\u7b97\u3002 \u6392\u5e8f\u6b65\u9aa4 \uff1a \u6839\u636e aCost - bCost \u5bf9 costs \u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\uff0c\u5dee\u503c\u5c0f\u7684\uff08\u53bb B \u5e02\u66f4\u5212\u7b97\uff09\u6392\u5728\u540e\u9762\u3002 \u5206\u914d\u57ce\u5e02 \uff1a \u6392\u5e8f\u540e\uff0c\u524d\u4e00\u534a\u7684\u4eba\uff08\u53bb A \u5e02\u66f4\u5212\u7b97\uff09\u5206\u914d\u5230 A \u5e02\uff0c\u540e\u4e00\u534a\u7684\u4eba\uff08\u53bb B \u5e02\u66f4\u5212\u7b97\uff09\u5206\u914d\u5230 B \u5e02\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a \u6700\u7ec8\u8fd4\u56de\u603b\u7684\u8d39\u7528\uff0c\u5373\u524d N \u4e2a\u4eba\u7684 A \u5e02\u8d39\u7528\u548c\u540e N \u4e2a\u4eba\u7684 B \u5e02\u8d39\u7528\u4e4b\u548c\u3002","title":"\u4ee3\u7801\u5b9e\u73b0\uff1a"},{"location":"lesson13/Lesson13%20Python/#4","text":"","title":"4. \u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson13/Lesson13%20Python/#_41","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC1288 \u5220\u9664\u88ab\u8986\u76d6\u7684\u533a\u95f4 \u7ed9\u5b9a\u4e00\u7ec4\u533a\u95f4\uff0c\u627e\u51fa\u5176\u4e2d\u672a\u88ab\u8986\u76d6\u7684\u533a\u95f4\uff0c\u79fb\u9664\u88ab\u8986\u76d6\u7684\u533a\u95f4\u3002 LC1024 \u89c6\u9891\u62fc\u63a5 \u7ed9\u5b9a\u4e00\u7ec4\u533a\u95f4\uff0c\u5224\u65ad\u662f\u5426\u80fd\u591f\u901a\u8fc7\u62fc\u63a5\u533a\u95f4\u8986\u76d6\u6574\u4e2a\u89c6\u9891\u957f\u5ea6\u3002 LC763 \u5212\u5206\u5b57\u6bcd\u533a\u95f4 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5c06\u5176\u5212\u5206\u4e3a\u5c3d\u53ef\u80fd\u591a\u7684\u4e0d\u91cd\u53e0\u7684\u533a\u95f4\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u5b57\u6bcd\u6700\u591a\u51fa\u73b0\u5728\u4e00\u4e2a\u533a\u95f4\u4e2d\u3002 LC57 \u63d2\u5165\u533a\u95f4 \u7ed9\u5b9a\u4e00\u7ec4\u975e\u91cd\u53e0\u7684\u533a\u95f4\u548c\u4e00\u4e2a\u65b0\u7684\u533a\u95f4\uff0c\u5c06\u65b0\u533a\u95f4\u63d2\u5165\u5e76\u5408\u5e76\u6240\u6709\u53ef\u80fd\u7684\u91cd\u53e0\u533a\u95f4\u3002 LC179 \u6700\u5927\u6570 \u7ed9\u5b9a\u4e00\u7ec4\u975e\u8d1f\u6574\u6570\uff0c\u91cd\u65b0\u6392\u5217\u5b83\u4eec\u7684\u987a\u5e8f\u4f7f\u4e4b\u7ec4\u6210\u4e00\u4e2a\u6700\u5927\u7684\u6574\u6570\u3002","title":"\u6392\u5e8f\u95ee\u9898"},{"location":"lesson13/Lesson13%20Python/#_42","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC121 \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a \u7ed9\u5b9a\u80a1\u7968\u4ef7\u683c\uff0c\u627e\u5230\u5728\u6700\u4f73\u65f6\u673a\u4e70\u5165\u548c\u5356\u51fa\u4ee5\u83b7\u5f97\u6700\u5927\u5229\u6da6\u3002 LC122 \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a II \u5141\u8bb8\u591a\u6b21\u4e70\u5356\uff0c\u627e\u5230\u5728\u6700\u4f73\u65f6\u673a\u4e70\u5165\u548c\u5356\u51fa\u4ee5\u83b7\u5f97\u6700\u5927\u5229\u6da6\u3002 LC55 \u8df3\u8dc3\u6e38\u620f \u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u5224\u65ad\u662f\u5426\u80fd\u8df3\u5230\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u3002 LC45 \u8df3\u8dc3\u6e38\u620f II \u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u627e\u5230\u8df3\u5230\u6570\u7ec4\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u7684\u6700\u5c11\u8df3\u8dc3\u6b21\u6570\u3002 LC409 \u6700\u957f\u56de\u6587\u4e32 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u627e\u5230\u5176\u4e2d\u80fd\u7ec4\u6210\u7684\u6700\u957f\u56de\u6587\u4e32\u7684\u957f\u5ea6\u3002","title":"\u8d2a\u5fc3\u7b97\u6cd5\u95ee\u9898"},{"location":"lesson2/Lesson2%20C%2B%2B/","text":"Lesson2 C++\u7684\u6761\u4ef6\u8bed\u53e5\u4e0e\u5faa\u73af\u8bed\u53e5 1. C++\u7684\u6761\u4ef6\u8bed\u53e5 \u4ee5\u4e0b\u662fC++ \u4e2d\u7684\u5e38\u89c1\u903b\u8f91\u6761\u4ef6\uff1a \u5c0f\u4e8e\uff1a a < b \u5c0f\u4e8e\u6216\u7b49\u4e8e\uff1a a <= b \u5927\u4e8e\uff1a a > b \u5927\u4e8e\u6216\u7b49\u4e8e\uff1a a >= b \u7b49\u4e8e\uff1a a == b \u4e0d\u7b49\u4e8e\uff1a a != b \u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u8fd9\u4e9b\u6761\u4ef6\u6765\u9488\u5bf9\u4e0d\u540c\u7684\u51b3\u5b9a\u6267\u884c\u4e0d\u540c\u7684\u64cd\u4f5c C++ \u5177\u6709\u4ee5\u4e0b\u6761\u4ef6\u8bed\u53e5\uff1a \u4f7f\u7528 if \u6765\u6307\u5b9a\u4e00\u4e2a\u4ee3\u7801\u5757\uff0c\u5982\u679c\u6307\u5b9a\u7684\u6761\u4ef6\u4e3a true \uff0c\u5219\u6267\u884c\u8be5\u4ee3\u7801\u5757 \u4f7f\u7528 else \u6765\u6307\u5b9a\u4e00\u4e2a\u4ee3\u7801\u5757\uff0c\u5982\u679c\u76f8\u540c\u7684\u6761\u4ef6\u4e3a false \uff0c\u5219\u6267\u884c\u8be5\u4ee3\u7801\u5757 \u4f7f\u7528 else if \u6765\u6307\u5b9a\u4e00\u4e2a\u65b0\u7684\u6761\u4ef6\u8fdb\u884c\u6d4b\u8bd5\uff0c\u5982\u679c\u7b2c\u4e00\u4e2a\u6761\u4ef6\u4e3a false \uff0c\u5219\u6267\u884c\u8be5\u6761\u4ef6 \u4f7f\u7528 switch \u6765\u6307\u5b9a\u8bb8\u591a\u66ff\u4ee3\u4ee3\u7801\u5757\u6765\u6267\u884c 1.1 if \u8bed\u53e5 \u4f7f\u7528 if \u8bed\u53e5\u6765\u6307\u5b9a\u4e00\u4e2a\u4ee3\u7801\u5757\uff0c\u5982\u679c\u6761\u4ef6\u4e3a true ,\u5219\u6267\u884c\u8be5\u4ee3\u7801\u5757\u3002 \u8bed\u6cd5\uff1a if (condition) { // \u5982\u679c\u6761\u4ef6\u4e3a true\uff0c\u5219\u6267\u884c\u7684\u4ee3\u7801\u5757 } \u8bf7\u6ce8\u610f\uff0c if \u662f\u5c0f\u5199\u5b57\u6bcd\u3002\u5927\u5199\u5b57\u6bcd\uff08 If \u6216 IF \uff09\u5c06\u751f\u6210\u9519\u8bef\u3002 \u4ee5\u4e0b\u4e3a\u793a\u4f8b\uff1a int a = 20; int b = 10; if (a > b) { cout << \"a is greater than b\"; } 1.2 else \u8bed\u53e5 \u5982\u679c if \u8bed\u53e5\u4e2d\u7684\u5e03\u5c14\u8868\u8fbe\u5f0f\u6210\u7acb\uff08true\uff09\uff0c\u5219\u6267\u884c if \u8bed\u53e5\u4e2d\u7684\u4ee3\u7801\u5757\uff0c\u5982\u679c\u4e0d\u6210\u7acb\uff08false\uff09\uff0c\u5219\u6267\u884celse\u8bed\u53e5\u4e2d\u7684\u4ee3\u7801\u5757\u3002 \u8bed\u6cd5\uff1a if (condition) { // \u5982\u679c\u6761\u4ef6\u4e3a true\uff0c\u5219\u6267\u884c\u7684\u4ee3\u7801\u5757 } else { // \u5982\u679c\u6761\u4ef6\u4e3a false\uff0c\u5219\u6267\u884c\u7684\u4ee3\u7801\u5757 } \u4ee5\u4e0b\u4e3a\u793a\u4f8b\uff1a int a = 66; int b = 666; if (a > b) { cout << \"a is greater than b\"; } else{ cout << \"a is smaller than b\"; } 1.3 else if \u8bed\u53e5 else if \u5728\u7b2c\u4e00\u4e2a\u6761\u4ef6\u4e3a false \u65f6\u6307\u5b9a\u4e00\u4e2a\u65b0\u6761\u4ef6\u3002 if (condition1) { // \u5982\u679c condition1 \u4e3a true\uff0c\u5219\u6267\u884c\u7684\u4ee3\u7801\u5757 } else if (condition2) { // \u5982\u679c condition1 \u4e3a false \u4e14 condition2 \u4e3a true\uff0c\u5219\u6267\u884c\u7684\u4ee3\u7801\u5757 } else { // \u5982\u679c condition1 \u548c condition2 \u5747\u4e3a false\uff0c\u5219\u6267\u884c\u7684\u4ee3\u7801\u5757 } \u4ee5\u4e0b\u4e3a\u793a\u4f8b\uff1a int a = 66; int b = 666; if (a > b) { cout << \"a is greater than b\"; } else if (a == b){ cout << \"a is equal to b\"; } else { cout << \"a is smaller than b\"; } 1.4 switch \u8bed\u53e5 switch \u8bed\u53e5\u7528\u4e8e\u6839\u636e\u4e0d\u540c\u7684\u6761\u4ef6\u6267\u884c\u4e0d\u540c\u7684\u4ee3\u7801\u5757\u3002\u76f8\u6bd4\u4e8e\u591a\u91cd\u7684 if-else \u7ed3\u6784\uff0c\u5f53\u6709\u591a\u4e2a\u6761\u4ef6\u9700\u8981\u5224\u65ad\u65f6\uff0c switch \u8bed\u53e5\u663e\u5f97\u66f4\u52a0\u6e05\u6670\u548c\u7b80\u6d01\u3002 \u8bed\u6cd5\uff1a switch (expression) { case constant1: // \u4ee3\u7801\u57571 break; case constant2: // \u4ee3\u7801\u57572 break; ... default: // \u9ed8\u8ba4\u4ee3\u7801\u5757 break; } expression : \u662f\u4e00\u4e2a\u6574\u6570\u8868\u8fbe\u5f0f\uff08\u53ef\u4ee5\u662fint\u3001char\u7b49\u7c7b\u578b\uff09\u3002 case \uff1a\u6bcf\u4e2acase\u540e\u8ddf\u4e00\u4e2a\u5e38\u91cf\u503c\uff0c\u5f53expression\u7684\u503c\u4e0e\u8be5\u5e38\u91cf\u76f8\u7b49\u65f6\uff0c\u6267\u884c\u5bf9\u5e94\u7684\u4ee3\u7801\u5757\u3002 break \uff1a\u8868\u793a\u9000\u51faswitch\u8bed\u53e5\u3002\u5982\u679c\u6ca1\u6709break\uff0c\u7a0b\u5e8f\u4f1a\u7ee7\u7eed\u6267\u884c\u540e\u7eed\u7684case\u4ee3\u7801\u5757\uff08\u5373\u201c\u7a7f\u900f\u201d\uff09\u3002 default \uff1a\u5f53\u6240\u6709\u7684case\u90fd\u4e0d\u5339\u914d\u65f6\uff0c\u6267\u884cdefault\u540e\u7684\u4ee3\u7801\u5757\u3002 \u4ee5\u4e0b\u4e3a\u793a\u4f8b\uff1a #include <iostream> int main() { int day = 3; switch (day) { case 1: std::cout << \"Monday\" << std::endl; break; case 2: std::cout << \"Tuesday\" << std::endl; break; case 3: std::cout << \"Wednesday\" << std::endl; break; case 4: std::cout << \"Thursday\" << std::endl; break; case 5: std::cout << \"Friday\" << std::endl; break; case 6: std::cout << \"Saturday\" << std::endl; break; case 7: std::cout << \"Sunday\" << std::endl; break; default: std::cout << \"Invalid day\" << std::endl; break; } return 0; } 2. C++\u7684\u5faa\u73af\u8bed\u53e5 \u5faa\u73af\u8bed\u53e5\u7528\u4e8e\u53cd\u590d\u6267\u884c\u67d0\u6bb5\u4ee3\u7801\uff0c\u76f4\u5230\u6ee1\u8db3\u7279\u5b9a\u6761\u4ef6\u3002C++\u63d0\u4f9b\u4e86\u4e09\u79cd\u57fa\u672c\u7684\u5faa\u73af\u8bed\u53e5\uff1a * for \u5faa\u73af * while \u5faa\u73af 2.1 for \u5faa\u73af \u8bed\u6cd5\uff1a for (initialization; condition; increment/decrement) { // \u5faa\u73af\u4f53 } initialization \uff1a\u7528\u4e8e\u521d\u59cb\u5316\u5faa\u73af\u63a7\u5236\u53d8\u91cf\uff0c\u5728\u5faa\u73af\u5f00\u59cb\u524d\u6267\u884c\u4e00\u6b21\u3002\u901a\u5e38\u7528\u4e8e\u5b9a\u4e49\u5e76\u521d\u59cb\u5316\u5faa\u73af\u8ba1\u6570\u5668\u53d8\u91cf\u3002\u4f8b\u5982\uff1a int i = 0; \u3002 condition \uff1a\u5faa\u73af\u7ee7\u7eed\u6267\u884c\u7684\u6761\u4ef6\u8868\u8fbe\u5f0f\u3002\u5728\u6bcf\u6b21\u5faa\u73af\u5f00\u59cb\u65f6\u8fdb\u884c\u8ba1\u7b97\uff0c\u5982\u679c\u6761\u4ef6\u4e3atrue\uff0c\u5219\u6267\u884c\u5faa\u73af\u4f53\uff1b\u5426\u5219\uff0c\u9000\u51fa\u5faa\u73af\uff0c\u4f8b\u5982 i < 5 \u3002 increment/decrement \uff1a\u5728\u6bcf\u6b21\u5faa\u73af\u4f53\u6267\u884c\u540e\u6267\u884c\u7684\u64cd\u4f5c\uff0c\u901a\u5e38\u7528\u4e8e\u66f4\u65b0\u5faa\u73af\u63a7\u5236\u53d8\u91cf,\u4f8b\u5982 i++ \uff08\u9012\u589e\uff09\uff0c i-- \uff08\u9012\u51cf\uff09\u3002 \u4ee5\u4e0b\u4e3a\u793a\u4f8b\uff08 \u987a\u5e8f\u904d\u5386 \uff09\uff1a #include <iostream> int main() { for (int i = 0; i < 5; i++) { std::cout << \"i = \" << i << std::endl; } return 0; } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c i \u4ece0\u5f00\u59cb\uff0c\u6bcf\u6b21\u5faa\u73af i \u52a01\uff0c\u76f4\u5230 i \u4e0d\u5c0f\u4e8e5\u3002\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a i = 0 i = 1 i = 2 i = 3 i = 4 \u5012\u5e8f\u904d\u5386 \u5012\u5e8f\u904d\u5386\u662f\u6307\u4ece\u4e00\u4e2a\u8f83\u5927\u7684\u503c\u5f00\u59cb\uff0c\u9010\u6b65\u9012\u51cf\u5faa\u73af\u53d8\u91cf\uff0c\u76f4\u5230\u8fbe\u5230\u6307\u5b9a\u7684\u6761\u4ef6\u4e3a\u6b62\u3002\u8fd9\u79cd\u904d\u5386\u65b9\u5f0f\u4e0e\u987a\u5e8f\u904d\u5386\uff08\u4ece\u5c0f\u5230\u5927\u9012\u589e\uff09\u76f8\u53cd\u3002\u5728C++\u4e2d\uff0c\u901a\u8fc7\u8bbe\u7f6efor\u5faa\u73af\u7684\u521d\u59cb\u5316\u6761\u4ef6\u3001\u5224\u65ad\u6761\u4ef6\u548c\u9012\u51cf\u64cd\u4f5c\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5012\u5e8f\u904d\u5386\u3002 \u5047\u8bbe\u6211\u4eec\u5e0c\u671b\u4ece\u4e00\u4e2a\u8f83\u5927\u7684\u6570\u5b57\u5f00\u59cb\uff0c\u9010\u6b65\u51cf\u5c11\u8be5\u6570\u5b57\uff0c\u76f4\u5230\u8fbe\u5230\u4e00\u4e2a\u7279\u5b9a\u503c\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u4ee3\u7801\u5b9e\u73b0: #include <iostream> int main() { for (int i = 5; i > 0; i--) { std::cout << \"i = \" << i << std::endl; } return 0; } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0ci \u7684\u521d\u59cb\u503c\u4e3a5\uff0c\u6bcf\u6b21\u5faa\u73afi\u51cf1\uff0c\u76f4\u5230i\u4e0d\u5927\u4e8e0\u3002\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a i = 5 i = 4 i = 3 i = 2 i = 1 2.2 while \u5faa\u73af \u8bed\u6cd5 while (condition) { // \u5faa\u73af\u4f53 } condition \uff1a\u5728\u6bcf\u6b21\u5faa\u73af\u5f00\u59cb\u65f6\u8ba1\u7b97\u3002\u5982\u679c\u4e3a true \uff0c\u6267\u884c\u5faa\u73af\u4f53\uff1b\u5426\u5219\uff0c\u9000\u51fa\u5faa\u73af\u3002 \u4ee5\u4e0b\u4e3a\u793a\u4f8b\uff1a #include <iostream> int main() { int i = 0; while (i < 5) { std::cout << \"i = \" << i << std::endl; i++; } return 0; } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c i \u4ece0\u5f00\u59cb\uff0c\u6bcf\u6b21\u5faa\u73af i \u52a01\uff0c\u76f4\u5230 i \u4e0d\u5c0f\u4e8e5\u3002\u8f93\u51fa\u7ed3\u679c\u4e0e for \u5faa\u73af\u76f8\u540c\u3002 3. Break \u548c Continue 3.1 break \u8bed\u53e5 break \u8bed\u53e5\u7528\u4e8e\u7acb\u5373\u9000\u51fa\u5faa\u73af\uff0c\u4e0d\u518d\u6267\u884c\u5faa\u73af\u4f53\u4e2d\u7684\u5176\u4ed6\u4ee3\u7801\uff0c\u4e5f\u4e0d\u4f1a\u7ee7\u7eed\u8fdb\u884c\u4e0b\u4e00\u6b21\u5faa\u73af\u3002 \u4ee5\u4e0b\u4e3a\u793a\u4f8b #include <iostream> int main() { for (int i = 0; i < 10; i++) { if (i == 5) { break; // \u5f53i\u7b49\u4e8e5\u65f6\uff0c\u9000\u51fa\u5faa\u73af } std::cout << \"i = \" << i << std::endl; } return 0; } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5f53 i \u7b49\u4e8e5\u65f6\uff0c break \u8bed\u53e5\u4f1a\u7acb\u5373\u9000\u51fa\u5faa\u73af\u3002\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a i = 0 i = 1 i = 2 i = 3 i = 4 3.2 continue \u8bed\u53e5 continue \u8bed\u53e5\u7528\u4e8e\u8df3\u8fc7\u5f53\u524d\u5faa\u73af\u4e2d\u7684\u5269\u4f59\u4ee3\u7801\uff0c\u7acb\u5373\u5f00\u59cb\u4e0b\u4e00\u6b21\u5faa\u73af\u3002 \u793a\u4f8b\u4ee3\u7801 #include <iostream> int main() { for (int i = 0; i < 10; i++) { if (i % 2 == 0) { continue; // \u5982\u679ci\u662f\u5076\u6570\uff0c\u8df3\u8fc7\u672c\u6b21\u5faa\u73af\uff0c\u7ee7\u7eed\u4e0b\u4e00\u6b21\u5faa\u73af } std::cout << \"i = \" << i << std::endl; } return 0; } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5f53 i \u662f\u5076\u6570\u65f6\uff0c continue \u8bed\u53e5\u4f1a\u8df3\u8fc7\u5f53\u524d\u5faa\u73af\u7684\u5269\u4f59\u90e8\u5206\uff0c\u7ee7\u7eed\u4e0b\u4e00\u6b21\u5faa\u73af\u3002\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a i = 1 i = 3 i = 5 i = 7 i = 9 4. \u8bfe\u540e\u7ec3\u4e60 4.1 \u70b9\u9910\u7a0b\u5e8f \u9898\u76ee\u63cf\u8ff0\uff1a \u8bbe\u8ba1\u4e00\u4e2a\u7b80\u5355\u7684\u9910\u5385\u70b9\u5355\u7a0b\u5e8f\uff0c\u7a0b\u5e8f\u80fd\u591f\u8fde\u7eed\u63a5\u53d7\u591a\u4e2a\u987e\u5ba2\u7684\u70b9\u5355\u3002\u7a0b\u5e8f\u63d0\u524d\u77e5\u9053\u6c49\u5821\u3001\u85af\u6761\u548c\u53ef\u4e50\u7684\u4ef7\u683c\u3002\u6bcf\u4f4d\u987e\u5ba2\u53ef\u4ee5\u9009\u62e9\u70b9\u6c49\u5821\u3001\u85af\u6761\u548c\u53ef\u4e50\u7684\u6570\u91cf\uff0c\u7a0b\u5e8f\u5c06\u8f93\u51fa\u6bcf\u4f4d\u987e\u5ba2\u7684\u70b9\u5355\u5185\u5bb9\u548c\u603b\u4ef7\uff0c\u6700\u540e\u8f93\u51fa\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d\u3002 \u8981\u6c42\uff1a \u7a0b\u5e8f\u5f00\u59cb\u65f6\uff0c\u5b9a\u4e49\u6c49\u5821\u3001\u85af\u6761\u548c\u53ef\u4e50\u7684\u4ef7\u683c\u5e38\u91cf\u3002 \u4f7f\u7528\u5faa\u73af\u8bed\u53e5\u8fde\u7eed\u63a5\u53d7\u987e\u5ba2\u7684\u70b9\u5355\uff0c\u5728\u5f00\u59cb\u8ba1\u7b97\u524d\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u4e13\u7528\u7684\u53d8\u91cf\u83b7\u53d6\u7528\u6237\u610f\u56fe\u662f\u7ee7\u7eed\u70b9\u5355\u8fd8\u662f\u9000\u51fa\uff08\u4f8b\uff1a\u8f93\u5165-1\u9000\u51fa\u5e76\u8ba1\u7b97\u603b\u9500\u552e\u989d\uff0c\u5176\u4ed6\u6570\u5b57\u5219\u8fdb\u884c\u4e0b\u4e00\u8f6e\u70b9\u5355\uff09\u3002 \u6bcf\u6b21\u63a5\u53d7\u987e\u5ba2\u7684\u70b9\u5355\u540e\uff0c\u8f93\u51fa\u987e\u5ba2\u7684\u70b9\u5355\u5185\u5bb9\u548c\u672c\u6b21\u70b9\u5355\u7684\u603b\u4ef7\u3002 \u7d2f\u52a0\u6bcf\u4f4d\u987e\u5ba2\u7684\u70b9\u5355\u603b\u4ef7\u5230\u603b\u9500\u552e\u989d\u4e2d\u3002 \u9000\u51fa\u70b9\u5355\u540e\uff0c\u8f93\u51fa\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d\u3002 \u793a\u4f8b\u8fd0\u884c\uff1a \u5047\u8bbe\u64cd\u4f5c\u6d41\u7a0b\u5982\u4e0b\uff1a \u7b2c\u4e00\u4f4d\u987e\u5ba2\u70b9\u6c49\u5821 2\uff0c\u85af\u6761 1\uff0c\u53ef\u4e50 3\uff1b \u7b2c\u4e8c\u4f4d\u987e\u5ba2\u70b9\u6c49\u5821 1\uff0c\u85af\u6761 2\uff0c\u53ef\u4e50 2\uff1b \u9009\u62e9\u9000\u51fa\u7a0b\u5e8f\u3002 \u7a0b\u5e8f\u7684\u8f93\u51fa\u5e94\u5982\u4e0b\u6240\u793a\uff1a \u8bf7\u70b9\u5355\uff08\u8f93\u5165-1\u9000\u51fa\uff09\uff1a 0 \u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf\uff1a1 \u8bf7\u8f93\u5165\u85af\u6761\u7684\u6570\u91cf\uff1a2 \u8bf7\u8f93\u5165\u53ef\u4e50\u7684\u6570\u91cf\uff1a3 \u5ba2\u6237\u70b9\u5355\u5185\u5bb9\uff1a \u6c49\u5821 x 2 \u85af\u6761 x 1 \u53ef\u4e50 x 3 \u672c\u6b21\u70b9\u5355\u603b\u4ef7\uff1a48.5 \u5143 \u8bf7\u70b9\u5355\uff08\u8f93\u5165-1\u9000\u51fa\uff09\uff1a 0 \u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf\uff1a1 \u8bf7\u8f93\u5165\u85af\u6761\u7684\u6570\u91cf\uff1a2 \u8bf7\u8f93\u5165\u53ef\u4e50\u7684\u6570\u91cf\uff1a2 \u5ba2\u6237\u70b9\u5355\u5185\u5bb9\uff1a \u6c49\u5821 x 1 \u85af\u6761 x 2 \u53ef\u4e50 x 2 \u672c\u6b21\u70b9\u5355\u603b\u4ef7\uff1a35.0 \u5143 \u8bf7\u70b9\u5355\uff08\u8f93\u5165-1\u9000\u51fa\uff09\uff1a -1 \u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d\uff1a83.5 \u5143 \u8bf7\u70b9\u5355\uff08\u8f93\u51650\u9000\u51fa\uff09\uff1a \u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf\uff1a0 \u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d\uff1a83.5 \u5143 \u53c2\u8003\u89e3\u7b54\uff1a #include <iostream> using namespace std; int main() { // \u5b9a\u4e49\u4ef7\u683c\u5e38\u91cf const double BURGER_PRICE = 12.5; const double FRIES_PRICE = 6.0; const double COKE_PRICE = 4.5; // \u521d\u59cb\u5316\u603b\u9500\u552e\u989d double totalSales = 0.0; // \u521b\u5efa\u8f93\u5165\u6d41 int option = 0; int burgers = 0, fries = 0, cokes = 0; // \u5f00\u59cb\u5faa\u73af\uff0c\u76f4\u5230\u987e\u5ba2\u9009\u62e9\u9000\u51fa while (true) { // \u83b7\u53d6\u7528\u6237\u70b9\u5355 cout << \"\\n\u8bf7\u70b9\u5355\uff08\u8f93\u5165-1\u9000\u51fa\uff0c\u5176\u4ed6\u6574\u6570\u8fdb\u5165\u70b9\u5355\uff09\uff1a\"; cin >> option; // \u5982\u679c\u8f93\u5165\u4e3a-1\uff0c\u5219\u9000\u51fa\u5faa\u73af if (option == -1) { break; } cout << \"\u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf\uff1a\"; cin >> burgers; cout << \"\u8bf7\u8f93\u5165\u85af\u6761\u7684\u6570\u91cf\uff1a\"; cin >> fries; cout << \"\u8bf7\u8f93\u5165\u53ef\u4e50\u7684\u6570\u91cf\uff1a\"; cin >> cokes; // \u6253\u5370\u5ba2\u6237\u70b9\u5355\u5185\u5bb9 cout << \"\\n\u5ba2\u6237\u70b9\u5355\u5185\u5bb9\uff1a\" << endl; if (burgers > 0) { cout << \"\u6c49\u5821 x \" << burgers << endl; } if (fries > 0) { cout << \"\u85af\u6761 x \" << fries << endl; } if (cokes > 0) { cout << \"\u53ef\u4e50 x \" << cokes << endl; } // \u8ba1\u7b97\u672c\u6b21\u70b9\u5355\u7684\u603b\u4ef7 double orderTotal = burgers * BURGER_PRICE + fries * FRIES_PRICE + cokes * COKE_PRICE; // \u7d2f\u52a0\u5230\u603b\u9500\u552e\u989d totalSales += orderTotal; // \u6253\u5370\u672c\u6b21\u70b9\u5355\u7684\u603b\u4ef7 cout << \"\\n\u672c\u6b21\u70b9\u5355\u603b\u4ef7\uff1a\" << orderTotal << \" \u5143\" << endl; } // \u6253\u5370\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d cout << \"\\n\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d\uff1a\" << totalSales << \" \u5143\" << endl; return 0; } 4.2 \u8ba1\u7b97\u5e76\u8f93\u51fa1\u5230100\u4e4b\u95f4\u6240\u6709\u4e0d\u80fd\u88ab3\u6574\u9664\u7684\u6570\u7684\u5e73\u65b9\u548c \u9898\u76ee\u63cf\u8ff0\uff1a \u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u8ba1\u7b97\u5e76\u8f93\u51fa1\u5230100\u4e4b\u95f4\u6240\u6709\u4e0d\u80fd\u88ab3\u6574\u9664\u7684\u6570\u7684\u5e73\u65b9\u548c\u3002\u5728\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u5e73\u65b9\u548c\u8d85\u8fc71000\uff0c\u5219\u505c\u6b62\u8ba1\u7b97\u5e76\u8f93\u51fa\u5f53\u524d\u7684\u5e73\u65b9\u548c\u503c\u3002 \u89e3\u9898\u601d\u8def\uff1a \u4f7f\u7528\u4e00\u4e2a\u5faa\u73af\u6765\u904d\u5386\u4ece1\u5230100\u7684\u6240\u6709\u6570\u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u6570\uff0c\u4f7f\u7528\u6761\u4ef6\u8bed\u53e5\u5224\u65ad\u662f\u5426\u80fd\u88ab3\u6574\u9664\uff1a \u5982\u679c\u80fd\u88ab3\u6574\u9664\uff0c\u4f7f\u7528 continue \u8df3\u8fc7\u8fd9\u4e2a\u6570\uff0c\u4e0d\u8fdb\u884c\u5e73\u65b9\u548c\u7684\u7d2f\u52a0\u3002 \u5982\u679c\u4e0d\u80fd\u88ab3\u6574\u9664\uff0c\u8ba1\u7b97\u8be5\u6570\u7684\u5e73\u65b9\uff0c\u5e76\u7d2f\u52a0\u5230\u5e73\u65b9\u548c\u53d8\u91cf\u4e2d\u3002 \u5728\u7d2f\u52a0\u8fc7\u7a0b\u4e2d\uff0c\u4f7f\u7528\u6761\u4ef6\u8bed\u53e5\u68c0\u67e5\u5e73\u65b9\u548c\u662f\u5426\u8d85\u8fc71000\uff1a \u5982\u679c\u8d85\u8fc71000\uff0c\u5219\u4f7f\u7528 break \u505c\u6b62\u5faa\u73af\u3002 \u6700\u7ec8\u8f93\u51fa\u505c\u6b62\u65f6\u7684\u5e73\u65b9\u548c\u503c\u3002 \u53c2\u8003\u89e3\u7b54\uff1a #include <iostream> int main() { int sum = 0; for (int i = 1; i <= 100; i++) { if (i % 3 == 0) { continue; // \u8df3\u8fc7\u80fd\u88ab3\u6574\u9664\u7684\u6570 } int square = i * i; sum += square; if (sum > 1000) { std::cout << \"\u5f53\u524d\u5e73\u65b9\u548c\u8d85\u8fc71000\uff0c\u505c\u6b62\u8ba1\u7b97\u3002\\n\"; std::cout << \"\u5f53\u524d\u5e73\u65b9\u548c\u4e3a: \" << sum << \"\\n\"; break; } } if (sum <= 1000) { std::cout << \"\u6700\u7ec8\u5e73\u65b9\u548c\u4e3a: \" << sum << \"\\n\"; } return 0; } \u793a\u4f8b\u8fd0\u884c\u548c\u8f93\u51fa\uff1a \u5728\u8fd0\u884c\u4e0a\u8ff0\u4ee3\u7801\u65f6\uff0c\u4f1a\u4f9d\u6b21\u8ba1\u7b971\u5230100\u4e4b\u95f4\u6240\u6709\u4e0d\u80fd\u88ab3\u6574\u9664\u7684\u6570\u7684\u5e73\u65b9\uff0c\u5e76\u7d2f\u52a0\u5230\u5e73\u65b9\u548c\u53d8\u91cf sum \u4e2d\u3002\u5982\u679c\u7d2f\u52a0\u8fc7\u7a0b\u4e2d\u53d1\u73b0\u5e73\u65b9\u548c\u8d85\u8fc71000\uff0c\u5219\u505c\u6b62\u8ba1\u7b97\uff0c\u5e76\u8f93\u51fa\u5f53\u524d\u7684\u5e73\u65b9\u548c\u503c\u3002 \u8f93\u51fa\u793a\u4f8b\uff1a \u5f53\u524d\u5e73\u65b9\u548c\u8d85\u8fc71000\uff0c\u505c\u6b62\u8ba1\u7b97\u3002 \u5f53\u524d\u5e73\u65b9\u548c\u4e3a: 1025","title":"Lesson2 C++\u7684\u6761\u4ef6\u8bed\u53e5\u4e0e\u5faa\u73af\u8bed\u53e5"},{"location":"lesson2/Lesson2%20C%2B%2B/#lesson2-c","text":"","title":"Lesson2 C++\u7684\u6761\u4ef6\u8bed\u53e5\u4e0e\u5faa\u73af\u8bed\u53e5"},{"location":"lesson2/Lesson2%20C%2B%2B/#1-c","text":"\u4ee5\u4e0b\u662fC++ \u4e2d\u7684\u5e38\u89c1\u903b\u8f91\u6761\u4ef6\uff1a \u5c0f\u4e8e\uff1a a < b \u5c0f\u4e8e\u6216\u7b49\u4e8e\uff1a a <= b \u5927\u4e8e\uff1a a > b \u5927\u4e8e\u6216\u7b49\u4e8e\uff1a a >= b \u7b49\u4e8e\uff1a a == b \u4e0d\u7b49\u4e8e\uff1a a != b \u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u8fd9\u4e9b\u6761\u4ef6\u6765\u9488\u5bf9\u4e0d\u540c\u7684\u51b3\u5b9a\u6267\u884c\u4e0d\u540c\u7684\u64cd\u4f5c","title":"1. C++\u7684\u6761\u4ef6\u8bed\u53e5"},{"location":"lesson2/Lesson2%20C%2B%2B/#c","text":"\u4f7f\u7528 if \u6765\u6307\u5b9a\u4e00\u4e2a\u4ee3\u7801\u5757\uff0c\u5982\u679c\u6307\u5b9a\u7684\u6761\u4ef6\u4e3a true \uff0c\u5219\u6267\u884c\u8be5\u4ee3\u7801\u5757 \u4f7f\u7528 else \u6765\u6307\u5b9a\u4e00\u4e2a\u4ee3\u7801\u5757\uff0c\u5982\u679c\u76f8\u540c\u7684\u6761\u4ef6\u4e3a false \uff0c\u5219\u6267\u884c\u8be5\u4ee3\u7801\u5757 \u4f7f\u7528 else if \u6765\u6307\u5b9a\u4e00\u4e2a\u65b0\u7684\u6761\u4ef6\u8fdb\u884c\u6d4b\u8bd5\uff0c\u5982\u679c\u7b2c\u4e00\u4e2a\u6761\u4ef6\u4e3a false \uff0c\u5219\u6267\u884c\u8be5\u6761\u4ef6 \u4f7f\u7528 switch \u6765\u6307\u5b9a\u8bb8\u591a\u66ff\u4ee3\u4ee3\u7801\u5757\u6765\u6267\u884c","title":"C++ \u5177\u6709\u4ee5\u4e0b\u6761\u4ef6\u8bed\u53e5\uff1a"},{"location":"lesson2/Lesson2%20C%2B%2B/#11-if","text":"\u4f7f\u7528 if \u8bed\u53e5\u6765\u6307\u5b9a\u4e00\u4e2a\u4ee3\u7801\u5757\uff0c\u5982\u679c\u6761\u4ef6\u4e3a true ,\u5219\u6267\u884c\u8be5\u4ee3\u7801\u5757\u3002 \u8bed\u6cd5\uff1a if (condition) { // \u5982\u679c\u6761\u4ef6\u4e3a true\uff0c\u5219\u6267\u884c\u7684\u4ee3\u7801\u5757 } \u8bf7\u6ce8\u610f\uff0c if \u662f\u5c0f\u5199\u5b57\u6bcd\u3002\u5927\u5199\u5b57\u6bcd\uff08 If \u6216 IF \uff09\u5c06\u751f\u6210\u9519\u8bef\u3002 \u4ee5\u4e0b\u4e3a\u793a\u4f8b\uff1a int a = 20; int b = 10; if (a > b) { cout << \"a is greater than b\"; }","title":"1.1 if \u8bed\u53e5"},{"location":"lesson2/Lesson2%20C%2B%2B/#12-else","text":"\u5982\u679c if \u8bed\u53e5\u4e2d\u7684\u5e03\u5c14\u8868\u8fbe\u5f0f\u6210\u7acb\uff08true\uff09\uff0c\u5219\u6267\u884c if \u8bed\u53e5\u4e2d\u7684\u4ee3\u7801\u5757\uff0c\u5982\u679c\u4e0d\u6210\u7acb\uff08false\uff09\uff0c\u5219\u6267\u884celse\u8bed\u53e5\u4e2d\u7684\u4ee3\u7801\u5757\u3002 \u8bed\u6cd5\uff1a if (condition) { // \u5982\u679c\u6761\u4ef6\u4e3a true\uff0c\u5219\u6267\u884c\u7684\u4ee3\u7801\u5757 } else { // \u5982\u679c\u6761\u4ef6\u4e3a false\uff0c\u5219\u6267\u884c\u7684\u4ee3\u7801\u5757 } \u4ee5\u4e0b\u4e3a\u793a\u4f8b\uff1a int a = 66; int b = 666; if (a > b) { cout << \"a is greater than b\"; } else{ cout << \"a is smaller than b\"; }","title":"1.2 else \u8bed\u53e5"},{"location":"lesson2/Lesson2%20C%2B%2B/#13-else-if","text":"else if \u5728\u7b2c\u4e00\u4e2a\u6761\u4ef6\u4e3a false \u65f6\u6307\u5b9a\u4e00\u4e2a\u65b0\u6761\u4ef6\u3002 if (condition1) { // \u5982\u679c condition1 \u4e3a true\uff0c\u5219\u6267\u884c\u7684\u4ee3\u7801\u5757 } else if (condition2) { // \u5982\u679c condition1 \u4e3a false \u4e14 condition2 \u4e3a true\uff0c\u5219\u6267\u884c\u7684\u4ee3\u7801\u5757 } else { // \u5982\u679c condition1 \u548c condition2 \u5747\u4e3a false\uff0c\u5219\u6267\u884c\u7684\u4ee3\u7801\u5757 } \u4ee5\u4e0b\u4e3a\u793a\u4f8b\uff1a int a = 66; int b = 666; if (a > b) { cout << \"a is greater than b\"; } else if (a == b){ cout << \"a is equal to b\"; } else { cout << \"a is smaller than b\"; }","title":"1.3 else if \u8bed\u53e5"},{"location":"lesson2/Lesson2%20C%2B%2B/#14-switch","text":"switch \u8bed\u53e5\u7528\u4e8e\u6839\u636e\u4e0d\u540c\u7684\u6761\u4ef6\u6267\u884c\u4e0d\u540c\u7684\u4ee3\u7801\u5757\u3002\u76f8\u6bd4\u4e8e\u591a\u91cd\u7684 if-else \u7ed3\u6784\uff0c\u5f53\u6709\u591a\u4e2a\u6761\u4ef6\u9700\u8981\u5224\u65ad\u65f6\uff0c switch \u8bed\u53e5\u663e\u5f97\u66f4\u52a0\u6e05\u6670\u548c\u7b80\u6d01\u3002 \u8bed\u6cd5\uff1a switch (expression) { case constant1: // \u4ee3\u7801\u57571 break; case constant2: // \u4ee3\u7801\u57572 break; ... default: // \u9ed8\u8ba4\u4ee3\u7801\u5757 break; } expression : \u662f\u4e00\u4e2a\u6574\u6570\u8868\u8fbe\u5f0f\uff08\u53ef\u4ee5\u662fint\u3001char\u7b49\u7c7b\u578b\uff09\u3002 case \uff1a\u6bcf\u4e2acase\u540e\u8ddf\u4e00\u4e2a\u5e38\u91cf\u503c\uff0c\u5f53expression\u7684\u503c\u4e0e\u8be5\u5e38\u91cf\u76f8\u7b49\u65f6\uff0c\u6267\u884c\u5bf9\u5e94\u7684\u4ee3\u7801\u5757\u3002 break \uff1a\u8868\u793a\u9000\u51faswitch\u8bed\u53e5\u3002\u5982\u679c\u6ca1\u6709break\uff0c\u7a0b\u5e8f\u4f1a\u7ee7\u7eed\u6267\u884c\u540e\u7eed\u7684case\u4ee3\u7801\u5757\uff08\u5373\u201c\u7a7f\u900f\u201d\uff09\u3002 default \uff1a\u5f53\u6240\u6709\u7684case\u90fd\u4e0d\u5339\u914d\u65f6\uff0c\u6267\u884cdefault\u540e\u7684\u4ee3\u7801\u5757\u3002 \u4ee5\u4e0b\u4e3a\u793a\u4f8b\uff1a #include <iostream> int main() { int day = 3; switch (day) { case 1: std::cout << \"Monday\" << std::endl; break; case 2: std::cout << \"Tuesday\" << std::endl; break; case 3: std::cout << \"Wednesday\" << std::endl; break; case 4: std::cout << \"Thursday\" << std::endl; break; case 5: std::cout << \"Friday\" << std::endl; break; case 6: std::cout << \"Saturday\" << std::endl; break; case 7: std::cout << \"Sunday\" << std::endl; break; default: std::cout << \"Invalid day\" << std::endl; break; } return 0; }","title":"1.4 switch \u8bed\u53e5"},{"location":"lesson2/Lesson2%20C%2B%2B/#2-c","text":"\u5faa\u73af\u8bed\u53e5\u7528\u4e8e\u53cd\u590d\u6267\u884c\u67d0\u6bb5\u4ee3\u7801\uff0c\u76f4\u5230\u6ee1\u8db3\u7279\u5b9a\u6761\u4ef6\u3002C++\u63d0\u4f9b\u4e86\u4e09\u79cd\u57fa\u672c\u7684\u5faa\u73af\u8bed\u53e5\uff1a * for \u5faa\u73af * while \u5faa\u73af","title":"2. C++\u7684\u5faa\u73af\u8bed\u53e5"},{"location":"lesson2/Lesson2%20C%2B%2B/#21-for","text":"\u8bed\u6cd5\uff1a for (initialization; condition; increment/decrement) { // \u5faa\u73af\u4f53 } initialization \uff1a\u7528\u4e8e\u521d\u59cb\u5316\u5faa\u73af\u63a7\u5236\u53d8\u91cf\uff0c\u5728\u5faa\u73af\u5f00\u59cb\u524d\u6267\u884c\u4e00\u6b21\u3002\u901a\u5e38\u7528\u4e8e\u5b9a\u4e49\u5e76\u521d\u59cb\u5316\u5faa\u73af\u8ba1\u6570\u5668\u53d8\u91cf\u3002\u4f8b\u5982\uff1a int i = 0; \u3002 condition \uff1a\u5faa\u73af\u7ee7\u7eed\u6267\u884c\u7684\u6761\u4ef6\u8868\u8fbe\u5f0f\u3002\u5728\u6bcf\u6b21\u5faa\u73af\u5f00\u59cb\u65f6\u8fdb\u884c\u8ba1\u7b97\uff0c\u5982\u679c\u6761\u4ef6\u4e3atrue\uff0c\u5219\u6267\u884c\u5faa\u73af\u4f53\uff1b\u5426\u5219\uff0c\u9000\u51fa\u5faa\u73af\uff0c\u4f8b\u5982 i < 5 \u3002 increment/decrement \uff1a\u5728\u6bcf\u6b21\u5faa\u73af\u4f53\u6267\u884c\u540e\u6267\u884c\u7684\u64cd\u4f5c\uff0c\u901a\u5e38\u7528\u4e8e\u66f4\u65b0\u5faa\u73af\u63a7\u5236\u53d8\u91cf,\u4f8b\u5982 i++ \uff08\u9012\u589e\uff09\uff0c i-- \uff08\u9012\u51cf\uff09\u3002 \u4ee5\u4e0b\u4e3a\u793a\u4f8b\uff08 \u987a\u5e8f\u904d\u5386 \uff09\uff1a #include <iostream> int main() { for (int i = 0; i < 5; i++) { std::cout << \"i = \" << i << std::endl; } return 0; } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c i \u4ece0\u5f00\u59cb\uff0c\u6bcf\u6b21\u5faa\u73af i \u52a01\uff0c\u76f4\u5230 i \u4e0d\u5c0f\u4e8e5\u3002\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a i = 0 i = 1 i = 2 i = 3 i = 4","title":"2.1 for \u5faa\u73af"},{"location":"lesson2/Lesson2%20C%2B%2B/#_1","text":"\u5012\u5e8f\u904d\u5386\u662f\u6307\u4ece\u4e00\u4e2a\u8f83\u5927\u7684\u503c\u5f00\u59cb\uff0c\u9010\u6b65\u9012\u51cf\u5faa\u73af\u53d8\u91cf\uff0c\u76f4\u5230\u8fbe\u5230\u6307\u5b9a\u7684\u6761\u4ef6\u4e3a\u6b62\u3002\u8fd9\u79cd\u904d\u5386\u65b9\u5f0f\u4e0e\u987a\u5e8f\u904d\u5386\uff08\u4ece\u5c0f\u5230\u5927\u9012\u589e\uff09\u76f8\u53cd\u3002\u5728C++\u4e2d\uff0c\u901a\u8fc7\u8bbe\u7f6efor\u5faa\u73af\u7684\u521d\u59cb\u5316\u6761\u4ef6\u3001\u5224\u65ad\u6761\u4ef6\u548c\u9012\u51cf\u64cd\u4f5c\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5012\u5e8f\u904d\u5386\u3002 \u5047\u8bbe\u6211\u4eec\u5e0c\u671b\u4ece\u4e00\u4e2a\u8f83\u5927\u7684\u6570\u5b57\u5f00\u59cb\uff0c\u9010\u6b65\u51cf\u5c11\u8be5\u6570\u5b57\uff0c\u76f4\u5230\u8fbe\u5230\u4e00\u4e2a\u7279\u5b9a\u503c\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u4ee3\u7801\u5b9e\u73b0: #include <iostream> int main() { for (int i = 5; i > 0; i--) { std::cout << \"i = \" << i << std::endl; } return 0; } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0ci \u7684\u521d\u59cb\u503c\u4e3a5\uff0c\u6bcf\u6b21\u5faa\u73afi\u51cf1\uff0c\u76f4\u5230i\u4e0d\u5927\u4e8e0\u3002\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a i = 5 i = 4 i = 3 i = 2 i = 1","title":"\u5012\u5e8f\u904d\u5386"},{"location":"lesson2/Lesson2%20C%2B%2B/#22-while","text":"\u8bed\u6cd5 while (condition) { // \u5faa\u73af\u4f53 } condition \uff1a\u5728\u6bcf\u6b21\u5faa\u73af\u5f00\u59cb\u65f6\u8ba1\u7b97\u3002\u5982\u679c\u4e3a true \uff0c\u6267\u884c\u5faa\u73af\u4f53\uff1b\u5426\u5219\uff0c\u9000\u51fa\u5faa\u73af\u3002 \u4ee5\u4e0b\u4e3a\u793a\u4f8b\uff1a #include <iostream> int main() { int i = 0; while (i < 5) { std::cout << \"i = \" << i << std::endl; i++; } return 0; } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c i \u4ece0\u5f00\u59cb\uff0c\u6bcf\u6b21\u5faa\u73af i \u52a01\uff0c\u76f4\u5230 i \u4e0d\u5c0f\u4e8e5\u3002\u8f93\u51fa\u7ed3\u679c\u4e0e for \u5faa\u73af\u76f8\u540c\u3002","title":"2.2 while\u5faa\u73af"},{"location":"lesson2/Lesson2%20C%2B%2B/#3-break-continue","text":"","title":"3. Break \u548c Continue"},{"location":"lesson2/Lesson2%20C%2B%2B/#31-break","text":"break \u8bed\u53e5\u7528\u4e8e\u7acb\u5373\u9000\u51fa\u5faa\u73af\uff0c\u4e0d\u518d\u6267\u884c\u5faa\u73af\u4f53\u4e2d\u7684\u5176\u4ed6\u4ee3\u7801\uff0c\u4e5f\u4e0d\u4f1a\u7ee7\u7eed\u8fdb\u884c\u4e0b\u4e00\u6b21\u5faa\u73af\u3002 \u4ee5\u4e0b\u4e3a\u793a\u4f8b #include <iostream> int main() { for (int i = 0; i < 10; i++) { if (i == 5) { break; // \u5f53i\u7b49\u4e8e5\u65f6\uff0c\u9000\u51fa\u5faa\u73af } std::cout << \"i = \" << i << std::endl; } return 0; } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5f53 i \u7b49\u4e8e5\u65f6\uff0c break \u8bed\u53e5\u4f1a\u7acb\u5373\u9000\u51fa\u5faa\u73af\u3002\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a i = 0 i = 1 i = 2 i = 3 i = 4","title":"3.1 break\u8bed\u53e5"},{"location":"lesson2/Lesson2%20C%2B%2B/#32-continue","text":"continue \u8bed\u53e5\u7528\u4e8e\u8df3\u8fc7\u5f53\u524d\u5faa\u73af\u4e2d\u7684\u5269\u4f59\u4ee3\u7801\uff0c\u7acb\u5373\u5f00\u59cb\u4e0b\u4e00\u6b21\u5faa\u73af\u3002","title":"3.2 continue\u8bed\u53e5"},{"location":"lesson2/Lesson2%20C%2B%2B/#_2","text":"#include <iostream> int main() { for (int i = 0; i < 10; i++) { if (i % 2 == 0) { continue; // \u5982\u679ci\u662f\u5076\u6570\uff0c\u8df3\u8fc7\u672c\u6b21\u5faa\u73af\uff0c\u7ee7\u7eed\u4e0b\u4e00\u6b21\u5faa\u73af } std::cout << \"i = \" << i << std::endl; } return 0; } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u5f53 i \u662f\u5076\u6570\u65f6\uff0c continue \u8bed\u53e5\u4f1a\u8df3\u8fc7\u5f53\u524d\u5faa\u73af\u7684\u5269\u4f59\u90e8\u5206\uff0c\u7ee7\u7eed\u4e0b\u4e00\u6b21\u5faa\u73af\u3002\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a i = 1 i = 3 i = 5 i = 7 i = 9","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"lesson2/Lesson2%20C%2B%2B/#4","text":"","title":"4. \u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson2/Lesson2%20C%2B%2B/#41","text":"","title":"4.1 \u70b9\u9910\u7a0b\u5e8f"},{"location":"lesson2/Lesson2%20C%2B%2B/#_3","text":"\u8bbe\u8ba1\u4e00\u4e2a\u7b80\u5355\u7684\u9910\u5385\u70b9\u5355\u7a0b\u5e8f\uff0c\u7a0b\u5e8f\u80fd\u591f\u8fde\u7eed\u63a5\u53d7\u591a\u4e2a\u987e\u5ba2\u7684\u70b9\u5355\u3002\u7a0b\u5e8f\u63d0\u524d\u77e5\u9053\u6c49\u5821\u3001\u85af\u6761\u548c\u53ef\u4e50\u7684\u4ef7\u683c\u3002\u6bcf\u4f4d\u987e\u5ba2\u53ef\u4ee5\u9009\u62e9\u70b9\u6c49\u5821\u3001\u85af\u6761\u548c\u53ef\u4e50\u7684\u6570\u91cf\uff0c\u7a0b\u5e8f\u5c06\u8f93\u51fa\u6bcf\u4f4d\u987e\u5ba2\u7684\u70b9\u5355\u5185\u5bb9\u548c\u603b\u4ef7\uff0c\u6700\u540e\u8f93\u51fa\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d\u3002","title":"\u9898\u76ee\u63cf\u8ff0\uff1a"},{"location":"lesson2/Lesson2%20C%2B%2B/#_4","text":"\u7a0b\u5e8f\u5f00\u59cb\u65f6\uff0c\u5b9a\u4e49\u6c49\u5821\u3001\u85af\u6761\u548c\u53ef\u4e50\u7684\u4ef7\u683c\u5e38\u91cf\u3002 \u4f7f\u7528\u5faa\u73af\u8bed\u53e5\u8fde\u7eed\u63a5\u53d7\u987e\u5ba2\u7684\u70b9\u5355\uff0c\u5728\u5f00\u59cb\u8ba1\u7b97\u524d\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u4e13\u7528\u7684\u53d8\u91cf\u83b7\u53d6\u7528\u6237\u610f\u56fe\u662f\u7ee7\u7eed\u70b9\u5355\u8fd8\u662f\u9000\u51fa\uff08\u4f8b\uff1a\u8f93\u5165-1\u9000\u51fa\u5e76\u8ba1\u7b97\u603b\u9500\u552e\u989d\uff0c\u5176\u4ed6\u6570\u5b57\u5219\u8fdb\u884c\u4e0b\u4e00\u8f6e\u70b9\u5355\uff09\u3002 \u6bcf\u6b21\u63a5\u53d7\u987e\u5ba2\u7684\u70b9\u5355\u540e\uff0c\u8f93\u51fa\u987e\u5ba2\u7684\u70b9\u5355\u5185\u5bb9\u548c\u672c\u6b21\u70b9\u5355\u7684\u603b\u4ef7\u3002 \u7d2f\u52a0\u6bcf\u4f4d\u987e\u5ba2\u7684\u70b9\u5355\u603b\u4ef7\u5230\u603b\u9500\u552e\u989d\u4e2d\u3002 \u9000\u51fa\u70b9\u5355\u540e\uff0c\u8f93\u51fa\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d\u3002","title":"\u8981\u6c42\uff1a"},{"location":"lesson2/Lesson2%20C%2B%2B/#_5","text":"\u5047\u8bbe\u64cd\u4f5c\u6d41\u7a0b\u5982\u4e0b\uff1a \u7b2c\u4e00\u4f4d\u987e\u5ba2\u70b9\u6c49\u5821 2\uff0c\u85af\u6761 1\uff0c\u53ef\u4e50 3\uff1b \u7b2c\u4e8c\u4f4d\u987e\u5ba2\u70b9\u6c49\u5821 1\uff0c\u85af\u6761 2\uff0c\u53ef\u4e50 2\uff1b \u9009\u62e9\u9000\u51fa\u7a0b\u5e8f\u3002 \u7a0b\u5e8f\u7684\u8f93\u51fa\u5e94\u5982\u4e0b\u6240\u793a\uff1a \u8bf7\u70b9\u5355\uff08\u8f93\u5165-1\u9000\u51fa\uff09\uff1a 0 \u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf\uff1a1 \u8bf7\u8f93\u5165\u85af\u6761\u7684\u6570\u91cf\uff1a2 \u8bf7\u8f93\u5165\u53ef\u4e50\u7684\u6570\u91cf\uff1a3 \u5ba2\u6237\u70b9\u5355\u5185\u5bb9\uff1a \u6c49\u5821 x 2 \u85af\u6761 x 1 \u53ef\u4e50 x 3 \u672c\u6b21\u70b9\u5355\u603b\u4ef7\uff1a48.5 \u5143 \u8bf7\u70b9\u5355\uff08\u8f93\u5165-1\u9000\u51fa\uff09\uff1a 0 \u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf\uff1a1 \u8bf7\u8f93\u5165\u85af\u6761\u7684\u6570\u91cf\uff1a2 \u8bf7\u8f93\u5165\u53ef\u4e50\u7684\u6570\u91cf\uff1a2 \u5ba2\u6237\u70b9\u5355\u5185\u5bb9\uff1a \u6c49\u5821 x 1 \u85af\u6761 x 2 \u53ef\u4e50 x 2 \u672c\u6b21\u70b9\u5355\u603b\u4ef7\uff1a35.0 \u5143 \u8bf7\u70b9\u5355\uff08\u8f93\u5165-1\u9000\u51fa\uff09\uff1a -1 \u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d\uff1a83.5 \u5143 \u8bf7\u70b9\u5355\uff08\u8f93\u51650\u9000\u51fa\uff09\uff1a \u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf\uff1a0 \u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d\uff1a83.5 \u5143","title":"\u793a\u4f8b\u8fd0\u884c\uff1a"},{"location":"lesson2/Lesson2%20C%2B%2B/#_6","text":"#include <iostream> using namespace std; int main() { // \u5b9a\u4e49\u4ef7\u683c\u5e38\u91cf const double BURGER_PRICE = 12.5; const double FRIES_PRICE = 6.0; const double COKE_PRICE = 4.5; // \u521d\u59cb\u5316\u603b\u9500\u552e\u989d double totalSales = 0.0; // \u521b\u5efa\u8f93\u5165\u6d41 int option = 0; int burgers = 0, fries = 0, cokes = 0; // \u5f00\u59cb\u5faa\u73af\uff0c\u76f4\u5230\u987e\u5ba2\u9009\u62e9\u9000\u51fa while (true) { // \u83b7\u53d6\u7528\u6237\u70b9\u5355 cout << \"\\n\u8bf7\u70b9\u5355\uff08\u8f93\u5165-1\u9000\u51fa\uff0c\u5176\u4ed6\u6574\u6570\u8fdb\u5165\u70b9\u5355\uff09\uff1a\"; cin >> option; // \u5982\u679c\u8f93\u5165\u4e3a-1\uff0c\u5219\u9000\u51fa\u5faa\u73af if (option == -1) { break; } cout << \"\u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf\uff1a\"; cin >> burgers; cout << \"\u8bf7\u8f93\u5165\u85af\u6761\u7684\u6570\u91cf\uff1a\"; cin >> fries; cout << \"\u8bf7\u8f93\u5165\u53ef\u4e50\u7684\u6570\u91cf\uff1a\"; cin >> cokes; // \u6253\u5370\u5ba2\u6237\u70b9\u5355\u5185\u5bb9 cout << \"\\n\u5ba2\u6237\u70b9\u5355\u5185\u5bb9\uff1a\" << endl; if (burgers > 0) { cout << \"\u6c49\u5821 x \" << burgers << endl; } if (fries > 0) { cout << \"\u85af\u6761 x \" << fries << endl; } if (cokes > 0) { cout << \"\u53ef\u4e50 x \" << cokes << endl; } // \u8ba1\u7b97\u672c\u6b21\u70b9\u5355\u7684\u603b\u4ef7 double orderTotal = burgers * BURGER_PRICE + fries * FRIES_PRICE + cokes * COKE_PRICE; // \u7d2f\u52a0\u5230\u603b\u9500\u552e\u989d totalSales += orderTotal; // \u6253\u5370\u672c\u6b21\u70b9\u5355\u7684\u603b\u4ef7 cout << \"\\n\u672c\u6b21\u70b9\u5355\u603b\u4ef7\uff1a\" << orderTotal << \" \u5143\" << endl; } // \u6253\u5370\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d cout << \"\\n\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d\uff1a\" << totalSales << \" \u5143\" << endl; return 0; }","title":"\u53c2\u8003\u89e3\u7b54\uff1a"},{"location":"lesson2/Lesson2%20C%2B%2B/#42-11003","text":"","title":"4.2 \u8ba1\u7b97\u5e76\u8f93\u51fa1\u5230100\u4e4b\u95f4\u6240\u6709\u4e0d\u80fd\u88ab3\u6574\u9664\u7684\u6570\u7684\u5e73\u65b9\u548c"},{"location":"lesson2/Lesson2%20C%2B%2B/#_7","text":"\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u8ba1\u7b97\u5e76\u8f93\u51fa1\u5230100\u4e4b\u95f4\u6240\u6709\u4e0d\u80fd\u88ab3\u6574\u9664\u7684\u6570\u7684\u5e73\u65b9\u548c\u3002\u5728\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u5e73\u65b9\u548c\u8d85\u8fc71000\uff0c\u5219\u505c\u6b62\u8ba1\u7b97\u5e76\u8f93\u51fa\u5f53\u524d\u7684\u5e73\u65b9\u548c\u503c\u3002","title":"\u9898\u76ee\u63cf\u8ff0\uff1a"},{"location":"lesson2/Lesson2%20C%2B%2B/#_8","text":"\u4f7f\u7528\u4e00\u4e2a\u5faa\u73af\u6765\u904d\u5386\u4ece1\u5230100\u7684\u6240\u6709\u6570\u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u6570\uff0c\u4f7f\u7528\u6761\u4ef6\u8bed\u53e5\u5224\u65ad\u662f\u5426\u80fd\u88ab3\u6574\u9664\uff1a \u5982\u679c\u80fd\u88ab3\u6574\u9664\uff0c\u4f7f\u7528 continue \u8df3\u8fc7\u8fd9\u4e2a\u6570\uff0c\u4e0d\u8fdb\u884c\u5e73\u65b9\u548c\u7684\u7d2f\u52a0\u3002 \u5982\u679c\u4e0d\u80fd\u88ab3\u6574\u9664\uff0c\u8ba1\u7b97\u8be5\u6570\u7684\u5e73\u65b9\uff0c\u5e76\u7d2f\u52a0\u5230\u5e73\u65b9\u548c\u53d8\u91cf\u4e2d\u3002 \u5728\u7d2f\u52a0\u8fc7\u7a0b\u4e2d\uff0c\u4f7f\u7528\u6761\u4ef6\u8bed\u53e5\u68c0\u67e5\u5e73\u65b9\u548c\u662f\u5426\u8d85\u8fc71000\uff1a \u5982\u679c\u8d85\u8fc71000\uff0c\u5219\u4f7f\u7528 break \u505c\u6b62\u5faa\u73af\u3002 \u6700\u7ec8\u8f93\u51fa\u505c\u6b62\u65f6\u7684\u5e73\u65b9\u548c\u503c\u3002","title":"\u89e3\u9898\u601d\u8def\uff1a"},{"location":"lesson2/Lesson2%20C%2B%2B/#_9","text":"#include <iostream> int main() { int sum = 0; for (int i = 1; i <= 100; i++) { if (i % 3 == 0) { continue; // \u8df3\u8fc7\u80fd\u88ab3\u6574\u9664\u7684\u6570 } int square = i * i; sum += square; if (sum > 1000) { std::cout << \"\u5f53\u524d\u5e73\u65b9\u548c\u8d85\u8fc71000\uff0c\u505c\u6b62\u8ba1\u7b97\u3002\\n\"; std::cout << \"\u5f53\u524d\u5e73\u65b9\u548c\u4e3a: \" << sum << \"\\n\"; break; } } if (sum <= 1000) { std::cout << \"\u6700\u7ec8\u5e73\u65b9\u548c\u4e3a: \" << sum << \"\\n\"; } return 0; }","title":"\u53c2\u8003\u89e3\u7b54\uff1a"},{"location":"lesson2/Lesson2%20C%2B%2B/#_10","text":"\u5728\u8fd0\u884c\u4e0a\u8ff0\u4ee3\u7801\u65f6\uff0c\u4f1a\u4f9d\u6b21\u8ba1\u7b971\u5230100\u4e4b\u95f4\u6240\u6709\u4e0d\u80fd\u88ab3\u6574\u9664\u7684\u6570\u7684\u5e73\u65b9\uff0c\u5e76\u7d2f\u52a0\u5230\u5e73\u65b9\u548c\u53d8\u91cf sum \u4e2d\u3002\u5982\u679c\u7d2f\u52a0\u8fc7\u7a0b\u4e2d\u53d1\u73b0\u5e73\u65b9\u548c\u8d85\u8fc71000\uff0c\u5219\u505c\u6b62\u8ba1\u7b97\uff0c\u5e76\u8f93\u51fa\u5f53\u524d\u7684\u5e73\u65b9\u548c\u503c\u3002 \u8f93\u51fa\u793a\u4f8b\uff1a \u5f53\u524d\u5e73\u65b9\u548c\u8d85\u8fc71000\uff0c\u505c\u6b62\u8ba1\u7b97\u3002 \u5f53\u524d\u5e73\u65b9\u548c\u4e3a: 1025","title":"\u793a\u4f8b\u8fd0\u884c\u548c\u8f93\u51fa\uff1a"},{"location":"lesson2/Lesson2%20Java/","text":"Lesson2 Java\u7684\u6761\u4ef6\u8bed\u53e5\u4e0e\u5faa\u73af\u8bed\u53e5 \u76ee\u5f55 Java\u7684\u6761\u4ef6\u8bed\u53e5 1.1 if \u6761\u4ef6\u8bed\u53e5 1.2 if...else \u6761\u4ef6\u8bed\u53e5 1.3 if...else if...else 1.4 \u5d4c\u5957\u7684if...else \u8bed\u53e5 1.5 switch \u8bed\u53e5 Java\u7684\u5faa\u73af\u8bed\u53e5 2.1 for\u5faa\u73af 2.2 \u5012\u5e8f\u904d\u5386 2.3 IntStream.range()\u51fd\u6570 2.4 while\u5faa\u73af 2.5 \u589e\u5f3afor\u5faa\u73af\uff08for each\u5faa\u73af\uff09 break \u8bed\u53e5 3.1 \u5728\u5faa\u73af\u4e2d\u4f7f\u7528 break 3.2 \u5728 switch \u8bed\u53e5\u4e2d\u4f7f\u7528 break 3.3 \u5d4c\u5957\u5faa\u73af\u7684break continue \u8bed\u53e5 \u8bfe\u540e\u7ec3\u4e60 5.1 \u70b9\u9910\u7a0b\u5e8f 5.2 \u8ba1\u7b97\u5e76\u8f93\u51fa 1 \u5230 100 \u4e4b\u95f4\u6240\u6709\u4e0d\u80fd\u88ab 3 \u6574\u9664\u7684\u6570\u7684\u5e73\u65b9\u548c 1. Java\u7684\u6761\u4ef6\u8bed\u53e5 \u6761\u4ef6\u8bed\u53e5\u662f\u7f16\u7a0b\u4e2d\u4e00\u79cd\u57fa\u672c\u7684\u63a7\u5236\u7ed3\u6784\uff0c\u7528\u4e8e\u6839\u636e\u4e0d\u540c\u7684\u6761\u4ef6\u6267\u884c\u4e0d\u540c\u7684\u4ee3\u7801\u5757\u3002\u5b83\u4eec\u4f7f\u7a0b\u5e8f\u80fd\u591f\u6839\u636e\u8f93\u5165\u3001\u72b6\u6001\u6216\u8ba1\u7b97\u7ed3\u679c\u6765\u505a\u51fa\u51b3\u7b56\u548c\u6267\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\u3002\u5728Java\u4e2d\uff0c\u5e38\u89c1\u7684\u6761\u4ef6\u8bed\u53e5\u5305\u62ec if \u3001 else if \u548c else \u7ec4\u5408\u4ee5\u53ca switch \u8bed\u53e5\u3002 if\u8bed\u53e5 \uff1a\u7528\u4e8e\u5728\u6761\u4ef6\u4e3a\u771f\u65f6\u6267\u884c\u7279\u5b9a\u7684\u4ee3\u7801\u5757\uff0c\u5982\u679c\u6761\u4ef6\u4e0d\u6ee1\u8db3\uff0c\u53ef\u4ee5\u9009\u62e9\u6267\u884c\u4e00\u4e2a\u5907\u7528\u4ee3\u7801\u5757\u3002 else if\u8bed\u53e5 \uff1a\u7528\u4e8e\u68c0\u67e5\u591a\u4e2a\u6761\u4ef6\uff0c\u5982\u679c\u524d\u4e00\u4e2a\u6761\u4ef6\u4e0d\u6ee1\u8db3\uff0c\u5219\u68c0\u67e5\u4e0b\u4e00\u4e2a\u6761\u4ef6\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u5206\u652f\u6267\u884c\u76f8\u5e94\u7684\u4ee3\u7801\u5757\u3002 else\u8bed\u53e5 \uff1a\u53ef\u9009\u7684\uff0c\u5f53\u6240\u6709\u4e0a\u8ff0\u6761\u4ef6\u90fd\u4e0d\u6ee1\u8db3\u65f6\u6267\u884c\u7684\u9ed8\u8ba4\u4ee3\u7801\u5757\u3002 switch\u8bed\u53e5 \uff1a\u7528\u4e8e\u5728\u591a\u4e2a\u56fa\u5b9a\u9009\u9879\u4e4b\u95f4\u8fdb\u884c\u9009\u62e9\uff0c\u6839\u636e\u8868\u8fbe\u5f0f\u7684\u503c\u6267\u884c\u5bf9\u5e94\u7684\u4ee3\u7801\u5757\uff0c\u6bcf\u4e2a\u9009\u9879\u88ab\u79f0\u4e3a\u4e00\u4e2a case \uff0c\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u53ef\u9009\u7684 default \u5206\u652f\u4f5c\u4e3a\u6240\u6709 case \u4e0d\u5339\u914d\u65f6\u7684\u5907\u9009\u65b9\u6848\u3002 \u6761\u4ef6\u8bed\u53e5\u4f7f\u5f97\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\u53ef\u4ee5\u6839\u636e\u4e0d\u540c\u7684\u60c5\u51b5\u91c7\u53d6\u4e0d\u540c\u7684\u884c\u52a8\uff0c\u4ece\u800c\u589e\u5f3a\u4e86\u7a0b\u5e8f\u7684\u7075\u6d3b\u6027\u548c\u903b\u8f91\u6027\u3002\u4ee5\u4e0b\u662f\u5e38\u89c1\u7684\u7ec4\u5408\uff1a 1.1 if \u6761\u4ef6\u8bed\u53e5 \u8bed\u6cd5\u5982\u4e0b\uff1a if(\u5e03\u5c14\u8868\u8fbe\u5f0f) { //\u5982\u679c\u5e03\u5c14\u8868\u8fbe\u5f0f\u4e3atrue\u5c06\u6267\u884c\u7684\u8bed\u53e5 } \u5982\u679c\u5e03\u5c14\u8868\u8fbe\u5f0f\u6210\u7acb\uff08true\uff09\uff0c\u5219\u6267\u884c if \u8bed\u53e5\u4e2d\u7684\u4ee3\u7801\u5757\uff0c\u5982\u679c\u4e0d\u6210\u7acb\uff08false\uff09\u5219\u6267\u884c if \u8bed\u53e5\u5757\u540e\u9762\u7684\u4ee3\u7801\u3002 \u7b80\u5355\u6848\u4f8b\uff1a \u952e\u76d8\u5f55\u5165\u4e00\u4e2a\u6570\uff0c\u5982\u679c\u8fd9\u4e2a\u6570\u5927\u4e8e10\u5e76\u4e14\u5c0f\u4e8e100\uff0c\u5219\u63a7\u5236\u53f0\u8f93\u51fa\u5408\u683c import java.util.Scanner; public class IfTest01 { public static void main(String[] args) { Scanner sc = new Scanner(System.in); System.out.println(\"\u8bf7\u8f93\u5165\u4e00\u4e2a\u6570\u5b57\"); int num = sc.nextInt(); if (num > 10 && num < 100){ System.out.println(\"\u5408\u683c\"); } } } 1.2 if...else \u6761\u4ef6\u8bed\u53e5 \u8bed\u6cd5\u5982\u4e0b\uff1a if(\u5e03\u5c14\u8868\u8fbe\u5f0f){ //\u5982\u679c\u5e03\u5c14\u8868\u8fbe\u5f0f\u7684\u503c\u4e3atrue } else { //\u5982\u679c\u5e03\u5c14\u8868\u8fbe\u5f0f\u7684\u503c\u4e3afalse } \u5982\u679c\u5e03\u5c14\u8868\u8fbe\u5f0f\u6210\u7acb\uff08true\uff09\uff0c\u5219\u6267\u884c if \u8bed\u53e5\u4e2d\u7684\u4ee3\u7801\u5757\uff0c\u5982\u679c\u4e0d\u6210\u7acb\uff08false\uff09\uff0c\u5219\u6267\u884celse\u8bed\u53e5\u4e2d\u7684\u4ee3\u7801\u5757\u3002 \u7b80\u5355\u6848\u4f8b\uff1a \u5b9a\u4e49\u4e00\u4e2a\u5e03\u5c14\u7c7b\u578b\uff0c\u5c06true\u8d4b\u503c\u7ed9incident\u3002\u5982\u679c\u4e8b\u4ef6\uff08incident\uff09\u4e3a\u771f\u5219\u8f93\u51fa\u6b63\u786e\uff0c\u5426\u5219\u8f93\u51fa\u9519\u8bef\u3002 public class IfTest02 { public static void main(String[] args) { //\u5b9a\u4e49\u4e8b\u4ef6\u4e3a\u771f boolean incident = true; if (incident){ System.out.println(\"\u6b63\u786e\"); } else { System.out.println(\"\u9519\u8bef\"); } } } 1.3 if...else if...else \u8bed\u6cd5\u5982\u4e0b\uff1a if(\u5e03\u5c14\u8868\u8fbe\u5f0f 1){ //\u5982\u679c\u5e03\u5c14\u8868\u8fbe\u5f0f 1\u7684\u503c\u4e3atrue\u6267\u884c\u4ee3\u7801 } else if(\u5e03\u5c14\u8868\u8fbe\u5f0f 2){ //\u5982\u679c\u5e03\u5c14\u8868\u8fbe\u5f0f 2\u7684\u503c\u4e3atrue\u6267\u884c\u4ee3\u7801 } else if(\u5e03\u5c14\u8868\u8fbe\u5f0f 3){ //\u5982\u679c\u5e03\u5c14\u8868\u8fbe\u5f0f 3\u7684\u503c\u4e3atrue\u6267\u884c\u4ee3\u7801 } else { //\u5982\u679c\u4ee5\u4e0a\u5e03\u5c14\u8868\u8fbe\u5f0f\u90fd\u4e0d\u4e3atrue\u6267\u884c\u4ee3\u7801 } \u5982\u679c\u5e03\u5c14\u8868\u8fbe\u5f0f1\u4e3a\u771f\uff0c\u5219\u6267\u884c\u5e03\u5c14\u8868\u8fbe\u5f0f2\uff1b\u5982\u679c\u5e03\u5c14\u8868\u8fbe\u5f0f2\u4e3a\u771f\uff0c\u5219\u6267\u884c\u5e03\u5c14\u8868\u8fbe\u5f0f3\uff1b\u4f9d\u6b21\u6267\u884c\u540e\u9762\u7684\u5e03\u5c14\u8868\u793a\uff0c\u76f4\u5230\u5e03\u5c14\u8868\u793a\u4e3a\u5047\uff0c\u5219\u6267\u884celse\u8bed\u53e5\u4e2d\u7684\u4ee3\u7801\u5757\u3002 \u7b80\u5355\u6848\u4f8b\uff1a \u67d0\u8d85\u5e02\u4f1a\u5458\u5236\u5ea6\u5206\u4e3avip1\uff0cvip2\uff0cvip3\u4e09\u4e2a\u7b49\u7ea7\uff0c\u6bcf\u4e2a\u7b49\u7ea7\u5bf9\u5e94\u7684\u6298\u6263\u4e0d\u540c\uff1avip1\u5ba2\u6237\u8d2d\u4e70\u5546\u54c1\u62539\u6298\uff0cvip2\u5ba2\u6237\u8d2d\u4e70\u5546\u54c1\u62538\u6298\uff0cvip3\u5ba2\u6237\u8d2d\u4e70\u5546\u54c1\u62537\u6298\u3002\u73b0\u8981\u6c42\u5b9a\u4e49\u4e00\u4e2a\u5546\u54c1\u4ef7\u683c\uff0c\u5728\u63a7\u5236\u53f0\u8f93\u5165\u5ba2\u6237\u7b49\u7ea7\uff0c\u8ba1\u7b97\u51fa\u8be5\u5ba2\u6237\u5bf9\u5e94\u7684vip\u7b49\u7ea7\u8d2d\u4e70\u5546\u54c1\u540e\u5e94\u8be5\u4ed8\u591a\u5c11\u94b1\u3002 import java.util.Scanner; public class IfTest05f { public static void main(String[] args) { int price = 1000; Scanner sc = new Scanner(System.in); System.out.println(\"\u8bf7\u8f93\u5165\u4f1a\u5458\u7684\u7ea7\u522b\"); int vip = sc.nextInt(); if (vip == 1){ System.out.println(\"\u5b9e\u9645\u652f\u4ed8\u7684\u94b1\u4e3a\" + (price * 0.9)); } else if (vip == 2) { System.out.println(\"\u5b9e\u9645\u652f\u4ed8\u7684\u94b1\u4e3a\" + (price * 0.8)); } else if (vip == 3) { System.out.println(\"\u5b9e\u9645\u652f\u4ed8\u7684\u94b1\u4e3a\" + (price * 0.7)); } else { System.out.println(\"\u5b9e\u9645\u652f\u4ed8\u7684\u94b1\u4e3a\" + price); } } } 1.4 \u5d4c\u5957\u7684if...else \u8bed\u53e5 \u8bed\u6cd5\u5982\u4e0b\uff1a if(\u5e03\u5c14\u8868\u8fbe\u5f0f 1){ \u5982\u679c\u5e03\u5c14\u8868\u8fbe\u5f0f 1\u7684\u503c\u4e3atrue\u6267\u884c\u4ee3\u7801 if(\u5e03\u5c14\u8868\u8fbe\u5f0f 2){ \u5982\u679c\u5e03\u5c14\u8868\u8fbe\u5f0f 2\u7684\u503c\u4e3atrue\u6267\u884c\u4ee3\u7801 } } \u7b80\u5355\u6848\u4f8b\uff1a \u952e\u76d8\u5f55\u5165\u4e00\u4e2a\u6574\u6570\u4ee3\u8868\u5b66\u751f\u7684\u6210\u7ee9\uff0c\u89c4\u5b9a\u8303\u56f4\u5728\uff080-100\uff09\u3002\u5f53\u8f93\u5165\u7684\u6210\u7ee9\u5927\u4e8e\u7b49\u4e8e90\u65f6\uff0c\u63a7\u5236\u53f0\u8f93\u51fa\u4f18\u79c0\uff1b\u5927\u4e8e\u7b49\u4e8e80\u5c0f\u4e8e90\u65f6\uff0c\u63a7\u5236\u53f0\u8f93\u51fa\u826f\u597d\uff1b\u5927\u4e8e\u7b49\u4e8e60\u5c0f\u4e8e80\u65f6\uff0c\u63a7\u5236\u53f0\u8f93\u51fa\u5408\u683c\uff1b\u5c0f\u4e8e60\u65f6\uff0c\u63a7\u5236\u53f0\u8f93\u51fa\u4e0d\u5408\u683c\u3002\u5176\u4ed6\u60c5\u51b5\u5219\u63d0\u793a\u8f93\u5165\u4e0d\u5408\u6cd5\u3002 import java.util.Scanner; public class IfTest04 { public static void main(String[] args) { Scanner sc = new Scanner(System.in); System.out.println(\"\u8bf7\u8f93\u5165\u4e00\u4e2a\u6574\u6570\"); int num = sc.nextInt(); if (num > 0 && num <= 100) { if (num >= 90) { System.out.println(\"\u4f18\u79c0\"); } else if (num >= 80 && num < 90) { System.out.println(\"\u826f\u597d\"); } else if (num >= 60 && num < 80) { System.out.println(\"\u5408\u683c\"); } else { System.out.println(\"\u4e0d\u5408\u683c\"); } } else { System.out.println(\"\u8f93\u5165\u4e0d\u5408\u6cd5\"); } } } 1.5 switch \u8bed\u53e5 \u8bed\u6cd5\u5982\u4e0b\uff1a switch (expression) { case value1: // \u5f53\u8868\u8fbe\u5f0f\u7684\u503c\u7b49\u4e8evalue1\u65f6\u6267\u884c\u7684\u4ee3\u7801\u5757 break; case value2: // \u5f53\u8868\u8fbe\u5f0f\u7684\u503c\u7b49\u4e8evalue2\u65f6\u6267\u884c\u7684\u4ee3\u7801\u5757 break; ... default: break; // \u5f53\u8868\u8fbe\u5f0f\u7684\u503c\u4e0e\u6240\u6709case\u4e0d\u5339\u914d\u65f6\u6267\u884c\u7684\u4ee3\u7801\u5757\uff08\u53ef\u9009\uff09 } \u7b80\u5355\u6848\u4f8b\uff1a\u6839\u636e\u963f\u62c9\u4f2f\u6570\u5b57\u8f93\u51fa\u6587\u5b57\u4fe1\u606f\u7684\u661f\u671f\u51e0\u3002 int dayOfWeek = 1; switch (dayOfWeek) { case 1: System.out.println(\"Monday\"); break; case 2: System.out.println(\"Tuesday\"); break; // \u7701\u7565\u5176\u4f59case default: System.out.println(\"Invalid day\"); break; } 2. Java\u7684\u5faa\u73af\u8bed\u53e5 \u5728Java\u4e2d\uff0c\u5faa\u73af\u8bed\u53e5\u7528\u4e8e\u91cd\u590d\u6267\u884c\u4e00\u6bb5\u4ee3\u7801\uff0c\u76f4\u5230\u6ee1\u8db3\u67d0\u4e2a\u6761\u4ef6\u4e3a\u6b62\u6216\u8fbe\u5230\u6307\u5b9a\u7684\u6b21\u6570\u3002\u4e3b\u8981\u7684\u5faa\u73af\u8bed\u53e5\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a 2.1 for\u5faa\u73af \uff1a java for (initialization; condition; update) { // \u5faa\u73af\u4f53 } - initialization \uff1a\u5faa\u73af\u53d8\u91cf\u7684\u521d\u59cb\u5316\u3002 - condition \uff1a\u5faa\u73af\u6761\u4ef6\uff0c\u6bcf\u6b21\u5faa\u73af\u5f00\u59cb\u524d\u90fd\u4f1a\u68c0\u67e5\u3002 - update \uff1a\u5faa\u73af\u53d8\u91cf\u66f4\u65b0\uff0c\u901a\u5e38\u662f\u589e\u52a0\u6216\u51cf\u5c11\u5faa\u73af\u53d8\u91cf\u7684\u503c\u3002 \u793a\u4f8b\uff1a java for (int i = 1; i <= 5; i++) { System.out.println(\"Count is: \" + i); } 2.2 \u5012\u5e8f\u904d\u5386 \u5012\u5e8f\u904d\u5386\u662f\u6307\u4ece\u5927\u5230\u5c0f\u6216\u4ece\u540e\u5411\u524d\u904d\u5386\u6570\u636e\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u3002\u5728Java\u4e2d\uff0c\u5012\u5e8f\u904d\u5386\u901a\u5e38\u7528\u4e8e\u6570\u7ec4\u3001\u5217\u8868\u6216\u9700\u8981\u9006\u5e8f\u8f93\u51fa\u7684\u60c5\u51b5\u3002\u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\u548c\u8be6\u7ec6\u89e3\u91ca\uff1a for (int i = 5; i > 0; i--) { System.out.println(\"Count is: \" + i); } 2.3 IntStream.range()\u51fd\u6570 \u5728Java\u4e2d\uff0c\u5e76\u6ca1\u6709\u50cf\u4e00\u4e9b\u5176\u4ed6\u7f16\u7a0b\u8bed\u8a00\uff08\u5982Python\uff09\u4e2d\u76f4\u63a5\u63d0\u4f9b\u7684\u5185\u7f6e\u7684 range \u51fd\u6570\uff0c\u4e0d\u8fc7Java 8 \u5f15\u5165\u4e86 IntStream \u7c7b\u6765\u652f\u6301\u51fd\u6570\u5f0f\u7f16\u7a0b\u98ce\u683c\u7684\u64cd\u4f5c\u3002\u53ef\u4ee5\u4f7f\u7528 IntStream.range() \u65b9\u6cd5\u6765\u751f\u6210\u4e00\u4e2a\u6574\u6570\u8303\u56f4\u3002 IntStream.range(start, end).forEach(i -> { // \u8fd9\u91cc\u6267\u884c\u5faa\u73af\u4f53\u5185\u7684\u64cd\u4f5c\uff0ci \u662f\u5f53\u524d\u7684\u6574\u6570\u503c }); \u8fd9\u91cc\u7684 start \u662f\u8303\u56f4\u7684\u8d77\u59cb\u503c\uff08\u5305\u542b\uff09\uff0c end \u662f\u8303\u56f4\u7684\u7ed3\u675f\u503c\uff08\u4e0d\u5305\u542b\uff09\u3002 \u53c2\u6570\u8bf4\u660e \u8d77\u59cb\u503c ( start ) : \u6570\u503c\u8303\u56f4\u7684\u8d77\u59cb\u503c\uff0c\u53ef\u4ee5\u662f\u4efb\u610f\u6574\u6570\u3002 \u7ed3\u675f\u503c ( end ) : \u6570\u503c\u8303\u56f4\u7684\u7ed3\u675f\u503c\uff0c\u53ef\u4ee5\u662f\u4efb\u610f\u6574\u6570\u3002\u5728\u4f7f\u7528 for \u5faa\u73af\u65f6\uff0c\u7ed3\u675f\u503c\u662f\u5305\u542b\u5728\u8303\u56f4\u5185\u7684\uff1b\u800c\u5728\u4f7f\u7528 IntStream.range() \u65b9\u6cd5\u65f6\uff0c\u7ed3\u675f\u503c\u662f\u4e0d\u5305\u542b\u5728\u8303\u56f4\u5185\u7684\u3002 \u793a\u4f8b \u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528 IntStream.range() \u65b9\u6cd5\u6765\u904d\u5386\u6570\u503c\u8303\u56f4\u7684\u793a\u4f8b\uff1a // \u4f7f\u7528 IntStream.range() \u904d\u5386\u8303\u56f4 [1, 5) System.out.println(\"\\nUsing IntStream.range():\"); IntStream.range(1, 6).forEach(i -> System.out.println(\"Count is: \" + i)); \u8f93\u51fa\u7ed3\u679c Count is: 1 Count is: 2 Count is: 3 Count is: 4 Count is: 5 2.4 while\u5faa\u73af \uff1a java while (condition) { // \u5faa\u73af\u4f53 } - condition \uff1a\u5faa\u73af\u6761\u4ef6\uff0c\u5728\u6bcf\u6b21\u5faa\u73af\u8fed\u4ee3\u5f00\u59cb\u4e4b\u524d\u8bc4\u4f30\u3002 \u793a\u4f8b\uff1a java int i = 1; while (i <= 5) { System.out.println(\"Count is: \" + i); i++; } 2.5 \u589e\u5f3afor\u5faa\u73af\uff08foreach\u5faa\u73af\uff09 \uff1a \u7528\u4e8e\u904d\u5386\u6570\u7ec4\u6216\u96c6\u5408\u4e2d\u7684\u5143\u7d20\uff0c\u4e0d\u9700\u8981\u663e\u5f0f\u5730\u63a7\u5236\u5faa\u73af\u53d8\u91cf\u3002 java for (type element : array/collection) { // \u5faa\u73af\u4f53 } \u793a\u4f8b\uff1a java int[] numbers = {1, 2, 3, 4, 5}; for (int number : numbers) { System.out.println(\"Number is: \" + number); } 3. break \u8bed\u53e5 \u5728Java\u4e2d\uff0c break \u662f\u4e00\u79cd\u63a7\u5236\u6d41\u8bed\u53e5\uff0c\u901a\u5e38\u7528\u4e8e\u5728\u5faa\u73af\u6216 switch \u8bed\u53e5\u4e2d\u63d0\u524d\u7ed3\u675f\u4ee3\u7801\u5757\u7684\u6267\u884c\u3002\u5177\u4f53\u6765\u8bf4\uff0c break \u8bed\u53e5\u53ef\u4ee5\u7528\u4e8e\u4ee5\u4e0b\u4e24\u79cd\u60c5\u51b5\uff1a 3.1 \u5728\u5faa\u73af\u4e2d\u4f7f\u7528 break \uff1a \u5f53\u5728\u5faa\u73af\u4e2d\u6267\u884c break \u8bed\u53e5\u65f6\uff0c\u7a0b\u5e8f\u5c06\u7acb\u5373\u9000\u51fa\u5f53\u524d\u7684\u5faa\u73af\uff0c\u7ee7\u7eed\u6267\u884c\u5faa\u73af\u540e\u9762\u7684\u4ee3\u7801\u3002\u8fd9\u5bf9\u4e8e\u5728\u6ee1\u8db3\u67d0\u4e2a\u6761\u4ef6\u540e\u4e0d\u518d\u7ee7\u7eed\u6267\u884c\u5faa\u73af\u4f53\u5185\u7684\u4ee3\u7801\u975e\u5e38\u6709\u7528\u3002 \u793a\u4f8b\uff1a java for (int i = 1; i <= 10; i++) { System.out.println(i); if (i == 5) { break; // \u5f53 i \u7b49\u4e8e 5 \u65f6\u9000\u51fa\u5faa\u73af } } \u8f93\u51fa\uff1a 1 2 3 4 5 3.2 \u5728 switch \u8bed\u53e5\u4e2d\u4f7f\u7528 break \uff1a \u5728 switch \u8bed\u53e5\u4e2d\uff0c\u6bcf\u4e2a case \u5206\u652f\u901a\u5e38\u4f1a\u5728\u6267\u884c\u5b8c\u6bd5\u540e\u7ee7\u7eed\u6267\u884c\u4e0b\u4e00\u4e2a case \u5206\u652f\uff0c\u9664\u975e\u5728\u67d0\u4e2a case \u5206\u652f\u4e2d\u4f7f\u7528\u4e86 break \u8bed\u53e5\u3002\u8fd9\u65f6\u7a0b\u5e8f\u5c06\u8df3\u51fa switch \u8bed\u53e5\uff0c\u4e0d\u518d\u7ee7\u7eed\u6267\u884c\u540e\u7eed\u7684 case \u5206\u652f\u3002 \u793a\u4f8b\uff1a java int dayOfWeek = 3; switch (dayOfWeek) { case 1: System.out.println(\"Monday\"); break; case 2: System.out.println(\"Tuesday\"); break; case 3: System.out.println(\"Wednesday\"); break; default: System.out.println(\"Invalid day\"); break; } \u8f93\u51fa\uff1a Wednesday \u6ce8\u610f\u4e8b\u9879\uff1a break \u8bed\u53e5\u53ea\u80fd\u7528\u5728\u5faa\u73af ( for , while , do-while ) \u6216 switch \u8bed\u53e5\u7684\u5185\u90e8\u3002 \u5728\u5d4c\u5957\u7684\u5faa\u73af\u4e2d\uff0c break \u8bed\u53e5\u9ed8\u8ba4\u9000\u51fa\u6700\u5185\u5c42\u7684\u5faa\u73af\uff0c\u5982\u679c\u60f3\u8981\u9000\u51fa\u5916\u5c42\u5faa\u73af\uff0c\u53ef\u4ee5\u4f7f\u7528\u5e26\u6807\u7b7e\u7684 break \u8bed\u53e5\uff08\u4f8b\u5982 break label; \uff09\u3002 3.3 \u5d4c\u5957\u5faa\u73af\u7684break \u8bed\u6cd5\uff1a \u5e26\u6807\u7b7e\u7684 break \u8bed\u6cd5\u5982\u4e0b\uff1a labelName: outerLoop { // \u5faa\u73af\u4f53 innerLoop { // \u5faa\u73af\u4f53 if (condition) { break labelName; // \u8df3\u51fa\u6807\u7b7e\u4e3a labelName \u7684\u5916\u5c42\u5faa\u73af } } } \u5176\u4e2d labelName \u662f\u7528\u6237\u5b9a\u4e49\u7684\u6807\u7b7e\u540d\uff0c\u901a\u5e38\u9075\u5faa\u6807\u8bc6\u7b26\u547d\u540d\u89c4\u5219\u3002 \u793a\u4f8b\uff1a \u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u5d4c\u5957\u7684\u5faa\u73af\u7ed3\u6784\uff0c\u6211\u4eec\u60f3\u5728\u5185\u5c42\u5faa\u73af\u4e2d\u627e\u5230\u67d0\u4e2a\u6761\u4ef6\u6ee1\u8db3\u65f6\u9000\u51fa\u5916\u5c42\u5faa\u73af\u3002 public class BreakWithLabelExample { public static void main(String[] args) { outerLoop: // \u6807\u7b7e\u540d outerLoop for (int i = 1; i <= 3; i++) { System.out.println(\"Outer loop iteration \" + i); innerLoop: for (int j = 1; j <= 3; j++) { System.out.println(\" Inner loop iteration \" + j); if (i == 2 && j == 2) { break outerLoop; // \u5f53 i \u7b49\u4e8e 2 \u4e14 j \u7b49\u4e8e 2 \u65f6\u8df3\u51fa\u5916\u5c42\u5faa\u73af } } } System.out.println(\"Loop ends\"); } } \u793a\u4f8b\u89e3\u91ca\uff1a outerLoop \u662f\u5916\u5c42\u5faa\u73af\u7684\u6807\u7b7e\u540d\u3002 innerLoop \u662f\u5185\u5c42\u5faa\u73af\u3002 \u5728\u5185\u5c42\u5faa\u73af\u4e2d\uff0c\u5f53 i \u7b49\u4e8e 2 \u4e14 j \u7b49\u4e8e 2 \u65f6\uff0c\u6267\u884c break outerLoop; \uff0c\u8fd9\u4f1a\u7acb\u5373\u8df3\u51fa\u5916\u5c42\u5faa\u73af outerLoop \uff0c\u7ee7\u7eed\u6267\u884c\u5916\u5c42\u5faa\u73af\u540e\u9762\u7684\u4ee3\u7801\u3002 \u63a7\u5236\u53f0\u8f93\u51fa\u5982\u4e0b\uff1a Outer loop iteration 1 Inner loop iteration 1 Inner loop iteration 2 Loop ends \u6ce8\u610f\u4e8b\u9879\uff1a \u4f7f\u7528\u5e26\u6807\u7b7e\u7684 break \u8bed\u53e5\u65f6\uff0c\u6807\u7b7e\u5fc5\u987b\u4f4d\u4e8e\u4f60\u60f3\u8981\u8df3\u51fa\u7684\u5faa\u73af\u4e4b\u524d\uff0c\u5e76\u4e14\u7d27\u8ddf\u5728 break \u5173\u952e\u5b57\u4e4b\u540e\u3002 \u6807\u7b7e\u540d\u53ef\u4ee5\u662f\u4efb\u4f55\u5408\u6cd5\u7684Java\u6807\u8bc6\u7b26\uff0c\u4f46\u5efa\u8bae\u4f7f\u7528\u6709\u610f\u4e49\u7684\u540d\u5b57\u6765\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002 \u5e26\u6807\u7b7e\u7684 break \u8bed\u53e5\u5728\u5904\u7406\u590d\u6742\u7684\u5d4c\u5957\u5faa\u73af\u7ed3\u6784\u6216\u5e0c\u671b\u5728\u7279\u5b9a\u6761\u4ef6\u4e0b\u63d0\u524d\u8df3\u51fa\u5916\u5c42\u5faa\u73af\u65f6\u975e\u5e38\u6709\u7528\u3002 4. continue \u8bed\u53e5 \u5728Java\u4e2d\uff0c continue \u662f\u4e00\u79cd\u63a7\u5236\u6d41\u8bed\u53e5\uff0c\u7528\u4e8e\u8df3\u8fc7\u5f53\u524d\u5faa\u73af\u7684\u5269\u4f59\u4ee3\u7801\uff0c\u76f4\u63a5\u8fdb\u5165\u4e0b\u4e00\u6b21\u5faa\u73af\u7684\u8fed\u4ee3\u3002\u5b83\u901a\u5e38\u7528\u4e8e\u5faa\u73af\u7ed3\u6784\u4e2d\uff0c\u53ef\u4ee5\u5e2e\u52a9\u7a0b\u5e8f\u8df3\u8fc7\u67d0\u4e9b\u7279\u5b9a\u6761\u4ef6\u4e0b\u4e0d\u5fc5\u8981\u7684\u4ee3\u7801\u6267\u884c\u3002 \u4f7f\u7528\u65b9\u6cd5\u548c\u8bed\u6cd5\uff1a \u5728\u5faa\u73af\u4e2d\u4f7f\u7528 continue \u7684\u4e00\u822c\u8bed\u6cd5\u5982\u4e0b\uff1a for (initialization; condition; update) { // \u4ee3\u7801\u5757 if (conditionToSkip) { continue; // \u8df3\u8fc7\u672c\u6b21\u5faa\u73af\u7684\u5269\u4f59\u4ee3\u7801\uff0c\u8fdb\u884c\u4e0b\u4e00\u6b21\u5faa\u73af } // \u5176\u4ed6\u4ee3\u7801 } \u6216\u8005\u5728 while \u5faa\u73af\u4e2d\u4f7f\u7528\uff1a while (condition) { // \u4ee3\u7801\u5757 if (conditionToSkip) { continue; // \u8df3\u8fc7\u672c\u6b21\u5faa\u73af\u7684\u5269\u4f59\u4ee3\u7801\uff0c\u8fdb\u884c\u4e0b\u4e00\u6b21\u5faa\u73af } // \u5176\u4ed6\u4ee3\u7801 } \u793a\u4f8b\uff1a \u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f7f\u7528 continue \u7684\u793a\u4f8b\uff0c\u6f14\u793a\u4e86\u5982\u4f55\u5728\u5faa\u73af\u4e2d\u8df3\u8fc7\u5076\u6570\u7684\u6253\u5370\uff1a public class ContinueExample { public static void main(String[] args) { for (int i = 1; i <= 5; i++) { if (i % 2 == 0) { continue; // \u8df3\u8fc7\u5076\u6570 } System.out.println(i); } } } \u8f93\u51fa\uff1a 1 3 5 \u89e3\u91ca\u548c\u6ce8\u610f\u4e8b\u9879\uff1a \u5f53\u7a0b\u5e8f\u6267\u884c\u5230 continue; \u8bed\u53e5\u65f6\uff0c\u4f1a\u7acb\u5373\u7ed3\u675f\u5f53\u524d\u5faa\u73af\u7684\u672c\u6b21\u8fed\u4ee3\uff0c\u5e76\u5f00\u59cb\u4e0b\u4e00\u6b21\u8fed\u4ee3\u3002 continue \u4e3b\u8981\u7528\u4e8e\u5728\u4e0d\u6ee1\u8db3\u67d0\u4e9b\u6761\u4ef6\u65f6\u8df3\u8fc7\u5269\u4f59\u4ee3\u7801\u7684\u6267\u884c\uff0c\u53ef\u4ee5\u63d0\u9ad8\u4ee3\u7801\u7684\u6548\u7387\u548c\u7b80\u6d01\u6027\u3002 \u5728\u5d4c\u5957\u5faa\u73af\u4e2d\uff0c continue \u9ed8\u8ba4\u53ea\u4f1a\u5f71\u54cd\u6700\u5185\u5c42\u7684\u5faa\u73af\u3002\u5982\u679c\u60f3\u8981\u8df3\u8fc7\u5916\u5c42\u5faa\u73af\u7684\u8fed\u4ee3\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u5e26\u6807\u7b7e\u7684 continue \u8bed\u53e5\uff0c\u7c7b\u4f3c\u4e8e\u5e26\u6807\u7b7e\u7684 break \u8bed\u53e5\u7684\u7528\u6cd5\u3002 continue \u662f\u7f16\u5199\u63a7\u5236\u6d41\u7a0b\u66f4\u52a0\u7075\u6d3b\u548c\u6e05\u6670\u7684\u91cd\u8981\u5de5\u5177\u4e4b\u4e00\uff0c\u7279\u522b\u662f\u5728\u9700\u8981\u6839\u636e\u67d0\u4e9b\u6761\u4ef6\u8df3\u8fc7\u7279\u5b9a\u4ee3\u7801\u5757\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u80fd\u6709\u6548\u7b80\u5316\u4ee3\u7801\u903b\u8f91\u3002 5. \u8bfe\u540e\u7ec3\u4e60 5.1 \u70b9\u9910\u7a0b\u5e8f \u9898\u76ee\u63cf\u8ff0\uff1a \u8bbe\u8ba1\u4e00\u4e2a\u7b80\u5355\u7684\u9910\u5385\u70b9\u5355\u7a0b\u5e8f\uff0c\u7a0b\u5e8f\u80fd\u591f\u8fde\u7eed\u63a5\u53d7\u591a\u4e2a\u987e\u5ba2\u7684\u70b9\u5355\u3002\u7a0b\u5e8f\u63d0\u524d\u77e5\u9053\u6c49\u5821\u3001\u85af\u6761\u548c\u53ef\u4e50\u7684\u4ef7\u683c\u3002\u6bcf\u4f4d\u987e\u5ba2\u53ef\u4ee5\u9009\u62e9\u70b9\u6c49\u5821\u3001\u85af\u6761\u548c\u53ef\u4e50\u7684\u6570\u91cf\uff0c\u7a0b\u5e8f\u5c06\u8f93\u51fa\u6bcf\u4f4d\u987e\u5ba2\u7684\u70b9\u5355\u5185\u5bb9\u548c\u603b\u4ef7\uff0c\u6700\u540e\u8f93\u51fa\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d\u3002 \u8981\u6c42\uff1a \u7a0b\u5e8f\u5f00\u59cb\u65f6\uff0c\u5b9a\u4e49\u6c49\u5821\u3001\u85af\u6761\u548c\u53ef\u4e50\u7684\u4ef7\u683c\u5e38\u91cf\u3002 \u4f7f\u7528\u5faa\u73af\u8bed\u53e5\u8fde\u7eed\u63a5\u53d7\u987e\u5ba2\u7684\u70b9\u5355\uff0c\u5728\u5f00\u59cb\u8ba1\u7b97\u524d\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u4e13\u7528\u7684\u53d8\u91cf\u83b7\u53d6\u7528\u6237\u610f\u56fe\u662f\u7ee7\u7eed\u70b9\u5355\u8fd8\u662f\u9000\u51fa\uff08\u4f8b\uff1a\u8f93\u5165-1\u9000\u51fa\u5e76\u8ba1\u7b97\u603b\u9500\u552e\u989d\uff0c\u5176\u4ed6\u6570\u5b57\u5219\u8fdb\u884c\u4e0b\u4e00\u8f6e\u70b9\u5355\uff09\u3002 \u6bcf\u6b21\u63a5\u53d7\u987e\u5ba2\u7684\u70b9\u5355\u540e\uff0c\u8f93\u51fa\u987e\u5ba2\u7684\u70b9\u5355\u5185\u5bb9\u548c\u672c\u6b21\u70b9\u5355\u7684\u603b\u4ef7\u3002 \u7d2f\u52a0\u6bcf\u4f4d\u987e\u5ba2\u7684\u70b9\u5355\u603b\u4ef7\u5230\u603b\u9500\u552e\u989d\u4e2d\u3002 \u9000\u51fa\u70b9\u5355\u540e\uff0c\u8f93\u51fa\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d\u3002 \u793a\u4f8b\u8fd0\u884c\uff1a \u5047\u8bbe\u64cd\u4f5c\u6d41\u7a0b\u5982\u4e0b\uff1a \u7b2c\u4e00\u4f4d\u987e\u5ba2\u70b9\u6c49\u5821 2\uff0c\u85af\u6761 1\uff0c\u53ef\u4e50 3\uff1b \u7b2c\u4e8c\u4f4d\u987e\u5ba2\u70b9\u6c49\u5821 1\uff0c\u85af\u6761 2\uff0c\u53ef\u4e50 2\uff1b \u9009\u62e9\u9000\u51fa\u7a0b\u5e8f\u3002 \u7a0b\u5e8f\u7684\u8f93\u51fa\u5e94\u5982\u4e0b\u6240\u793a\uff1a \u8bf7\u70b9\u5355\uff08\u8f93\u5165-1\u9000\u51fa\uff09\uff1a 0 \u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf\uff1a1 \u8bf7\u8f93\u5165\u85af\u6761\u7684\u6570\u91cf\uff1a2 \u8bf7\u8f93\u5165\u53ef\u4e50\u7684\u6570\u91cf\uff1a3 \u5ba2\u6237\u70b9\u5355\u5185\u5bb9\uff1a \u6c49\u5821 x 2 \u85af\u6761 x 1 \u53ef\u4e50 x 3 \u672c\u6b21\u70b9\u5355\u603b\u4ef7\uff1a48.5 \u5143 \u8bf7\u70b9\u5355\uff08\u8f93\u5165-1\u9000\u51fa\uff09\uff1a 0 \u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf\uff1a1 \u8bf7\u8f93\u5165\u85af\u6761\u7684\u6570\u91cf\uff1a2 \u8bf7\u8f93\u5165\u53ef\u4e50\u7684\u6570\u91cf\uff1a2 \u5ba2\u6237\u70b9\u5355\u5185\u5bb9\uff1a \u6c49\u5821 x 1 \u85af\u6761 x 2 \u53ef\u4e50 x 2 \u672c\u6b21\u70b9\u5355\u603b\u4ef7\uff1a35.0 \u5143 \u8bf7\u70b9\u5355\uff08\u8f93\u5165-1\u9000\u51fa\uff09\uff1a -1 \u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d\uff1a83.5 \u5143 \u53c2\u8003\u89e3\u7b54\uff1a import java.util.Scanner; public class RestaurantOrder { public static void main(String[] args) { // \u5b9a\u4e49\u4ef7\u683c\u5e38\u91cf final double BURGER_PRICE = 12.5; final double FRIES_PRICE = 6.0; final double COKE_PRICE = 4.5; // \u521b\u5efaScanner\u5bf9\u8c61\u4ee5\u83b7\u53d6\u7528\u6237\u8f93\u5165 Scanner scanner = new Scanner(System.in); // \u521d\u59cb\u5316\u603b\u9500\u552e\u989d double totalSales = 0.0; // \u5f00\u59cb\u5faa\u73af\uff0c\u76f4\u5230\u987e\u5ba2\u9009\u62e9\u9000\u51fa while (true) { // \u521d\u59cb\u5316\u70b9\u5355\u6570\u91cf int option = 0; int burgers = 0; int fries = 0; int cokes = 0; // \u83b7\u53d6\u7528\u6237\u70b9\u5355 System.out.print(\"\\n\u8bf7\u70b9\u5355\uff08\u8f93\u5165-1\u9000\u51fa\uff0c\u5176\u4ed6\u6574\u6570\u8fdb\u5165\u70b9\u5355\uff09\uff1a\"); option = scanner.nextInt(); // \u5982\u679c\u8f93\u5165\u4e3a0\uff0c\u5219\u9000\u51fa\u5faa\u73af if (option == -1) { break; } System.out.print(\"\u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf\uff1a\"); burgers = scanner.nextInt(); System.out.print(\"\u8bf7\u8f93\u5165\u85af\u6761\u7684\u6570\u91cf\uff1a\"); fries = scanner.nextInt(); System.out.print(\"\u8bf7\u8f93\u5165\u53ef\u4e50\u7684\u6570\u91cf\uff1a\"); cokes = scanner.nextInt(); // \u6253\u5370\u5ba2\u6237\u70b9\u5355\u5185\u5bb9 System.out.println(\"\\n\u5ba2\u6237\u70b9\u5355\u5185\u5bb9\uff1a\"); if (burgers > 0) { System.out.println(\"\u6c49\u5821 x \" + burgers); } if (fries > 0) { System.out.println(\"\u85af\u6761 x \" + fries); } if (cokes > 0) { System.out.println(\"\u53ef\u4e50 x \" + cokes); } // \u8ba1\u7b97\u672c\u6b21\u70b9\u5355\u7684\u603b\u4ef7 double orderTotal = burgers * BURGER_PRICE + fries * FRIES_PRICE + cokes * COKE_PRICE; // \u7d2f\u52a0\u5230\u603b\u9500\u552e\u989d totalSales += orderTotal; // \u6253\u5370\u672c\u6b21\u70b9\u5355\u7684\u603b\u4ef7 System.out.println(\"\\n\u672c\u6b21\u70b9\u5355\u603b\u4ef7\uff1a\" + orderTotal + \" \u5143\"); } // \u6253\u5370\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d System.out.println(\"\\n\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d\uff1a\" + totalSales + \" \u5143\"); // \u5173\u95edScanner scanner.close(); } } 5.2 \u8ba1\u7b97\u5e76\u8f93\u51fa 1 \u5230 100 \u4e4b\u95f4\u6240\u6709\u4e0d\u80fd\u88ab 3 \u6574\u9664\u7684\u6570\u7684\u5e73\u65b9\u548c \u9898\u76ee\u63cf\u8ff0\uff1a \u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u8ba1\u7b97\u5e76\u8f93\u51fa 1 \u5230 100 \u4e4b\u95f4\u6240\u6709\u4e0d\u80fd\u88ab 3 \u6574\u9664\u7684\u6570\u7684\u5e73\u65b9\u548c\u3002\u5728\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u5e73\u65b9\u548c\u8d85\u8fc7 1000\uff0c\u5219\u505c\u6b62\u8ba1\u7b97\u5e76\u8f93\u51fa\u5f53\u524d\u7684\u5e73\u65b9\u548c\u503c\u3002 \u89e3\u9898\u601d\u8def\uff1a \u4f7f\u7528\u4e00\u4e2a\u5faa\u73af\u6765\u904d\u5386\u4ece 1 \u5230 100 \u7684\u6240\u6709\u6570\u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u6570\uff0c\u4f7f\u7528\u6761\u4ef6\u8bed\u53e5\u5224\u65ad\u662f\u5426\u80fd\u88ab 3 \u6574\u9664\uff1a \u5982\u679c\u80fd\u88ab 3 \u6574\u9664\uff0c\u4f7f\u7528 continue \u8df3\u8fc7\u8fd9\u4e2a\u6570\uff0c\u4e0d\u8fdb\u884c\u5e73\u65b9\u548c\u7684\u7d2f\u52a0\u3002 \u5982\u679c\u4e0d\u80fd\u88ab 3 \u6574\u9664\uff0c\u8ba1\u7b97\u8be5\u6570\u7684\u5e73\u65b9\uff0c\u5e76\u7d2f\u52a0\u5230\u5e73\u65b9\u548c\u53d8\u91cf\u4e2d\u3002 \u5728\u7d2f\u52a0\u8fc7\u7a0b\u4e2d\uff0c\u4f7f\u7528\u6761\u4ef6\u8bed\u53e5\u68c0\u67e5\u5e73\u65b9\u548c\u662f\u5426\u8d85\u8fc7 1000\uff1a \u5982\u679c\u8d85\u8fc7 1000\uff0c\u5219\u4f7f\u7528 break \u505c\u6b62\u5faa\u73af\u3002 \u6700\u7ec8\u8f93\u51fa\u505c\u6b62\u65f6\u7684\u5e73\u65b9\u548c\u503c\u3002 \u793a\u4f8b\u4ee3\u7801\uff1a public class SumOfSquares { public static void main(String[] args) { int sum = 0; for (int i = 1; i <= 100; i++) { if (i % 3 == 0) { continue; // \u8df3\u8fc7\u80fd\u88ab 3 \u6574\u9664\u7684\u6570 } int square = i * i; sum += square; if (sum > 1000) { System.out.println(\"\u5f53\u524d\u5e73\u65b9\u548c\u8d85\u8fc7 1000\uff0c\u505c\u6b62\u8ba1\u7b97\u3002\"); System.out.println(\"\u5f53\u524d\u5e73\u65b9\u548c\u4e3a: \" + sum); break; } } if (sum <= 1000) { System.out.println(\"\u6700\u7ec8\u5e73\u65b9\u548c\u4e3a: \" + sum); } } } \u793a\u4f8b\u8fd0\u884c\u548c\u8f93\u51fa\uff1a \u5728\u8fd0\u884c\u4e0a\u8ff0\u4ee3\u7801\u65f6\uff0c\u4f1a\u4f9d\u6b21\u8ba1\u7b97 1 \u5230 100 \u4e4b\u95f4\u6240\u6709\u4e0d\u80fd\u88ab 3 \u6574\u9664\u7684\u6570\u7684\u5e73\u65b9\uff0c\u5e76\u7d2f\u52a0\u5230\u5e73\u65b9\u548c\u53d8\u91cf sum \u4e2d\u3002\u5982\u679c\u7d2f\u52a0\u8fc7\u7a0b\u4e2d\u53d1\u73b0\u5e73\u65b9\u548c\u8d85\u8fc7 1000\uff0c\u5219\u505c\u6b62\u8ba1\u7b97\uff0c\u5e76\u8f93\u51fa\u5f53\u524d\u7684\u5e73\u65b9\u548c\u503c\u3002 \u8f93\u51fa\u793a\u4f8b\uff1a \u5f53\u524d\u5e73\u65b9\u548c\u8d85\u8fc7 1000\uff0c\u505c\u6b62\u8ba1\u7b97\u3002 \u5f53\u524d\u5e73\u65b9\u548c\u4e3a: 1025","title":"Lesson2 Java\u7684\u6761\u4ef6\u8bed\u53e5\u4e0e\u5faa\u73af\u8bed\u53e5"},{"location":"lesson2/Lesson2%20Java/#lesson2-java","text":"","title":"Lesson2 Java\u7684\u6761\u4ef6\u8bed\u53e5\u4e0e\u5faa\u73af\u8bed\u53e5"},{"location":"lesson2/Lesson2%20Java/#_1","text":"Java\u7684\u6761\u4ef6\u8bed\u53e5 1.1 if \u6761\u4ef6\u8bed\u53e5 1.2 if...else \u6761\u4ef6\u8bed\u53e5 1.3 if...else if...else 1.4 \u5d4c\u5957\u7684if...else \u8bed\u53e5 1.5 switch \u8bed\u53e5 Java\u7684\u5faa\u73af\u8bed\u53e5 2.1 for\u5faa\u73af 2.2 \u5012\u5e8f\u904d\u5386 2.3 IntStream.range()\u51fd\u6570 2.4 while\u5faa\u73af 2.5 \u589e\u5f3afor\u5faa\u73af\uff08for each\u5faa\u73af\uff09 break \u8bed\u53e5 3.1 \u5728\u5faa\u73af\u4e2d\u4f7f\u7528 break 3.2 \u5728 switch \u8bed\u53e5\u4e2d\u4f7f\u7528 break 3.3 \u5d4c\u5957\u5faa\u73af\u7684break continue \u8bed\u53e5 \u8bfe\u540e\u7ec3\u4e60 5.1 \u70b9\u9910\u7a0b\u5e8f 5.2 \u8ba1\u7b97\u5e76\u8f93\u51fa 1 \u5230 100 \u4e4b\u95f4\u6240\u6709\u4e0d\u80fd\u88ab 3 \u6574\u9664\u7684\u6570\u7684\u5e73\u65b9\u548c","title":"\u76ee\u5f55"},{"location":"lesson2/Lesson2%20Java/#1-java","text":"\u6761\u4ef6\u8bed\u53e5\u662f\u7f16\u7a0b\u4e2d\u4e00\u79cd\u57fa\u672c\u7684\u63a7\u5236\u7ed3\u6784\uff0c\u7528\u4e8e\u6839\u636e\u4e0d\u540c\u7684\u6761\u4ef6\u6267\u884c\u4e0d\u540c\u7684\u4ee3\u7801\u5757\u3002\u5b83\u4eec\u4f7f\u7a0b\u5e8f\u80fd\u591f\u6839\u636e\u8f93\u5165\u3001\u72b6\u6001\u6216\u8ba1\u7b97\u7ed3\u679c\u6765\u505a\u51fa\u51b3\u7b56\u548c\u6267\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\u3002\u5728Java\u4e2d\uff0c\u5e38\u89c1\u7684\u6761\u4ef6\u8bed\u53e5\u5305\u62ec if \u3001 else if \u548c else \u7ec4\u5408\u4ee5\u53ca switch \u8bed\u53e5\u3002 if\u8bed\u53e5 \uff1a\u7528\u4e8e\u5728\u6761\u4ef6\u4e3a\u771f\u65f6\u6267\u884c\u7279\u5b9a\u7684\u4ee3\u7801\u5757\uff0c\u5982\u679c\u6761\u4ef6\u4e0d\u6ee1\u8db3\uff0c\u53ef\u4ee5\u9009\u62e9\u6267\u884c\u4e00\u4e2a\u5907\u7528\u4ee3\u7801\u5757\u3002 else if\u8bed\u53e5 \uff1a\u7528\u4e8e\u68c0\u67e5\u591a\u4e2a\u6761\u4ef6\uff0c\u5982\u679c\u524d\u4e00\u4e2a\u6761\u4ef6\u4e0d\u6ee1\u8db3\uff0c\u5219\u68c0\u67e5\u4e0b\u4e00\u4e2a\u6761\u4ef6\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u6ee1\u8db3\u6761\u4ef6\u7684\u5206\u652f\u6267\u884c\u76f8\u5e94\u7684\u4ee3\u7801\u5757\u3002 else\u8bed\u53e5 \uff1a\u53ef\u9009\u7684\uff0c\u5f53\u6240\u6709\u4e0a\u8ff0\u6761\u4ef6\u90fd\u4e0d\u6ee1\u8db3\u65f6\u6267\u884c\u7684\u9ed8\u8ba4\u4ee3\u7801\u5757\u3002 switch\u8bed\u53e5 \uff1a\u7528\u4e8e\u5728\u591a\u4e2a\u56fa\u5b9a\u9009\u9879\u4e4b\u95f4\u8fdb\u884c\u9009\u62e9\uff0c\u6839\u636e\u8868\u8fbe\u5f0f\u7684\u503c\u6267\u884c\u5bf9\u5e94\u7684\u4ee3\u7801\u5757\uff0c\u6bcf\u4e2a\u9009\u9879\u88ab\u79f0\u4e3a\u4e00\u4e2a case \uff0c\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u53ef\u9009\u7684 default \u5206\u652f\u4f5c\u4e3a\u6240\u6709 case \u4e0d\u5339\u914d\u65f6\u7684\u5907\u9009\u65b9\u6848\u3002 \u6761\u4ef6\u8bed\u53e5\u4f7f\u5f97\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\u53ef\u4ee5\u6839\u636e\u4e0d\u540c\u7684\u60c5\u51b5\u91c7\u53d6\u4e0d\u540c\u7684\u884c\u52a8\uff0c\u4ece\u800c\u589e\u5f3a\u4e86\u7a0b\u5e8f\u7684\u7075\u6d3b\u6027\u548c\u903b\u8f91\u6027\u3002\u4ee5\u4e0b\u662f\u5e38\u89c1\u7684\u7ec4\u5408\uff1a","title":"1. Java\u7684\u6761\u4ef6\u8bed\u53e5"},{"location":"lesson2/Lesson2%20Java/#11-if","text":"\u8bed\u6cd5\u5982\u4e0b\uff1a if(\u5e03\u5c14\u8868\u8fbe\u5f0f) { //\u5982\u679c\u5e03\u5c14\u8868\u8fbe\u5f0f\u4e3atrue\u5c06\u6267\u884c\u7684\u8bed\u53e5 } \u5982\u679c\u5e03\u5c14\u8868\u8fbe\u5f0f\u6210\u7acb\uff08true\uff09\uff0c\u5219\u6267\u884c if \u8bed\u53e5\u4e2d\u7684\u4ee3\u7801\u5757\uff0c\u5982\u679c\u4e0d\u6210\u7acb\uff08false\uff09\u5219\u6267\u884c if \u8bed\u53e5\u5757\u540e\u9762\u7684\u4ee3\u7801\u3002 \u7b80\u5355\u6848\u4f8b\uff1a \u952e\u76d8\u5f55\u5165\u4e00\u4e2a\u6570\uff0c\u5982\u679c\u8fd9\u4e2a\u6570\u5927\u4e8e10\u5e76\u4e14\u5c0f\u4e8e100\uff0c\u5219\u63a7\u5236\u53f0\u8f93\u51fa\u5408\u683c import java.util.Scanner; public class IfTest01 { public static void main(String[] args) { Scanner sc = new Scanner(System.in); System.out.println(\"\u8bf7\u8f93\u5165\u4e00\u4e2a\u6570\u5b57\"); int num = sc.nextInt(); if (num > 10 && num < 100){ System.out.println(\"\u5408\u683c\"); } } }","title":"1.1 if \u6761\u4ef6\u8bed\u53e5"},{"location":"lesson2/Lesson2%20Java/#12-ifelse","text":"\u8bed\u6cd5\u5982\u4e0b\uff1a if(\u5e03\u5c14\u8868\u8fbe\u5f0f){ //\u5982\u679c\u5e03\u5c14\u8868\u8fbe\u5f0f\u7684\u503c\u4e3atrue } else { //\u5982\u679c\u5e03\u5c14\u8868\u8fbe\u5f0f\u7684\u503c\u4e3afalse } \u5982\u679c\u5e03\u5c14\u8868\u8fbe\u5f0f\u6210\u7acb\uff08true\uff09\uff0c\u5219\u6267\u884c if \u8bed\u53e5\u4e2d\u7684\u4ee3\u7801\u5757\uff0c\u5982\u679c\u4e0d\u6210\u7acb\uff08false\uff09\uff0c\u5219\u6267\u884celse\u8bed\u53e5\u4e2d\u7684\u4ee3\u7801\u5757\u3002 \u7b80\u5355\u6848\u4f8b\uff1a \u5b9a\u4e49\u4e00\u4e2a\u5e03\u5c14\u7c7b\u578b\uff0c\u5c06true\u8d4b\u503c\u7ed9incident\u3002\u5982\u679c\u4e8b\u4ef6\uff08incident\uff09\u4e3a\u771f\u5219\u8f93\u51fa\u6b63\u786e\uff0c\u5426\u5219\u8f93\u51fa\u9519\u8bef\u3002 public class IfTest02 { public static void main(String[] args) { //\u5b9a\u4e49\u4e8b\u4ef6\u4e3a\u771f boolean incident = true; if (incident){ System.out.println(\"\u6b63\u786e\"); } else { System.out.println(\"\u9519\u8bef\"); } } }","title":"1.2 if...else \u6761\u4ef6\u8bed\u53e5"},{"location":"lesson2/Lesson2%20Java/#13-ifelse-ifelse","text":"\u8bed\u6cd5\u5982\u4e0b\uff1a if(\u5e03\u5c14\u8868\u8fbe\u5f0f 1){ //\u5982\u679c\u5e03\u5c14\u8868\u8fbe\u5f0f 1\u7684\u503c\u4e3atrue\u6267\u884c\u4ee3\u7801 } else if(\u5e03\u5c14\u8868\u8fbe\u5f0f 2){ //\u5982\u679c\u5e03\u5c14\u8868\u8fbe\u5f0f 2\u7684\u503c\u4e3atrue\u6267\u884c\u4ee3\u7801 } else if(\u5e03\u5c14\u8868\u8fbe\u5f0f 3){ //\u5982\u679c\u5e03\u5c14\u8868\u8fbe\u5f0f 3\u7684\u503c\u4e3atrue\u6267\u884c\u4ee3\u7801 } else { //\u5982\u679c\u4ee5\u4e0a\u5e03\u5c14\u8868\u8fbe\u5f0f\u90fd\u4e0d\u4e3atrue\u6267\u884c\u4ee3\u7801 } \u5982\u679c\u5e03\u5c14\u8868\u8fbe\u5f0f1\u4e3a\u771f\uff0c\u5219\u6267\u884c\u5e03\u5c14\u8868\u8fbe\u5f0f2\uff1b\u5982\u679c\u5e03\u5c14\u8868\u8fbe\u5f0f2\u4e3a\u771f\uff0c\u5219\u6267\u884c\u5e03\u5c14\u8868\u8fbe\u5f0f3\uff1b\u4f9d\u6b21\u6267\u884c\u540e\u9762\u7684\u5e03\u5c14\u8868\u793a\uff0c\u76f4\u5230\u5e03\u5c14\u8868\u793a\u4e3a\u5047\uff0c\u5219\u6267\u884celse\u8bed\u53e5\u4e2d\u7684\u4ee3\u7801\u5757\u3002 \u7b80\u5355\u6848\u4f8b\uff1a \u67d0\u8d85\u5e02\u4f1a\u5458\u5236\u5ea6\u5206\u4e3avip1\uff0cvip2\uff0cvip3\u4e09\u4e2a\u7b49\u7ea7\uff0c\u6bcf\u4e2a\u7b49\u7ea7\u5bf9\u5e94\u7684\u6298\u6263\u4e0d\u540c\uff1avip1\u5ba2\u6237\u8d2d\u4e70\u5546\u54c1\u62539\u6298\uff0cvip2\u5ba2\u6237\u8d2d\u4e70\u5546\u54c1\u62538\u6298\uff0cvip3\u5ba2\u6237\u8d2d\u4e70\u5546\u54c1\u62537\u6298\u3002\u73b0\u8981\u6c42\u5b9a\u4e49\u4e00\u4e2a\u5546\u54c1\u4ef7\u683c\uff0c\u5728\u63a7\u5236\u53f0\u8f93\u5165\u5ba2\u6237\u7b49\u7ea7\uff0c\u8ba1\u7b97\u51fa\u8be5\u5ba2\u6237\u5bf9\u5e94\u7684vip\u7b49\u7ea7\u8d2d\u4e70\u5546\u54c1\u540e\u5e94\u8be5\u4ed8\u591a\u5c11\u94b1\u3002 import java.util.Scanner; public class IfTest05f { public static void main(String[] args) { int price = 1000; Scanner sc = new Scanner(System.in); System.out.println(\"\u8bf7\u8f93\u5165\u4f1a\u5458\u7684\u7ea7\u522b\"); int vip = sc.nextInt(); if (vip == 1){ System.out.println(\"\u5b9e\u9645\u652f\u4ed8\u7684\u94b1\u4e3a\" + (price * 0.9)); } else if (vip == 2) { System.out.println(\"\u5b9e\u9645\u652f\u4ed8\u7684\u94b1\u4e3a\" + (price * 0.8)); } else if (vip == 3) { System.out.println(\"\u5b9e\u9645\u652f\u4ed8\u7684\u94b1\u4e3a\" + (price * 0.7)); } else { System.out.println(\"\u5b9e\u9645\u652f\u4ed8\u7684\u94b1\u4e3a\" + price); } } }","title":"1.3 if...else if...else"},{"location":"lesson2/Lesson2%20Java/#14-ifelse","text":"\u8bed\u6cd5\u5982\u4e0b\uff1a if(\u5e03\u5c14\u8868\u8fbe\u5f0f 1){ \u5982\u679c\u5e03\u5c14\u8868\u8fbe\u5f0f 1\u7684\u503c\u4e3atrue\u6267\u884c\u4ee3\u7801 if(\u5e03\u5c14\u8868\u8fbe\u5f0f 2){ \u5982\u679c\u5e03\u5c14\u8868\u8fbe\u5f0f 2\u7684\u503c\u4e3atrue\u6267\u884c\u4ee3\u7801 } } \u7b80\u5355\u6848\u4f8b\uff1a \u952e\u76d8\u5f55\u5165\u4e00\u4e2a\u6574\u6570\u4ee3\u8868\u5b66\u751f\u7684\u6210\u7ee9\uff0c\u89c4\u5b9a\u8303\u56f4\u5728\uff080-100\uff09\u3002\u5f53\u8f93\u5165\u7684\u6210\u7ee9\u5927\u4e8e\u7b49\u4e8e90\u65f6\uff0c\u63a7\u5236\u53f0\u8f93\u51fa\u4f18\u79c0\uff1b\u5927\u4e8e\u7b49\u4e8e80\u5c0f\u4e8e90\u65f6\uff0c\u63a7\u5236\u53f0\u8f93\u51fa\u826f\u597d\uff1b\u5927\u4e8e\u7b49\u4e8e60\u5c0f\u4e8e80\u65f6\uff0c\u63a7\u5236\u53f0\u8f93\u51fa\u5408\u683c\uff1b\u5c0f\u4e8e60\u65f6\uff0c\u63a7\u5236\u53f0\u8f93\u51fa\u4e0d\u5408\u683c\u3002\u5176\u4ed6\u60c5\u51b5\u5219\u63d0\u793a\u8f93\u5165\u4e0d\u5408\u6cd5\u3002 import java.util.Scanner; public class IfTest04 { public static void main(String[] args) { Scanner sc = new Scanner(System.in); System.out.println(\"\u8bf7\u8f93\u5165\u4e00\u4e2a\u6574\u6570\"); int num = sc.nextInt(); if (num > 0 && num <= 100) { if (num >= 90) { System.out.println(\"\u4f18\u79c0\"); } else if (num >= 80 && num < 90) { System.out.println(\"\u826f\u597d\"); } else if (num >= 60 && num < 80) { System.out.println(\"\u5408\u683c\"); } else { System.out.println(\"\u4e0d\u5408\u683c\"); } } else { System.out.println(\"\u8f93\u5165\u4e0d\u5408\u6cd5\"); } } }","title":"1.4 \u5d4c\u5957\u7684if...else \u8bed\u53e5"},{"location":"lesson2/Lesson2%20Java/#15-switch","text":"\u8bed\u6cd5\u5982\u4e0b\uff1a switch (expression) { case value1: // \u5f53\u8868\u8fbe\u5f0f\u7684\u503c\u7b49\u4e8evalue1\u65f6\u6267\u884c\u7684\u4ee3\u7801\u5757 break; case value2: // \u5f53\u8868\u8fbe\u5f0f\u7684\u503c\u7b49\u4e8evalue2\u65f6\u6267\u884c\u7684\u4ee3\u7801\u5757 break; ... default: break; // \u5f53\u8868\u8fbe\u5f0f\u7684\u503c\u4e0e\u6240\u6709case\u4e0d\u5339\u914d\u65f6\u6267\u884c\u7684\u4ee3\u7801\u5757\uff08\u53ef\u9009\uff09 } \u7b80\u5355\u6848\u4f8b\uff1a\u6839\u636e\u963f\u62c9\u4f2f\u6570\u5b57\u8f93\u51fa\u6587\u5b57\u4fe1\u606f\u7684\u661f\u671f\u51e0\u3002 int dayOfWeek = 1; switch (dayOfWeek) { case 1: System.out.println(\"Monday\"); break; case 2: System.out.println(\"Tuesday\"); break; // \u7701\u7565\u5176\u4f59case default: System.out.println(\"Invalid day\"); break; }","title":"1.5 switch \u8bed\u53e5"},{"location":"lesson2/Lesson2%20Java/#2-java","text":"\u5728Java\u4e2d\uff0c\u5faa\u73af\u8bed\u53e5\u7528\u4e8e\u91cd\u590d\u6267\u884c\u4e00\u6bb5\u4ee3\u7801\uff0c\u76f4\u5230\u6ee1\u8db3\u67d0\u4e2a\u6761\u4ef6\u4e3a\u6b62\u6216\u8fbe\u5230\u6307\u5b9a\u7684\u6b21\u6570\u3002\u4e3b\u8981\u7684\u5faa\u73af\u8bed\u53e5\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a","title":"2. Java\u7684\u5faa\u73af\u8bed\u53e5"},{"location":"lesson2/Lesson2%20Java/#21-for","text":"java for (initialization; condition; update) { // \u5faa\u73af\u4f53 } - initialization \uff1a\u5faa\u73af\u53d8\u91cf\u7684\u521d\u59cb\u5316\u3002 - condition \uff1a\u5faa\u73af\u6761\u4ef6\uff0c\u6bcf\u6b21\u5faa\u73af\u5f00\u59cb\u524d\u90fd\u4f1a\u68c0\u67e5\u3002 - update \uff1a\u5faa\u73af\u53d8\u91cf\u66f4\u65b0\uff0c\u901a\u5e38\u662f\u589e\u52a0\u6216\u51cf\u5c11\u5faa\u73af\u53d8\u91cf\u7684\u503c\u3002 \u793a\u4f8b\uff1a java for (int i = 1; i <= 5; i++) { System.out.println(\"Count is: \" + i); }","title":"2.1 for\u5faa\u73af\uff1a"},{"location":"lesson2/Lesson2%20Java/#22","text":"\u5012\u5e8f\u904d\u5386\u662f\u6307\u4ece\u5927\u5230\u5c0f\u6216\u4ece\u540e\u5411\u524d\u904d\u5386\u6570\u636e\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u3002\u5728Java\u4e2d\uff0c\u5012\u5e8f\u904d\u5386\u901a\u5e38\u7528\u4e8e\u6570\u7ec4\u3001\u5217\u8868\u6216\u9700\u8981\u9006\u5e8f\u8f93\u51fa\u7684\u60c5\u51b5\u3002\u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\u548c\u8be6\u7ec6\u89e3\u91ca\uff1a for (int i = 5; i > 0; i--) { System.out.println(\"Count is: \" + i); }","title":"2.2 \u5012\u5e8f\u904d\u5386"},{"location":"lesson2/Lesson2%20Java/#23-intstreamrange","text":"\u5728Java\u4e2d\uff0c\u5e76\u6ca1\u6709\u50cf\u4e00\u4e9b\u5176\u4ed6\u7f16\u7a0b\u8bed\u8a00\uff08\u5982Python\uff09\u4e2d\u76f4\u63a5\u63d0\u4f9b\u7684\u5185\u7f6e\u7684 range \u51fd\u6570\uff0c\u4e0d\u8fc7Java 8 \u5f15\u5165\u4e86 IntStream \u7c7b\u6765\u652f\u6301\u51fd\u6570\u5f0f\u7f16\u7a0b\u98ce\u683c\u7684\u64cd\u4f5c\u3002\u53ef\u4ee5\u4f7f\u7528 IntStream.range() \u65b9\u6cd5\u6765\u751f\u6210\u4e00\u4e2a\u6574\u6570\u8303\u56f4\u3002 IntStream.range(start, end).forEach(i -> { // \u8fd9\u91cc\u6267\u884c\u5faa\u73af\u4f53\u5185\u7684\u64cd\u4f5c\uff0ci \u662f\u5f53\u524d\u7684\u6574\u6570\u503c }); \u8fd9\u91cc\u7684 start \u662f\u8303\u56f4\u7684\u8d77\u59cb\u503c\uff08\u5305\u542b\uff09\uff0c end \u662f\u8303\u56f4\u7684\u7ed3\u675f\u503c\uff08\u4e0d\u5305\u542b\uff09\u3002","title":"2.3 IntStream.range()\u51fd\u6570"},{"location":"lesson2/Lesson2%20Java/#_2","text":"\u8d77\u59cb\u503c ( start ) : \u6570\u503c\u8303\u56f4\u7684\u8d77\u59cb\u503c\uff0c\u53ef\u4ee5\u662f\u4efb\u610f\u6574\u6570\u3002 \u7ed3\u675f\u503c ( end ) : \u6570\u503c\u8303\u56f4\u7684\u7ed3\u675f\u503c\uff0c\u53ef\u4ee5\u662f\u4efb\u610f\u6574\u6570\u3002\u5728\u4f7f\u7528 for \u5faa\u73af\u65f6\uff0c\u7ed3\u675f\u503c\u662f\u5305\u542b\u5728\u8303\u56f4\u5185\u7684\uff1b\u800c\u5728\u4f7f\u7528 IntStream.range() \u65b9\u6cd5\u65f6\uff0c\u7ed3\u675f\u503c\u662f\u4e0d\u5305\u542b\u5728\u8303\u56f4\u5185\u7684\u3002","title":"\u53c2\u6570\u8bf4\u660e"},{"location":"lesson2/Lesson2%20Java/#_3","text":"\u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528 IntStream.range() \u65b9\u6cd5\u6765\u904d\u5386\u6570\u503c\u8303\u56f4\u7684\u793a\u4f8b\uff1a // \u4f7f\u7528 IntStream.range() \u904d\u5386\u8303\u56f4 [1, 5) System.out.println(\"\\nUsing IntStream.range():\"); IntStream.range(1, 6).forEach(i -> System.out.println(\"Count is: \" + i));","title":"\u793a\u4f8b"},{"location":"lesson2/Lesson2%20Java/#_4","text":"Count is: 1 Count is: 2 Count is: 3 Count is: 4 Count is: 5","title":"\u8f93\u51fa\u7ed3\u679c"},{"location":"lesson2/Lesson2%20Java/#24-while","text":"java while (condition) { // \u5faa\u73af\u4f53 } - condition \uff1a\u5faa\u73af\u6761\u4ef6\uff0c\u5728\u6bcf\u6b21\u5faa\u73af\u8fed\u4ee3\u5f00\u59cb\u4e4b\u524d\u8bc4\u4f30\u3002 \u793a\u4f8b\uff1a java int i = 1; while (i <= 5) { System.out.println(\"Count is: \" + i); i++; }","title":"2.4 while\u5faa\u73af\uff1a"},{"location":"lesson2/Lesson2%20Java/#25-forforeach","text":"\u7528\u4e8e\u904d\u5386\u6570\u7ec4\u6216\u96c6\u5408\u4e2d\u7684\u5143\u7d20\uff0c\u4e0d\u9700\u8981\u663e\u5f0f\u5730\u63a7\u5236\u5faa\u73af\u53d8\u91cf\u3002 java for (type element : array/collection) { // \u5faa\u73af\u4f53 } \u793a\u4f8b\uff1a java int[] numbers = {1, 2, 3, 4, 5}; for (int number : numbers) { System.out.println(\"Number is: \" + number); }","title":"2.5 \u589e\u5f3afor\u5faa\u73af\uff08foreach\u5faa\u73af\uff09\uff1a"},{"location":"lesson2/Lesson2%20Java/#3-break","text":"\u5728Java\u4e2d\uff0c break \u662f\u4e00\u79cd\u63a7\u5236\u6d41\u8bed\u53e5\uff0c\u901a\u5e38\u7528\u4e8e\u5728\u5faa\u73af\u6216 switch \u8bed\u53e5\u4e2d\u63d0\u524d\u7ed3\u675f\u4ee3\u7801\u5757\u7684\u6267\u884c\u3002\u5177\u4f53\u6765\u8bf4\uff0c break \u8bed\u53e5\u53ef\u4ee5\u7528\u4e8e\u4ee5\u4e0b\u4e24\u79cd\u60c5\u51b5\uff1a","title":"3. break \u8bed\u53e5"},{"location":"lesson2/Lesson2%20Java/#31-break","text":"\u5f53\u5728\u5faa\u73af\u4e2d\u6267\u884c break \u8bed\u53e5\u65f6\uff0c\u7a0b\u5e8f\u5c06\u7acb\u5373\u9000\u51fa\u5f53\u524d\u7684\u5faa\u73af\uff0c\u7ee7\u7eed\u6267\u884c\u5faa\u73af\u540e\u9762\u7684\u4ee3\u7801\u3002\u8fd9\u5bf9\u4e8e\u5728\u6ee1\u8db3\u67d0\u4e2a\u6761\u4ef6\u540e\u4e0d\u518d\u7ee7\u7eed\u6267\u884c\u5faa\u73af\u4f53\u5185\u7684\u4ee3\u7801\u975e\u5e38\u6709\u7528\u3002 \u793a\u4f8b\uff1a java for (int i = 1; i <= 10; i++) { System.out.println(i); if (i == 5) { break; // \u5f53 i \u7b49\u4e8e 5 \u65f6\u9000\u51fa\u5faa\u73af } } \u8f93\u51fa\uff1a 1 2 3 4 5","title":"3.1 \u5728\u5faa\u73af\u4e2d\u4f7f\u7528 break\uff1a"},{"location":"lesson2/Lesson2%20Java/#32-switch-break","text":"\u5728 switch \u8bed\u53e5\u4e2d\uff0c\u6bcf\u4e2a case \u5206\u652f\u901a\u5e38\u4f1a\u5728\u6267\u884c\u5b8c\u6bd5\u540e\u7ee7\u7eed\u6267\u884c\u4e0b\u4e00\u4e2a case \u5206\u652f\uff0c\u9664\u975e\u5728\u67d0\u4e2a case \u5206\u652f\u4e2d\u4f7f\u7528\u4e86 break \u8bed\u53e5\u3002\u8fd9\u65f6\u7a0b\u5e8f\u5c06\u8df3\u51fa switch \u8bed\u53e5\uff0c\u4e0d\u518d\u7ee7\u7eed\u6267\u884c\u540e\u7eed\u7684 case \u5206\u652f\u3002 \u793a\u4f8b\uff1a java int dayOfWeek = 3; switch (dayOfWeek) { case 1: System.out.println(\"Monday\"); break; case 2: System.out.println(\"Tuesday\"); break; case 3: System.out.println(\"Wednesday\"); break; default: System.out.println(\"Invalid day\"); break; } \u8f93\u51fa\uff1a Wednesday","title":"3.2 \u5728 switch \u8bed\u53e5\u4e2d\u4f7f\u7528 break\uff1a"},{"location":"lesson2/Lesson2%20Java/#_5","text":"break \u8bed\u53e5\u53ea\u80fd\u7528\u5728\u5faa\u73af ( for , while , do-while ) \u6216 switch \u8bed\u53e5\u7684\u5185\u90e8\u3002 \u5728\u5d4c\u5957\u7684\u5faa\u73af\u4e2d\uff0c break \u8bed\u53e5\u9ed8\u8ba4\u9000\u51fa\u6700\u5185\u5c42\u7684\u5faa\u73af\uff0c\u5982\u679c\u60f3\u8981\u9000\u51fa\u5916\u5c42\u5faa\u73af\uff0c\u53ef\u4ee5\u4f7f\u7528\u5e26\u6807\u7b7e\u7684 break \u8bed\u53e5\uff08\u4f8b\u5982 break label; \uff09\u3002","title":"\u6ce8\u610f\u4e8b\u9879\uff1a"},{"location":"lesson2/Lesson2%20Java/#33-break","text":"","title":"3.3 \u5d4c\u5957\u5faa\u73af\u7684break"},{"location":"lesson2/Lesson2%20Java/#_6","text":"\u5e26\u6807\u7b7e\u7684 break \u8bed\u6cd5\u5982\u4e0b\uff1a labelName: outerLoop { // \u5faa\u73af\u4f53 innerLoop { // \u5faa\u73af\u4f53 if (condition) { break labelName; // \u8df3\u51fa\u6807\u7b7e\u4e3a labelName \u7684\u5916\u5c42\u5faa\u73af } } } \u5176\u4e2d labelName \u662f\u7528\u6237\u5b9a\u4e49\u7684\u6807\u7b7e\u540d\uff0c\u901a\u5e38\u9075\u5faa\u6807\u8bc6\u7b26\u547d\u540d\u89c4\u5219\u3002","title":"\u8bed\u6cd5\uff1a"},{"location":"lesson2/Lesson2%20Java/#_7","text":"\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u5d4c\u5957\u7684\u5faa\u73af\u7ed3\u6784\uff0c\u6211\u4eec\u60f3\u5728\u5185\u5c42\u5faa\u73af\u4e2d\u627e\u5230\u67d0\u4e2a\u6761\u4ef6\u6ee1\u8db3\u65f6\u9000\u51fa\u5916\u5c42\u5faa\u73af\u3002 public class BreakWithLabelExample { public static void main(String[] args) { outerLoop: // \u6807\u7b7e\u540d outerLoop for (int i = 1; i <= 3; i++) { System.out.println(\"Outer loop iteration \" + i); innerLoop: for (int j = 1; j <= 3; j++) { System.out.println(\" Inner loop iteration \" + j); if (i == 2 && j == 2) { break outerLoop; // \u5f53 i \u7b49\u4e8e 2 \u4e14 j \u7b49\u4e8e 2 \u65f6\u8df3\u51fa\u5916\u5c42\u5faa\u73af } } } System.out.println(\"Loop ends\"); } }","title":"\u793a\u4f8b\uff1a"},{"location":"lesson2/Lesson2%20Java/#_8","text":"outerLoop \u662f\u5916\u5c42\u5faa\u73af\u7684\u6807\u7b7e\u540d\u3002 innerLoop \u662f\u5185\u5c42\u5faa\u73af\u3002 \u5728\u5185\u5c42\u5faa\u73af\u4e2d\uff0c\u5f53 i \u7b49\u4e8e 2 \u4e14 j \u7b49\u4e8e 2 \u65f6\uff0c\u6267\u884c break outerLoop; \uff0c\u8fd9\u4f1a\u7acb\u5373\u8df3\u51fa\u5916\u5c42\u5faa\u73af outerLoop \uff0c\u7ee7\u7eed\u6267\u884c\u5916\u5c42\u5faa\u73af\u540e\u9762\u7684\u4ee3\u7801\u3002 \u63a7\u5236\u53f0\u8f93\u51fa\u5982\u4e0b\uff1a Outer loop iteration 1 Inner loop iteration 1 Inner loop iteration 2 Loop ends","title":"\u793a\u4f8b\u89e3\u91ca\uff1a"},{"location":"lesson2/Lesson2%20Java/#_9","text":"\u4f7f\u7528\u5e26\u6807\u7b7e\u7684 break \u8bed\u53e5\u65f6\uff0c\u6807\u7b7e\u5fc5\u987b\u4f4d\u4e8e\u4f60\u60f3\u8981\u8df3\u51fa\u7684\u5faa\u73af\u4e4b\u524d\uff0c\u5e76\u4e14\u7d27\u8ddf\u5728 break \u5173\u952e\u5b57\u4e4b\u540e\u3002 \u6807\u7b7e\u540d\u53ef\u4ee5\u662f\u4efb\u4f55\u5408\u6cd5\u7684Java\u6807\u8bc6\u7b26\uff0c\u4f46\u5efa\u8bae\u4f7f\u7528\u6709\u610f\u4e49\u7684\u540d\u5b57\u6765\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u53ef\u7ef4\u62a4\u6027\u3002 \u5e26\u6807\u7b7e\u7684 break \u8bed\u53e5\u5728\u5904\u7406\u590d\u6742\u7684\u5d4c\u5957\u5faa\u73af\u7ed3\u6784\u6216\u5e0c\u671b\u5728\u7279\u5b9a\u6761\u4ef6\u4e0b\u63d0\u524d\u8df3\u51fa\u5916\u5c42\u5faa\u73af\u65f6\u975e\u5e38\u6709\u7528\u3002","title":"\u6ce8\u610f\u4e8b\u9879\uff1a"},{"location":"lesson2/Lesson2%20Java/#4-continue","text":"\u5728Java\u4e2d\uff0c continue \u662f\u4e00\u79cd\u63a7\u5236\u6d41\u8bed\u53e5\uff0c\u7528\u4e8e\u8df3\u8fc7\u5f53\u524d\u5faa\u73af\u7684\u5269\u4f59\u4ee3\u7801\uff0c\u76f4\u63a5\u8fdb\u5165\u4e0b\u4e00\u6b21\u5faa\u73af\u7684\u8fed\u4ee3\u3002\u5b83\u901a\u5e38\u7528\u4e8e\u5faa\u73af\u7ed3\u6784\u4e2d\uff0c\u53ef\u4ee5\u5e2e\u52a9\u7a0b\u5e8f\u8df3\u8fc7\u67d0\u4e9b\u7279\u5b9a\u6761\u4ef6\u4e0b\u4e0d\u5fc5\u8981\u7684\u4ee3\u7801\u6267\u884c\u3002","title":"4. continue \u8bed\u53e5"},{"location":"lesson2/Lesson2%20Java/#_10","text":"\u5728\u5faa\u73af\u4e2d\u4f7f\u7528 continue \u7684\u4e00\u822c\u8bed\u6cd5\u5982\u4e0b\uff1a for (initialization; condition; update) { // \u4ee3\u7801\u5757 if (conditionToSkip) { continue; // \u8df3\u8fc7\u672c\u6b21\u5faa\u73af\u7684\u5269\u4f59\u4ee3\u7801\uff0c\u8fdb\u884c\u4e0b\u4e00\u6b21\u5faa\u73af } // \u5176\u4ed6\u4ee3\u7801 } \u6216\u8005\u5728 while \u5faa\u73af\u4e2d\u4f7f\u7528\uff1a while (condition) { // \u4ee3\u7801\u5757 if (conditionToSkip) { continue; // \u8df3\u8fc7\u672c\u6b21\u5faa\u73af\u7684\u5269\u4f59\u4ee3\u7801\uff0c\u8fdb\u884c\u4e0b\u4e00\u6b21\u5faa\u73af } // \u5176\u4ed6\u4ee3\u7801 }","title":"\u4f7f\u7528\u65b9\u6cd5\u548c\u8bed\u6cd5\uff1a"},{"location":"lesson2/Lesson2%20Java/#_11","text":"\u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f7f\u7528 continue \u7684\u793a\u4f8b\uff0c\u6f14\u793a\u4e86\u5982\u4f55\u5728\u5faa\u73af\u4e2d\u8df3\u8fc7\u5076\u6570\u7684\u6253\u5370\uff1a public class ContinueExample { public static void main(String[] args) { for (int i = 1; i <= 5; i++) { if (i % 2 == 0) { continue; // \u8df3\u8fc7\u5076\u6570 } System.out.println(i); } } } \u8f93\u51fa\uff1a 1 3 5","title":"\u793a\u4f8b\uff1a"},{"location":"lesson2/Lesson2%20Java/#_12","text":"\u5f53\u7a0b\u5e8f\u6267\u884c\u5230 continue; \u8bed\u53e5\u65f6\uff0c\u4f1a\u7acb\u5373\u7ed3\u675f\u5f53\u524d\u5faa\u73af\u7684\u672c\u6b21\u8fed\u4ee3\uff0c\u5e76\u5f00\u59cb\u4e0b\u4e00\u6b21\u8fed\u4ee3\u3002 continue \u4e3b\u8981\u7528\u4e8e\u5728\u4e0d\u6ee1\u8db3\u67d0\u4e9b\u6761\u4ef6\u65f6\u8df3\u8fc7\u5269\u4f59\u4ee3\u7801\u7684\u6267\u884c\uff0c\u53ef\u4ee5\u63d0\u9ad8\u4ee3\u7801\u7684\u6548\u7387\u548c\u7b80\u6d01\u6027\u3002 \u5728\u5d4c\u5957\u5faa\u73af\u4e2d\uff0c continue \u9ed8\u8ba4\u53ea\u4f1a\u5f71\u54cd\u6700\u5185\u5c42\u7684\u5faa\u73af\u3002\u5982\u679c\u60f3\u8981\u8df3\u8fc7\u5916\u5c42\u5faa\u73af\u7684\u8fed\u4ee3\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u5e26\u6807\u7b7e\u7684 continue \u8bed\u53e5\uff0c\u7c7b\u4f3c\u4e8e\u5e26\u6807\u7b7e\u7684 break \u8bed\u53e5\u7684\u7528\u6cd5\u3002 continue \u662f\u7f16\u5199\u63a7\u5236\u6d41\u7a0b\u66f4\u52a0\u7075\u6d3b\u548c\u6e05\u6670\u7684\u91cd\u8981\u5de5\u5177\u4e4b\u4e00\uff0c\u7279\u522b\u662f\u5728\u9700\u8981\u6839\u636e\u67d0\u4e9b\u6761\u4ef6\u8df3\u8fc7\u7279\u5b9a\u4ee3\u7801\u5757\u7684\u60c5\u51b5\u4e0b\uff0c\u5b83\u80fd\u6709\u6548\u7b80\u5316\u4ee3\u7801\u903b\u8f91\u3002","title":"\u89e3\u91ca\u548c\u6ce8\u610f\u4e8b\u9879\uff1a"},{"location":"lesson2/Lesson2%20Java/#5","text":"","title":"5. \u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson2/Lesson2%20Java/#51","text":"\u9898\u76ee\u63cf\u8ff0\uff1a \u8bbe\u8ba1\u4e00\u4e2a\u7b80\u5355\u7684\u9910\u5385\u70b9\u5355\u7a0b\u5e8f\uff0c\u7a0b\u5e8f\u80fd\u591f\u8fde\u7eed\u63a5\u53d7\u591a\u4e2a\u987e\u5ba2\u7684\u70b9\u5355\u3002\u7a0b\u5e8f\u63d0\u524d\u77e5\u9053\u6c49\u5821\u3001\u85af\u6761\u548c\u53ef\u4e50\u7684\u4ef7\u683c\u3002\u6bcf\u4f4d\u987e\u5ba2\u53ef\u4ee5\u9009\u62e9\u70b9\u6c49\u5821\u3001\u85af\u6761\u548c\u53ef\u4e50\u7684\u6570\u91cf\uff0c\u7a0b\u5e8f\u5c06\u8f93\u51fa\u6bcf\u4f4d\u987e\u5ba2\u7684\u70b9\u5355\u5185\u5bb9\u548c\u603b\u4ef7\uff0c\u6700\u540e\u8f93\u51fa\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d\u3002","title":"5.1 \u70b9\u9910\u7a0b\u5e8f"},{"location":"lesson2/Lesson2%20Java/#_13","text":"\u7a0b\u5e8f\u5f00\u59cb\u65f6\uff0c\u5b9a\u4e49\u6c49\u5821\u3001\u85af\u6761\u548c\u53ef\u4e50\u7684\u4ef7\u683c\u5e38\u91cf\u3002 \u4f7f\u7528\u5faa\u73af\u8bed\u53e5\u8fde\u7eed\u63a5\u53d7\u987e\u5ba2\u7684\u70b9\u5355\uff0c\u5728\u5f00\u59cb\u8ba1\u7b97\u524d\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u4e13\u7528\u7684\u53d8\u91cf\u83b7\u53d6\u7528\u6237\u610f\u56fe\u662f\u7ee7\u7eed\u70b9\u5355\u8fd8\u662f\u9000\u51fa\uff08\u4f8b\uff1a\u8f93\u5165-1\u9000\u51fa\u5e76\u8ba1\u7b97\u603b\u9500\u552e\u989d\uff0c\u5176\u4ed6\u6570\u5b57\u5219\u8fdb\u884c\u4e0b\u4e00\u8f6e\u70b9\u5355\uff09\u3002 \u6bcf\u6b21\u63a5\u53d7\u987e\u5ba2\u7684\u70b9\u5355\u540e\uff0c\u8f93\u51fa\u987e\u5ba2\u7684\u70b9\u5355\u5185\u5bb9\u548c\u672c\u6b21\u70b9\u5355\u7684\u603b\u4ef7\u3002 \u7d2f\u52a0\u6bcf\u4f4d\u987e\u5ba2\u7684\u70b9\u5355\u603b\u4ef7\u5230\u603b\u9500\u552e\u989d\u4e2d\u3002 \u9000\u51fa\u70b9\u5355\u540e\uff0c\u8f93\u51fa\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d\u3002","title":"\u8981\u6c42\uff1a"},{"location":"lesson2/Lesson2%20Java/#_14","text":"\u5047\u8bbe\u64cd\u4f5c\u6d41\u7a0b\u5982\u4e0b\uff1a \u7b2c\u4e00\u4f4d\u987e\u5ba2\u70b9\u6c49\u5821 2\uff0c\u85af\u6761 1\uff0c\u53ef\u4e50 3\uff1b \u7b2c\u4e8c\u4f4d\u987e\u5ba2\u70b9\u6c49\u5821 1\uff0c\u85af\u6761 2\uff0c\u53ef\u4e50 2\uff1b \u9009\u62e9\u9000\u51fa\u7a0b\u5e8f\u3002 \u7a0b\u5e8f\u7684\u8f93\u51fa\u5e94\u5982\u4e0b\u6240\u793a\uff1a \u8bf7\u70b9\u5355\uff08\u8f93\u5165-1\u9000\u51fa\uff09\uff1a 0 \u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf\uff1a1 \u8bf7\u8f93\u5165\u85af\u6761\u7684\u6570\u91cf\uff1a2 \u8bf7\u8f93\u5165\u53ef\u4e50\u7684\u6570\u91cf\uff1a3 \u5ba2\u6237\u70b9\u5355\u5185\u5bb9\uff1a \u6c49\u5821 x 2 \u85af\u6761 x 1 \u53ef\u4e50 x 3 \u672c\u6b21\u70b9\u5355\u603b\u4ef7\uff1a48.5 \u5143 \u8bf7\u70b9\u5355\uff08\u8f93\u5165-1\u9000\u51fa\uff09\uff1a 0 \u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf\uff1a1 \u8bf7\u8f93\u5165\u85af\u6761\u7684\u6570\u91cf\uff1a2 \u8bf7\u8f93\u5165\u53ef\u4e50\u7684\u6570\u91cf\uff1a2 \u5ba2\u6237\u70b9\u5355\u5185\u5bb9\uff1a \u6c49\u5821 x 1 \u85af\u6761 x 2 \u53ef\u4e50 x 2 \u672c\u6b21\u70b9\u5355\u603b\u4ef7\uff1a35.0 \u5143 \u8bf7\u70b9\u5355\uff08\u8f93\u5165-1\u9000\u51fa\uff09\uff1a -1 \u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d\uff1a83.5 \u5143 \u53c2\u8003\u89e3\u7b54\uff1a import java.util.Scanner; public class RestaurantOrder { public static void main(String[] args) { // \u5b9a\u4e49\u4ef7\u683c\u5e38\u91cf final double BURGER_PRICE = 12.5; final double FRIES_PRICE = 6.0; final double COKE_PRICE = 4.5; // \u521b\u5efaScanner\u5bf9\u8c61\u4ee5\u83b7\u53d6\u7528\u6237\u8f93\u5165 Scanner scanner = new Scanner(System.in); // \u521d\u59cb\u5316\u603b\u9500\u552e\u989d double totalSales = 0.0; // \u5f00\u59cb\u5faa\u73af\uff0c\u76f4\u5230\u987e\u5ba2\u9009\u62e9\u9000\u51fa while (true) { // \u521d\u59cb\u5316\u70b9\u5355\u6570\u91cf int option = 0; int burgers = 0; int fries = 0; int cokes = 0; // \u83b7\u53d6\u7528\u6237\u70b9\u5355 System.out.print(\"\\n\u8bf7\u70b9\u5355\uff08\u8f93\u5165-1\u9000\u51fa\uff0c\u5176\u4ed6\u6574\u6570\u8fdb\u5165\u70b9\u5355\uff09\uff1a\"); option = scanner.nextInt(); // \u5982\u679c\u8f93\u5165\u4e3a0\uff0c\u5219\u9000\u51fa\u5faa\u73af if (option == -1) { break; } System.out.print(\"\u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf\uff1a\"); burgers = scanner.nextInt(); System.out.print(\"\u8bf7\u8f93\u5165\u85af\u6761\u7684\u6570\u91cf\uff1a\"); fries = scanner.nextInt(); System.out.print(\"\u8bf7\u8f93\u5165\u53ef\u4e50\u7684\u6570\u91cf\uff1a\"); cokes = scanner.nextInt(); // \u6253\u5370\u5ba2\u6237\u70b9\u5355\u5185\u5bb9 System.out.println(\"\\n\u5ba2\u6237\u70b9\u5355\u5185\u5bb9\uff1a\"); if (burgers > 0) { System.out.println(\"\u6c49\u5821 x \" + burgers); } if (fries > 0) { System.out.println(\"\u85af\u6761 x \" + fries); } if (cokes > 0) { System.out.println(\"\u53ef\u4e50 x \" + cokes); } // \u8ba1\u7b97\u672c\u6b21\u70b9\u5355\u7684\u603b\u4ef7 double orderTotal = burgers * BURGER_PRICE + fries * FRIES_PRICE + cokes * COKE_PRICE; // \u7d2f\u52a0\u5230\u603b\u9500\u552e\u989d totalSales += orderTotal; // \u6253\u5370\u672c\u6b21\u70b9\u5355\u7684\u603b\u4ef7 System.out.println(\"\\n\u672c\u6b21\u70b9\u5355\u603b\u4ef7\uff1a\" + orderTotal + \" \u5143\"); } // \u6253\u5370\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d System.out.println(\"\\n\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d\uff1a\" + totalSales + \" \u5143\"); // \u5173\u95edScanner scanner.close(); } }","title":"\u793a\u4f8b\u8fd0\u884c\uff1a"},{"location":"lesson2/Lesson2%20Java/#52-1-100-3","text":"\u9898\u76ee\u63cf\u8ff0\uff1a \u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u8ba1\u7b97\u5e76\u8f93\u51fa 1 \u5230 100 \u4e4b\u95f4\u6240\u6709\u4e0d\u80fd\u88ab 3 \u6574\u9664\u7684\u6570\u7684\u5e73\u65b9\u548c\u3002\u5728\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u5e73\u65b9\u548c\u8d85\u8fc7 1000\uff0c\u5219\u505c\u6b62\u8ba1\u7b97\u5e76\u8f93\u51fa\u5f53\u524d\u7684\u5e73\u65b9\u548c\u503c\u3002 \u89e3\u9898\u601d\u8def\uff1a \u4f7f\u7528\u4e00\u4e2a\u5faa\u73af\u6765\u904d\u5386\u4ece 1 \u5230 100 \u7684\u6240\u6709\u6570\u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u6570\uff0c\u4f7f\u7528\u6761\u4ef6\u8bed\u53e5\u5224\u65ad\u662f\u5426\u80fd\u88ab 3 \u6574\u9664\uff1a \u5982\u679c\u80fd\u88ab 3 \u6574\u9664\uff0c\u4f7f\u7528 continue \u8df3\u8fc7\u8fd9\u4e2a\u6570\uff0c\u4e0d\u8fdb\u884c\u5e73\u65b9\u548c\u7684\u7d2f\u52a0\u3002 \u5982\u679c\u4e0d\u80fd\u88ab 3 \u6574\u9664\uff0c\u8ba1\u7b97\u8be5\u6570\u7684\u5e73\u65b9\uff0c\u5e76\u7d2f\u52a0\u5230\u5e73\u65b9\u548c\u53d8\u91cf\u4e2d\u3002 \u5728\u7d2f\u52a0\u8fc7\u7a0b\u4e2d\uff0c\u4f7f\u7528\u6761\u4ef6\u8bed\u53e5\u68c0\u67e5\u5e73\u65b9\u548c\u662f\u5426\u8d85\u8fc7 1000\uff1a \u5982\u679c\u8d85\u8fc7 1000\uff0c\u5219\u4f7f\u7528 break \u505c\u6b62\u5faa\u73af\u3002 \u6700\u7ec8\u8f93\u51fa\u505c\u6b62\u65f6\u7684\u5e73\u65b9\u548c\u503c\u3002","title":"5.2 \u8ba1\u7b97\u5e76\u8f93\u51fa 1 \u5230 100 \u4e4b\u95f4\u6240\u6709\u4e0d\u80fd\u88ab 3 \u6574\u9664\u7684\u6570\u7684\u5e73\u65b9\u548c"},{"location":"lesson2/Lesson2%20Java/#_15","text":"public class SumOfSquares { public static void main(String[] args) { int sum = 0; for (int i = 1; i <= 100; i++) { if (i % 3 == 0) { continue; // \u8df3\u8fc7\u80fd\u88ab 3 \u6574\u9664\u7684\u6570 } int square = i * i; sum += square; if (sum > 1000) { System.out.println(\"\u5f53\u524d\u5e73\u65b9\u548c\u8d85\u8fc7 1000\uff0c\u505c\u6b62\u8ba1\u7b97\u3002\"); System.out.println(\"\u5f53\u524d\u5e73\u65b9\u548c\u4e3a: \" + sum); break; } } if (sum <= 1000) { System.out.println(\"\u6700\u7ec8\u5e73\u65b9\u548c\u4e3a: \" + sum); } } }","title":"\u793a\u4f8b\u4ee3\u7801\uff1a"},{"location":"lesson2/Lesson2%20Java/#_16","text":"\u5728\u8fd0\u884c\u4e0a\u8ff0\u4ee3\u7801\u65f6\uff0c\u4f1a\u4f9d\u6b21\u8ba1\u7b97 1 \u5230 100 \u4e4b\u95f4\u6240\u6709\u4e0d\u80fd\u88ab 3 \u6574\u9664\u7684\u6570\u7684\u5e73\u65b9\uff0c\u5e76\u7d2f\u52a0\u5230\u5e73\u65b9\u548c\u53d8\u91cf sum \u4e2d\u3002\u5982\u679c\u7d2f\u52a0\u8fc7\u7a0b\u4e2d\u53d1\u73b0\u5e73\u65b9\u548c\u8d85\u8fc7 1000\uff0c\u5219\u505c\u6b62\u8ba1\u7b97\uff0c\u5e76\u8f93\u51fa\u5f53\u524d\u7684\u5e73\u65b9\u548c\u503c\u3002 \u8f93\u51fa\u793a\u4f8b\uff1a \u5f53\u524d\u5e73\u65b9\u548c\u8d85\u8fc7 1000\uff0c\u505c\u6b62\u8ba1\u7b97\u3002 \u5f53\u524d\u5e73\u65b9\u548c\u4e3a: 1025","title":"\u793a\u4f8b\u8fd0\u884c\u548c\u8f93\u51fa\uff1a"},{"location":"lesson2/Lesson2%20Python/","text":"Lesson2 \u6761\u4ef6\u548c\u5faa\u73af \u76ee\u5f55 Lesson 2 \u6761\u4ef6\u548c\u5faa\u73af 1 \u6761\u4ef6\u63a7\u5236 1.1 if \u8bed\u53e5 1.2 if \u5d4c\u5957 1.3 match...case 2 \u5faa\u73af 2.1 while \u5faa\u73af 2.2 \u65e0\u9650\u5faa\u73af 2.3 while \u5faa\u73af\u4f7f\u7528 else \u8bed\u53e5 2.4 \u7b80\u5355\u8bed\u53e5\u7ec4 2.5 for \u8bed\u53e5 2.6 range() \u51fd\u6570 2.7 break \u548c continue \u8bed\u53e5\u53ca\u5faa\u73af\u4e2d\u7684 else \u5b50\u53e5 2.8 pass \u8bed\u53e5 \u8bfe\u540e\u7ec3\u4e60 1. \u70b9\u9910\u7a0b\u5e8f 2. Python \u731c\u6570\u5b57\u6e38\u620f 1 \u6761\u4ef6\u63a7\u5236 Python \u6761\u4ef6\u8bed\u53e5\u662f\u901a\u8fc7\u4e00\u6761\u6216\u591a\u6761\u8bed\u53e5\u7684\u6267\u884c\u7ed3\u679c\uff08True \u6216\u8005 False\uff09\u6765\u51b3\u5b9a\u6267\u884c\u7684\u4ee3\u7801\u5757\u3002 \u53ef\u4ee5\u901a\u8fc7\u4e0b\u56fe\u6765\u7b80\u5355\u4e86\u89e3\u6761\u4ef6\u8bed\u53e5\u7684\u6267\u884c\u8fc7\u7a0b\uff1a \u4ee3\u7801\u6267\u884c\u8fc7\u7a0b\uff1a 1.1 if \u8bed\u53e5 Python\u4e2dif\u8bed\u53e5\u7684\u4e00\u822c\u5f62\u5f0f\u5982\u4e0b\u6240\u793a\uff1a if condition_1: statement_block_1 elif condition_2: statement_block_2 else: statement_block_3 \u5982\u679c \"condition_1\" \u4e3a True \u5c06\u6267\u884c \"statement_block_1\" \u5757\u8bed\u53e5 \u5982\u679c \"condition_1\" \u4e3aFalse\uff0c\u5c06\u5224\u65ad \"condition_2\" \u5982\u679c\"condition_2\" \u4e3a True \u5c06\u6267\u884c \"statement_block_2\" \u5757\u8bed\u53e5 \u5982\u679c \"condition_2\" \u4e3aFalse\uff0c\u5c06\u6267\u884c\"statement_block_3\"\u5757\u8bed\u53e5 Python \u4e2d\u7528 elif \u4ee3\u66ff\u4e86 else if \uff0c\u6240\u4ee5if\u8bed\u53e5\u7684\u5173\u952e\u5b57\u4e3a\uff1a if \u2013 elif \u2013 else \u3002 \u6ce8\u610f\uff1a 1\u3001\u6bcf\u4e2a\u6761\u4ef6\u540e\u9762\u8981\u4f7f\u7528\u5192\u53f7 : \uff0c\u8868\u793a\u63a5\u4e0b\u6765\u662f\u6ee1\u8db3\u6761\u4ef6\u540e\u8981\u6267\u884c\u7684\u8bed\u53e5\u5757\u3002 2\u3001\u4f7f\u7528\u7f29\u8fdb\u6765\u5212\u5206\u8bed\u53e5\u5757\uff0c\u76f8\u540c\u7f29\u8fdb\u6570\u7684\u8bed\u53e5\u5728\u4e00\u8d77\u7ec4\u6210\u4e00\u4e2a\u8bed\u53e5\u5757\u3002 3\u3001\u5728 Python \u4e2d\u6ca1\u6709 switch...case \u8bed\u53e5\uff0c\u4f46\u5728 Python3.10 \u7248\u672c\u6dfb\u52a0\u4e86 match...case \uff0c\u529f\u80fd\u4e5f\u7c7b\u4f3c\uff0c\u8be6\u89c1\u4e0b\u6587\u3002 \u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684 if \u5b9e\u4f8b\uff1a var1 = 100 if var1: print(\"if \u8868\u8fbe\u5f0f\u6761\u4ef6\u4e3a true\uff08\u5373var1\u4e0d\u4e3a\u96f6\uff09\") print(var1) var2 = 0 if var2: print(\"if \u8868\u8fbe\u5f0f\u6761\u4ef6\u4e3a true\uff08\u5373var2\u4e0d\u4e3a\u96f6)\") print(var2) else: print(\"if \u8868\u8fbe\u5f0f\u6761\u4ef6\u4e3a False\uff08\u5373var2\u4e3a\u96f6)\") \u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a if \u8868\u8fbe\u5f0f\u6761\u4ef6\u4e3a true\uff08\u5373var1\u4e0d\u4e3a\u96f6\uff09 100 if \u8868\u8fbe\u5f0f\u6761\u4ef6\u4e3a False\uff08\u5373var2\u4e3a\u96f6) \u4ece\u7ed3\u679c\u53ef\u4ee5\u770b\u5230\u7531\u4e8e\u53d8\u91cf var2 \u4e3a 0\uff0c\u6240\u4ee5\u5bf9\u5e94\u7684 if \u5185\u7684\u8bed\u53e5\u6ca1\u6709\u6267\u884c\u3002 \u4ee5\u4e0b\u5b9e\u4f8b\u6f14\u793a\u4e86\u72d7\u7684\u5e74\u9f84\u8ba1\u7b97\u5224\u65ad\uff1a age = int(input(\"\u8bf7\u8f93\u5165\u4f60\u5bb6\u72d7\u72d7\u7684\u5e74\u9f84: \")) print(\"\") if age <= 0: print(\"\u4f60\u662f\u5728\u9017\u6211\u5427!\") elif age == 1: print(\"\u76f8\u5f53\u4e8e 14 \u5c81\u7684\u4eba\u3002\") elif age == 2: print(\"\u76f8\u5f53\u4e8e 22 \u5c81\u7684\u4eba\u3002\") elif age > 2: human = 22 + (age -2)*5 print(\"\u5bf9\u5e94\u4eba\u7c7b\u5e74\u9f84: \", human) # \u9000\u51fa\u63d0\u793a input(\"\u70b9\u51fb enter\uff08\u56de\u8f66\uff09 \u952e\u9000\u51fa\") \u8f93\u51fa\u7ed3\u679c\u793a\u4f8b\uff1a \u8bf7\u8f93\u5165\u4f60\u5bb6\u72d7\u72d7\u7684\u5e74\u9f84: 5 \u5bf9\u5e94\u4eba\u7c7b\u5e74\u9f84: 37 \u70b9\u51fb enter\uff08\u56de\u8f66\uff09 \u952e\u9000\u51fa \u4ee5\u4e0b\u4e3aif\u4e2d\u5e38\u7528\u7684\u64cd\u4f5c\u8fd0\u7b97\u7b26\uff1a \u64cd\u4f5c\u7b26 \u63cf\u8ff0 < \u5c0f\u4e8e <= \u5c0f\u4e8e\u6216\u7b49\u4e8e > \u5927\u4e8e >= \u5927\u4e8e\u6216\u7b49\u4e8e == \u7b49\u4e8e\uff0c\u6bd4\u8f83\u4e24\u4e2a\u503c\u662f\u5426\u76f8\u7b49 != \u4e0d\u7b49\u4e8e \u7ed9\u51fa\u64cd\u4f5c\u7b26\u8fd0\u7b97\u7684\u8f93\u51fa\u5b9e\u4f8b\uff1a # \u7a0b\u5e8f\u6f14\u793a\u4e86 == \u64cd\u4f5c\u7b26 # \u4f7f\u7528\u6570\u5b57 print(5 == 6) # \u4f7f\u7528\u53d8\u91cf x = 5 y = 8 print(x == y) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a False False \u4e00\u4e2a\u6570\u5b57\u731c\u8c1c\u6e38\u620f\uff1a # \u8be5\u5b9e\u4f8b\u6f14\u793a\u4e86\u6570\u5b57\u731c\u8c1c\u6e38\u620f import random #python\u81ea\u5e26\u7684\u751f\u6210\u968f\u673a\u6570\u7684\u5e93 number = random.randint(0,10) #\u751f\u62100-10\u4e4b\u95f4\u7684\u6574\u6570\uff08\u4ee5\u540e\u4f1a\u8be6\u7ec6\u8bb2\u5230\uff09 guess = 0 print(\"\u6570\u5b57\u731c\u8c1c\u6e38\u620f!\") while guess != number: guess = int(input(\"\u8bf7\u8f93\u5165\u4f60\u731c\u7684\u6570\u5b57\uff1a\")) if guess == number: print(\"\u606d\u559c\uff0c\u4f60\u731c\u5bf9\u4e86\uff01\") elif guess < number: print(\"\u731c\u7684\u6570\u5b57\u5c0f\u4e86...\") elif guess > number: print(\"\u731c\u7684\u6570\u5b57\u5927\u4e86...\") \u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a \u6570\u5b57\u731c\u8c1c\u6e38\u620f! \u8bf7\u8f93\u5165\u4f60\u731c\u7684\u6570\u5b57\uff1a5 \u731c\u7684\u6570\u5b57\u5c0f\u4e86... \u8bf7\u8f93\u5165\u4f60\u731c\u7684\u6570\u5b57\uff1a7 \u731c\u7684\u6570\u5b57\u5c0f\u4e86... \u8bf7\u8f93\u5165\u4f60\u731c\u7684\u6570\u5b57\uff1a8 \u731c\u7684\u6570\u5b57\u5c0f\u4e86... \u8bf7\u8f93\u5165\u4f60\u731c\u7684\u6570\u5b57\uff1a9 \u731c\u7684\u6570\u5b57\u5c0f\u4e86... \u8bf7\u8f93\u5165\u4f60\u731c\u7684\u6570\u5b57\uff1a10 \u606d\u559c\uff0c\u4f60\u731c\u5bf9\u4e86\uff01 1.2 if \u5d4c\u5957 \u5728\u5d4c\u5957 if \u8bed\u53e5\u4e2d\uff0c\u53ef\u4ee5\u628a if...elif...else \u7ed3\u6784\u653e\u5728\u53e6\u5916\u4e00\u4e2a if...elif...else \u7ed3\u6784\u4e2d\u3002 if \u8868\u8fbe\u5f0f1: \u8bed\u53e5 if \u8868\u8fbe\u5f0f2: \u8bed\u53e5 elif \u8868\u8fbe\u5f0f3: \u8bed\u53e5 else: \u8bed\u53e5 elif \u8868\u8fbe\u5f0f4: \u8bed\u53e5 else: \u8bed\u53e5 \u5b9e\u4f8b\uff1a num=int(input(\"\u8f93\u5165\u4e00\u4e2a\u6570\u5b57\uff1a\")) if num%2==0: if num%3==0: print (\"\u4f60\u8f93\u5165\u7684\u6570\u5b57\u53ef\u4ee5\u6574\u9664 2 \u548c 3\") else: print (\"\u4f60\u8f93\u5165\u7684\u6570\u5b57\u53ef\u4ee5\u6574\u9664 2\uff0c\u4f46\u4e0d\u80fd\u6574\u9664 3\") else: if num%3==0: print (\"\u4f60\u8f93\u5165\u7684\u6570\u5b57\u53ef\u4ee5\u6574\u9664 3\uff0c\u4f46\u4e0d\u80fd\u6574\u9664 2\") else: print (\"\u4f60\u8f93\u5165\u7684\u6570\u5b57\u4e0d\u80fd\u6574\u9664 2 \u548c 3\") \u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a \u8f93\u5165\u4e00\u4e2a\u6570\u5b57\uff1a10 \u4f60\u8f93\u5165\u7684\u6570\u5b57\u53ef\u4ee5\u6574\u9664 2\uff0c\u4f46\u4e0d\u80fd\u6574\u9664 3 1.3 match...case Python 3.10 \u589e\u52a0\u4e86 match...case \u7684\u6761\u4ef6\u5224\u65ad\uff0c\u4e0d\u9700\u8981\u518d\u4f7f\u7528\u4e00\u8fde\u4e32\u7684 if-else \u6765\u5224\u65ad\u4e86\u3002 match \u540e\u7684\u5bf9\u8c61\u4f1a\u4f9d\u6b21\u4e0e case \u540e\u7684\u5185\u5bb9\u8fdb\u884c\u5339\u914d\uff0c\u5982\u679c\u5339\u914d\u6210\u529f\uff0c\u5219\u6267\u884c\u5339\u914d\u5230\u7684\u8868\u8fbe\u5f0f\uff0c\u5426\u5219\u76f4\u63a5\u8df3\u8fc7\uff0c _ \u53ef\u4ee5\u5339\u914d\u4e00\u5207\u3002 \u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a match subject: case <pattern_1>: <action_1> case <pattern_2>: <action_2> case <pattern_3>: <action_3> case _: <action_wildcard> case _: \u7c7b\u4f3c\u4e8e C \u548c Java \u4e2d\u7684 default: \uff0c\u5f53\u5176\u4ed6 case \u90fd\u65e0\u6cd5\u5339\u914d\u65f6\uff0c\u5339\u914d\u8fd9\u6761\uff0c\u4fdd\u8bc1\u6c38\u8fdc\u4f1a\u5339\u914d\u6210\u529f\u3002 def http_error(status): match status: case 400: return \"Bad request\" case 404: return \"Not found\" case 418: return \"I'm a teapot\" case _: return \"Something's wrong with the internet\" mystatus=400 print(http_error(mystatus)) \u4ee5\u4e0a\u662f\u4e00\u4e2a\u8f93\u51fa HTTP \u72b6\u6001\u7801\u7684\u5b9e\u4f8b\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a Bad request \u4e00\u4e2a case \u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u591a\u4e2a\u5339\u914d\u6761\u4ef6\uff0c\u6761\u4ef6\u4f7f\u7528 \uff5c \u9694\u5f00\uff0c\u4f8b\u5982\uff1a ... case 401|403|404: return \"Not allowed\" 2 \u5faa\u73af Python \u4e2d\u7684\u5faa\u73af\u8bed\u53e5\u6709 for \u548c while\u3002 Python \u5faa\u73af\u8bed\u53e5\u7684\u63a7\u5236\u7ed3\u6784\u56fe\u5982\u4e0b\u6240\u793a\uff1a 2.1 while \u5faa\u73af Python \u4e2d while \u8bed\u53e5\u7684\u4e00\u822c\u5f62\u5f0f\uff1a while \u5224\u65ad\u6761\u4ef6(condition)\uff1a \u6267\u884c\u8bed\u53e5(statements)\u2026\u2026 \u6267\u884c\u6d41\u7a0b\u56fe\u5982\u4e0b\uff1a \u540c\u6837\u9700\u8981\u6ce8\u610f\u5192\u53f7\u548c\u7f29\u8fdb\u3002\u53e6\u5916\uff0c\u5728 Python \u4e2d\u6ca1\u6709 do..while \u5faa\u73af\u3002 \u4ee5\u4e0b\u5b9e\u4f8b\u4f7f\u7528\u4e86 while \u6765\u8ba1\u7b97 1 \u5230 100 \u7684\u603b\u548c\uff1a n = 100 sum = 0 counter = 1 while counter <= n: sum = sum + counter counter += 1 print(\"1 \u5230 %d \u4e4b\u548c\u4e3a: %d\" % (n,sum)) \u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a 1 \u5230 100 \u4e4b\u548c\u4e3a: 5050 2.2\u65e0\u9650\u5faa\u73af \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u6761\u4ef6\u8868\u8fbe\u5f0f\u6c38\u8fdc\u4e0d\u4e3a false \u6765\u5b9e\u73b0\u65e0\u9650\u5faa\u73af\uff0c\u5b9e\u4f8b\u5982\u4e0b\uff1a var = 1 while var == 1 : # \u8868\u8fbe\u5f0f\u6c38\u8fdc\u4e3a true num = int(input(\"\u8f93\u5165\u4e00\u4e2a\u6570\u5b57 :\")) print (\"\u4f60\u8f93\u5165\u7684\u6570\u5b57\u662f: \", num) print (\"Good bye!\") \u6267\u884c\u4ee5\u4e0a\u811a\u672c\uff0c\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a \u8f93\u5165\u4e00\u4e2a\u6570\u5b57:5 \u4f60\u8f93\u5165\u7684\u6570\u5b57\u662f: 5 \u8f93\u5165\u4e00\u4e2a\u6570\u5b57:2 \u4f60\u8f93\u5165\u7684\u6570\u5b57\u662f: 2 \u8f93\u5165\u4e00\u4e2a\u6570\u5b57: \u65e0\u9650\u5faa\u73af\u5728\u670d\u52a1\u5668\u4e0a\u5ba2\u6237\u7aef\u7684\u5b9e\u65f6\u8bf7\u6c42\u975e\u5e38\u6709\u7528\u3002 2.3 while \u5faa\u73af\u4f7f\u7528 else \u8bed\u53e5 \u5982\u679c while \u540e\u9762\u7684\u6761\u4ef6\u8bed\u53e5\u4e3a false \u65f6\uff0c\u5219\u6267\u884c else \u7684\u8bed\u53e5\u5757\u3002 \u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a while <expr>: <statement(s)> else: <additional_statement(s)> expr \u6761\u4ef6\u8bed\u53e5\u4e3a true \u5219\u6267\u884c statement(s) \u8bed\u53e5\u5757\uff0c\u5982\u679c\u4e3a false\uff0c\u5219\u6267\u884c additional_statement(s)\u3002 \u5faa\u73af\u8f93\u51fa\u6570\u5b57\uff0c\u5e76\u5224\u65ad\u5927\u5c0f\uff1a count = 0 while count < 5: print (count, \" \u5c0f\u4e8e 5\") count = count + 1 else: print (count, \" \u5927\u4e8e\u6216\u7b49\u4e8e 5\") \u6267\u884c\u4ee5\u4e0a\u811a\u672c\uff0c\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a 0 \u5c0f\u4e8e 5 1 \u5c0f\u4e8e 5 2 \u5c0f\u4e8e 5 3 \u5c0f\u4e8e 5 4 \u5c0f\u4e8e 5 5 \u5927\u4e8e\u6216\u7b49\u4e8e 5 2.4 \u7b80\u5355\u8bed\u53e5\u7ec4 \u7c7b\u4f3c if \u8bed\u53e5\u7684\u8bed\u6cd5\uff0c\u5982\u679c\u4f60\u7684 while \u5faa\u73af\u4f53\u4e2d\u53ea\u6709\u4e00\u6761\u8bed\u53e5\uff0c\u4f60\u53ef\u4ee5\u5c06\u8be5\u8bed\u53e5\u4e0e while \u5199\u5728\u540c\u4e00\u884c\u4e2d\uff0c \u5982\u4e0b\u6240\u793a\uff1a flag = 1 while (flag): print ('CodeRaft\u6cdb\u7f16\u7a0b!') \u9700\u8981\u4e3b\u52a8\u7ec8\u6b62\u8f93\u51fa\u3002 2.5 for \u8bed\u53e5 Python for \u5faa\u73af\u53ef\u4ee5\u904d\u5386\u4efb\u4f55\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u5982\u4e00\u4e2a\u5217\u8868\u6216\u8005\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002 for\u5faa\u73af\u7684\u4e00\u822c\u683c\u5f0f\u5982\u4e0b\uff1a for <variable> in <sequence>: <statements> else: <statements> Python for \u5faa\u73af\u5b9e\u4f8b\uff1a sites = [\"Baidu\", \"Google\",\"Taobao\"] #\u5217\u8868\u5f62\u5f0f\u50a8\u5b58 for site in sites: print(site) \u4ee5\u4e0a\u4ee3\u7801\u6267\u884c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a Baidu Google Taobao \u4e5f\u53ef\u7528\u4e8e\u6253\u5370\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\uff1a word = 'CodeRaft' for letter in word: print(letter) \u4ee5\u4e0a\u4ee3\u7801\u6267\u884c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a C o d e R a f t \u6574\u6570\u8303\u56f4\u503c\u53ef\u4ee5\u914d\u5408 range() \u51fd\u6570\u4f7f\u7528\uff1a #1 \u5230 5 \u7684\u6240\u6709\u6570\u5b57\uff1a for number in range(1, 6): print(number) \u4ee5\u4e0a\u4ee3\u7801\u6267\u884c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a 1 2 3 4 5 \u5728 Python \u4e2d\uff0cfor...else \u8bed\u53e5\u7528\u4e8e\u5728\u5faa\u73af\u7ed3\u675f\u540e\u6267\u884c\u4e00\u6bb5\u4ee3\u7801\u3002 \u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a for item in iterable: # \u5faa\u73af\u4e3b\u4f53 else: # \u5faa\u73af\u7ed3\u675f\u540e\u6267\u884c\u7684\u4ee3\u7801 \u5f53\u5faa\u73af\u6267\u884c\u5b8c\u6bd5\uff08\u5373\u904d\u5386\u5b8c iterable \u4e2d\u7684\u6240\u6709\u5143\u7d20\uff09\u540e\uff0c\u4f1a\u6267\u884c else \u5b50\u53e5\u4e2d\u7684\u4ee3\u7801\uff0c\u5982\u679c\u5728\u5faa\u73af\u8fc7\u7a0b\u4e2d\u9047\u5230\u4e86 break \u8bed\u53e5\uff0c\u5219\u4f1a\u4e2d\u65ad\u5faa\u73af\uff0c\u6b64\u65f6\u4e0d\u4f1a\u6267\u884c else \u5b50\u53e5\u3002 for x in range(6): print(x) else: print(\"Finally finished!\") \u6267\u884c\u811a\u672c\u540e\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a 0 1 2 3 4 5 Finally finished! \u4ee5\u4e0b for \u5b9e\u4f8b\u4e2d\u4f7f\u7528\u4e86 break \u8bed\u53e5\uff0cbreak \u8bed\u53e5\u7528\u4e8e\u8df3\u51fa\u5f53\u524d\u5faa\u73af\u4f53\uff0c\u4e0d\u4f1a\u6267\u884c else \u5b50\u53e5\uff1a sites = [\"Baidu\", \"Google\",\"Taobao\"] for site in sites: if site == \"Google\": print(\"\u8c37\u6b4c\uff01\") break print(\"\u56fd\u9645\u5927\u5382\uff1a \" + site) else: print(\"\u6ca1\u6709\u5b8c\u6210\u5faa\u73af\") print(\"\u5b8c\u6210\u5faa\u73af!\") \u6267\u884c\u811a\u672c\u540e\uff0c\u5728\u5faa\u73af\u5230 \"Google\"\u65f6\u4f1a\u8df3\u51fa\u5faa\u73af\u4f53\uff1a \u56fd\u9645\u5927\u5382\uff1a Baidu \u8c37\u6b4c\uff01 \u5b8c\u6210\u5faa\u73af! 2.6 range() \u51fd\u6570 \u5982\u679c\u4f60\u9700\u8981\u904d\u5386\u6570\u5b57\u5e8f\u5217\uff0c\u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e range() \u51fd\u6570\uff0crange\u62ec\u53f7\u7684\u5185\u7684\u53c2\u6570\u4e3a\u5de6\u5f00\u53f3\u95ed\u533a\u95f4[ )\uff0c\u5206\u522b\u4e3a\u904d\u5386\u7684\u8d77\u59cb\u6570\uff0c\u7ec8\u6b62\u6570\uff0c\u4ee5\u53ca\u6b65\u957f\uff0c\u5982\u679c\u4e0d\u58f0\u660e\uff0c\u9ed8\u8ba4\u8d77\u59cb\u4e3a0\uff0c\u6b65\u957f\u4e3a1\u3002\u5b83\u4f1a\u751f\u6210\u6570\u5217\uff0c\u4f8b\u5982: >>>for i in range(5): ... print(i) ... 0 1 2 3 4 \u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 range() \u6307\u5b9a\u533a\u95f4\u7684\u503c\uff1a >>>for i in range(5,9) : print(i) 5 6 7 8 >>> \u4e5f\u53ef\u4ee5\u4f7f range() \u4ee5\u6307\u5b9a\u6570\u5b57\u5f00\u59cb\u5e76\u6307\u5b9a\u4e0d\u540c\u7684\u589e\u91cf(\u751a\u81f3\u53ef\u4ee5\u662f\u8d1f\u6570\uff0c\u53eb\u505a'\u6b65\u957f'): >>>for i in range(0, 10, 3) : print(i) 0 3 6 9 >>> \u5b9e\u73b0\u5012\u5e8f\u904d\u5386\uff1a >>>for i in range(5,1,-1): print(i) 5 4 3 2 >>> \u8d1f\u6570\uff1a >>>for i in range(-10, -100, -30) : print(i) -10 -40 -70 >>> \u7ed3\u5408 range() \u548c len() \u51fd\u6570\u4ee5\u904d\u5386\u4e00\u4e2a\u5e8f\u5217\u7684\u7d22\u5f15,\u5982\u4e0b\u6240\u793a\uff1a >>>a = ['Google', 'Baidu', 'Taobao', 'QQ'] >>> for i in range(len(a)): ... print(i, a[i]) ... 0 Google 1 Baidu 2 Taobao 3 QQ >>> \u8fd8\u53ef\u4ee5\u4f7f\u7528 range() \u51fd\u6570\u6765\u521b\u5efa\u4e00\u4e2a\u5217\u8868\uff1a >>>list(range(5)) [0, 1, 2, 3, 4] >>> break \u548c continue \u8bed\u53e5\u53ca\u5faa\u73af\u4e2d\u7684 else \u5b50\u53e5 break \u6267\u884c\u6d41\u7a0b\u56fe\uff1a continue \u6267\u884c\u6d41\u7a0b\u56fe\uff1a while \u8bed\u53e5\u4ee3\u7801\u6267\u884c\u8fc7\u7a0b\uff1a or \u8bed\u53e5\u4ee3\u7801\u6267\u884c\u8fc7\u7a0b\uff1a break \u8bed\u53e5\u53ef\u4ee5\u8df3\u51fa for \u548c while \u7684\u5faa\u73af\u4f53\u3002\u5982\u679c\u4f60\u4ece for \u6216 while \u5faa\u73af\u4e2d\u7ec8\u6b62\uff0c\u4efb\u4f55\u5bf9\u5e94\u7684\u5faa\u73af else \u5757\u5c06\u4e0d\u6267\u884c\u3002 continue \u8bed\u53e5\u88ab\u7528\u6765\u544a\u8bc9 Python \u8df3\u8fc7\u5f53\u524d\u5faa\u73af\u5757\u4e2d\u7684\u5269\u4f59\u8bed\u53e5\uff0c\u7136\u540e\u7ee7\u7eed\u8fdb\u884c\u4e0b\u4e00\u8f6e\u5faa\u73af\u3002 \u5b9e\u4f8b\uff1a while \u4e2d\u4f7f\u7528 break\uff1a n = 5 while n > 0: n -= 1 if n == 2: break print(n) print('\u5faa\u73af\u7ed3\u675f\u3002') \u7ed3\u679c\uff1a 4 3 \u5faa\u73af\u7ed3\u675f\u3002 while \u4e2d\u4f7f\u7528 continue\uff1a n = 5 while n > 0: n -= 1 if n == 2: continue print(n) print('\u5faa\u73af\u7ed3\u675f\u3002') \u7ed3\u679c\uff1a 4 3 1 0 \u5faa\u73af\u7ed3\u675f\u3002 \u5faa\u73af\u8bed\u53e5\u53ef\u4ee5\u6709 else \u5b50\u53e5\uff0c\u5b83\u5728\u7a77\u5c3d\u5217\u8868(\u4ee5for\u5faa\u73af)\u6216\u6761\u4ef6\u53d8\u4e3a false (\u4ee5while\u5faa\u73af)\u5bfc\u81f4\u5faa\u73af\u7ec8\u6b62\u65f6\u88ab\u6267\u884c\uff0c\u4f46\u5faa\u73af\u88ab break \u7ec8\u6b62\u65f6\u4e0d\u6267\u884c\u3002 \u5982\u4e0b\u5b9e\u4f8b\u7528\u4e8e\u67e5\u8be2\u8d28\u6570\u7684\u5faa\u73af\u4f8b\u5b50\uff1a for n in range(2, 10): for x in range(2, n): if n % x == 0: print(n, '\u7b49\u4e8e', x, '*', n//x) break else: # \u5faa\u73af\u4e2d\u6ca1\u6709\u627e\u5230\u5143\u7d20 print(n, ' \u662f\u8d28\u6570') \u7ed3\u679c\uff1a 2 \u662f\u8d28\u6570 3 \u662f\u8d28\u6570 4 \u7b49\u4e8e 2 * 2 5 \u662f\u8d28\u6570 6 \u7b49\u4e8e 2 * 3 7 \u662f\u8d28\u6570 8 \u7b49\u4e8e 2 * 4 9 \u7b49\u4e8e 3 * 3 2.7 pass \u8bed\u53e5 Python pass\u662f\u7a7a\u8bed\u53e5\uff0c\u662f\u4e3a\u4e86\u4fdd\u6301\u7a0b\u5e8f\u7ed3\u6784\u7684\u5b8c\u6574\u6027\u3002 pass \u4e0d\u505a\u4efb\u4f55\u4e8b\u60c5\uff0c\u4e00\u822c\u7528\u505a\u5360\u4f4d\u8bed\u53e5\uff0c\u5982\u4e0b\u5b9e\u4f8b >>>while True: ... pass # \u7b49\u5f85\u952e\u76d8\u4e2d\u65ad \u4ee5\u4e0b\u5b9e\u4f8b\u5728\u5b57\u6bcd\u4e3a o \u65f6 \u6267\u884c pass \u8bed\u53e5\u5757\uff1a for letter in 'CodeRaft': if letter == 'f': pass print('\u6267\u884c pass \u5757') print('\u5f53\u524d\u5b57\u6bcd :', letter) print(\"Good bye!\") \u7ed3\u679c\uff1a \u5f53\u524d\u5b57\u6bcd : C \u5f53\u524d\u5b57\u6bcd : o \u5f53\u524d\u5b57\u6bcd : d \u5f53\u524d\u5b57\u6bcd : e \u5f53\u524d\u5b57\u6bcd : R \u5f53\u524d\u5b57\u6bcd : a \u6267\u884c pass \u5757 \u5f53\u524d\u5b57\u6bcd : f \u5f53\u524d\u5b57\u6bcd : t Good bye! \u8bfe\u540e\u7ec3\u4e60 1.\u70b9\u9910\u7a0b\u5e8f \u9898\u76ee\u63cf\u8ff0\uff1a \u8bbe\u8ba1\u4e00\u4e2a\u7b80\u5355\u7684\u9910\u5385\u70b9\u5355\u7a0b\u5e8f\uff0c\u7a0b\u5e8f\u80fd\u591f\u8fde\u7eed\u63a5\u53d7\u591a\u4e2a\u987e\u5ba2\u7684\u70b9\u5355\u3002\u7a0b\u5e8f\u63d0\u524d\u77e5\u9053\u6c49\u5821\u3001\u85af\u6761\u548c\u53ef\u4e50\u7684\u4ef7\u683c\u3002\u6bcf\u4f4d\u987e\u5ba2\u53ef\u4ee5\u9009\u62e9\u70b9\u6c49\u5821\u3001\u85af\u6761\u548c\u53ef\u4e50\u7684\u6570\u91cf\uff0c\u7a0b\u5e8f\u5c06\u8f93\u51fa\u6bcf\u4f4d\u987e\u5ba2\u7684\u70b9\u5355\u5185\u5bb9\u548c\u603b\u4ef7\uff0c\u6700\u540e\u8f93\u51fa\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d\u3002 \u8981\u6c42\uff1a \u7a0b\u5e8f\u5f00\u59cb\u65f6\uff0c\u5b9a\u4e49\u6c49\u5821\u3001\u85af\u6761\u548c\u53ef\u4e50\u7684\u4ef7\u683c\u5e38\u91cf\u3002 \u4f7f\u7528\u5faa\u73af\u8bed\u53e5\u8fde\u7eed\u63a5\u53d7\u987e\u5ba2\u7684\u70b9\u5355\uff0c\u5728\u5f00\u59cb\u8ba1\u7b97\u524d\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u4e13\u7528\u7684\u53d8\u91cf\u83b7\u53d6\u7528\u6237\u610f\u56fe\u662f\u7ee7\u7eed\u70b9\u5355\u8fd8\u662f\u9000\u51fa\uff08\u4f8b\uff1a\u8f93\u5165-1\u9000\u51fa\u5e76\u8ba1\u7b97\u603b\u9500\u552e\u989d\uff0c\u5176\u4ed6\u6570\u5b57\u5219\u8fdb\u884c\u4e0b\u4e00\u8f6e\u70b9\u5355\uff09\u3002 \u6bcf\u6b21\u63a5\u53d7\u987e\u5ba2\u7684\u70b9\u5355\u540e\uff0c\u8f93\u51fa\u987e\u5ba2\u7684\u70b9\u5355\u5185\u5bb9\u548c\u672c\u6b21\u70b9\u5355\u7684\u603b\u4ef7\u3002 \u7d2f\u52a0\u6bcf\u4f4d\u987e\u5ba2\u7684\u70b9\u5355\u603b\u4ef7\u5230\u603b\u9500\u552e\u989d\u4e2d\u3002 \u9000\u51fa\u70b9\u5355\u540e\uff0c\u8f93\u51fa\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d\u3002 \u793a\u4f8b\u8fd0\u884c\uff1a \u5047\u8bbe\u64cd\u4f5c\u6d41\u7a0b\u5982\u4e0b\uff1a \u7b2c\u4e00\u4f4d\u987e\u5ba2\u70b9\u6c49\u5821 2\uff0c\u85af\u6761 1\uff0c\u53ef\u4e50 3\uff1b \u7b2c\u4e8c\u4f4d\u987e\u5ba2\u70b9\u6c49\u5821 1\uff0c\u85af\u6761 2\uff0c\u53ef\u4e50 2\uff1b \u9009\u62e9\u9000\u51fa\u7a0b\u5e8f\u3002 \u53c2\u8003\u793a\u4f8b\uff1a \u8f93\u5165-1\u9000\u51fa\u5e76\u8ba1\u7b97\u603b\u9500\u552e\u989d\uff0c\u5176\u4ed6\u6570\u5b57\u7ee7\u7eed\u70b9\u5355: 1 \u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf: 2 \u8bf7\u8f93\u5165\u85af\u6761\u7684\u6570\u91cf: 1 \u8bf7\u8f93\u5165\u53ef\u4e50\u7684\u6570\u91cf: 3 \u987e\u5ba2\u70b9\u5355\u5185\u5bb9: \u6c49\u5821 2 \u4e2a, \u85af\u6761 1 \u4efd, \u53ef\u4e50 3 \u74f6 \u672c\u6b21\u70b9\u5355\u603b\u4ef7: 44.50 \u5143 \u8f93\u5165-1\u9000\u51fa\u5e76\u8ba1\u7b97\u603b\u9500\u552e\u989d\uff0c\u5176\u4ed6\u6570\u5b57\u7ee7\u7eed\u70b9\u5355: 1 \u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf: 1 \u8bf7\u8f93\u5165\u85af\u6761\u7684\u6570\u91cf: 2 \u8bf7\u8f93\u5165\u53ef\u4e50\u7684\u6570\u91cf: 2 \u987e\u5ba2\u70b9\u5355\u5185\u5bb9: \u6c49\u5821 1 \u4e2a, \u85af\u6761 2 \u4efd, \u53ef\u4e50 2 \u74f6 \u672c\u6b21\u70b9\u5355\u603b\u4ef7: 33.50 \u5143 \u8f93\u5165-1\u9000\u51fa\u5e76\u8ba1\u7b97\u603b\u9500\u552e\u989d\uff0c\u5176\u4ed6\u6570\u5b57\u7ee7\u7eed\u70b9\u5355: -1 \u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d: 78.00 \u5143 \u53c2\u8003\u4ee3\u7801\uff1a # \u9910\u5385\u70b9\u5355\u7a0b\u5e8f # \u5b9a\u4e49\u5546\u54c1\u7684\u4ef7\u683c\u5e38\u91cf PRICE_BURGER = 12.5 # \u6c49\u5821\u7684\u4ef7\u683c PRICE_FRIES = 6 # \u85af\u6761\u7684\u4ef7\u683c PRICE_COKE = 4.5 # \u53ef\u4e50\u7684\u4ef7\u683c # \u521d\u59cb\u5316\u603b\u9500\u552e\u989d total_sales = 0.0 while True: # \u63d0\u793a\u7528\u6237\u8f93\u5165\u662f\u5426\u7ee7\u7eed\u70b9\u5355\uff0c-1\u8868\u793a\u9000\u51fa user_input = input(\"\u8f93\u5165-1\u9000\u51fa\u5e76\u8ba1\u7b97\u603b\u9500\u552e\u989d\uff0c\u5176\u4ed6\u6570\u5b57\u7ee7\u7eed\u70b9\u5355: \") if user_input == '-1': break # \u63a5\u53d7\u987e\u5ba2\u7684\u70b9\u5355 try: num_burgers = int(input(\"\u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf: \")) num_fries = int(input(\"\u8bf7\u8f93\u5165\u85af\u6761\u7684\u6570\u91cf: \")) num_cokes = int(input(\"\u8bf7\u8f93\u5165\u53ef\u4e50\u7684\u6570\u91cf: \")) except ValueError: print(\"\u8bf7\u8f93\u5165\u6709\u6548\u7684\u6570\u91cf\u3002\") continue # \u8ba1\u7b97\u5f53\u524d\u987e\u5ba2\u7684\u70b9\u5355\u603b\u4ef7 total_price = num_burgers * PRICE_BURGER + num_fries * PRICE_FRIES + num_cokes * PRICE_COKE # \u8f93\u51fa\u5f53\u524d\u987e\u5ba2\u7684\u70b9\u5355\u5185\u5bb9\u548c\u603b\u4ef7 print(f\"\u987e\u5ba2\u70b9\u5355\u5185\u5bb9: \u6c49\u5821 {num_burgers} \u4e2a, \u85af\u6761 {num_fries} \u4efd, \u53ef\u4e50 {num_cokes} \u74f6\") print(f\"\u672c\u6b21\u70b9\u5355\u603b\u4ef7: {total_price:.2f} \u5143\") # \u5c06\u672c\u6b21\u70b9\u5355\u603b\u4ef7\u7d2f\u52a0\u5230\u603b\u9500\u552e\u989d\u4e2d total_sales += total_price # \u8f93\u51fa\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d print(f\"\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d: {total_sales:.2f} \u5143\") 2.Python \u731c\u6570\u5b57\u6e38\u620f \u9898\u76ee\u63cf\u8ff0 \uff1a \u7f16\u5199\u4e00\u4e2aPython\u7a0b\u5e8f\u6765\u5b9e\u73b0\u4e00\u4e2a\u731c\u6570\u5b57\u6e38\u620f\u3002\u7a0b\u5e8f\u5c06\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u57281\u5230100\u4e4b\u95f4\u7684\u6570\u5b57\uff0c\u7528\u6237\u9700\u8981\u901a\u8fc7\u8f93\u5165\u6765\u731c\u8fd9\u4e2a\u6570\u5b57\uff0c\u7a0b\u5e8f\u6839\u636e\u7528\u6237\u7684\u731c\u6d4b\u7ed9\u51fa\u63d0\u793a\uff08\u731c\u9ad8\u4e86\u3001\u731c\u4f4e\u4e86\u6216\u731c\u5bf9\u4e86\uff09\uff0c\u76f4\u5230\u7528\u6237\u731c\u5bf9\u4e3a\u6b62\u3002 \u5177\u4f53\u8981\u6c42 \uff1a \u7a0b\u5e8f\u4e00\u5f00\u59cb\u5e94\u968f\u673a\u751f\u6210\u4e00\u4e2a1\u5230100\u4e4b\u95f4\u7684\u6570\u5b57\u3002 \u7528\u6237\u8f93\u5165\u731c\u6d4b\u7684\u6570\u5b57\uff0c\u7a0b\u5e8f\u6839\u636e\u7528\u6237\u7684\u8f93\u5165\u7ed9\u51fa\u76f8\u5e94\u7684\u63d0\u793a\u3002 \u5982\u679c\u7528\u6237\u731c\u5bf9\u4e86\uff0c\u663e\u793a\u731c\u5bf9\u7684\u4fe1\u606f\u5e76\u7ed3\u675f\u6e38\u620f\u3002 \u5982\u679c\u7528\u6237\u731c\u9519\uff0c\u6839\u636e\u731c\u6d4b\u7684\u6570\u5b57\u662f\u9ad8\u4e8e\u8fd8\u662f\u4f4e\u4e8e\u76ee\u6807\u6570\u5b57\uff0c\u7ed9\u51fa\u76f8\u5e94\u7684\u63d0\u793a\uff0c\u5e76\u8ba9\u7528\u6237\u7ee7\u7eed\u731c\u3002 \u4f7f\u7528\u5faa\u73af\u786e\u4fdd\u6e38\u620f\u53ef\u4ee5\u7ee7\u7eed\u8fdb\u884c\uff0c\u76f4\u5230\u7528\u6237\u731c\u5bf9\u4e3a\u6b62\u3002 \u53c2\u8003\u793a\u4f8b\uff1a \u6b22\u8fce\u53c2\u52a0\u731c\u6570\u5b57\u6e38\u620f\uff01\u8bf7\u731c\u4e00\u4e2a1\u5230100\u4e4b\u95f4\u7684\u6570\u5b57\u3002 \u8bf7\u8f93\u5165\u4f60\u7684\u731c\u6d4b\uff1a50 \u592a\u4f4e\u4e86\uff0c\u518d\u8bd5\u8bd5\u770b\uff01 \u8bf7\u8f93\u5165\u4f60\u7684\u731c\u6d4b\uff1a75 \u592a\u9ad8\u4e86\uff0c\u518d\u8bd5\u8bd5\u770b\uff01 \u8bf7\u8f93\u5165\u4f60\u7684\u731c\u6d4b\uff1a62 \u606d\u559c\u4f60\uff0c\u731c\u5bf9\u4e86\uff01\u6b63\u786e\u7b54\u6848\u5c31\u662f62\u3002 \u6e38\u620f\u7ed3\u675f\u3002\u8c22\u8c22\u53c2\u4e0e\uff01 \u53c2\u8003\u4ee3\u7801\uff1a import random # \u751f\u6210\u4e00\u4e2a1\u5230100\u4e4b\u95f4\u7684\u968f\u673a\u6570 target_number = random.randint(1, 100) guess = None # \u6e38\u620f\u6b22\u8fce\u4fe1\u606f print(\"\u6b22\u8fce\u53c2\u52a0\u731c\u6570\u5b57\u6e38\u620f\uff01\u8bf7\u731c\u4e00\u4e2a1\u5230100\u4e4b\u95f4\u7684\u6570\u5b57\u3002\") # \u5f00\u59cb\u731c\u6570\u5b57\u7684\u5faa\u73af while guess != target_number: # \u83b7\u53d6\u7528\u6237\u8f93\u5165 guess = int(input(\"\u8bf7\u8f93\u5165\u4f60\u7684\u731c\u6d4b\uff1a\")) # \u5224\u65ad\u731c\u6d4b\u7ed3\u679c if guess < target_number: print(\"\u592a\u4f4e\u4e86\uff0c\u518d\u8bd5\u8bd5\u770b\uff01\") elif guess > target_number: print(\"\u592a\u9ad8\u4e86\uff0c\u518d\u8bd5\u8bd5\u770b\uff01\") else: print(f\"\u606d\u559c\u4f60\uff0c\u731c\u5bf9\u4e86\uff01\u6b63\u786e\u7b54\u6848\u5c31\u662f{target_number}\u3002\") # \u7ed3\u675f\u6e38\u620f print(\"\u6e38\u620f\u7ed3\u675f\u3002\u8c22\u8c22\u53c2\u4e0e\uff01\")","title":"Lesson2 \u6761\u4ef6\u548c\u5faa\u73af"},{"location":"lesson2/Lesson2%20Python/#lesson2","text":"","title":"Lesson2 \u6761\u4ef6\u548c\u5faa\u73af"},{"location":"lesson2/Lesson2%20Python/#_1","text":"Lesson 2 \u6761\u4ef6\u548c\u5faa\u73af 1 \u6761\u4ef6\u63a7\u5236 1.1 if \u8bed\u53e5 1.2 if \u5d4c\u5957 1.3 match...case 2 \u5faa\u73af 2.1 while \u5faa\u73af 2.2 \u65e0\u9650\u5faa\u73af 2.3 while \u5faa\u73af\u4f7f\u7528 else \u8bed\u53e5 2.4 \u7b80\u5355\u8bed\u53e5\u7ec4 2.5 for \u8bed\u53e5 2.6 range() \u51fd\u6570 2.7 break \u548c continue \u8bed\u53e5\u53ca\u5faa\u73af\u4e2d\u7684 else \u5b50\u53e5 2.8 pass \u8bed\u53e5 \u8bfe\u540e\u7ec3\u4e60 1. \u70b9\u9910\u7a0b\u5e8f 2. Python \u731c\u6570\u5b57\u6e38\u620f","title":"\u76ee\u5f55"},{"location":"lesson2/Lesson2%20Python/#1","text":"Python \u6761\u4ef6\u8bed\u53e5\u662f\u901a\u8fc7\u4e00\u6761\u6216\u591a\u6761\u8bed\u53e5\u7684\u6267\u884c\u7ed3\u679c\uff08True \u6216\u8005 False\uff09\u6765\u51b3\u5b9a\u6267\u884c\u7684\u4ee3\u7801\u5757\u3002 \u53ef\u4ee5\u901a\u8fc7\u4e0b\u56fe\u6765\u7b80\u5355\u4e86\u89e3\u6761\u4ef6\u8bed\u53e5\u7684\u6267\u884c\u8fc7\u7a0b\uff1a \u4ee3\u7801\u6267\u884c\u8fc7\u7a0b\uff1a","title":"1 \u6761\u4ef6\u63a7\u5236"},{"location":"lesson2/Lesson2%20Python/#11-if","text":"Python\u4e2dif\u8bed\u53e5\u7684\u4e00\u822c\u5f62\u5f0f\u5982\u4e0b\u6240\u793a\uff1a if condition_1: statement_block_1 elif condition_2: statement_block_2 else: statement_block_3 \u5982\u679c \"condition_1\" \u4e3a True \u5c06\u6267\u884c \"statement_block_1\" \u5757\u8bed\u53e5 \u5982\u679c \"condition_1\" \u4e3aFalse\uff0c\u5c06\u5224\u65ad \"condition_2\" \u5982\u679c\"condition_2\" \u4e3a True \u5c06\u6267\u884c \"statement_block_2\" \u5757\u8bed\u53e5 \u5982\u679c \"condition_2\" \u4e3aFalse\uff0c\u5c06\u6267\u884c\"statement_block_3\"\u5757\u8bed\u53e5 Python \u4e2d\u7528 elif \u4ee3\u66ff\u4e86 else if \uff0c\u6240\u4ee5if\u8bed\u53e5\u7684\u5173\u952e\u5b57\u4e3a\uff1a if \u2013 elif \u2013 else \u3002 \u6ce8\u610f\uff1a 1\u3001\u6bcf\u4e2a\u6761\u4ef6\u540e\u9762\u8981\u4f7f\u7528\u5192\u53f7 : \uff0c\u8868\u793a\u63a5\u4e0b\u6765\u662f\u6ee1\u8db3\u6761\u4ef6\u540e\u8981\u6267\u884c\u7684\u8bed\u53e5\u5757\u3002 2\u3001\u4f7f\u7528\u7f29\u8fdb\u6765\u5212\u5206\u8bed\u53e5\u5757\uff0c\u76f8\u540c\u7f29\u8fdb\u6570\u7684\u8bed\u53e5\u5728\u4e00\u8d77\u7ec4\u6210\u4e00\u4e2a\u8bed\u53e5\u5757\u3002 3\u3001\u5728 Python \u4e2d\u6ca1\u6709 switch...case \u8bed\u53e5\uff0c\u4f46\u5728 Python3.10 \u7248\u672c\u6dfb\u52a0\u4e86 match...case \uff0c\u529f\u80fd\u4e5f\u7c7b\u4f3c\uff0c\u8be6\u89c1\u4e0b\u6587\u3002 \u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684 if \u5b9e\u4f8b\uff1a var1 = 100 if var1: print(\"if \u8868\u8fbe\u5f0f\u6761\u4ef6\u4e3a true\uff08\u5373var1\u4e0d\u4e3a\u96f6\uff09\") print(var1) var2 = 0 if var2: print(\"if \u8868\u8fbe\u5f0f\u6761\u4ef6\u4e3a true\uff08\u5373var2\u4e0d\u4e3a\u96f6)\") print(var2) else: print(\"if \u8868\u8fbe\u5f0f\u6761\u4ef6\u4e3a False\uff08\u5373var2\u4e3a\u96f6)\") \u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a if \u8868\u8fbe\u5f0f\u6761\u4ef6\u4e3a true\uff08\u5373var1\u4e0d\u4e3a\u96f6\uff09 100 if \u8868\u8fbe\u5f0f\u6761\u4ef6\u4e3a False\uff08\u5373var2\u4e3a\u96f6) \u4ece\u7ed3\u679c\u53ef\u4ee5\u770b\u5230\u7531\u4e8e\u53d8\u91cf var2 \u4e3a 0\uff0c\u6240\u4ee5\u5bf9\u5e94\u7684 if \u5185\u7684\u8bed\u53e5\u6ca1\u6709\u6267\u884c\u3002 \u4ee5\u4e0b\u5b9e\u4f8b\u6f14\u793a\u4e86\u72d7\u7684\u5e74\u9f84\u8ba1\u7b97\u5224\u65ad\uff1a age = int(input(\"\u8bf7\u8f93\u5165\u4f60\u5bb6\u72d7\u72d7\u7684\u5e74\u9f84: \")) print(\"\") if age <= 0: print(\"\u4f60\u662f\u5728\u9017\u6211\u5427!\") elif age == 1: print(\"\u76f8\u5f53\u4e8e 14 \u5c81\u7684\u4eba\u3002\") elif age == 2: print(\"\u76f8\u5f53\u4e8e 22 \u5c81\u7684\u4eba\u3002\") elif age > 2: human = 22 + (age -2)*5 print(\"\u5bf9\u5e94\u4eba\u7c7b\u5e74\u9f84: \", human) # \u9000\u51fa\u63d0\u793a input(\"\u70b9\u51fb enter\uff08\u56de\u8f66\uff09 \u952e\u9000\u51fa\") \u8f93\u51fa\u7ed3\u679c\u793a\u4f8b\uff1a \u8bf7\u8f93\u5165\u4f60\u5bb6\u72d7\u72d7\u7684\u5e74\u9f84: 5 \u5bf9\u5e94\u4eba\u7c7b\u5e74\u9f84: 37 \u70b9\u51fb enter\uff08\u56de\u8f66\uff09 \u952e\u9000\u51fa \u4ee5\u4e0b\u4e3aif\u4e2d\u5e38\u7528\u7684\u64cd\u4f5c\u8fd0\u7b97\u7b26\uff1a \u64cd\u4f5c\u7b26 \u63cf\u8ff0 < \u5c0f\u4e8e <= \u5c0f\u4e8e\u6216\u7b49\u4e8e > \u5927\u4e8e >= \u5927\u4e8e\u6216\u7b49\u4e8e == \u7b49\u4e8e\uff0c\u6bd4\u8f83\u4e24\u4e2a\u503c\u662f\u5426\u76f8\u7b49 != \u4e0d\u7b49\u4e8e \u7ed9\u51fa\u64cd\u4f5c\u7b26\u8fd0\u7b97\u7684\u8f93\u51fa\u5b9e\u4f8b\uff1a # \u7a0b\u5e8f\u6f14\u793a\u4e86 == \u64cd\u4f5c\u7b26 # \u4f7f\u7528\u6570\u5b57 print(5 == 6) # \u4f7f\u7528\u53d8\u91cf x = 5 y = 8 print(x == y) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a False False \u4e00\u4e2a\u6570\u5b57\u731c\u8c1c\u6e38\u620f\uff1a # \u8be5\u5b9e\u4f8b\u6f14\u793a\u4e86\u6570\u5b57\u731c\u8c1c\u6e38\u620f import random #python\u81ea\u5e26\u7684\u751f\u6210\u968f\u673a\u6570\u7684\u5e93 number = random.randint(0,10) #\u751f\u62100-10\u4e4b\u95f4\u7684\u6574\u6570\uff08\u4ee5\u540e\u4f1a\u8be6\u7ec6\u8bb2\u5230\uff09 guess = 0 print(\"\u6570\u5b57\u731c\u8c1c\u6e38\u620f!\") while guess != number: guess = int(input(\"\u8bf7\u8f93\u5165\u4f60\u731c\u7684\u6570\u5b57\uff1a\")) if guess == number: print(\"\u606d\u559c\uff0c\u4f60\u731c\u5bf9\u4e86\uff01\") elif guess < number: print(\"\u731c\u7684\u6570\u5b57\u5c0f\u4e86...\") elif guess > number: print(\"\u731c\u7684\u6570\u5b57\u5927\u4e86...\") \u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a \u6570\u5b57\u731c\u8c1c\u6e38\u620f! \u8bf7\u8f93\u5165\u4f60\u731c\u7684\u6570\u5b57\uff1a5 \u731c\u7684\u6570\u5b57\u5c0f\u4e86... \u8bf7\u8f93\u5165\u4f60\u731c\u7684\u6570\u5b57\uff1a7 \u731c\u7684\u6570\u5b57\u5c0f\u4e86... \u8bf7\u8f93\u5165\u4f60\u731c\u7684\u6570\u5b57\uff1a8 \u731c\u7684\u6570\u5b57\u5c0f\u4e86... \u8bf7\u8f93\u5165\u4f60\u731c\u7684\u6570\u5b57\uff1a9 \u731c\u7684\u6570\u5b57\u5c0f\u4e86... \u8bf7\u8f93\u5165\u4f60\u731c\u7684\u6570\u5b57\uff1a10 \u606d\u559c\uff0c\u4f60\u731c\u5bf9\u4e86\uff01","title":"1.1 if \u8bed\u53e5"},{"location":"lesson2/Lesson2%20Python/#12-if","text":"\u5728\u5d4c\u5957 if \u8bed\u53e5\u4e2d\uff0c\u53ef\u4ee5\u628a if...elif...else \u7ed3\u6784\u653e\u5728\u53e6\u5916\u4e00\u4e2a if...elif...else \u7ed3\u6784\u4e2d\u3002 if \u8868\u8fbe\u5f0f1: \u8bed\u53e5 if \u8868\u8fbe\u5f0f2: \u8bed\u53e5 elif \u8868\u8fbe\u5f0f3: \u8bed\u53e5 else: \u8bed\u53e5 elif \u8868\u8fbe\u5f0f4: \u8bed\u53e5 else: \u8bed\u53e5 \u5b9e\u4f8b\uff1a num=int(input(\"\u8f93\u5165\u4e00\u4e2a\u6570\u5b57\uff1a\")) if num%2==0: if num%3==0: print (\"\u4f60\u8f93\u5165\u7684\u6570\u5b57\u53ef\u4ee5\u6574\u9664 2 \u548c 3\") else: print (\"\u4f60\u8f93\u5165\u7684\u6570\u5b57\u53ef\u4ee5\u6574\u9664 2\uff0c\u4f46\u4e0d\u80fd\u6574\u9664 3\") else: if num%3==0: print (\"\u4f60\u8f93\u5165\u7684\u6570\u5b57\u53ef\u4ee5\u6574\u9664 3\uff0c\u4f46\u4e0d\u80fd\u6574\u9664 2\") else: print (\"\u4f60\u8f93\u5165\u7684\u6570\u5b57\u4e0d\u80fd\u6574\u9664 2 \u548c 3\") \u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a \u8f93\u5165\u4e00\u4e2a\u6570\u5b57\uff1a10 \u4f60\u8f93\u5165\u7684\u6570\u5b57\u53ef\u4ee5\u6574\u9664 2\uff0c\u4f46\u4e0d\u80fd\u6574\u9664 3","title":"1.2 if \u5d4c\u5957"},{"location":"lesson2/Lesson2%20Python/#13-matchcase","text":"Python 3.10 \u589e\u52a0\u4e86 match...case \u7684\u6761\u4ef6\u5224\u65ad\uff0c\u4e0d\u9700\u8981\u518d\u4f7f\u7528\u4e00\u8fde\u4e32\u7684 if-else \u6765\u5224\u65ad\u4e86\u3002 match \u540e\u7684\u5bf9\u8c61\u4f1a\u4f9d\u6b21\u4e0e case \u540e\u7684\u5185\u5bb9\u8fdb\u884c\u5339\u914d\uff0c\u5982\u679c\u5339\u914d\u6210\u529f\uff0c\u5219\u6267\u884c\u5339\u914d\u5230\u7684\u8868\u8fbe\u5f0f\uff0c\u5426\u5219\u76f4\u63a5\u8df3\u8fc7\uff0c _ \u53ef\u4ee5\u5339\u914d\u4e00\u5207\u3002 \u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a match subject: case <pattern_1>: <action_1> case <pattern_2>: <action_2> case <pattern_3>: <action_3> case _: <action_wildcard> case _: \u7c7b\u4f3c\u4e8e C \u548c Java \u4e2d\u7684 default: \uff0c\u5f53\u5176\u4ed6 case \u90fd\u65e0\u6cd5\u5339\u914d\u65f6\uff0c\u5339\u914d\u8fd9\u6761\uff0c\u4fdd\u8bc1\u6c38\u8fdc\u4f1a\u5339\u914d\u6210\u529f\u3002 def http_error(status): match status: case 400: return \"Bad request\" case 404: return \"Not found\" case 418: return \"I'm a teapot\" case _: return \"Something's wrong with the internet\" mystatus=400 print(http_error(mystatus)) \u4ee5\u4e0a\u662f\u4e00\u4e2a\u8f93\u51fa HTTP \u72b6\u6001\u7801\u7684\u5b9e\u4f8b\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a Bad request \u4e00\u4e2a case \u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u591a\u4e2a\u5339\u914d\u6761\u4ef6\uff0c\u6761\u4ef6\u4f7f\u7528 \uff5c \u9694\u5f00\uff0c\u4f8b\u5982\uff1a ... case 401|403|404: return \"Not allowed\"","title":"1.3 match...case"},{"location":"lesson2/Lesson2%20Python/#2","text":"Python \u4e2d\u7684\u5faa\u73af\u8bed\u53e5\u6709 for \u548c while\u3002 Python \u5faa\u73af\u8bed\u53e5\u7684\u63a7\u5236\u7ed3\u6784\u56fe\u5982\u4e0b\u6240\u793a\uff1a","title":"2 \u5faa\u73af"},{"location":"lesson2/Lesson2%20Python/#21-while","text":"Python \u4e2d while \u8bed\u53e5\u7684\u4e00\u822c\u5f62\u5f0f\uff1a while \u5224\u65ad\u6761\u4ef6(condition)\uff1a \u6267\u884c\u8bed\u53e5(statements)\u2026\u2026 \u6267\u884c\u6d41\u7a0b\u56fe\u5982\u4e0b\uff1a \u540c\u6837\u9700\u8981\u6ce8\u610f\u5192\u53f7\u548c\u7f29\u8fdb\u3002\u53e6\u5916\uff0c\u5728 Python \u4e2d\u6ca1\u6709 do..while \u5faa\u73af\u3002 \u4ee5\u4e0b\u5b9e\u4f8b\u4f7f\u7528\u4e86 while \u6765\u8ba1\u7b97 1 \u5230 100 \u7684\u603b\u548c\uff1a n = 100 sum = 0 counter = 1 while counter <= n: sum = sum + counter counter += 1 print(\"1 \u5230 %d \u4e4b\u548c\u4e3a: %d\" % (n,sum)) \u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a 1 \u5230 100 \u4e4b\u548c\u4e3a: 5050","title":"2.1 while \u5faa\u73af"},{"location":"lesson2/Lesson2%20Python/#22","text":"\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u6761\u4ef6\u8868\u8fbe\u5f0f\u6c38\u8fdc\u4e0d\u4e3a false \u6765\u5b9e\u73b0\u65e0\u9650\u5faa\u73af\uff0c\u5b9e\u4f8b\u5982\u4e0b\uff1a var = 1 while var == 1 : # \u8868\u8fbe\u5f0f\u6c38\u8fdc\u4e3a true num = int(input(\"\u8f93\u5165\u4e00\u4e2a\u6570\u5b57 :\")) print (\"\u4f60\u8f93\u5165\u7684\u6570\u5b57\u662f: \", num) print (\"Good bye!\") \u6267\u884c\u4ee5\u4e0a\u811a\u672c\uff0c\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a \u8f93\u5165\u4e00\u4e2a\u6570\u5b57:5 \u4f60\u8f93\u5165\u7684\u6570\u5b57\u662f: 5 \u8f93\u5165\u4e00\u4e2a\u6570\u5b57:2 \u4f60\u8f93\u5165\u7684\u6570\u5b57\u662f: 2 \u8f93\u5165\u4e00\u4e2a\u6570\u5b57: \u65e0\u9650\u5faa\u73af\u5728\u670d\u52a1\u5668\u4e0a\u5ba2\u6237\u7aef\u7684\u5b9e\u65f6\u8bf7\u6c42\u975e\u5e38\u6709\u7528\u3002","title":"2.2\u65e0\u9650\u5faa\u73af"},{"location":"lesson2/Lesson2%20Python/#23-while-else","text":"\u5982\u679c while \u540e\u9762\u7684\u6761\u4ef6\u8bed\u53e5\u4e3a false \u65f6\uff0c\u5219\u6267\u884c else \u7684\u8bed\u53e5\u5757\u3002 \u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a while <expr>: <statement(s)> else: <additional_statement(s)> expr \u6761\u4ef6\u8bed\u53e5\u4e3a true \u5219\u6267\u884c statement(s) \u8bed\u53e5\u5757\uff0c\u5982\u679c\u4e3a false\uff0c\u5219\u6267\u884c additional_statement(s)\u3002 \u5faa\u73af\u8f93\u51fa\u6570\u5b57\uff0c\u5e76\u5224\u65ad\u5927\u5c0f\uff1a count = 0 while count < 5: print (count, \" \u5c0f\u4e8e 5\") count = count + 1 else: print (count, \" \u5927\u4e8e\u6216\u7b49\u4e8e 5\") \u6267\u884c\u4ee5\u4e0a\u811a\u672c\uff0c\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a 0 \u5c0f\u4e8e 5 1 \u5c0f\u4e8e 5 2 \u5c0f\u4e8e 5 3 \u5c0f\u4e8e 5 4 \u5c0f\u4e8e 5 5 \u5927\u4e8e\u6216\u7b49\u4e8e 5","title":"2.3 while \u5faa\u73af\u4f7f\u7528 else \u8bed\u53e5"},{"location":"lesson2/Lesson2%20Python/#24","text":"\u7c7b\u4f3c if \u8bed\u53e5\u7684\u8bed\u6cd5\uff0c\u5982\u679c\u4f60\u7684 while \u5faa\u73af\u4f53\u4e2d\u53ea\u6709\u4e00\u6761\u8bed\u53e5\uff0c\u4f60\u53ef\u4ee5\u5c06\u8be5\u8bed\u53e5\u4e0e while \u5199\u5728\u540c\u4e00\u884c\u4e2d\uff0c \u5982\u4e0b\u6240\u793a\uff1a flag = 1 while (flag): print ('CodeRaft\u6cdb\u7f16\u7a0b!') \u9700\u8981\u4e3b\u52a8\u7ec8\u6b62\u8f93\u51fa\u3002","title":"2.4 \u7b80\u5355\u8bed\u53e5\u7ec4"},{"location":"lesson2/Lesson2%20Python/#25-for","text":"Python for \u5faa\u73af\u53ef\u4ee5\u904d\u5386\u4efb\u4f55\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u5982\u4e00\u4e2a\u5217\u8868\u6216\u8005\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002 for\u5faa\u73af\u7684\u4e00\u822c\u683c\u5f0f\u5982\u4e0b\uff1a for <variable> in <sequence>: <statements> else: <statements> Python for \u5faa\u73af\u5b9e\u4f8b\uff1a sites = [\"Baidu\", \"Google\",\"Taobao\"] #\u5217\u8868\u5f62\u5f0f\u50a8\u5b58 for site in sites: print(site) \u4ee5\u4e0a\u4ee3\u7801\u6267\u884c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a Baidu Google Taobao \u4e5f\u53ef\u7528\u4e8e\u6253\u5370\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\uff1a word = 'CodeRaft' for letter in word: print(letter) \u4ee5\u4e0a\u4ee3\u7801\u6267\u884c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a C o d e R a f t \u6574\u6570\u8303\u56f4\u503c\u53ef\u4ee5\u914d\u5408 range() \u51fd\u6570\u4f7f\u7528\uff1a #1 \u5230 5 \u7684\u6240\u6709\u6570\u5b57\uff1a for number in range(1, 6): print(number) \u4ee5\u4e0a\u4ee3\u7801\u6267\u884c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a 1 2 3 4 5 \u5728 Python \u4e2d\uff0cfor...else \u8bed\u53e5\u7528\u4e8e\u5728\u5faa\u73af\u7ed3\u675f\u540e\u6267\u884c\u4e00\u6bb5\u4ee3\u7801\u3002 \u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a for item in iterable: # \u5faa\u73af\u4e3b\u4f53 else: # \u5faa\u73af\u7ed3\u675f\u540e\u6267\u884c\u7684\u4ee3\u7801 \u5f53\u5faa\u73af\u6267\u884c\u5b8c\u6bd5\uff08\u5373\u904d\u5386\u5b8c iterable \u4e2d\u7684\u6240\u6709\u5143\u7d20\uff09\u540e\uff0c\u4f1a\u6267\u884c else \u5b50\u53e5\u4e2d\u7684\u4ee3\u7801\uff0c\u5982\u679c\u5728\u5faa\u73af\u8fc7\u7a0b\u4e2d\u9047\u5230\u4e86 break \u8bed\u53e5\uff0c\u5219\u4f1a\u4e2d\u65ad\u5faa\u73af\uff0c\u6b64\u65f6\u4e0d\u4f1a\u6267\u884c else \u5b50\u53e5\u3002 for x in range(6): print(x) else: print(\"Finally finished!\") \u6267\u884c\u811a\u672c\u540e\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a 0 1 2 3 4 5 Finally finished! \u4ee5\u4e0b for \u5b9e\u4f8b\u4e2d\u4f7f\u7528\u4e86 break \u8bed\u53e5\uff0cbreak \u8bed\u53e5\u7528\u4e8e\u8df3\u51fa\u5f53\u524d\u5faa\u73af\u4f53\uff0c\u4e0d\u4f1a\u6267\u884c else \u5b50\u53e5\uff1a sites = [\"Baidu\", \"Google\",\"Taobao\"] for site in sites: if site == \"Google\": print(\"\u8c37\u6b4c\uff01\") break print(\"\u56fd\u9645\u5927\u5382\uff1a \" + site) else: print(\"\u6ca1\u6709\u5b8c\u6210\u5faa\u73af\") print(\"\u5b8c\u6210\u5faa\u73af!\") \u6267\u884c\u811a\u672c\u540e\uff0c\u5728\u5faa\u73af\u5230 \"Google\"\u65f6\u4f1a\u8df3\u51fa\u5faa\u73af\u4f53\uff1a \u56fd\u9645\u5927\u5382\uff1a Baidu \u8c37\u6b4c\uff01 \u5b8c\u6210\u5faa\u73af!","title":"2.5 for \u8bed\u53e5"},{"location":"lesson2/Lesson2%20Python/#26-range","text":"\u5982\u679c\u4f60\u9700\u8981\u904d\u5386\u6570\u5b57\u5e8f\u5217\uff0c\u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e range() \u51fd\u6570\uff0crange\u62ec\u53f7\u7684\u5185\u7684\u53c2\u6570\u4e3a\u5de6\u5f00\u53f3\u95ed\u533a\u95f4[ )\uff0c\u5206\u522b\u4e3a\u904d\u5386\u7684\u8d77\u59cb\u6570\uff0c\u7ec8\u6b62\u6570\uff0c\u4ee5\u53ca\u6b65\u957f\uff0c\u5982\u679c\u4e0d\u58f0\u660e\uff0c\u9ed8\u8ba4\u8d77\u59cb\u4e3a0\uff0c\u6b65\u957f\u4e3a1\u3002\u5b83\u4f1a\u751f\u6210\u6570\u5217\uff0c\u4f8b\u5982: >>>for i in range(5): ... print(i) ... 0 1 2 3 4 \u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 range() \u6307\u5b9a\u533a\u95f4\u7684\u503c\uff1a >>>for i in range(5,9) : print(i) 5 6 7 8 >>> \u4e5f\u53ef\u4ee5\u4f7f range() \u4ee5\u6307\u5b9a\u6570\u5b57\u5f00\u59cb\u5e76\u6307\u5b9a\u4e0d\u540c\u7684\u589e\u91cf(\u751a\u81f3\u53ef\u4ee5\u662f\u8d1f\u6570\uff0c\u53eb\u505a'\u6b65\u957f'): >>>for i in range(0, 10, 3) : print(i) 0 3 6 9 >>> \u5b9e\u73b0\u5012\u5e8f\u904d\u5386\uff1a >>>for i in range(5,1,-1): print(i) 5 4 3 2 >>> \u8d1f\u6570\uff1a >>>for i in range(-10, -100, -30) : print(i) -10 -40 -70 >>> \u7ed3\u5408 range() \u548c len() \u51fd\u6570\u4ee5\u904d\u5386\u4e00\u4e2a\u5e8f\u5217\u7684\u7d22\u5f15,\u5982\u4e0b\u6240\u793a\uff1a >>>a = ['Google', 'Baidu', 'Taobao', 'QQ'] >>> for i in range(len(a)): ... print(i, a[i]) ... 0 Google 1 Baidu 2 Taobao 3 QQ >>> \u8fd8\u53ef\u4ee5\u4f7f\u7528 range() \u51fd\u6570\u6765\u521b\u5efa\u4e00\u4e2a\u5217\u8868\uff1a >>>list(range(5)) [0, 1, 2, 3, 4] >>>","title":"2.6 range() \u51fd\u6570"},{"location":"lesson2/Lesson2%20Python/#break-continue-else","text":"break \u6267\u884c\u6d41\u7a0b\u56fe\uff1a continue \u6267\u884c\u6d41\u7a0b\u56fe\uff1a while \u8bed\u53e5\u4ee3\u7801\u6267\u884c\u8fc7\u7a0b\uff1a or \u8bed\u53e5\u4ee3\u7801\u6267\u884c\u8fc7\u7a0b\uff1a break \u8bed\u53e5\u53ef\u4ee5\u8df3\u51fa for \u548c while \u7684\u5faa\u73af\u4f53\u3002\u5982\u679c\u4f60\u4ece for \u6216 while \u5faa\u73af\u4e2d\u7ec8\u6b62\uff0c\u4efb\u4f55\u5bf9\u5e94\u7684\u5faa\u73af else \u5757\u5c06\u4e0d\u6267\u884c\u3002 continue \u8bed\u53e5\u88ab\u7528\u6765\u544a\u8bc9 Python \u8df3\u8fc7\u5f53\u524d\u5faa\u73af\u5757\u4e2d\u7684\u5269\u4f59\u8bed\u53e5\uff0c\u7136\u540e\u7ee7\u7eed\u8fdb\u884c\u4e0b\u4e00\u8f6e\u5faa\u73af\u3002 \u5b9e\u4f8b\uff1a while \u4e2d\u4f7f\u7528 break\uff1a n = 5 while n > 0: n -= 1 if n == 2: break print(n) print('\u5faa\u73af\u7ed3\u675f\u3002') \u7ed3\u679c\uff1a 4 3 \u5faa\u73af\u7ed3\u675f\u3002 while \u4e2d\u4f7f\u7528 continue\uff1a n = 5 while n > 0: n -= 1 if n == 2: continue print(n) print('\u5faa\u73af\u7ed3\u675f\u3002') \u7ed3\u679c\uff1a 4 3 1 0 \u5faa\u73af\u7ed3\u675f\u3002 \u5faa\u73af\u8bed\u53e5\u53ef\u4ee5\u6709 else \u5b50\u53e5\uff0c\u5b83\u5728\u7a77\u5c3d\u5217\u8868(\u4ee5for\u5faa\u73af)\u6216\u6761\u4ef6\u53d8\u4e3a false (\u4ee5while\u5faa\u73af)\u5bfc\u81f4\u5faa\u73af\u7ec8\u6b62\u65f6\u88ab\u6267\u884c\uff0c\u4f46\u5faa\u73af\u88ab break \u7ec8\u6b62\u65f6\u4e0d\u6267\u884c\u3002 \u5982\u4e0b\u5b9e\u4f8b\u7528\u4e8e\u67e5\u8be2\u8d28\u6570\u7684\u5faa\u73af\u4f8b\u5b50\uff1a for n in range(2, 10): for x in range(2, n): if n % x == 0: print(n, '\u7b49\u4e8e', x, '*', n//x) break else: # \u5faa\u73af\u4e2d\u6ca1\u6709\u627e\u5230\u5143\u7d20 print(n, ' \u662f\u8d28\u6570') \u7ed3\u679c\uff1a 2 \u662f\u8d28\u6570 3 \u662f\u8d28\u6570 4 \u7b49\u4e8e 2 * 2 5 \u662f\u8d28\u6570 6 \u7b49\u4e8e 2 * 3 7 \u662f\u8d28\u6570 8 \u7b49\u4e8e 2 * 4 9 \u7b49\u4e8e 3 * 3","title":"break \u548c continue \u8bed\u53e5\u53ca\u5faa\u73af\u4e2d\u7684 else \u5b50\u53e5"},{"location":"lesson2/Lesson2%20Python/#27-pass","text":"Python pass\u662f\u7a7a\u8bed\u53e5\uff0c\u662f\u4e3a\u4e86\u4fdd\u6301\u7a0b\u5e8f\u7ed3\u6784\u7684\u5b8c\u6574\u6027\u3002 pass \u4e0d\u505a\u4efb\u4f55\u4e8b\u60c5\uff0c\u4e00\u822c\u7528\u505a\u5360\u4f4d\u8bed\u53e5\uff0c\u5982\u4e0b\u5b9e\u4f8b >>>while True: ... pass # \u7b49\u5f85\u952e\u76d8\u4e2d\u65ad \u4ee5\u4e0b\u5b9e\u4f8b\u5728\u5b57\u6bcd\u4e3a o \u65f6 \u6267\u884c pass \u8bed\u53e5\u5757\uff1a for letter in 'CodeRaft': if letter == 'f': pass print('\u6267\u884c pass \u5757') print('\u5f53\u524d\u5b57\u6bcd :', letter) print(\"Good bye!\") \u7ed3\u679c\uff1a \u5f53\u524d\u5b57\u6bcd : C \u5f53\u524d\u5b57\u6bcd : o \u5f53\u524d\u5b57\u6bcd : d \u5f53\u524d\u5b57\u6bcd : e \u5f53\u524d\u5b57\u6bcd : R \u5f53\u524d\u5b57\u6bcd : a \u6267\u884c pass \u5757 \u5f53\u524d\u5b57\u6bcd : f \u5f53\u524d\u5b57\u6bcd : t Good bye!","title":"2.7 pass \u8bed\u53e5"},{"location":"lesson2/Lesson2%20Python/#_2","text":"","title":"\u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson2/Lesson2%20Python/#1_1","text":"\u9898\u76ee\u63cf\u8ff0\uff1a \u8bbe\u8ba1\u4e00\u4e2a\u7b80\u5355\u7684\u9910\u5385\u70b9\u5355\u7a0b\u5e8f\uff0c\u7a0b\u5e8f\u80fd\u591f\u8fde\u7eed\u63a5\u53d7\u591a\u4e2a\u987e\u5ba2\u7684\u70b9\u5355\u3002\u7a0b\u5e8f\u63d0\u524d\u77e5\u9053\u6c49\u5821\u3001\u85af\u6761\u548c\u53ef\u4e50\u7684\u4ef7\u683c\u3002\u6bcf\u4f4d\u987e\u5ba2\u53ef\u4ee5\u9009\u62e9\u70b9\u6c49\u5821\u3001\u85af\u6761\u548c\u53ef\u4e50\u7684\u6570\u91cf\uff0c\u7a0b\u5e8f\u5c06\u8f93\u51fa\u6bcf\u4f4d\u987e\u5ba2\u7684\u70b9\u5355\u5185\u5bb9\u548c\u603b\u4ef7\uff0c\u6700\u540e\u8f93\u51fa\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d\u3002","title":"1.\u70b9\u9910\u7a0b\u5e8f"},{"location":"lesson2/Lesson2%20Python/#_3","text":"\u7a0b\u5e8f\u5f00\u59cb\u65f6\uff0c\u5b9a\u4e49\u6c49\u5821\u3001\u85af\u6761\u548c\u53ef\u4e50\u7684\u4ef7\u683c\u5e38\u91cf\u3002 \u4f7f\u7528\u5faa\u73af\u8bed\u53e5\u8fde\u7eed\u63a5\u53d7\u987e\u5ba2\u7684\u70b9\u5355\uff0c\u5728\u5f00\u59cb\u8ba1\u7b97\u524d\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u4e13\u7528\u7684\u53d8\u91cf\u83b7\u53d6\u7528\u6237\u610f\u56fe\u662f\u7ee7\u7eed\u70b9\u5355\u8fd8\u662f\u9000\u51fa\uff08\u4f8b\uff1a\u8f93\u5165-1\u9000\u51fa\u5e76\u8ba1\u7b97\u603b\u9500\u552e\u989d\uff0c\u5176\u4ed6\u6570\u5b57\u5219\u8fdb\u884c\u4e0b\u4e00\u8f6e\u70b9\u5355\uff09\u3002 \u6bcf\u6b21\u63a5\u53d7\u987e\u5ba2\u7684\u70b9\u5355\u540e\uff0c\u8f93\u51fa\u987e\u5ba2\u7684\u70b9\u5355\u5185\u5bb9\u548c\u672c\u6b21\u70b9\u5355\u7684\u603b\u4ef7\u3002 \u7d2f\u52a0\u6bcf\u4f4d\u987e\u5ba2\u7684\u70b9\u5355\u603b\u4ef7\u5230\u603b\u9500\u552e\u989d\u4e2d\u3002 \u9000\u51fa\u70b9\u5355\u540e\uff0c\u8f93\u51fa\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d\u3002","title":"\u8981\u6c42\uff1a"},{"location":"lesson2/Lesson2%20Python/#_4","text":"\u5047\u8bbe\u64cd\u4f5c\u6d41\u7a0b\u5982\u4e0b\uff1a \u7b2c\u4e00\u4f4d\u987e\u5ba2\u70b9\u6c49\u5821 2\uff0c\u85af\u6761 1\uff0c\u53ef\u4e50 3\uff1b \u7b2c\u4e8c\u4f4d\u987e\u5ba2\u70b9\u6c49\u5821 1\uff0c\u85af\u6761 2\uff0c\u53ef\u4e50 2\uff1b \u9009\u62e9\u9000\u51fa\u7a0b\u5e8f\u3002 \u53c2\u8003\u793a\u4f8b\uff1a \u8f93\u5165-1\u9000\u51fa\u5e76\u8ba1\u7b97\u603b\u9500\u552e\u989d\uff0c\u5176\u4ed6\u6570\u5b57\u7ee7\u7eed\u70b9\u5355: 1 \u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf: 2 \u8bf7\u8f93\u5165\u85af\u6761\u7684\u6570\u91cf: 1 \u8bf7\u8f93\u5165\u53ef\u4e50\u7684\u6570\u91cf: 3 \u987e\u5ba2\u70b9\u5355\u5185\u5bb9: \u6c49\u5821 2 \u4e2a, \u85af\u6761 1 \u4efd, \u53ef\u4e50 3 \u74f6 \u672c\u6b21\u70b9\u5355\u603b\u4ef7: 44.50 \u5143 \u8f93\u5165-1\u9000\u51fa\u5e76\u8ba1\u7b97\u603b\u9500\u552e\u989d\uff0c\u5176\u4ed6\u6570\u5b57\u7ee7\u7eed\u70b9\u5355: 1 \u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf: 1 \u8bf7\u8f93\u5165\u85af\u6761\u7684\u6570\u91cf: 2 \u8bf7\u8f93\u5165\u53ef\u4e50\u7684\u6570\u91cf: 2 \u987e\u5ba2\u70b9\u5355\u5185\u5bb9: \u6c49\u5821 1 \u4e2a, \u85af\u6761 2 \u4efd, \u53ef\u4e50 2 \u74f6 \u672c\u6b21\u70b9\u5355\u603b\u4ef7: 33.50 \u5143 \u8f93\u5165-1\u9000\u51fa\u5e76\u8ba1\u7b97\u603b\u9500\u552e\u989d\uff0c\u5176\u4ed6\u6570\u5b57\u7ee7\u7eed\u70b9\u5355: -1 \u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d: 78.00 \u5143 \u53c2\u8003\u4ee3\u7801\uff1a # \u9910\u5385\u70b9\u5355\u7a0b\u5e8f # \u5b9a\u4e49\u5546\u54c1\u7684\u4ef7\u683c\u5e38\u91cf PRICE_BURGER = 12.5 # \u6c49\u5821\u7684\u4ef7\u683c PRICE_FRIES = 6 # \u85af\u6761\u7684\u4ef7\u683c PRICE_COKE = 4.5 # \u53ef\u4e50\u7684\u4ef7\u683c # \u521d\u59cb\u5316\u603b\u9500\u552e\u989d total_sales = 0.0 while True: # \u63d0\u793a\u7528\u6237\u8f93\u5165\u662f\u5426\u7ee7\u7eed\u70b9\u5355\uff0c-1\u8868\u793a\u9000\u51fa user_input = input(\"\u8f93\u5165-1\u9000\u51fa\u5e76\u8ba1\u7b97\u603b\u9500\u552e\u989d\uff0c\u5176\u4ed6\u6570\u5b57\u7ee7\u7eed\u70b9\u5355: \") if user_input == '-1': break # \u63a5\u53d7\u987e\u5ba2\u7684\u70b9\u5355 try: num_burgers = int(input(\"\u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf: \")) num_fries = int(input(\"\u8bf7\u8f93\u5165\u85af\u6761\u7684\u6570\u91cf: \")) num_cokes = int(input(\"\u8bf7\u8f93\u5165\u53ef\u4e50\u7684\u6570\u91cf: \")) except ValueError: print(\"\u8bf7\u8f93\u5165\u6709\u6548\u7684\u6570\u91cf\u3002\") continue # \u8ba1\u7b97\u5f53\u524d\u987e\u5ba2\u7684\u70b9\u5355\u603b\u4ef7 total_price = num_burgers * PRICE_BURGER + num_fries * PRICE_FRIES + num_cokes * PRICE_COKE # \u8f93\u51fa\u5f53\u524d\u987e\u5ba2\u7684\u70b9\u5355\u5185\u5bb9\u548c\u603b\u4ef7 print(f\"\u987e\u5ba2\u70b9\u5355\u5185\u5bb9: \u6c49\u5821 {num_burgers} \u4e2a, \u85af\u6761 {num_fries} \u4efd, \u53ef\u4e50 {num_cokes} \u74f6\") print(f\"\u672c\u6b21\u70b9\u5355\u603b\u4ef7: {total_price:.2f} \u5143\") # \u5c06\u672c\u6b21\u70b9\u5355\u603b\u4ef7\u7d2f\u52a0\u5230\u603b\u9500\u552e\u989d\u4e2d total_sales += total_price # \u8f93\u51fa\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d print(f\"\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d: {total_sales:.2f} \u5143\")","title":"\u793a\u4f8b\u8fd0\u884c\uff1a"},{"location":"lesson2/Lesson2%20Python/#2python","text":"\u9898\u76ee\u63cf\u8ff0 \uff1a \u7f16\u5199\u4e00\u4e2aPython\u7a0b\u5e8f\u6765\u5b9e\u73b0\u4e00\u4e2a\u731c\u6570\u5b57\u6e38\u620f\u3002\u7a0b\u5e8f\u5c06\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u57281\u5230100\u4e4b\u95f4\u7684\u6570\u5b57\uff0c\u7528\u6237\u9700\u8981\u901a\u8fc7\u8f93\u5165\u6765\u731c\u8fd9\u4e2a\u6570\u5b57\uff0c\u7a0b\u5e8f\u6839\u636e\u7528\u6237\u7684\u731c\u6d4b\u7ed9\u51fa\u63d0\u793a\uff08\u731c\u9ad8\u4e86\u3001\u731c\u4f4e\u4e86\u6216\u731c\u5bf9\u4e86\uff09\uff0c\u76f4\u5230\u7528\u6237\u731c\u5bf9\u4e3a\u6b62\u3002 \u5177\u4f53\u8981\u6c42 \uff1a \u7a0b\u5e8f\u4e00\u5f00\u59cb\u5e94\u968f\u673a\u751f\u6210\u4e00\u4e2a1\u5230100\u4e4b\u95f4\u7684\u6570\u5b57\u3002 \u7528\u6237\u8f93\u5165\u731c\u6d4b\u7684\u6570\u5b57\uff0c\u7a0b\u5e8f\u6839\u636e\u7528\u6237\u7684\u8f93\u5165\u7ed9\u51fa\u76f8\u5e94\u7684\u63d0\u793a\u3002 \u5982\u679c\u7528\u6237\u731c\u5bf9\u4e86\uff0c\u663e\u793a\u731c\u5bf9\u7684\u4fe1\u606f\u5e76\u7ed3\u675f\u6e38\u620f\u3002 \u5982\u679c\u7528\u6237\u731c\u9519\uff0c\u6839\u636e\u731c\u6d4b\u7684\u6570\u5b57\u662f\u9ad8\u4e8e\u8fd8\u662f\u4f4e\u4e8e\u76ee\u6807\u6570\u5b57\uff0c\u7ed9\u51fa\u76f8\u5e94\u7684\u63d0\u793a\uff0c\u5e76\u8ba9\u7528\u6237\u7ee7\u7eed\u731c\u3002 \u4f7f\u7528\u5faa\u73af\u786e\u4fdd\u6e38\u620f\u53ef\u4ee5\u7ee7\u7eed\u8fdb\u884c\uff0c\u76f4\u5230\u7528\u6237\u731c\u5bf9\u4e3a\u6b62\u3002 \u53c2\u8003\u793a\u4f8b\uff1a \u6b22\u8fce\u53c2\u52a0\u731c\u6570\u5b57\u6e38\u620f\uff01\u8bf7\u731c\u4e00\u4e2a1\u5230100\u4e4b\u95f4\u7684\u6570\u5b57\u3002 \u8bf7\u8f93\u5165\u4f60\u7684\u731c\u6d4b\uff1a50 \u592a\u4f4e\u4e86\uff0c\u518d\u8bd5\u8bd5\u770b\uff01 \u8bf7\u8f93\u5165\u4f60\u7684\u731c\u6d4b\uff1a75 \u592a\u9ad8\u4e86\uff0c\u518d\u8bd5\u8bd5\u770b\uff01 \u8bf7\u8f93\u5165\u4f60\u7684\u731c\u6d4b\uff1a62 \u606d\u559c\u4f60\uff0c\u731c\u5bf9\u4e86\uff01\u6b63\u786e\u7b54\u6848\u5c31\u662f62\u3002 \u6e38\u620f\u7ed3\u675f\u3002\u8c22\u8c22\u53c2\u4e0e\uff01 \u53c2\u8003\u4ee3\u7801\uff1a import random # \u751f\u6210\u4e00\u4e2a1\u5230100\u4e4b\u95f4\u7684\u968f\u673a\u6570 target_number = random.randint(1, 100) guess = None # \u6e38\u620f\u6b22\u8fce\u4fe1\u606f print(\"\u6b22\u8fce\u53c2\u52a0\u731c\u6570\u5b57\u6e38\u620f\uff01\u8bf7\u731c\u4e00\u4e2a1\u5230100\u4e4b\u95f4\u7684\u6570\u5b57\u3002\") # \u5f00\u59cb\u731c\u6570\u5b57\u7684\u5faa\u73af while guess != target_number: # \u83b7\u53d6\u7528\u6237\u8f93\u5165 guess = int(input(\"\u8bf7\u8f93\u5165\u4f60\u7684\u731c\u6d4b\uff1a\")) # \u5224\u65ad\u731c\u6d4b\u7ed3\u679c if guess < target_number: print(\"\u592a\u4f4e\u4e86\uff0c\u518d\u8bd5\u8bd5\u770b\uff01\") elif guess > target_number: print(\"\u592a\u9ad8\u4e86\uff0c\u518d\u8bd5\u8bd5\u770b\uff01\") else: print(f\"\u606d\u559c\u4f60\uff0c\u731c\u5bf9\u4e86\uff01\u6b63\u786e\u7b54\u6848\u5c31\u662f{target_number}\u3002\") # \u7ed3\u675f\u6e38\u620f print(\"\u6e38\u620f\u7ed3\u675f\u3002\u8c22\u8c22\u53c2\u4e0e\uff01\")","title":"2.Python \u731c\u6570\u5b57\u6e38\u620f"},{"location":"lesson3/Lesson3%20C%2B%2B/","text":"Lesson 3 C++ \u7684\u81ea\u5b9a\u4e49\u51fd\u6570\u4e0e\u53c2\u6570 \u76ee\u5f55 1. C++\u51fd\u6570\u7684\u5b9a\u4e49\u548c\u4f7f\u7528 1.1 \u51fd\u6570\u7684\u5b9a\u4e49\u8bed\u6cd5 1.2 \u8fd4\u56de\u7c7b\u578b 1.3 \u51fd\u6570\u540d\u547d\u540d\u89c4\u5219 2. \u5f62\u5f0f\u53c2\u6570\u4e0e\u5b9e\u9645\u53c2\u6570 2.1 \u5f62\u5f0f\u53c2\u6570\uff08Formal Parameters\uff09 2.2 \u5b9e\u9645\u53c2\u6570\uff08Actual Arguments\uff09 2.3 \u603b\u7ed3 3. \u51fd\u6570\u7684\u5b9a\u4e49\u548c\u8c03\u7528\u793a\u4f8b 3.1 \u5b9a\u4e49\u4e00\u4e2a\u4e0d\u8fd4\u56de\u503c\u7684\u51fd\u6570 3.2 \u5b9a\u4e49\u4e00\u4e2a\u5e26\u53c2\u6570\u7684\u51fd\u6570 3.3 \u5e26\u8fd4\u56de\u503c\u7684\u51fd\u6570 4. \u53c2\u6570\u4f20\u9012\u65b9\u5f0f 4.1 \u503c\u4f20\u9012\uff08Pass-by-Value\uff09 4.2 \u5f15\u7528\u4f20\u9012\uff08Pass-by-Reference\uff09 5. \u8bfe\u540e\u7ec3\u4e60 5.1 \u51fd\u6570\u7684\u5b9a\u4e49 5.2 \u5f62\u5f0f\u53c2\u6570\u4e0e\u5b9e\u9645\u53c2\u6570\u5224\u65ad\u9898 1. C++\u51fd\u6570\u7684\u5b9a\u4e49\u548c\u4f7f\u7528 \u51fd\u6570\u662fC++\u7f16\u7a0b\u7684\u57fa\u7840\u6784\u5efa\u6a21\u5757\u4e4b\u4e00\uff0c\u5b83\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5c06\u590d\u6742\u7684\u7a0b\u5e8f\u5212\u5206\u4e3a\u66f4\u5c0f\u7684\u3001\u72ec\u7acb\u7684\u90e8\u5206\uff0c\u6bcf\u4e2a\u90e8\u5206\u5b8c\u6210\u7279\u5b9a\u7684\u4efb\u52a1\u3002\u8fd9\u6837\u4e0d\u4ec5\u4f7f\u4ee3\u7801\u66f4\u52a0\u6e05\u6670\u548c\u6613\u4e8e\u7ef4\u62a4\uff0c\u8fd8\u589e\u5f3a\u4e86\u4ee3\u7801\u7684\u53ef\u91cd\u7528\u6027\u3002 1.1 \u51fd\u6570\u7684\u5b9a\u4e49\u8bed\u6cd5 \u5728C++\u4e2d\uff0c\u51fd\u6570\u7684\u5b9a\u4e49\u901a\u5e38\u9075\u5faa\u4ee5\u4e0b\u7ed3\u6784\uff1a \u8fd4\u56de\u7c7b\u578b \u51fd\u6570\u540d(\u53c2\u6570\u5217\u8868) { // \u51fd\u6570\u4f53 // \u5728\u8fd9\u91cc\u7f16\u5199\u51fd\u6570\u6267\u884c\u7684\u5177\u4f53\u64cd\u4f5c // \u51fd\u6570\u53ef\u4ee5\u4f7f\u7528\u4f20\u5165\u7684\u53c2\u6570\uff0c\u5e76\u4e14\u53ef\u80fd\u4f1a\u8fd4\u56de\u4e00\u4e2a\u503c } \u8fd4\u56de\u7c7b\u578b\uff08Return Type\uff09\uff1a \u8fd9\u662f\u51fd\u6570\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u3002\u5982\u679c\u51fd\u6570\u4e0d\u9700\u8981\u8fd4\u56de\u4efb\u4f55\u503c\uff0c\u5c31\u4f7f\u7528 void \u4f5c\u4e3a\u8fd4\u56de\u7c7b\u578b\u3002\u5e38\u89c1\u7684\u8fd4\u56de\u7c7b\u578b\u6709 int \u3001 float \u3001 double \u3001 char \u548c string \u7b49\u3002 \u51fd\u6570\u540d\uff08Function Name\uff09\uff1a \u51fd\u6570\u7684\u540d\u79f0\uff0c\u7528\u6765\u5728\u7a0b\u5e8f\u4e2d\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u3002\u51fd\u6570\u540d\u5e94\u5c3d\u91cf\u7b80\u6d01\u660e\u4e86\uff0c\u5e76\u80fd\u53cd\u6620\u51fd\u6570\u7684\u529f\u80fd\u3002 \u53c2\u6570\u5217\u8868\uff08Parameter List\uff09\uff1a \u8fd9\u662f\u51fd\u6570\u63a5\u6536\u7684\u8f93\u5165\u6570\u636e\uff0c\u591a\u4e2a\u53c2\u6570\u7528\u9017\u53f7\u5206\u9694\u3002\u5982\u679c\u51fd\u6570\u4e0d\u9700\u8981\u4efb\u4f55\u8f93\u5165\u53c2\u6570\uff0c\u53c2\u6570\u5217\u8868\u53ef\u4ee5\u4e3a\u7a7a\u3002 \u51fd\u6570\u4f53\uff08Function Body\uff09\uff1a \u5305\u542b\u4e86\u51fd\u6570\u6267\u884c\u7684\u5177\u4f53\u64cd\u4f5c\u3002\u8fd9\u90e8\u5206\u4ee3\u7801\u5b9e\u73b0\u4e86\u51fd\u6570\u7684\u6838\u5fc3\u903b\u8f91\uff0c\u662f\u51fd\u6570\u7684\u4e3b\u4f53\u3002 \u793a\u4f8b\uff1a int add(int a, int b) { return a + b; } \u5728\u4e0a\u8ff0\u793a\u4f8b\u4e2d\uff0c add \u51fd\u6570\u63a5\u6536\u4e24\u4e2a\u6574\u6570\u4f5c\u4e3a\u53c2\u6570\uff0c\u8fd4\u56de\u5b83\u4eec\u7684\u548c\u3002 1.2 \u8fd4\u56de\u7c7b\u578b \u8fd4\u56de\u7c7b\u578b\u51b3\u5b9a\u4e86\u51fd\u6570\u8fd4\u56de\u7ed9\u8c03\u7528\u8005\u7684\u6570\u636e\u7c7b\u578b\u3002\u4f8b\u5982\uff0c\u5982\u679c\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u8ba1\u7b97\u4e24\u4e2a\u6570\u5b57\u7684\u4e58\u79ef\uff0c\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\u53ef\u4ee5\u662f int \u3001 float \u7b49\u3002\u51fd\u6570\u53ef\u4ee5\u8fd4\u56de\u4efb\u4f55\u6570\u636e\u7c7b\u578b\u7684\u503c\uff0c\u5305\u62ec\u81ea\u5b9a\u4e49\u7684\u7c7b\u578b\u3002 \u5982\u679c\u4e00\u4e2a\u51fd\u6570\u4e0d\u9700\u8981\u8fd4\u56de\u4efb\u4f55\u503c\uff0c\u6bd4\u5982\u5b83\u4ec5\u7528\u4e8e\u6253\u5370\u4fe1\u606f\uff0c\u5219\u8fd4\u56de\u7c7b\u578b\u4e3a void \u3002 \u793a\u4f8b\uff1a // \u8fd4\u56de\u4e00\u4e2a\u6574\u6570 int multiply(int a, int b) { return a * b; } // \u4e0d\u8fd4\u56de\u503c void printHello() { std::cout << \"Hello, World!\" << std::endl; } 1.3 \u51fd\u6570\u540d\u547d\u540d\u89c4\u5219 \u51fd\u6570\u540d\u7528\u4e8e\u6807\u8bc6\u548c\u8c03\u7528\u51fd\u6570\u3002\u9009\u62e9\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u51fd\u6570\u540d\u53ef\u4ee5\u8ba9\u4ee3\u7801\u66f4\u6613\u8bfb\u548c\u7406\u89e3\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u547d\u540d\u89c4\u5219\u548c\u5efa\u8bae\uff1a \u4f7f\u7528\u6709\u610f\u4e49\u7684\u540d\u79f0\uff1a \u51fd\u6570\u540d\u5e94\u80fd\u53cd\u6620\u51fd\u6570\u7684\u529f\u80fd\u3002\u4f8b\u5982\uff0c calculateSum \u6bd4 func1 \u66f4\u5177\u63cf\u8ff0\u6027\u3002 \u9075\u5faa\u547d\u540d\u89c4\u8303\uff1a \u901a\u5e38\u4f7f\u7528\u5c0f\u5199\u5b57\u6bcd\u548c\u9a7c\u5cf0\u5f0f\u547d\u540d\u6cd5\uff08camelCase\uff09\uff0c\u5982 getUserInput \u3002 \u907f\u514d\u4f7f\u7528\u4fdd\u7559\u5b57\uff1a \u4e0d\u8981\u4f7f\u7528C++\u7684\u4fdd\u7559\u5173\u952e\u5b57\u4f5c\u4e3a\u51fd\u6570\u540d\uff0c\u5982 int \u3001 return \u7b49\u3002 \u7b80\u6d01\u660e\u4e86\uff1a \u51fd\u6570\u540d\u5e94\u7b80\u77ed\u660e\u4e86\uff0c\u4fbf\u4e8e\u8bb0\u5fc6\u548c\u8c03\u7528\u3002 \u793a\u4f8b\uff1a // \u5408\u9002\u7684\u51fd\u6570\u540d double calculateArea(double radius); // \u4e0d\u63a8\u8350\u7684\u51fd\u6570\u540d double func1(double a); 2. \u5f62\u5f0f\u53c2\u6570\u4e0e\u5b9e\u9645\u53c2\u6570 \u5728C++\u4e2d\uff0c\u51fd\u6570\u53ef\u4ee5\u63a5\u6536\u5916\u90e8\u8f93\u5165\uff0c\u8fd9\u4e9b\u8f93\u5165\u88ab\u79f0\u4e3a\u53c2\u6570\u3002\u53c2\u6570\u5206\u4e3a\u5f62\u5f0f\u53c2\u6570\uff08\u5f62\u53c2\uff09\u548c\u5b9e\u9645\u53c2\u6570\uff08\u5b9e\u53c2\uff09\u3002\u7406\u89e3\u8fd9\u4e24\u8005\u7684\u533a\u522b\u5bf9\u4e8e\u6b63\u786e\u4f7f\u7528\u51fd\u6570\u975e\u5e38\u91cd\u8981\u3002 2.1 \u5f62\u5f0f\u53c2\u6570\uff08Formal Parameters\uff09 \u5f62\u5f0f\u53c2\u6570\u662f\u5728\u51fd\u6570\u5b9a\u4e49\u65f6\u58f0\u660e\u7684\u53c2\u6570\uff0c\u5b83\u4eec\u4f5c\u4e3a\u51fd\u6570\u7684\u4e00\u90e8\u5206\uff0c\u7528\u6765\u63a5\u6536\u8c03\u7528\u51fd\u6570\u65f6\u4f20\u9012\u7684\u5b9e\u9645\u53c2\u6570\u7684\u503c\u3002\u5f62\u5f0f\u53c2\u6570\u5728\u51fd\u6570\u5b9a\u4e49\u7684\u62ec\u53f7\u5185\u90e8\u58f0\u660e\uff0c\u5e76\u6307\u5b9a\u5b83\u4eec\u7684\u7c7b\u578b\u548c\u540d\u79f0\u3002 \u793a\u4f8b\uff1a void calculateSum(int a, int b) { int sum = a + b; std::cout << \"Sum: \" << sum << std::endl; } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c calculateSum \u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u63a5\u53d7\u4e24\u4e2a\u5f62\u5f0f\u53c2\u6570 a \u548c b \uff0c\u5b83\u4eec\u7684\u7c7b\u578b\u90fd\u662f int \u3002\u8fd9\u4e9b\u5f62\u5f0f\u53c2\u6570\u5728\u51fd\u6570\u88ab\u8c03\u7528\u65f6\u7528\u4e8e\u63a5\u6536\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u5b9e\u9645\u53c2\u6570\u7684\u503c\u3002 2.2 \u5b9e\u9645\u53c2\u6570\uff08Actual Arguments\uff09 \u5b9e\u9645\u53c2\u6570\u662f\u5728\u8c03\u7528\u51fd\u6570\u65f6\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u503c\u6216\u8005\u8868\u8fbe\u5f0f\u3002\u5b83\u4eec\u662f\u771f\u6b63\u7528\u6765\u6267\u884c\u51fd\u6570\u64cd\u4f5c\u7684\u6570\u636e\u3002\u5728\u51fd\u6570\u8c03\u7528\u65f6\uff0c\u5b9e\u9645\u53c2\u6570\u88ab\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u5f62\u5f0f\u53c2\u6570\u3002 \u793a\u4f8b\uff1a #include <iostream> void calculateSum(int a, int b) { int sum = a + b; std::cout << \"Sum: \" << sum << std::endl; } int main() { int num1 = 10; int num2 = 20; // \u8c03\u7528\u51fd\u6570\u5e76\u4f20\u9012\u5b9e\u9645\u53c2\u6570 calculateSum(num1, num2); return 0; } \u89e3\u91ca\uff1a - \u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c num1 \u548c num2 \u662f main \u51fd\u6570\u4e2d\u7684\u4e24\u4e2a\u53d8\u91cf\uff0c\u5b83\u4eec\u4f5c\u4e3a\u5b9e\u9645\u53c2\u6570\u4f20\u9012\u7ed9 calculateSum \u51fd\u6570\u3002 - \u5728\u51fd\u6570\u8c03\u7528 calculateSum(num1, num2); \u4e2d\uff0c num1 \u548c num2 \u5206\u522b\u4f20\u9012\u7ed9 a \u548c b \u5f62\u5f0f\u53c2\u6570\uff0c\u8fdb\u800c\u5728\u51fd\u6570\u5185\u90e8\u8ba1\u7b97\u5b83\u4eec\u7684\u548c\u3002 2.3 \u603b\u7ed3 \u5f62\u5f0f\u53c2\u6570 \u662f\u5728\u51fd\u6570\u5b9a\u4e49\u4e2d\u58f0\u660e\u7684\u53d8\u91cf\uff0c\u5b83\u4eec\u7528\u4e8e\u63a5\u6536\u5b9e\u9645\u53c2\u6570\u7684\u503c\u3002 \u5b9e\u9645\u53c2\u6570 \u662f\u5728\u51fd\u6570\u8c03\u7528\u65f6\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u503c\u6216\u8868\u8fbe\u5f0f\uff0c\u5b83\u4eec\u88ab\u4f20\u9012\u7ed9\u5f62\u5f0f\u53c2\u6570\uff0c\u7528\u4e8e\u51fd\u6570\u6267\u884c\u3002 \u7406\u89e3\u5f62\u5f0f\u53c2\u6570\u548c\u5b9e\u9645\u53c2\u6570\u7684\u533a\u522b\uff0c\u6709\u52a9\u4e8e\u6b63\u786e\u4f20\u9012\u6570\u636e\u5230\u51fd\u6570\uff0c\u5e76\u786e\u4fdd\u51fd\u6570\u80fd\u591f\u6b63\u786e\u5904\u7406\u8f93\u5165\u3002 3. \u51fd\u6570\u7684\u5b9a\u4e49\u548c\u8c03\u7528\u793a\u4f8b 3.1 \u5b9a\u4e49\u4e00\u4e2a\u4e0d\u8fd4\u56de\u503c\u7684\u51fd\u6570 \u5728C++\u4e2d\uff0c\u51fd\u6570\u4e0d\u4e00\u5b9a\u9700\u8981\u8fd4\u56de\u503c\u3002\u5f53\u4e00\u4e2a\u51fd\u6570\u6267\u884c\u67d0\u4e9b\u64cd\u4f5c\uff0c\u4f46\u4e0d\u9700\u8981\u8fd4\u56de\u4efb\u4f55\u503c\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 void \u4f5c\u4e3a\u8fd4\u56de\u7c7b\u578b\u3002 \u793a\u4f8b\uff1a #include <iostream> using namespace std; // \u5b9a\u4e49\u4e00\u4e2a\u4e0d\u8fd4\u56de\u503c\u7684\u51fd\u6570 void printHello() { // \u6253\u5370\u4e00\u6761\u6d88\u606f cout << \"Hello, World!\" << endl; } int main() { // \u8c03\u7528 printHello \u51fd\u6570 printHello(); return 0; } \u89e3\u91ca\uff1a - printHello \u51fd\u6570\u6ca1\u6709\u53c2\u6570\uff08\u7a7a\u62ec\u53f7\u8868\u793a\u6ca1\u6709\u53c2\u6570\uff09\uff0c\u8fd4\u56de\u7c7b\u578b\u662f void \uff0c\u8868\u793a\u5b83\u4e0d\u8fd4\u56de\u4efb\u4f55\u503c\u3002 - \u51fd\u6570\u4f53\u91cc\u53ea\u6709\u4e00\u884c\u4ee3\u7801\uff0c\u7528\u6765\u6253\u5370 \"Hello, World!\"\u3002 - \u5728 main \u51fd\u6570\u4e2d\uff0c\u901a\u8fc7 printHello(); \u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\uff0c\u51fd\u6570\u4f1a\u6267\u884c\u5176\u4ee3\u7801\u3002 3.2 \u5b9a\u4e49\u4e00\u4e2a\u5e26\u53c2\u6570\u7684\u51fd\u6570 \u5e26\u53c2\u6570\u7684\u51fd\u6570\u80fd\u591f\u63a5\u6536\u5916\u90e8\u4f20\u9012\u7684\u6570\u636e\uff0c\u4ee5\u5b8c\u6210\u7279\u5b9a\u7684\u4efb\u52a1\u3002 3.2.1 \u5e26\u4e00\u4e2a\u53c2\u6570\u7684\u51fd\u6570 \u793a\u4f8b\uff1a #include <iostream> using namespace std; // \u5b9a\u4e49\u4e00\u4e2a\u5e26\u6709\u4e00\u4e2a\u53c2\u6570\u7684\u51fd\u6570 void printNumber(int num) { cout << \"The number is: \" << num << endl; } int main() { int myNumber = 10; // \u8c03\u7528 printNumber \u51fd\u6570\u5e76\u4f20\u9012\u53c2\u6570 printNumber(myNumber); return 0; } \u89e3\u91ca\uff1a - printNumber \u51fd\u6570\u63a5\u6536\u4e00\u4e2a int \u7c7b\u578b\u7684\u53c2\u6570 num \uff0c\u7136\u540e\u6253\u5370\u8fd9\u4e2a\u6570\u5b57\u3002 - \u5728 main \u51fd\u6570\u4e2d\uff0c\u901a\u8fc7 printNumber \u8c03\u7528\u51fd\u6570\uff0c\u5e76\u4f20\u9012\u53d8\u91cf myNumber \u4f5c\u4e3a\u53c2\u6570\u3002 3.2.2 \u5e26\u591a\u4e2a\u53c2\u6570\u7684\u51fd\u6570 \u51fd\u6570\u4e5f\u53ef\u4ee5\u63a5\u53d7\u591a\u4e2a\u53c2\u6570\uff0c\u5e76\u4f7f\u7528\u8fd9\u4e9b\u53c2\u6570\u6765\u6267\u884c\u66f4\u590d\u6742\u7684\u64cd\u4f5c\u3002 \u793a\u4f8b\uff1a #include <iostream> using namespace std; // \u5b9a\u4e49\u4e00\u4e2a\u5e26\u6709\u4e24\u4e2a\u53c2\u6570\u7684\u51fd\u6570 void printSum(int a, int b) { int sum = a + b; cout << \"Sum: \" << sum << endl; } int main() { int num1 = 10; int num2 = 20; // \u8c03\u7528 printSum \u51fd\u6570\u5e76\u4f20\u9012\u53c2\u6570 printSum(num1, num2); return 0; } \u89e3\u91ca\uff1a - printSum \u51fd\u6570\u63a5\u6536\u4e24\u4e2a int \u7c7b\u578b\u7684\u53c2\u6570 a \u548c b \uff0c\u8ba1\u7b97\u5b83\u4eec\u7684\u548c\u5e76\u6253\u5370\u3002 - \u5728 main \u51fd\u6570\u4e2d\uff0c\u901a\u8fc7 printSum \u8c03\u7528\u51fd\u6570\uff0c\u5e76\u4f20\u9012 num1 \u548c num2 \u4f5c\u4e3a\u53c2\u6570\u3002 3.3 \u5e26\u8fd4\u56de\u503c\u7684\u51fd\u6570 \u5728C++\u4e2d\uff0c\u51fd\u6570\u53ef\u4ee5\u8fd4\u56de\u591a\u79cd\u7c7b\u578b\u7684\u503c\uff1a 3.3.1 \u5b9a\u4e49\u4e00\u4e2a\u8fd4\u56de int \u7c7b\u578b\u7684\u51fd\u6570 \u5728C++\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u8fd4\u56de\u5177\u4f53\u503c\u7684\u51fd\u6570\u3002\u4ee5\u4e0b\u793a\u4f8b\u5c55\u793a\u4e86\u4e00\u4e2a\u8fd4\u56de\u4e24\u4e2a\u6574\u6570\u4e58\u79ef\u7684\u51fd\u6570\u3002 \u793a\u4f8b\uff1a #include <iostream> using namespace std; // \u5b9a\u4e49\u4e00\u4e2a\u8fd4\u56de\u4e24\u4e2a\u6574\u6570\u4e58\u79ef\u7684\u51fd\u6570 int multiply(int a, int b) { // \u8ba1\u7b97\u4e58\u79ef\u5e76\u8fd4\u56de\u7ed3\u679c return a * b; } int main() { int num1 = 5; int num2 = 7; // \u8c03\u7528 multiply \u51fd\u6570\u5e76\u4fdd\u5b58\u8fd4\u56de\u503c int result = multiply(num1, num2); cout << \"Multiplication Result: \" << result << endl; return 0; } \u89e3\u91ca\uff1a - multiply \u51fd\u6570\u63a5\u53d7\u4e24\u4e2a int \u7c7b\u578b\u7684\u53c2\u6570 a \u548c b \uff0c\u8fd4\u56de\u7c7b\u578b\u662f int \uff0c\u8868\u793a\u5b83\u4f1a\u8fd4\u56de\u4e00\u4e2a\u6574\u6570\u3002 - \u51fd\u6570\u4f53\u4e2d\uff0c\u4f7f\u7528 a * b \u8ba1\u7b97\u4e58\u79ef\uff0c\u5e76\u4f7f\u7528 return \u8bed\u53e5\u5c06\u7ed3\u679c\u8fd4\u56de\u3002 - \u5728 main \u51fd\u6570\u4e2d\uff0c\u8c03\u7528 multiply \u51fd\u6570\uff0c\u5e76\u5c06\u8fd4\u56de\u7684\u7ed3\u679c\u4fdd\u5b58\u5728\u53d8\u91cf result \u4e2d\uff0c\u6700\u540e\u5c06\u7ed3\u679c\u8f93\u51fa\u5230\u5c4f\u5e55\u4e0a\u3002 3.3.2 \u5b9a\u4e49\u4e00\u4e2a\u8fd4\u56de string \u7c7b\u578b\u7684\u51fd\u6570 \u6211\u4eec\u8fd8\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u8fd4\u56de string \u7c7b\u578b\u7684\u51fd\u6570\u3002\u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\uff0c\u5c55\u793a\u4e86\u5982\u4f55\u8fde\u63a5\u4e24\u4e2a\u5b57\u7b26\u4e32\u5e76\u8fd4\u56de\u7ed3\u679c\u3002 \u793a\u4f8b\uff1a #include <iostream> using namespace std; // \u5b9a\u4e49\u4e00\u4e2a\u8fde\u63a5\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u51fd\u6570 string concatenateStrings(string str1, string str2) { // \u8fde\u63a5\u5b57\u7b26\u4e32\u5e76\u8fd4\u56de\u7ed3\u679c return str1 + \" \" + str2; } int main() { string firstName = \"John\"; string lastName = \"Doe\"; // \u8c03\u7528 concatenateStrings \u51fd\u6570\u5e76\u4fdd\u5b58\u8fd4\u56de\u503c string fullName = concatenateStrings(firstName, lastName); cout << \"Full Name: \" << fullName << endl; return 0; } \u89e3\u91ca\uff1a - concatenateStrings \u51fd\u6570\u63a5\u53d7\u4e24\u4e2a string \u7c7b\u578b\u7684\u53c2\u6570 str1 \u548c str2 \uff0c\u8fd4\u56de\u7c7b\u578b\u662f string \u3002 - \u51fd\u6570\u4f53\u4e2d\uff0c\u4f7f\u7528 + \u8fd0\u7b97\u7b26\u8fde\u63a5\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u5e76\u5728\u5b83\u4eec\u4e4b\u95f4\u52a0\u4e86\u4e00\u4e2a\u7a7a\u683c\uff0c\u7136\u540e\u8fd4\u56de\u8fde\u63a5\u540e\u7684\u5b57\u7b26\u4e32\u3002 - \u5728 main \u51fd\u6570\u4e2d\uff0c\u8c03\u7528 concatenateStrings \u51fd\u6570\uff0c\u5e76\u5c06\u8fd4\u56de\u7684\u5b8c\u6574\u59d3\u540d\u4fdd\u5b58\u5728\u53d8\u91cf fullName \u4e2d\uff0c\u6700\u540e\u5c06\u7ed3\u679c\u8f93\u51fa\u5230\u5c4f\u5e55\u4e0a\u3002 3.3.3 \u8fd4\u56de float \u7c7b\u578b\u7684\u51fd\u6570 float \u7c7b\u578b\u7528\u4e8e\u5b58\u50a8\u5e26\u5c0f\u6570\u70b9\u7684\u6570\u5b57\u3002\u4f60\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u8fd4\u56de float \u7c7b\u578b\u7684\u51fd\u6570\uff0c\u6267\u884c\u6d6e\u70b9\u6570\u8fd0\u7b97\u3002 \u793a\u4f8b\uff1a #include <iostream> using namespace std; // \u5b9a\u4e49\u4e00\u4e2a\u8fd4\u56de\u4e24\u4e2a\u6d6e\u70b9\u6570\u548c\u7684\u51fd\u6570 float addFloats(float a, float b) { return a + b; } int main() { float num1 = 5.5; float num2 = 7.3; // \u8c03\u7528 addFloats \u51fd\u6570\u5e76\u63a5\u6536\u8fd4\u56de\u503c float result = addFloats(num1, num2); cout << \"Sum of floats: \" << result << endl; return 0; } \u89e3\u91ca\uff1a - addFloats \u51fd\u6570\u63a5\u53d7\u4e24\u4e2a float \u7c7b\u578b\u7684\u53c2\u6570 a \u548c b \uff0c\u8fd4\u56de\u5b83\u4eec\u7684\u548c\u3002 - \u5728 main \u51fd\u6570\u4e2d\uff0c\u901a\u8fc7\u8c03\u7528 addFloats \u5e76\u63a5\u6536\u8fd4\u56de\u7684\u6d6e\u70b9\u6570\u7ed3\u679c\uff0c\u7136\u540e\u6253\u5370\u8f93\u51fa\u3002 3.3.4 \u8fd4\u56de bool \u7c7b\u578b\u7684\u51fd\u6570 bool \u7c7b\u578b\u7528\u4e8e\u8868\u793a\u5e03\u5c14\u503c\uff0c\u5373 true \uff08\u771f\uff09\u6216 false \uff08\u5047\uff09\u3002\u4f60\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u6bd4\u8f83\u4e24\u4e2a\u6570\u5b57\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u5e03\u5c14\u503c\u3002 \u793a\u4f8b\uff1a #include <iostream> using namespace std; // \u5b9a\u4e49\u4e00\u4e2a\u6bd4\u8f83\u4e24\u4e2a\u6574\u6570\u5927\u5c0f\u7684\u51fd\u6570 bool isGreater(int a, int b) { return a > b; } int main() { int num1 = 10; int num2 = 20; // \u8c03\u7528 isGreater \u51fd\u6570\u5e76\u63a5\u6536\u8fd4\u56de\u503c bool result = isGreater(num1, num2); cout << \"Is num1 greater than num2? \" << (result ? \"Yes\" : \"No\") << endl; return 0; } \u89e3\u91ca\uff1a - isGreater \u51fd\u6570\u63a5\u53d7\u4e24\u4e2a int \u7c7b\u578b\u7684\u53c2\u6570 a \u548c b \uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a bool \u7c7b\u578b\u7684\u503c\uff0c\u8868\u793a a \u662f\u5426\u5927\u4e8e b \u3002 - \u5728 main \u51fd\u6570\u4e2d\uff0c\u901a\u8fc7\u8c03\u7528 isGreater \u5e76\u63a5\u6536\u8fd4\u56de\u7684\u5e03\u5c14\u503c\uff0c\u7136\u540e\u6839\u636e\u7ed3\u679c\u8f93\u51fa \"Yes\" \u6216 \"No\"\u3002 3.3.5 \u8fd4\u56de char \u7c7b\u578b\u7684\u51fd\u6570 char \u7c7b\u578b\u7528\u4e8e\u5b58\u50a8\u5355\u4e2a\u5b57\u7b26\u3002\u4f60\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u8fd4\u56de char \u7c7b\u578b\u7684\u51fd\u6570\uff0c\u5904\u7406\u5b57\u7b26\u6570\u636e\u3002 \u793a\u4f8b\uff1a #include <iostream> using namespace std; // \u5b9a\u4e49\u4e00\u4e2a\u83b7\u53d6\u5b57\u7b26\u4e32\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684\u51fd\u6570 char getFirstChar(string str) { return str[0]; } int main() { string name = \"Alice\"; // \u8c03\u7528 getFirstChar \u51fd\u6570\u5e76\u63a5\u6536\u8fd4\u56de\u503c char firstChar = getFirstChar(name); cout << \"The first character is: \" << firstChar << endl; return 0; } \u89e3\u91ca\uff1a - getFirstChar \u51fd\u6570\u63a5\u53d7\u4e00\u4e2a string \u7c7b\u578b\u7684\u53c2\u6570 str \uff0c\u5e76\u8fd4\u56de\u8be5\u5b57\u7b26\u4e32\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u3002 - \u5728 main \u51fd\u6570\u4e2d\uff0c\u901a\u8fc7\u8c03\u7528 getFirstChar \u5e76\u63a5\u6536\u8fd4\u56de\u7684\u5b57\u7b26\uff0c\u7136\u540e\u6253\u5370\u8f93\u51fa\u3002 4. \u53c2\u6570\u4f20\u9012\u65b9\u5f0f \u5728C++\u4e2d\uff0c\u51fd\u6570\u7684\u53c2\u6570\u4f20\u9012\u65b9\u5f0f\u6709\u4e24\u79cd\uff1a\u503c\u4f20\u9012\uff08pass-by-value\uff09\u548c\u5f15\u7528\u4f20\u9012\uff08pass-by-reference\uff09\u3002\u7406\u89e3\u8fd9\u4e24\u79cd\u65b9\u5f0f\u7684\u533a\u522b\u5bf9\u4e8e\u7f16\u5199\u9ad8\u6548\u548c\u6b63\u786e\u7684\u4ee3\u7801\u81f3\u5173\u91cd\u8981\u3002 4.1 \u503c\u4f20\u9012\uff08Pass-by-Value\uff09 \u503c\u4f20\u9012\u662f\u5c06\u5b9e\u9645\u53c2\u6570\u7684\u503c\u590d\u5236\u5230\u51fd\u6570\u7684\u5f62\u53c2\u53d8\u91cf\u4e2d\u3002\u51fd\u6570\u5185\u90e8\u5bf9\u53c2\u6570\u7684\u4fee\u6539\u4e0d\u4f1a\u5f71\u54cd\u5b9e\u9645\u53c2\u6570\u3002 \u793a\u4f8b\uff1a #include <iostream> using namespace std; // \u5b9a\u4e49\u4e00\u4e2a\u5e26\u6709\u503c\u4f20\u9012\u7684\u51fd\u6570 void increment(int a) { a++; } int main() { int num = 10; increment(num); cout << \"After increment: \" << num << endl; // \u8f93\u51fa\uff1a10 return 0; } \u89e3\u91ca\uff1a - \u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c increment \u51fd\u6570\u5bf9\u53c2\u6570 a \u8fdb\u884c\u4e86\u81ea\u589e\u64cd\u4f5c\uff0c\u4f46 main \u51fd\u6570\u4e2d\u7684\u53d8\u91cf num \u4e0d\u53d7\u5f71\u54cd\uff0c\u56e0\u4e3a a \u662f num \u7684\u526f\u672c\u3002 4.2 \u5f15\u7528\u4f20\u9012\uff08Pass-by-Reference\uff09 \u5f15\u7528\u4f20\u9012\u5c06\u53c2\u6570\u7684\u5f15\u7528\u4f20\u9012\u7ed9\u51fd\u6570\u3002\u51fd\u6570\u5185\u90e8\u5bf9\u53c2\u6570\u7684\u4fee\u6539\u4f1a\u76f4\u63a5\u5f71\u54cd\u5b9e\u9645\u53c2\u6570\u3002 \u793a\u4f8b\uff1a #include <iostream> using namespace std; // \u5b9a\u4e49\u4e00\u4e2a\u5e26\u6709\u5f15\u7528\u4f20\u9012\u7684\u51fd\u6570 void increment(int& a) { a++; } int main() { int num = 10; increment(num); cout << \"After increment: \" << num << endl; // \u8f93\u51fa\uff1a11 return 0; } \u89e3\u91ca\uff1a - \u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c increment \u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u5f15\u7528\u53c2\u6570 a \uff0c\u5bf9 a \u7684\u4fee\u6539\u4f1a\u76f4\u63a5\u5f71\u54cd main \u51fd\u6570\u4e2d\u7684\u53d8\u91cf num \u3002 5. \u8bfe\u540e\u7ec3\u4e60 \u901a\u8fc7\u7ec3\u4e60\uff0c\u53ef\u4ee5\u5de9\u56fa\u5bf9\u51fd\u6570\u5b9a\u4e49\u548c\u53c2\u6570\u4f20\u9012\u7684\u7406\u89e3\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u7ec3\u4e60\u9898\uff0c\u5e2e\u52a9\u4f60\u66f4\u597d\u5730\u638c\u63e1\u672c\u8282\u5185\u5bb9\u3002 5.1 \u51fd\u6570\u7684\u5b9a\u4e49 \u8bf7\u5c06\u4e0b\u5217\u4ee3\u7801\uff08Lesson2\u8bfe\u540e\u7ec3\u4e60\uff09\u7684\u70b9\u5355\u3001\u6253\u5370\u5ba2\u6237\u70b9\u5355\u5185\u5bb9\u3001\u8ba1\u7b97\u8ba2\u5355\u603b\u4ef7\u4e09\u4e2a\u529f\u80fd\u5c01\u88c5\u6210\u72ec\u7acb\u7684\u65b9\u6cd5\u3002 \u539f\u59cb\u4ee3\u7801\uff1a #include <iostream> #include <string> using namespace std; int main() { // \u5b9a\u4e49\u4ef7\u683c\u5e38\u91cf const double BURGER_PRICE = 12.5; const double FRIES_PRICE = 6.0; const double COKE_PRICE = 4.5; // \u521d\u59cb\u5316\u603b\u9500\u552e\u989d double totalSales = 0.0; // \u5f00\u59cb\u5faa\u73af\uff0c\u76f4\u5230\u987e\u5ba2\u9009\u62e9\u9000\u51fa while (true) { // \u521d\u59cb\u5316\u70b9\u5355\u6570\u91cf int option = 0; int burgers = 0; int fries = 0; int cokes = 0; // \u83b7\u53d6\u7528\u6237\u70b9\u5355 cout << \"\\n\u8bf7\u70b9\u5355\uff08\u8f93\u5165-1\u9000\u51fa\uff0c\u5176\u4ed6\u6574\u6570\u8fdb\u5165\u70b9\u5355\uff09\uff1a\"; cin >> option; // \u5982\u679c\u8f93\u5165\u4e3a-1\uff0c\u5219\u9000\u51fa\u5faa\u73af if (option == -1) { break; } cout << \"\u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf\uff1a\"; cin >> burgers; cout << \"\u8bf7\u8f93\u5165\u85af\u6761\u7684\u6570\u91cf\uff1a\"; cin >> fries; cout << \"\u8bf7\u8f93\u5165\u53ef\u4e50\u7684\u6570\u91cf\uff1a\"; cin >> cokes; // \u6253\u5370\u5ba2\u6237\u70b9\u5355\u5185\u5bb9 cout << \"\\n\u5ba2\u6237\u70b9\u5355\u5185\u5bb9\uff1a\" << endl; if (burgers > 0) { cout << \"\u6c49\u5821 x \" << burgers << endl; } if (fries > 0) { cout << \"\u85af\u6761 x \" << fries << endl; } if (cokes > 0) { cout << \"\u53ef\u4e50 x \" << cokes << endl; } // \u8ba1\u7b97\u672c\u6b21\u70b9\u5355\u7684\u603b\u4ef7 double orderTotal = burgers * BURGER_PRICE + fries * FRIES_PRICE + cokes * COKE_PRICE; // \u7d2f\u52a0\u5230\u603b\u9500\u552e\u989d totalSales += orderTotal; // \u6253\u5370\u672c\u6b21\u70b9\u5355\u7684\u603b\u4ef7 cout << \"\\n\u672c\u6b21\u70b9\u5355\u603b\u4ef7\uff1a\" << orderTotal << \" \u5143\" << endl; } // \u6253\u5370\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d cout << \"\\n\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d\uff1a\" << totalSales << \" \u5143\" << endl; return 0; } \u53c2\u8003\u7b54\u6848\uff1a #include <iostream> #include <string> using namespace std; // \u5b9a\u4e49\u4ef7\u683c\u5e38\u91cf const double BURGER_PRICE = 12.5; const double FRIES_PRICE = 6.0; const double COKE_PRICE = 4.5; // \u83b7\u53d6\u7528\u6237\u7684\u70b9\u5355\u9009\u9879 int getUserOption() { int option; cout << \"\\n\u8bf7\u70b9\u5355\uff08\u8f93\u5165-1\u9000\u51fa\uff0c\u5176\u4ed6\u6574\u6570\u8fdb\u5165\u70b9\u5355\uff09\uff1a\"; cin >> option; return option; } // \u83b7\u53d6\u7279\u5b9a\u5546\u54c1\u7684\u6570\u91cf int getQuantity(const string& itemName) { int quantity; cout << \"\u8bf7\u8f93\u5165\" << itemName << \"\u7684\u6570\u91cf\uff1a\"; cin >> quantity; return quantity; } // \u6253\u5370\u5ba2\u6237\u70b9\u5355\u5185\u5bb9 void printOrderDetails(int burgers, int fries, int cokes) { cout << \"\\n\u5ba2\u6237\u70b9\u5355\u5185\u5bb9\uff1a\" << endl; if (burgers > 0) { cout << \"\u6c49\u5821 x \" << burgers << endl; } if (fries > 0) { cout << \"\u85af\u6761 x \" << fries << endl; } if (cokes > 0) { cout << \"\u53ef\u4e50 x \" << cokes << endl; } } // \u8ba1\u7b97\u8ba2\u5355\u603b\u4ef7 double calculateOrderTotal(int burgers, int fries, int cokes) { return burgers * BURGER_PRICE + fries * FRIES_PRICE + cokes * COKE_PRICE; } int main() { double totalSales = 0.0; while (true) { int option = getUserOption(); if (option == -1) { break; } int burgers = getQuantity(\"\u6c49\u5821\"); int fries = getQuantity(\"\u85af\u6761\"); int cokes = getQuantity(\"\u53ef\u4e50\"); printOrderDetails(burgers, fries, cokes); double orderTotal = calculateOrderTotal(burgers, fries, cokes); totalSales += orderTotal; cout << \"\\n\u672c\u6b21\u70b9\u5355\u603b\u4ef7\uff1a\" << orderTotal << \" \u5143\" << endl; } cout << \"\\n\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d\uff1a\" << totalSales << \" \u5143\" << endl; return 0; } \u8bf4\u660e\uff1a getUserOption \u51fd\u6570\uff1a \u8d1f\u8d23\u83b7\u53d6\u7528\u6237\u7684\u70b9\u5355\u9009\u9879\u3002 getQuantity \u51fd\u6570\uff1a \u8d1f\u8d23\u83b7\u53d6\u7279\u5b9a\u5546\u54c1\u7684\u6570\u91cf\uff0c\u53c2\u6570\u4e3a\u5546\u54c1\u540d\u79f0\u3002 printOrderDetails \u51fd\u6570\uff1a \u8d1f\u8d23\u6253\u5370\u5ba2\u6237\u7684\u70b9\u5355\u5185\u5bb9\uff0c\u53c2\u6570\u4e3a\u5404\u5546\u54c1\u7684\u6570\u91cf\u3002 calculateOrderTotal \u51fd\u6570\uff1a \u8d1f\u8d23\u8ba1\u7b97\u8ba2\u5355\u7684\u603b\u4ef7\uff0c\u53c2\u6570\u4e3a\u5404\u5546\u54c1\u7684\u6570\u91cf\uff0c\u8fd4\u56de\u8ba2\u5355\u603b\u4ef7\u3002 main \u51fd\u6570\uff1a \u8d1f\u8d23\u63a7\u5236\u7a0b\u5e8f\u7684\u6d41\u7a0b\uff0c\u8c03\u7528\u4e0a\u8ff0\u51fd\u6570\u5b9e\u73b0\u70b9\u5355\u3001\u8ba1\u7b97\u548c\u6253\u5370\u529f\u80fd\u3002 \u901a\u8fc7\u5c06\u4e0d\u540c\u7684\u529f\u80fd\u5c01\u88c5\u6210\u72ec\u7acb\u7684\u51fd\u6570\uff0c\u4ee3\u7801\u7ed3\u6784\u66f4\u52a0\u6e05\u6670\uff0c\u4fbf\u4e8e\u7ef4\u62a4\u548c\u6269\u5c55\u3002 5.2 \u5f62\u5f0f\u53c2\u6570\u4e0e\u5b9e\u9645\u53c2\u6570\u5224\u65ad\u9898 \u9898\u76ee\uff1a \u89c2\u5bdf\u4ee5\u4e0b\u4ee3\u7801\uff0c\u5224\u65ad\u53c2\u6570 x \u548c y \u662f\u5b9e\u9645\u53c2\u6570\u8fd8\u662f\u5f62\u5f0f\u53c2\u6570\uff0c\u5b83\u4eec\u662f\u5426\u4f1a\u88ab\u4fee\u6539\uff0c modifyValues \u65b9\u6cd5\u662f\u5426\u4f1a\u5bf9\u5b83\u4eec\u4ea7\u751f\u5f71\u54cd\u3002\u9009\u62e9\u6b63\u786e\u7684\u7b54\u6848\u5e76\u89e3\u91ca\u539f\u56e0\u3002 #include <iostream> using namespace std; void modifyValues(int a, int b) { a = a * 2; b = b + 3; } int main() { int x = 5; int y = 10; modifyValues(x, y); cout << \"x = \" << x << \", y = \" << y << endl; return 0; } A. \u6b63\u786e\uff0c x \u548c y \u7684\u503c\u4f1a\u88ab\u4fee\u6539 B. \u9519\u8bef\uff0c x \u548c y \u7684\u503c\u4e0d\u4f1a\u88ab\u4fee\u6539 \u7b54\u6848\uff1a B. \u9519\u8bef \u7406\u7531\uff1a \u5728 C++ \u4e2d\uff0c\u51fd\u6570\u53c2\u6570\u662f\u6309\u503c\u4f20\u9012\u7684\u3002\u5f53 modifyValues \u51fd\u6570\u88ab\u8c03\u7528\u65f6\uff0c a \u548c b \u662f x \u548c y \u7684\u526f\u672c\uff0c\u5bf9\u5b83\u4eec\u7684\u4fee\u6539\u4e0d\u4f1a\u5f71\u54cd\u5230\u539f\u59cb\u7684 x \u548c y \u3002\u56e0\u6b64\uff0c x \u548c y \u7684\u503c\u4e0d\u4f1a\u88ab\u4fee\u6539\uff0c\u8f93\u51fa\u4ecd\u7136\u662f x = 5, y = 10 \u3002","title":"Lesson 3 C++ \u7684\u81ea\u5b9a\u4e49\u51fd\u6570\u4e0e\u53c2\u6570"},{"location":"lesson3/Lesson3%20C%2B%2B/#lesson-3-c","text":"","title":"Lesson 3 C++ \u7684\u81ea\u5b9a\u4e49\u51fd\u6570\u4e0e\u53c2\u6570"},{"location":"lesson3/Lesson3%20C%2B%2B/#_1","text":"1. C++\u51fd\u6570\u7684\u5b9a\u4e49\u548c\u4f7f\u7528 1.1 \u51fd\u6570\u7684\u5b9a\u4e49\u8bed\u6cd5 1.2 \u8fd4\u56de\u7c7b\u578b 1.3 \u51fd\u6570\u540d\u547d\u540d\u89c4\u5219 2. \u5f62\u5f0f\u53c2\u6570\u4e0e\u5b9e\u9645\u53c2\u6570 2.1 \u5f62\u5f0f\u53c2\u6570\uff08Formal Parameters\uff09 2.2 \u5b9e\u9645\u53c2\u6570\uff08Actual Arguments\uff09 2.3 \u603b\u7ed3 3. \u51fd\u6570\u7684\u5b9a\u4e49\u548c\u8c03\u7528\u793a\u4f8b 3.1 \u5b9a\u4e49\u4e00\u4e2a\u4e0d\u8fd4\u56de\u503c\u7684\u51fd\u6570 3.2 \u5b9a\u4e49\u4e00\u4e2a\u5e26\u53c2\u6570\u7684\u51fd\u6570 3.3 \u5e26\u8fd4\u56de\u503c\u7684\u51fd\u6570 4. \u53c2\u6570\u4f20\u9012\u65b9\u5f0f 4.1 \u503c\u4f20\u9012\uff08Pass-by-Value\uff09 4.2 \u5f15\u7528\u4f20\u9012\uff08Pass-by-Reference\uff09 5. \u8bfe\u540e\u7ec3\u4e60 5.1 \u51fd\u6570\u7684\u5b9a\u4e49 5.2 \u5f62\u5f0f\u53c2\u6570\u4e0e\u5b9e\u9645\u53c2\u6570\u5224\u65ad\u9898","title":"\u76ee\u5f55"},{"location":"lesson3/Lesson3%20C%2B%2B/#1-c","text":"\u51fd\u6570\u662fC++\u7f16\u7a0b\u7684\u57fa\u7840\u6784\u5efa\u6a21\u5757\u4e4b\u4e00\uff0c\u5b83\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5c06\u590d\u6742\u7684\u7a0b\u5e8f\u5212\u5206\u4e3a\u66f4\u5c0f\u7684\u3001\u72ec\u7acb\u7684\u90e8\u5206\uff0c\u6bcf\u4e2a\u90e8\u5206\u5b8c\u6210\u7279\u5b9a\u7684\u4efb\u52a1\u3002\u8fd9\u6837\u4e0d\u4ec5\u4f7f\u4ee3\u7801\u66f4\u52a0\u6e05\u6670\u548c\u6613\u4e8e\u7ef4\u62a4\uff0c\u8fd8\u589e\u5f3a\u4e86\u4ee3\u7801\u7684\u53ef\u91cd\u7528\u6027\u3002","title":"1. C++\u51fd\u6570\u7684\u5b9a\u4e49\u548c\u4f7f\u7528"},{"location":"lesson3/Lesson3%20C%2B%2B/#11","text":"\u5728C++\u4e2d\uff0c\u51fd\u6570\u7684\u5b9a\u4e49\u901a\u5e38\u9075\u5faa\u4ee5\u4e0b\u7ed3\u6784\uff1a \u8fd4\u56de\u7c7b\u578b \u51fd\u6570\u540d(\u53c2\u6570\u5217\u8868) { // \u51fd\u6570\u4f53 // \u5728\u8fd9\u91cc\u7f16\u5199\u51fd\u6570\u6267\u884c\u7684\u5177\u4f53\u64cd\u4f5c // \u51fd\u6570\u53ef\u4ee5\u4f7f\u7528\u4f20\u5165\u7684\u53c2\u6570\uff0c\u5e76\u4e14\u53ef\u80fd\u4f1a\u8fd4\u56de\u4e00\u4e2a\u503c } \u8fd4\u56de\u7c7b\u578b\uff08Return Type\uff09\uff1a \u8fd9\u662f\u51fd\u6570\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u3002\u5982\u679c\u51fd\u6570\u4e0d\u9700\u8981\u8fd4\u56de\u4efb\u4f55\u503c\uff0c\u5c31\u4f7f\u7528 void \u4f5c\u4e3a\u8fd4\u56de\u7c7b\u578b\u3002\u5e38\u89c1\u7684\u8fd4\u56de\u7c7b\u578b\u6709 int \u3001 float \u3001 double \u3001 char \u548c string \u7b49\u3002 \u51fd\u6570\u540d\uff08Function Name\uff09\uff1a \u51fd\u6570\u7684\u540d\u79f0\uff0c\u7528\u6765\u5728\u7a0b\u5e8f\u4e2d\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u3002\u51fd\u6570\u540d\u5e94\u5c3d\u91cf\u7b80\u6d01\u660e\u4e86\uff0c\u5e76\u80fd\u53cd\u6620\u51fd\u6570\u7684\u529f\u80fd\u3002 \u53c2\u6570\u5217\u8868\uff08Parameter List\uff09\uff1a \u8fd9\u662f\u51fd\u6570\u63a5\u6536\u7684\u8f93\u5165\u6570\u636e\uff0c\u591a\u4e2a\u53c2\u6570\u7528\u9017\u53f7\u5206\u9694\u3002\u5982\u679c\u51fd\u6570\u4e0d\u9700\u8981\u4efb\u4f55\u8f93\u5165\u53c2\u6570\uff0c\u53c2\u6570\u5217\u8868\u53ef\u4ee5\u4e3a\u7a7a\u3002 \u51fd\u6570\u4f53\uff08Function Body\uff09\uff1a \u5305\u542b\u4e86\u51fd\u6570\u6267\u884c\u7684\u5177\u4f53\u64cd\u4f5c\u3002\u8fd9\u90e8\u5206\u4ee3\u7801\u5b9e\u73b0\u4e86\u51fd\u6570\u7684\u6838\u5fc3\u903b\u8f91\uff0c\u662f\u51fd\u6570\u7684\u4e3b\u4f53\u3002 \u793a\u4f8b\uff1a int add(int a, int b) { return a + b; } \u5728\u4e0a\u8ff0\u793a\u4f8b\u4e2d\uff0c add \u51fd\u6570\u63a5\u6536\u4e24\u4e2a\u6574\u6570\u4f5c\u4e3a\u53c2\u6570\uff0c\u8fd4\u56de\u5b83\u4eec\u7684\u548c\u3002","title":"1.1 \u51fd\u6570\u7684\u5b9a\u4e49\u8bed\u6cd5"},{"location":"lesson3/Lesson3%20C%2B%2B/#12","text":"\u8fd4\u56de\u7c7b\u578b\u51b3\u5b9a\u4e86\u51fd\u6570\u8fd4\u56de\u7ed9\u8c03\u7528\u8005\u7684\u6570\u636e\u7c7b\u578b\u3002\u4f8b\u5982\uff0c\u5982\u679c\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u8ba1\u7b97\u4e24\u4e2a\u6570\u5b57\u7684\u4e58\u79ef\uff0c\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\u53ef\u4ee5\u662f int \u3001 float \u7b49\u3002\u51fd\u6570\u53ef\u4ee5\u8fd4\u56de\u4efb\u4f55\u6570\u636e\u7c7b\u578b\u7684\u503c\uff0c\u5305\u62ec\u81ea\u5b9a\u4e49\u7684\u7c7b\u578b\u3002 \u5982\u679c\u4e00\u4e2a\u51fd\u6570\u4e0d\u9700\u8981\u8fd4\u56de\u4efb\u4f55\u503c\uff0c\u6bd4\u5982\u5b83\u4ec5\u7528\u4e8e\u6253\u5370\u4fe1\u606f\uff0c\u5219\u8fd4\u56de\u7c7b\u578b\u4e3a void \u3002 \u793a\u4f8b\uff1a // \u8fd4\u56de\u4e00\u4e2a\u6574\u6570 int multiply(int a, int b) { return a * b; } // \u4e0d\u8fd4\u56de\u503c void printHello() { std::cout << \"Hello, World!\" << std::endl; }","title":"1.2 \u8fd4\u56de\u7c7b\u578b"},{"location":"lesson3/Lesson3%20C%2B%2B/#13","text":"\u51fd\u6570\u540d\u7528\u4e8e\u6807\u8bc6\u548c\u8c03\u7528\u51fd\u6570\u3002\u9009\u62e9\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u51fd\u6570\u540d\u53ef\u4ee5\u8ba9\u4ee3\u7801\u66f4\u6613\u8bfb\u548c\u7406\u89e3\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u547d\u540d\u89c4\u5219\u548c\u5efa\u8bae\uff1a \u4f7f\u7528\u6709\u610f\u4e49\u7684\u540d\u79f0\uff1a \u51fd\u6570\u540d\u5e94\u80fd\u53cd\u6620\u51fd\u6570\u7684\u529f\u80fd\u3002\u4f8b\u5982\uff0c calculateSum \u6bd4 func1 \u66f4\u5177\u63cf\u8ff0\u6027\u3002 \u9075\u5faa\u547d\u540d\u89c4\u8303\uff1a \u901a\u5e38\u4f7f\u7528\u5c0f\u5199\u5b57\u6bcd\u548c\u9a7c\u5cf0\u5f0f\u547d\u540d\u6cd5\uff08camelCase\uff09\uff0c\u5982 getUserInput \u3002 \u907f\u514d\u4f7f\u7528\u4fdd\u7559\u5b57\uff1a \u4e0d\u8981\u4f7f\u7528C++\u7684\u4fdd\u7559\u5173\u952e\u5b57\u4f5c\u4e3a\u51fd\u6570\u540d\uff0c\u5982 int \u3001 return \u7b49\u3002 \u7b80\u6d01\u660e\u4e86\uff1a \u51fd\u6570\u540d\u5e94\u7b80\u77ed\u660e\u4e86\uff0c\u4fbf\u4e8e\u8bb0\u5fc6\u548c\u8c03\u7528\u3002 \u793a\u4f8b\uff1a // \u5408\u9002\u7684\u51fd\u6570\u540d double calculateArea(double radius); // \u4e0d\u63a8\u8350\u7684\u51fd\u6570\u540d double func1(double a);","title":"1.3 \u51fd\u6570\u540d\u547d\u540d\u89c4\u5219"},{"location":"lesson3/Lesson3%20C%2B%2B/#2","text":"\u5728C++\u4e2d\uff0c\u51fd\u6570\u53ef\u4ee5\u63a5\u6536\u5916\u90e8\u8f93\u5165\uff0c\u8fd9\u4e9b\u8f93\u5165\u88ab\u79f0\u4e3a\u53c2\u6570\u3002\u53c2\u6570\u5206\u4e3a\u5f62\u5f0f\u53c2\u6570\uff08\u5f62\u53c2\uff09\u548c\u5b9e\u9645\u53c2\u6570\uff08\u5b9e\u53c2\uff09\u3002\u7406\u89e3\u8fd9\u4e24\u8005\u7684\u533a\u522b\u5bf9\u4e8e\u6b63\u786e\u4f7f\u7528\u51fd\u6570\u975e\u5e38\u91cd\u8981\u3002","title":"2. \u5f62\u5f0f\u53c2\u6570\u4e0e\u5b9e\u9645\u53c2\u6570"},{"location":"lesson3/Lesson3%20C%2B%2B/#21-formal-parameters","text":"\u5f62\u5f0f\u53c2\u6570\u662f\u5728\u51fd\u6570\u5b9a\u4e49\u65f6\u58f0\u660e\u7684\u53c2\u6570\uff0c\u5b83\u4eec\u4f5c\u4e3a\u51fd\u6570\u7684\u4e00\u90e8\u5206\uff0c\u7528\u6765\u63a5\u6536\u8c03\u7528\u51fd\u6570\u65f6\u4f20\u9012\u7684\u5b9e\u9645\u53c2\u6570\u7684\u503c\u3002\u5f62\u5f0f\u53c2\u6570\u5728\u51fd\u6570\u5b9a\u4e49\u7684\u62ec\u53f7\u5185\u90e8\u58f0\u660e\uff0c\u5e76\u6307\u5b9a\u5b83\u4eec\u7684\u7c7b\u578b\u548c\u540d\u79f0\u3002 \u793a\u4f8b\uff1a void calculateSum(int a, int b) { int sum = a + b; std::cout << \"Sum: \" << sum << std::endl; } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c calculateSum \u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u63a5\u53d7\u4e24\u4e2a\u5f62\u5f0f\u53c2\u6570 a \u548c b \uff0c\u5b83\u4eec\u7684\u7c7b\u578b\u90fd\u662f int \u3002\u8fd9\u4e9b\u5f62\u5f0f\u53c2\u6570\u5728\u51fd\u6570\u88ab\u8c03\u7528\u65f6\u7528\u4e8e\u63a5\u6536\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u5b9e\u9645\u53c2\u6570\u7684\u503c\u3002","title":"2.1 \u5f62\u5f0f\u53c2\u6570\uff08Formal Parameters\uff09"},{"location":"lesson3/Lesson3%20C%2B%2B/#22-actual-arguments","text":"\u5b9e\u9645\u53c2\u6570\u662f\u5728\u8c03\u7528\u51fd\u6570\u65f6\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u503c\u6216\u8005\u8868\u8fbe\u5f0f\u3002\u5b83\u4eec\u662f\u771f\u6b63\u7528\u6765\u6267\u884c\u51fd\u6570\u64cd\u4f5c\u7684\u6570\u636e\u3002\u5728\u51fd\u6570\u8c03\u7528\u65f6\uff0c\u5b9e\u9645\u53c2\u6570\u88ab\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u5f62\u5f0f\u53c2\u6570\u3002 \u793a\u4f8b\uff1a #include <iostream> void calculateSum(int a, int b) { int sum = a + b; std::cout << \"Sum: \" << sum << std::endl; } int main() { int num1 = 10; int num2 = 20; // \u8c03\u7528\u51fd\u6570\u5e76\u4f20\u9012\u5b9e\u9645\u53c2\u6570 calculateSum(num1, num2); return 0; } \u89e3\u91ca\uff1a - \u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c num1 \u548c num2 \u662f main \u51fd\u6570\u4e2d\u7684\u4e24\u4e2a\u53d8\u91cf\uff0c\u5b83\u4eec\u4f5c\u4e3a\u5b9e\u9645\u53c2\u6570\u4f20\u9012\u7ed9 calculateSum \u51fd\u6570\u3002 - \u5728\u51fd\u6570\u8c03\u7528 calculateSum(num1, num2); \u4e2d\uff0c num1 \u548c num2 \u5206\u522b\u4f20\u9012\u7ed9 a \u548c b \u5f62\u5f0f\u53c2\u6570\uff0c\u8fdb\u800c\u5728\u51fd\u6570\u5185\u90e8\u8ba1\u7b97\u5b83\u4eec\u7684\u548c\u3002","title":"2.2 \u5b9e\u9645\u53c2\u6570\uff08Actual Arguments\uff09"},{"location":"lesson3/Lesson3%20C%2B%2B/#23","text":"\u5f62\u5f0f\u53c2\u6570 \u662f\u5728\u51fd\u6570\u5b9a\u4e49\u4e2d\u58f0\u660e\u7684\u53d8\u91cf\uff0c\u5b83\u4eec\u7528\u4e8e\u63a5\u6536\u5b9e\u9645\u53c2\u6570\u7684\u503c\u3002 \u5b9e\u9645\u53c2\u6570 \u662f\u5728\u51fd\u6570\u8c03\u7528\u65f6\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u503c\u6216\u8868\u8fbe\u5f0f\uff0c\u5b83\u4eec\u88ab\u4f20\u9012\u7ed9\u5f62\u5f0f\u53c2\u6570\uff0c\u7528\u4e8e\u51fd\u6570\u6267\u884c\u3002 \u7406\u89e3\u5f62\u5f0f\u53c2\u6570\u548c\u5b9e\u9645\u53c2\u6570\u7684\u533a\u522b\uff0c\u6709\u52a9\u4e8e\u6b63\u786e\u4f20\u9012\u6570\u636e\u5230\u51fd\u6570\uff0c\u5e76\u786e\u4fdd\u51fd\u6570\u80fd\u591f\u6b63\u786e\u5904\u7406\u8f93\u5165\u3002","title":"2.3 \u603b\u7ed3"},{"location":"lesson3/Lesson3%20C%2B%2B/#3","text":"","title":"3. \u51fd\u6570\u7684\u5b9a\u4e49\u548c\u8c03\u7528\u793a\u4f8b"},{"location":"lesson3/Lesson3%20C%2B%2B/#31","text":"\u5728C++\u4e2d\uff0c\u51fd\u6570\u4e0d\u4e00\u5b9a\u9700\u8981\u8fd4\u56de\u503c\u3002\u5f53\u4e00\u4e2a\u51fd\u6570\u6267\u884c\u67d0\u4e9b\u64cd\u4f5c\uff0c\u4f46\u4e0d\u9700\u8981\u8fd4\u56de\u4efb\u4f55\u503c\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 void \u4f5c\u4e3a\u8fd4\u56de\u7c7b\u578b\u3002 \u793a\u4f8b\uff1a #include <iostream> using namespace std; // \u5b9a\u4e49\u4e00\u4e2a\u4e0d\u8fd4\u56de\u503c\u7684\u51fd\u6570 void printHello() { // \u6253\u5370\u4e00\u6761\u6d88\u606f cout << \"Hello, World!\" << endl; } int main() { // \u8c03\u7528 printHello \u51fd\u6570 printHello(); return 0; } \u89e3\u91ca\uff1a - printHello \u51fd\u6570\u6ca1\u6709\u53c2\u6570\uff08\u7a7a\u62ec\u53f7\u8868\u793a\u6ca1\u6709\u53c2\u6570\uff09\uff0c\u8fd4\u56de\u7c7b\u578b\u662f void \uff0c\u8868\u793a\u5b83\u4e0d\u8fd4\u56de\u4efb\u4f55\u503c\u3002 - \u51fd\u6570\u4f53\u91cc\u53ea\u6709\u4e00\u884c\u4ee3\u7801\uff0c\u7528\u6765\u6253\u5370 \"Hello, World!\"\u3002 - \u5728 main \u51fd\u6570\u4e2d\uff0c\u901a\u8fc7 printHello(); \u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\uff0c\u51fd\u6570\u4f1a\u6267\u884c\u5176\u4ee3\u7801\u3002","title":"3.1 \u5b9a\u4e49\u4e00\u4e2a\u4e0d\u8fd4\u56de\u503c\u7684\u51fd\u6570"},{"location":"lesson3/Lesson3%20C%2B%2B/#32","text":"\u5e26\u53c2\u6570\u7684\u51fd\u6570\u80fd\u591f\u63a5\u6536\u5916\u90e8\u4f20\u9012\u7684\u6570\u636e\uff0c\u4ee5\u5b8c\u6210\u7279\u5b9a\u7684\u4efb\u52a1\u3002","title":"3.2 \u5b9a\u4e49\u4e00\u4e2a\u5e26\u53c2\u6570\u7684\u51fd\u6570"},{"location":"lesson3/Lesson3%20C%2B%2B/#321","text":"\u793a\u4f8b\uff1a #include <iostream> using namespace std; // \u5b9a\u4e49\u4e00\u4e2a\u5e26\u6709\u4e00\u4e2a\u53c2\u6570\u7684\u51fd\u6570 void printNumber(int num) { cout << \"The number is: \" << num << endl; } int main() { int myNumber = 10; // \u8c03\u7528 printNumber \u51fd\u6570\u5e76\u4f20\u9012\u53c2\u6570 printNumber(myNumber); return 0; } \u89e3\u91ca\uff1a - printNumber \u51fd\u6570\u63a5\u6536\u4e00\u4e2a int \u7c7b\u578b\u7684\u53c2\u6570 num \uff0c\u7136\u540e\u6253\u5370\u8fd9\u4e2a\u6570\u5b57\u3002 - \u5728 main \u51fd\u6570\u4e2d\uff0c\u901a\u8fc7 printNumber \u8c03\u7528\u51fd\u6570\uff0c\u5e76\u4f20\u9012\u53d8\u91cf myNumber \u4f5c\u4e3a\u53c2\u6570\u3002","title":"3.2.1 \u5e26\u4e00\u4e2a\u53c2\u6570\u7684\u51fd\u6570"},{"location":"lesson3/Lesson3%20C%2B%2B/#322","text":"\u51fd\u6570\u4e5f\u53ef\u4ee5\u63a5\u53d7\u591a\u4e2a\u53c2\u6570\uff0c\u5e76\u4f7f\u7528\u8fd9\u4e9b\u53c2\u6570\u6765\u6267\u884c\u66f4\u590d\u6742\u7684\u64cd\u4f5c\u3002 \u793a\u4f8b\uff1a #include <iostream> using namespace std; // \u5b9a\u4e49\u4e00\u4e2a\u5e26\u6709\u4e24\u4e2a\u53c2\u6570\u7684\u51fd\u6570 void printSum(int a, int b) { int sum = a + b; cout << \"Sum: \" << sum << endl; } int main() { int num1 = 10; int num2 = 20; // \u8c03\u7528 printSum \u51fd\u6570\u5e76\u4f20\u9012\u53c2\u6570 printSum(num1, num2); return 0; } \u89e3\u91ca\uff1a - printSum \u51fd\u6570\u63a5\u6536\u4e24\u4e2a int \u7c7b\u578b\u7684\u53c2\u6570 a \u548c b \uff0c\u8ba1\u7b97\u5b83\u4eec\u7684\u548c\u5e76\u6253\u5370\u3002 - \u5728 main \u51fd\u6570\u4e2d\uff0c\u901a\u8fc7 printSum \u8c03\u7528\u51fd\u6570\uff0c\u5e76\u4f20\u9012 num1 \u548c num2 \u4f5c\u4e3a\u53c2\u6570\u3002","title":"3.2.2 \u5e26\u591a\u4e2a\u53c2\u6570\u7684\u51fd\u6570"},{"location":"lesson3/Lesson3%20C%2B%2B/#33","text":"\u5728C++\u4e2d\uff0c\u51fd\u6570\u53ef\u4ee5\u8fd4\u56de\u591a\u79cd\u7c7b\u578b\u7684\u503c\uff1a","title":"3.3 \u5e26\u8fd4\u56de\u503c\u7684\u51fd\u6570"},{"location":"lesson3/Lesson3%20C%2B%2B/#331-int","text":"\u5728C++\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u8fd4\u56de\u5177\u4f53\u503c\u7684\u51fd\u6570\u3002\u4ee5\u4e0b\u793a\u4f8b\u5c55\u793a\u4e86\u4e00\u4e2a\u8fd4\u56de\u4e24\u4e2a\u6574\u6570\u4e58\u79ef\u7684\u51fd\u6570\u3002 \u793a\u4f8b\uff1a #include <iostream> using namespace std; // \u5b9a\u4e49\u4e00\u4e2a\u8fd4\u56de\u4e24\u4e2a\u6574\u6570\u4e58\u79ef\u7684\u51fd\u6570 int multiply(int a, int b) { // \u8ba1\u7b97\u4e58\u79ef\u5e76\u8fd4\u56de\u7ed3\u679c return a * b; } int main() { int num1 = 5; int num2 = 7; // \u8c03\u7528 multiply \u51fd\u6570\u5e76\u4fdd\u5b58\u8fd4\u56de\u503c int result = multiply(num1, num2); cout << \"Multiplication Result: \" << result << endl; return 0; } \u89e3\u91ca\uff1a - multiply \u51fd\u6570\u63a5\u53d7\u4e24\u4e2a int \u7c7b\u578b\u7684\u53c2\u6570 a \u548c b \uff0c\u8fd4\u56de\u7c7b\u578b\u662f int \uff0c\u8868\u793a\u5b83\u4f1a\u8fd4\u56de\u4e00\u4e2a\u6574\u6570\u3002 - \u51fd\u6570\u4f53\u4e2d\uff0c\u4f7f\u7528 a * b \u8ba1\u7b97\u4e58\u79ef\uff0c\u5e76\u4f7f\u7528 return \u8bed\u53e5\u5c06\u7ed3\u679c\u8fd4\u56de\u3002 - \u5728 main \u51fd\u6570\u4e2d\uff0c\u8c03\u7528 multiply \u51fd\u6570\uff0c\u5e76\u5c06\u8fd4\u56de\u7684\u7ed3\u679c\u4fdd\u5b58\u5728\u53d8\u91cf result \u4e2d\uff0c\u6700\u540e\u5c06\u7ed3\u679c\u8f93\u51fa\u5230\u5c4f\u5e55\u4e0a\u3002","title":"3.3.1 \u5b9a\u4e49\u4e00\u4e2a\u8fd4\u56deint\u7c7b\u578b\u7684\u51fd\u6570"},{"location":"lesson3/Lesson3%20C%2B%2B/#332-string","text":"\u6211\u4eec\u8fd8\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u8fd4\u56de string \u7c7b\u578b\u7684\u51fd\u6570\u3002\u4ee5\u4e0b\u662f\u4e00\u4e2a\u793a\u4f8b\uff0c\u5c55\u793a\u4e86\u5982\u4f55\u8fde\u63a5\u4e24\u4e2a\u5b57\u7b26\u4e32\u5e76\u8fd4\u56de\u7ed3\u679c\u3002 \u793a\u4f8b\uff1a #include <iostream> using namespace std; // \u5b9a\u4e49\u4e00\u4e2a\u8fde\u63a5\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u51fd\u6570 string concatenateStrings(string str1, string str2) { // \u8fde\u63a5\u5b57\u7b26\u4e32\u5e76\u8fd4\u56de\u7ed3\u679c return str1 + \" \" + str2; } int main() { string firstName = \"John\"; string lastName = \"Doe\"; // \u8c03\u7528 concatenateStrings \u51fd\u6570\u5e76\u4fdd\u5b58\u8fd4\u56de\u503c string fullName = concatenateStrings(firstName, lastName); cout << \"Full Name: \" << fullName << endl; return 0; } \u89e3\u91ca\uff1a - concatenateStrings \u51fd\u6570\u63a5\u53d7\u4e24\u4e2a string \u7c7b\u578b\u7684\u53c2\u6570 str1 \u548c str2 \uff0c\u8fd4\u56de\u7c7b\u578b\u662f string \u3002 - \u51fd\u6570\u4f53\u4e2d\uff0c\u4f7f\u7528 + \u8fd0\u7b97\u7b26\u8fde\u63a5\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u5e76\u5728\u5b83\u4eec\u4e4b\u95f4\u52a0\u4e86\u4e00\u4e2a\u7a7a\u683c\uff0c\u7136\u540e\u8fd4\u56de\u8fde\u63a5\u540e\u7684\u5b57\u7b26\u4e32\u3002 - \u5728 main \u51fd\u6570\u4e2d\uff0c\u8c03\u7528 concatenateStrings \u51fd\u6570\uff0c\u5e76\u5c06\u8fd4\u56de\u7684\u5b8c\u6574\u59d3\u540d\u4fdd\u5b58\u5728\u53d8\u91cf fullName \u4e2d\uff0c\u6700\u540e\u5c06\u7ed3\u679c\u8f93\u51fa\u5230\u5c4f\u5e55\u4e0a\u3002","title":"3.3.2 \u5b9a\u4e49\u4e00\u4e2a\u8fd4\u56destring\u7c7b\u578b\u7684\u51fd\u6570"},{"location":"lesson3/Lesson3%20C%2B%2B/#333-float","text":"float \u7c7b\u578b\u7528\u4e8e\u5b58\u50a8\u5e26\u5c0f\u6570\u70b9\u7684\u6570\u5b57\u3002\u4f60\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u8fd4\u56de float \u7c7b\u578b\u7684\u51fd\u6570\uff0c\u6267\u884c\u6d6e\u70b9\u6570\u8fd0\u7b97\u3002 \u793a\u4f8b\uff1a #include <iostream> using namespace std; // \u5b9a\u4e49\u4e00\u4e2a\u8fd4\u56de\u4e24\u4e2a\u6d6e\u70b9\u6570\u548c\u7684\u51fd\u6570 float addFloats(float a, float b) { return a + b; } int main() { float num1 = 5.5; float num2 = 7.3; // \u8c03\u7528 addFloats \u51fd\u6570\u5e76\u63a5\u6536\u8fd4\u56de\u503c float result = addFloats(num1, num2); cout << \"Sum of floats: \" << result << endl; return 0; } \u89e3\u91ca\uff1a - addFloats \u51fd\u6570\u63a5\u53d7\u4e24\u4e2a float \u7c7b\u578b\u7684\u53c2\u6570 a \u548c b \uff0c\u8fd4\u56de\u5b83\u4eec\u7684\u548c\u3002 - \u5728 main \u51fd\u6570\u4e2d\uff0c\u901a\u8fc7\u8c03\u7528 addFloats \u5e76\u63a5\u6536\u8fd4\u56de\u7684\u6d6e\u70b9\u6570\u7ed3\u679c\uff0c\u7136\u540e\u6253\u5370\u8f93\u51fa\u3002","title":"3.3.3 \u8fd4\u56de float \u7c7b\u578b\u7684\u51fd\u6570"},{"location":"lesson3/Lesson3%20C%2B%2B/#334-bool","text":"bool \u7c7b\u578b\u7528\u4e8e\u8868\u793a\u5e03\u5c14\u503c\uff0c\u5373 true \uff08\u771f\uff09\u6216 false \uff08\u5047\uff09\u3002\u4f60\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u6bd4\u8f83\u4e24\u4e2a\u6570\u5b57\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u5e03\u5c14\u503c\u3002 \u793a\u4f8b\uff1a #include <iostream> using namespace std; // \u5b9a\u4e49\u4e00\u4e2a\u6bd4\u8f83\u4e24\u4e2a\u6574\u6570\u5927\u5c0f\u7684\u51fd\u6570 bool isGreater(int a, int b) { return a > b; } int main() { int num1 = 10; int num2 = 20; // \u8c03\u7528 isGreater \u51fd\u6570\u5e76\u63a5\u6536\u8fd4\u56de\u503c bool result = isGreater(num1, num2); cout << \"Is num1 greater than num2? \" << (result ? \"Yes\" : \"No\") << endl; return 0; } \u89e3\u91ca\uff1a - isGreater \u51fd\u6570\u63a5\u53d7\u4e24\u4e2a int \u7c7b\u578b\u7684\u53c2\u6570 a \u548c b \uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a bool \u7c7b\u578b\u7684\u503c\uff0c\u8868\u793a a \u662f\u5426\u5927\u4e8e b \u3002 - \u5728 main \u51fd\u6570\u4e2d\uff0c\u901a\u8fc7\u8c03\u7528 isGreater \u5e76\u63a5\u6536\u8fd4\u56de\u7684\u5e03\u5c14\u503c\uff0c\u7136\u540e\u6839\u636e\u7ed3\u679c\u8f93\u51fa \"Yes\" \u6216 \"No\"\u3002","title":"3.3.4 \u8fd4\u56de bool \u7c7b\u578b\u7684\u51fd\u6570"},{"location":"lesson3/Lesson3%20C%2B%2B/#335-char","text":"char \u7c7b\u578b\u7528\u4e8e\u5b58\u50a8\u5355\u4e2a\u5b57\u7b26\u3002\u4f60\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u8fd4\u56de char \u7c7b\u578b\u7684\u51fd\u6570\uff0c\u5904\u7406\u5b57\u7b26\u6570\u636e\u3002 \u793a\u4f8b\uff1a #include <iostream> using namespace std; // \u5b9a\u4e49\u4e00\u4e2a\u83b7\u53d6\u5b57\u7b26\u4e32\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7684\u51fd\u6570 char getFirstChar(string str) { return str[0]; } int main() { string name = \"Alice\"; // \u8c03\u7528 getFirstChar \u51fd\u6570\u5e76\u63a5\u6536\u8fd4\u56de\u503c char firstChar = getFirstChar(name); cout << \"The first character is: \" << firstChar << endl; return 0; } \u89e3\u91ca\uff1a - getFirstChar \u51fd\u6570\u63a5\u53d7\u4e00\u4e2a string \u7c7b\u578b\u7684\u53c2\u6570 str \uff0c\u5e76\u8fd4\u56de\u8be5\u5b57\u7b26\u4e32\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u3002 - \u5728 main \u51fd\u6570\u4e2d\uff0c\u901a\u8fc7\u8c03\u7528 getFirstChar \u5e76\u63a5\u6536\u8fd4\u56de\u7684\u5b57\u7b26\uff0c\u7136\u540e\u6253\u5370\u8f93\u51fa\u3002","title":"3.3.5 \u8fd4\u56de char \u7c7b\u578b\u7684\u51fd\u6570"},{"location":"lesson3/Lesson3%20C%2B%2B/#4","text":"\u5728C++\u4e2d\uff0c\u51fd\u6570\u7684\u53c2\u6570\u4f20\u9012\u65b9\u5f0f\u6709\u4e24\u79cd\uff1a\u503c\u4f20\u9012\uff08pass-by-value\uff09\u548c\u5f15\u7528\u4f20\u9012\uff08pass-by-reference\uff09\u3002\u7406\u89e3\u8fd9\u4e24\u79cd\u65b9\u5f0f\u7684\u533a\u522b\u5bf9\u4e8e\u7f16\u5199\u9ad8\u6548\u548c\u6b63\u786e\u7684\u4ee3\u7801\u81f3\u5173\u91cd\u8981\u3002","title":"4. \u53c2\u6570\u4f20\u9012\u65b9\u5f0f"},{"location":"lesson3/Lesson3%20C%2B%2B/#41-pass-by-value","text":"\u503c\u4f20\u9012\u662f\u5c06\u5b9e\u9645\u53c2\u6570\u7684\u503c\u590d\u5236\u5230\u51fd\u6570\u7684\u5f62\u53c2\u53d8\u91cf\u4e2d\u3002\u51fd\u6570\u5185\u90e8\u5bf9\u53c2\u6570\u7684\u4fee\u6539\u4e0d\u4f1a\u5f71\u54cd\u5b9e\u9645\u53c2\u6570\u3002 \u793a\u4f8b\uff1a #include <iostream> using namespace std; // \u5b9a\u4e49\u4e00\u4e2a\u5e26\u6709\u503c\u4f20\u9012\u7684\u51fd\u6570 void increment(int a) { a++; } int main() { int num = 10; increment(num); cout << \"After increment: \" << num << endl; // \u8f93\u51fa\uff1a10 return 0; } \u89e3\u91ca\uff1a - \u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c increment \u51fd\u6570\u5bf9\u53c2\u6570 a \u8fdb\u884c\u4e86\u81ea\u589e\u64cd\u4f5c\uff0c\u4f46 main \u51fd\u6570\u4e2d\u7684\u53d8\u91cf num \u4e0d\u53d7\u5f71\u54cd\uff0c\u56e0\u4e3a a \u662f num \u7684\u526f\u672c\u3002","title":"4.1 \u503c\u4f20\u9012\uff08Pass-by-Value\uff09"},{"location":"lesson3/Lesson3%20C%2B%2B/#42-pass-by-reference","text":"\u5f15\u7528\u4f20\u9012\u5c06\u53c2\u6570\u7684\u5f15\u7528\u4f20\u9012\u7ed9\u51fd\u6570\u3002\u51fd\u6570\u5185\u90e8\u5bf9\u53c2\u6570\u7684\u4fee\u6539\u4f1a\u76f4\u63a5\u5f71\u54cd\u5b9e\u9645\u53c2\u6570\u3002 \u793a\u4f8b\uff1a #include <iostream> using namespace std; // \u5b9a\u4e49\u4e00\u4e2a\u5e26\u6709\u5f15\u7528\u4f20\u9012\u7684\u51fd\u6570 void increment(int& a) { a++; } int main() { int num = 10; increment(num); cout << \"After increment: \" << num << endl; // \u8f93\u51fa\uff1a11 return 0; } \u89e3\u91ca\uff1a - \u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c increment \u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u5f15\u7528\u53c2\u6570 a \uff0c\u5bf9 a \u7684\u4fee\u6539\u4f1a\u76f4\u63a5\u5f71\u54cd main \u51fd\u6570\u4e2d\u7684\u53d8\u91cf num \u3002","title":"4.2 \u5f15\u7528\u4f20\u9012\uff08Pass-by-Reference\uff09"},{"location":"lesson3/Lesson3%20C%2B%2B/#5","text":"\u901a\u8fc7\u7ec3\u4e60\uff0c\u53ef\u4ee5\u5de9\u56fa\u5bf9\u51fd\u6570\u5b9a\u4e49\u548c\u53c2\u6570\u4f20\u9012\u7684\u7406\u89e3\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u7ec3\u4e60\u9898\uff0c\u5e2e\u52a9\u4f60\u66f4\u597d\u5730\u638c\u63e1\u672c\u8282\u5185\u5bb9\u3002","title":"5. \u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson3/Lesson3%20C%2B%2B/#51","text":"\u8bf7\u5c06\u4e0b\u5217\u4ee3\u7801\uff08Lesson2\u8bfe\u540e\u7ec3\u4e60\uff09\u7684\u70b9\u5355\u3001\u6253\u5370\u5ba2\u6237\u70b9\u5355\u5185\u5bb9\u3001\u8ba1\u7b97\u8ba2\u5355\u603b\u4ef7\u4e09\u4e2a\u529f\u80fd\u5c01\u88c5\u6210\u72ec\u7acb\u7684\u65b9\u6cd5\u3002 \u539f\u59cb\u4ee3\u7801\uff1a #include <iostream> #include <string> using namespace std; int main() { // \u5b9a\u4e49\u4ef7\u683c\u5e38\u91cf const double BURGER_PRICE = 12.5; const double FRIES_PRICE = 6.0; const double COKE_PRICE = 4.5; // \u521d\u59cb\u5316\u603b\u9500\u552e\u989d double totalSales = 0.0; // \u5f00\u59cb\u5faa\u73af\uff0c\u76f4\u5230\u987e\u5ba2\u9009\u62e9\u9000\u51fa while (true) { // \u521d\u59cb\u5316\u70b9\u5355\u6570\u91cf int option = 0; int burgers = 0; int fries = 0; int cokes = 0; // \u83b7\u53d6\u7528\u6237\u70b9\u5355 cout << \"\\n\u8bf7\u70b9\u5355\uff08\u8f93\u5165-1\u9000\u51fa\uff0c\u5176\u4ed6\u6574\u6570\u8fdb\u5165\u70b9\u5355\uff09\uff1a\"; cin >> option; // \u5982\u679c\u8f93\u5165\u4e3a-1\uff0c\u5219\u9000\u51fa\u5faa\u73af if (option == -1) { break; } cout << \"\u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf\uff1a\"; cin >> burgers; cout << \"\u8bf7\u8f93\u5165\u85af\u6761\u7684\u6570\u91cf\uff1a\"; cin >> fries; cout << \"\u8bf7\u8f93\u5165\u53ef\u4e50\u7684\u6570\u91cf\uff1a\"; cin >> cokes; // \u6253\u5370\u5ba2\u6237\u70b9\u5355\u5185\u5bb9 cout << \"\\n\u5ba2\u6237\u70b9\u5355\u5185\u5bb9\uff1a\" << endl; if (burgers > 0) { cout << \"\u6c49\u5821 x \" << burgers << endl; } if (fries > 0) { cout << \"\u85af\u6761 x \" << fries << endl; } if (cokes > 0) { cout << \"\u53ef\u4e50 x \" << cokes << endl; } // \u8ba1\u7b97\u672c\u6b21\u70b9\u5355\u7684\u603b\u4ef7 double orderTotal = burgers * BURGER_PRICE + fries * FRIES_PRICE + cokes * COKE_PRICE; // \u7d2f\u52a0\u5230\u603b\u9500\u552e\u989d totalSales += orderTotal; // \u6253\u5370\u672c\u6b21\u70b9\u5355\u7684\u603b\u4ef7 cout << \"\\n\u672c\u6b21\u70b9\u5355\u603b\u4ef7\uff1a\" << orderTotal << \" \u5143\" << endl; } // \u6253\u5370\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d cout << \"\\n\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d\uff1a\" << totalSales << \" \u5143\" << endl; return 0; } \u53c2\u8003\u7b54\u6848\uff1a #include <iostream> #include <string> using namespace std; // \u5b9a\u4e49\u4ef7\u683c\u5e38\u91cf const double BURGER_PRICE = 12.5; const double FRIES_PRICE = 6.0; const double COKE_PRICE = 4.5; // \u83b7\u53d6\u7528\u6237\u7684\u70b9\u5355\u9009\u9879 int getUserOption() { int option; cout << \"\\n\u8bf7\u70b9\u5355\uff08\u8f93\u5165-1\u9000\u51fa\uff0c\u5176\u4ed6\u6574\u6570\u8fdb\u5165\u70b9\u5355\uff09\uff1a\"; cin >> option; return option; } // \u83b7\u53d6\u7279\u5b9a\u5546\u54c1\u7684\u6570\u91cf int getQuantity(const string& itemName) { int quantity; cout << \"\u8bf7\u8f93\u5165\" << itemName << \"\u7684\u6570\u91cf\uff1a\"; cin >> quantity; return quantity; } // \u6253\u5370\u5ba2\u6237\u70b9\u5355\u5185\u5bb9 void printOrderDetails(int burgers, int fries, int cokes) { cout << \"\\n\u5ba2\u6237\u70b9\u5355\u5185\u5bb9\uff1a\" << endl; if (burgers > 0) { cout << \"\u6c49\u5821 x \" << burgers << endl; } if (fries > 0) { cout << \"\u85af\u6761 x \" << fries << endl; } if (cokes > 0) { cout << \"\u53ef\u4e50 x \" << cokes << endl; } } // \u8ba1\u7b97\u8ba2\u5355\u603b\u4ef7 double calculateOrderTotal(int burgers, int fries, int cokes) { return burgers * BURGER_PRICE + fries * FRIES_PRICE + cokes * COKE_PRICE; } int main() { double totalSales = 0.0; while (true) { int option = getUserOption(); if (option == -1) { break; } int burgers = getQuantity(\"\u6c49\u5821\"); int fries = getQuantity(\"\u85af\u6761\"); int cokes = getQuantity(\"\u53ef\u4e50\"); printOrderDetails(burgers, fries, cokes); double orderTotal = calculateOrderTotal(burgers, fries, cokes); totalSales += orderTotal; cout << \"\\n\u672c\u6b21\u70b9\u5355\u603b\u4ef7\uff1a\" << orderTotal << \" \u5143\" << endl; } cout << \"\\n\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d\uff1a\" << totalSales << \" \u5143\" << endl; return 0; } \u8bf4\u660e\uff1a getUserOption \u51fd\u6570\uff1a \u8d1f\u8d23\u83b7\u53d6\u7528\u6237\u7684\u70b9\u5355\u9009\u9879\u3002 getQuantity \u51fd\u6570\uff1a \u8d1f\u8d23\u83b7\u53d6\u7279\u5b9a\u5546\u54c1\u7684\u6570\u91cf\uff0c\u53c2\u6570\u4e3a\u5546\u54c1\u540d\u79f0\u3002 printOrderDetails \u51fd\u6570\uff1a \u8d1f\u8d23\u6253\u5370\u5ba2\u6237\u7684\u70b9\u5355\u5185\u5bb9\uff0c\u53c2\u6570\u4e3a\u5404\u5546\u54c1\u7684\u6570\u91cf\u3002 calculateOrderTotal \u51fd\u6570\uff1a \u8d1f\u8d23\u8ba1\u7b97\u8ba2\u5355\u7684\u603b\u4ef7\uff0c\u53c2\u6570\u4e3a\u5404\u5546\u54c1\u7684\u6570\u91cf\uff0c\u8fd4\u56de\u8ba2\u5355\u603b\u4ef7\u3002 main \u51fd\u6570\uff1a \u8d1f\u8d23\u63a7\u5236\u7a0b\u5e8f\u7684\u6d41\u7a0b\uff0c\u8c03\u7528\u4e0a\u8ff0\u51fd\u6570\u5b9e\u73b0\u70b9\u5355\u3001\u8ba1\u7b97\u548c\u6253\u5370\u529f\u80fd\u3002 \u901a\u8fc7\u5c06\u4e0d\u540c\u7684\u529f\u80fd\u5c01\u88c5\u6210\u72ec\u7acb\u7684\u51fd\u6570\uff0c\u4ee3\u7801\u7ed3\u6784\u66f4\u52a0\u6e05\u6670\uff0c\u4fbf\u4e8e\u7ef4\u62a4\u548c\u6269\u5c55\u3002","title":"5.1 \u51fd\u6570\u7684\u5b9a\u4e49"},{"location":"lesson3/Lesson3%20C%2B%2B/#52","text":"\u9898\u76ee\uff1a \u89c2\u5bdf\u4ee5\u4e0b\u4ee3\u7801\uff0c\u5224\u65ad\u53c2\u6570 x \u548c y \u662f\u5b9e\u9645\u53c2\u6570\u8fd8\u662f\u5f62\u5f0f\u53c2\u6570\uff0c\u5b83\u4eec\u662f\u5426\u4f1a\u88ab\u4fee\u6539\uff0c modifyValues \u65b9\u6cd5\u662f\u5426\u4f1a\u5bf9\u5b83\u4eec\u4ea7\u751f\u5f71\u54cd\u3002\u9009\u62e9\u6b63\u786e\u7684\u7b54\u6848\u5e76\u89e3\u91ca\u539f\u56e0\u3002 #include <iostream> using namespace std; void modifyValues(int a, int b) { a = a * 2; b = b + 3; } int main() { int x = 5; int y = 10; modifyValues(x, y); cout << \"x = \" << x << \", y = \" << y << endl; return 0; } A. \u6b63\u786e\uff0c x \u548c y \u7684\u503c\u4f1a\u88ab\u4fee\u6539 B. \u9519\u8bef\uff0c x \u548c y \u7684\u503c\u4e0d\u4f1a\u88ab\u4fee\u6539 \u7b54\u6848\uff1a B. \u9519\u8bef \u7406\u7531\uff1a \u5728 C++ \u4e2d\uff0c\u51fd\u6570\u53c2\u6570\u662f\u6309\u503c\u4f20\u9012\u7684\u3002\u5f53 modifyValues \u51fd\u6570\u88ab\u8c03\u7528\u65f6\uff0c a \u548c b \u662f x \u548c y \u7684\u526f\u672c\uff0c\u5bf9\u5b83\u4eec\u7684\u4fee\u6539\u4e0d\u4f1a\u5f71\u54cd\u5230\u539f\u59cb\u7684 x \u548c y \u3002\u56e0\u6b64\uff0c x \u548c y \u7684\u503c\u4e0d\u4f1a\u88ab\u4fee\u6539\uff0c\u8f93\u51fa\u4ecd\u7136\u662f x = 5, y = 10 \u3002","title":"5.2 \u5f62\u5f0f\u53c2\u6570\u4e0e\u5b9e\u9645\u53c2\u6570\u5224\u65ad\u9898"},{"location":"lesson3/Lesson3%20Java/","text":"Lesson3 Java\u7684\u81ea\u5b9a\u4e49\u51fd\u6570\u4e0e\u53c2\u6570 \u76ee\u5f55 Java\u65b9\u6cd5\u7684\u5b9a\u4e49\u548c\u4f7f\u7528 1.1 \u65b9\u6cd5\u7684\u5b9a\u4e49\u8bed\u6cd5 1.2 \u4fee\u9970\u7b26\uff08Modifiers\uff09 1.3 \u8fd4\u56de\u7c7b\u578b 1.4 \u65b9\u6cd5\u540d\u547d\u540d\u89c4\u5219 Java\u4f20\u53c2\u7684\u4e09\u79cd\u65b9\u5f0f 2.1 \u6309\u503c\u4f20\u9012 2.2 \u6309\u5f15\u7528\u4f20\u9012 \u603b\u7ed3 \u5f62\u5f0f\u53c2\u6570\u4e0e\u5b9e\u9645\u53c2\u6570 3.1 \u5f62\u5f0f\u53c2\u6570\uff08Formal Parameters\uff09 3.2 \u5b9e\u9645\u53c2\u6570\uff08Actual Arguments\uff09 3.3 \u603b\u7ed3 \u8bfe\u540e\u7ec3\u4e60 4.1 \u65b9\u6cd5\u7684\u5b9a\u4e49 4.2 \u5f62\u5f0f\u53c2\u6570\u4e0e\u5b9e\u9645\u53c2\u6570 1. Java\u65b9\u6cd5\u7684\u5b9a\u4e49\u548c\u4f7f\u7528 \u5728Java\u4e2d\uff0c\u65b9\u6cd5\uff08Methods\uff09\u662f\u7528\u6765\u6267\u884c\u7279\u5b9a\u4efb\u52a1\u7684\u4ee3\u7801\u5757\uff0c\u53ef\u4ee5\u88ab\u91cd\u590d\u8c03\u7528\u3002 1.1 \u65b9\u6cd5\u7684\u5b9a\u4e49\u8bed\u6cd5 java \u4fee\u9970\u7b26 \u8fd4\u56de\u7c7b\u578b \u65b9\u6cd5\u540d(\u53c2\u6570\u5217\u8868) { // \u65b9\u6cd5\u4f53 // \u53ef\u4ee5\u5305\u542b\u4e00\u7cfb\u5217\u7684\u8bed\u53e5\u6765\u5b9e\u73b0\u7279\u5b9a\u529f\u80fd // \u53ef\u4ee5\u4f7f\u7528\u53c2\u6570\uff0c\u5e76\u4e14\u53ef\u80fd\u4f1a\u8fd4\u56de\u4e00\u4e2a\u503c } \u4fee\u9970\u7b26\uff08Modifiers\uff09 \uff1a\u53ef\u4ee5\u662f public \u3001 private \u3001 protected \u3002 \u8fd4\u56de\u7c7b\u578b\uff08Return Type\uff09 \uff1a\u65b9\u6cd5\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u503c\u7684\u7c7b\u578b\uff0c\u5982\u679c\u65b9\u6cd5\u4e0d\u8fd4\u56de\u4efb\u4f55\u503c\uff0c\u5219\u4f7f\u7528 void \u3002 \u65b9\u6cd5\u540d\uff08Method Name\uff09 \uff1a\u65b9\u6cd5\u7684\u540d\u79f0\uff0c\u7528\u6765\u5728\u7a0b\u5e8f\u4e2d\u8c03\u7528\u8be5\u65b9\u6cd5\u3002 \u53c2\u6570\u5217\u8868\uff08Parameter List\uff09 \uff1a\u53ef\u9009\u7684\u53c2\u6570\uff0c\u7528\u4e8e\u63a5\u6536\u65b9\u6cd5\u6267\u884c\u6240\u9700\u7684\u8f93\u5165\u6570\u636e\u3002 \u65b9\u6cd5\u4f53\uff08Method Body\uff09 \uff1a\u5305\u542b\u4e86\u5b9e\u73b0\u65b9\u6cd5\u529f\u80fd\u7684\u4e00\u7cfb\u5217\u8bed\u53e5\u3002 1.2 \u4fee\u9970\u7b26\uff08Modifiers\uff09 \u4fee\u9970\u7b26\u5b9a\u4e49\u4e86\u65b9\u6cd5\u7684\u8bbf\u95ee\u7ea7\u522b\u548c\u884c\u4e3a\u7279\u6027\uff1a public \uff1a\u53ef\u4ee5\u88ab\u4efb\u4f55\u7c7b\u8bbf\u95ee\u3002 private \uff1a\u53ea\u80fd\u5728\u540c\u4e00\u4e2a\u7c7b\u4e2d\u8bbf\u95ee\u3002 protected \uff1a\u53ef\u4ee5\u88ab\u540c\u4e00\u4e2a\u5305\u5185\u7684\u7c7b\u548c\u5b50\u7c7b\u8bbf\u95ee\u3002 \u5bf9\u4e8e\u73b0\u9636\u6bb5\uff0c\u53ea\u9700\u638c\u63e1public\u7c7b\u578b\u65b9\u6cd5\u5373\u53ef\u3002 public \u63cf\u8ff0 \uff1a public \u4fee\u9970\u7b26\u8868\u793a\u65b9\u6cd5\u53ef\u4ee5\u88ab\u4efb\u4f55\u7c7b\u8bbf\u95ee\u3002 \u793a\u4f8b \uff1a ```java public class Main { public static void greet(String name) { System.out.println(\"Hello, \" + name + \"!\"); } public static void main(String[] args) { greet(\"Alice\"); // \u8f93\u51fa\uff1aHello, Alice! } } ``` 1.3 \u8fd4\u56de\u7c7b\u578b \u8fd4\u56de\u7c7b\u578b\u6307\u5b9a\u4e86\u65b9\u6cd5\u8fd4\u56de\u7684\u6570\u636e\u7c7b\u578b\u3002\u5982\u679c\u65b9\u6cd5\u4e0d\u8fd4\u56de\u4efb\u4f55\u503c\uff0c\u5219\u4f7f\u7528 void \u3002 \u793a\u4f8b1\uff1a\u8fd4\u56de\u7c7b\u578b\u4e3a int java public class MathUtils { public int add(int a, int b) { return a + b; } } \u793a\u4f8b2\uff1a\u8fd4\u56de\u7c7b\u578b\u4e3a void java public class Printer { public void printMessage(String message) { System.out.println(message); } } 1.4 \u65b9\u6cd5\u540d\u547d\u540d\u89c4\u5219 \u65b9\u6cd5\u540d\u5fc5\u987b\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u6807\u8bc6\u7b26\uff08identifier\uff09\uff0c\u9075\u5faa\u4ee5\u4e0b\u89c4\u5219\uff1a \u65b9\u6cd5\u540d\u53ef\u4ee5\u5305\u542b\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u4e0b\u5212\u7ebf\u548c\u7f8e\u5143\u7b26\u53f7\u3002 \u65b9\u6cd5\u540d\u4e0d\u80fd\u4ee5\u6570\u5b57\u5f00\u5934\u3002 \u65b9\u6cd5\u540d\u4e0d\u5e94\u8be5\u662fJava\u5173\u952e\u5b57\u3002 \u65b9\u6cd5\u540d\u5e94\u8be5\u5177\u6709\u63cf\u8ff0\u6027\uff0c\u6e05\u6670\u5730\u8868\u8fbe\u65b9\u6cd5\u7684\u529f\u80fd\u3002 2. Java\u4f20\u53c2\u7684\u4e24\u79cd\u65b9\u5f0f \u5728Java\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u65b9\u5f0f\u6765\u4f20\u9012\u53c2\u6570\u7ed9\u65b9\u6cd5\u6216\u51fd\u6570\u3002\u4e0b\u9762\u5c06\u4ecb\u7ecdJava\u4f20\u53c2\u7684\u4e24\u79cd\u5e38\u89c1\u65b9\u5f0f\uff1a\u6309\u503c\u4f20\u9012\u548c\u6309\u5f15\u7528\u4f20\u9012\u3002 2.1 \u6309\u503c\u4f20\u9012 \u6309\u503c\u4f20\u9012\u610f\u5473\u7740\u5c06\u53c2\u6570\u7684\u503c\u590d\u5236\u4e00\u4efd\uff0c\u7136\u540e\u5c06\u8fd9\u4efd\u590d\u5236\u7684\u503c\u4f20\u9012\u7ed9\u65b9\u6cd5\u3002\u5728\u65b9\u6cd5\u5185\u90e8\u5bf9\u53c2\u6570\u7684\u4fee\u6539\u4e0d\u4f1a\u5f71\u54cd\u5230\u539f\u59cb\u53c2\u6570\u3002\u8fd9\u79cd\u65b9\u5f0f\u9002\u7528\u4e8e\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff08\u5982 int \u3001 double \u7b49\uff09\u3002 \u793a\u4f8b \uff1a public void swap(int a, int b) { int temp = a; a = b; b = temp; } public static void main(String[] args) { int x = 10; int y = 20; swap(x, y); System.out.println(\"x = \" + x); // \u8f93\u51fa\uff1ax = 10 System.out.println(\"y = \" + y); // \u8f93\u51fa\uff1ay = 20 } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u867d\u7136 swap \u65b9\u6cd5\u5185\u90e8\u4ea4\u6362\u4e86 a \u548c b \u7684\u503c\uff0c\u4f46\u8fd9\u5e76\u4e0d\u4f1a\u5f71\u54cd main \u65b9\u6cd5\u4e2d\u7684 x \u548c y \uff0c\u56e0\u4e3a\u4f20\u9012\u7684\u662f\u503c\u7684\u526f\u672c\u3002 2.2 \u6309\u5f15\u7528\u4f20\u9012 \u6309\u5f15\u7528\u4f20\u9012\u610f\u5473\u7740\u5c06\u53c2\u6570\u7684\u5f15\u7528\uff08\u5185\u5b58\u5730\u5740\uff09\u4f20\u9012\u7ed9\u65b9\u6cd5\u3002\u5728\u65b9\u6cd5\u5185\u90e8\u5bf9\u53c2\u6570\u7684\u4fee\u6539\u4f1a\u5f71\u54cd\u5230\u539f\u59cb\u53c2\u6570\u3002\u5728Java\u4e2d\uff0c\u9664\u4e86\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u5176\u4ed6\u6240\u6709\u7684\u6570\u636e\u7c7b\u578b\uff08\u5982\u6570\u7ec4\u548c\u5bf9\u8c61\uff09\u90fd\u662f\u6309\u5f15\u7528\u4f20\u9012\u7684\u3002 \u793a\u4f8b \uff1a public void swap(int[] array) { int temp = array[0]; array[0] = array[1]; array[1] = temp; } public static void main(String[] args) { int[] nums = {10, 20}; swap(nums); System.out.println(\"nums[0] = \" + nums[0]); // \u8f93\u51fa\uff1anums[0] = 20 System.out.println(\"nums[1] = \" + nums[1]); // \u8f93\u51fa\uff1anums[1] = 10 } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u4f20\u9012\u4e86\u4e00\u4e2a\u6570\u7ec4 nums \u7ed9 swap \u65b9\u6cd5\uff0c\u65b9\u6cd5\u5185\u90e8\u5bf9\u6570\u7ec4\u5143\u7d20\u7684\u4ea4\u6362\u64cd\u4f5c\u4f1a\u76f4\u63a5\u5f71\u54cd\u5230\u539f\u59cb\u6570\u7ec4\u3002 \u603b\u7ed3 \u6309\u503c\u4f20\u9012 \uff1a\u4f20\u9012\u53c2\u6570\u503c\u7684\u526f\u672c\uff0c\u4e0d\u4f1a\u5f71\u54cd\u539f\u59cb\u53c2\u6570\u3002 \u6309\u5f15\u7528\u4f20\u9012 \uff1a\u4f20\u9012\u53c2\u6570\u7684\u5f15\u7528\uff0c\u65b9\u6cd5\u5185\u90e8\u7684\u4fee\u6539\u4f1a\u5f71\u54cd\u539f\u59cb\u53c2\u6570\u3002 \u6839\u636e\u5177\u4f53\u7684\u9700\u6c42\uff0c\u9009\u62e9\u5408\u9002\u7684\u53c2\u6570\u4f20\u9012\u65b9\u5f0f\u53ef\u4ee5\u66f4\u597d\u5730\u5b9e\u73b0\u7a0b\u5e8f\u529f\u80fd\u3002 3. \u5f62\u5f0f\u53c2\u6570\u4e0e\u5b9e\u9645\u53c2\u6570 \u5728Java\u4e2d\uff0c\u51fd\u6570\u7684\u53c2\u6570\u5206\u4e3a\u5f62\u5f0f\u53c2\u6570\uff08\u5f62\u53c2\uff09\u548c\u5b9e\u9645\u53c2\u6570\uff08\u5b9e\u53c2\uff09\u3002\u8fd9\u4e24\u8005\u5728\u51fd\u6570\u8c03\u7528\u548c\u5b9a\u4e49\u4e2d\u626e\u6f14\u4e0d\u540c\u7684\u89d2\u8272\uff1a 3.1 \u5f62\u5f0f\u53c2\u6570\uff08Formal Parameters\uff09 \u5f62\u5f0f\u53c2\u6570\u662f\u5728\u51fd\u6570\u5b9a\u4e49\u65f6\u58f0\u660e\u7684\u53c2\u6570\uff0c\u5b83\u4eec\u4f5c\u4e3a\u51fd\u6570\u7684\u4e00\u90e8\u5206\uff0c\u7528\u6765\u63a5\u6536\u8c03\u7528\u51fd\u6570\u65f6\u4f20\u9012\u7684\u5b9e\u9645\u53c2\u6570\u7684\u503c\u3002\u5f62\u5f0f\u53c2\u6570\u5728\u51fd\u6570\u5b9a\u4e49\u7684\u62ec\u53f7\u5185\u90e8\u58f0\u660e\uff0c\u5e76\u6307\u5b9a\u5b83\u4eec\u7684\u7c7b\u578b\u548c\u540d\u79f0\u3002\u4f8b\u5982\uff0c\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u51fd\u6570\u5b9a\u4e49\uff0c\u5b83\u6709\u4e24\u4e2a\u5f62\u5f0f\u53c2\u6570\uff1a java public void calculateSum(int a, int b) { // \u51fd\u6570\u4f53 int sum = a + b; System.out.println(\"Sum: \" + sum); } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c calculateSum \u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u63a5\u53d7\u4e24\u4e2a\u5f62\u5f0f\u53c2\u6570 a \u548c b \uff0c\u5b83\u4eec\u7684\u7c7b\u578b\u90fd\u662f int \u3002\u8fd9\u4e9b\u5f62\u5f0f\u53c2\u6570\u5728\u51fd\u6570\u88ab\u8c03\u7528\u65f6\u7528\u4e8e\u63a5\u6536\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u5b9e\u9645\u53c2\u6570\u7684\u503c\u3002 3.2 \u5b9e\u9645\u53c2\u6570\uff08Actual Arguments\uff09 \u5b9e\u9645\u53c2\u6570\u662f\u5728\u8c03\u7528\u51fd\u6570\u65f6\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u503c\u6216\u8005\u8868\u8fbe\u5f0f\u3002\u5b83\u4eec\u662f\u771f\u6b63\u7528\u6765\u6267\u884c\u51fd\u6570\u64cd\u4f5c\u7684\u6570\u636e\u3002\u5728\u51fd\u6570\u8c03\u7528\u65f6\uff0c\u5b9e\u9645\u53c2\u6570\u88ab\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u5f62\u5f0f\u53c2\u6570\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u662f\u5982\u4f55\u8c03\u7528\u4e0a\u9762\u5b9a\u4e49\u7684 calculateSum \u51fd\u6570\uff0c\u5e76\u4f20\u9012\u5b9e\u9645\u53c2\u6570\uff1a ```java public class Main { public static void main(String[] args) { int num1 = 10; int num2 = 20; // \u8c03\u7528\u51fd\u6570\u5e76\u4f20\u9012\u5b9e\u9645\u53c2\u6570 calculateSum(num1, num2); } // \u5b9a\u4e49\u51fd\u6570 public static void calculateSum(int a, int b) { // \u51fd\u6570\u4f53 int sum = a + b; System.out.println(\"Sum: \" + sum); } } ``` \u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c num1 \u548c num2 \u662f main \u51fd\u6570\u4e2d\u7684\u4e24\u4e2a\u53d8\u91cf\uff0c\u5b83\u4eec\u4f5c\u4e3a\u5b9e\u9645\u53c2\u6570\u4f20\u9012\u7ed9 calculateSum \u51fd\u6570\u3002\u5728\u51fd\u6570\u8c03\u7528 calculateSum(num1, num2); \u4e2d\uff0c num1 \u548c num2 \u5206\u522b\u4f20\u9012\u7ed9 a \u548c b \u5f62\u5f0f\u53c2\u6570\uff0c\u8fdb\u800c\u5728\u51fd\u6570\u5185\u90e8\u8ba1\u7b97\u5b83\u4eec\u7684\u548c\u3002 3.3 \u603b\u7ed3 \u5f62\u5f0f\u53c2\u6570\u662f\u5728\u51fd\u6570\u5b9a\u4e49\u4e2d\u58f0\u660e\u7684\u53d8\u91cf\uff0c\u5b83\u4eec\u7528\u4e8e\u63a5\u6536\u5b9e\u9645\u53c2\u6570\u7684\u503c\u3002 \u5b9e\u9645\u53c2\u6570\u662f\u5728\u51fd\u6570\u8c03\u7528\u65f6\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u503c\u6216\u8868\u8fbe\u5f0f\uff0c\u5b83\u4eec\u88ab\u4f20\u9012\u7ed9\u5f62\u5f0f\u53c2\u6570\uff0c\u7528\u4e8e\u51fd\u6570\u6267\u884c\u3002 4. \u8bfe\u540e\u7ec3\u4e60 4.1 \u65b9\u6cd5\u7684\u5b9a\u4e49 \u9898\u76ee 1: \u5728MathUtils\u4e2d\u5b9a\u4e49 multiply \u65b9\u6cd5\uff0c\u5b83\u4f1a\u63a5\u53d7\u4e24\u4e2a float \u53c2\u6570\uff0c\u5e76\u8fd4\u56de\u5b83\u4eec\u7684\u4e58\u79ef\u3002 ```java public class MathUtils { // To be implemented public static void main(String[] args) { MathUtils utils = new MathUtils(); float product = utils.multiply(5.5f, 3.2f); System.out.println(\"The product is: \" + product); // \u8f93\u51fa\u5e94\u8be5\u662f 17.6 } } \u89e3\u7b54 java public class MathUtils { public float multiply(float a, float b) { return a * b; } public static void main(String[] args) { MathUtils utils = new MathUtils(); float product = utils.multiply(5.5f, 3.2f); System.out.println(\"The product is: \" + product); // \u8f93\u51fa\u5e94\u8be5\u662f 17.6 } } ``` \u9898\u76ee 2: \u8bf7\u5c06\u4e0b\u5217\u4ee3\u7801\uff08Lesson2\u8bfe\u540e\u7ec3\u4e60\uff09\u7684\u70b9\u5355\u3001\u6253\u5370\u5ba2\u6237\u70b9\u5355\u5185\u5bb9\u3001\u8ba1\u7b97\u8ba2\u5355\u603b\u4ef7\u4e09\u4e2a\u529f\u80fd\u5c01\u88c5\u6210\u72ec\u7acb\u7684\u65b9\u6cd5\u3002 ```java import java.util.Scanner; public class RestaurantOrder { public static void main(String[] args) { // \u5b9a\u4e49\u4ef7\u683c\u5e38\u91cf final double BURGER_PRICE = 12.5; final double FRIES_PRICE = 6.0; final double COKE_PRICE = 4.5; // \u521b\u5efaScanner\u5bf9\u8c61\u4ee5\u83b7\u53d6\u7528\u6237\u8f93\u5165 Scanner scanner = new Scanner(System.in); // \u521d\u59cb\u5316\u603b\u9500\u552e\u989d double totalSales = 0.0; // \u5f00\u59cb\u5faa\u73af\uff0c\u76f4\u5230\u987e\u5ba2\u9009\u62e9\u9000\u51fa while (true) { // \u521d\u59cb\u5316\u70b9\u5355\u6570\u91cf int option = 0; int burgers = 0; int fries = 0; int cokes = 0; // \u83b7\u53d6\u7528\u6237\u70b9\u5355 System.out.print(\"\\n\u8bf7\u70b9\u5355\uff08\u8f93\u5165-1\u9000\u51fa\uff0c\u5176\u4ed6\u6574\u6570\u8fdb\u5165\u70b9\u5355\uff09\uff1a\"); option = scanner.nextInt(); // \u5982\u679c\u8f93\u5165\u4e3a0\uff0c\u5219\u9000\u51fa\u5faa\u73af if (option == -1) { break; } System.out.print(\"\u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf\uff1a\"); burgers = scanner.nextInt(); System.out.print(\"\u8bf7\u8f93\u5165\u85af\u6761\u7684\u6570\u91cf\uff1a\"); fries = scanner.nextInt(); System.out.print(\"\u8bf7\u8f93\u5165\u53ef\u4e50\u7684\u6570\u91cf\uff1a\"); cokes = scanner.nextInt(); // \u6253\u5370\u5ba2\u6237\u70b9\u5355\u5185\u5bb9 System.out.println(\"\\n\u5ba2\u6237\u70b9\u5355\u5185\u5bb9\uff1a\"); if (burgers > 0) { System.out.println(\"\u6c49\u5821 x \" + burgers); } if (fries > 0) { System.out.println(\"\u85af\u6761 x \" + fries); } if (cokes > 0) { System.out.println(\"\u53ef\u4e50 x \" + cokes); } // \u8ba1\u7b97\u672c\u6b21\u70b9\u5355\u7684\u603b\u4ef7 double orderTotal = burgers * BURGER_PRICE + fries * FRIES_PRICE + cokes * COKE_PRICE; // \u7d2f\u52a0\u5230\u603b\u9500\u552e\u989d totalSales += orderTotal; // \u6253\u5370\u672c\u6b21\u70b9\u5355\u7684\u603b\u4ef7 System.out.println(\"\\n\u672c\u6b21\u70b9\u5355\u603b\u4ef7\uff1a\" + orderTotal + \" \u5143\"); } // \u6253\u5370\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d System.out.println(\"\\n\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d\uff1a\" + totalSales + \" \u5143\"); // \u5173\u95edScanner scanner.close(); } } ``` \u53c2\u8003\u7b54\u6848 ```java import java.util.Scanner; public class RestaurantOrder { // \u5b9a\u4e49\u4ef7\u683c\u5e38\u91cf private static final double BURGER_PRICE = 12.5; private static final double FRIES_PRICE = 6.0; private static final double COKE_PRICE = 4.5; public static void main(String[] args) { Scanner scanner = new Scanner(System.in); double totalSales = 0.0; while (true) { int option = getUserOption(scanner); if (option == -1) { break; } int burgers = getQuantity(scanner, \"\u6c49\u5821\"); int fries = getQuantity(scanner, \"\u85af\u6761\"); int cokes = getQuantity(scanner, \"\u53ef\u4e50\"); printOrderDetails(burgers, fries, cokes); double orderTotal = calculateOrderTotal(burgers, fries, cokes); totalSales += orderTotal; System.out.println(\"\\n\u672c\u6b21\u70b9\u5355\u603b\u4ef7\uff1a\" + orderTotal + \" \u5143\"); } System.out.println(\"\\n\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d\uff1a\" + totalSales + \" \u5143\"); scanner.close(); } // \u83b7\u53d6\u7528\u6237\u7684\u70b9\u5355\u9009\u9879 private static int getUserOption(Scanner scanner) { System.out.print(\"\\n\u8bf7\u70b9\u5355\uff08\u8f93\u5165-1\u9000\u51fa\uff0c\u5176\u4ed6\u6574\u6570\u8fdb\u5165\u70b9\u5355\uff09\uff1a\"); return scanner.nextInt(); } // \u83b7\u53d6\u7279\u5b9a\u5546\u54c1\u7684\u6570\u91cf private static int getQuantity(Scanner scanner, String itemName) { System.out.print(\"\u8bf7\u8f93\u5165\" + itemName + \"\u7684\u6570\u91cf\uff1a\"); return scanner.nextInt(); } // \u6253\u5370\u5ba2\u6237\u70b9\u5355\u5185\u5bb9 private static void printOrderDetails(int burgers, int fries, int cokes) { System.out.println(\"\\n\u5ba2\u6237\u70b9\u5355\u5185\u5bb9\uff1a\"); if (burgers > 0) { System.out.println(\"\u6c49\u5821 x \" + burgers); } if (fries > 0) { System.out.println(\"\u85af\u6761 x \" + fries); } if (cokes > 0) { System.out.println(\"\u53ef\u4e50 x \" + cokes); } } // \u8ba1\u7b97\u8ba2\u5355\u603b\u4ef7 private static double calculateOrderTotal(int burgers, int fries, int cokes) { return burgers * BURGER_PRICE + fries * FRIES_PRICE + cokes * COKE_PRICE; } } ``` 4.2 \u5f62\u5f0f\u53c2\u6570\u4e0e\u5b9e\u9645\u53c2\u6570 \u5224\u65ad\u9898 \u9898\u76ee\uff1a \u89c2\u5bdf\u4ee5\u4e0b\u4ee3\u7801\uff0c\u5224\u65ad\u53c2\u6570 x \u548c y \u662f\u5b9e\u9645\u53c2\u6570\u8fd8\u662f\u5f62\u5f0f\u53c2\u6570\uff0c\u5b83\u4eec\u662f\u5426\u4f1a\u88ab\u4fee\u6539\uff0c modifyValues \u65b9\u6cd5\u662f\u5426\u4f1a\u5bf9\u5b83\u4eec\u4ea7\u751f\u5f71\u54cd\u3002\u9009\u62e9\u6b63\u786e\u7684\u7b54\u6848\u5e76\u89e3\u91ca\u539f\u56e0\u3002 public class Test { public static void main(String[] args) { int x = 5; int y = 10; modifyValues(x, y); System.out.println(\"x = \" + x + \", y = \" + y); } public static void modifyValues(int a, int b) { a = a * 2; b = b + 3; } } A. \u6b63\u786e\uff0c x \u548c y \u7684\u503c\u4f1a\u88ab\u4fee\u6539 B. \u9519\u8bef\uff0c x \u548c y \u7684\u503c\u4e0d\u4f1a\u88ab\u4fee\u6539 \u7b54\u6848\uff1a B. \u9519\u8bef \u7406\u7531\uff1a \u5728 Java \u4e2d\uff0c\u65b9\u6cd5\u53c2\u6570\u662f\u6309\u503c\u4f20\u9012\u7684\u3002\u5f53 modifyValues \u65b9\u6cd5\u88ab\u8c03\u7528\u65f6\uff0c a \u548c b \u662f x \u548c y \u7684\u526f\u672c\uff0c\u5bf9\u5b83\u4eec\u7684\u4fee\u6539\u4e0d\u4f1a\u5f71\u54cd\u5230\u539f\u59cb\u7684 x \u548c y \u3002\u56e0\u6b64\uff0c x \u548c y \u7684\u503c\u4e0d\u4f1a\u88ab\u4fee\u6539\uff0c\u8f93\u51fa\u4ecd\u7136\u662f x = 5, y = 10 \u3002","title":"Lesson3 Java\u7684\u81ea\u5b9a\u4e49\u51fd\u6570\u4e0e\u53c2\u6570"},{"location":"lesson3/Lesson3%20Java/#lesson3-java","text":"","title":"Lesson3 Java\u7684\u81ea\u5b9a\u4e49\u51fd\u6570\u4e0e\u53c2\u6570"},{"location":"lesson3/Lesson3%20Java/#_1","text":"Java\u65b9\u6cd5\u7684\u5b9a\u4e49\u548c\u4f7f\u7528 1.1 \u65b9\u6cd5\u7684\u5b9a\u4e49\u8bed\u6cd5 1.2 \u4fee\u9970\u7b26\uff08Modifiers\uff09 1.3 \u8fd4\u56de\u7c7b\u578b 1.4 \u65b9\u6cd5\u540d\u547d\u540d\u89c4\u5219 Java\u4f20\u53c2\u7684\u4e09\u79cd\u65b9\u5f0f 2.1 \u6309\u503c\u4f20\u9012 2.2 \u6309\u5f15\u7528\u4f20\u9012 \u603b\u7ed3 \u5f62\u5f0f\u53c2\u6570\u4e0e\u5b9e\u9645\u53c2\u6570 3.1 \u5f62\u5f0f\u53c2\u6570\uff08Formal Parameters\uff09 3.2 \u5b9e\u9645\u53c2\u6570\uff08Actual Arguments\uff09 3.3 \u603b\u7ed3 \u8bfe\u540e\u7ec3\u4e60 4.1 \u65b9\u6cd5\u7684\u5b9a\u4e49 4.2 \u5f62\u5f0f\u53c2\u6570\u4e0e\u5b9e\u9645\u53c2\u6570","title":"\u76ee\u5f55"},{"location":"lesson3/Lesson3%20Java/#1-java","text":"\u5728Java\u4e2d\uff0c\u65b9\u6cd5\uff08Methods\uff09\u662f\u7528\u6765\u6267\u884c\u7279\u5b9a\u4efb\u52a1\u7684\u4ee3\u7801\u5757\uff0c\u53ef\u4ee5\u88ab\u91cd\u590d\u8c03\u7528\u3002","title":"1. Java\u65b9\u6cd5\u7684\u5b9a\u4e49\u548c\u4f7f\u7528"},{"location":"lesson3/Lesson3%20Java/#11","text":"java \u4fee\u9970\u7b26 \u8fd4\u56de\u7c7b\u578b \u65b9\u6cd5\u540d(\u53c2\u6570\u5217\u8868) { // \u65b9\u6cd5\u4f53 // \u53ef\u4ee5\u5305\u542b\u4e00\u7cfb\u5217\u7684\u8bed\u53e5\u6765\u5b9e\u73b0\u7279\u5b9a\u529f\u80fd // \u53ef\u4ee5\u4f7f\u7528\u53c2\u6570\uff0c\u5e76\u4e14\u53ef\u80fd\u4f1a\u8fd4\u56de\u4e00\u4e2a\u503c } \u4fee\u9970\u7b26\uff08Modifiers\uff09 \uff1a\u53ef\u4ee5\u662f public \u3001 private \u3001 protected \u3002 \u8fd4\u56de\u7c7b\u578b\uff08Return Type\uff09 \uff1a\u65b9\u6cd5\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u503c\u7684\u7c7b\u578b\uff0c\u5982\u679c\u65b9\u6cd5\u4e0d\u8fd4\u56de\u4efb\u4f55\u503c\uff0c\u5219\u4f7f\u7528 void \u3002 \u65b9\u6cd5\u540d\uff08Method Name\uff09 \uff1a\u65b9\u6cd5\u7684\u540d\u79f0\uff0c\u7528\u6765\u5728\u7a0b\u5e8f\u4e2d\u8c03\u7528\u8be5\u65b9\u6cd5\u3002 \u53c2\u6570\u5217\u8868\uff08Parameter List\uff09 \uff1a\u53ef\u9009\u7684\u53c2\u6570\uff0c\u7528\u4e8e\u63a5\u6536\u65b9\u6cd5\u6267\u884c\u6240\u9700\u7684\u8f93\u5165\u6570\u636e\u3002 \u65b9\u6cd5\u4f53\uff08Method Body\uff09 \uff1a\u5305\u542b\u4e86\u5b9e\u73b0\u65b9\u6cd5\u529f\u80fd\u7684\u4e00\u7cfb\u5217\u8bed\u53e5\u3002","title":"1.1 \u65b9\u6cd5\u7684\u5b9a\u4e49\u8bed\u6cd5"},{"location":"lesson3/Lesson3%20Java/#12-modifiers","text":"\u4fee\u9970\u7b26\u5b9a\u4e49\u4e86\u65b9\u6cd5\u7684\u8bbf\u95ee\u7ea7\u522b\u548c\u884c\u4e3a\u7279\u6027\uff1a public \uff1a\u53ef\u4ee5\u88ab\u4efb\u4f55\u7c7b\u8bbf\u95ee\u3002 private \uff1a\u53ea\u80fd\u5728\u540c\u4e00\u4e2a\u7c7b\u4e2d\u8bbf\u95ee\u3002 protected \uff1a\u53ef\u4ee5\u88ab\u540c\u4e00\u4e2a\u5305\u5185\u7684\u7c7b\u548c\u5b50\u7c7b\u8bbf\u95ee\u3002 \u5bf9\u4e8e\u73b0\u9636\u6bb5\uff0c\u53ea\u9700\u638c\u63e1public\u7c7b\u578b\u65b9\u6cd5\u5373\u53ef\u3002","title":"1.2 \u4fee\u9970\u7b26\uff08Modifiers\uff09"},{"location":"lesson3/Lesson3%20Java/#public","text":"\u63cf\u8ff0 \uff1a public \u4fee\u9970\u7b26\u8868\u793a\u65b9\u6cd5\u53ef\u4ee5\u88ab\u4efb\u4f55\u7c7b\u8bbf\u95ee\u3002 \u793a\u4f8b \uff1a ```java public class Main { public static void greet(String name) { System.out.println(\"Hello, \" + name + \"!\"); } public static void main(String[] args) { greet(\"Alice\"); // \u8f93\u51fa\uff1aHello, Alice! } } ```","title":"public"},{"location":"lesson3/Lesson3%20Java/#13","text":"\u8fd4\u56de\u7c7b\u578b\u6307\u5b9a\u4e86\u65b9\u6cd5\u8fd4\u56de\u7684\u6570\u636e\u7c7b\u578b\u3002\u5982\u679c\u65b9\u6cd5\u4e0d\u8fd4\u56de\u4efb\u4f55\u503c\uff0c\u5219\u4f7f\u7528 void \u3002 \u793a\u4f8b1\uff1a\u8fd4\u56de\u7c7b\u578b\u4e3a int java public class MathUtils { public int add(int a, int b) { return a + b; } } \u793a\u4f8b2\uff1a\u8fd4\u56de\u7c7b\u578b\u4e3a void java public class Printer { public void printMessage(String message) { System.out.println(message); } }","title":"1.3 \u8fd4\u56de\u7c7b\u578b"},{"location":"lesson3/Lesson3%20Java/#14","text":"\u65b9\u6cd5\u540d\u5fc5\u987b\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u6807\u8bc6\u7b26\uff08identifier\uff09\uff0c\u9075\u5faa\u4ee5\u4e0b\u89c4\u5219\uff1a \u65b9\u6cd5\u540d\u53ef\u4ee5\u5305\u542b\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u4e0b\u5212\u7ebf\u548c\u7f8e\u5143\u7b26\u53f7\u3002 \u65b9\u6cd5\u540d\u4e0d\u80fd\u4ee5\u6570\u5b57\u5f00\u5934\u3002 \u65b9\u6cd5\u540d\u4e0d\u5e94\u8be5\u662fJava\u5173\u952e\u5b57\u3002 \u65b9\u6cd5\u540d\u5e94\u8be5\u5177\u6709\u63cf\u8ff0\u6027\uff0c\u6e05\u6670\u5730\u8868\u8fbe\u65b9\u6cd5\u7684\u529f\u80fd\u3002","title":"1.4 \u65b9\u6cd5\u540d\u547d\u540d\u89c4\u5219"},{"location":"lesson3/Lesson3%20Java/#2-java","text":"\u5728Java\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u65b9\u5f0f\u6765\u4f20\u9012\u53c2\u6570\u7ed9\u65b9\u6cd5\u6216\u51fd\u6570\u3002\u4e0b\u9762\u5c06\u4ecb\u7ecdJava\u4f20\u53c2\u7684\u4e24\u79cd\u5e38\u89c1\u65b9\u5f0f\uff1a\u6309\u503c\u4f20\u9012\u548c\u6309\u5f15\u7528\u4f20\u9012\u3002","title":"2. Java\u4f20\u53c2\u7684\u4e24\u79cd\u65b9\u5f0f"},{"location":"lesson3/Lesson3%20Java/#21","text":"\u6309\u503c\u4f20\u9012\u610f\u5473\u7740\u5c06\u53c2\u6570\u7684\u503c\u590d\u5236\u4e00\u4efd\uff0c\u7136\u540e\u5c06\u8fd9\u4efd\u590d\u5236\u7684\u503c\u4f20\u9012\u7ed9\u65b9\u6cd5\u3002\u5728\u65b9\u6cd5\u5185\u90e8\u5bf9\u53c2\u6570\u7684\u4fee\u6539\u4e0d\u4f1a\u5f71\u54cd\u5230\u539f\u59cb\u53c2\u6570\u3002\u8fd9\u79cd\u65b9\u5f0f\u9002\u7528\u4e8e\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff08\u5982 int \u3001 double \u7b49\uff09\u3002 \u793a\u4f8b \uff1a public void swap(int a, int b) { int temp = a; a = b; b = temp; } public static void main(String[] args) { int x = 10; int y = 20; swap(x, y); System.out.println(\"x = \" + x); // \u8f93\u51fa\uff1ax = 10 System.out.println(\"y = \" + y); // \u8f93\u51fa\uff1ay = 20 } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u867d\u7136 swap \u65b9\u6cd5\u5185\u90e8\u4ea4\u6362\u4e86 a \u548c b \u7684\u503c\uff0c\u4f46\u8fd9\u5e76\u4e0d\u4f1a\u5f71\u54cd main \u65b9\u6cd5\u4e2d\u7684 x \u548c y \uff0c\u56e0\u4e3a\u4f20\u9012\u7684\u662f\u503c\u7684\u526f\u672c\u3002","title":"2.1 \u6309\u503c\u4f20\u9012"},{"location":"lesson3/Lesson3%20Java/#22","text":"\u6309\u5f15\u7528\u4f20\u9012\u610f\u5473\u7740\u5c06\u53c2\u6570\u7684\u5f15\u7528\uff08\u5185\u5b58\u5730\u5740\uff09\u4f20\u9012\u7ed9\u65b9\u6cd5\u3002\u5728\u65b9\u6cd5\u5185\u90e8\u5bf9\u53c2\u6570\u7684\u4fee\u6539\u4f1a\u5f71\u54cd\u5230\u539f\u59cb\u53c2\u6570\u3002\u5728Java\u4e2d\uff0c\u9664\u4e86\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u5176\u4ed6\u6240\u6709\u7684\u6570\u636e\u7c7b\u578b\uff08\u5982\u6570\u7ec4\u548c\u5bf9\u8c61\uff09\u90fd\u662f\u6309\u5f15\u7528\u4f20\u9012\u7684\u3002 \u793a\u4f8b \uff1a public void swap(int[] array) { int temp = array[0]; array[0] = array[1]; array[1] = temp; } public static void main(String[] args) { int[] nums = {10, 20}; swap(nums); System.out.println(\"nums[0] = \" + nums[0]); // \u8f93\u51fa\uff1anums[0] = 20 System.out.println(\"nums[1] = \" + nums[1]); // \u8f93\u51fa\uff1anums[1] = 10 } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u4f20\u9012\u4e86\u4e00\u4e2a\u6570\u7ec4 nums \u7ed9 swap \u65b9\u6cd5\uff0c\u65b9\u6cd5\u5185\u90e8\u5bf9\u6570\u7ec4\u5143\u7d20\u7684\u4ea4\u6362\u64cd\u4f5c\u4f1a\u76f4\u63a5\u5f71\u54cd\u5230\u539f\u59cb\u6570\u7ec4\u3002","title":"2.2 \u6309\u5f15\u7528\u4f20\u9012"},{"location":"lesson3/Lesson3%20Java/#_2","text":"\u6309\u503c\u4f20\u9012 \uff1a\u4f20\u9012\u53c2\u6570\u503c\u7684\u526f\u672c\uff0c\u4e0d\u4f1a\u5f71\u54cd\u539f\u59cb\u53c2\u6570\u3002 \u6309\u5f15\u7528\u4f20\u9012 \uff1a\u4f20\u9012\u53c2\u6570\u7684\u5f15\u7528\uff0c\u65b9\u6cd5\u5185\u90e8\u7684\u4fee\u6539\u4f1a\u5f71\u54cd\u539f\u59cb\u53c2\u6570\u3002 \u6839\u636e\u5177\u4f53\u7684\u9700\u6c42\uff0c\u9009\u62e9\u5408\u9002\u7684\u53c2\u6570\u4f20\u9012\u65b9\u5f0f\u53ef\u4ee5\u66f4\u597d\u5730\u5b9e\u73b0\u7a0b\u5e8f\u529f\u80fd\u3002","title":"\u603b\u7ed3"},{"location":"lesson3/Lesson3%20Java/#3","text":"\u5728Java\u4e2d\uff0c\u51fd\u6570\u7684\u53c2\u6570\u5206\u4e3a\u5f62\u5f0f\u53c2\u6570\uff08\u5f62\u53c2\uff09\u548c\u5b9e\u9645\u53c2\u6570\uff08\u5b9e\u53c2\uff09\u3002\u8fd9\u4e24\u8005\u5728\u51fd\u6570\u8c03\u7528\u548c\u5b9a\u4e49\u4e2d\u626e\u6f14\u4e0d\u540c\u7684\u89d2\u8272\uff1a","title":"3. \u5f62\u5f0f\u53c2\u6570\u4e0e\u5b9e\u9645\u53c2\u6570"},{"location":"lesson3/Lesson3%20Java/#31-formal-parameters","text":"\u5f62\u5f0f\u53c2\u6570\u662f\u5728\u51fd\u6570\u5b9a\u4e49\u65f6\u58f0\u660e\u7684\u53c2\u6570\uff0c\u5b83\u4eec\u4f5c\u4e3a\u51fd\u6570\u7684\u4e00\u90e8\u5206\uff0c\u7528\u6765\u63a5\u6536\u8c03\u7528\u51fd\u6570\u65f6\u4f20\u9012\u7684\u5b9e\u9645\u53c2\u6570\u7684\u503c\u3002\u5f62\u5f0f\u53c2\u6570\u5728\u51fd\u6570\u5b9a\u4e49\u7684\u62ec\u53f7\u5185\u90e8\u58f0\u660e\uff0c\u5e76\u6307\u5b9a\u5b83\u4eec\u7684\u7c7b\u578b\u548c\u540d\u79f0\u3002\u4f8b\u5982\uff0c\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u51fd\u6570\u5b9a\u4e49\uff0c\u5b83\u6709\u4e24\u4e2a\u5f62\u5f0f\u53c2\u6570\uff1a java public void calculateSum(int a, int b) { // \u51fd\u6570\u4f53 int sum = a + b; System.out.println(\"Sum: \" + sum); } \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c calculateSum \u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u5b83\u63a5\u53d7\u4e24\u4e2a\u5f62\u5f0f\u53c2\u6570 a \u548c b \uff0c\u5b83\u4eec\u7684\u7c7b\u578b\u90fd\u662f int \u3002\u8fd9\u4e9b\u5f62\u5f0f\u53c2\u6570\u5728\u51fd\u6570\u88ab\u8c03\u7528\u65f6\u7528\u4e8e\u63a5\u6536\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u5b9e\u9645\u53c2\u6570\u7684\u503c\u3002","title":"3.1 \u5f62\u5f0f\u53c2\u6570\uff08Formal Parameters\uff09"},{"location":"lesson3/Lesson3%20Java/#32-actual-arguments","text":"\u5b9e\u9645\u53c2\u6570\u662f\u5728\u8c03\u7528\u51fd\u6570\u65f6\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u503c\u6216\u8005\u8868\u8fbe\u5f0f\u3002\u5b83\u4eec\u662f\u771f\u6b63\u7528\u6765\u6267\u884c\u51fd\u6570\u64cd\u4f5c\u7684\u6570\u636e\u3002\u5728\u51fd\u6570\u8c03\u7528\u65f6\uff0c\u5b9e\u9645\u53c2\u6570\u88ab\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u5f62\u5f0f\u53c2\u6570\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u662f\u5982\u4f55\u8c03\u7528\u4e0a\u9762\u5b9a\u4e49\u7684 calculateSum \u51fd\u6570\uff0c\u5e76\u4f20\u9012\u5b9e\u9645\u53c2\u6570\uff1a ```java public class Main { public static void main(String[] args) { int num1 = 10; int num2 = 20; // \u8c03\u7528\u51fd\u6570\u5e76\u4f20\u9012\u5b9e\u9645\u53c2\u6570 calculateSum(num1, num2); } // \u5b9a\u4e49\u51fd\u6570 public static void calculateSum(int a, int b) { // \u51fd\u6570\u4f53 int sum = a + b; System.out.println(\"Sum: \" + sum); } } ``` \u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c num1 \u548c num2 \u662f main \u51fd\u6570\u4e2d\u7684\u4e24\u4e2a\u53d8\u91cf\uff0c\u5b83\u4eec\u4f5c\u4e3a\u5b9e\u9645\u53c2\u6570\u4f20\u9012\u7ed9 calculateSum \u51fd\u6570\u3002\u5728\u51fd\u6570\u8c03\u7528 calculateSum(num1, num2); \u4e2d\uff0c num1 \u548c num2 \u5206\u522b\u4f20\u9012\u7ed9 a \u548c b \u5f62\u5f0f\u53c2\u6570\uff0c\u8fdb\u800c\u5728\u51fd\u6570\u5185\u90e8\u8ba1\u7b97\u5b83\u4eec\u7684\u548c\u3002","title":"3.2 \u5b9e\u9645\u53c2\u6570\uff08Actual Arguments\uff09"},{"location":"lesson3/Lesson3%20Java/#33","text":"\u5f62\u5f0f\u53c2\u6570\u662f\u5728\u51fd\u6570\u5b9a\u4e49\u4e2d\u58f0\u660e\u7684\u53d8\u91cf\uff0c\u5b83\u4eec\u7528\u4e8e\u63a5\u6536\u5b9e\u9645\u53c2\u6570\u7684\u503c\u3002 \u5b9e\u9645\u53c2\u6570\u662f\u5728\u51fd\u6570\u8c03\u7528\u65f6\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u503c\u6216\u8868\u8fbe\u5f0f\uff0c\u5b83\u4eec\u88ab\u4f20\u9012\u7ed9\u5f62\u5f0f\u53c2\u6570\uff0c\u7528\u4e8e\u51fd\u6570\u6267\u884c\u3002","title":"3.3 \u603b\u7ed3"},{"location":"lesson3/Lesson3%20Java/#4","text":"","title":"4. \u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson3/Lesson3%20Java/#41","text":"","title":"4.1 \u65b9\u6cd5\u7684\u5b9a\u4e49"},{"location":"lesson3/Lesson3%20Java/#1-mathutils-multiply-float","text":"```java public class MathUtils { // To be implemented public static void main(String[] args) { MathUtils utils = new MathUtils(); float product = utils.multiply(5.5f, 3.2f); System.out.println(\"The product is: \" + product); // \u8f93\u51fa\u5e94\u8be5\u662f 17.6 } } \u89e3\u7b54 java public class MathUtils { public float multiply(float a, float b) { return a * b; } public static void main(String[] args) { MathUtils utils = new MathUtils(); float product = utils.multiply(5.5f, 3.2f); System.out.println(\"The product is: \" + product); // \u8f93\u51fa\u5e94\u8be5\u662f 17.6 } } ```","title":"\u9898\u76ee 1: \u5728MathUtils\u4e2d\u5b9a\u4e49 multiply \u65b9\u6cd5\uff0c\u5b83\u4f1a\u63a5\u53d7\u4e24\u4e2a float \u53c2\u6570\uff0c\u5e76\u8fd4\u56de\u5b83\u4eec\u7684\u4e58\u79ef\u3002"},{"location":"lesson3/Lesson3%20Java/#2-lesson2","text":"```java import java.util.Scanner; public class RestaurantOrder { public static void main(String[] args) { // \u5b9a\u4e49\u4ef7\u683c\u5e38\u91cf final double BURGER_PRICE = 12.5; final double FRIES_PRICE = 6.0; final double COKE_PRICE = 4.5; // \u521b\u5efaScanner\u5bf9\u8c61\u4ee5\u83b7\u53d6\u7528\u6237\u8f93\u5165 Scanner scanner = new Scanner(System.in); // \u521d\u59cb\u5316\u603b\u9500\u552e\u989d double totalSales = 0.0; // \u5f00\u59cb\u5faa\u73af\uff0c\u76f4\u5230\u987e\u5ba2\u9009\u62e9\u9000\u51fa while (true) { // \u521d\u59cb\u5316\u70b9\u5355\u6570\u91cf int option = 0; int burgers = 0; int fries = 0; int cokes = 0; // \u83b7\u53d6\u7528\u6237\u70b9\u5355 System.out.print(\"\\n\u8bf7\u70b9\u5355\uff08\u8f93\u5165-1\u9000\u51fa\uff0c\u5176\u4ed6\u6574\u6570\u8fdb\u5165\u70b9\u5355\uff09\uff1a\"); option = scanner.nextInt(); // \u5982\u679c\u8f93\u5165\u4e3a0\uff0c\u5219\u9000\u51fa\u5faa\u73af if (option == -1) { break; } System.out.print(\"\u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf\uff1a\"); burgers = scanner.nextInt(); System.out.print(\"\u8bf7\u8f93\u5165\u85af\u6761\u7684\u6570\u91cf\uff1a\"); fries = scanner.nextInt(); System.out.print(\"\u8bf7\u8f93\u5165\u53ef\u4e50\u7684\u6570\u91cf\uff1a\"); cokes = scanner.nextInt(); // \u6253\u5370\u5ba2\u6237\u70b9\u5355\u5185\u5bb9 System.out.println(\"\\n\u5ba2\u6237\u70b9\u5355\u5185\u5bb9\uff1a\"); if (burgers > 0) { System.out.println(\"\u6c49\u5821 x \" + burgers); } if (fries > 0) { System.out.println(\"\u85af\u6761 x \" + fries); } if (cokes > 0) { System.out.println(\"\u53ef\u4e50 x \" + cokes); } // \u8ba1\u7b97\u672c\u6b21\u70b9\u5355\u7684\u603b\u4ef7 double orderTotal = burgers * BURGER_PRICE + fries * FRIES_PRICE + cokes * COKE_PRICE; // \u7d2f\u52a0\u5230\u603b\u9500\u552e\u989d totalSales += orderTotal; // \u6253\u5370\u672c\u6b21\u70b9\u5355\u7684\u603b\u4ef7 System.out.println(\"\\n\u672c\u6b21\u70b9\u5355\u603b\u4ef7\uff1a\" + orderTotal + \" \u5143\"); } // \u6253\u5370\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d System.out.println(\"\\n\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d\uff1a\" + totalSales + \" \u5143\"); // \u5173\u95edScanner scanner.close(); } } ``` \u53c2\u8003\u7b54\u6848 ```java import java.util.Scanner; public class RestaurantOrder { // \u5b9a\u4e49\u4ef7\u683c\u5e38\u91cf private static final double BURGER_PRICE = 12.5; private static final double FRIES_PRICE = 6.0; private static final double COKE_PRICE = 4.5; public static void main(String[] args) { Scanner scanner = new Scanner(System.in); double totalSales = 0.0; while (true) { int option = getUserOption(scanner); if (option == -1) { break; } int burgers = getQuantity(scanner, \"\u6c49\u5821\"); int fries = getQuantity(scanner, \"\u85af\u6761\"); int cokes = getQuantity(scanner, \"\u53ef\u4e50\"); printOrderDetails(burgers, fries, cokes); double orderTotal = calculateOrderTotal(burgers, fries, cokes); totalSales += orderTotal; System.out.println(\"\\n\u672c\u6b21\u70b9\u5355\u603b\u4ef7\uff1a\" + orderTotal + \" \u5143\"); } System.out.println(\"\\n\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d\uff1a\" + totalSales + \" \u5143\"); scanner.close(); } // \u83b7\u53d6\u7528\u6237\u7684\u70b9\u5355\u9009\u9879 private static int getUserOption(Scanner scanner) { System.out.print(\"\\n\u8bf7\u70b9\u5355\uff08\u8f93\u5165-1\u9000\u51fa\uff0c\u5176\u4ed6\u6574\u6570\u8fdb\u5165\u70b9\u5355\uff09\uff1a\"); return scanner.nextInt(); } // \u83b7\u53d6\u7279\u5b9a\u5546\u54c1\u7684\u6570\u91cf private static int getQuantity(Scanner scanner, String itemName) { System.out.print(\"\u8bf7\u8f93\u5165\" + itemName + \"\u7684\u6570\u91cf\uff1a\"); return scanner.nextInt(); } // \u6253\u5370\u5ba2\u6237\u70b9\u5355\u5185\u5bb9 private static void printOrderDetails(int burgers, int fries, int cokes) { System.out.println(\"\\n\u5ba2\u6237\u70b9\u5355\u5185\u5bb9\uff1a\"); if (burgers > 0) { System.out.println(\"\u6c49\u5821 x \" + burgers); } if (fries > 0) { System.out.println(\"\u85af\u6761 x \" + fries); } if (cokes > 0) { System.out.println(\"\u53ef\u4e50 x \" + cokes); } } // \u8ba1\u7b97\u8ba2\u5355\u603b\u4ef7 private static double calculateOrderTotal(int burgers, int fries, int cokes) { return burgers * BURGER_PRICE + fries * FRIES_PRICE + cokes * COKE_PRICE; } } ```","title":"\u9898\u76ee 2: \u8bf7\u5c06\u4e0b\u5217\u4ee3\u7801\uff08Lesson2\u8bfe\u540e\u7ec3\u4e60\uff09\u7684\u70b9\u5355\u3001\u6253\u5370\u5ba2\u6237\u70b9\u5355\u5185\u5bb9\u3001\u8ba1\u7b97\u8ba2\u5355\u603b\u4ef7\u4e09\u4e2a\u529f\u80fd\u5c01\u88c5\u6210\u72ec\u7acb\u7684\u65b9\u6cd5\u3002"},{"location":"lesson3/Lesson3%20Java/#42","text":"","title":"4.2 \u5f62\u5f0f\u53c2\u6570\u4e0e\u5b9e\u9645\u53c2\u6570"},{"location":"lesson3/Lesson3%20Java/#_3","text":"\u9898\u76ee\uff1a \u89c2\u5bdf\u4ee5\u4e0b\u4ee3\u7801\uff0c\u5224\u65ad\u53c2\u6570 x \u548c y \u662f\u5b9e\u9645\u53c2\u6570\u8fd8\u662f\u5f62\u5f0f\u53c2\u6570\uff0c\u5b83\u4eec\u662f\u5426\u4f1a\u88ab\u4fee\u6539\uff0c modifyValues \u65b9\u6cd5\u662f\u5426\u4f1a\u5bf9\u5b83\u4eec\u4ea7\u751f\u5f71\u54cd\u3002\u9009\u62e9\u6b63\u786e\u7684\u7b54\u6848\u5e76\u89e3\u91ca\u539f\u56e0\u3002 public class Test { public static void main(String[] args) { int x = 5; int y = 10; modifyValues(x, y); System.out.println(\"x = \" + x + \", y = \" + y); } public static void modifyValues(int a, int b) { a = a * 2; b = b + 3; } } A. \u6b63\u786e\uff0c x \u548c y \u7684\u503c\u4f1a\u88ab\u4fee\u6539 B. \u9519\u8bef\uff0c x \u548c y \u7684\u503c\u4e0d\u4f1a\u88ab\u4fee\u6539 \u7b54\u6848\uff1a B. \u9519\u8bef \u7406\u7531\uff1a \u5728 Java \u4e2d\uff0c\u65b9\u6cd5\u53c2\u6570\u662f\u6309\u503c\u4f20\u9012\u7684\u3002\u5f53 modifyValues \u65b9\u6cd5\u88ab\u8c03\u7528\u65f6\uff0c a \u548c b \u662f x \u548c y \u7684\u526f\u672c\uff0c\u5bf9\u5b83\u4eec\u7684\u4fee\u6539\u4e0d\u4f1a\u5f71\u54cd\u5230\u539f\u59cb\u7684 x \u548c y \u3002\u56e0\u6b64\uff0c x \u548c y \u7684\u503c\u4e0d\u4f1a\u88ab\u4fee\u6539\uff0c\u8f93\u51fa\u4ecd\u7136\u662f x = 5, y = 10 \u3002","title":"\u5224\u65ad\u9898"},{"location":"lesson3/Lesson3%20Python/","text":"Lesson3 \u81ea\u5b9a\u4e49\u51fd\u6570\uff0c\u5f62\u5f0f\u53c2\u6570\u4e0e\u5b9e\u9645\u53c2\u6570 \u51fd\u6570\u662f\u7ec4\u7ec7\u597d\u7684\uff0c\u53ef\u91cd\u590d\u4f7f\u7528\u7684\uff0c\u7528\u6765\u5b9e\u73b0\u5355\u4e00\uff0c\u6216\u76f8\u5173\u8054\u529f\u80fd\u7684\u4ee3\u7801\u6bb5\u3002 \u51fd\u6570\u80fd\u63d0\u9ad8\u5e94\u7528\u7684\u6a21\u5757\u6027\uff0c\u548c\u4ee3\u7801\u7684\u91cd\u590d\u5229\u7528\u7387\u3002\u4f60\u5df2\u7ecf\u77e5\u9053Python\u63d0\u4f9b\u4e86\u8bb8\u591a\u5185\u5efa\u51fd\u6570\uff0c\u6bd4\u5982print()\u3002\u4f46\u4f60\u4e5f\u53ef\u4ee5\u81ea\u5df1\u521b\u5efa\u51fd\u6570\uff0c\u8fd9\u88ab\u53eb\u505a\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570\u3002 \u76ee\u5f55 Lesson3 \u81ea\u5b9a\u4e49\u51fd\u6570\uff0c\u5f62\u5f0f\u53c2\u6570\u4e0e\u5b9e\u9645\u53c2\u6570 1 \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570 1.1 \u8bed\u6cd5 \u5b9e\u4f8b 2 \u51fd\u6570\u8c03\u7528 3 \u53c2\u6570\u4f20\u9012 3.1 \u53ef\u66f4\u6539(mutable)\u4e0e\u4e0d\u53ef\u66f4\u6539(immutable)\u5bf9\u8c61 3.2 python \u4f20\u4e0d\u53ef\u53d8\u5bf9\u8c61\u5b9e\u4f8b 3.3 \u4f20\u53ef\u53d8\u5bf9\u8c61\u5b9e\u4f8b 4 \u53c2\u6570 4.1 \u5f62\u5f0f\u53c2\u6570\uff08\u5f62\u53c2\uff09 4.2 \u5b9e\u9645\u53c2\u6570\uff08\u5b9e\u53c2\uff09 4.3 \u5f62\u53c2\u548c\u5b9e\u53c2\u7684\u533a\u522b 4.4 \u7c7b\u578b\u548c\u6570\u91cf\u7684\u5339\u914d 4.5 \u5fc5\u9700\u53c2\u6570 4.6 \u5173\u952e\u5b57\u53c2\u6570 4.7 \u9ed8\u8ba4\u53c2\u6570\uff08\u9009\u4fee\uff09 4.8 \u4e0d\u5b9a\u957f\u53c2\u6570\uff08\u9009\u4fee\uff09 5 \u533f\u540d\u51fd\u6570\uff08\u9009\u4fee\uff09 5.1 \u8bed\u6cd5 5.2 \u5b9e\u4f8b 6 return \u8bed\u53e5 6.1 \u57fa\u7840\u7528\u6cd5 6.2 \u63d0\u524d\u7ed3\u675f\u51fd\u6570 6.3 \u5faa\u73af\u4e2d\u7684 return 6.4 \u4f18\u5316\u6761\u4ef6\u5224\u65ad 7 \u5f3a\u5236\u4f4d\u7f6e\u53c2\u6570 \u8bfe\u540e\u7ec3\u4e60 1 \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570 \u4f60\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u7531\u81ea\u5df1\u60f3\u8981\u529f\u80fd\u7684\u51fd\u6570\uff0c\u4ee5\u4e0b\u662f\u7b80\u5355\u7684\u89c4\u5219\uff1a \u51fd\u6570\u4ee3\u7801\u5757\u4ee5 def \u5173\u952e\u8bcd\u5f00\u5934\uff0c\u540e\u63a5\u51fd\u6570\u540d\u548c\u5706\u62ec\u53f7 ()\u3002 \u5706\u62ec\u53f7\u5185\u53ef\u4ee5\u5305\u542b\u4f20\u5165\u7684\u53c2\u6570\u548c\u81ea\u53d8\u91cf\uff0c\u7528\u4e8e\u5b9a\u4e49\u51fd\u6570\u7684\u53c2\u6570\u5217\u8868\u3002 \u51fd\u6570\u7684\u7b2c\u4e00\u884c\u53ef\u4ee5\u9009\u62e9\u6027\u5730\u5305\u542b\u6587\u6863\u5b57\u7b26\u4e32\uff0c\u4ee5\u63d0\u4f9b\u5bf9\u51fd\u6570\u7684\u8bf4\u660e\u3002 \u51fd\u6570\u5185\u5bb9\u4ee5\u5192\u53f7 : \u8d77\u59cb\uff0c\u5e76\u4e14\u51fd\u6570\u5185\u7684\u4ee3\u7801\u7f29\u8fdb\u3002 return [\u8868\u8fbe\u5f0f] \u7ed3\u675f\u51fd\u6570\uff0c\u9009\u62e9\u6027\u5730\u8fd4\u56de\u4e00\u4e2a\u503c\u7ed9\u8c03\u7528\u65b9\uff0c\u4e0d\u5e26\u8868\u8fbe\u5f0f\u7684 return \u76f8\u5f53\u4e8e\u8fd4\u56de None\u3002 1.1 \u8bed\u6cd5 Python \u5b9a\u4e49\u51fd\u6570\u4f7f\u7528 def \u5173\u952e\u5b57\uff0c\u4e00\u822c\u683c\u5f0f\u5982\u4e0b\uff1a def \u51fd\u6570\u540d\uff08\u53c2\u6570\u5217\u8868\uff09: \u51fd\u6570\u4f53 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u53c2\u6570\u503c\u548c\u53c2\u6570\u540d\u79f0\u662f\u6309\u51fd\u6570\u58f0\u660e\u4e2d\u5b9a\u4e49\u7684\u987a\u5e8f\u5339\u914d\u8d77\u6765\u7684\u3002 \u5b9e\u4f8b \u8ba9\u6211\u4eec\u4f7f\u7528\u51fd\u6570\u6765\u8f93\u51fa\"Hello World!\"\uff1a def hello() : print(\"Hello World!\") hello() \u66f4\u590d\u6742\u70b9\u7684\u5e94\u7528\uff0c\u51fd\u6570\u4e2d\u5e26\u4e0a\u53c2\u6570\u53d8\u91cf: \u6bd4\u8f83\u4e24\u4e2a\u6570\uff0c\u5e76\u8fd4\u56de\u8f83\u5927\u7684\u6570: def max(a, b): if a > b: return a else: return b a = 4 b = 5 print(max(a, b)) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a 5 \u8ba1\u7b97\u9762\u79ef\u51fd\u6570: # \u8ba1\u7b97\u9762\u79ef\u51fd\u6570 def area(width, height): return width * height def print_welcome(name): print(f\"Welcome {name}\") print_welcome(\"CodeRaft\") w = 4 h = 5 print(f\"width = {w}, height = {h}, area = {area(w, h)}\") \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a Welcome CodeRaft width = 4 height = 5 area = 20 2 \u51fd\u6570\u8c03\u7528 \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff1a\u7ed9\u4e86\u51fd\u6570\u4e00\u4e2a\u540d\u79f0\uff0c\u6307\u5b9a\u4e86\u51fd\u6570\u91cc\u5305\u542b\u7684\u53c2\u6570\uff0c\u548c\u4ee3\u7801\u5757\u7ed3\u6784\u3002 \u51fd\u6570\u5b9a\u4e49\u5b8c\u6210\u4ee5\u540e\uff0c\u53ef\u4ee5\u8c03\u7528\u6267\u884c\u3002 \u5982\u4e0b\u5b9e\u4f8b\u8c03\u7528\u4e86 printme() \u51fd\u6570\uff1a def printme(s): # \u6253\u5370\u4efb\u4f55\u4f20\u5165\u7684\u5b57\u7b26\u4e32 print(s) return # \u8c03\u7528\u51fd\u6570 printme(\"\u6211\u8981\u8c03\u7528\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570!\") printme(\"\u518d\u6b21\u8c03\u7528\u540c\u4e00\u51fd\u6570\") \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a \u6211\u8981\u8c03\u7528\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570! \u518d\u6b21\u8c03\u7528\u540c\u4e00\u51fd\u6570 3 \u53c2\u6570\u4f20\u9012 \u5728 python \u4e2d\uff0c\u7c7b\u578b\u5c5e\u4e8e\u5bf9\u8c61\uff0c\u5bf9\u8c61\u6709\u4e0d\u540c\u7c7b\u578b\u7684\u533a\u5206\uff0c\u53d8\u91cf\u662f\u6ca1\u6709\u7c7b\u578b\u7684\uff1a a=[1,2,3] a=\"CodeRaft\" \u4ee5\u4e0a\u4ee3\u7801\u4e2d\uff0c [1,2,3] \u662f List \u7c7b\u578b\uff0c \"CodeRaft\" \u662f String \u7c7b\u578b\uff0c\u800c\u53d8\u91cf a \u662f\u6ca1\u6709\u7c7b\u578b\uff0c\u5b83\u4ec5\u4ec5\u662f\u4e00\u4e2a\u5bf9\u8c61\u7684\u5f15\u7528\uff08\u4e00\u4e2a\u6307\u9488\uff09\uff0c\u53ef\u4ee5\u662f\u6307\u5411 List \u7c7b\u578b\u5bf9\u8c61\uff0c\u4e5f\u53ef\u4ee5\u662f\u6307\u5411 String \u7c7b\u578b\u5bf9\u8c61\u3002 3.1 \u53ef\u66f4\u6539(mutable)\u4e0e\u4e0d\u53ef\u66f4\u6539(immutable)\u5bf9\u8c61\uff1a \u5728 python \u4e2d\uff0cstrings, tuples, \u548c numbers \u662f\u4e0d\u53ef\u66f4\u6539\u7684\u5bf9\u8c61\uff0c\u800c list,dict \u7b49\u5219\u662f\u53ef\u4ee5\u4fee\u6539\u7684\u5bf9\u8c61\u3002 \u4e0d\u53ef\u53d8\u7c7b\u578b\uff1a \u53d8\u91cf\u8d4b\u503c a=5 \u540e\u518d\u8d4b\u503c a=10 \uff0c\u8fd9\u91cc\u5b9e\u9645\u662f\u65b0\u751f\u6210\u4e00\u4e2a int \u503c\u5bf9\u8c61 10\uff0c\u518d\u8ba9 a \u6307\u5411\u5b83\uff0c\u800c 5 \u88ab\u4e22\u5f03\uff0c\u4e0d\u662f\u6539\u53d8 a \u7684\u503c\uff0c\u76f8\u5f53\u4e8e\u65b0\u751f\u6210\u4e86 a\u3002 \u53ef\u53d8\u7c7b\u578b\uff1a \u53d8\u91cf\u8d4b\u503c la=[1,2,3,4] \u540e\u518d\u8d4b\u503c la[2]=5 \u5219\u662f\u5c06 list la \u7684\u7b2c\u4e09\u4e2a\u5143\u7d20\u503c\u66f4\u6539\uff0c\u672c\u8eabla\u6ca1\u6709\u52a8\uff0c\u53ea\u662f\u5176\u5185\u90e8\u7684\u4e00\u90e8\u5206\u503c\u88ab\u4fee\u6539\u4e86\u3002 python \u51fd\u6570\u7684\u53c2\u6570\u4f20\u9012\uff1a \u4e0d\u53ef\u53d8\u7c7b\u578b\uff1a \u7c7b\u4f3c C++ \u7684\u503c\u4f20\u9012\uff0c\u5982\u6574\u6570\u3001\u5b57\u7b26\u4e32\u3001\u5143\u7ec4\u3002\u5982 fun(a)\uff0c\u4f20\u9012\u7684\u53ea\u662f a \u7684\u503c\uff0c\u6ca1\u6709\u5f71\u54cd a \u5bf9\u8c61\u672c\u8eab\u3002\u5982\u679c\u5728 fun(a) \u5185\u90e8\u4fee\u6539 a \u7684\u503c\uff0c\u5219\u662f\u65b0\u751f\u6210\u4e00\u4e2a a \u7684\u5bf9\u8c61\u3002 \u53ef\u53d8\u7c7b\u578b\uff1a \u7c7b\u4f3c C++ \u7684\u5f15\u7528\u4f20\u9012\uff0c\u5982 \u5217\u8868\uff0c\u5b57\u5178\u3002\u5982 fun(la)\uff0c\u5219\u662f\u5c06 la \u771f\u6b63\u7684\u4f20\u8fc7\u53bb\uff0c\u4fee\u6539\u540e fun \u5916\u90e8\u7684 la \u4e5f\u4f1a\u53d7\u5f71\u54cd\u3002 python \u4e2d\u4e00\u5207\u90fd\u662f\u5bf9\u8c61\uff0c\u4e25\u683c\u610f\u4e49\u6211\u4eec\u4e0d\u80fd\u8bf4\u503c\u4f20\u9012\u8fd8\u662f\u5f15\u7528\u4f20\u9012\uff0c\u6211\u4eec\u5e94\u8be5\u8bf4\u4f20\u4e0d\u53ef\u53d8\u5bf9\u8c61\u548c\u4f20\u53ef\u53d8\u5bf9\u8c61\u3002 3.2 python \u4f20\u4e0d\u53ef\u53d8\u5bf9\u8c61\u5b9e\u4f8b \u901a\u8fc7 id() \u51fd\u6570\u6765\u67e5\u770b\u5185\u5b58\u5730\u5740\u53d8\u5316\uff1a def change(a): print(id(a)) # \u6307\u5411\u7684\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61 a=10 print(id(a)) # \u4e00\u4e2a\u65b0\u5bf9\u8c61 a=1 print(id(a)) change(a) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a *\u56e0\u6bcf\u53f0\u8bbe\u5907\u800c\u5f02 4326120520 4326120520 4326120808 \u53ef\u4ee5\u770b\u89c1\u5728\u8c03\u7528\u51fd\u6570\u524d\u540e\uff0c\u5f62\u53c2\u548c\u5b9e\u53c2\u6307\u5411\u7684\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\uff08\u5bf9\u8c61 id \u76f8\u540c\uff09\uff0c\u5728\u51fd\u6570\u5185\u90e8\u4fee\u6539\u5f62\u53c2\u540e\uff0c\u5f62\u53c2\u6307\u5411\u7684\u662f\u4e0d\u540c\u7684 id\u3002 3.3 \u4f20\u53ef\u53d8\u5bf9\u8c61\u5b9e\u4f8b \u53ef\u53d8\u5bf9\u8c61\u5728\u51fd\u6570\u91cc\u4fee\u6539\u4e86\u53c2\u6570\uff0c\u90a3\u4e48\u5728\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u7684\u51fd\u6570\u91cc\uff0c\u539f\u59cb\u7684\u53c2\u6570\u4e5f\u88ab\u6539\u53d8\u4e86\u3002\u4f8b\u5982\uff1a def changeme(mylist): mylist.append([1,2,3,4]) print(\"\u51fd\u6570\u5185\u53d6\u503c: \", mylist) return # \u8c03\u7528changeme\u51fd\u6570 mylist = [10,20,30] changeme(mylist) print(\"\u51fd\u6570\u5916\u53d6\u503c: \", mylist) \u4f20\u5165\u51fd\u6570\u7684\u548c\u5728\u672b\u5c3e\u6dfb\u52a0\u65b0\u5185\u5bb9\u7684\u5bf9\u8c61\u7528\u7684\u662f\u540c\u4e00\u4e2a\u5f15\u7528\u3002\u6545\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a \u51fd\u6570\u5185\u53d6\u503c: [10, 20, 30, [1, 2, 3, 4]] \u51fd\u6570\u5916\u53d6\u503c: [10, 20, 30, [1, 2, 3, 4]] \u4f46\u662f\u5982\u679c\u6211\u4eec\u628a\u76f8\u540c\u53d8\u91cf\u540dmylist\u4f5c\u4e3a\u51fd\u6570\u5185\u5c40\u90e8\u53d8\u91cf\uff0c\u5219\u4e0d\u4f1a\u5bf9\u5916\u9762\u540c\u53d8\u91cf\u540d\u7684\u53d8\u91cf\u503c\u4ea7\u751f\u5f71\u54cd\u3002\u4f8b\u5982\uff1a def changeme(mylist): mylist = [1, 2, 3] mylist.append([1,2,3,4]) print(\"\u51fd\u6570\u5185\u53d6\u503c: \", mylist) return # \u8c03\u7528changeme\u51fd\u6570 mylist = [10,20,30] changeme(mylist) print(\"\u51fd\u6570\u5916\u53d6\u503c: \", mylist) \u5728\u51fd\u6570\u5185\u90e8\uff0cmylist\u4ece[10,20,30]\u6307\u5411\u4e86\u65b0\u7684[1\uff0c2\uff0c3]\uff0c\u56e0\u6b64\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a \u51fd\u6570\u5185\u53d6\u503c: [1, 2, 3, [1, 2, 3, 4]] \u51fd\u6570\u5916\u53d6\u503c: [10, 20, 30] 4 \u53c2\u6570 \u4ee5\u4e0b\u662f\u8c03\u7528\u51fd\u6570\u65f6\u53ef\u4f7f\u7528\u7684\u6b63\u5f0f\u53c2\u6570\u7c7b\u578b\uff1a \u5fc5\u9700\u53c2\u6570 \u5173\u952e\u5b57\u53c2\u6570 \u9ed8\u8ba4\u53c2\u6570 \u4e0d\u5b9a\u957f\u53c2\u6570 4.1 \u5f62\u5f0f\u53c2\u6570\uff08\u5f62\u53c2\uff09 \u5f62\u5f0f\u53c2\u6570\u662f\u5728\u51fd\u6570\u5b9a\u4e49\u65f6\u4f7f\u7528\u7684\u53d8\u91cf\u540d\u79f0\uff0c\u7528\u4e8e\u63a5\u6536\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u503c\u3002\u5f62\u53c2\u5728\u51fd\u6570\u4f53\u5185\u5145\u5f53\u5360\u4f4d\u7b26\uff0c\u5728\u51fd\u6570\u8c03\u7528\u65f6\u4f1a\u88ab\u5b9e\u53c2\u66ff\u4ee3\u3002 def greet(name): # name \u662f\u5f62\u5f0f\u53c2\u6570 print(f\"Hello, {name}!\") \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c name \u662f\u4e00\u4e2a\u5f62\u5f0f\u53c2\u6570\u3002\u5f53\u8c03\u7528 greet \u51fd\u6570\u65f6\uff0c name \u5c06\u88ab\u5b9e\u9645\u53c2\u6570\u7684\u503c\u66ff\u6362\u3002 4.2 \u5b9e\u9645\u53c2\u6570\uff08\u5b9e\u53c2\uff09 \u5b9e\u9645\u53c2\u6570\u662f\u5728\u51fd\u6570\u8c03\u7528\u65f6\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u5177\u4f53\u503c\u6216\u53d8\u91cf\u3002\u8fd9\u4e9b\u503c\u66ff\u6362\u51fd\u6570\u5b9a\u4e49\u4e2d\u7684\u5f62\u5f0f\u53c2\u6570\uff0c\u4ee5\u4fbf\u51fd\u6570\u6267\u884c\u64cd\u4f5c\u3002 \u4f8b\u5b50\uff1a greet(\"Alice\") # \"Alice\" \u662f\u5b9e\u9645\u53c2\u6570 \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u8c03\u7528 greet(\"Alice\") \u65f6\uff0c\u5b9e\u9645\u53c2\u6570 \"Alice\" \u4f20\u9012\u7ed9\u4e86\u51fd\u6570\uff0c\u5e76\u66ff\u6362\u4e86\u5f62\u53c2 name \u7684\u503c\u3002\u7ed3\u679c\u662f\u51fd\u6570\u8f93\u51fa\u4e86 \"Hello, Alice!\" \u3002 4.3 \u5f62\u53c2\u548c\u5b9e\u53c2\u7684\u533a\u522b \u5b9a\u4e49\u4f4d\u7f6e \uff1a\u5f62\u53c2\u51fa\u73b0\u5728\u51fd\u6570\u5b9a\u4e49\u4e2d\uff0c\u800c\u5b9e\u53c2\u51fa\u73b0\u5728\u51fd\u6570\u8c03\u7528\u65f6\u3002 \u4f5c\u7528 \uff1a\u5f62\u53c2\u7528\u4e8e\u63a5\u6536\u548c\u6807\u8bc6\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u503c\uff0c\u5b9e\u53c2\u662f\u5b9e\u9645\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u503c\u3002 \u751f\u547d\u5468\u671f \uff1a\u5f62\u53c2\u53ea\u5728\u51fd\u6570\u6267\u884c\u65f6\u5b58\u5728\uff0c\u5b9e\u53c2\u5219\u5728\u8c03\u7528\u8005\u7684\u4e0a\u4e0b\u6587\u4e2d\u5b58\u5728\u3002 4.4 \u7c7b\u578b\u548c\u6570\u91cf\u7684\u5339\u914d \u51fd\u6570\u8c03\u7528\u65f6\uff0c\u5b9e\u53c2\u7684\u6570\u91cf\u548c\u7c7b\u578b\u901a\u5e38\u9700\u8981\u4e0e\u51fd\u6570\u5b9a\u4e49\u4e2d\u7684\u5f62\u53c2\u76f8\u5339\u914d\u3002\u4f8b\u5982\uff0c\u5982\u679c\u51fd\u6570\u5b9a\u4e49\u4e2d\u6709\u4e09\u4e2a\u5f62\u53c2\uff0c\u8c03\u7528\u65f6\u901a\u5e38\u9700\u8981\u63d0\u4f9b\u4e09\u4e2a\u5b9e\u53c2\u3002\u4e0d\u8fc7\uff0cPython\u652f\u6301\u4e00\u4e9b\u9ad8\u7ea7\u529f\u80fd\uff0c\u5982\u9ed8\u8ba4\u53c2\u6570\u3001\u5173\u952e\u5b57\u53c2\u6570\u548c\u53ef\u53d8\u957f\u5ea6\u53c2\u6570\uff0c\u8fd9\u4e9b\u529f\u80fd\u53ef\u4ee5\u63d0\u4f9b\u66f4\u7075\u6d3b\u7684\u53c2\u6570\u4f20\u9012\u65b9\u5f0f\u3002 4.5 \u5fc5\u9700\u53c2\u6570 \u5fc5\u9700\u53c2\u6570\u987b\u4ee5\u6b63\u786e\u7684\u987a\u5e8f\u4f20\u5165\u51fd\u6570\u3002\u8c03\u7528\u65f6\u7684\u6570\u91cf\u5fc5\u987b\u548c\u58f0\u660e\u65f6\u7684\u4e00\u6837\u3002 \u8c03\u7528 printme() \u51fd\u6570\uff0c\u4f60\u5fc5\u987b\u4f20\u5165\u4e00\u4e2a\u53c2\u6570\uff0c\u4e0d\u7136\u4f1a\u51fa\u73b0\u8bed\u6cd5\u9519\u8bef\uff1a #\u53ef\u5199\u51fd\u6570\u8bf4\u660e def printme(s): print(s) return # \u8c03\u7528 printme \u51fd\u6570\uff0c\u4e0d\u52a0\u53c2\u6570\u4f1a\u62a5\u9519 printme() \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a Traceback (most recent call last): File \"test.py\", line 10, in <module> printme() TypeError: printme() missing 1 required positional argument: 'str' 4.6 \u5173\u952e\u5b57\u53c2\u6570 \u5173\u952e\u5b57\u53c2\u6570\u548c\u51fd\u6570\u8c03\u7528\u5173\u7cfb\u7d27\u5bc6\uff0c\u51fd\u6570\u8c03\u7528\u4f7f\u7528\u5173\u952e\u5b57\u53c2\u6570\u6765\u786e\u5b9a\u4f20\u5165\u7684\u53c2\u6570\u503c\u3002 \u4f7f\u7528\u5173\u952e\u5b57\u53c2\u6570\u5141\u8bb8\u51fd\u6570\u8c03\u7528\u65f6\u53c2\u6570\u7684\u987a\u5e8f\u4e0e\u58f0\u660e\u65f6\u4e0d\u4e00\u81f4\uff0c\u56e0\u4e3a Python \u89e3\u91ca\u5668\u80fd\u591f\u7528\u53c2\u6570\u540d\u5339\u914d\u53c2\u6570\u503c\u3002 \u4ee5\u4e0b\u5b9e\u4f8b\u5728\u51fd\u6570 printme() \u8c03\u7528\u65f6\u4f7f\u7528\u53c2\u6570\u540d\uff1a #\u53ef\u5199\u51fd\u6570\u8bf4\u660e def printme(s): # \u6253\u5370\u4efb\u4f55\u4f20\u5165\u7684\u5b57\u7b26\u4e32 print(s) return #\u8c03\u7528printme\u51fd\u6570 printme(s=\"CodeRaft\") \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a CodeRaft \u4ee5\u4e0b\u5b9e\u4f8b\u4e2d\u6f14\u793a\u4e86\u51fd\u6570\u53c2\u6570\u7684\u4f7f\u7528\u4e0d\u9700\u8981\u4f7f\u7528\u6307\u5b9a\u987a\u5e8f\uff1a #\u53ef\u5199\u51fd\u6570\u8bf4\u660e def printinfo(name, age): print(\"\u540d\u5b57: \", name) print(\"\u5e74\u9f84: \", age) return #\u8c03\u7528printinfo\u51fd\u6570 printinfo(age=50, name=\"CodeRaft\") \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a \u540d\u5b57: CodeRaft \u5e74\u9f84: 50 4.7 \u9ed8\u8ba4\u53c2\u6570\uff08\u9009\u4fee\uff09 \u8c03\u7528\u51fd\u6570\u65f6\uff0c\u5982\u679c\u6ca1\u6709\u4f20\u9012\u53c2\u6570\uff0c\u5219\u4f1a\u4f7f\u7528\u9ed8\u8ba4\u53c2\u6570\u3002\u4ee5\u4e0b\u5b9e\u4f8b\u4e2d\u5982\u679c\u6ca1\u6709\u4f20\u5165 age \u53c2\u6570\uff0c\u5219\u4f7f\u7528\u9ed8\u8ba4\u503c\uff1a #\u53ef\u5199\u51fd\u6570\u8bf4\u660e def printinfo(name, age=35): \"\u6253\u5370\u4efb\u4f55\u4f20\u5165\u7684\u5b57\u7b26\u4e32\" print(\"\u540d\u5b57: \", name) print(\"\u5e74\u9f84: \", age) return #\u8c03\u7528printinfo\u51fd\u6570 printinfo(age=50, name=\"CodeRaft\") print(\"------------------------\") printinfo(name=\"CodeRaft\") \u8f93\u51fa\u4e3a\uff1a \u540d\u5b57: CodeRaft \u5e74\u9f84: 50 ------------------------ \u540d\u5b57: CodeRaft \u5e74\u9f84: 35 4.8 \u4e0d\u5b9a\u957f\u53c2\u6570\uff08\u9009\u4fee\uff09 \u4f60\u53ef\u80fd\u9700\u8981\u4e00\u4e2a\u51fd\u6570\u80fd\u5904\u7406\u6bd4\u5f53\u521d\u58f0\u660e\u65f6\u66f4\u591a\u7684\u53c2\u6570\u3002\u8fd9\u4e9b\u53c2\u6570\u53eb\u505a\u4e0d\u5b9a\u957f\u53c2\u6570\uff0c\u548c\u4e0a\u8ff02\u79cd\u53c2\u6570\u4e0d\u540c\uff0c\u58f0\u660e\u65f6\u4e0d\u4f1a\u547d\u540d\u3002\u57fa\u672c\u8bed\u6cd5\u5982\u4e0b\uff1a def functionname([formal_args,] *var_args_tuple): function_suite return [expression] \u52a0\u4e86\u661f\u53f7 * \u7684\u53c2\u6570\u4f1a\u4ee5\u5143\u7ec4(tuple)\u7684\u5f62\u5f0f\u5bfc\u5165\uff0c\u5b58\u653e\u6240\u6709\u672a\u547d\u540d\u7684\u53d8\u91cf\u53c2\u6570\u3002 # \u53ef\u5199\u51fd\u6570\u8bf4\u660e def printinfo(arg1, *vartuple): print(\"\u8f93\u51fa: \") print(arg1) print(vartuple) # \u8c03\u7528printinfo \u51fd\u6570 printinfo(70, 60, 50) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a \u8f93\u51fa: 70 (60, 50) \u5982\u679c\u5728\u51fd\u6570\u8c03\u7528\u65f6\u6ca1\u6709\u6307\u5b9a\u53c2\u6570\uff0c\u5b83\u5c31\u662f\u4e00\u4e2a\u7a7a\u5143\u7ec4\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u4e0d\u5411\u51fd\u6570\u4f20\u9012\u672a\u547d\u540d\u7684\u53d8\u91cf\u3002\u5982\u4e0b\u5b9e\u4f8b\uff1a # \u53ef\u5199\u51fd\u6570\u8bf4\u660e def printinfo(arg1, *vartuple): print(\"\u8f93\u51fa: \") print(arg1) for var in vartuple: print(var) return # \u8c03\u7528printinfo \u51fd\u6570 printinfo(10) printinfo(70, 60, 50) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a \u8f93\u51fa: 10 \u8f93\u51fa: 70 60 50 \u8fd8\u6709\u4e00\u79cd\u5c31\u662f\u53c2\u6570\u5e26\u4e24\u4e2a\u661f\u53f7 ** \u57fa\u672c\u8bed\u6cd5\u5982\u4e0b\uff1a def functionname([formal_args,] **var_args_dict): function_suite return [expression] \u52a0\u4e86\u4e24\u4e2a\u661f\u53f7 ** \u7684\u53c2\u6570\u4f1a\u4ee5\u5b57\u5178\u7684\u5f62\u5f0f\u5bfc\u5165\u3002 # \u53ef\u5199\u51fd\u6570\u8bf4\u660e def printinfo(arg1, **vardict): print(\"\u8f93\u51fa: \") print(arg1) print(vardict) # \u8c03\u7528printinfo \u51fd\u6570 printinfo(1, a=2,b=3) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a \u8f93\u51fa: 1 {'a': 2, 'b': 3} \u58f0\u660e\u51fd\u6570\u65f6\uff0c\u53c2\u6570\u4e2d\u661f\u53f7 * \u53ef\u4ee5\u5355\u72ec\u51fa\u73b0\uff0c\u4f8b\u5982: def f(a,b,*,c): return a+b+c \u5982\u679c\u5355\u72ec\u51fa\u73b0\u661f\u53f7 *\uff0c\u5219\u661f\u53f7 * \u540e\u7684\u53c2\u6570\u5fc5\u987b\u7528\u5173\u952e\u5b57\u4f20\u5165\uff1a >>> def f(a,b,*,c): ... return a+b+c ... >>> f(1,2,3) # \u62a5\u9519 Traceback(most recent call last): File \"<stdin>\", line 1, in <module> TypeError: f() takes 2 positional arguments but 3 were given >>> f(1,2,c=3) # \u6b63\u5e38 6 >>> 5 \u533f\u540d\u51fd\u6570\uff08\u9009\u4fee\uff09 Python \u4f7f\u7528 lambda \u6765\u521b\u5efa\u533f\u540d\u51fd\u6570\u3002 \u6240\u8c13\u533f\u540d\uff0c\u610f\u5373\u4e0d\u518d\u4f7f\u7528 def \u8bed\u53e5\u8fd9\u6837\u6807\u51c6\u7684\u5f62\u5f0f\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u3002 5.1 \u8bed\u6cd5 lambda \u51fd\u6570\u7684\u8bed\u6cd5\u53ea\u5305\u542b\u4e00\u4e2a\u8bed\u53e5\uff0c\u5982\u4e0b\uff1a lambda [arg1 [,arg2,.....argn]]:expression \u8bbe\u7f6e\u53c2\u6570a\u52a0\u4e0a10: x = lambda a : a + 10 print(x(5)) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a 15 5.2 \u5b9e\u4f8b \u4ee5\u4e0b\u5b9e\u4f8b\u533f\u540d\u51fd\u6570\u8bbe\u7f6e\u4e24\u4e2a\u53c2\u6570\uff1a # \u53ef\u5199\u51fd\u6570\u8bf4\u660e sum = lambda arg1, arg2: arg1 + arg2 # \u8c03\u7528sum\u51fd\u6570 print(\"\u76f8\u52a0\u540e\u7684\u503c\u4e3a: \", sum(10, 20)) print(\"\u76f8\u52a0\u540e\u7684\u503c\u4e3a: \", sum(20, 20)) \u6211\u4eec\u53ef\u4ee5\u5c06\u533f\u540d\u51fd\u6570\u5c01\u88c5\u5728\u4e00\u4e2a\u51fd\u6570\u5185\uff0c\u8fd9\u6837\u53ef\u4ee5\u4f7f\u7528\u540c\u6837\u7684\u4ee3\u7801\u6765\u521b\u5efa\u591a\u4e2a\u533f\u540d\u51fd\u6570\u3002 \u4ee5\u4e0b\u5b9e\u4f8b\u5c06\u533f\u540d\u51fd\u6570\u5c01\u88c5\u5728 myfunc \u51fd\u6570\u4e2d\uff0c\u901a\u8fc7\u4f20\u5165\u4e0d\u540c\u7684\u53c2\u6570\u6765\u521b\u5efa\u4e0d\u540c\u7684\u533f\u540d\u51fd\u6570\uff1a def myfunc(n): return lambda a : a * n mydoubler = myfunc(2) mytripler = myfunc(3) print(mydoubler(11)) print(mytripler(11)) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a 22 33 6 return \u8bed\u53e5 6.1 \u57fa\u7840\u7528\u6cd5 return [\u8868\u8fbe\u5f0f] \u8bed\u53e5\u7528\u4e8e\u9000\u51fa\u51fd\u6570\uff0c\u9009\u62e9\u6027\u5730\u5411\u8c03\u7528\u65b9\u8fd4\u56de\u4e00\u4e2a\u8868\u8fbe\u5f0f\u3002\u4e0d\u5e26\u53c2\u6570\u503c\u7684 return \u8bed\u53e5\u8fd4\u56de None\u3002\u4e4b\u524d\u7684\u4f8b\u5b50\u90fd\u6ca1\u6709\u793a\u8303\u5982\u4f55\u8fd4\u56de\u6570\u503c\uff0c\u4ee5\u4e0b\u5b9e\u4f8b\u6f14\u793a\u4e86 return \u8bed\u53e5\u7684\u7528\u6cd5\uff1a # \u5b9a\u4e49\u51fd\u6570 def sum(arg1, arg2): # \u8ba1\u7b97\u4e24\u4e2a\u53c2\u6570\u7684\u548c total = arg1 + arg2 print(\"\u51fd\u6570\u5185:\", total) return total # \u8c03\u7528 sum \u51fd\u6570 total = sum(10, 20) print(\"\u51fd\u6570\u5916:\", total) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a \u51fd\u6570\u5185 : 30 \u51fd\u6570\u5916 : 30 6.2 \u63d0\u524d\u7ed3\u675f\u51fd\u6570 return \u8bed\u53e5\u53ef\u4ee5\u76f4\u63a5\u7ed3\u675f\u51fd\u6570\u7684\u6267\u884c\uff0c\u56e0\u6b64 return \u540e\u9762\u7684\u8bed\u53e5\u5c06\u4e0d\u4f1a\u88ab\u6267\u884c\u3002\u4e0b\u9762\u7684\u793a\u4f8b\u6f14\u793a\u4e86\u8fd9\u4e00\u7279\u6027\uff1a def check_even(number): if number % 2 == 0: return True # \u5982\u679c\u6761\u4ef6\u4e3a\u771f\uff0c\u51fd\u6570\u5728\u6b64\u5904\u7ed3\u675f\uff0c\u540e\u7eed\u4ee3\u7801\u4e0d\u4f1a\u6267\u884c print(\"\u8fd9\u662f\u4e00\u4e2a\u5947\u6570\") return False result = check_even(4) print(\"\u7ed3\u679c:\", result) \u5728\u4e0a\u8ff0\u793a\u4f8b\u4e2d\uff0c\u5982\u679c\u4f20\u5165\u7684\u6570\u5b57\u662f\u5076\u6570\uff0c return True \u4f1a\u76f4\u63a5\u7ec8\u6b62\u51fd\u6570\u7684\u6267\u884c\uff0c\u56e0\u6b64 print(\"\u8fd9\u662f\u4e00\u4e2a\u5947\u6570\") \u4e0d\u4f1a\u88ab\u6267\u884c\u3002\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a \u7ed3\u679c: True 6.3 \u5faa\u73af\u4e2d\u7684 return \u5728\u5faa\u73af\u4e2d\u4f7f\u7528 return \u8bed\u53e5\u4f1a\u5bfc\u81f4\u51fd\u6570\u63d0\u524d\u7ed3\u675f\uff0c\u5faa\u73af\u4e5f\u4f1a\u505c\u6b62\u3002\u4ee5\u4e0b\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u5728\u5faa\u73af\u4e2d\u4f7f\u7528 return \u6765\u627e\u5230\u7b2c\u4e00\u4e2a\u7b26\u5408\u6761\u4ef6\u7684\u5143\u7d20\uff1a def find_first_even(numbers): for number in numbers: if number % 2 == 0: return number # \u4e00\u65e6\u627e\u5230\u5076\u6570\uff0c\u7acb\u5373\u8fd4\u56de\uff0c\u7ed3\u675f\u51fd\u6570 return None # \u5982\u679c\u5faa\u73af\u7ed3\u675f\u6ca1\u6709\u627e\u5230\u5076\u6570\uff0c\u8fd4\u56de None result = find_first_even([1, 3, 5, 6, 7]) print(\"\u7b2c\u4e00\u4e2a\u5076\u6570\u662f:\", result) \u6267\u884c\u8be5\u4ee3\u7801\u540e\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a \u7b2c\u4e00\u4e2a\u5076\u6570\u662f: 6 \u53ef\u4ee5\u770b\u5230\uff0c\u5f53\u51fd\u6570\u627e\u5230\u7b2c\u4e00\u4e2a\u5076\u6570\u65f6\uff0c return \u7acb\u5373\u7ed3\u675f\u51fd\u6570\u7684\u6267\u884c\uff0c\u5e76\u8fd4\u56de\u8be5\u5076\u6570\u3002 6.4 \u4f18\u5316\u6761\u4ef6\u5224\u65ad return \u8bed\u53e5\u4e5f\u53ef\u4ee5\u7528\u4e8e\u7b80\u5316\u6761\u4ef6\u5224\u65ad\u7ed3\u6784\uff0c\u4ece\u800c\u907f\u514d\u4f7f\u7528\u5197\u4f59\u7684 else \u8bed\u53e5\u3002\u4ee5\u4e0b\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 return \u4f7f\u4ee3\u7801\u66f4\u7b80\u6d01\uff1a def is_positive(number): if number > 0: return True return False # \u56e0\u4e3a\u4e0a\u9762\u7684 return \u8bed\u53e5\uff0celse \u53ef\u4ee5\u7701\u7565 result = is_positive(-5) print(\"\u662f\u5426\u4e3a\u6b63\u6570:\", result) \u6b64\u793a\u4f8b\u7684\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a \u662f\u5426\u4e3a\u6b63\u6570: False 7 \u5f3a\u5236\u4f4d\u7f6e\u53c2\u6570 Python 3.8 \u5f15\u5165\u4e86\u4e00\u79cd\u65b0\u7684\u51fd\u6570\u53c2\u6570\u8bed\u6cd5\uff0c\u901a\u8fc7 / \u6765\u6307\u660e\u51fd\u6570\u7684\u67d0\u4e9b\u53c2\u6570\u5fc5\u987b\u4f7f\u7528\u4f4d\u7f6e\u53c2\u6570\uff0c\u800c\u4e0d\u80fd\u4f7f\u7528\u5173\u952e\u5b57\u53c2\u6570\u5f62\u5f0f\u3002\u7c7b\u4f3c\u5730\uff0c\u4f7f\u7528 * \u53ef\u4ee5\u6307\u5b9a\u67d0\u4e9b\u53c2\u6570\u5fc5\u987b\u4f7f\u7528\u5173\u952e\u5b57\u53c2\u6570\u3002 \u5728\u4ee5\u4e0b\u793a\u4f8b\u4e2d\uff1a / \u4e4b\u524d\u7684\u53c2\u6570\uff08 a \u548c b \uff09\u5fc5\u987b\u4f7f\u7528\u4f4d\u7f6e\u53c2\u6570\uff0c\u8fd9\u610f\u5473\u7740\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u5fc5\u987b\u6309\u987a\u5e8f\u4f20\u9012\u8fd9\u4e9b\u53c2\u6570\uff0c\u4e0d\u80fd\u901a\u8fc7\u5173\u952e\u5b57\u5f62\u5f0f\u6307\u5b9a\u5b83\u4eec\u3002 / \u548c * \u4e4b\u95f4\u7684\u53c2\u6570\uff08 c \u548c d \uff09\u53ef\u4ee5\u4f7f\u7528\u4f4d\u7f6e\u53c2\u6570\u6216\u5173\u952e\u5b57\u53c2\u6570\u3002 * \u4e4b\u540e\u7684\u53c2\u6570\uff08 e \u548c f \uff09\u5fc5\u987b\u4f7f\u7528\u5173\u952e\u5b57\u53c2\u6570\u3002 def f(a, b, /, c, d, *, e, f): print(a, b, c, d, e, f) \u5bf9\u4e8e\u4e0a\u8ff0\u51fd\u6570\uff0c\u4ee5\u4e0b\u8c03\u7528\u65b9\u6cd5\u662f\u6b63\u786e\u7684\uff1a f(10, 20, 30, d=40, e=50, f=60) \u5728\u8fd9\u4e2a\u8c03\u7528\u4e2d\uff1a 10 \u548c 20 \u4f20\u9012\u7ed9 a \u548c b \uff0c\u4f5c\u4e3a\u4f4d\u7f6e\u53c2\u6570\u3002 30 \u548c 40 \u5206\u522b\u4f20\u9012\u7ed9 c \u548c d \uff0c\u5176\u4e2d d \u4ee5\u5173\u952e\u5b57\u53c2\u6570\u7684\u5f62\u5f0f\u4f20\u9012\u3002 e \u548c f \u5fc5\u987b\u4f7f\u7528\u5173\u952e\u5b57\u53c2\u6570\u7684\u5f62\u5f0f\u4f20\u9012\u3002 \u4ee5\u4e0b\u8c03\u7528\u65b9\u6cd5\u4f1a\u4ea7\u751f\u9519\u8bef\uff1a f(10, b=20, c=30, d=40, e=50, f=60) # \u9519\u8bef\uff1ab \u4e0d\u80fd\u4f7f\u7528\u5173\u952e\u5b57\u53c2\u6570\u7684\u5f62\u5f0f f(10, 20, 30, 40, 50, f=60) # \u9519\u8bef\uff1ae \u5fc5\u987b\u4f7f\u7528\u5173\u952e\u5b57\u53c2\u6570\u7684\u5f62\u5f0f \u5728\u7b2c\u4e00\u4e2a\u9519\u8bef\u793a\u4f8b\u4e2d\uff0c b \u4f5c\u4e3a\u5173\u952e\u5b57\u53c2\u6570\u4f20\u9012\u662f\u4e0d\u5141\u8bb8\u7684\uff0c\u56e0\u4e3a\u5b83\u5728 / \u4e4b\u524d\uff0c\u5fc5\u987b\u4f5c\u4e3a\u4f4d\u7f6e\u53c2\u6570\u4f20\u9012\u3002 \u5728\u7b2c\u4e8c\u4e2a\u9519\u8bef\u793a\u4f8b\u4e2d\uff0c e \u6ca1\u6709\u901a\u8fc7\u5173\u952e\u5b57\u53c2\u6570\u4f20\u9012\uff0c\u4f46\u56e0\u4e3a\u5b83\u5728 * \u4e4b\u540e\uff0c\u6240\u4ee5\u5fc5\u987b\u4ee5\u5173\u952e\u5b57\u53c2\u6570\u5f62\u5f0f\u4f20\u9012\u3002 \u8bfe\u540e\u7ec3\u4e60 \u8bf7\u5c06\u4e0b\u5217\u4ee3\u7801\uff08Lesson2\u8bfe\u540e\u7ec3\u4e60\uff09\u7684\u70b9\u5355\u3001\u6253\u5370\u5ba2\u6237\u70b9\u5355\u5185\u5bb9\u3001\u8ba1\u7b97\u8ba2\u5355\u603b\u4ef7\u4e09\u4e2a\u529f\u80fd\u5c01\u88c5\u6210\u72ec\u7acb\u7684\u65b9\u6cd5\u3002 # \u9910\u5385\u70b9\u5355\u7a0b\u5e8f # \u5b9a\u4e49\u5546\u54c1\u7684\u4ef7\u683c\u5e38\u91cf PRICE_BURGER = 12.5 # \u6c49\u5821\u7684\u4ef7\u683c PRICE_FRIES = 6 # \u85af\u6761\u7684\u4ef7\u683c PRICE_COKE = 4.5 # \u53ef\u4e50\u7684\u4ef7\u683c # \u521d\u59cb\u5316\u603b\u9500\u552e\u989d total_sales = 0.0 while True: # \u63d0\u793a\u7528\u6237\u8f93\u5165\u662f\u5426\u7ee7\u7eed\u70b9\u5355\uff0c-1\u8868\u793a\u9000\u51fa user_input = input(\"\u8f93\u5165-1\u9000\u51fa\u5e76\u8ba1\u7b97\u603b\u9500\u552e\u989d\uff0c\u5176\u4ed6\u6570\u5b57\u7ee7\u7eed\u70b9\u5355: \") if user_input == '-1': break # \u63a5\u53d7\u987e\u5ba2\u7684\u70b9\u5355 num_burgers = int(input(\"\u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf: \")) num_fries = int(input(\"\u8bf7\u8f93\u5165\u85af\u6761\u7684\u6570\u91cf: \")) num_cokes = int(input(\"\u8bf7\u8f93\u5165\u53ef\u4e50\u7684\u6570\u91cf: \")) # \u8ba1\u7b97\u5f53\u524d\u987e\u5ba2\u7684\u70b9\u5355\u603b\u4ef7 total_price = num_burgers * PRICE_BURGER + num_fries * PRICE_FRIES + num_cokes * PRICE_COKE # \u8f93\u51fa\u5f53\u524d\u987e\u5ba2\u7684\u70b9\u5355\u5185\u5bb9\u548c\u603b\u4ef7 print(f\"\u987e\u5ba2\u70b9\u5355\u5185\u5bb9: \u6c49\u5821 {num_burgers} \u4e2a, \u85af\u6761 {num_fries} \u4efd, \u53ef\u4e50 {num_cokes} \u74f6\") print(f\"\u672c\u6b21\u70b9\u5355\u603b\u4ef7: {total_price:.2f} \u5143\") # \u5c06\u672c\u6b21\u70b9\u5355\u603b\u4ef7\u7d2f\u52a0\u5230\u603b\u9500\u552e\u989d\u4e2d total_sales += total_price # \u8f93\u51fa\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d print(f\"\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d: {total_sales:.2f} \u5143\") \u53c2\u8003\u7b54\u6848 # \u9910\u5385\u70b9\u5355\u7a0b\u5e8f # \u5b9a\u4e49\u5546\u54c1\u7684\u4ef7\u683c\u5e38\u91cf PRICE_BURGER = 12.5 # \u6c49\u5821\u7684\u4ef7\u683c PRICE_FRIES = 6 # \u85af\u6761\u7684\u4ef7\u683c PRICE_COKE = 4.5 # \u53ef\u4e50\u7684\u4ef7\u683c # \u521d\u59cb\u5316\u603b\u9500\u552e\u989d total_sales = 0.0 def take_order(): num_burgers = int(input(\"\u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf: \")) num_fries = int(input(\"\u8bf7\u8f93\u5165\u85af\u6761\u7684\u6570\u91cf: \")) num_cokes = int(input(\"\u8bf7\u8f93\u5165\u53ef\u4e50\u7684\u6570\u91cf: \")) return num_burgers, num_fries, num_cokes def print_order(num_burgers, num_fries, num_cokes): # \u6253\u5370\u987e\u5ba2\u7684\u70b9\u5355\u5185\u5bb9\u3002 print(f\"\u987e\u5ba2\u70b9\u5355\u5185\u5bb9: \u6c49\u5821 {num_burgers} \u4e2a, \u85af\u6761 {num_fries} \u4efd, \u53ef\u4e50 {num_cokes} \u74f6\") def calculate_total_price(num_burgers, num_fries, num_cokes): # \u8ba1\u7b97\u5e76\u8fd4\u56de\u70b9\u5355\u603b\u4ef7\u3002 return num_burgers * PRICE_BURGER + num_fries * PRICE_FRIES + num_cokes * PRICE_COKE while True: # \u63d0\u793a\u7528\u6237\u8f93\u5165\u662f\u5426\u7ee7\u7eed\u70b9\u5355\uff0c-1\u8868\u793a\u9000\u51fa user_input = input(\"\u8f93\u5165-1\u9000\u51fa\u5e76\u8ba1\u7b97\u603b\u9500\u552e\u989d\uff0c\u5176\u4ed6\u6570\u5b57\u7ee7\u7eed\u70b9\u5355: \") if user_input == '-1': break # \u63a5\u53d7\u987e\u5ba2\u7684\u70b9\u5355 num_burgers, num_fries, num_cokes = take_order() if num_burgers is None or num_fries is None or num_cokes is None: continue # \u6253\u5370\u987e\u5ba2\u7684\u70b9\u5355\u5185\u5bb9 print_order(num_burgers, num_fries, num_cokes) # \u8ba1\u7b97\u5e76\u8f93\u51fa\u5f53\u524d\u987e\u5ba2\u7684\u70b9\u5355\u603b\u4ef7 total_price = calculate_total_price(num_burgers, num_fries, num_cokes) print(f\"\u672c\u6b21\u70b9\u5355\u603b\u4ef7: {total_price:.2f} \u5143\") # \u5c06\u672c\u6b21\u70b9\u5355\u603b\u4ef7\u7d2f\u52a0\u5230\u603b\u9500\u552e\u989d\u4e2d total_sales += total_price # \u8f93\u51fa\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d print(f\"\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d: {total_sales:.2f} \u5143\")","title":"Lesson3 \u81ea\u5b9a\u4e49\u51fd\u6570\uff0c\u5f62\u5f0f\u53c2\u6570\u4e0e\u5b9e\u9645\u53c2\u6570"},{"location":"lesson3/Lesson3%20Python/#lesson3","text":"\u51fd\u6570\u662f\u7ec4\u7ec7\u597d\u7684\uff0c\u53ef\u91cd\u590d\u4f7f\u7528\u7684\uff0c\u7528\u6765\u5b9e\u73b0\u5355\u4e00\uff0c\u6216\u76f8\u5173\u8054\u529f\u80fd\u7684\u4ee3\u7801\u6bb5\u3002 \u51fd\u6570\u80fd\u63d0\u9ad8\u5e94\u7528\u7684\u6a21\u5757\u6027\uff0c\u548c\u4ee3\u7801\u7684\u91cd\u590d\u5229\u7528\u7387\u3002\u4f60\u5df2\u7ecf\u77e5\u9053Python\u63d0\u4f9b\u4e86\u8bb8\u591a\u5185\u5efa\u51fd\u6570\uff0c\u6bd4\u5982print()\u3002\u4f46\u4f60\u4e5f\u53ef\u4ee5\u81ea\u5df1\u521b\u5efa\u51fd\u6570\uff0c\u8fd9\u88ab\u53eb\u505a\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570\u3002","title":"Lesson3 \u81ea\u5b9a\u4e49\u51fd\u6570\uff0c\u5f62\u5f0f\u53c2\u6570\u4e0e\u5b9e\u9645\u53c2\u6570"},{"location":"lesson3/Lesson3%20Python/#_1","text":"Lesson3 \u81ea\u5b9a\u4e49\u51fd\u6570\uff0c\u5f62\u5f0f\u53c2\u6570\u4e0e\u5b9e\u9645\u53c2\u6570 1 \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570 1.1 \u8bed\u6cd5 \u5b9e\u4f8b 2 \u51fd\u6570\u8c03\u7528 3 \u53c2\u6570\u4f20\u9012 3.1 \u53ef\u66f4\u6539(mutable)\u4e0e\u4e0d\u53ef\u66f4\u6539(immutable)\u5bf9\u8c61 3.2 python \u4f20\u4e0d\u53ef\u53d8\u5bf9\u8c61\u5b9e\u4f8b 3.3 \u4f20\u53ef\u53d8\u5bf9\u8c61\u5b9e\u4f8b 4 \u53c2\u6570 4.1 \u5f62\u5f0f\u53c2\u6570\uff08\u5f62\u53c2\uff09 4.2 \u5b9e\u9645\u53c2\u6570\uff08\u5b9e\u53c2\uff09 4.3 \u5f62\u53c2\u548c\u5b9e\u53c2\u7684\u533a\u522b 4.4 \u7c7b\u578b\u548c\u6570\u91cf\u7684\u5339\u914d 4.5 \u5fc5\u9700\u53c2\u6570 4.6 \u5173\u952e\u5b57\u53c2\u6570 4.7 \u9ed8\u8ba4\u53c2\u6570\uff08\u9009\u4fee\uff09 4.8 \u4e0d\u5b9a\u957f\u53c2\u6570\uff08\u9009\u4fee\uff09 5 \u533f\u540d\u51fd\u6570\uff08\u9009\u4fee\uff09 5.1 \u8bed\u6cd5 5.2 \u5b9e\u4f8b 6 return \u8bed\u53e5 6.1 \u57fa\u7840\u7528\u6cd5 6.2 \u63d0\u524d\u7ed3\u675f\u51fd\u6570 6.3 \u5faa\u73af\u4e2d\u7684 return 6.4 \u4f18\u5316\u6761\u4ef6\u5224\u65ad 7 \u5f3a\u5236\u4f4d\u7f6e\u53c2\u6570 \u8bfe\u540e\u7ec3\u4e60","title":"\u76ee\u5f55"},{"location":"lesson3/Lesson3%20Python/#1","text":"\u4f60\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u7531\u81ea\u5df1\u60f3\u8981\u529f\u80fd\u7684\u51fd\u6570\uff0c\u4ee5\u4e0b\u662f\u7b80\u5355\u7684\u89c4\u5219\uff1a \u51fd\u6570\u4ee3\u7801\u5757\u4ee5 def \u5173\u952e\u8bcd\u5f00\u5934\uff0c\u540e\u63a5\u51fd\u6570\u540d\u548c\u5706\u62ec\u53f7 ()\u3002 \u5706\u62ec\u53f7\u5185\u53ef\u4ee5\u5305\u542b\u4f20\u5165\u7684\u53c2\u6570\u548c\u81ea\u53d8\u91cf\uff0c\u7528\u4e8e\u5b9a\u4e49\u51fd\u6570\u7684\u53c2\u6570\u5217\u8868\u3002 \u51fd\u6570\u7684\u7b2c\u4e00\u884c\u53ef\u4ee5\u9009\u62e9\u6027\u5730\u5305\u542b\u6587\u6863\u5b57\u7b26\u4e32\uff0c\u4ee5\u63d0\u4f9b\u5bf9\u51fd\u6570\u7684\u8bf4\u660e\u3002 \u51fd\u6570\u5185\u5bb9\u4ee5\u5192\u53f7 : \u8d77\u59cb\uff0c\u5e76\u4e14\u51fd\u6570\u5185\u7684\u4ee3\u7801\u7f29\u8fdb\u3002 return [\u8868\u8fbe\u5f0f] \u7ed3\u675f\u51fd\u6570\uff0c\u9009\u62e9\u6027\u5730\u8fd4\u56de\u4e00\u4e2a\u503c\u7ed9\u8c03\u7528\u65b9\uff0c\u4e0d\u5e26\u8868\u8fbe\u5f0f\u7684 return \u76f8\u5f53\u4e8e\u8fd4\u56de None\u3002","title":"1 \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570"},{"location":"lesson3/Lesson3%20Python/#11","text":"Python \u5b9a\u4e49\u51fd\u6570\u4f7f\u7528 def \u5173\u952e\u5b57\uff0c\u4e00\u822c\u683c\u5f0f\u5982\u4e0b\uff1a def \u51fd\u6570\u540d\uff08\u53c2\u6570\u5217\u8868\uff09: \u51fd\u6570\u4f53 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u53c2\u6570\u503c\u548c\u53c2\u6570\u540d\u79f0\u662f\u6309\u51fd\u6570\u58f0\u660e\u4e2d\u5b9a\u4e49\u7684\u987a\u5e8f\u5339\u914d\u8d77\u6765\u7684\u3002","title":"1.1 \u8bed\u6cd5"},{"location":"lesson3/Lesson3%20Python/#_2","text":"\u8ba9\u6211\u4eec\u4f7f\u7528\u51fd\u6570\u6765\u8f93\u51fa\"Hello World!\"\uff1a def hello() : print(\"Hello World!\") hello() \u66f4\u590d\u6742\u70b9\u7684\u5e94\u7528\uff0c\u51fd\u6570\u4e2d\u5e26\u4e0a\u53c2\u6570\u53d8\u91cf: \u6bd4\u8f83\u4e24\u4e2a\u6570\uff0c\u5e76\u8fd4\u56de\u8f83\u5927\u7684\u6570: def max(a, b): if a > b: return a else: return b a = 4 b = 5 print(max(a, b)) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a 5 \u8ba1\u7b97\u9762\u79ef\u51fd\u6570: # \u8ba1\u7b97\u9762\u79ef\u51fd\u6570 def area(width, height): return width * height def print_welcome(name): print(f\"Welcome {name}\") print_welcome(\"CodeRaft\") w = 4 h = 5 print(f\"width = {w}, height = {h}, area = {area(w, h)}\") \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a Welcome CodeRaft width = 4 height = 5 area = 20","title":"\u5b9e\u4f8b"},{"location":"lesson3/Lesson3%20Python/#2","text":"\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff1a\u7ed9\u4e86\u51fd\u6570\u4e00\u4e2a\u540d\u79f0\uff0c\u6307\u5b9a\u4e86\u51fd\u6570\u91cc\u5305\u542b\u7684\u53c2\u6570\uff0c\u548c\u4ee3\u7801\u5757\u7ed3\u6784\u3002 \u51fd\u6570\u5b9a\u4e49\u5b8c\u6210\u4ee5\u540e\uff0c\u53ef\u4ee5\u8c03\u7528\u6267\u884c\u3002 \u5982\u4e0b\u5b9e\u4f8b\u8c03\u7528\u4e86 printme() \u51fd\u6570\uff1a def printme(s): # \u6253\u5370\u4efb\u4f55\u4f20\u5165\u7684\u5b57\u7b26\u4e32 print(s) return # \u8c03\u7528\u51fd\u6570 printme(\"\u6211\u8981\u8c03\u7528\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570!\") printme(\"\u518d\u6b21\u8c03\u7528\u540c\u4e00\u51fd\u6570\") \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a \u6211\u8981\u8c03\u7528\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570! \u518d\u6b21\u8c03\u7528\u540c\u4e00\u51fd\u6570","title":"2 \u51fd\u6570\u8c03\u7528"},{"location":"lesson3/Lesson3%20Python/#3","text":"\u5728 python \u4e2d\uff0c\u7c7b\u578b\u5c5e\u4e8e\u5bf9\u8c61\uff0c\u5bf9\u8c61\u6709\u4e0d\u540c\u7c7b\u578b\u7684\u533a\u5206\uff0c\u53d8\u91cf\u662f\u6ca1\u6709\u7c7b\u578b\u7684\uff1a a=[1,2,3] a=\"CodeRaft\" \u4ee5\u4e0a\u4ee3\u7801\u4e2d\uff0c [1,2,3] \u662f List \u7c7b\u578b\uff0c \"CodeRaft\" \u662f String \u7c7b\u578b\uff0c\u800c\u53d8\u91cf a \u662f\u6ca1\u6709\u7c7b\u578b\uff0c\u5b83\u4ec5\u4ec5\u662f\u4e00\u4e2a\u5bf9\u8c61\u7684\u5f15\u7528\uff08\u4e00\u4e2a\u6307\u9488\uff09\uff0c\u53ef\u4ee5\u662f\u6307\u5411 List \u7c7b\u578b\u5bf9\u8c61\uff0c\u4e5f\u53ef\u4ee5\u662f\u6307\u5411 String \u7c7b\u578b\u5bf9\u8c61\u3002","title":"3 \u53c2\u6570\u4f20\u9012"},{"location":"lesson3/Lesson3%20Python/#31-mutableimmutable","text":"\u5728 python \u4e2d\uff0cstrings, tuples, \u548c numbers \u662f\u4e0d\u53ef\u66f4\u6539\u7684\u5bf9\u8c61\uff0c\u800c list,dict \u7b49\u5219\u662f\u53ef\u4ee5\u4fee\u6539\u7684\u5bf9\u8c61\u3002 \u4e0d\u53ef\u53d8\u7c7b\u578b\uff1a \u53d8\u91cf\u8d4b\u503c a=5 \u540e\u518d\u8d4b\u503c a=10 \uff0c\u8fd9\u91cc\u5b9e\u9645\u662f\u65b0\u751f\u6210\u4e00\u4e2a int \u503c\u5bf9\u8c61 10\uff0c\u518d\u8ba9 a \u6307\u5411\u5b83\uff0c\u800c 5 \u88ab\u4e22\u5f03\uff0c\u4e0d\u662f\u6539\u53d8 a \u7684\u503c\uff0c\u76f8\u5f53\u4e8e\u65b0\u751f\u6210\u4e86 a\u3002 \u53ef\u53d8\u7c7b\u578b\uff1a \u53d8\u91cf\u8d4b\u503c la=[1,2,3,4] \u540e\u518d\u8d4b\u503c la[2]=5 \u5219\u662f\u5c06 list la \u7684\u7b2c\u4e09\u4e2a\u5143\u7d20\u503c\u66f4\u6539\uff0c\u672c\u8eabla\u6ca1\u6709\u52a8\uff0c\u53ea\u662f\u5176\u5185\u90e8\u7684\u4e00\u90e8\u5206\u503c\u88ab\u4fee\u6539\u4e86\u3002 python \u51fd\u6570\u7684\u53c2\u6570\u4f20\u9012\uff1a \u4e0d\u53ef\u53d8\u7c7b\u578b\uff1a \u7c7b\u4f3c C++ \u7684\u503c\u4f20\u9012\uff0c\u5982\u6574\u6570\u3001\u5b57\u7b26\u4e32\u3001\u5143\u7ec4\u3002\u5982 fun(a)\uff0c\u4f20\u9012\u7684\u53ea\u662f a \u7684\u503c\uff0c\u6ca1\u6709\u5f71\u54cd a \u5bf9\u8c61\u672c\u8eab\u3002\u5982\u679c\u5728 fun(a) \u5185\u90e8\u4fee\u6539 a \u7684\u503c\uff0c\u5219\u662f\u65b0\u751f\u6210\u4e00\u4e2a a \u7684\u5bf9\u8c61\u3002 \u53ef\u53d8\u7c7b\u578b\uff1a \u7c7b\u4f3c C++ \u7684\u5f15\u7528\u4f20\u9012\uff0c\u5982 \u5217\u8868\uff0c\u5b57\u5178\u3002\u5982 fun(la)\uff0c\u5219\u662f\u5c06 la \u771f\u6b63\u7684\u4f20\u8fc7\u53bb\uff0c\u4fee\u6539\u540e fun \u5916\u90e8\u7684 la \u4e5f\u4f1a\u53d7\u5f71\u54cd\u3002 python \u4e2d\u4e00\u5207\u90fd\u662f\u5bf9\u8c61\uff0c\u4e25\u683c\u610f\u4e49\u6211\u4eec\u4e0d\u80fd\u8bf4\u503c\u4f20\u9012\u8fd8\u662f\u5f15\u7528\u4f20\u9012\uff0c\u6211\u4eec\u5e94\u8be5\u8bf4\u4f20\u4e0d\u53ef\u53d8\u5bf9\u8c61\u548c\u4f20\u53ef\u53d8\u5bf9\u8c61\u3002","title":"3.1 \u53ef\u66f4\u6539(mutable)\u4e0e\u4e0d\u53ef\u66f4\u6539(immutable)\u5bf9\u8c61\uff1a"},{"location":"lesson3/Lesson3%20Python/#32-python","text":"\u901a\u8fc7 id() \u51fd\u6570\u6765\u67e5\u770b\u5185\u5b58\u5730\u5740\u53d8\u5316\uff1a def change(a): print(id(a)) # \u6307\u5411\u7684\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61 a=10 print(id(a)) # \u4e00\u4e2a\u65b0\u5bf9\u8c61 a=1 print(id(a)) change(a) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a *\u56e0\u6bcf\u53f0\u8bbe\u5907\u800c\u5f02 4326120520 4326120520 4326120808 \u53ef\u4ee5\u770b\u89c1\u5728\u8c03\u7528\u51fd\u6570\u524d\u540e\uff0c\u5f62\u53c2\u548c\u5b9e\u53c2\u6307\u5411\u7684\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\uff08\u5bf9\u8c61 id \u76f8\u540c\uff09\uff0c\u5728\u51fd\u6570\u5185\u90e8\u4fee\u6539\u5f62\u53c2\u540e\uff0c\u5f62\u53c2\u6307\u5411\u7684\u662f\u4e0d\u540c\u7684 id\u3002","title":"3.2 python \u4f20\u4e0d\u53ef\u53d8\u5bf9\u8c61\u5b9e\u4f8b"},{"location":"lesson3/Lesson3%20Python/#33","text":"\u53ef\u53d8\u5bf9\u8c61\u5728\u51fd\u6570\u91cc\u4fee\u6539\u4e86\u53c2\u6570\uff0c\u90a3\u4e48\u5728\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u7684\u51fd\u6570\u91cc\uff0c\u539f\u59cb\u7684\u53c2\u6570\u4e5f\u88ab\u6539\u53d8\u4e86\u3002\u4f8b\u5982\uff1a def changeme(mylist): mylist.append([1,2,3,4]) print(\"\u51fd\u6570\u5185\u53d6\u503c: \", mylist) return # \u8c03\u7528changeme\u51fd\u6570 mylist = [10,20,30] changeme(mylist) print(\"\u51fd\u6570\u5916\u53d6\u503c: \", mylist) \u4f20\u5165\u51fd\u6570\u7684\u548c\u5728\u672b\u5c3e\u6dfb\u52a0\u65b0\u5185\u5bb9\u7684\u5bf9\u8c61\u7528\u7684\u662f\u540c\u4e00\u4e2a\u5f15\u7528\u3002\u6545\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a \u51fd\u6570\u5185\u53d6\u503c: [10, 20, 30, [1, 2, 3, 4]] \u51fd\u6570\u5916\u53d6\u503c: [10, 20, 30, [1, 2, 3, 4]] \u4f46\u662f\u5982\u679c\u6211\u4eec\u628a\u76f8\u540c\u53d8\u91cf\u540dmylist\u4f5c\u4e3a\u51fd\u6570\u5185\u5c40\u90e8\u53d8\u91cf\uff0c\u5219\u4e0d\u4f1a\u5bf9\u5916\u9762\u540c\u53d8\u91cf\u540d\u7684\u53d8\u91cf\u503c\u4ea7\u751f\u5f71\u54cd\u3002\u4f8b\u5982\uff1a def changeme(mylist): mylist = [1, 2, 3] mylist.append([1,2,3,4]) print(\"\u51fd\u6570\u5185\u53d6\u503c: \", mylist) return # \u8c03\u7528changeme\u51fd\u6570 mylist = [10,20,30] changeme(mylist) print(\"\u51fd\u6570\u5916\u53d6\u503c: \", mylist) \u5728\u51fd\u6570\u5185\u90e8\uff0cmylist\u4ece[10,20,30]\u6307\u5411\u4e86\u65b0\u7684[1\uff0c2\uff0c3]\uff0c\u56e0\u6b64\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a \u51fd\u6570\u5185\u53d6\u503c: [1, 2, 3, [1, 2, 3, 4]] \u51fd\u6570\u5916\u53d6\u503c: [10, 20, 30]","title":"3.3 \u4f20\u53ef\u53d8\u5bf9\u8c61\u5b9e\u4f8b"},{"location":"lesson3/Lesson3%20Python/#4","text":"\u4ee5\u4e0b\u662f\u8c03\u7528\u51fd\u6570\u65f6\u53ef\u4f7f\u7528\u7684\u6b63\u5f0f\u53c2\u6570\u7c7b\u578b\uff1a \u5fc5\u9700\u53c2\u6570 \u5173\u952e\u5b57\u53c2\u6570 \u9ed8\u8ba4\u53c2\u6570 \u4e0d\u5b9a\u957f\u53c2\u6570","title":"4 \u53c2\u6570"},{"location":"lesson3/Lesson3%20Python/#41","text":"\u5f62\u5f0f\u53c2\u6570\u662f\u5728\u51fd\u6570\u5b9a\u4e49\u65f6\u4f7f\u7528\u7684\u53d8\u91cf\u540d\u79f0\uff0c\u7528\u4e8e\u63a5\u6536\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u503c\u3002\u5f62\u53c2\u5728\u51fd\u6570\u4f53\u5185\u5145\u5f53\u5360\u4f4d\u7b26\uff0c\u5728\u51fd\u6570\u8c03\u7528\u65f6\u4f1a\u88ab\u5b9e\u53c2\u66ff\u4ee3\u3002 def greet(name): # name \u662f\u5f62\u5f0f\u53c2\u6570 print(f\"Hello, {name}!\") \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c name \u662f\u4e00\u4e2a\u5f62\u5f0f\u53c2\u6570\u3002\u5f53\u8c03\u7528 greet \u51fd\u6570\u65f6\uff0c name \u5c06\u88ab\u5b9e\u9645\u53c2\u6570\u7684\u503c\u66ff\u6362\u3002","title":"4.1 \u5f62\u5f0f\u53c2\u6570\uff08\u5f62\u53c2\uff09"},{"location":"lesson3/Lesson3%20Python/#42","text":"\u5b9e\u9645\u53c2\u6570\u662f\u5728\u51fd\u6570\u8c03\u7528\u65f6\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u5177\u4f53\u503c\u6216\u53d8\u91cf\u3002\u8fd9\u4e9b\u503c\u66ff\u6362\u51fd\u6570\u5b9a\u4e49\u4e2d\u7684\u5f62\u5f0f\u53c2\u6570\uff0c\u4ee5\u4fbf\u51fd\u6570\u6267\u884c\u64cd\u4f5c\u3002 \u4f8b\u5b50\uff1a greet(\"Alice\") # \"Alice\" \u662f\u5b9e\u9645\u53c2\u6570 \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u8c03\u7528 greet(\"Alice\") \u65f6\uff0c\u5b9e\u9645\u53c2\u6570 \"Alice\" \u4f20\u9012\u7ed9\u4e86\u51fd\u6570\uff0c\u5e76\u66ff\u6362\u4e86\u5f62\u53c2 name \u7684\u503c\u3002\u7ed3\u679c\u662f\u51fd\u6570\u8f93\u51fa\u4e86 \"Hello, Alice!\" \u3002","title":"4.2 \u5b9e\u9645\u53c2\u6570\uff08\u5b9e\u53c2\uff09"},{"location":"lesson3/Lesson3%20Python/#43","text":"\u5b9a\u4e49\u4f4d\u7f6e \uff1a\u5f62\u53c2\u51fa\u73b0\u5728\u51fd\u6570\u5b9a\u4e49\u4e2d\uff0c\u800c\u5b9e\u53c2\u51fa\u73b0\u5728\u51fd\u6570\u8c03\u7528\u65f6\u3002 \u4f5c\u7528 \uff1a\u5f62\u53c2\u7528\u4e8e\u63a5\u6536\u548c\u6807\u8bc6\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u503c\uff0c\u5b9e\u53c2\u662f\u5b9e\u9645\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u503c\u3002 \u751f\u547d\u5468\u671f \uff1a\u5f62\u53c2\u53ea\u5728\u51fd\u6570\u6267\u884c\u65f6\u5b58\u5728\uff0c\u5b9e\u53c2\u5219\u5728\u8c03\u7528\u8005\u7684\u4e0a\u4e0b\u6587\u4e2d\u5b58\u5728\u3002","title":"4.3 \u5f62\u53c2\u548c\u5b9e\u53c2\u7684\u533a\u522b"},{"location":"lesson3/Lesson3%20Python/#44","text":"\u51fd\u6570\u8c03\u7528\u65f6\uff0c\u5b9e\u53c2\u7684\u6570\u91cf\u548c\u7c7b\u578b\u901a\u5e38\u9700\u8981\u4e0e\u51fd\u6570\u5b9a\u4e49\u4e2d\u7684\u5f62\u53c2\u76f8\u5339\u914d\u3002\u4f8b\u5982\uff0c\u5982\u679c\u51fd\u6570\u5b9a\u4e49\u4e2d\u6709\u4e09\u4e2a\u5f62\u53c2\uff0c\u8c03\u7528\u65f6\u901a\u5e38\u9700\u8981\u63d0\u4f9b\u4e09\u4e2a\u5b9e\u53c2\u3002\u4e0d\u8fc7\uff0cPython\u652f\u6301\u4e00\u4e9b\u9ad8\u7ea7\u529f\u80fd\uff0c\u5982\u9ed8\u8ba4\u53c2\u6570\u3001\u5173\u952e\u5b57\u53c2\u6570\u548c\u53ef\u53d8\u957f\u5ea6\u53c2\u6570\uff0c\u8fd9\u4e9b\u529f\u80fd\u53ef\u4ee5\u63d0\u4f9b\u66f4\u7075\u6d3b\u7684\u53c2\u6570\u4f20\u9012\u65b9\u5f0f\u3002","title":"4.4 \u7c7b\u578b\u548c\u6570\u91cf\u7684\u5339\u914d"},{"location":"lesson3/Lesson3%20Python/#45","text":"\u5fc5\u9700\u53c2\u6570\u987b\u4ee5\u6b63\u786e\u7684\u987a\u5e8f\u4f20\u5165\u51fd\u6570\u3002\u8c03\u7528\u65f6\u7684\u6570\u91cf\u5fc5\u987b\u548c\u58f0\u660e\u65f6\u7684\u4e00\u6837\u3002 \u8c03\u7528 printme() \u51fd\u6570\uff0c\u4f60\u5fc5\u987b\u4f20\u5165\u4e00\u4e2a\u53c2\u6570\uff0c\u4e0d\u7136\u4f1a\u51fa\u73b0\u8bed\u6cd5\u9519\u8bef\uff1a #\u53ef\u5199\u51fd\u6570\u8bf4\u660e def printme(s): print(s) return # \u8c03\u7528 printme \u51fd\u6570\uff0c\u4e0d\u52a0\u53c2\u6570\u4f1a\u62a5\u9519 printme() \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a Traceback (most recent call last): File \"test.py\", line 10, in <module> printme() TypeError: printme() missing 1 required positional argument: 'str'","title":"4.5 \u5fc5\u9700\u53c2\u6570"},{"location":"lesson3/Lesson3%20Python/#46","text":"\u5173\u952e\u5b57\u53c2\u6570\u548c\u51fd\u6570\u8c03\u7528\u5173\u7cfb\u7d27\u5bc6\uff0c\u51fd\u6570\u8c03\u7528\u4f7f\u7528\u5173\u952e\u5b57\u53c2\u6570\u6765\u786e\u5b9a\u4f20\u5165\u7684\u53c2\u6570\u503c\u3002 \u4f7f\u7528\u5173\u952e\u5b57\u53c2\u6570\u5141\u8bb8\u51fd\u6570\u8c03\u7528\u65f6\u53c2\u6570\u7684\u987a\u5e8f\u4e0e\u58f0\u660e\u65f6\u4e0d\u4e00\u81f4\uff0c\u56e0\u4e3a Python \u89e3\u91ca\u5668\u80fd\u591f\u7528\u53c2\u6570\u540d\u5339\u914d\u53c2\u6570\u503c\u3002 \u4ee5\u4e0b\u5b9e\u4f8b\u5728\u51fd\u6570 printme() \u8c03\u7528\u65f6\u4f7f\u7528\u53c2\u6570\u540d\uff1a #\u53ef\u5199\u51fd\u6570\u8bf4\u660e def printme(s): # \u6253\u5370\u4efb\u4f55\u4f20\u5165\u7684\u5b57\u7b26\u4e32 print(s) return #\u8c03\u7528printme\u51fd\u6570 printme(s=\"CodeRaft\") \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a CodeRaft \u4ee5\u4e0b\u5b9e\u4f8b\u4e2d\u6f14\u793a\u4e86\u51fd\u6570\u53c2\u6570\u7684\u4f7f\u7528\u4e0d\u9700\u8981\u4f7f\u7528\u6307\u5b9a\u987a\u5e8f\uff1a #\u53ef\u5199\u51fd\u6570\u8bf4\u660e def printinfo(name, age): print(\"\u540d\u5b57: \", name) print(\"\u5e74\u9f84: \", age) return #\u8c03\u7528printinfo\u51fd\u6570 printinfo(age=50, name=\"CodeRaft\") \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a \u540d\u5b57: CodeRaft \u5e74\u9f84: 50","title":"4.6 \u5173\u952e\u5b57\u53c2\u6570"},{"location":"lesson3/Lesson3%20Python/#47","text":"\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u5982\u679c\u6ca1\u6709\u4f20\u9012\u53c2\u6570\uff0c\u5219\u4f1a\u4f7f\u7528\u9ed8\u8ba4\u53c2\u6570\u3002\u4ee5\u4e0b\u5b9e\u4f8b\u4e2d\u5982\u679c\u6ca1\u6709\u4f20\u5165 age \u53c2\u6570\uff0c\u5219\u4f7f\u7528\u9ed8\u8ba4\u503c\uff1a #\u53ef\u5199\u51fd\u6570\u8bf4\u660e def printinfo(name, age=35): \"\u6253\u5370\u4efb\u4f55\u4f20\u5165\u7684\u5b57\u7b26\u4e32\" print(\"\u540d\u5b57: \", name) print(\"\u5e74\u9f84: \", age) return #\u8c03\u7528printinfo\u51fd\u6570 printinfo(age=50, name=\"CodeRaft\") print(\"------------------------\") printinfo(name=\"CodeRaft\") \u8f93\u51fa\u4e3a\uff1a \u540d\u5b57: CodeRaft \u5e74\u9f84: 50 ------------------------ \u540d\u5b57: CodeRaft \u5e74\u9f84: 35","title":"4.7 \u9ed8\u8ba4\u53c2\u6570\uff08\u9009\u4fee\uff09"},{"location":"lesson3/Lesson3%20Python/#48","text":"\u4f60\u53ef\u80fd\u9700\u8981\u4e00\u4e2a\u51fd\u6570\u80fd\u5904\u7406\u6bd4\u5f53\u521d\u58f0\u660e\u65f6\u66f4\u591a\u7684\u53c2\u6570\u3002\u8fd9\u4e9b\u53c2\u6570\u53eb\u505a\u4e0d\u5b9a\u957f\u53c2\u6570\uff0c\u548c\u4e0a\u8ff02\u79cd\u53c2\u6570\u4e0d\u540c\uff0c\u58f0\u660e\u65f6\u4e0d\u4f1a\u547d\u540d\u3002\u57fa\u672c\u8bed\u6cd5\u5982\u4e0b\uff1a def functionname([formal_args,] *var_args_tuple): function_suite return [expression] \u52a0\u4e86\u661f\u53f7 * \u7684\u53c2\u6570\u4f1a\u4ee5\u5143\u7ec4(tuple)\u7684\u5f62\u5f0f\u5bfc\u5165\uff0c\u5b58\u653e\u6240\u6709\u672a\u547d\u540d\u7684\u53d8\u91cf\u53c2\u6570\u3002 # \u53ef\u5199\u51fd\u6570\u8bf4\u660e def printinfo(arg1, *vartuple): print(\"\u8f93\u51fa: \") print(arg1) print(vartuple) # \u8c03\u7528printinfo \u51fd\u6570 printinfo(70, 60, 50) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a \u8f93\u51fa: 70 (60, 50) \u5982\u679c\u5728\u51fd\u6570\u8c03\u7528\u65f6\u6ca1\u6709\u6307\u5b9a\u53c2\u6570\uff0c\u5b83\u5c31\u662f\u4e00\u4e2a\u7a7a\u5143\u7ec4\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u4e0d\u5411\u51fd\u6570\u4f20\u9012\u672a\u547d\u540d\u7684\u53d8\u91cf\u3002\u5982\u4e0b\u5b9e\u4f8b\uff1a # \u53ef\u5199\u51fd\u6570\u8bf4\u660e def printinfo(arg1, *vartuple): print(\"\u8f93\u51fa: \") print(arg1) for var in vartuple: print(var) return # \u8c03\u7528printinfo \u51fd\u6570 printinfo(10) printinfo(70, 60, 50) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a \u8f93\u51fa: 10 \u8f93\u51fa: 70 60 50 \u8fd8\u6709\u4e00\u79cd\u5c31\u662f\u53c2\u6570\u5e26\u4e24\u4e2a\u661f\u53f7 ** \u57fa\u672c\u8bed\u6cd5\u5982\u4e0b\uff1a def functionname([formal_args,] **var_args_dict): function_suite return [expression] \u52a0\u4e86\u4e24\u4e2a\u661f\u53f7 ** \u7684\u53c2\u6570\u4f1a\u4ee5\u5b57\u5178\u7684\u5f62\u5f0f\u5bfc\u5165\u3002 # \u53ef\u5199\u51fd\u6570\u8bf4\u660e def printinfo(arg1, **vardict): print(\"\u8f93\u51fa: \") print(arg1) print(vardict) # \u8c03\u7528printinfo \u51fd\u6570 printinfo(1, a=2,b=3) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a \u8f93\u51fa: 1 {'a': 2, 'b': 3} \u58f0\u660e\u51fd\u6570\u65f6\uff0c\u53c2\u6570\u4e2d\u661f\u53f7 * \u53ef\u4ee5\u5355\u72ec\u51fa\u73b0\uff0c\u4f8b\u5982: def f(a,b,*,c): return a+b+c \u5982\u679c\u5355\u72ec\u51fa\u73b0\u661f\u53f7 *\uff0c\u5219\u661f\u53f7 * \u540e\u7684\u53c2\u6570\u5fc5\u987b\u7528\u5173\u952e\u5b57\u4f20\u5165\uff1a >>> def f(a,b,*,c): ... return a+b+c ... >>> f(1,2,3) # \u62a5\u9519 Traceback(most recent call last): File \"<stdin>\", line 1, in <module> TypeError: f() takes 2 positional arguments but 3 were given >>> f(1,2,c=3) # \u6b63\u5e38 6 >>>","title":"4.8 \u4e0d\u5b9a\u957f\u53c2\u6570\uff08\u9009\u4fee\uff09"},{"location":"lesson3/Lesson3%20Python/#5","text":"Python \u4f7f\u7528 lambda \u6765\u521b\u5efa\u533f\u540d\u51fd\u6570\u3002 \u6240\u8c13\u533f\u540d\uff0c\u610f\u5373\u4e0d\u518d\u4f7f\u7528 def \u8bed\u53e5\u8fd9\u6837\u6807\u51c6\u7684\u5f62\u5f0f\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u3002","title":"5 \u533f\u540d\u51fd\u6570\uff08\u9009\u4fee\uff09"},{"location":"lesson3/Lesson3%20Python/#51","text":"lambda \u51fd\u6570\u7684\u8bed\u6cd5\u53ea\u5305\u542b\u4e00\u4e2a\u8bed\u53e5\uff0c\u5982\u4e0b\uff1a lambda [arg1 [,arg2,.....argn]]:expression \u8bbe\u7f6e\u53c2\u6570a\u52a0\u4e0a10: x = lambda a : a + 10 print(x(5)) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a 15","title":"5.1 \u8bed\u6cd5"},{"location":"lesson3/Lesson3%20Python/#52","text":"\u4ee5\u4e0b\u5b9e\u4f8b\u533f\u540d\u51fd\u6570\u8bbe\u7f6e\u4e24\u4e2a\u53c2\u6570\uff1a # \u53ef\u5199\u51fd\u6570\u8bf4\u660e sum = lambda arg1, arg2: arg1 + arg2 # \u8c03\u7528sum\u51fd\u6570 print(\"\u76f8\u52a0\u540e\u7684\u503c\u4e3a: \", sum(10, 20)) print(\"\u76f8\u52a0\u540e\u7684\u503c\u4e3a: \", sum(20, 20)) \u6211\u4eec\u53ef\u4ee5\u5c06\u533f\u540d\u51fd\u6570\u5c01\u88c5\u5728\u4e00\u4e2a\u51fd\u6570\u5185\uff0c\u8fd9\u6837\u53ef\u4ee5\u4f7f\u7528\u540c\u6837\u7684\u4ee3\u7801\u6765\u521b\u5efa\u591a\u4e2a\u533f\u540d\u51fd\u6570\u3002 \u4ee5\u4e0b\u5b9e\u4f8b\u5c06\u533f\u540d\u51fd\u6570\u5c01\u88c5\u5728 myfunc \u51fd\u6570\u4e2d\uff0c\u901a\u8fc7\u4f20\u5165\u4e0d\u540c\u7684\u53c2\u6570\u6765\u521b\u5efa\u4e0d\u540c\u7684\u533f\u540d\u51fd\u6570\uff1a def myfunc(n): return lambda a : a * n mydoubler = myfunc(2) mytripler = myfunc(3) print(mydoubler(11)) print(mytripler(11)) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a 22 33","title":"5.2 \u5b9e\u4f8b"},{"location":"lesson3/Lesson3%20Python/#6-return","text":"","title":"6 return \u8bed\u53e5"},{"location":"lesson3/Lesson3%20Python/#61","text":"return [\u8868\u8fbe\u5f0f] \u8bed\u53e5\u7528\u4e8e\u9000\u51fa\u51fd\u6570\uff0c\u9009\u62e9\u6027\u5730\u5411\u8c03\u7528\u65b9\u8fd4\u56de\u4e00\u4e2a\u8868\u8fbe\u5f0f\u3002\u4e0d\u5e26\u53c2\u6570\u503c\u7684 return \u8bed\u53e5\u8fd4\u56de None\u3002\u4e4b\u524d\u7684\u4f8b\u5b50\u90fd\u6ca1\u6709\u793a\u8303\u5982\u4f55\u8fd4\u56de\u6570\u503c\uff0c\u4ee5\u4e0b\u5b9e\u4f8b\u6f14\u793a\u4e86 return \u8bed\u53e5\u7684\u7528\u6cd5\uff1a # \u5b9a\u4e49\u51fd\u6570 def sum(arg1, arg2): # \u8ba1\u7b97\u4e24\u4e2a\u53c2\u6570\u7684\u548c total = arg1 + arg2 print(\"\u51fd\u6570\u5185:\", total) return total # \u8c03\u7528 sum \u51fd\u6570 total = sum(10, 20) print(\"\u51fd\u6570\u5916:\", total) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a \u51fd\u6570\u5185 : 30 \u51fd\u6570\u5916 : 30","title":"6.1 \u57fa\u7840\u7528\u6cd5"},{"location":"lesson3/Lesson3%20Python/#62","text":"return \u8bed\u53e5\u53ef\u4ee5\u76f4\u63a5\u7ed3\u675f\u51fd\u6570\u7684\u6267\u884c\uff0c\u56e0\u6b64 return \u540e\u9762\u7684\u8bed\u53e5\u5c06\u4e0d\u4f1a\u88ab\u6267\u884c\u3002\u4e0b\u9762\u7684\u793a\u4f8b\u6f14\u793a\u4e86\u8fd9\u4e00\u7279\u6027\uff1a def check_even(number): if number % 2 == 0: return True # \u5982\u679c\u6761\u4ef6\u4e3a\u771f\uff0c\u51fd\u6570\u5728\u6b64\u5904\u7ed3\u675f\uff0c\u540e\u7eed\u4ee3\u7801\u4e0d\u4f1a\u6267\u884c print(\"\u8fd9\u662f\u4e00\u4e2a\u5947\u6570\") return False result = check_even(4) print(\"\u7ed3\u679c:\", result) \u5728\u4e0a\u8ff0\u793a\u4f8b\u4e2d\uff0c\u5982\u679c\u4f20\u5165\u7684\u6570\u5b57\u662f\u5076\u6570\uff0c return True \u4f1a\u76f4\u63a5\u7ec8\u6b62\u51fd\u6570\u7684\u6267\u884c\uff0c\u56e0\u6b64 print(\"\u8fd9\u662f\u4e00\u4e2a\u5947\u6570\") \u4e0d\u4f1a\u88ab\u6267\u884c\u3002\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a \u7ed3\u679c: True","title":"6.2 \u63d0\u524d\u7ed3\u675f\u51fd\u6570"},{"location":"lesson3/Lesson3%20Python/#63-return","text":"\u5728\u5faa\u73af\u4e2d\u4f7f\u7528 return \u8bed\u53e5\u4f1a\u5bfc\u81f4\u51fd\u6570\u63d0\u524d\u7ed3\u675f\uff0c\u5faa\u73af\u4e5f\u4f1a\u505c\u6b62\u3002\u4ee5\u4e0b\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u5728\u5faa\u73af\u4e2d\u4f7f\u7528 return \u6765\u627e\u5230\u7b2c\u4e00\u4e2a\u7b26\u5408\u6761\u4ef6\u7684\u5143\u7d20\uff1a def find_first_even(numbers): for number in numbers: if number % 2 == 0: return number # \u4e00\u65e6\u627e\u5230\u5076\u6570\uff0c\u7acb\u5373\u8fd4\u56de\uff0c\u7ed3\u675f\u51fd\u6570 return None # \u5982\u679c\u5faa\u73af\u7ed3\u675f\u6ca1\u6709\u627e\u5230\u5076\u6570\uff0c\u8fd4\u56de None result = find_first_even([1, 3, 5, 6, 7]) print(\"\u7b2c\u4e00\u4e2a\u5076\u6570\u662f:\", result) \u6267\u884c\u8be5\u4ee3\u7801\u540e\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a \u7b2c\u4e00\u4e2a\u5076\u6570\u662f: 6 \u53ef\u4ee5\u770b\u5230\uff0c\u5f53\u51fd\u6570\u627e\u5230\u7b2c\u4e00\u4e2a\u5076\u6570\u65f6\uff0c return \u7acb\u5373\u7ed3\u675f\u51fd\u6570\u7684\u6267\u884c\uff0c\u5e76\u8fd4\u56de\u8be5\u5076\u6570\u3002","title":"6.3 \u5faa\u73af\u4e2d\u7684 return"},{"location":"lesson3/Lesson3%20Python/#64","text":"return \u8bed\u53e5\u4e5f\u53ef\u4ee5\u7528\u4e8e\u7b80\u5316\u6761\u4ef6\u5224\u65ad\u7ed3\u6784\uff0c\u4ece\u800c\u907f\u514d\u4f7f\u7528\u5197\u4f59\u7684 else \u8bed\u53e5\u3002\u4ee5\u4e0b\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 return \u4f7f\u4ee3\u7801\u66f4\u7b80\u6d01\uff1a def is_positive(number): if number > 0: return True return False # \u56e0\u4e3a\u4e0a\u9762\u7684 return \u8bed\u53e5\uff0celse \u53ef\u4ee5\u7701\u7565 result = is_positive(-5) print(\"\u662f\u5426\u4e3a\u6b63\u6570:\", result) \u6b64\u793a\u4f8b\u7684\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a \u662f\u5426\u4e3a\u6b63\u6570: False","title":"6.4 \u4f18\u5316\u6761\u4ef6\u5224\u65ad"},{"location":"lesson3/Lesson3%20Python/#7","text":"Python 3.8 \u5f15\u5165\u4e86\u4e00\u79cd\u65b0\u7684\u51fd\u6570\u53c2\u6570\u8bed\u6cd5\uff0c\u901a\u8fc7 / \u6765\u6307\u660e\u51fd\u6570\u7684\u67d0\u4e9b\u53c2\u6570\u5fc5\u987b\u4f7f\u7528\u4f4d\u7f6e\u53c2\u6570\uff0c\u800c\u4e0d\u80fd\u4f7f\u7528\u5173\u952e\u5b57\u53c2\u6570\u5f62\u5f0f\u3002\u7c7b\u4f3c\u5730\uff0c\u4f7f\u7528 * \u53ef\u4ee5\u6307\u5b9a\u67d0\u4e9b\u53c2\u6570\u5fc5\u987b\u4f7f\u7528\u5173\u952e\u5b57\u53c2\u6570\u3002 \u5728\u4ee5\u4e0b\u793a\u4f8b\u4e2d\uff1a / \u4e4b\u524d\u7684\u53c2\u6570\uff08 a \u548c b \uff09\u5fc5\u987b\u4f7f\u7528\u4f4d\u7f6e\u53c2\u6570\uff0c\u8fd9\u610f\u5473\u7740\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u5fc5\u987b\u6309\u987a\u5e8f\u4f20\u9012\u8fd9\u4e9b\u53c2\u6570\uff0c\u4e0d\u80fd\u901a\u8fc7\u5173\u952e\u5b57\u5f62\u5f0f\u6307\u5b9a\u5b83\u4eec\u3002 / \u548c * \u4e4b\u95f4\u7684\u53c2\u6570\uff08 c \u548c d \uff09\u53ef\u4ee5\u4f7f\u7528\u4f4d\u7f6e\u53c2\u6570\u6216\u5173\u952e\u5b57\u53c2\u6570\u3002 * \u4e4b\u540e\u7684\u53c2\u6570\uff08 e \u548c f \uff09\u5fc5\u987b\u4f7f\u7528\u5173\u952e\u5b57\u53c2\u6570\u3002 def f(a, b, /, c, d, *, e, f): print(a, b, c, d, e, f) \u5bf9\u4e8e\u4e0a\u8ff0\u51fd\u6570\uff0c\u4ee5\u4e0b\u8c03\u7528\u65b9\u6cd5\u662f\u6b63\u786e\u7684\uff1a f(10, 20, 30, d=40, e=50, f=60) \u5728\u8fd9\u4e2a\u8c03\u7528\u4e2d\uff1a 10 \u548c 20 \u4f20\u9012\u7ed9 a \u548c b \uff0c\u4f5c\u4e3a\u4f4d\u7f6e\u53c2\u6570\u3002 30 \u548c 40 \u5206\u522b\u4f20\u9012\u7ed9 c \u548c d \uff0c\u5176\u4e2d d \u4ee5\u5173\u952e\u5b57\u53c2\u6570\u7684\u5f62\u5f0f\u4f20\u9012\u3002 e \u548c f \u5fc5\u987b\u4f7f\u7528\u5173\u952e\u5b57\u53c2\u6570\u7684\u5f62\u5f0f\u4f20\u9012\u3002 \u4ee5\u4e0b\u8c03\u7528\u65b9\u6cd5\u4f1a\u4ea7\u751f\u9519\u8bef\uff1a f(10, b=20, c=30, d=40, e=50, f=60) # \u9519\u8bef\uff1ab \u4e0d\u80fd\u4f7f\u7528\u5173\u952e\u5b57\u53c2\u6570\u7684\u5f62\u5f0f f(10, 20, 30, 40, 50, f=60) # \u9519\u8bef\uff1ae \u5fc5\u987b\u4f7f\u7528\u5173\u952e\u5b57\u53c2\u6570\u7684\u5f62\u5f0f \u5728\u7b2c\u4e00\u4e2a\u9519\u8bef\u793a\u4f8b\u4e2d\uff0c b \u4f5c\u4e3a\u5173\u952e\u5b57\u53c2\u6570\u4f20\u9012\u662f\u4e0d\u5141\u8bb8\u7684\uff0c\u56e0\u4e3a\u5b83\u5728 / \u4e4b\u524d\uff0c\u5fc5\u987b\u4f5c\u4e3a\u4f4d\u7f6e\u53c2\u6570\u4f20\u9012\u3002 \u5728\u7b2c\u4e8c\u4e2a\u9519\u8bef\u793a\u4f8b\u4e2d\uff0c e \u6ca1\u6709\u901a\u8fc7\u5173\u952e\u5b57\u53c2\u6570\u4f20\u9012\uff0c\u4f46\u56e0\u4e3a\u5b83\u5728 * \u4e4b\u540e\uff0c\u6240\u4ee5\u5fc5\u987b\u4ee5\u5173\u952e\u5b57\u53c2\u6570\u5f62\u5f0f\u4f20\u9012\u3002","title":"7 \u5f3a\u5236\u4f4d\u7f6e\u53c2\u6570"},{"location":"lesson3/Lesson3%20Python/#_3","text":"\u8bf7\u5c06\u4e0b\u5217\u4ee3\u7801\uff08Lesson2\u8bfe\u540e\u7ec3\u4e60\uff09\u7684\u70b9\u5355\u3001\u6253\u5370\u5ba2\u6237\u70b9\u5355\u5185\u5bb9\u3001\u8ba1\u7b97\u8ba2\u5355\u603b\u4ef7\u4e09\u4e2a\u529f\u80fd\u5c01\u88c5\u6210\u72ec\u7acb\u7684\u65b9\u6cd5\u3002 # \u9910\u5385\u70b9\u5355\u7a0b\u5e8f # \u5b9a\u4e49\u5546\u54c1\u7684\u4ef7\u683c\u5e38\u91cf PRICE_BURGER = 12.5 # \u6c49\u5821\u7684\u4ef7\u683c PRICE_FRIES = 6 # \u85af\u6761\u7684\u4ef7\u683c PRICE_COKE = 4.5 # \u53ef\u4e50\u7684\u4ef7\u683c # \u521d\u59cb\u5316\u603b\u9500\u552e\u989d total_sales = 0.0 while True: # \u63d0\u793a\u7528\u6237\u8f93\u5165\u662f\u5426\u7ee7\u7eed\u70b9\u5355\uff0c-1\u8868\u793a\u9000\u51fa user_input = input(\"\u8f93\u5165-1\u9000\u51fa\u5e76\u8ba1\u7b97\u603b\u9500\u552e\u989d\uff0c\u5176\u4ed6\u6570\u5b57\u7ee7\u7eed\u70b9\u5355: \") if user_input == '-1': break # \u63a5\u53d7\u987e\u5ba2\u7684\u70b9\u5355 num_burgers = int(input(\"\u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf: \")) num_fries = int(input(\"\u8bf7\u8f93\u5165\u85af\u6761\u7684\u6570\u91cf: \")) num_cokes = int(input(\"\u8bf7\u8f93\u5165\u53ef\u4e50\u7684\u6570\u91cf: \")) # \u8ba1\u7b97\u5f53\u524d\u987e\u5ba2\u7684\u70b9\u5355\u603b\u4ef7 total_price = num_burgers * PRICE_BURGER + num_fries * PRICE_FRIES + num_cokes * PRICE_COKE # \u8f93\u51fa\u5f53\u524d\u987e\u5ba2\u7684\u70b9\u5355\u5185\u5bb9\u548c\u603b\u4ef7 print(f\"\u987e\u5ba2\u70b9\u5355\u5185\u5bb9: \u6c49\u5821 {num_burgers} \u4e2a, \u85af\u6761 {num_fries} \u4efd, \u53ef\u4e50 {num_cokes} \u74f6\") print(f\"\u672c\u6b21\u70b9\u5355\u603b\u4ef7: {total_price:.2f} \u5143\") # \u5c06\u672c\u6b21\u70b9\u5355\u603b\u4ef7\u7d2f\u52a0\u5230\u603b\u9500\u552e\u989d\u4e2d total_sales += total_price # \u8f93\u51fa\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d print(f\"\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d: {total_sales:.2f} \u5143\") \u53c2\u8003\u7b54\u6848 # \u9910\u5385\u70b9\u5355\u7a0b\u5e8f # \u5b9a\u4e49\u5546\u54c1\u7684\u4ef7\u683c\u5e38\u91cf PRICE_BURGER = 12.5 # \u6c49\u5821\u7684\u4ef7\u683c PRICE_FRIES = 6 # \u85af\u6761\u7684\u4ef7\u683c PRICE_COKE = 4.5 # \u53ef\u4e50\u7684\u4ef7\u683c # \u521d\u59cb\u5316\u603b\u9500\u552e\u989d total_sales = 0.0 def take_order(): num_burgers = int(input(\"\u8bf7\u8f93\u5165\u6c49\u5821\u7684\u6570\u91cf: \")) num_fries = int(input(\"\u8bf7\u8f93\u5165\u85af\u6761\u7684\u6570\u91cf: \")) num_cokes = int(input(\"\u8bf7\u8f93\u5165\u53ef\u4e50\u7684\u6570\u91cf: \")) return num_burgers, num_fries, num_cokes def print_order(num_burgers, num_fries, num_cokes): # \u6253\u5370\u987e\u5ba2\u7684\u70b9\u5355\u5185\u5bb9\u3002 print(f\"\u987e\u5ba2\u70b9\u5355\u5185\u5bb9: \u6c49\u5821 {num_burgers} \u4e2a, \u85af\u6761 {num_fries} \u4efd, \u53ef\u4e50 {num_cokes} \u74f6\") def calculate_total_price(num_burgers, num_fries, num_cokes): # \u8ba1\u7b97\u5e76\u8fd4\u56de\u70b9\u5355\u603b\u4ef7\u3002 return num_burgers * PRICE_BURGER + num_fries * PRICE_FRIES + num_cokes * PRICE_COKE while True: # \u63d0\u793a\u7528\u6237\u8f93\u5165\u662f\u5426\u7ee7\u7eed\u70b9\u5355\uff0c-1\u8868\u793a\u9000\u51fa user_input = input(\"\u8f93\u5165-1\u9000\u51fa\u5e76\u8ba1\u7b97\u603b\u9500\u552e\u989d\uff0c\u5176\u4ed6\u6570\u5b57\u7ee7\u7eed\u70b9\u5355: \") if user_input == '-1': break # \u63a5\u53d7\u987e\u5ba2\u7684\u70b9\u5355 num_burgers, num_fries, num_cokes = take_order() if num_burgers is None or num_fries is None or num_cokes is None: continue # \u6253\u5370\u987e\u5ba2\u7684\u70b9\u5355\u5185\u5bb9 print_order(num_burgers, num_fries, num_cokes) # \u8ba1\u7b97\u5e76\u8f93\u51fa\u5f53\u524d\u987e\u5ba2\u7684\u70b9\u5355\u603b\u4ef7 total_price = calculate_total_price(num_burgers, num_fries, num_cokes) print(f\"\u672c\u6b21\u70b9\u5355\u603b\u4ef7: {total_price:.2f} \u5143\") # \u5c06\u672c\u6b21\u70b9\u5355\u603b\u4ef7\u7d2f\u52a0\u5230\u603b\u9500\u552e\u989d\u4e2d total_sales += total_price # \u8f93\u51fa\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d print(f\"\u6240\u6709\u987e\u5ba2\u7684\u603b\u9500\u552e\u989d: {total_sales:.2f} \u5143\")","title":"\u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson4/Lesson4%20C%2B%2B/","text":"Lesson 4 \u5b57\u7b26\u4e32\u57fa\u7840 \u76ee\u5f55 4.1 \u521b\u5efa\u5b57\u7b26\u4e32 4.2 \u8bbf\u95ee\u5b57\u7b26\u4e32\u4e2d\u7684\u503c 4.3 \u5b57\u7b26\u4e32\u8fde\u63a5\u4e0e\u66f4\u65b0 4.4 C++ \u5b57\u7b26\u4e32\u683c\u5f0f\u5316 4.5 C++ \u8f6c\u4e49\u5b57\u7b26 4.6 C++ \u5b57\u7b26\u4e32\u8fd0\u7b97\u7b26 4.7\u8bfe\u540e\u7ec3\u4e60 4.1 \u521b\u5efa\u5b57\u7b26\u4e32 C++\u4e2d\u4f7f\u7528 std::string \u7c7b\u6765\u8868\u793a\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u4f7f\u7528\u53cc\u5f15\u53f7 \" \" \u6765\u521b\u5efa\u5b57\u7b26\u4e32\u53d8\u91cf\u3002 #include <iostream> #include <string> using namespace std; int main() { string var1 = \"Hello World!\"; string var2 = \"CodeRaft\"; return 0; } 4.2 \u8bbf\u95ee\u5b57\u7b26\u4e32\u4e2d\u7684\u503c C++\u4e2d\u8bbf\u95ee\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u53ef\u4ee5\u4f7f\u7528\u7d22\u5f15\uff0c\u7d22\u5f15\u4ece0\u5f00\u59cb\u3002 #include <iostream> #include <string> using namespace std; int main() { string var1 = \"Hello World!\"; char firstChar = var1[0]; // \u83b7\u53d6\u7d22\u5f15\u4e3a0\u7684\u5b57\u7b26 'H' string substr = var1.substr(1, 4); // \u622a\u53d6\u5b57\u7b26\u4e32 var1 \u7684\u7b2c2\u5230\u7b2c5\u4e2a\u5b57\u7b26\uff08\"ello\"\uff09 cout << \"First character: \" << firstChar << endl; cout << \"Substring: \" << substr << endl; return 0; } 4.3 \u5b57\u7b26\u4e32\u8fde\u63a5\u4e0e\u66f4\u65b0 \u5728C++\u4e2d\uff0c\u5b57\u7b26\u4e32\u662f\u53ef\u53d8\u7684\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u53ef\u4ee5\u4fee\u6539\u5b83\u4eec\u7684\u5185\u5bb9\u3002\u5b57\u7b26\u4e32\u8fde\u63a5\u662f\u5c06\u4e24\u4e2a\u6216\u591a\u4e2a\u5b57\u7b26\u4e32\u5408\u5e76\u6210\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32\u3002C++ \u63d0\u4f9b\u4e86\u591a\u79cd\u65b9\u6cd5\u6765\u5b9e\u73b0\u5b57\u7b26\u4e32\u7684\u8fde\u63a5\u548c\u66f4\u65b0\uff0c\u5305\u62ec\u4f7f\u7528 + \u64cd\u4f5c\u7b26\u548c append \u65b9\u6cd5\u3002 4.3.1 \u4f7f\u7528 + \u64cd\u4f5c\u7b26\u8fde\u63a5\u5b57\u7b26\u4e32 + \u64cd\u4f5c\u7b26\u662f\u6700\u5e38\u7528\u7684\u5b57\u7b26\u4e32\u8fde\u63a5\u65b9\u5f0f\uff0c\u5b83\u5c06\u4e24\u4e2a\u5b57\u7b26\u4e32\u5408\u5e76\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32\u3002\u4f60\u8fd8\u53ef\u4ee5\u5c06\u8fde\u63a5\u540e\u7684\u5b57\u7b26\u4e32\u8d4b\u503c\u7ed9\u539f\u53d8\u91cf\uff0c\u4ece\u800c\u66f4\u65b0\u5b57\u7b26\u4e32\u7684\u503c\u3002 #include <iostream> #include <string> using namespace std; int main() { string var1 = \"Hello\"; var1 = var1 + \" CodeRaft!\"; // \u8fde\u63a5\u5b57\u7b26\u4e32\u5e76\u66f4\u65b0 var1 cout << var1 << endl; return 0; } \u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u5b57\u7b26\u4e32 var1 \u7684\u521d\u59cb\u503c\u4e3a \"Hello\" \u3002 \u901a\u8fc7\u4f7f\u7528 + \u64cd\u4f5c\u7b26\uff0c\u5c06 \" CodeRaft!\" \u8fde\u63a5\u5230 var1 \u4e0a\uff0c\u5e76\u5c06\u7ed3\u679c\u8d4b\u503c\u56de var1 \uff0c\u4ece\u800c\u66f4\u65b0\u4e86 var1 \u7684\u503c\u3002 \u6700\u7ec8\u8f93\u51fa\u7684\u5b57\u7b26\u4e32\u662f \"Hello CodeRaft!\" \u3002 4.3.2 \u4f7f\u7528 append \u65b9\u6cd5\u8fde\u63a5\u5b57\u7b26\u4e32 append \u65b9\u6cd5\u662f\u53e6\u4e00\u4e2a\u7528\u4e8e\u8fde\u63a5\u5b57\u7b26\u4e32\u7684\u5e38\u7528\u65b9\u5f0f\uff0c\u5b83\u76f4\u63a5\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u8ffd\u52a0\u5230\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\uff0c\u5e76\u66f4\u65b0\u539f\u59cb\u5b57\u7b26\u4e32\u3002 #include <iostream> #include <string> using namespace std; int main() { string var1 = \"Hello\"; var1.append(\" CodeRaft!\"); // \u4f7f\u7528 append \u65b9\u6cd5\u8fde\u63a5\u5b57\u7b26\u4e32\u5e76\u66f4\u65b0 var1 cout << var1 << endl; return 0; } \u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c var1 \u7684\u521d\u59cb\u503c\u4e3a \"Hello\" \u3002 \u4f7f\u7528 append \u65b9\u6cd5\uff0c\u5c06 \" CodeRaft!\" \u8ffd\u52a0\u5230 var1 \u7684\u672b\u5c3e\u3002 append \u65b9\u6cd5\u4f1a\u4fee\u6539 var1 \uff0c\u4f7f\u5176\u66f4\u65b0\u4e3a \"Hello CodeRaft!\" \u3002 \u6700\u7ec8\u8f93\u51fa\u7684\u5b57\u7b26\u4e32\u4e0e\u4e0a\u4e00\u4e2a\u793a\u4f8b\u76f8\u540c\uff0c\u90fd\u662f \"Hello CodeRaft!\" \u3002 4.4 C++ \u5b57\u7b26\u4e32\u683c\u5f0f\u5316 C++\u4e2d\u53ef\u4ee5\u4f7f\u7528 sprintf \u51fd\u6570\u8fdb\u884c\u5b57\u7b26\u4e32\u683c\u5f0f\u5316\uff0c\u6216\u8005\u4f7f\u7528 std::ostringstream \u8fdb\u884c\u683c\u5f0f\u5316\u8f93\u51fa\u3002 4.4.1 \u4f7f\u7528 sprintf #include <iostream> #include <string> #include <cstdio> using namespace std; int main() { char buffer[100]; string name = \"CodeRaft\"; int age = 10; sprintf(buffer, \"\u6211\u53eb %s \u4eca\u5e74 %d \u5c81!\", name.c_str(), age); string formattedString = buffer; cout << formattedString << endl; return 0; } 4.4.2 \u4f7f\u7528 std::ostringstream #include <iostream> #include <string> #include <sstream> using namespace std; int main() { ostringstream oss; string name = \"CodeRaft\"; int age = 10; oss << \"\u6211\u53eb \" << name << \" \u4eca\u5e74 \" << age << \" \u5c81!\"; string formattedString = oss.str(); cout << formattedString << endl; return 0; } 4.4.3 \u683c\u5f0f\u5316\u7b26\u53f7 %s \uff1a\u683c\u5f0f\u5316\u5b57\u7b26\u4e32 %d \uff1a\u683c\u5f0f\u5316\u6574\u6570 %f \uff1a\u683c\u5f0f\u5316\u6d6e\u70b9\u6570 \u793a\u4f8b #include <iostream> #include <string> #include <sstream> #include <cstdio> using namespace std; int main() { string name = \"\u5c0f\u660e\"; int age = 10; double height = 1.75; // \u4f7f\u7528 sprintf \u683c\u5f0f\u5316\u5b57\u7b26\u4e32 char buffer[100]; sprintf(buffer, \"\u6211\u53eb %s\uff0c\u4eca\u5e74 %d \u5c81\uff0c\u8eab\u9ad8 %.2f \u7c73\", name.c_str(), age, height); string formattedString1 = buffer; // \u4f7f\u7528 ostringstream \u683c\u5f0f\u5316\u5b57\u7b26\u4e32 ostringstream oss; oss << \"\u6211\u53eb \" << name << \"\uff0c\u4eca\u5e74 \" << age << \" \u5c81\uff0c\u8eab\u9ad8 \" << height << \" \u7c73\"; string formattedString2 = oss.str(); cout << formattedString1 << endl; // \u8f93\u51fa\uff1a\u6211\u53eb \u5c0f\u660e\uff0c\u4eca\u5e74 10 \u5c81\uff0c\u8eab\u9ad8 1.75 \u7c73 cout << formattedString2 << endl; // \u8f93\u51fa\uff1a\u6211\u53eb \u5c0f\u660e\uff0c\u4eca\u5e74 10 \u5c81\uff0c\u8eab\u9ad8 1.75 \u7c73 return 0; } 4.5 C++ \u8f6c\u4e49\u5b57\u7b26 \u5728C++\u4e2d\uff0c\u8f6c\u4e49\u5b57\u7b26\u7528\u4e8e\u8868\u793a\u7279\u6b8a\u5b57\u7b26\u548c\u63a7\u5236\u5b57\u7b26\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u89c1\u7684\u8f6c\u4e49\u5b57\u7b26\u793a\u4f8b\uff1a \u8f6c\u4e49\u5b57\u7b26 \u63cf\u8ff0 \u793a\u4f8b \\\\ \u53cd\u659c\u6760\u7b26\u53f7 cout << \"\\\\\" << endl; \\' \u5355\u5f15\u53f7 cout << \"\\'\" << endl; \\\" \u53cc\u5f15\u53f7 cout << \"\\\"\" << endl; \\n \u6362\u884c cout << \"Hello\\nWorld!\"; \\t \u5236\u8868\u7b26 cout << \"Hello\\tWorld!\"; \u793a\u4f8b\u4ee3\u7801 #include <iostream> using namespace std; int main() { // \u5355\u5f15\u53f7 cout << '\\'' << endl; // \u8f93\u51fa\uff1a' // \u6362\u884c\u7b26 cout << \"Hello, world!\\nHow are you?\" << endl; // \u5236\u8868\u7b26 cout << \"Hello, world!\\tHow are you?\" << endl; // \u9000\u683c\u7b26 cout << \"Hello,\\b world!\" << endl; // ASCII \u503c char ch = 'A'; cout << \"A \u5bf9\u5e94\u7684 ASCII \u503c\u4e3a\uff1a\" << static_cast<int>(ch) << endl; return 0; } 4.6 C++ \u5b57\u7b26\u4e32\u8fd0\u7b97\u7b26 4.6.1 C++ \u5b57\u7b26\u4e32\u8fd0\u7b97\u7b26 \u5b57\u7b26\u4e32\u8fde\u63a5\u8fd0\u7b97\u7b26 + \u5b57\u7b26\u4e32\u8fde\u63a5\u8fd0\u7b97\u7b26 + \u7528\u4e8e\u5c06\u4e24\u4e2a\u5b57\u7b26\u4e32\u8fde\u63a5\u8d77\u6765\u3002 \u793a\u4f8b\uff1a cpp string str1 = \"Hello\"; string str2 = \"World\"; string result = str1 + str2; cout << result << endl; // \u8f93\u51fa\uff1aHelloWorld \u901a\u8fc7\u7d22\u5f15\u83b7\u53d6\u5b57\u7b26 operator[] operator[] \u7528\u4e8e\u83b7\u53d6\u5b57\u7b26\u4e32\u4e2d\u6307\u5b9a\u4f4d\u7f6e\u7684\u5b57\u7b26\u3002 \u793a\u4f8b\uff1a cpp string str = \"Hello\"; char ch = str[1]; // \u83b7\u53d6\u7d22\u5f15\u4e3a1\u7684\u5b57\u7b26\uff0c\u5373\u7b2c2\u4e2a\u5b57\u7b26 'e' cout << ch << endl; // \u8f93\u51fa\uff1ae \u622a\u53d6\u5b50\u5b57\u7b26\u4e32 substr() substr() \u65b9\u6cd5\u7528\u4e8e\u622a\u53d6\u5b57\u7b26\u4e32\u7684\u4e00\u90e8\u5206\u3002 \u793a\u4f8b\uff1a cpp string str = \"HelloWorld\"; string subStr = str.substr(3, 4); // \u4ece\u7d22\u5f153\u5f00\u59cb\u622a\u53d64\u4e2a\u5b57\u7b26\uff0c\u5373 \"loWo\" cout << subStr << endl; // \u8f93\u51fa\uff1aloWo \u6210\u5458\u8fd0\u7b97\u7b26 find() \u548c rfind() find() \u548c rfind() \u65b9\u6cd5\u7528\u4e8e\u83b7\u53d6\u5b57\u7b26\u6216\u5b57\u7b26\u4e32\u5728\u76ee\u6807\u5b57\u7b26\u4e32\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u7d22\u5f15\u548c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u7d22\u5f15\u3002 **\u793a\u4f8b \uff1a** cpp string str = \"HelloWorld\"; size_t firstIndex = str.find('o'); // \u7b2c\u4e00\u6b21\u51fa\u73b0 'o' \u7684\u4f4d\u7f6e\u7d22\u5f15\uff0c\u7d22\u5f15\u4ece0\u5f00\u59cb size_t lastIndex = str.rfind('o'); // \u6700\u540e\u4e00\u6b21\u51fa\u73b0 'o' \u7684\u4f4d\u7f6e\u7d22\u5f15 cout << \"\u7b2c\u4e00\u6b21\u51fa\u73b0 'o' \u7684\u4f4d\u7f6e\u7d22\u5f15\uff1a\" << firstIndex << endl; // \u8f93\u51fa\uff1a4 cout << \"\u6700\u540e\u4e00\u6b21\u51fa\u73b0 'o' \u7684\u4f4d\u7f6e\u7d22\u5f15\uff1a\" << lastIndex << endl; // \u8f93\u51fa\uff1a7 4.7 \u8bfe\u540e\u7ec3\u4e60 \u9898\u76ee 1: \u5b57\u7b26\u4e32\u7d22\u5f15\u4e0e\u5207\u7247 \u89c2\u5bdf\u4ee5\u4e0b\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f #include <iostream> #include <string> using namespace std; int main() { string str = \"Hello, World!\"; string slice = str.substr(7, 5); cout << slice << endl; return 0; } A. Hello B. World C. World! D. , Wor \u7b54\u6848\uff1a B. World \u7406\u7531\uff1a substr(7, 5) \u65b9\u6cd5\u8fd4\u56de\u4ece\u7d22\u5f15 7 \u5f00\u59cb\uff0c\u957f\u5ea6\u4e3a 5 \u7684\u5b50\u5b57\u7b26\u4e32\uff0c\u5373 \"World\"\u3002 \u9898\u76ee 2: \u5b57\u7b26\u4e32\u5e38\u7528\u51fd\u6570 \u89c2\u5bdf\u4ee5\u4e0b\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f #include <iostream> #include <string> using namespace std; int main() { string str = \" C++ Programming \"; int length = str.length(); string lower = str; for (int i = 0; i < lower.length(); i++) { if (lower[i] >= 'A' && lower[i] <= 'Z') { lower[i] = lower[i] + ('a' - 'A'); // \u8f6c\u6362\u4e3a\u5c0f\u5199 } } string concatenated = lower + \" is fun!\"; cout << \"Length: \" << length << endl; cout << \"Concatenated: \" << concatenated << endl; return 0; } A. Length: 18; Concatenated: C++ programming is fun! B. Length: 17; Concatenated: C++ programming is fun! C. Length: 18; Concatenated: C++ programming is fun! D. Length: 16; Concatenated: C++ programming is fun! \u7b54\u6848\uff1a C. Length: 18; Concatenated: C++ programming is fun! \u7406\u7531\uff1a length() \u8fd4\u56de\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff0c\u5faa\u73af\u624b\u52a8\u5c06\u6240\u6709\u5927\u5199\u5b57\u7b26\u8f6c\u6362\u4e3a\u5c0f\u5199\uff0c + \u8fd0\u7b97\u7b26\u8fdb\u884c\u5b57\u7b26\u4e32\u62fc\u63a5\uff0c\u7ed3\u679c\u662f \"C++ programming is fun!\"\u3002 \u9898\u76ee 3: \u5b57\u7b26\u4e32\u683c\u5f0f\u5316 \u89c2\u5bdf\u4ee5\u4e0b\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f #include <iostream> #include <string> using namespace std; int main() { int age = 25; string name = \"Alice\"; string formatted = \"Name: \" + name + \", Age: \" + to_string(age); cout << formatted << endl; return 0; } A. Name: Alice, Age: 25 B. Name: %s, Age: %d C. Name: Alice, Age: 25 D. Name: Alice, Age: age \u7b54\u6848\uff1a A. Name: Alice, Age: 25 \u7406\u7531\uff1a + \u8fd0\u7b97\u7b26\u7528\u4e8e\u5b57\u7b26\u4e32\u62fc\u63a5\uff0c to_string \u5c06\u6574\u6570\u8f6c\u4e3a\u5b57\u7b26\u4e32\uff0c\u7ed3\u679c\u662f \"Name: Alice, Age: 25\"\u3002 \u4ee3\u7801\u9898 \u9898\u76ee 1: \u5b57\u7b26\u4e32\u7d22\u5f15\u4e0e\u5207\u7247 \u9898\u76ee\uff1a \u7f16\u5199\u4e00\u4e2a C++ \u7a0b\u5e8f\uff0c\u521b\u5efa\u4e00\u4e2a\u5b57\u7b26\u4e32 \"Programming in C++\"\u3002\u4f7f\u7528 substr \u65b9\u6cd5\u63d0\u53d6\u5e76\u8f93\u51fa\u4ece\u7d22\u5f15 0 \u5230\u7d22\u5f15 11 \u7684\u5b50\u5b57\u7b26\u4e32\u3002 \u793a\u4f8b\u4ee3\u7801\uff1a #include <iostream> #include <string> using namespace std; int main() { string str = \"Programming in C++\"; // \u8bf7\u5728\u8fd9\u91cc\u7f16\u5199\u4ee3\u7801 } \u7b54\u6848\uff1a #include <iostream> #include <string> using namespace std; int main() { string str = \"Programming in C++\"; string substring = str.substr(0, 11); cout << substring << endl; // \u8f93\u51fa \"Programming\" return 0; } \u9898\u76ee 2: \u5b57\u7b26\u4e32\u5e38\u7528\u51fd\u6570 \u9898\u76ee\uff1a \u7f16\u5199\u4e00\u4e2a C++ \u7a0b\u5e8f\uff0c\u521b\u5efa\u4e00\u4e2a\u5b57\u7b26\u4e32 \" C++ Programming \" \u3002\u53bb\u9664\u5b57\u7b26\u4e32\u524d\u540e\u7684\u7a7a\u767d\u5b57\u7b26\uff0c\u8f6c\u6362\u4e3a\u5927\u5199\uff0c\u5e76\u62fc\u63a5 \" is fun!\" \u3002\u8f93\u51fa\u6700\u7ec8\u7ed3\u679c\u3002 \u793a\u4f8b\u4ee3\u7801\uff1a #include <iostream> #include <string> using namespace std; int main() { string str = \" C++ Programming \"; // \u8bf7\u5728\u8fd9\u91cc\u7f16\u5199\u4ee3\u7801 } \u7b54\u6848\uff1a #include <iostream> #include <string> using namespace std; int main() { string str = \" C++ Programming \"; // \u53bb\u9664\u524d\u5bfc\u7a7a\u683c int start = 0; while (start < str.length() && str[start] == ' ') { start++; } // \u53bb\u9664\u540e\u7eed\u7a7a\u683c int end = str.length() - 1; while (end >= 0 && str[end] == ' ') { end--; } // \u622a\u53d6\u53bb\u9664\u7a7a\u683c\u540e\u7684\u5b57\u7b26\u4e32 str = str.substr(start, end - start + 1); // \u8f6c\u6362\u4e3a\u5927\u5199 for (int i = 0; i < str.length(); i++) { if (str[i] >= 'a' && str[i] <= 'z') { str[i] = str[i] - ('a' - 'A'); } } // \u62fc\u63a5\u5b57\u7b26\u4e32 string result = str + \" IS FUN!\"; cout << result << endl; // \u8f93\u51fa \"C++ PROGRAMMING IS FUN!\" return 0; } \u9898\u76ee 3: \u5b57\u7b26\u4e32\u683c\u5f0f\u5316 \u9898\u76ee\uff1a \u7f16\u5199\u4e00\u4e2a C++ \u7a0b\u5e8f\uff0c\u521b\u5efa\u4e00\u4e2a\u6574\u6570\u53d8\u91cf score \u8d4b\u503c\u4e3a 85\uff0c\u521b\u5efa\u4e00\u4e2a\u5b57\u7b26\u4e32\u53d8\u91cf student \u8d4b\u503c\u4e3a \"John\"\u3002\u4f7f\u7528\u5b57\u7b26\u4e32\u62fc\u63a5\u65b9\u6cd5\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\uff0c\u8f93\u51fa \"Student John scored 85 points\"\u3002 \u793a\u4f8b\u4ee3\u7801\uff1a #include <iostream> #include <string> using namespace std; int main() { int score = 85; string student = \"John\"; // \u8bf7\u5728\u8fd9\u91cc\u7f16\u5199\u4ee3\u7801 } \u7b54\u6848\uff1a #include <iostream> #include <string> using namespace std; int main() { int score = 85; string student = \"John\"; string formatted = \"Student \" + student + \" scored \" + to_string(score) + \" points\"; cout << formatted << endl; // \u8f93\u51fa \"Student John scored 85 points\" return 0; }","title":"Lesson 4 \u5b57\u7b26\u4e32\u57fa\u7840"},{"location":"lesson4/Lesson4%20C%2B%2B/#lesson-4","text":"","title":"Lesson 4 \u5b57\u7b26\u4e32\u57fa\u7840"},{"location":"lesson4/Lesson4%20C%2B%2B/#_1","text":"4.1 \u521b\u5efa\u5b57\u7b26\u4e32 4.2 \u8bbf\u95ee\u5b57\u7b26\u4e32\u4e2d\u7684\u503c 4.3 \u5b57\u7b26\u4e32\u8fde\u63a5\u4e0e\u66f4\u65b0 4.4 C++ \u5b57\u7b26\u4e32\u683c\u5f0f\u5316 4.5 C++ \u8f6c\u4e49\u5b57\u7b26 4.6 C++ \u5b57\u7b26\u4e32\u8fd0\u7b97\u7b26 4.7\u8bfe\u540e\u7ec3\u4e60","title":"\u76ee\u5f55"},{"location":"lesson4/Lesson4%20C%2B%2B/#41","text":"C++\u4e2d\u4f7f\u7528 std::string \u7c7b\u6765\u8868\u793a\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u4f7f\u7528\u53cc\u5f15\u53f7 \" \" \u6765\u521b\u5efa\u5b57\u7b26\u4e32\u53d8\u91cf\u3002 #include <iostream> #include <string> using namespace std; int main() { string var1 = \"Hello World!\"; string var2 = \"CodeRaft\"; return 0; }","title":"4.1 \u521b\u5efa\u5b57\u7b26\u4e32"},{"location":"lesson4/Lesson4%20C%2B%2B/#42","text":"C++\u4e2d\u8bbf\u95ee\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u53ef\u4ee5\u4f7f\u7528\u7d22\u5f15\uff0c\u7d22\u5f15\u4ece0\u5f00\u59cb\u3002 #include <iostream> #include <string> using namespace std; int main() { string var1 = \"Hello World!\"; char firstChar = var1[0]; // \u83b7\u53d6\u7d22\u5f15\u4e3a0\u7684\u5b57\u7b26 'H' string substr = var1.substr(1, 4); // \u622a\u53d6\u5b57\u7b26\u4e32 var1 \u7684\u7b2c2\u5230\u7b2c5\u4e2a\u5b57\u7b26\uff08\"ello\"\uff09 cout << \"First character: \" << firstChar << endl; cout << \"Substring: \" << substr << endl; return 0; }","title":"4.2 \u8bbf\u95ee\u5b57\u7b26\u4e32\u4e2d\u7684\u503c"},{"location":"lesson4/Lesson4%20C%2B%2B/#43","text":"\u5728C++\u4e2d\uff0c\u5b57\u7b26\u4e32\u662f\u53ef\u53d8\u7684\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u53ef\u4ee5\u4fee\u6539\u5b83\u4eec\u7684\u5185\u5bb9\u3002\u5b57\u7b26\u4e32\u8fde\u63a5\u662f\u5c06\u4e24\u4e2a\u6216\u591a\u4e2a\u5b57\u7b26\u4e32\u5408\u5e76\u6210\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32\u3002C++ \u63d0\u4f9b\u4e86\u591a\u79cd\u65b9\u6cd5\u6765\u5b9e\u73b0\u5b57\u7b26\u4e32\u7684\u8fde\u63a5\u548c\u66f4\u65b0\uff0c\u5305\u62ec\u4f7f\u7528 + \u64cd\u4f5c\u7b26\u548c append \u65b9\u6cd5\u3002","title":"4.3 \u5b57\u7b26\u4e32\u8fde\u63a5\u4e0e\u66f4\u65b0"},{"location":"lesson4/Lesson4%20C%2B%2B/#431","text":"+ \u64cd\u4f5c\u7b26\u662f\u6700\u5e38\u7528\u7684\u5b57\u7b26\u4e32\u8fde\u63a5\u65b9\u5f0f\uff0c\u5b83\u5c06\u4e24\u4e2a\u5b57\u7b26\u4e32\u5408\u5e76\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32\u3002\u4f60\u8fd8\u53ef\u4ee5\u5c06\u8fde\u63a5\u540e\u7684\u5b57\u7b26\u4e32\u8d4b\u503c\u7ed9\u539f\u53d8\u91cf\uff0c\u4ece\u800c\u66f4\u65b0\u5b57\u7b26\u4e32\u7684\u503c\u3002 #include <iostream> #include <string> using namespace std; int main() { string var1 = \"Hello\"; var1 = var1 + \" CodeRaft!\"; // \u8fde\u63a5\u5b57\u7b26\u4e32\u5e76\u66f4\u65b0 var1 cout << var1 << endl; return 0; } \u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u5b57\u7b26\u4e32 var1 \u7684\u521d\u59cb\u503c\u4e3a \"Hello\" \u3002 \u901a\u8fc7\u4f7f\u7528 + \u64cd\u4f5c\u7b26\uff0c\u5c06 \" CodeRaft!\" \u8fde\u63a5\u5230 var1 \u4e0a\uff0c\u5e76\u5c06\u7ed3\u679c\u8d4b\u503c\u56de var1 \uff0c\u4ece\u800c\u66f4\u65b0\u4e86 var1 \u7684\u503c\u3002 \u6700\u7ec8\u8f93\u51fa\u7684\u5b57\u7b26\u4e32\u662f \"Hello CodeRaft!\" \u3002","title":"4.3.1 \u4f7f\u7528 + \u64cd\u4f5c\u7b26\u8fde\u63a5\u5b57\u7b26\u4e32"},{"location":"lesson4/Lesson4%20C%2B%2B/#432-append","text":"append \u65b9\u6cd5\u662f\u53e6\u4e00\u4e2a\u7528\u4e8e\u8fde\u63a5\u5b57\u7b26\u4e32\u7684\u5e38\u7528\u65b9\u5f0f\uff0c\u5b83\u76f4\u63a5\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u8ffd\u52a0\u5230\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\uff0c\u5e76\u66f4\u65b0\u539f\u59cb\u5b57\u7b26\u4e32\u3002 #include <iostream> #include <string> using namespace std; int main() { string var1 = \"Hello\"; var1.append(\" CodeRaft!\"); // \u4f7f\u7528 append \u65b9\u6cd5\u8fde\u63a5\u5b57\u7b26\u4e32\u5e76\u66f4\u65b0 var1 cout << var1 << endl; return 0; } \u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c var1 \u7684\u521d\u59cb\u503c\u4e3a \"Hello\" \u3002 \u4f7f\u7528 append \u65b9\u6cd5\uff0c\u5c06 \" CodeRaft!\" \u8ffd\u52a0\u5230 var1 \u7684\u672b\u5c3e\u3002 append \u65b9\u6cd5\u4f1a\u4fee\u6539 var1 \uff0c\u4f7f\u5176\u66f4\u65b0\u4e3a \"Hello CodeRaft!\" \u3002 \u6700\u7ec8\u8f93\u51fa\u7684\u5b57\u7b26\u4e32\u4e0e\u4e0a\u4e00\u4e2a\u793a\u4f8b\u76f8\u540c\uff0c\u90fd\u662f \"Hello CodeRaft!\" \u3002","title":"4.3.2 \u4f7f\u7528 append \u65b9\u6cd5\u8fde\u63a5\u5b57\u7b26\u4e32"},{"location":"lesson4/Lesson4%20C%2B%2B/#44-c","text":"C++\u4e2d\u53ef\u4ee5\u4f7f\u7528 sprintf \u51fd\u6570\u8fdb\u884c\u5b57\u7b26\u4e32\u683c\u5f0f\u5316\uff0c\u6216\u8005\u4f7f\u7528 std::ostringstream \u8fdb\u884c\u683c\u5f0f\u5316\u8f93\u51fa\u3002","title":"4.4 C++ \u5b57\u7b26\u4e32\u683c\u5f0f\u5316"},{"location":"lesson4/Lesson4%20C%2B%2B/#441-sprintf","text":"#include <iostream> #include <string> #include <cstdio> using namespace std; int main() { char buffer[100]; string name = \"CodeRaft\"; int age = 10; sprintf(buffer, \"\u6211\u53eb %s \u4eca\u5e74 %d \u5c81!\", name.c_str(), age); string formattedString = buffer; cout << formattedString << endl; return 0; }","title":"4.4.1 \u4f7f\u7528 sprintf"},{"location":"lesson4/Lesson4%20C%2B%2B/#442-stdostringstream","text":"#include <iostream> #include <string> #include <sstream> using namespace std; int main() { ostringstream oss; string name = \"CodeRaft\"; int age = 10; oss << \"\u6211\u53eb \" << name << \" \u4eca\u5e74 \" << age << \" \u5c81!\"; string formattedString = oss.str(); cout << formattedString << endl; return 0; }","title":"4.4.2 \u4f7f\u7528 std::ostringstream"},{"location":"lesson4/Lesson4%20C%2B%2B/#443","text":"%s \uff1a\u683c\u5f0f\u5316\u5b57\u7b26\u4e32 %d \uff1a\u683c\u5f0f\u5316\u6574\u6570 %f \uff1a\u683c\u5f0f\u5316\u6d6e\u70b9\u6570","title":"4.4.3 \u683c\u5f0f\u5316\u7b26\u53f7"},{"location":"lesson4/Lesson4%20C%2B%2B/#_2","text":"#include <iostream> #include <string> #include <sstream> #include <cstdio> using namespace std; int main() { string name = \"\u5c0f\u660e\"; int age = 10; double height = 1.75; // \u4f7f\u7528 sprintf \u683c\u5f0f\u5316\u5b57\u7b26\u4e32 char buffer[100]; sprintf(buffer, \"\u6211\u53eb %s\uff0c\u4eca\u5e74 %d \u5c81\uff0c\u8eab\u9ad8 %.2f \u7c73\", name.c_str(), age, height); string formattedString1 = buffer; // \u4f7f\u7528 ostringstream \u683c\u5f0f\u5316\u5b57\u7b26\u4e32 ostringstream oss; oss << \"\u6211\u53eb \" << name << \"\uff0c\u4eca\u5e74 \" << age << \" \u5c81\uff0c\u8eab\u9ad8 \" << height << \" \u7c73\"; string formattedString2 = oss.str(); cout << formattedString1 << endl; // \u8f93\u51fa\uff1a\u6211\u53eb \u5c0f\u660e\uff0c\u4eca\u5e74 10 \u5c81\uff0c\u8eab\u9ad8 1.75 \u7c73 cout << formattedString2 << endl; // \u8f93\u51fa\uff1a\u6211\u53eb \u5c0f\u660e\uff0c\u4eca\u5e74 10 \u5c81\uff0c\u8eab\u9ad8 1.75 \u7c73 return 0; }","title":"\u793a\u4f8b"},{"location":"lesson4/Lesson4%20C%2B%2B/#45-c","text":"\u5728C++\u4e2d\uff0c\u8f6c\u4e49\u5b57\u7b26\u7528\u4e8e\u8868\u793a\u7279\u6b8a\u5b57\u7b26\u548c\u63a7\u5236\u5b57\u7b26\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u89c1\u7684\u8f6c\u4e49\u5b57\u7b26\u793a\u4f8b\uff1a \u8f6c\u4e49\u5b57\u7b26 \u63cf\u8ff0 \u793a\u4f8b \\\\ \u53cd\u659c\u6760\u7b26\u53f7 cout << \"\\\\\" << endl; \\' \u5355\u5f15\u53f7 cout << \"\\'\" << endl; \\\" \u53cc\u5f15\u53f7 cout << \"\\\"\" << endl; \\n \u6362\u884c cout << \"Hello\\nWorld!\"; \\t \u5236\u8868\u7b26 cout << \"Hello\\tWorld!\";","title":"4.5 C++ \u8f6c\u4e49\u5b57\u7b26"},{"location":"lesson4/Lesson4%20C%2B%2B/#_3","text":"#include <iostream> using namespace std; int main() { // \u5355\u5f15\u53f7 cout << '\\'' << endl; // \u8f93\u51fa\uff1a' // \u6362\u884c\u7b26 cout << \"Hello, world!\\nHow are you?\" << endl; // \u5236\u8868\u7b26 cout << \"Hello, world!\\tHow are you?\" << endl; // \u9000\u683c\u7b26 cout << \"Hello,\\b world!\" << endl; // ASCII \u503c char ch = 'A'; cout << \"A \u5bf9\u5e94\u7684 ASCII \u503c\u4e3a\uff1a\" << static_cast<int>(ch) << endl; return 0; }","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"lesson4/Lesson4%20C%2B%2B/#46-c","text":"","title":"4.6 C++ \u5b57\u7b26\u4e32\u8fd0\u7b97\u7b26"},{"location":"lesson4/Lesson4%20C%2B%2B/#461-c","text":"\u5b57\u7b26\u4e32\u8fde\u63a5\u8fd0\u7b97\u7b26 + \u5b57\u7b26\u4e32\u8fde\u63a5\u8fd0\u7b97\u7b26 + \u7528\u4e8e\u5c06\u4e24\u4e2a\u5b57\u7b26\u4e32\u8fde\u63a5\u8d77\u6765\u3002 \u793a\u4f8b\uff1a cpp string str1 = \"Hello\"; string str2 = \"World\"; string result = str1 + str2; cout << result << endl; // \u8f93\u51fa\uff1aHelloWorld \u901a\u8fc7\u7d22\u5f15\u83b7\u53d6\u5b57\u7b26 operator[] operator[] \u7528\u4e8e\u83b7\u53d6\u5b57\u7b26\u4e32\u4e2d\u6307\u5b9a\u4f4d\u7f6e\u7684\u5b57\u7b26\u3002 \u793a\u4f8b\uff1a cpp string str = \"Hello\"; char ch = str[1]; // \u83b7\u53d6\u7d22\u5f15\u4e3a1\u7684\u5b57\u7b26\uff0c\u5373\u7b2c2\u4e2a\u5b57\u7b26 'e' cout << ch << endl; // \u8f93\u51fa\uff1ae \u622a\u53d6\u5b50\u5b57\u7b26\u4e32 substr() substr() \u65b9\u6cd5\u7528\u4e8e\u622a\u53d6\u5b57\u7b26\u4e32\u7684\u4e00\u90e8\u5206\u3002 \u793a\u4f8b\uff1a cpp string str = \"HelloWorld\"; string subStr = str.substr(3, 4); // \u4ece\u7d22\u5f153\u5f00\u59cb\u622a\u53d64\u4e2a\u5b57\u7b26\uff0c\u5373 \"loWo\" cout << subStr << endl; // \u8f93\u51fa\uff1aloWo \u6210\u5458\u8fd0\u7b97\u7b26 find() \u548c rfind() find() \u548c rfind() \u65b9\u6cd5\u7528\u4e8e\u83b7\u53d6\u5b57\u7b26\u6216\u5b57\u7b26\u4e32\u5728\u76ee\u6807\u5b57\u7b26\u4e32\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u7d22\u5f15\u548c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u7d22\u5f15\u3002 **\u793a\u4f8b \uff1a** cpp string str = \"HelloWorld\"; size_t firstIndex = str.find('o'); // \u7b2c\u4e00\u6b21\u51fa\u73b0 'o' \u7684\u4f4d\u7f6e\u7d22\u5f15\uff0c\u7d22\u5f15\u4ece0\u5f00\u59cb size_t lastIndex = str.rfind('o'); // \u6700\u540e\u4e00\u6b21\u51fa\u73b0 'o' \u7684\u4f4d\u7f6e\u7d22\u5f15 cout << \"\u7b2c\u4e00\u6b21\u51fa\u73b0 'o' \u7684\u4f4d\u7f6e\u7d22\u5f15\uff1a\" << firstIndex << endl; // \u8f93\u51fa\uff1a4 cout << \"\u6700\u540e\u4e00\u6b21\u51fa\u73b0 'o' \u7684\u4f4d\u7f6e\u7d22\u5f15\uff1a\" << lastIndex << endl; // \u8f93\u51fa\uff1a7","title":"4.6.1 C++ \u5b57\u7b26\u4e32\u8fd0\u7b97\u7b26"},{"location":"lesson4/Lesson4%20C%2B%2B/#47","text":"\u9898\u76ee 1: \u5b57\u7b26\u4e32\u7d22\u5f15\u4e0e\u5207\u7247 \u89c2\u5bdf\u4ee5\u4e0b\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f #include <iostream> #include <string> using namespace std; int main() { string str = \"Hello, World!\"; string slice = str.substr(7, 5); cout << slice << endl; return 0; } A. Hello B. World C. World! D. , Wor \u7b54\u6848\uff1a B. World \u7406\u7531\uff1a substr(7, 5) \u65b9\u6cd5\u8fd4\u56de\u4ece\u7d22\u5f15 7 \u5f00\u59cb\uff0c\u957f\u5ea6\u4e3a 5 \u7684\u5b50\u5b57\u7b26\u4e32\uff0c\u5373 \"World\"\u3002 \u9898\u76ee 2: \u5b57\u7b26\u4e32\u5e38\u7528\u51fd\u6570 \u89c2\u5bdf\u4ee5\u4e0b\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f #include <iostream> #include <string> using namespace std; int main() { string str = \" C++ Programming \"; int length = str.length(); string lower = str; for (int i = 0; i < lower.length(); i++) { if (lower[i] >= 'A' && lower[i] <= 'Z') { lower[i] = lower[i] + ('a' - 'A'); // \u8f6c\u6362\u4e3a\u5c0f\u5199 } } string concatenated = lower + \" is fun!\"; cout << \"Length: \" << length << endl; cout << \"Concatenated: \" << concatenated << endl; return 0; } A. Length: 18; Concatenated: C++ programming is fun! B. Length: 17; Concatenated: C++ programming is fun! C. Length: 18; Concatenated: C++ programming is fun! D. Length: 16; Concatenated: C++ programming is fun! \u7b54\u6848\uff1a C. Length: 18; Concatenated: C++ programming is fun! \u7406\u7531\uff1a length() \u8fd4\u56de\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff0c\u5faa\u73af\u624b\u52a8\u5c06\u6240\u6709\u5927\u5199\u5b57\u7b26\u8f6c\u6362\u4e3a\u5c0f\u5199\uff0c + \u8fd0\u7b97\u7b26\u8fdb\u884c\u5b57\u7b26\u4e32\u62fc\u63a5\uff0c\u7ed3\u679c\u662f \"C++ programming is fun!\"\u3002 \u9898\u76ee 3: \u5b57\u7b26\u4e32\u683c\u5f0f\u5316 \u89c2\u5bdf\u4ee5\u4e0b\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f #include <iostream> #include <string> using namespace std; int main() { int age = 25; string name = \"Alice\"; string formatted = \"Name: \" + name + \", Age: \" + to_string(age); cout << formatted << endl; return 0; } A. Name: Alice, Age: 25 B. Name: %s, Age: %d C. Name: Alice, Age: 25 D. Name: Alice, Age: age \u7b54\u6848\uff1a A. Name: Alice, Age: 25 \u7406\u7531\uff1a + \u8fd0\u7b97\u7b26\u7528\u4e8e\u5b57\u7b26\u4e32\u62fc\u63a5\uff0c to_string \u5c06\u6574\u6570\u8f6c\u4e3a\u5b57\u7b26\u4e32\uff0c\u7ed3\u679c\u662f \"Name: Alice, Age: 25\"\u3002","title":"4.7 \u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson4/Lesson4%20C%2B%2B/#_4","text":"\u9898\u76ee 1: \u5b57\u7b26\u4e32\u7d22\u5f15\u4e0e\u5207\u7247 \u9898\u76ee\uff1a \u7f16\u5199\u4e00\u4e2a C++ \u7a0b\u5e8f\uff0c\u521b\u5efa\u4e00\u4e2a\u5b57\u7b26\u4e32 \"Programming in C++\"\u3002\u4f7f\u7528 substr \u65b9\u6cd5\u63d0\u53d6\u5e76\u8f93\u51fa\u4ece\u7d22\u5f15 0 \u5230\u7d22\u5f15 11 \u7684\u5b50\u5b57\u7b26\u4e32\u3002 \u793a\u4f8b\u4ee3\u7801\uff1a #include <iostream> #include <string> using namespace std; int main() { string str = \"Programming in C++\"; // \u8bf7\u5728\u8fd9\u91cc\u7f16\u5199\u4ee3\u7801 } \u7b54\u6848\uff1a #include <iostream> #include <string> using namespace std; int main() { string str = \"Programming in C++\"; string substring = str.substr(0, 11); cout << substring << endl; // \u8f93\u51fa \"Programming\" return 0; } \u9898\u76ee 2: \u5b57\u7b26\u4e32\u5e38\u7528\u51fd\u6570 \u9898\u76ee\uff1a \u7f16\u5199\u4e00\u4e2a C++ \u7a0b\u5e8f\uff0c\u521b\u5efa\u4e00\u4e2a\u5b57\u7b26\u4e32 \" C++ Programming \" \u3002\u53bb\u9664\u5b57\u7b26\u4e32\u524d\u540e\u7684\u7a7a\u767d\u5b57\u7b26\uff0c\u8f6c\u6362\u4e3a\u5927\u5199\uff0c\u5e76\u62fc\u63a5 \" is fun!\" \u3002\u8f93\u51fa\u6700\u7ec8\u7ed3\u679c\u3002 \u793a\u4f8b\u4ee3\u7801\uff1a #include <iostream> #include <string> using namespace std; int main() { string str = \" C++ Programming \"; // \u8bf7\u5728\u8fd9\u91cc\u7f16\u5199\u4ee3\u7801 } \u7b54\u6848\uff1a #include <iostream> #include <string> using namespace std; int main() { string str = \" C++ Programming \"; // \u53bb\u9664\u524d\u5bfc\u7a7a\u683c int start = 0; while (start < str.length() && str[start] == ' ') { start++; } // \u53bb\u9664\u540e\u7eed\u7a7a\u683c int end = str.length() - 1; while (end >= 0 && str[end] == ' ') { end--; } // \u622a\u53d6\u53bb\u9664\u7a7a\u683c\u540e\u7684\u5b57\u7b26\u4e32 str = str.substr(start, end - start + 1); // \u8f6c\u6362\u4e3a\u5927\u5199 for (int i = 0; i < str.length(); i++) { if (str[i] >= 'a' && str[i] <= 'z') { str[i] = str[i] - ('a' - 'A'); } } // \u62fc\u63a5\u5b57\u7b26\u4e32 string result = str + \" IS FUN!\"; cout << result << endl; // \u8f93\u51fa \"C++ PROGRAMMING IS FUN!\" return 0; } \u9898\u76ee 3: \u5b57\u7b26\u4e32\u683c\u5f0f\u5316 \u9898\u76ee\uff1a \u7f16\u5199\u4e00\u4e2a C++ \u7a0b\u5e8f\uff0c\u521b\u5efa\u4e00\u4e2a\u6574\u6570\u53d8\u91cf score \u8d4b\u503c\u4e3a 85\uff0c\u521b\u5efa\u4e00\u4e2a\u5b57\u7b26\u4e32\u53d8\u91cf student \u8d4b\u503c\u4e3a \"John\"\u3002\u4f7f\u7528\u5b57\u7b26\u4e32\u62fc\u63a5\u65b9\u6cd5\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\uff0c\u8f93\u51fa \"Student John scored 85 points\"\u3002 \u793a\u4f8b\u4ee3\u7801\uff1a #include <iostream> #include <string> using namespace std; int main() { int score = 85; string student = \"John\"; // \u8bf7\u5728\u8fd9\u91cc\u7f16\u5199\u4ee3\u7801 } \u7b54\u6848\uff1a #include <iostream> #include <string> using namespace std; int main() { int score = 85; string student = \"John\"; string formatted = \"Student \" + student + \" scored \" + to_string(score) + \" points\"; cout << formatted << endl; // \u8f93\u51fa \"Student John scored 85 points\" return 0; }","title":"\u4ee3\u7801\u9898"},{"location":"lesson4/Lesson4%20Java/","text":"Lesson 4 \u5b57\u7b26\u4e32\u57fa\u7840 \u76ee\u5f55 \u521b\u5efa\u5b57\u7b26\u4e32 \u8bbf\u95ee\u5b57\u7b26\u4e32\u4e2d\u7684\u503c \u5b57\u7b26\u4e32\u8fde\u63a5\u4e0e\u66f4\u65b0 Java\u5b57\u7b26\u4e32\u683c\u5f0f\u5316 4.1 \u4f7f\u7528 String.format 4.2 \u6587\u672c\u5757\uff08Text Blocks\uff09 4.3 \u4f7f\u7528 String.format() \u548c\u6587\u672c\u5757\u7ed3\u5408 4.4 \u4f7f\u7528 StringBuilder \u8fdb\u884c\u683c\u5f0f\u5316 Java \u8f6c\u4e49\u5b57\u7b26 Java \u5b57\u7b26\u4e32\u8fd0\u7b97\u7b26 6.1 length() 6.2 charAt(int index) 6.3 substring(int beginIndex, int endIndex) 6.4 toLowerCase() 6.5 toUpperCase() 6.6 trim() 6.7 replace(CharSequence target, CharSequence replacement) 6.8 split(String regex) 6.9 concat(String str) 6.10 \u5b57\u7b26\u4e32\u8fde\u63a5\u8fd0\u7b97\u7b26 + 6.11 \u91cd\u590d\u8f93\u51fa\u5b57\u7b26\u4e32\u8fd0\u7b97\u7b26 repeat() 6.12 \u901a\u8fc7\u7d22\u5f15\u83b7\u53d6\u5b57\u7b26 charAt() 6.13 \u622a\u53d6\u5b50\u5b57\u7b26\u4e32 substring() 6.14 \u6210\u5458\u8fd0\u7b97\u7b26 contains() 6.15 \u6210\u5458\u8fd0\u7b97\u7b26 indexOf() \u548c lastIndexOf() \u8bfe\u540e\u7ec3\u4e60 7.1 \u9009\u62e9\u9898 7.2 \u4ee3\u7801\u9898 1. \u521b\u5efa\u5b57\u7b26\u4e32 Java\u4e2d\u4f7f\u7528 String \u7c7b\u6765\u8868\u793a\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u4f7f\u7528\u53cc\u5f15\u53f7 \" \" \u6765\u521b\u5efa\u5b57\u7b26\u4e32\u53d8\u91cf\u3002 String var1 = \"Hello World!\"; String var2 = \"CodeRaft\"; 2. \u8bbf\u95ee\u5b57\u7b26\u4e32\u4e2d\u7684\u503c Java\u4e2d\u8bbf\u95ee\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u53ef\u4ee5\u4f7f\u7528\u7d22\u5f15\uff0c\u7d22\u5f15\u4ece0\u5f00\u59cb\u3002 String var1 = \"Hello World!\"; char firstChar = var1.charAt(0); // \u83b7\u53d6\u7d22\u5f15\u4e3a0\u7684\u5b57\u7b26 'H' String substr = var2.substring(1, 5); // \u622a\u53d6\u5b57\u7b26\u4e32 var2 \u7684\u7b2c2\u5230\u7b2c5\u4e2a\u5b57\u7b26\uff08\"odeR\"\uff09 3. \u5b57\u7b26\u4e32\u8fde\u63a5\u4e0e\u66f4\u65b0 Java\u4e2d\u5b57\u7b26\u4e32\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u6bcf\u6b21\u8fde\u63a5\u5b57\u7b26\u4e32\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32\u5bf9\u8c61\u3002 String var1 = \"Hello\"; var1 = var1 + \" CodeRaft!\"; // \u8fde\u63a5\u5b57\u7b26\u4e32\u5e76\u66f4\u65b0 var1 4. Java\u5b57\u7b26\u4e32\u683c\u5f0f\u5316 \u5b57\u7b26\u4e32\u683c\u5f0f\u5316\u662f\u5c06\u6570\u636e\uff08\u5982\u53d8\u91cf\u7684\u503c\uff09\u63d2\u5165\u5230\u5b57\u7b26\u4e32\u4e2d\u7684\u4e00\u79cd\u6280\u672f\u3002\u8fd9\u4f7f\u5f97\u6784\u5efa\u52a8\u6001\u5b57\u7b26\u4e32\u53d8\u5f97\u66f4\u52a0\u65b9\u4fbf\u548c\u53ef\u8bfb\u3002 4.1 \u4f7f\u7528 String.format Java\u4e2d\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u53ef\u4ee5\u4f7f\u7528 String.format \u65b9\u6cd5 %s\uff1a\u683c\u5f0f\u5316\u5b57\u7b26\u4e32 %s \u7528\u4e8e\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u3002 \u793a\u4f8b\uff1a java String name = \"\u5c0f\u660e\"; int age = 10; String formattedString = String.format(\"\u6211\u53eb %s \u4eca\u5e74 %d \u5c81!\", name, age); System.out.println(formattedString); // \u8f93\u51fa\uff1a\u6211\u53eb \u5c0f\u660e \u4eca\u5e74 10 \u5c81! %d\uff1a\u683c\u5f0f\u5316\u6574\u6570 %d \u7528\u4e8e\u683c\u5f0f\u5316\u6574\u6570\u3002 \u793a\u4f8b\uff1a java int number = 12345; String formattedNumber = String.format(\"\u6570\u5b57\uff1a%d\", number); System.out.println(formattedNumber); // \u8f93\u51fa\uff1a\u6570\u5b57\uff1a12345 %f\uff1a\u683c\u5f0f\u5316\u6d6e\u70b9\u6570 %f \u7528\u4e8e\u683c\u5f0f\u5316\u6d6e\u70b9\u6570\uff0c\u9ed8\u8ba4\u4fdd\u7559\u516d\u4f4d\u5c0f\u6570\u3002 \u793a\u4f8b\uff1a java double pi = 3.14159; String formattedPi = String.format(\"\u03c0 \u7684\u8fd1\u4f3c\u503c\u4e3a\uff1a%.2f\", pi); System.out.println(formattedPi); // \u8f93\u51fa\uff1a\u03c0 \u7684\u8fd1\u4f3c\u503c\u4e3a\uff1a3.14 \u4f7f\u7528\u793a\u4f8b String name = \"\u5c0f\u660e\"; int age = 10; double height = 1.75; String formattedString = String.format(\"\u6211\u53eb %s\uff0c\u4eca\u5e74 %d \u5c81\uff0c\u8eab\u9ad8 %.2f \u7c73\", name, age, height); System.out.println(formattedString); // \u8f93\u51fa\uff1a\u6211\u53eb \u5c0f\u660e\uff0c\u4eca\u5e74 10 \u5c81\uff0c\u8eab\u9ad8 1.75 \u7c73 4.2 \u6587\u672c\u5757\uff08Text Blocks\uff09 \u6587\u672c\u5757\u5141\u8bb8\u4f60\u7f16\u5199\u591a\u884c\u5b57\u7b26\u4e32\u800c\u65e0\u9700\u4f7f\u7528\u6362\u884c\u7b26\u6216\u8f6c\u4e49\u5b57\u7b26\u3002\u4f8b\u5982\uff1a String textBlock = \"\"\" This is a text block. It can span multiple lines. \"\"\"; System.out.println(textBlock); 4.3 \u4f7f\u7528 String.format() \u548c\u6587\u672c\u5757\u7ed3\u5408 \u867d\u7136\u6587\u672c\u5757\u672c\u8eab\u4e0d\u652f\u6301\u5185\u5d4c\u53d8\u91cf\uff0c\u4f46\u4f60\u53ef\u4ee5\u4f7f\u7528 String.format() \u5c06\u53d8\u91cf\u63d2\u5165\u6587\u672c\u5757\u4e2d\uff1a String name = \"Alice\"; int age = 30; String formattedString = String.format(\"\"\" My name is %s. I am %d years old. \"\"\", name, age); System.out.println(formattedString); // \u8f93\u51fa\uff1a // My name is Alice. // I am 30 years old. 4.4 \u4f7f\u7528 StringBuilder \u8fdb\u884c\u683c\u5f0f\u5316 Java\u4e2d\u5efa\u8bae\u4f7f\u7528 StringBuilder \u7c7b\u6765\u52a8\u6001\u6784\u5efa\u5b57\u7b26\u4e32\uff0c\u7279\u522b\u662f\u5728\u9700\u8981\u9891\u7e41\u8fde\u63a5\u548c\u4fee\u6539\u5b57\u7b26\u4e32\u65f6\uff0c\u56e0\u6b64\u5bf9\u4e8e\u590d\u6742\u7684\u5b57\u7b26\u4e32\u6784\u5efa\uff0c\u4f60\u53ef\u4ee5\u7ed3\u5408\u4f7f\u7528 StringBuilder \u548c\u5b57\u7b26\u4e32\u683c\u5f0f\u5316\uff1a String name = \"Bob\"; double score = 95.5; StringBuilder sb = new StringBuilder(); sb.append(String.format(\"Student %s scored %.2f marks.%n\", name, score)); System.out.println(sb.toString()); // \u8f93\u51fa\uff1aStudent Bob scored 95.50 marks. 5. Java \u8f6c\u4e49\u5b57\u7b26 \u5728Java\u4e2d\uff0c\u8f6c\u4e49\u5b57\u7b26\u7528\u4e8e\u8868\u793a\u7279\u6b8a\u5b57\u7b26\u548c\u63a7\u5236\u5b57\u7b26\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u89c1\u7684\u8f6c\u4e49\u5b57\u7b26\u793a\u4f8b\uff1a \u8f6c\u4e49\u5b57\u7b26 \u63cf\u8ff0 \u793a\u4f8b \\\\ \u53cd\u659c\u6760\u7b26\u53f7 System.out.println(\"\\\\\"); \\' \u5355\u5f15\u53f7 System.out.println(\"\\'\"); \\\" \u53cc\u5f15\u53f7 System.out.println(\"\\\"\"); \\n \u6362\u884c System.out.println(\"Hello\\nWorld!\"); \\t \u5236\u8868\u7b26 System.out.println(\"Hello\\tWorld!\"); \\b \u9000\u683c System.out.println(\"Hello\\bWorld!\"); \\r \u56de\u8f66 System.out.println(\"Hello\\rWorld!\"); \\f \u6362\u9875 System.out.println(\"Hello\\fWorld!\"); \\u#### Unicode \u5b57\u7b26\uff0c\u5176\u4e2d####\u662f\u5b57\u7b26\u7684\u56db\u4f4d\u5341\u516d\u8fdb\u5236\u4ee3\u7801 System.out.println(\"\\u0048\\u0065\\u006C\\u006C\\u006F!\"); \u4f7f\u7528\u4e86\u4e0d\u540c\u7684\u8f6c\u4e49\u5b57\u7b26\u6765\u6f14\u793a\u5355\u5f15\u53f7\u3001\u6362\u884c\u7b26\u3001\u5236\u8868\u7b26\u3001\u9000\u683c\u7b26\u3001\u6362\u9875\u7b26\u7684\u6548\u679c\uff1a public class EscapeCharacters { public static void main(String[] args) { // \u5355\u5f15\u53f7 System.out.println('\\''); // \u8f93\u51fa\uff1a' // \u6362\u884c\u7b26 System.out.println(\"Hello, world!\\nHow are you?\"); // \u8f93\u51fa\uff1a // Hello, world! // How are you? // \u5236\u8868\u7b26 System.out.println(\"Hello, world!\\tHow are you?\"); // \u8f93\u51fa\uff1aHello, world! How are you? // \u9000\u683c\u7b26 System.out.println(\"Hello,\\b world!\"); // \u8f93\u51fa\uff1aHello world! // \u6362\u9875\u7b26 System.out.println(\"Hello,\\f world!\"); // \u8f93\u51fa\uff1a // Hello, // world! } } 6. Java \u5b57\u7b26\u4e32\u8fd0\u7b97\u7b26 \u5728Java\u4e2d\uff0c\u5b57\u7b26\u4e32\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u6570\u636e\u7c7b\u578b\uff0c\u63d0\u4f9b\u4e86\u591a\u79cd\u64cd\u4f5c\u7b26\u6765\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u64cd\u4f5c\u548c\u5904\u7406\u3002\u4e0b\u9762\u6211\u4eec\u5c06\u4ecb\u7ecdJava\u4e2d\u5e38\u7528\u7684\u5b57\u7b26\u4e32\u8fd0\u7b97\u7b26\u53ca\u5176\u7528\u6cd5\u3002 \u5728 Java \u4e2d\uff0c\u5e38\u7528\u7684\u5b57\u7b26\u4e32\u51fd\u6570\u5305\u62ec\uff1a 6.1 length() \u529f\u80fd\uff1a \u8fd4\u56de\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002 \u793a\u4f8b\uff1a java String str = \"Hello, World!\"; int length = str.length(); // 13 6.2 charAt(int index) \u529f\u80fd\uff1a \u8fd4\u56de\u6307\u5b9a\u4f4d\u7f6e\u7684\u5b57\u7b26\u3002 \u793a\u4f8b\uff1a java String str = \"Hello\"; char ch = str.charAt(1); // 'e' 6.3 substring(int beginIndex, int endIndex) \u529f\u80fd\uff1a \u8fd4\u56de\u4ece beginIndex \u5230 endIndex \u4e4b\u95f4\u7684\u5b50\u5b57\u7b26\u4e32\u3002 \u793a\u4f8b\uff1a java String str = \"Hello, World!\"; String substr = str.substring(7, 12); // \"World\" 6.4 toLowerCase() \u529f\u80fd\uff1a \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5c0f\u5199\u3002 \u793a\u4f8b\uff1a java String str = \"HELLO\"; String lower = str.toLowerCase(); // \"hello\" 6.5 toUpperCase() \u529f\u80fd\uff1a \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5927\u5199\u3002 \u793a\u4f8b\uff1a java String str = \"hello\"; String upper = str.toUpperCase(); // \"HELLO\" 6.6 trim() \u529f\u80fd\uff1a \u53bb\u9664\u5b57\u7b26\u4e32\u524d\u540e\u7684\u7a7a\u767d\u5b57\u7b26\u3002 \u793a\u4f8b\uff1a java String str = \" Hello, World! \"; String trimmed = str.trim(); // \"Hello, World!\" 6.7 replace(CharSequence target, CharSequence replacement) \u529f\u80fd\uff1a \u66ff\u6362\u5b57\u7b26\u4e32\u4e2d\u7684\u6307\u5b9a\u5b50\u5b57\u7b26\u4e32\u3002 \u793a\u4f8b\uff1a java String str = \"Hello, World!\"; String replaced = str.replace(\"World\", \"Java\"); // \"Hello, Java!\" 6.8 split(String regex) \u529f\u80fd\uff1a \u6839\u636e\u6b63\u5219\u8868\u8fbe\u5f0f\u5206\u5272\u5b57\u7b26\u4e32\u3002 \u793a\u4f8b\uff1a java String str = \"apple,banana,cherry\"; String[] fruits = str.split(\",\"); // [\"apple\", \"banana\", \"cherry\"] 6.9 concat(String str) \u529f\u80fd\uff1a \u5c06\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u8fde\u63a5\u5230\u5f53\u524d\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u3002 \u793a\u4f8b\uff1a java String str = \"Hello\"; String concatenated = str.concat(\", World!\"); // \"Hello, World!\" 6.10 \u5b57\u7b26\u4e32\u8fde\u63a5\u8fd0\u7b97\u7b26 + \u5b57\u7b26\u4e32\u8fde\u63a5\u8fd0\u7b97\u7b26 + \u7528\u4e8e\u5c06\u4e24\u4e2a\u5b57\u7b26\u4e32\u8fde\u63a5\u8d77\u6765\u3002 \u793a\u4f8b\uff1a java String str1 = \"Hello\"; String str2 = \"World\"; String result = str1 + str2; System.out.println(result); // \u8f93\u51fa\uff1aHelloWorld 6.11 \u91cd\u590d\u8f93\u51fa\u5b57\u7b26\u4e32\u8fd0\u7b97\u7b26 repeat() Java 11 \u5f15\u5165\u4e86 repeat() \u65b9\u6cd5\u6765\u91cd\u590d\u5b57\u7b26\u4e32\u3002 \u793a\u4f8b\uff1a java String str = \"Hello\"; String repeatedStr = str.repeat(3); System.out.println(repeatedStr); // \u8f93\u51fa\uff1aHelloHelloHello \u6ce8\u610f\uff1a repeat() \u65b9\u6cd5\u5728 Java 11 \u53ca\u4ee5\u4e0a\u7248\u672c\u53ef\u7528\u3002 6.12 \u901a\u8fc7\u7d22\u5f15\u83b7\u53d6\u5b57\u7b26 charAt() charAt() \u65b9\u6cd5\u7528\u4e8e\u83b7\u53d6\u5b57\u7b26\u4e32\u4e2d\u6307\u5b9a\u4f4d\u7f6e\u7684\u5b57\u7b26\u3002 \u793a\u4f8b\uff1a java String str = \"Hello\"; char ch = str.charAt(1); // \u83b7\u53d6\u7d22\u5f15\u4e3a1\u7684\u5b57\u7b26\uff0c\u5373\u7b2c2\u4e2a\u5b57\u7b26 'e' System.out.println(ch); // \u8f93\u51fa\uff1ae 6.13 \u622a\u53d6\u5b50\u5b57\u7b26\u4e32 substring() substring() \u65b9\u6cd5\u7528\u4e8e\u622a\u53d6\u5b57\u7b26\u4e32\u7684\u4e00\u90e8\u5206\u3002 \u793a\u4f8b\uff1a java String str = \"HelloWorld\"; String subStr = str.substring(3, 7); // \u4ece\u7d22\u5f153\u5f00\u59cb\u5230\u7d22\u5f156\uff08\u4e0d\u5305\u62ec7\uff09\u7684\u5b50\u5b57\u7b26\u4e32\uff0c\u5373 \"loWo\" System.out.println(subStr); // \u8f93\u51fa\uff1aloWo 6.14 \u6210\u5458\u8fd0\u7b97\u7b26 contains() contains() \u65b9\u6cd5\u7528\u4e8e\u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u5305\u542b\u6307\u5b9a\u7684\u5b57\u7b26\u5e8f\u5217\u3002 \u793a\u4f8b\uff1a java String str = \"HelloWorld\"; boolean contains = str.contains(\"Wo\"); // \u68c0\u67e5\u662f\u5426\u5305\u542b \"Wo\" System.out.println(contains); // \u8f93\u51fa\uff1atrue 6.15 \u6210\u5458\u8fd0\u7b97\u7b26 indexOf() \u548c lastIndexOf() indexOf() \u548c lastIndexOf() \u65b9\u6cd5\u7528\u4e8e\u83b7\u53d6\u5b57\u7b26\u6216\u5b57\u7b26\u4e32\u5728\u76ee\u6807\u5b57\u7b26\u4e32\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u7d22\u5f15\u548c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u7d22\u5f15\u3002 \u793a\u4f8b\uff1a java String str = \"HelloWorld\"; int firstIndex = str.indexOf('o'); // \u7b2c\u4e00\u6b21\u51fa\u73b0 'o' \u7684\u4f4d\u7f6e\u7d22\u5f15\uff0c\u7d22\u5f15\u4ece0\u5f00\u59cb int lastIndex = str.lastIndexOf('o'); // \u6700\u540e\u4e00\u6b21\u51fa\u73b0 'o' \u7684\u4f4d\u7f6e\u7d22\u5f15 System.out.println(\"\u7b2c\u4e00\u6b21\u51fa\u73b0 'o' \u7684\u4f4d\u7f6e\u7d22\u5f15\uff1a\" + firstIndex); // \u8f93\u51fa\uff1a4 System.out.println(\"\u6700\u540e\u4e00\u6b21\u51fa\u73b0 'o' \u7684\u4f4d\u7f6e\u7d22\u5f15\uff1a\" + lastIndex); // \u8f93\u51fa\uff1a7 7. \u8bfe\u540e\u7ec3\u4e60 7.1 \u9009\u62e9\u9898 \u9898\u76ee 1: \u5b57\u7b26\u4e32\u7d22\u5f15\u4e0e\u5207\u7247 \u89c2\u5bdf\u4ee5\u4e0b\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f public class StringTest { public static void main(String[] args) { String str = \"Hello, World!\"; String slice = str.substring(7, 12); System.out.println(slice); } } A. Hello B. World C. World! D. , Wor \u7b54\u6848\uff1a B. World \u7406\u7531\uff1a substring(7, 12) \u65b9\u6cd5\u8fd4\u56de\u4ece\u7d22\u5f15 7 \u5f00\u59cb\u5230\u7d22\u5f15 12 \u4e4b\u524d\u7684\u5b50\u5b57\u7b26\u4e32\uff0c\u5373 \"World\" \u3002 \u9898\u76ee 2: \u5b57\u7b26\u4e32\u5e38\u7528\u51fd\u6570 \u89c2\u5bdf\u4ee5\u4e0b\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f public class StringFunctions { public static void main(String[] args) { String str = \" Java Programming \"; int length = str.trim().length(); String lower = str.toLowerCase(); String concatenated = lower.concat(\" is fun!\"); System.out.println(\"Length: \" + length); System.out.println(\"Concatenated: \" + concatenated); } } A. Length: 16; Concatenated: java programming is fun! B. Length: 18; Concatenated: java programming is fun! C. Length: 17; Concatenated: java programming is fun! D. Length: 18; Concatenated: java programming is fun! \u7b54\u6848\uff1a D. Length: 18; Concatenated: java programming is fun! \u7406\u7531\uff1a trim() \u53bb\u9664\u524d\u540e\u7a7a\u683c\uff0c\u6240\u4ee5 length \u662f 18\u3002 toLowerCase() \u5c06\u6240\u6709\u5b57\u7b26\u8f6c\u4e3a\u5c0f\u5199\uff0c concat(\" is fun!\") \u8fdb\u884c\u5b57\u7b26\u4e32\u62fc\u63a5\uff0c\u7ed3\u679c\u662f \"java programming is fun!\" \u3002 \u9898\u76ee 3: \u5b57\u7b26\u4e32\u683c\u5f0f\u5316 \u89c2\u5bdf\u4ee5\u4e0b\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f public class StringFormat { public static void main(String[] args) { int age = 25; String name = \"Alice\"; String formatted = String.format(\"Name: %s, Age: %d\", name, age); System.out.println(formatted); } } A. Name: Alice, Age: 25 B. Name: %s, Age: %d C. Name: Alice, Age: 25 D. Name: Alice, Age: age \u7b54\u6848\uff1a A. Name: Alice, Age: 25 \u7406\u7531\uff1a String.format \u65b9\u6cd5\u7528\u4e8e\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\uff0c %s \u66ff\u6362\u4e3a name \u7684\u503c\uff0c %d \u66ff\u6362\u4e3a age \u7684\u503c\u3002 7.2 \u4ee3\u7801\u9898 \u9898\u76ee 1: \u5b57\u7b26\u4e32\u7d22\u5f15\u4e0e\u5207\u7247 \u9898\u76ee\uff1a \u7f16\u5199\u4e00\u4e2a Java \u7a0b\u5e8f\uff0c\u521b\u5efa\u4e00\u4e2a\u5b57\u7b26\u4e32 \"Programming in Java\" \u3002\u4f7f\u7528 substring \u65b9\u6cd5\u63d0\u53d6\u5e76\u8f93\u51fa\u4ece\u7d22\u5f15 0 \u5230\u7d22\u5f15 11 \u7684\u5b50\u5b57\u7b26\u4e32\u3002 \u793a\u4f8b\u4ee3\u7801\uff1a public class StringTest { public static void main(String[] args) { String str = \"Programming in Java\"; // \u8bf7\u5728\u8fd9\u91cc\u7f16\u5199\u4ee3\u7801 } } \u7b54\u6848\uff1a public class StringTest { public static void main(String[] args) { String str = \"Programming in Java\"; String substring = str.substring(0, 11); System.out.println(substring); // \u8f93\u51fa \"Programming\" } } \u9898\u76ee 2: \u5b57\u7b26\u4e32\u5e38\u7528\u51fd\u6570 \u9898\u76ee\uff1a \u7f16\u5199\u4e00\u4e2a Java \u7a0b\u5e8f\uff0c\u521b\u5efa\u4e00\u4e2a\u5b57\u7b26\u4e32 \" Java Programming \" \u3002\u53bb\u9664\u5b57\u7b26\u4e32\u524d\u540e\u7684\u7a7a\u767d\u5b57\u7b26\uff0c\u8f6c\u6362\u4e3a\u5927\u5199\uff0c\u5e76\u62fc\u63a5 \" is fun!\" \u3002\u8f93\u51fa\u6700\u7ec8\u7ed3\u679c\u3002 \u793a\u4f8b\u4ee3\u7801\uff1a public class StringFunctions { public static void main(String[] args) { String str = \" Java Programming \"; // \u8bf7\u5728\u8fd9\u91cc\u7f16\u5199\u4ee3\u7801 } } \u7b54\u6848\uff1a public class StringFunctions { public static void main(String[] args) { String str = \" Java Programming \"; String trimmed = str.trim(); String upper = trimmed.toUpperCase(); String result = upper.concat(\" is fun!\"); System.out.println(result); // \u8f93\u51fa \"JAVA PROGRAMMING is fun!\" } } \u9898\u76ee 3: \u5b57\u7b26\u4e32\u683c\u5f0f\u5316 \u9898\u76ee\uff1a \u7f16\u5199\u4e00\u4e2a Java \u7a0b\u5e8f\uff0c\u521b\u5efa\u4e00\u4e2a\u6574\u6570\u53d8\u91cf score \u8d4b\u503c\u4e3a 85\uff0c\u521b\u5efa\u4e00\u4e2a\u5b57\u7b26\u4e32\u53d8\u91cf student \u8d4b\u503c\u4e3a \"John\" \u3002\u4f7f\u7528 String.format \u65b9\u6cd5\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\uff0c\u8f93\u51fa \"Student John scored 85 points\" \u3002 \u793a\u4f8b\u4ee3\u7801\uff1a public class StringFormat { public static void main(String[] args) { int score = 85; String student = \"John\"; // \u8bf7\u5728\u8fd9\u91cc\u7f16\u5199\u4ee3\u7801 } } \u7b54\u6848\uff1a public class StringFormat { public static void main(String[] args) { int score = 85; String student = \"John\"; String formatted = String.format(\"Student %s scored %d points\", student, score); System.out.println(formatted); // \u8f93\u51fa \"Student John scored 85 points\" } }","title":"Lesson 4 \u5b57\u7b26\u4e32\u57fa\u7840"},{"location":"lesson4/Lesson4%20Java/#lesson-4","text":"","title":"Lesson 4 \u5b57\u7b26\u4e32\u57fa\u7840"},{"location":"lesson4/Lesson4%20Java/#_1","text":"\u521b\u5efa\u5b57\u7b26\u4e32 \u8bbf\u95ee\u5b57\u7b26\u4e32\u4e2d\u7684\u503c \u5b57\u7b26\u4e32\u8fde\u63a5\u4e0e\u66f4\u65b0 Java\u5b57\u7b26\u4e32\u683c\u5f0f\u5316 4.1 \u4f7f\u7528 String.format 4.2 \u6587\u672c\u5757\uff08Text Blocks\uff09 4.3 \u4f7f\u7528 String.format() \u548c\u6587\u672c\u5757\u7ed3\u5408 4.4 \u4f7f\u7528 StringBuilder \u8fdb\u884c\u683c\u5f0f\u5316 Java \u8f6c\u4e49\u5b57\u7b26 Java \u5b57\u7b26\u4e32\u8fd0\u7b97\u7b26 6.1 length() 6.2 charAt(int index) 6.3 substring(int beginIndex, int endIndex) 6.4 toLowerCase() 6.5 toUpperCase() 6.6 trim() 6.7 replace(CharSequence target, CharSequence replacement) 6.8 split(String regex) 6.9 concat(String str) 6.10 \u5b57\u7b26\u4e32\u8fde\u63a5\u8fd0\u7b97\u7b26 + 6.11 \u91cd\u590d\u8f93\u51fa\u5b57\u7b26\u4e32\u8fd0\u7b97\u7b26 repeat() 6.12 \u901a\u8fc7\u7d22\u5f15\u83b7\u53d6\u5b57\u7b26 charAt() 6.13 \u622a\u53d6\u5b50\u5b57\u7b26\u4e32 substring() 6.14 \u6210\u5458\u8fd0\u7b97\u7b26 contains() 6.15 \u6210\u5458\u8fd0\u7b97\u7b26 indexOf() \u548c lastIndexOf() \u8bfe\u540e\u7ec3\u4e60 7.1 \u9009\u62e9\u9898 7.2 \u4ee3\u7801\u9898","title":"\u76ee\u5f55"},{"location":"lesson4/Lesson4%20Java/#1","text":"Java\u4e2d\u4f7f\u7528 String \u7c7b\u6765\u8868\u793a\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u4f7f\u7528\u53cc\u5f15\u53f7 \" \" \u6765\u521b\u5efa\u5b57\u7b26\u4e32\u53d8\u91cf\u3002 String var1 = \"Hello World!\"; String var2 = \"CodeRaft\";","title":"1. \u521b\u5efa\u5b57\u7b26\u4e32"},{"location":"lesson4/Lesson4%20Java/#2","text":"Java\u4e2d\u8bbf\u95ee\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u53ef\u4ee5\u4f7f\u7528\u7d22\u5f15\uff0c\u7d22\u5f15\u4ece0\u5f00\u59cb\u3002 String var1 = \"Hello World!\"; char firstChar = var1.charAt(0); // \u83b7\u53d6\u7d22\u5f15\u4e3a0\u7684\u5b57\u7b26 'H' String substr = var2.substring(1, 5); // \u622a\u53d6\u5b57\u7b26\u4e32 var2 \u7684\u7b2c2\u5230\u7b2c5\u4e2a\u5b57\u7b26\uff08\"odeR\"\uff09","title":"2. \u8bbf\u95ee\u5b57\u7b26\u4e32\u4e2d\u7684\u503c"},{"location":"lesson4/Lesson4%20Java/#3","text":"Java\u4e2d\u5b57\u7b26\u4e32\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u6bcf\u6b21\u8fde\u63a5\u5b57\u7b26\u4e32\u90fd\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32\u5bf9\u8c61\u3002 String var1 = \"Hello\"; var1 = var1 + \" CodeRaft!\"; // \u8fde\u63a5\u5b57\u7b26\u4e32\u5e76\u66f4\u65b0 var1","title":"3. \u5b57\u7b26\u4e32\u8fde\u63a5\u4e0e\u66f4\u65b0"},{"location":"lesson4/Lesson4%20Java/#4-java","text":"\u5b57\u7b26\u4e32\u683c\u5f0f\u5316\u662f\u5c06\u6570\u636e\uff08\u5982\u53d8\u91cf\u7684\u503c\uff09\u63d2\u5165\u5230\u5b57\u7b26\u4e32\u4e2d\u7684\u4e00\u79cd\u6280\u672f\u3002\u8fd9\u4f7f\u5f97\u6784\u5efa\u52a8\u6001\u5b57\u7b26\u4e32\u53d8\u5f97\u66f4\u52a0\u65b9\u4fbf\u548c\u53ef\u8bfb\u3002","title":"4. Java\u5b57\u7b26\u4e32\u683c\u5f0f\u5316"},{"location":"lesson4/Lesson4%20Java/#41-stringformat","text":"Java\u4e2d\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u53ef\u4ee5\u4f7f\u7528 String.format \u65b9\u6cd5 %s\uff1a\u683c\u5f0f\u5316\u5b57\u7b26\u4e32 %s \u7528\u4e8e\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u3002 \u793a\u4f8b\uff1a java String name = \"\u5c0f\u660e\"; int age = 10; String formattedString = String.format(\"\u6211\u53eb %s \u4eca\u5e74 %d \u5c81!\", name, age); System.out.println(formattedString); // \u8f93\u51fa\uff1a\u6211\u53eb \u5c0f\u660e \u4eca\u5e74 10 \u5c81! %d\uff1a\u683c\u5f0f\u5316\u6574\u6570 %d \u7528\u4e8e\u683c\u5f0f\u5316\u6574\u6570\u3002 \u793a\u4f8b\uff1a java int number = 12345; String formattedNumber = String.format(\"\u6570\u5b57\uff1a%d\", number); System.out.println(formattedNumber); // \u8f93\u51fa\uff1a\u6570\u5b57\uff1a12345 %f\uff1a\u683c\u5f0f\u5316\u6d6e\u70b9\u6570 %f \u7528\u4e8e\u683c\u5f0f\u5316\u6d6e\u70b9\u6570\uff0c\u9ed8\u8ba4\u4fdd\u7559\u516d\u4f4d\u5c0f\u6570\u3002 \u793a\u4f8b\uff1a java double pi = 3.14159; String formattedPi = String.format(\"\u03c0 \u7684\u8fd1\u4f3c\u503c\u4e3a\uff1a%.2f\", pi); System.out.println(formattedPi); // \u8f93\u51fa\uff1a\u03c0 \u7684\u8fd1\u4f3c\u503c\u4e3a\uff1a3.14","title":"4.1 \u4f7f\u7528 String.format"},{"location":"lesson4/Lesson4%20Java/#_2","text":"String name = \"\u5c0f\u660e\"; int age = 10; double height = 1.75; String formattedString = String.format(\"\u6211\u53eb %s\uff0c\u4eca\u5e74 %d \u5c81\uff0c\u8eab\u9ad8 %.2f \u7c73\", name, age, height); System.out.println(formattedString); // \u8f93\u51fa\uff1a\u6211\u53eb \u5c0f\u660e\uff0c\u4eca\u5e74 10 \u5c81\uff0c\u8eab\u9ad8 1.75 \u7c73","title":"\u4f7f\u7528\u793a\u4f8b"},{"location":"lesson4/Lesson4%20Java/#42-text-blocks","text":"\u6587\u672c\u5757\u5141\u8bb8\u4f60\u7f16\u5199\u591a\u884c\u5b57\u7b26\u4e32\u800c\u65e0\u9700\u4f7f\u7528\u6362\u884c\u7b26\u6216\u8f6c\u4e49\u5b57\u7b26\u3002\u4f8b\u5982\uff1a String textBlock = \"\"\" This is a text block. It can span multiple lines. \"\"\"; System.out.println(textBlock);","title":"4.2 \u6587\u672c\u5757\uff08Text Blocks\uff09"},{"location":"lesson4/Lesson4%20Java/#43-stringformat","text":"\u867d\u7136\u6587\u672c\u5757\u672c\u8eab\u4e0d\u652f\u6301\u5185\u5d4c\u53d8\u91cf\uff0c\u4f46\u4f60\u53ef\u4ee5\u4f7f\u7528 String.format() \u5c06\u53d8\u91cf\u63d2\u5165\u6587\u672c\u5757\u4e2d\uff1a String name = \"Alice\"; int age = 30; String formattedString = String.format(\"\"\" My name is %s. I am %d years old. \"\"\", name, age); System.out.println(formattedString); // \u8f93\u51fa\uff1a // My name is Alice. // I am 30 years old.","title":"4.3 \u4f7f\u7528 String.format() \u548c\u6587\u672c\u5757\u7ed3\u5408"},{"location":"lesson4/Lesson4%20Java/#44-stringbuilder","text":"Java\u4e2d\u5efa\u8bae\u4f7f\u7528 StringBuilder \u7c7b\u6765\u52a8\u6001\u6784\u5efa\u5b57\u7b26\u4e32\uff0c\u7279\u522b\u662f\u5728\u9700\u8981\u9891\u7e41\u8fde\u63a5\u548c\u4fee\u6539\u5b57\u7b26\u4e32\u65f6\uff0c\u56e0\u6b64\u5bf9\u4e8e\u590d\u6742\u7684\u5b57\u7b26\u4e32\u6784\u5efa\uff0c\u4f60\u53ef\u4ee5\u7ed3\u5408\u4f7f\u7528 StringBuilder \u548c\u5b57\u7b26\u4e32\u683c\u5f0f\u5316\uff1a String name = \"Bob\"; double score = 95.5; StringBuilder sb = new StringBuilder(); sb.append(String.format(\"Student %s scored %.2f marks.%n\", name, score)); System.out.println(sb.toString()); // \u8f93\u51fa\uff1aStudent Bob scored 95.50 marks.","title":"4.4 \u4f7f\u7528 StringBuilder \u8fdb\u884c\u683c\u5f0f\u5316"},{"location":"lesson4/Lesson4%20Java/#5-java","text":"\u5728Java\u4e2d\uff0c\u8f6c\u4e49\u5b57\u7b26\u7528\u4e8e\u8868\u793a\u7279\u6b8a\u5b57\u7b26\u548c\u63a7\u5236\u5b57\u7b26\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u5e38\u89c1\u7684\u8f6c\u4e49\u5b57\u7b26\u793a\u4f8b\uff1a \u8f6c\u4e49\u5b57\u7b26 \u63cf\u8ff0 \u793a\u4f8b \\\\ \u53cd\u659c\u6760\u7b26\u53f7 System.out.println(\"\\\\\"); \\' \u5355\u5f15\u53f7 System.out.println(\"\\'\"); \\\" \u53cc\u5f15\u53f7 System.out.println(\"\\\"\"); \\n \u6362\u884c System.out.println(\"Hello\\nWorld!\"); \\t \u5236\u8868\u7b26 System.out.println(\"Hello\\tWorld!\"); \\b \u9000\u683c System.out.println(\"Hello\\bWorld!\"); \\r \u56de\u8f66 System.out.println(\"Hello\\rWorld!\"); \\f \u6362\u9875 System.out.println(\"Hello\\fWorld!\"); \\u#### Unicode \u5b57\u7b26\uff0c\u5176\u4e2d####\u662f\u5b57\u7b26\u7684\u56db\u4f4d\u5341\u516d\u8fdb\u5236\u4ee3\u7801 System.out.println(\"\\u0048\\u0065\\u006C\\u006C\\u006F!\"); \u4f7f\u7528\u4e86\u4e0d\u540c\u7684\u8f6c\u4e49\u5b57\u7b26\u6765\u6f14\u793a\u5355\u5f15\u53f7\u3001\u6362\u884c\u7b26\u3001\u5236\u8868\u7b26\u3001\u9000\u683c\u7b26\u3001\u6362\u9875\u7b26\u7684\u6548\u679c\uff1a public class EscapeCharacters { public static void main(String[] args) { // \u5355\u5f15\u53f7 System.out.println('\\''); // \u8f93\u51fa\uff1a' // \u6362\u884c\u7b26 System.out.println(\"Hello, world!\\nHow are you?\"); // \u8f93\u51fa\uff1a // Hello, world! // How are you? // \u5236\u8868\u7b26 System.out.println(\"Hello, world!\\tHow are you?\"); // \u8f93\u51fa\uff1aHello, world! How are you? // \u9000\u683c\u7b26 System.out.println(\"Hello,\\b world!\"); // \u8f93\u51fa\uff1aHello world! // \u6362\u9875\u7b26 System.out.println(\"Hello,\\f world!\"); // \u8f93\u51fa\uff1a // Hello, // world! } }","title":"5. Java \u8f6c\u4e49\u5b57\u7b26"},{"location":"lesson4/Lesson4%20Java/#6-java","text":"\u5728Java\u4e2d\uff0c\u5b57\u7b26\u4e32\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u6570\u636e\u7c7b\u578b\uff0c\u63d0\u4f9b\u4e86\u591a\u79cd\u64cd\u4f5c\u7b26\u6765\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u64cd\u4f5c\u548c\u5904\u7406\u3002\u4e0b\u9762\u6211\u4eec\u5c06\u4ecb\u7ecdJava\u4e2d\u5e38\u7528\u7684\u5b57\u7b26\u4e32\u8fd0\u7b97\u7b26\u53ca\u5176\u7528\u6cd5\u3002 \u5728 Java \u4e2d\uff0c\u5e38\u7528\u7684\u5b57\u7b26\u4e32\u51fd\u6570\u5305\u62ec\uff1a","title":"6. Java \u5b57\u7b26\u4e32\u8fd0\u7b97\u7b26"},{"location":"lesson4/Lesson4%20Java/#61-length","text":"\u529f\u80fd\uff1a \u8fd4\u56de\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002 \u793a\u4f8b\uff1a java String str = \"Hello, World!\"; int length = str.length(); // 13","title":"6.1 length()"},{"location":"lesson4/Lesson4%20Java/#62-charatint-index","text":"\u529f\u80fd\uff1a \u8fd4\u56de\u6307\u5b9a\u4f4d\u7f6e\u7684\u5b57\u7b26\u3002 \u793a\u4f8b\uff1a java String str = \"Hello\"; char ch = str.charAt(1); // 'e'","title":"6.2 charAt(int index)"},{"location":"lesson4/Lesson4%20Java/#63-substringint-beginindex-int-endindex","text":"\u529f\u80fd\uff1a \u8fd4\u56de\u4ece beginIndex \u5230 endIndex \u4e4b\u95f4\u7684\u5b50\u5b57\u7b26\u4e32\u3002 \u793a\u4f8b\uff1a java String str = \"Hello, World!\"; String substr = str.substring(7, 12); // \"World\"","title":"6.3 substring(int beginIndex, int endIndex)"},{"location":"lesson4/Lesson4%20Java/#64-tolowercase","text":"\u529f\u80fd\uff1a \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5c0f\u5199\u3002 \u793a\u4f8b\uff1a java String str = \"HELLO\"; String lower = str.toLowerCase(); // \"hello\"","title":"6.4 toLowerCase()"},{"location":"lesson4/Lesson4%20Java/#65-touppercase","text":"\u529f\u80fd\uff1a \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5927\u5199\u3002 \u793a\u4f8b\uff1a java String str = \"hello\"; String upper = str.toUpperCase(); // \"HELLO\"","title":"6.5 toUpperCase()"},{"location":"lesson4/Lesson4%20Java/#66-trim","text":"\u529f\u80fd\uff1a \u53bb\u9664\u5b57\u7b26\u4e32\u524d\u540e\u7684\u7a7a\u767d\u5b57\u7b26\u3002 \u793a\u4f8b\uff1a java String str = \" Hello, World! \"; String trimmed = str.trim(); // \"Hello, World!\"","title":"6.6 trim()"},{"location":"lesson4/Lesson4%20Java/#67-replacecharsequence-target-charsequence-replacement","text":"\u529f\u80fd\uff1a \u66ff\u6362\u5b57\u7b26\u4e32\u4e2d\u7684\u6307\u5b9a\u5b50\u5b57\u7b26\u4e32\u3002 \u793a\u4f8b\uff1a java String str = \"Hello, World!\"; String replaced = str.replace(\"World\", \"Java\"); // \"Hello, Java!\"","title":"6.7 replace(CharSequence target, CharSequence replacement)"},{"location":"lesson4/Lesson4%20Java/#68-splitstring-regex","text":"\u529f\u80fd\uff1a \u6839\u636e\u6b63\u5219\u8868\u8fbe\u5f0f\u5206\u5272\u5b57\u7b26\u4e32\u3002 \u793a\u4f8b\uff1a java String str = \"apple,banana,cherry\"; String[] fruits = str.split(\",\"); // [\"apple\", \"banana\", \"cherry\"]","title":"6.8 split(String regex)"},{"location":"lesson4/Lesson4%20Java/#69-concatstring-str","text":"\u529f\u80fd\uff1a \u5c06\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u8fde\u63a5\u5230\u5f53\u524d\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u3002 \u793a\u4f8b\uff1a java String str = \"Hello\"; String concatenated = str.concat(\", World!\"); // \"Hello, World!\"","title":"6.9 concat(String str)"},{"location":"lesson4/Lesson4%20Java/#610","text":"\u5b57\u7b26\u4e32\u8fde\u63a5\u8fd0\u7b97\u7b26 + \u7528\u4e8e\u5c06\u4e24\u4e2a\u5b57\u7b26\u4e32\u8fde\u63a5\u8d77\u6765\u3002 \u793a\u4f8b\uff1a java String str1 = \"Hello\"; String str2 = \"World\"; String result = str1 + str2; System.out.println(result); // \u8f93\u51fa\uff1aHelloWorld","title":"6.10 \u5b57\u7b26\u4e32\u8fde\u63a5\u8fd0\u7b97\u7b26 +"},{"location":"lesson4/Lesson4%20Java/#611-repeat","text":"Java 11 \u5f15\u5165\u4e86 repeat() \u65b9\u6cd5\u6765\u91cd\u590d\u5b57\u7b26\u4e32\u3002 \u793a\u4f8b\uff1a java String str = \"Hello\"; String repeatedStr = str.repeat(3); System.out.println(repeatedStr); // \u8f93\u51fa\uff1aHelloHelloHello \u6ce8\u610f\uff1a repeat() \u65b9\u6cd5\u5728 Java 11 \u53ca\u4ee5\u4e0a\u7248\u672c\u53ef\u7528\u3002","title":"6.11 \u91cd\u590d\u8f93\u51fa\u5b57\u7b26\u4e32\u8fd0\u7b97\u7b26 repeat()"},{"location":"lesson4/Lesson4%20Java/#612-charat","text":"charAt() \u65b9\u6cd5\u7528\u4e8e\u83b7\u53d6\u5b57\u7b26\u4e32\u4e2d\u6307\u5b9a\u4f4d\u7f6e\u7684\u5b57\u7b26\u3002 \u793a\u4f8b\uff1a java String str = \"Hello\"; char ch = str.charAt(1); // \u83b7\u53d6\u7d22\u5f15\u4e3a1\u7684\u5b57\u7b26\uff0c\u5373\u7b2c2\u4e2a\u5b57\u7b26 'e' System.out.println(ch); // \u8f93\u51fa\uff1ae","title":"6.12 \u901a\u8fc7\u7d22\u5f15\u83b7\u53d6\u5b57\u7b26 charAt()"},{"location":"lesson4/Lesson4%20Java/#613-substring","text":"substring() \u65b9\u6cd5\u7528\u4e8e\u622a\u53d6\u5b57\u7b26\u4e32\u7684\u4e00\u90e8\u5206\u3002 \u793a\u4f8b\uff1a java String str = \"HelloWorld\"; String subStr = str.substring(3, 7); // \u4ece\u7d22\u5f153\u5f00\u59cb\u5230\u7d22\u5f156\uff08\u4e0d\u5305\u62ec7\uff09\u7684\u5b50\u5b57\u7b26\u4e32\uff0c\u5373 \"loWo\" System.out.println(subStr); // \u8f93\u51fa\uff1aloWo","title":"6.13 \u622a\u53d6\u5b50\u5b57\u7b26\u4e32 substring()"},{"location":"lesson4/Lesson4%20Java/#614-contains","text":"contains() \u65b9\u6cd5\u7528\u4e8e\u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u5305\u542b\u6307\u5b9a\u7684\u5b57\u7b26\u5e8f\u5217\u3002 \u793a\u4f8b\uff1a java String str = \"HelloWorld\"; boolean contains = str.contains(\"Wo\"); // \u68c0\u67e5\u662f\u5426\u5305\u542b \"Wo\" System.out.println(contains); // \u8f93\u51fa\uff1atrue","title":"6.14 \u6210\u5458\u8fd0\u7b97\u7b26 contains()"},{"location":"lesson4/Lesson4%20Java/#615-indexof-lastindexof","text":"indexOf() \u548c lastIndexOf() \u65b9\u6cd5\u7528\u4e8e\u83b7\u53d6\u5b57\u7b26\u6216\u5b57\u7b26\u4e32\u5728\u76ee\u6807\u5b57\u7b26\u4e32\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u7d22\u5f15\u548c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u7d22\u5f15\u3002 \u793a\u4f8b\uff1a java String str = \"HelloWorld\"; int firstIndex = str.indexOf('o'); // \u7b2c\u4e00\u6b21\u51fa\u73b0 'o' \u7684\u4f4d\u7f6e\u7d22\u5f15\uff0c\u7d22\u5f15\u4ece0\u5f00\u59cb int lastIndex = str.lastIndexOf('o'); // \u6700\u540e\u4e00\u6b21\u51fa\u73b0 'o' \u7684\u4f4d\u7f6e\u7d22\u5f15 System.out.println(\"\u7b2c\u4e00\u6b21\u51fa\u73b0 'o' \u7684\u4f4d\u7f6e\u7d22\u5f15\uff1a\" + firstIndex); // \u8f93\u51fa\uff1a4 System.out.println(\"\u6700\u540e\u4e00\u6b21\u51fa\u73b0 'o' \u7684\u4f4d\u7f6e\u7d22\u5f15\uff1a\" + lastIndex); // \u8f93\u51fa\uff1a7","title":"6.15 \u6210\u5458\u8fd0\u7b97\u7b26 indexOf() \u548c lastIndexOf()"},{"location":"lesson4/Lesson4%20Java/#7","text":"","title":"7. \u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson4/Lesson4%20Java/#71","text":"","title":"7.1 \u9009\u62e9\u9898"},{"location":"lesson4/Lesson4%20Java/#1_1","text":"\u89c2\u5bdf\u4ee5\u4e0b\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f public class StringTest { public static void main(String[] args) { String str = \"Hello, World!\"; String slice = str.substring(7, 12); System.out.println(slice); } } A. Hello B. World C. World! D. , Wor \u7b54\u6848\uff1a B. World \u7406\u7531\uff1a substring(7, 12) \u65b9\u6cd5\u8fd4\u56de\u4ece\u7d22\u5f15 7 \u5f00\u59cb\u5230\u7d22\u5f15 12 \u4e4b\u524d\u7684\u5b50\u5b57\u7b26\u4e32\uff0c\u5373 \"World\" \u3002","title":"\u9898\u76ee 1: \u5b57\u7b26\u4e32\u7d22\u5f15\u4e0e\u5207\u7247"},{"location":"lesson4/Lesson4%20Java/#2_1","text":"\u89c2\u5bdf\u4ee5\u4e0b\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f public class StringFunctions { public static void main(String[] args) { String str = \" Java Programming \"; int length = str.trim().length(); String lower = str.toLowerCase(); String concatenated = lower.concat(\" is fun!\"); System.out.println(\"Length: \" + length); System.out.println(\"Concatenated: \" + concatenated); } } A. Length: 16; Concatenated: java programming is fun! B. Length: 18; Concatenated: java programming is fun! C. Length: 17; Concatenated: java programming is fun! D. Length: 18; Concatenated: java programming is fun! \u7b54\u6848\uff1a D. Length: 18; Concatenated: java programming is fun! \u7406\u7531\uff1a trim() \u53bb\u9664\u524d\u540e\u7a7a\u683c\uff0c\u6240\u4ee5 length \u662f 18\u3002 toLowerCase() \u5c06\u6240\u6709\u5b57\u7b26\u8f6c\u4e3a\u5c0f\u5199\uff0c concat(\" is fun!\") \u8fdb\u884c\u5b57\u7b26\u4e32\u62fc\u63a5\uff0c\u7ed3\u679c\u662f \"java programming is fun!\" \u3002","title":"\u9898\u76ee 2: \u5b57\u7b26\u4e32\u5e38\u7528\u51fd\u6570"},{"location":"lesson4/Lesson4%20Java/#3_1","text":"\u89c2\u5bdf\u4ee5\u4e0b\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f public class StringFormat { public static void main(String[] args) { int age = 25; String name = \"Alice\"; String formatted = String.format(\"Name: %s, Age: %d\", name, age); System.out.println(formatted); } } A. Name: Alice, Age: 25 B. Name: %s, Age: %d C. Name: Alice, Age: 25 D. Name: Alice, Age: age \u7b54\u6848\uff1a A. Name: Alice, Age: 25 \u7406\u7531\uff1a String.format \u65b9\u6cd5\u7528\u4e8e\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\uff0c %s \u66ff\u6362\u4e3a name \u7684\u503c\uff0c %d \u66ff\u6362\u4e3a age \u7684\u503c\u3002","title":"\u9898\u76ee 3: \u5b57\u7b26\u4e32\u683c\u5f0f\u5316"},{"location":"lesson4/Lesson4%20Java/#72","text":"","title":"7.2 \u4ee3\u7801\u9898"},{"location":"lesson4/Lesson4%20Java/#1_2","text":"\u9898\u76ee\uff1a \u7f16\u5199\u4e00\u4e2a Java \u7a0b\u5e8f\uff0c\u521b\u5efa\u4e00\u4e2a\u5b57\u7b26\u4e32 \"Programming in Java\" \u3002\u4f7f\u7528 substring \u65b9\u6cd5\u63d0\u53d6\u5e76\u8f93\u51fa\u4ece\u7d22\u5f15 0 \u5230\u7d22\u5f15 11 \u7684\u5b50\u5b57\u7b26\u4e32\u3002 \u793a\u4f8b\u4ee3\u7801\uff1a public class StringTest { public static void main(String[] args) { String str = \"Programming in Java\"; // \u8bf7\u5728\u8fd9\u91cc\u7f16\u5199\u4ee3\u7801 } } \u7b54\u6848\uff1a public class StringTest { public static void main(String[] args) { String str = \"Programming in Java\"; String substring = str.substring(0, 11); System.out.println(substring); // \u8f93\u51fa \"Programming\" } }","title":"\u9898\u76ee 1: \u5b57\u7b26\u4e32\u7d22\u5f15\u4e0e\u5207\u7247"},{"location":"lesson4/Lesson4%20Java/#2_2","text":"\u9898\u76ee\uff1a \u7f16\u5199\u4e00\u4e2a Java \u7a0b\u5e8f\uff0c\u521b\u5efa\u4e00\u4e2a\u5b57\u7b26\u4e32 \" Java Programming \" \u3002\u53bb\u9664\u5b57\u7b26\u4e32\u524d\u540e\u7684\u7a7a\u767d\u5b57\u7b26\uff0c\u8f6c\u6362\u4e3a\u5927\u5199\uff0c\u5e76\u62fc\u63a5 \" is fun!\" \u3002\u8f93\u51fa\u6700\u7ec8\u7ed3\u679c\u3002 \u793a\u4f8b\u4ee3\u7801\uff1a public class StringFunctions { public static void main(String[] args) { String str = \" Java Programming \"; // \u8bf7\u5728\u8fd9\u91cc\u7f16\u5199\u4ee3\u7801 } } \u7b54\u6848\uff1a public class StringFunctions { public static void main(String[] args) { String str = \" Java Programming \"; String trimmed = str.trim(); String upper = trimmed.toUpperCase(); String result = upper.concat(\" is fun!\"); System.out.println(result); // \u8f93\u51fa \"JAVA PROGRAMMING is fun!\" } }","title":"\u9898\u76ee 2: \u5b57\u7b26\u4e32\u5e38\u7528\u51fd\u6570"},{"location":"lesson4/Lesson4%20Java/#3_2","text":"\u9898\u76ee\uff1a \u7f16\u5199\u4e00\u4e2a Java \u7a0b\u5e8f\uff0c\u521b\u5efa\u4e00\u4e2a\u6574\u6570\u53d8\u91cf score \u8d4b\u503c\u4e3a 85\uff0c\u521b\u5efa\u4e00\u4e2a\u5b57\u7b26\u4e32\u53d8\u91cf student \u8d4b\u503c\u4e3a \"John\" \u3002\u4f7f\u7528 String.format \u65b9\u6cd5\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\uff0c\u8f93\u51fa \"Student John scored 85 points\" \u3002 \u793a\u4f8b\u4ee3\u7801\uff1a public class StringFormat { public static void main(String[] args) { int score = 85; String student = \"John\"; // \u8bf7\u5728\u8fd9\u91cc\u7f16\u5199\u4ee3\u7801 } } \u7b54\u6848\uff1a public class StringFormat { public static void main(String[] args) { int score = 85; String student = \"John\"; String formatted = String.format(\"Student %s scored %d points\", student, score); System.out.println(formatted); // \u8f93\u51fa \"Student John scored 85 points\" } }","title":"\u9898\u76ee 3: \u5b57\u7b26\u4e32\u683c\u5f0f\u5316"},{"location":"lesson4/Lesson4%20Python/","text":"Lesson 4 \u5b57\u7b26\u4e32\u57fa\u7840 \u76ee\u5f55 Lesson 4 \u5b57\u7b26\u4e32\u57fa\u7840 1 \u5b57\u7b26\u4e32\u521b\u5efa\u3001\u4fee\u6539\u3001\u62fc\u63a5 1.1 \u5b57\u7b26\u4e32\u7684\u521b\u5efa 1.2 Python \u8bbf\u95ee\u5b57\u7b26\u4e32\u4e2d\u7684\u503c 1.3 Python \u5b57\u7b26\u4e32\u62fc\u63a5 2 \u8f6c\u4e49\u5b57\u7b26\u4e0e\u5b57\u7b26\u4e32\u8fd0\u7b97 2.1 \u8f6c\u4e49\u5b57\u7b26 2.2 \u5b57\u7b26\u4e32\u8fd0\u7b97\u7b26 3 Python \u5b57\u7b26\u4e32\u683c\u5f0f\u5316 4 Python\u4e09\u5f15\u53f7 5 f-string 6 \u5b57\u7b26\u4e32\u51fd\u6570 7 \u8bfe\u540e\u7ec3\u4e60 7.1 \u9009\u62e9\u9898 7.2 \u4ee3\u7801\u9898 1 \u5b57\u7b26\u4e32\u521b\u5efa\u3001\u4fee\u6539\u3001\u62fc\u63a5 1.1 \u5b57\u7b26\u4e32\u7684\u521b\u5efa \u5b57\u7b26\u4e32\u662f Python \u4e2d\u6700\u5e38\u7528\u7684\u6570\u636e\u7c7b\u578b\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5f15\u53f7( ' \u6216 \" )\u6765\u521b\u5efa\u5b57\u7b26\u4e32\u3002 \u521b\u5efa\u5b57\u7b26\u4e32\u5f88\u7b80\u5355\uff0c\u53ea\u8981\u4e3a\u53d8\u91cf\u5206\u914d\u4e00\u4e2a\u503c\u5373\u53ef\u3002\u4f8b\u5982\uff1a var1 = 'Hello World!' var2 = \"CodeRaft\" 1.2 Python \u8bbf\u95ee\u5b57\u7b26\u4e32\u4e2d\u7684\u503c Python \u4e0d\u652f\u6301\u5355\u5b57\u7b26\u7c7b\u578b\uff0c\u5355\u5b57\u7b26\u5728 Python \u4e2d\u4e5f\u662f\u4f5c\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u4f7f\u7528\u3002 Python \u8bbf\u95ee\u5b50\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u4f7f\u7528\u65b9\u62ec\u53f7 [] \u6765\u622a\u53d6\u5b57\u7b26\u4e32\uff0c\u5b57\u7b26\u4e32\u7684\u622a\u53d6\u7684\u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a \u53d8\u91cf[\u5934\u4e0b\u6807:\u5c3e\u4e0b\u6807] \u7d22\u5f15\u503c\u4ee5 0 \u4e3a\u5f00\u59cb\u503c\uff0c -1 \u4e3a\u4ece\u672b\u5c3e\u7684\u5f00\u59cb\u4f4d\u7f6e\u3002 \u53c2\u8003\u793a\u4f8b1: word = 'CodeRaft' for i in range(len(word)): print(word[i]) \u8f93\u51fa\u4e3a\uff1a C o d e R a f t \u53c2\u8003\u793a\u4f8b2: word = 'CodeRaft' for i in range(len(word) - 1, -1, -1): print(word[i]) \u8f93\u51fa\u4e3a\uff1a t f a R e d o C \u53c2\u8003\u793a\u4f8b3: var1 = 'Hello World!' var2 = \"CodeRaft\" print (\"var1[0]: \", var1[0]) print (\"var2[1:5]: \", var2[1:5]) \u4ee5\u4e0a\u5b9e\u4f8b\u6267\u884c\u7ed3\u679c\uff1a var1[0]: H var2[1:5]: odeR 1.3 Python \u5b57\u7b26\u4e32\u62fc\u63a5 \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728Python\u4e2d\u662f\u4e0d\u53ef\u4ee5\u76f4\u63a5\u5bf9\u5b57\u7b26\u4e32\u7d22\u5f15\u5143\u7d20\u8fdb\u884c\u8d4b\u503c\u8fdb\u884c\u4fee\u6539\u7684\uff0c\u4ee5\u4e0b\u793a\u4f8b\u5c55\u793a\u4e86\u76f4\u63a5\u4fee\u6539\u7cfb\u7edf\u4f1a\u63d0\u793a\u6211\u4eec\u5b57\u7b26\u4e32\u7684\u4e0d\u53ef\u4fee\u6539\uff1a val = 'CodeRaft' print(val) val[0] = 'R' print(val) \u7cfb\u7edf\u63d0\u793a\u4e3a\uff1a val[0] = 'R' ~~~^^^ TypeError: 'str' object does not support item assignment \u4f60\u53ef\u4ee5\u622a\u53d6\u5b57\u7b26\u4e32\u7684\u4e00\u90e8\u5206\u5e76\u4e0e\u5176\u4ed6\u5b57\u6bb5\u62fc\u63a5\uff0c\u5982\u4e0b\u5b9e\u4f8b\uff1a var1 = 'Hello World!' print (\"\u5df2\u66f4\u65b0\u5b57\u7b26\u4e32 : \", var1[:6] + 'CodeRaft!') \u4ee5\u4e0a\u5b9e\u4f8b\u6267\u884c\u7ed3\u679c\uff1a \u5df2\u66f4\u65b0\u5b57\u7b26\u4e32 : Hello CodeRaft! 2 \u8f6c\u4e49\u5b57\u7b26\u4e0e\u5b57\u7b26\u4e32\u8fd0\u7b97 2.1 \u8f6c\u4e49\u5b57\u7b26 \u8f6c\u4e49\u5b57\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b \\(\u5728\u884c\u5c3e\u65f6) \u7eed\u884c\u7b26 >>> print(\"line1 \\ ... line2 \\ ... line3\") line1 line2 line3 >>> \\ \u53cd\u659c\u6760\u7b26\u53f7 >>> print(\"\\\\\") \\ \\' \u5355\u5f15\u53f7 >>> print('\\'') ' \\\" \u53cc\u5f15\u53f7 >>> print(\"\\\"\") \" \\t \u6a2a\u5411\u5236\u8868\u7b26 >>> print(\"Hello \\t World!\") Hello World! >>> \\n \u6362\u884c >>> print(\"\\n\") >>> a \u4ee5\u4e0b\u5b9e\u4f8b\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u5e38\u7528\u7684\u8f6c\u4e49\u5b57\u7b26\u6765\u6f14\u793a\uff1a # \u5355\u5f15\u53f7 print('\\'Hello, world!\\'') # \u8f93\u51fa\uff1a'Hello, world!' # \u53cc\u5f15\u53f7 print(\"\\\"Hello, world!\\\"\") # \u8f93\u51fa\uff1a\"Hello, world!\" # \u6362\u884c print(\"Hello\\nWorld!\") # \u8f93\u51fa\uff1a # Hello # World! # \u6a2a\u5411\u5236\u8868\u7b26 print(\"Hello\\tWorld!\") # \u8f93\u51fa\uff1aHello World! # \u53cd\u659c\u6760 print(\"\\\\\") # \u8f93\u51fa\uff1a\\ # \u7eed\u884c\u7b26 print(\"line1 \\ ... line2 \\ ... line3\") # \u8f93\u51fa\uff1aline1 line2 line3 2.2 \u5b57\u7b26\u4e32\u8fd0\u7b97\u7b26 \u4e0b\u8868\u5b9e\u4f8b\u53d8\u91cf a \u503c\u4e3a\u5b57\u7b26\u4e32 \"Hello\"\uff0cb \u53d8\u91cf\u503c\u4e3a \"Python\"\uff1a \u64cd\u4f5c\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b + \u5b57\u7b26\u4e32\u8fde\u63a5 a + b \u8f93\u51fa\u7ed3\u679c\uff1a HelloPython * \u91cd\u590d\u8f93\u51fa\u5b57\u7b26\u4e32 a*2 \u8f93\u51fa\u7ed3\u679c\uff1aHelloHello [] \u901a\u8fc7\u7d22\u5f15\u83b7\u53d6\u5b57\u7b26\u4e32\u4e2d\u5b57\u7b26 a[1] \u8f93\u51fa\u7ed3\u679c e [ : ] \u622a\u53d6\u5b57\u7b26\u4e32\u4e2d\u7684\u4e00\u90e8\u5206\uff0c\u9075\u5faa \u5de6\u95ed\u53f3\u5f00 \u539f\u5219\uff0cstr[0:2] \u662f\u4e0d\u5305\u542b\u7b2c 3 \u4e2a\u5b57\u7b26\u7684\u3002 a[1:4] \u8f93\u51fa\u7ed3\u679c ell in \u6210\u5458\u8fd0\u7b97\u7b26 - \u5982\u679c\u5b57\u7b26\u4e32\u4e2d\u5305\u542b\u7ed9\u5b9a\u7684\u5b57\u7b26\u8fd4\u56de True 'H' in a \u8f93\u51fa\u7ed3\u679c True not in \u6210\u5458\u8fd0\u7b97\u7b26 - \u5982\u679c\u5b57\u7b26\u4e32\u4e2d\u4e0d\u5305\u542b\u7ed9\u5b9a\u7684\u5b57\u7b26\u8fd4\u56de True 'M' not in a \u8f93\u51fa\u7ed3\u679c True r/R \u539f\u59cb\u5b57\u7b26\u4e32 - \u539f\u59cb\u5b57\u7b26\u4e32\uff1a\u6240\u6709\u7684\u5b57\u7b26\u4e32\u90fd\u662f\u76f4\u63a5\u6309\u7167\u5b57\u9762\u7684\u610f\u601d\u6765\u4f7f\u7528\uff0c\u6ca1\u6709\u8f6c\u4e49\u7279\u6b8a\u6216\u4e0d\u80fd\u6253\u5370\u7684\u5b57\u7b26\u3002 \u539f\u59cb\u5b57\u7b26\u4e32\u9664\u5728\u5b57\u7b26\u4e32\u7684\u7b2c\u4e00\u4e2a\u5f15\u53f7\u524d\u52a0\u4e0a\u5b57\u6bcd r \uff08\u53ef\u4ee5\u5927\u5c0f\u5199\uff09\u4ee5\u5916\uff0c\u4e0e\u666e\u901a\u5b57\u7b26\u4e32\u6709\u7740\u51e0\u4e4e\u5b8c\u5168\u76f8\u540c\u7684\u8bed\u6cd5\u3002 print( r'\\n' ) print( R'\\n' ) a = \"Hello\" b = \"Python\" print(\"a + b \u8f93\u51fa\u7ed3\u679c\uff1a\", a + b) print(\"a * 2 \u8f93\u51fa\u7ed3\u679c\uff1a\", a * 2) print(\"a[1] \u8f93\u51fa\u7ed3\u679c\uff1a\", a[1]) print(\"a[1:4] \u8f93\u51fa\u7ed3\u679c\uff1a\", a[1:4]) if(\"H\" in a) : print(\"H \u5728\u53d8\u91cf a \u4e2d\") else : print(\"H \u4e0d\u5728\u53d8\u91cf a \u4e2d\") if(\"M\" not in a) : print(\"M \u4e0d\u5728\u53d8\u91cf a \u4e2d\") else : print(\"M \u5728\u53d8\u91cf a \u4e2d\") print (r'\\n') print (R'\\n') \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a a + b \u8f93\u51fa\u7ed3\u679c\uff1a HelloPython a * 2 \u8f93\u51fa\u7ed3\u679c\uff1a HelloHello a[1] \u8f93\u51fa\u7ed3\u679c\uff1a e a[1:4] \u8f93\u51fa\u7ed3\u679c\uff1a ell H \u5728\u53d8\u91cf a \u4e2d M \u4e0d\u5728\u53d8\u91cf a \u4e2d \\n \\n 3 Python \u5b57\u7b26\u4e32\u683c\u5f0f\u5316 Python \u652f\u6301\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u7684\u8f93\u51fa \u3002\u5c3d\u7ba1\u8fd9\u6837\u53ef\u80fd\u4f1a\u7528\u5230\u975e\u5e38\u590d\u6742\u7684\u8868\u8fbe\u5f0f\uff0c\u4f46\u6700\u57fa\u672c\u7684\u7528\u6cd5\u662f\u5c06\u4e00\u4e2a\u503c\u63d2\u5165\u5230\u4e00\u4e2a\u6709\u5b57\u7b26\u4e32\u683c\u5f0f\u7b26 %s \u7684\u5b57\u7b26\u4e32\u4e2d\u3002 \u5728 Python \u4e2d\uff0c\u5b57\u7b26\u4e32\u683c\u5f0f\u5316\u4f7f\u7528\u4e0e C \u4e2d sprintf \u51fd\u6570\u4e00\u6837\u7684\u8bed\u6cd5\u3002 print (\"\u6211\u53eb %s \u4eca\u5e74 %d \u5c81!\" % ('\u5c0f\u660e', 10)) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a \u6211\u53eb \u5c0f\u660e \u4eca\u5e74 10 \u5c81! python\u5e38\u7528\u7684\u5b57\u7b26\u4e32\u683c\u5f0f\u5316\u7b26\u53f7\uff1a \u7b26 \u53f7 \u63cf\u8ff0 %s \u683c\u5f0f\u5316\u5b57\u7b26\u4e32 %d \u683c\u5f0f\u5316\u6574\u6570 %f \u683c\u5f0f\u5316\u6d6e\u70b9\u6570\u5b57\uff0c\u53ef\u6307\u5b9a\u5c0f\u6570\u70b9\u540e\u7684\u7cbe\u5ea6 4 Python\u4e09\u5f15\u53f7 python\u4e09\u5f15\u53f7\u5141\u8bb8\u4e00\u4e2a\u5b57\u7b26\u4e32\u8de8\u591a\u884c\uff0c\u5b57\u7b26\u4e32\u4e2d\u53ef\u4ee5\u5305\u542b\u6362\u884c\u7b26\u3001\u5236\u8868\u7b26\u4ee5\u53ca\u5176\u4ed6\u7279\u6b8a\u5b57\u7b26\u3002\u5b9e\u4f8b\u5982\u4e0b para_str = \"\"\"\u8fd9\u662f\u4e00\u4e2a\u591a\u884c\u5b57\u7b26\u4e32\u7684\u5b9e\u4f8b \u591a\u884c\u5b57\u7b26\u4e32\u53ef\u4ee5\u4f7f\u7528\u5236\u8868\u7b26 TAB (\\t)\u3002 \u4e5f\u53ef\u4ee5\u4f7f\u7528\u6362\u884c\u7b26 [\\n]\u3002 \"\"\" print(para_str) \u4ee5\u4e0a\u5b9e\u4f8b\u6267\u884c\u7ed3\u679c\u4e3a\uff1a \u8fd9\u662f\u4e00\u4e2a\u591a\u884c\u5b57\u7b26\u4e32\u7684\u5b9e\u4f8b \u591a\u884c\u5b57\u7b26\u4e32\u53ef\u4ee5\u4f7f\u7528\u5236\u8868\u7b26 TAB ( )\u3002 \u4e5f\u53ef\u4ee5\u4f7f\u7528\u6362\u884c\u7b26 [ ]\u3002 \u4e09\u5f15\u53f7\u8ba9\u7a0b\u5e8f\u5458\u4ece\u5f15\u53f7\u548c\u7279\u6b8a\u5b57\u7b26\u4e32\u7684\u6ce5\u6f6d\u91cc\u9762\u89e3\u8131\u51fa\u6765\uff0c\u81ea\u59cb\u81f3\u7ec8\u4fdd\u6301\u4e00\u5c0f\u5757\u5b57\u7b26\u4e32\u7684\u683c\u5f0f\u662f\u6240\u8c13\u7684WYSIWYG\uff08\u6240\u89c1\u5373\u6240\u5f97\uff09\u683c\u5f0f\u7684\u3002 5 f-string f-string \u662f python3.6 \u4e4b\u540e\u7248\u672c\u6dfb\u52a0\u7684\uff0c\u79f0\u4e4b\u4e3a\u5b57\u9762\u91cf\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\uff0c\u662f\u65b0\u7684\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u7684\u8bed\u6cd5\u3002 \u4e4b\u524d\u6211\u4eec\u4e60\u60ef\u7528\u767e\u5206\u53f7 (%): >>> name = 'CodeRaft' >>> 'Hello %s' % name 'Hello CodeRaft' f-string \u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u4ee5 f \u5f00\u5934\uff0c\u540e\u9762\u8ddf\u7740\u5b57\u7b26\u4e32\uff0c\u5b57\u7b26\u4e32\u4e2d\u7684\u8868\u8fbe\u5f0f\u7528\u5927\u62ec\u53f7 {} \u5305\u8d77\u6765\uff0c\u5b83\u4f1a\u5c06\u53d8\u91cf\u6216\u8868\u8fbe\u5f0f\u8ba1\u7b97\u540e\u7684\u503c\u66ff\u6362\u8fdb\u53bb\uff0c\u5b9e\u4f8b\u5982\u4e0b\uff1a >>> name = 'CodeRaft' >>> f'Hello {name}' # \u66ff\u6362\u53d8\u91cf 'Hello CodeRaft' >>> f'{1+2}' # \u4f7f\u7528\u8868\u8fbe\u5f0f '3' >>> w = {'name': 'Runoob', 'url': 'www.runoob.com'} >>> f'{w[\"name\"]}: {w[\"url\"]}' 'Runoob: www.runoob.com' \u7528\u4e86\u8fd9\u79cd\u65b9\u5f0f\u660e\u663e\u66f4\u7b80\u5355\u4e86\uff0c\u4e0d\u7528\u518d\u53bb\u5224\u65ad\u4f7f\u7528 %s\uff0c\u8fd8\u662f %d\u3002 \u5728 Python 3.8 \u7684\u7248\u672c\u4e2d\u53ef\u4ee5\u4f7f\u7528 = \u7b26\u53f7\u6765\u62fc\u63a5\u8fd0\u7b97\u8868\u8fbe\u5f0f\u4e0e\u7ed3\u679c\uff1a >>> x = 1 >>> print(f'{x+1}') # Python 3.6 2 >>> x = 1 >>> print(f'{x+1=}') # Python 3.8 x+1=2 6 \u5b57\u7b26\u4e32\u51fd\u6570 \u4e0b\u5217\u5b57\u7b26\u4e32\u51fd\u6570\u5c55\u793a\u4e86\u5728Python\u4e2d\u6211\u4eec\u53ef\u4ee5\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u7684\u90e8\u5206\u64cd\u4f5c\uff1a \u51fd\u6570 \u4f5c\u7528 \u8f93\u5165 \u793a\u4f8b \u8f93\u51fa split \u5206\u5272\u5b57\u7b26\u4e32 s = \"Hello World\" s.split(\" \") ['Hello', 'World'] join \u5408\u5e76\u5b57\u7b26\u4e32 s = ['Hello', 'World'] \" # \".join(s) Hello#World capitalize \u53ea\u8ba9\u9996\u5b57\u6bcd\u5927\u5199, \u5176\u4ed6\u90fd\u5c0f\u5199 s = \"py Hello World\" s.capitalize() Py hello world lower \u6240\u6709\u5b57\u7b26\u5c0f\u5199 s = \"Hello World\" s.lower() hello world upper \u6240\u6709\u5b57\u7b26\u5927\u5199 s = \"Hello World\" s.upper() HELLO WORLD replace \u66ff\u6362\u5b57\u7b26 s = \"Hello World\" s.replace(\"o\", \"m\") Hellm Wmrld count \u8ba1\u7b97\u5b57\u7b26\u4e32\u4e2d\u67d0\u4e9b\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570 s = \"Hello World\" s.count(\"o\") 2 strip \u53bb\u9664\u5b57\u7b26\u4e32\u5f00\u59cb\u548c\u672b\u5c3e\u7684\u7a7a\u683c s = \" Hello World \" s.strip() Hello World 7 \u8bfe\u540e\u7ec3\u4e60 7.1 \u9009\u62e9\u9898 \u9898\u76ee 1: \u5b57\u7b26\u4e32\u7d22\u5f15\u4e0e\u5207\u7247 \u89c2\u5bdf\u4ee5\u4e0b\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f str = \"Hello, World!\" slice = str[7:12] print(slice) A. Hello B. World C. World! D. , Wor \u7b54\u6848: B. World \u7406\u7531: \u5207\u7247 str[7:12] \u8fd4\u56de\u4ece\u7d22\u5f15 7 \u5f00\u59cb\u5230\u7d22\u5f15 12 \u4e4b\u524d\u7684\u5b50\u5b57\u7b26\u4e32\uff0c\u5373 \"World\"\u3002 \u9898\u76ee 2: \u5b57\u7b26\u4e32\u5e38\u7528\u51fd\u6570 \u89c2\u5bdf\u4ee5\u4e0b\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f str = \" Python Programming \" length = len(str.strip()) lower = str.lower() concatenated = lower + \" is fun!\" print(\"Length:\", length, \";\", \"Concatenated:\", concatenated) A. Length: 16; Concatenated: python programming is fun! B. Length: 18; Concatenated: Python programming is fun! C. Length: 17; Concatenated: python programming is fun! D. Length: 18; Concatenated: python programming is fun! \u7b54\u6848: D. Length: 18; Concatenated: python programming is fun! \u7406\u7531: strip() \u53bb\u9664\u524d\u540e\u7a7a\u683c\uff0c\u6240\u4ee5 length \u662f 18\u3002lower() \u5c06\u6240\u6709\u5b57\u7b26\u8f6c\u4e3a\u5c0f\u5199\uff0c\u5b57\u7b26\u4e32\u62fc\u63a5\u5f97\u5230 \"python programming is fun!\"\u3002 \u9898\u76ee 3: \u5b57\u7b26\u4e32\u683c\u5f0f\u5316 \u89c2\u5bdf\u4ee5\u4e0b\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f age = 25 name = \"Alice\" formatted = \"Name: {}, Age: {}\".format(name, age) print(formatted) A. Name: Alice, Age: 25 B. Name: {}, Age: {} C. Name: Alice, Age: 25 D. Name: Alice, Age: age \u7b54\u6848: A. Name: Alice, Age: 25 \u7406\u7531: format \u65b9\u6cd5\u7528\u4e8e\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\uff0c{} \u88ab\u66ff\u6362\u4e3a name \u548c age \u7684\u503c\u3002 7.2 \u4ee3\u7801\u9898 \u9898\u76ee 1: \u5b57\u7b26\u4e32\u7d22\u5f15\u4e0e\u5207\u7247 \u7f16\u5199\u4e00\u4e2a Python \u7a0b\u5e8f\uff0c\u521b\u5efa\u4e00\u4e2a\u5b57\u7b26\u4e32 \"Programming in Python\"\u3002\u4f7f\u7528\u5207\u7247\u63d0\u53d6\u5e76\u8f93\u51fa\u4ece\u7d22\u5f15 0 \u5230\u7d22\u5f15 11 \u7684\u5b50\u5b57\u7b26\u4e32\u3002 \u793a\u4f8b\u4ee3\u7801: str = \"Programming in Python\" # \u8bf7\u5728\u8fd9\u91cc\u7f16\u5199\u4ee3\u7801 \u7b54\u6848\uff1a str = \"Programming in Python\" substring = str[:11] print(substring) # \u8f93\u51fa \"Programming\" \u9898\u76ee 2: \u5b57\u7b26\u4e32\u5e38\u7528\u51fd\u6570 \u7f16\u5199\u4e00\u4e2a Python \u7a0b\u5e8f\uff0c\u521b\u5efa\u4e00\u4e2a\u5b57\u7b26\u4e32 \" Python Programming \"\u3002\u53bb\u9664\u5b57\u7b26\u4e32\u524d\u540e\u7684\u7a7a\u767d\u5b57\u7b26\uff0c\u8f6c\u6362\u4e3a\u5927\u5199\uff0c\u5e76\u62fc\u63a5 \" is fun!\"\u3002\u8f93\u51fa\u6700\u7ec8\u7ed3\u679c\u3002 \u793a\u4f8b\u4ee3\u7801: str = \" Python Programming \" # \u8bf7\u5728\u8fd9\u91cc\u7f16\u5199\u4ee3\u7801 \u7b54\u6848\uff1a str = \" Python Programming \" trimmed = str.strip() upper = trimmed.upper() result = upper + \" is fun!\" print(result) # \u8f93\u51fa \"PYTHON PROGRAMMING is fun!\" \u9898\u76ee 3: \u5b57\u7b26\u4e32\u683c\u5f0f\u5316 \u7f16\u5199\u4e00\u4e2a Python \u7a0b\u5e8f\uff0c\u521b\u5efa\u4e00\u4e2a\u6574\u6570\u53d8\u91cf score \u8d4b\u503c\u4e3a 85\uff0c\u521b\u5efa\u4e00\u4e2a\u5b57\u7b26\u4e32\u53d8\u91cf student \u8d4b\u503c\u4e3a \"John\"\u3002\u4f7f\u7528 f-string \u683c\u5f0f\u5316\u5b57\u7b26\u4e32\uff0c\u8f93\u51fa \"Student John scored 85 points\"\u3002 \u793a\u4f8b\u4ee3\u7801: score = 85 student = \"John\" # \u8bf7\u5728\u8fd9\u91cc\u7f16\u5199\u4ee3\u7801 \u7b54\u6848\uff1a score = 85 student = \"John\" formatted = f\"Student {student} scored {score} points\" print(formatted) # \u8f93\u51fa \"Student John scored 85 points\"","title":"Lesson 4 \u5b57\u7b26\u4e32\u57fa\u7840"},{"location":"lesson4/Lesson4%20Python/#lesson-4","text":"","title":"Lesson 4 \u5b57\u7b26\u4e32\u57fa\u7840"},{"location":"lesson4/Lesson4%20Python/#_1","text":"Lesson 4 \u5b57\u7b26\u4e32\u57fa\u7840 1 \u5b57\u7b26\u4e32\u521b\u5efa\u3001\u4fee\u6539\u3001\u62fc\u63a5 1.1 \u5b57\u7b26\u4e32\u7684\u521b\u5efa 1.2 Python \u8bbf\u95ee\u5b57\u7b26\u4e32\u4e2d\u7684\u503c 1.3 Python \u5b57\u7b26\u4e32\u62fc\u63a5 2 \u8f6c\u4e49\u5b57\u7b26\u4e0e\u5b57\u7b26\u4e32\u8fd0\u7b97 2.1 \u8f6c\u4e49\u5b57\u7b26 2.2 \u5b57\u7b26\u4e32\u8fd0\u7b97\u7b26 3 Python \u5b57\u7b26\u4e32\u683c\u5f0f\u5316 4 Python\u4e09\u5f15\u53f7 5 f-string 6 \u5b57\u7b26\u4e32\u51fd\u6570 7 \u8bfe\u540e\u7ec3\u4e60 7.1 \u9009\u62e9\u9898 7.2 \u4ee3\u7801\u9898","title":"\u76ee\u5f55"},{"location":"lesson4/Lesson4%20Python/#1","text":"","title":"1 \u5b57\u7b26\u4e32\u521b\u5efa\u3001\u4fee\u6539\u3001\u62fc\u63a5"},{"location":"lesson4/Lesson4%20Python/#11","text":"\u5b57\u7b26\u4e32\u662f Python \u4e2d\u6700\u5e38\u7528\u7684\u6570\u636e\u7c7b\u578b\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5f15\u53f7( ' \u6216 \" )\u6765\u521b\u5efa\u5b57\u7b26\u4e32\u3002 \u521b\u5efa\u5b57\u7b26\u4e32\u5f88\u7b80\u5355\uff0c\u53ea\u8981\u4e3a\u53d8\u91cf\u5206\u914d\u4e00\u4e2a\u503c\u5373\u53ef\u3002\u4f8b\u5982\uff1a var1 = 'Hello World!' var2 = \"CodeRaft\"","title":"1.1 \u5b57\u7b26\u4e32\u7684\u521b\u5efa"},{"location":"lesson4/Lesson4%20Python/#12-python","text":"Python \u4e0d\u652f\u6301\u5355\u5b57\u7b26\u7c7b\u578b\uff0c\u5355\u5b57\u7b26\u5728 Python \u4e2d\u4e5f\u662f\u4f5c\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u4f7f\u7528\u3002 Python \u8bbf\u95ee\u5b50\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u4f7f\u7528\u65b9\u62ec\u53f7 [] \u6765\u622a\u53d6\u5b57\u7b26\u4e32\uff0c\u5b57\u7b26\u4e32\u7684\u622a\u53d6\u7684\u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a \u53d8\u91cf[\u5934\u4e0b\u6807:\u5c3e\u4e0b\u6807] \u7d22\u5f15\u503c\u4ee5 0 \u4e3a\u5f00\u59cb\u503c\uff0c -1 \u4e3a\u4ece\u672b\u5c3e\u7684\u5f00\u59cb\u4f4d\u7f6e\u3002 \u53c2\u8003\u793a\u4f8b1: word = 'CodeRaft' for i in range(len(word)): print(word[i]) \u8f93\u51fa\u4e3a\uff1a C o d e R a f t \u53c2\u8003\u793a\u4f8b2: word = 'CodeRaft' for i in range(len(word) - 1, -1, -1): print(word[i]) \u8f93\u51fa\u4e3a\uff1a t f a R e d o C \u53c2\u8003\u793a\u4f8b3: var1 = 'Hello World!' var2 = \"CodeRaft\" print (\"var1[0]: \", var1[0]) print (\"var2[1:5]: \", var2[1:5]) \u4ee5\u4e0a\u5b9e\u4f8b\u6267\u884c\u7ed3\u679c\uff1a var1[0]: H var2[1:5]: odeR","title":"1.2 Python \u8bbf\u95ee\u5b57\u7b26\u4e32\u4e2d\u7684\u503c"},{"location":"lesson4/Lesson4%20Python/#13-python","text":"\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5728Python\u4e2d\u662f\u4e0d\u53ef\u4ee5\u76f4\u63a5\u5bf9\u5b57\u7b26\u4e32\u7d22\u5f15\u5143\u7d20\u8fdb\u884c\u8d4b\u503c\u8fdb\u884c\u4fee\u6539\u7684\uff0c\u4ee5\u4e0b\u793a\u4f8b\u5c55\u793a\u4e86\u76f4\u63a5\u4fee\u6539\u7cfb\u7edf\u4f1a\u63d0\u793a\u6211\u4eec\u5b57\u7b26\u4e32\u7684\u4e0d\u53ef\u4fee\u6539\uff1a val = 'CodeRaft' print(val) val[0] = 'R' print(val) \u7cfb\u7edf\u63d0\u793a\u4e3a\uff1a val[0] = 'R' ~~~^^^ TypeError: 'str' object does not support item assignment \u4f60\u53ef\u4ee5\u622a\u53d6\u5b57\u7b26\u4e32\u7684\u4e00\u90e8\u5206\u5e76\u4e0e\u5176\u4ed6\u5b57\u6bb5\u62fc\u63a5\uff0c\u5982\u4e0b\u5b9e\u4f8b\uff1a var1 = 'Hello World!' print (\"\u5df2\u66f4\u65b0\u5b57\u7b26\u4e32 : \", var1[:6] + 'CodeRaft!') \u4ee5\u4e0a\u5b9e\u4f8b\u6267\u884c\u7ed3\u679c\uff1a \u5df2\u66f4\u65b0\u5b57\u7b26\u4e32 : Hello CodeRaft!","title":"1.3 Python \u5b57\u7b26\u4e32\u62fc\u63a5"},{"location":"lesson4/Lesson4%20Python/#2","text":"","title":"2 \u8f6c\u4e49\u5b57\u7b26\u4e0e\u5b57\u7b26\u4e32\u8fd0\u7b97"},{"location":"lesson4/Lesson4%20Python/#21","text":"\u8f6c\u4e49\u5b57\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b \\(\u5728\u884c\u5c3e\u65f6) \u7eed\u884c\u7b26 >>> print(\"line1 \\ ... line2 \\ ... line3\") line1 line2 line3 >>> \\ \u53cd\u659c\u6760\u7b26\u53f7 >>> print(\"\\\\\") \\ \\' \u5355\u5f15\u53f7 >>> print('\\'') ' \\\" \u53cc\u5f15\u53f7 >>> print(\"\\\"\") \" \\t \u6a2a\u5411\u5236\u8868\u7b26 >>> print(\"Hello \\t World!\") Hello World! >>> \\n \u6362\u884c >>> print(\"\\n\") >>> a \u4ee5\u4e0b\u5b9e\u4f8b\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u5e38\u7528\u7684\u8f6c\u4e49\u5b57\u7b26\u6765\u6f14\u793a\uff1a # \u5355\u5f15\u53f7 print('\\'Hello, world!\\'') # \u8f93\u51fa\uff1a'Hello, world!' # \u53cc\u5f15\u53f7 print(\"\\\"Hello, world!\\\"\") # \u8f93\u51fa\uff1a\"Hello, world!\" # \u6362\u884c print(\"Hello\\nWorld!\") # \u8f93\u51fa\uff1a # Hello # World! # \u6a2a\u5411\u5236\u8868\u7b26 print(\"Hello\\tWorld!\") # \u8f93\u51fa\uff1aHello World! # \u53cd\u659c\u6760 print(\"\\\\\") # \u8f93\u51fa\uff1a\\ # \u7eed\u884c\u7b26 print(\"line1 \\ ... line2 \\ ... line3\") # \u8f93\u51fa\uff1aline1 line2 line3","title":"2.1 \u8f6c\u4e49\u5b57\u7b26"},{"location":"lesson4/Lesson4%20Python/#22","text":"\u4e0b\u8868\u5b9e\u4f8b\u53d8\u91cf a \u503c\u4e3a\u5b57\u7b26\u4e32 \"Hello\"\uff0cb \u53d8\u91cf\u503c\u4e3a \"Python\"\uff1a \u64cd\u4f5c\u7b26 \u63cf\u8ff0 \u5b9e\u4f8b + \u5b57\u7b26\u4e32\u8fde\u63a5 a + b \u8f93\u51fa\u7ed3\u679c\uff1a HelloPython * \u91cd\u590d\u8f93\u51fa\u5b57\u7b26\u4e32 a*2 \u8f93\u51fa\u7ed3\u679c\uff1aHelloHello [] \u901a\u8fc7\u7d22\u5f15\u83b7\u53d6\u5b57\u7b26\u4e32\u4e2d\u5b57\u7b26 a[1] \u8f93\u51fa\u7ed3\u679c e [ : ] \u622a\u53d6\u5b57\u7b26\u4e32\u4e2d\u7684\u4e00\u90e8\u5206\uff0c\u9075\u5faa \u5de6\u95ed\u53f3\u5f00 \u539f\u5219\uff0cstr[0:2] \u662f\u4e0d\u5305\u542b\u7b2c 3 \u4e2a\u5b57\u7b26\u7684\u3002 a[1:4] \u8f93\u51fa\u7ed3\u679c ell in \u6210\u5458\u8fd0\u7b97\u7b26 - \u5982\u679c\u5b57\u7b26\u4e32\u4e2d\u5305\u542b\u7ed9\u5b9a\u7684\u5b57\u7b26\u8fd4\u56de True 'H' in a \u8f93\u51fa\u7ed3\u679c True not in \u6210\u5458\u8fd0\u7b97\u7b26 - \u5982\u679c\u5b57\u7b26\u4e32\u4e2d\u4e0d\u5305\u542b\u7ed9\u5b9a\u7684\u5b57\u7b26\u8fd4\u56de True 'M' not in a \u8f93\u51fa\u7ed3\u679c True r/R \u539f\u59cb\u5b57\u7b26\u4e32 - \u539f\u59cb\u5b57\u7b26\u4e32\uff1a\u6240\u6709\u7684\u5b57\u7b26\u4e32\u90fd\u662f\u76f4\u63a5\u6309\u7167\u5b57\u9762\u7684\u610f\u601d\u6765\u4f7f\u7528\uff0c\u6ca1\u6709\u8f6c\u4e49\u7279\u6b8a\u6216\u4e0d\u80fd\u6253\u5370\u7684\u5b57\u7b26\u3002 \u539f\u59cb\u5b57\u7b26\u4e32\u9664\u5728\u5b57\u7b26\u4e32\u7684\u7b2c\u4e00\u4e2a\u5f15\u53f7\u524d\u52a0\u4e0a\u5b57\u6bcd r \uff08\u53ef\u4ee5\u5927\u5c0f\u5199\uff09\u4ee5\u5916\uff0c\u4e0e\u666e\u901a\u5b57\u7b26\u4e32\u6709\u7740\u51e0\u4e4e\u5b8c\u5168\u76f8\u540c\u7684\u8bed\u6cd5\u3002 print( r'\\n' ) print( R'\\n' ) a = \"Hello\" b = \"Python\" print(\"a + b \u8f93\u51fa\u7ed3\u679c\uff1a\", a + b) print(\"a * 2 \u8f93\u51fa\u7ed3\u679c\uff1a\", a * 2) print(\"a[1] \u8f93\u51fa\u7ed3\u679c\uff1a\", a[1]) print(\"a[1:4] \u8f93\u51fa\u7ed3\u679c\uff1a\", a[1:4]) if(\"H\" in a) : print(\"H \u5728\u53d8\u91cf a \u4e2d\") else : print(\"H \u4e0d\u5728\u53d8\u91cf a \u4e2d\") if(\"M\" not in a) : print(\"M \u4e0d\u5728\u53d8\u91cf a \u4e2d\") else : print(\"M \u5728\u53d8\u91cf a \u4e2d\") print (r'\\n') print (R'\\n') \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a a + b \u8f93\u51fa\u7ed3\u679c\uff1a HelloPython a * 2 \u8f93\u51fa\u7ed3\u679c\uff1a HelloHello a[1] \u8f93\u51fa\u7ed3\u679c\uff1a e a[1:4] \u8f93\u51fa\u7ed3\u679c\uff1a ell H \u5728\u53d8\u91cf a \u4e2d M \u4e0d\u5728\u53d8\u91cf a \u4e2d \\n \\n","title":"2.2 \u5b57\u7b26\u4e32\u8fd0\u7b97\u7b26"},{"location":"lesson4/Lesson4%20Python/#3-python","text":"Python \u652f\u6301\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u7684\u8f93\u51fa \u3002\u5c3d\u7ba1\u8fd9\u6837\u53ef\u80fd\u4f1a\u7528\u5230\u975e\u5e38\u590d\u6742\u7684\u8868\u8fbe\u5f0f\uff0c\u4f46\u6700\u57fa\u672c\u7684\u7528\u6cd5\u662f\u5c06\u4e00\u4e2a\u503c\u63d2\u5165\u5230\u4e00\u4e2a\u6709\u5b57\u7b26\u4e32\u683c\u5f0f\u7b26 %s \u7684\u5b57\u7b26\u4e32\u4e2d\u3002 \u5728 Python \u4e2d\uff0c\u5b57\u7b26\u4e32\u683c\u5f0f\u5316\u4f7f\u7528\u4e0e C \u4e2d sprintf \u51fd\u6570\u4e00\u6837\u7684\u8bed\u6cd5\u3002 print (\"\u6211\u53eb %s \u4eca\u5e74 %d \u5c81!\" % ('\u5c0f\u660e', 10)) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a \u6211\u53eb \u5c0f\u660e \u4eca\u5e74 10 \u5c81! python\u5e38\u7528\u7684\u5b57\u7b26\u4e32\u683c\u5f0f\u5316\u7b26\u53f7\uff1a \u7b26 \u53f7 \u63cf\u8ff0 %s \u683c\u5f0f\u5316\u5b57\u7b26\u4e32 %d \u683c\u5f0f\u5316\u6574\u6570 %f \u683c\u5f0f\u5316\u6d6e\u70b9\u6570\u5b57\uff0c\u53ef\u6307\u5b9a\u5c0f\u6570\u70b9\u540e\u7684\u7cbe\u5ea6","title":"3 Python \u5b57\u7b26\u4e32\u683c\u5f0f\u5316"},{"location":"lesson4/Lesson4%20Python/#4-python","text":"python\u4e09\u5f15\u53f7\u5141\u8bb8\u4e00\u4e2a\u5b57\u7b26\u4e32\u8de8\u591a\u884c\uff0c\u5b57\u7b26\u4e32\u4e2d\u53ef\u4ee5\u5305\u542b\u6362\u884c\u7b26\u3001\u5236\u8868\u7b26\u4ee5\u53ca\u5176\u4ed6\u7279\u6b8a\u5b57\u7b26\u3002\u5b9e\u4f8b\u5982\u4e0b para_str = \"\"\"\u8fd9\u662f\u4e00\u4e2a\u591a\u884c\u5b57\u7b26\u4e32\u7684\u5b9e\u4f8b \u591a\u884c\u5b57\u7b26\u4e32\u53ef\u4ee5\u4f7f\u7528\u5236\u8868\u7b26 TAB (\\t)\u3002 \u4e5f\u53ef\u4ee5\u4f7f\u7528\u6362\u884c\u7b26 [\\n]\u3002 \"\"\" print(para_str) \u4ee5\u4e0a\u5b9e\u4f8b\u6267\u884c\u7ed3\u679c\u4e3a\uff1a \u8fd9\u662f\u4e00\u4e2a\u591a\u884c\u5b57\u7b26\u4e32\u7684\u5b9e\u4f8b \u591a\u884c\u5b57\u7b26\u4e32\u53ef\u4ee5\u4f7f\u7528\u5236\u8868\u7b26 TAB ( )\u3002 \u4e5f\u53ef\u4ee5\u4f7f\u7528\u6362\u884c\u7b26 [ ]\u3002 \u4e09\u5f15\u53f7\u8ba9\u7a0b\u5e8f\u5458\u4ece\u5f15\u53f7\u548c\u7279\u6b8a\u5b57\u7b26\u4e32\u7684\u6ce5\u6f6d\u91cc\u9762\u89e3\u8131\u51fa\u6765\uff0c\u81ea\u59cb\u81f3\u7ec8\u4fdd\u6301\u4e00\u5c0f\u5757\u5b57\u7b26\u4e32\u7684\u683c\u5f0f\u662f\u6240\u8c13\u7684WYSIWYG\uff08\u6240\u89c1\u5373\u6240\u5f97\uff09\u683c\u5f0f\u7684\u3002","title":"4 Python\u4e09\u5f15\u53f7"},{"location":"lesson4/Lesson4%20Python/#5-f-string","text":"f-string \u662f python3.6 \u4e4b\u540e\u7248\u672c\u6dfb\u52a0\u7684\uff0c\u79f0\u4e4b\u4e3a\u5b57\u9762\u91cf\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\uff0c\u662f\u65b0\u7684\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u7684\u8bed\u6cd5\u3002 \u4e4b\u524d\u6211\u4eec\u4e60\u60ef\u7528\u767e\u5206\u53f7 (%): >>> name = 'CodeRaft' >>> 'Hello %s' % name 'Hello CodeRaft' f-string \u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u4ee5 f \u5f00\u5934\uff0c\u540e\u9762\u8ddf\u7740\u5b57\u7b26\u4e32\uff0c\u5b57\u7b26\u4e32\u4e2d\u7684\u8868\u8fbe\u5f0f\u7528\u5927\u62ec\u53f7 {} \u5305\u8d77\u6765\uff0c\u5b83\u4f1a\u5c06\u53d8\u91cf\u6216\u8868\u8fbe\u5f0f\u8ba1\u7b97\u540e\u7684\u503c\u66ff\u6362\u8fdb\u53bb\uff0c\u5b9e\u4f8b\u5982\u4e0b\uff1a >>> name = 'CodeRaft' >>> f'Hello {name}' # \u66ff\u6362\u53d8\u91cf 'Hello CodeRaft' >>> f'{1+2}' # \u4f7f\u7528\u8868\u8fbe\u5f0f '3' >>> w = {'name': 'Runoob', 'url': 'www.runoob.com'} >>> f'{w[\"name\"]}: {w[\"url\"]}' 'Runoob: www.runoob.com' \u7528\u4e86\u8fd9\u79cd\u65b9\u5f0f\u660e\u663e\u66f4\u7b80\u5355\u4e86\uff0c\u4e0d\u7528\u518d\u53bb\u5224\u65ad\u4f7f\u7528 %s\uff0c\u8fd8\u662f %d\u3002 \u5728 Python 3.8 \u7684\u7248\u672c\u4e2d\u53ef\u4ee5\u4f7f\u7528 = \u7b26\u53f7\u6765\u62fc\u63a5\u8fd0\u7b97\u8868\u8fbe\u5f0f\u4e0e\u7ed3\u679c\uff1a >>> x = 1 >>> print(f'{x+1}') # Python 3.6 2 >>> x = 1 >>> print(f'{x+1=}') # Python 3.8 x+1=2","title":"5 f-string"},{"location":"lesson4/Lesson4%20Python/#6","text":"\u4e0b\u5217\u5b57\u7b26\u4e32\u51fd\u6570\u5c55\u793a\u4e86\u5728Python\u4e2d\u6211\u4eec\u53ef\u4ee5\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u7684\u90e8\u5206\u64cd\u4f5c\uff1a \u51fd\u6570 \u4f5c\u7528 \u8f93\u5165 \u793a\u4f8b \u8f93\u51fa split \u5206\u5272\u5b57\u7b26\u4e32 s = \"Hello World\" s.split(\" \") ['Hello', 'World'] join \u5408\u5e76\u5b57\u7b26\u4e32 s = ['Hello', 'World'] \" # \".join(s) Hello#World capitalize \u53ea\u8ba9\u9996\u5b57\u6bcd\u5927\u5199, \u5176\u4ed6\u90fd\u5c0f\u5199 s = \"py Hello World\" s.capitalize() Py hello world lower \u6240\u6709\u5b57\u7b26\u5c0f\u5199 s = \"Hello World\" s.lower() hello world upper \u6240\u6709\u5b57\u7b26\u5927\u5199 s = \"Hello World\" s.upper() HELLO WORLD replace \u66ff\u6362\u5b57\u7b26 s = \"Hello World\" s.replace(\"o\", \"m\") Hellm Wmrld count \u8ba1\u7b97\u5b57\u7b26\u4e32\u4e2d\u67d0\u4e9b\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570 s = \"Hello World\" s.count(\"o\") 2 strip \u53bb\u9664\u5b57\u7b26\u4e32\u5f00\u59cb\u548c\u672b\u5c3e\u7684\u7a7a\u683c s = \" Hello World \" s.strip() Hello World","title":"6 \u5b57\u7b26\u4e32\u51fd\u6570"},{"location":"lesson4/Lesson4%20Python/#7","text":"","title":"7 \u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson4/Lesson4%20Python/#71","text":"\u9898\u76ee 1: \u5b57\u7b26\u4e32\u7d22\u5f15\u4e0e\u5207\u7247 \u89c2\u5bdf\u4ee5\u4e0b\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f str = \"Hello, World!\" slice = str[7:12] print(slice) A. Hello B. World C. World! D. , Wor \u7b54\u6848: B. World \u7406\u7531: \u5207\u7247 str[7:12] \u8fd4\u56de\u4ece\u7d22\u5f15 7 \u5f00\u59cb\u5230\u7d22\u5f15 12 \u4e4b\u524d\u7684\u5b50\u5b57\u7b26\u4e32\uff0c\u5373 \"World\"\u3002 \u9898\u76ee 2: \u5b57\u7b26\u4e32\u5e38\u7528\u51fd\u6570 \u89c2\u5bdf\u4ee5\u4e0b\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f str = \" Python Programming \" length = len(str.strip()) lower = str.lower() concatenated = lower + \" is fun!\" print(\"Length:\", length, \";\", \"Concatenated:\", concatenated) A. Length: 16; Concatenated: python programming is fun! B. Length: 18; Concatenated: Python programming is fun! C. Length: 17; Concatenated: python programming is fun! D. Length: 18; Concatenated: python programming is fun! \u7b54\u6848: D. Length: 18; Concatenated: python programming is fun! \u7406\u7531: strip() \u53bb\u9664\u524d\u540e\u7a7a\u683c\uff0c\u6240\u4ee5 length \u662f 18\u3002lower() \u5c06\u6240\u6709\u5b57\u7b26\u8f6c\u4e3a\u5c0f\u5199\uff0c\u5b57\u7b26\u4e32\u62fc\u63a5\u5f97\u5230 \"python programming is fun!\"\u3002 \u9898\u76ee 3: \u5b57\u7b26\u4e32\u683c\u5f0f\u5316 \u89c2\u5bdf\u4ee5\u4e0b\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f age = 25 name = \"Alice\" formatted = \"Name: {}, Age: {}\".format(name, age) print(formatted) A. Name: Alice, Age: 25 B. Name: {}, Age: {} C. Name: Alice, Age: 25 D. Name: Alice, Age: age \u7b54\u6848: A. Name: Alice, Age: 25 \u7406\u7531: format \u65b9\u6cd5\u7528\u4e8e\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\uff0c{} \u88ab\u66ff\u6362\u4e3a name \u548c age \u7684\u503c\u3002","title":"7.1 \u9009\u62e9\u9898"},{"location":"lesson4/Lesson4%20Python/#72","text":"\u9898\u76ee 1: \u5b57\u7b26\u4e32\u7d22\u5f15\u4e0e\u5207\u7247 \u7f16\u5199\u4e00\u4e2a Python \u7a0b\u5e8f\uff0c\u521b\u5efa\u4e00\u4e2a\u5b57\u7b26\u4e32 \"Programming in Python\"\u3002\u4f7f\u7528\u5207\u7247\u63d0\u53d6\u5e76\u8f93\u51fa\u4ece\u7d22\u5f15 0 \u5230\u7d22\u5f15 11 \u7684\u5b50\u5b57\u7b26\u4e32\u3002 \u793a\u4f8b\u4ee3\u7801: str = \"Programming in Python\" # \u8bf7\u5728\u8fd9\u91cc\u7f16\u5199\u4ee3\u7801 \u7b54\u6848\uff1a str = \"Programming in Python\" substring = str[:11] print(substring) # \u8f93\u51fa \"Programming\" \u9898\u76ee 2: \u5b57\u7b26\u4e32\u5e38\u7528\u51fd\u6570 \u7f16\u5199\u4e00\u4e2a Python \u7a0b\u5e8f\uff0c\u521b\u5efa\u4e00\u4e2a\u5b57\u7b26\u4e32 \" Python Programming \"\u3002\u53bb\u9664\u5b57\u7b26\u4e32\u524d\u540e\u7684\u7a7a\u767d\u5b57\u7b26\uff0c\u8f6c\u6362\u4e3a\u5927\u5199\uff0c\u5e76\u62fc\u63a5 \" is fun!\"\u3002\u8f93\u51fa\u6700\u7ec8\u7ed3\u679c\u3002 \u793a\u4f8b\u4ee3\u7801: str = \" Python Programming \" # \u8bf7\u5728\u8fd9\u91cc\u7f16\u5199\u4ee3\u7801 \u7b54\u6848\uff1a str = \" Python Programming \" trimmed = str.strip() upper = trimmed.upper() result = upper + \" is fun!\" print(result) # \u8f93\u51fa \"PYTHON PROGRAMMING is fun!\" \u9898\u76ee 3: \u5b57\u7b26\u4e32\u683c\u5f0f\u5316 \u7f16\u5199\u4e00\u4e2a Python \u7a0b\u5e8f\uff0c\u521b\u5efa\u4e00\u4e2a\u6574\u6570\u53d8\u91cf score \u8d4b\u503c\u4e3a 85\uff0c\u521b\u5efa\u4e00\u4e2a\u5b57\u7b26\u4e32\u53d8\u91cf student \u8d4b\u503c\u4e3a \"John\"\u3002\u4f7f\u7528 f-string \u683c\u5f0f\u5316\u5b57\u7b26\u4e32\uff0c\u8f93\u51fa \"Student John scored 85 points\"\u3002 \u793a\u4f8b\u4ee3\u7801: score = 85 student = \"John\" # \u8bf7\u5728\u8fd9\u91cc\u7f16\u5199\u4ee3\u7801 \u7b54\u6848\uff1a score = 85 student = \"John\" formatted = f\"Student {student} scored {score} points\" print(formatted) # \u8f93\u51fa \"Student John scored 85 points\"","title":"7.2 \u4ee3\u7801\u9898"},{"location":"lesson5/Lesson5%20C%2B%2B/","text":"Lesson5 \u6570\u7ec4/\u5217\u8868\u4e0e\u521d\u7ea7\u641c\u7d22 \u76ee\u5f55 1. \u6570\u7ec4\uff08Array\uff09 1.1 \u58f0\u660e\u4e0e\u521d\u59cb\u5316\u6570\u7ec4 1.2 \u8bbf\u95ee\u6570\u7ec4\u5143\u7d20 1.3 \u6570\u7ec4\u7684\u957f\u5ea6 1.4 \u591a\u7ef4\u6570\u7ec4 1.5 \u6570\u7ec4\u7684\u7279\u70b9\u548c\u6ce8\u610f\u4e8b\u9879 2. \u52a8\u6001\u6570\u7ec4\u548c\u5217\u8868\uff08std::vector\uff09 2.1 \u521b\u5efa\u548c\u521d\u59cb\u5316\u52a8\u6001\u6570\u7ec4 2.2 \u57fa\u672c\u64cd\u4f5c 2.3 \u7279\u6027\u548c\u6ce8\u610f\u4e8b\u9879 3. \u521d\u7ea7\u641c\u7d22 3.1 \u6570\u7ec4\u7684\u7ebf\u6027\u641c\u7d22\uff08Linear Search\uff09 3.2 std::vector \u7684\u7ebf\u6027\u641c\u7d22 4. \u8bfe\u540e\u7ec3\u4e60 4.1 \u5b66\u751f\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf 1. \u6570\u7ec4\uff08Array\uff09 \u5728C++\u4e2d\uff0c\u6570\u7ec4\u662f\u4e00\u79cd\u7528\u6765\u5b58\u50a8\u56fa\u5b9a\u5927\u5c0f\u7684\u540c\u7c7b\u578b\u5143\u7d20\u7684\u6570\u636e\u7ed3\u6784\u3002\u5b83\u662f\u4e00\u4e2a\u8fde\u7eed\u7684\u5185\u5b58\u533a\u57df\uff0c\u53ef\u4ee5\u5b58\u50a8\u591a\u4e2a\u76f8\u540c\u6570\u636e\u7c7b\u578b\u7684\u5143\u7d20\uff0c\u5e76\u901a\u8fc7\u7d22\u5f15\u6765\u8bbf\u95ee\u8fd9\u4e9b\u5143\u7d20\u3002\u4ee5\u4e0b\u662f\u5173\u4e8eC++\u6570\u7ec4\u7684\u8be6\u7ec6\u4ecb\u7ecd\uff1a 1.1 \u58f0\u660e\u4e0e\u521d\u59cb\u5316\u6570\u7ec4 \u5728C++\u4e2d\uff0c\u6570\u7ec4\u7684\u58f0\u660e\u548c\u521d\u59cb\u5316\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u51e0\u79cd\u65b9\u5f0f\uff1a \u58f0\u660e\u6570\u7ec4\u53d8\u91cf\uff1a \u58f0\u660e\u6570\u7ec4\u9700\u8981\u6307\u5b9a\u6570\u7ec4\u7684\u7c7b\u578b\u548c\u5927\u5c0f\uff0c\u4f46\u4e0d\u521d\u59cb\u5316\u6570\u7ec4\u5143\u7d20\u3002 cpp int myArray[5]; \u58f0\u660e\u5e76\u521d\u59cb\u5316\u6570\u7ec4\uff1a \u5728\u58f0\u660e\u6570\u7ec4\u7684\u540c\u65f6\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u672a\u663e\u5f0f\u521d\u59cb\u5316\u7684\u5143\u7d20\u5c06\u88ab\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u503c\uff08\u901a\u5e38\u4e3a0\uff09\u3002 cpp int myArray[5] = {1, 2, 3}; // \u524d\u4e09\u4e2a\u5143\u7d20\u521d\u59cb\u5316\u4e3a1, 2, 3\uff0c\u540e\u4e24\u4e2a\u5143\u7d20\u4e3a0 \u4f7f\u7528\u6570\u7ec4\u521d\u59cb\u5316\u5217\u8868\uff1a \u53ef\u4ee5\u5728\u58f0\u660e\u65f6\u76f4\u63a5\u6307\u5b9a\u6240\u6709\u521d\u59cb\u5143\u7d20\u7684\u503c\u3002 cpp int myArray[] = {1, 2, 3, 4, 5}; // \u7f16\u8bd1\u5668\u81ea\u52a8\u786e\u5b9a\u6570\u7ec4\u5927\u5c0f\u4e3a5 \u52a8\u6001\u5206\u914d\u6570\u7ec4\uff1a \u4f7f\u7528 new \u5173\u952e\u5b57\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u5206\u914d\u6570\u7ec4\u5e76\u6307\u5b9a\u6570\u7ec4\u7684\u5927\u5c0f\u3002 cpp int* myArray = new int[5]; // \u52a8\u6001\u5206\u914d\u4e00\u4e2a\u5305\u542b5\u4e2a\u6574\u6570\u5143\u7d20\u7684\u6570\u7ec4 1.2 \u8bbf\u95ee\u6570\u7ec4\u5143\u7d20 C++\u6570\u7ec4\u7684\u5143\u7d20\u901a\u8fc7\u7d22\u5f15\u8bbf\u95ee\uff0c\u7d22\u5f15\u4ece0\u5f00\u59cb\u5230\u6570\u7ec4\u957f\u5ea6\u51cf1\u3002 int myArray[] = {10, 20, 30, 40, 50}; int firstElement = myArray[0]; // \u8bbf\u95ee\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u503c\u4e3a10 int thirdElement = myArray[2]; // \u8bbf\u95ee\u7b2c\u4e09\u4e2a\u5143\u7d20\uff0c\u503c\u4e3a30 1.3 \u6570\u7ec4\u7684\u957f\u5ea6 \u5728 C++ \u4e2d\uff0c\u6570\u7ec4\u7684\u957f\u5ea6\u6307\u6570\u7ec4\u4e2d\u5143\u7d20\u7684\u6570\u91cf\u3002\u8ba1\u7b97\u6570\u7ec4\u957f\u5ea6\u65f6\uff0c\u9700\u8981\u533a\u5206\u9759\u6001\u5206\u914d\u6570\u7ec4\u548c\u52a8\u6001\u5206\u914d\u6570\u7ec4\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u5904\u7406\u65b9\u5f0f\u662f\u4e0d\u540c\u7684\u3002 \u9759\u6001\u5206\u914d\u6570\u7ec4 \u9759\u6001\u5206\u914d\u6570\u7ec4\u7684\u5927\u5c0f\u5728\u7f16\u8bd1\u65f6\u5df2\u7ecf\u786e\u5b9a\uff0c\u4e0d\u80fd\u5728\u8fd0\u884c\u65f6\u4fee\u6539\u3002\u5728 C++ \u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 sizeof \u8fd0\u7b97\u7b26\u8ba1\u7b97\u9759\u6001\u6570\u7ec4\u7684\u5927\u5c0f\u3002 \u793a\u4f8b\u4ee3\u7801\uff1a int myArray[] = {10, 20, 30, 40, 50}; int length = sizeof(myArray) / sizeof(myArray[0]); // \u83b7\u53d6\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u503c\u4e3a 5 \u89e3\u91ca\uff1a sizeof(myArray) : sizeof \u8fd0\u7b97\u7b26\u8fd4\u56de\u6570\u7ec4 myArray \u5360\u7528\u7684\u603b\u5b57\u8282\u6570\u3002\u4f8b\u5982\uff0c\u5982\u679c myArray \u662f\u4e00\u4e2a\u5305\u542b 5 \u4e2a int \u7c7b\u578b\u5143\u7d20\u7684\u6570\u7ec4\uff0c\u800c\u6bcf\u4e2a int \u5360\u7528 4 \u4e2a\u5b57\u8282\uff0c\u90a3\u4e48 sizeof(myArray) \u7684\u503c\u4e3a 20\uff085 * 4\uff09\u3002 sizeof(myArray[0]) : \u8fd4\u56de\u6570\u7ec4\u4e2d\u5355\u4e2a\u5143\u7d20\u7684\u5b57\u8282\u5927\u5c0f\u3002\u5bf9\u4e8e int \u7c7b\u578b\u7684\u6570\u7ec4\u5143\u7d20\uff0c\u901a\u5e38\u662f 4 \u4e2a\u5b57\u8282\u3002 sizeof(myArray) / sizeof(myArray[0]) : \u901a\u8fc7\u5c06\u6570\u7ec4\u7684\u603b\u5b57\u8282\u6570\u9664\u4ee5\u5355\u4e2a\u5143\u7d20\u7684\u5b57\u8282\u5927\u5c0f\uff0c\u53ef\u4ee5\u5f97\u5230\u6570\u7ec4\u7684\u5143\u7d20\u4e2a\u6570\uff08\u5373\u6570\u7ec4\u7684\u957f\u5ea6\uff09\u3002\u4f8b\u5982\uff0c\u5047\u8bbe myArray \u662f\u4e00\u4e2a\u5305\u542b 5 \u4e2a int \u7c7b\u578b\u5143\u7d20\u7684\u6570\u7ec4\uff0c sizeof(myArray) \u7684\u503c\u4e3a 20\uff0c sizeof(myArray[0]) \u7684\u503c\u4e3a 4\uff0c\u90a3\u4e48 sizeof(myArray) / sizeof(myArray[0]) \u7684\u503c\u4e3a 5\u3002 \u52a8\u6001\u5206\u914d\u6570\u7ec4 \u52a8\u6001\u5206\u914d\u6570\u7ec4\u7684\u5927\u5c0f\u5728\u8fd0\u884c\u65f6\u786e\u5b9a\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u901a\u8fc7 new \u8fd0\u7b97\u7b26\u5206\u914d\u5185\u5b58\u3002\u5bf9\u4e8e\u52a8\u6001\u5206\u914d\u7684\u6570\u7ec4\uff0c sizeof \u8fd0\u7b97\u7b26\u65e0\u6cd5\u7528\u4e8e\u8ba1\u7b97\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u56e0\u6b64\u9700\u8981\u5728\u5206\u914d\u5185\u5b58\u65f6\u624b\u52a8\u4fdd\u5b58\u6570\u7ec4\u7684\u957f\u5ea6\u3002 \u793a\u4f8b\u4ee3\u7801\uff1a int* myArray = new int[5]; int length = 5; // \u624b\u52a8\u8bb0\u5f55\u6570\u7ec4\u957f\u5ea6 \u89e3\u91ca\uff1a \u52a8\u6001\u5206\u914d\u6570\u7ec4\u7684\u7279\u70b9 \uff1a\u52a8\u6001\u5206\u914d\u7684\u6570\u7ec4\u65e0\u6cd5\u901a\u8fc7 sizeof \u8fd0\u7b97\u7b26\u83b7\u53d6\u957f\u5ea6\uff0c\u56e0\u4e3a sizeof(myArray) \u53ea\u8fd4\u56de\u6307\u9488\u7684\u5927\u5c0f\uff0c\u800c\u4e0d\u662f\u6570\u7ec4\u7684\u5b9e\u9645\u5927\u5c0f\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u901a\u5e38\u9700\u8981\u5728\u5206\u914d\u5185\u5b58\u65f6\u624b\u52a8\u4fdd\u5b58\u6570\u7ec4\u7684\u957f\u5ea6\u3002 \u9759\u6001\u5206\u914d vs \u52a8\u6001\u5206\u914d \u9759\u6001\u5206\u914d\u6570\u7ec4 : \u6570\u7ec4\u7684\u5927\u5c0f\u5728\u7f16\u8bd1\u65f6\u5df2\u7ecf\u786e\u5b9a\uff0c\u6570\u7ec4\u957f\u5ea6\u662f\u56fa\u5b9a\u7684\uff0c\u4e0d\u80fd\u5728\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\u6539\u53d8\u6570\u7ec4\u7684\u5927\u5c0f\u3002\u4f7f\u7528 sizeof \u53ef\u4ee5\u8ba1\u7b97\u6570\u7ec4\u7684\u957f\u5ea6\u3002 \u52a8\u6001\u5206\u914d\u6570\u7ec4 : \u6570\u7ec4\u7684\u5927\u5c0f\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u786e\u5b9a\uff0c\u53ef\u4ee5\u5728\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\u6539\u53d8\u6570\u7ec4\u7684\u5927\u5c0f\u3002 sizeof \u4e0d\u80fd\u7528\u4e8e\u8ba1\u7b97\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u901a\u5e38\u9700\u8981\u624b\u52a8\u8bb0\u5f55\u957f\u5ea6\u3002 1.4 \u591a\u7ef4\u6570\u7ec4 C++\u652f\u6301\u591a\u7ef4\u6570\u7ec4\uff0c\u5373\u6570\u7ec4\u7684\u5143\u7d20\u53ef\u4ee5\u662f\u6570\u7ec4\u3002\u4f8b\u5982\uff0c\u4e8c\u7ef4\u6570\u7ec4\u7684\u58f0\u660e\u548c\u521d\u59cb\u5316\u5982\u4e0b\u6240\u793a\uff1a int twoDArray[3][4]; // \u58f0\u660e\u4e00\u4e2a3\u884c4\u5217\u7684\u4e8c\u7ef4\u6574\u6570\u6570\u7ec4 int twoDArray[3][3] = { {1, 2, 3}, {4, 5, 6}, {7, 8, 9} }; // \u58f0\u660e\u5e76\u521d\u59cb\u5316\u4e00\u4e2a3\u884c3\u5217\u7684\u4e8c\u7ef4\u6574\u6570\u6570\u7ec4 1.5 \u6570\u7ec4\u7684\u7279\u70b9\u548c\u6ce8\u610f\u4e8b\u9879 \u6570\u7ec4\u662f\u56fa\u5b9a\u5927\u5c0f\u7684\uff1a \u5728C++\u4e2d\uff0c\u6570\u7ec4\u7684\u5927\u5c0f\u5728\u58f0\u660e\u65f6\u5c31\u786e\u5b9a\u4e86\uff0c\u4e14\u4e0d\u53ef\u53d8\u3002\u5982\u679c\u9700\u8981\u6539\u53d8\u6570\u7ec4\u7684\u5927\u5c0f\uff0c\u901a\u5e38\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6570\u7ec4\u5e76\u590d\u5236\u5143\u7d20\u3002 \u6570\u7ec4\u53ef\u4ee5\u5728\u6808\u6216\u5806\u4e2d\u5206\u914d\uff1a \u9759\u6001\u6570\u7ec4\u5728\u6808\u4e2d\u5206\u914d\uff0c\u52a8\u6001\u6570\u7ec4\u4f7f\u7528new\u5173\u952e\u5b57\u5728\u5806\u4e2d\u5206\u914d\uff0c\u9700\u624b\u52a8\u91ca\u653e\u5185\u5b58\u3002 \u9ed8\u8ba4\u521d\u59cb\u5316\uff1a \u9759\u6001\u6570\u7ec4\u7684\u5143\u7d20\u5728\u58f0\u660e\u65f6\u672a\u663e\u5f0f\u521d\u59cb\u5316\u65f6\uff0c\u5176\u503c\u662f\u672a\u5b9a\u4e49\u7684\u3002\u52a8\u6001\u6570\u7ec4\u7684\u5143\u7d20\u4e5f\u672a\u5b9a\u4e49\uff0c\u9664\u975e\u663e\u5f0f\u521d\u59cb\u5316\u3002 \u6570\u7ec4\u8d8a\u754c\uff1a \u8bbf\u95ee\u6570\u7ec4\u5143\u7d20\u65f6\uff0c\u5982\u679c\u4f7f\u7528\u4e86\u4e0d\u5b58\u5728\u7684\u7d22\u5f15\uff0c\u4f1a\u5bfc\u81f4\u672a\u5b9a\u4e49\u884c\u4e3a\uff08\u901a\u5e38\u662f\u7a0b\u5e8f\u5d29\u6e83\uff09\uff0c\u800c\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38\u3002 \u793a\u4f8b \u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff0c\u5c55\u793a\u4e86\u5982\u4f55\u58f0\u660e\u3001\u521d\u59cb\u5316\u548c\u4f7f\u7528\u4e00\u4e2a\u4e00\u7ef4\u6574\u6570\u6570\u7ec4\uff1a #include <iostream> using namespace std; int main() { // \u58f0\u660e\u5e76\u521d\u59cb\u5316\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 int myArray[] = {10, 20, 30, 40, 50}; // \u8ba1\u7b97\u6570\u7ec4\u5143\u7d20\u7684\u603b\u548c int sum = 0; for (int i = 0; i < sizeof(myArray) / sizeof(myArray[0]); i++) { sum += myArray[i]; } // \u6253\u5370\u6570\u7ec4\u5143\u7d20\u7684\u603b\u548c cout << \"\u6570\u7ec4\u5143\u7d20\u7684\u603b\u548c\u4e3a\uff1a\" << sum << endl; return 0; } \u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c myArray \u6570\u7ec4\u5305\u542b5\u4e2a\u6574\u6570\u5143\u7d20\uff0c\u901a\u8fc7\u5faa\u73af\u8ba1\u7b97\u4e86\u8fd9\u4e9b\u5143\u7d20\u7684\u603b\u548c\uff0c\u5e76\u8f93\u51fa\u5230\u63a7\u5236\u53f0\u3002 2. \u52a8\u6001\u6570\u7ec4\u548c\u5217\u8868\uff08std::vector\uff09 2.1 \u521b\u5efa\u548c\u521d\u59cb\u5316\u52a8\u6001\u6570\u7ec4 \u5728C++\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528std::vector\u7c7b\u6765\u521b\u5efa\u548c\u521d\u59cb\u5316\u52a8\u6001\u6570\u7ec4\uff1a #include <iostream> #include <vector> using namespace std; int main() { // \u521b\u5efa\u4e00\u4e2avector\u5b9e\u4f8b vector<int> myVector = {10, 20, 30, 40, 50}; // \u6253\u5370vector\u5143\u7d20 for (int i = 0; i < myVector.size(); i++) { cout << \"Element at index \" << i << \": \" << myVector[i] << endl; } // \u6dfb\u52a0\u65b0\u5143\u7d20 myVector.push_back(60); // \u6253\u5370\u6dfb\u52a0\u540e\u7684\u5143\u7d20 cout << \"After adding an element, vector elements: \"; for (int i = 0; i < myVector.size(); i++) { cout << myVector[i] << \" \"; } cout << endl; return 0; } 2.2 \u57fa\u672c\u64cd\u4f5c \u6dfb\u52a0\u548c\u8bbf\u95ee\u5143\u7d20 \u53ef\u4ee5\u4f7f\u7528 push_back() \u65b9\u6cd5\u6dfb\u52a0\u5143\u7d20\u5230 vector \u4e2d\uff0c\u5e76\u4f7f\u7528\u7d22\u5f15\u8bbf\u95ee\u5143\u7d20 vector<int> myVector; myVector.push_back(10); myVector.push_back(20); myVector.push_back(30); int firstElement = myVector[0]; // \u83b7\u53d6\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u503c\u4e3a10 \u5220\u9664\u5143\u7d20 \u4f7f\u7528 erase() \u65b9\u6cd5\u5220\u9664\u6307\u5b9a\u4f4d\u7f6e\u7684\u5143\u7d20\uff0c\u6216\u4f7f\u7528 pop_back() \u5220\u9664\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u3002 myVector.erase(myVector.begin() + 1); // \u5220\u9664\u7d22\u5f15\u4e3a1\u7684\u5143\u7d20\uff0c\u537320\u3002\u5982\u679c\u60f3\u5220\u9664\u7d22\u5f15\u4e3a2\u7684\u5143\u7d20\u5219+2\uff0c \u4ee5\u6b64\u7c7b\u63a8 myVector.pop_back(); // \u5220\u9664\u6700\u540e\u4e00\u4e2a\u5143\u7d20 \u83b7\u53d6 vector \u5927\u5c0f \u4f7f\u7528 size() \u65b9\u6cd5\u83b7\u53d6 vector \u4e2d\u5143\u7d20\u7684\u4e2a\u6570\u3002 int size = myVector.size(); // \u83b7\u53d6vector\u5927\u5c0f\u3002 \u8fed\u4ee3 vector \u5143\u7d20 \u53ef\u4ee5\u4f7f\u7528\u8303\u56f4for\u5faa\u73af\u6216\u8fed\u4ee3\u5668\u904d\u5386 vector \u4e2d\u7684\u5143\u7d20\u3002 //\u4f7f\u7528for\u5faa\u73af for (int element : myVector) { cout << element << \" \"; } cout << endl; // \u6216\u8005\u4f7f\u7528\u8fed\u4ee3\u5668 for (auto it = myVector.begin(); it != myVector.end(); ++it) { cout << *it << \" \"; } cout << endl; 2.3 \u7279\u6027\u548c\u6ce8\u610f\u4e8b\u9879 \u52a8\u6001\u8c03\u6574\u5927\u5c0f\uff1a std::vector \u53ef\u4ee5\u6839\u636e\u9700\u8981\u81ea\u52a8\u8c03\u6574\u5176\u5927\u5c0f\uff0c\u4e0d\u9700\u8981\u624b\u52a8\u7ba1\u7406\u5185\u5b58\u3002 \u6027\u80fd\uff1a std::vector \u5728\u968f\u673a\u8bbf\u95ee\u548c\u5c3e\u90e8\u63d2\u5165/\u5220\u9664\u64cd\u4f5c\u4e0a\u5177\u6709\u9ad8\u6548\u7684\u6027\u80fd\uff0c\u4f46\u5728\u4e2d\u95f4\u63d2\u5165/\u5220\u9664\u64cd\u4f5c\u4e0a\u76f8\u5bf9\u8f83\u6162\u3002 \u7ebf\u7a0b\u5b89\u5168\u6027\uff1a std::vector \u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u5982\u679c\u9700\u8981\u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e2d\u4f7f\u7528 vector \uff0c\u9700\u8981\u624b\u52a8\u5b9e\u73b0\u540c\u6b65\u3002 \u793a\u4f8b \u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f7f\u7528 std::vector \u7684\u7b80\u5355\u793a\u4f8b\uff1a #include <iostream> #include <vector> using namespace std; int main() { // \u521b\u5efa\u4e00\u4e2avector\u5b9e\u4f8b vector<int> myVector = {10, 20, 30, 40, 50}; // \u6253\u5370vector\u5143\u7d20 cout << \"Vector elements: \"; for (int element : myVector) { cout << element << \" \"; } cout << endl; // \u6dfb\u52a0\u65b0\u5143\u7d20 myVector.push_back(60); // \u6253\u5370\u6dfb\u52a0\u540e\u7684\u5143\u7d20 cout << \"After adding an element, vector elements: \"; for (int element : myVector) { cout << element << \" \"; } cout << endl; return 0; } \u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 std::vector\u521b\u5efa \u3001\u6dfb\u52a0\u548c\u8bbf\u95ee\u5143\u7d20\uff0c\u4ee5\u53ca\u6253\u5370 vector \u7684\u5185\u5bb9\u3002 3. \u521d\u7ea7\u641c\u7d22 3.1 \u6570\u7ec4\u7684\u7ebf\u6027\u641c\u7d22\uff08Linear Search\uff09 \u7ebf\u6027\u641c\u7d22\u662f\u6700\u7b80\u5355\u7684\u6570\u7ec4\u641c\u7d22\u65b9\u6cd5\uff0c\u5b83\u4ece\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\u9010\u4e2a\u68c0\u67e5\uff0c\u76f4\u5230\u627e\u5230\u76ee\u6807\u5143\u7d20\u6216\u904d\u5386\u5b8c\u6574\u4e2a\u6570\u7ec4\u3002 #include <iostream> using namespace std; int linearSearch(int arr[], int size, int target) { for (int i = 0; i < size; i++) { if (arr[i] == target) { return i; // \u8fd4\u56de\u76ee\u6807\u5143\u7d20\u7684\u7d22\u5f15 } } return -1; // \u6ca1\u6709\u627e\u5230\u76ee\u6807\u5143\u7d20 } int main() { int numbers[] = {5, 8, 2, 10, 3}; int target = 10; int size = sizeof(numbers) / sizeof(numbers[0]); int index = linearSearch(numbers, size, target); if (index != -1) { cout << \"\u5143\u7d20 \" << target << \" \u5728\u6570\u7ec4\u4e2d\u7684\u7d22\u5f15\u4e3a\uff1a\" << index << endl; } else { cout << \"\u5143\u7d20 \" << target << \" \u4e0d\u5728\u6570\u7ec4\u4e2d\u3002\" << endl; } return 0; } \u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c linearSearch \u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u6574\u578b\u6570\u7ec4\u3001\u6570\u7ec4\u5927\u5c0f\u548c\u76ee\u6807\u6574\u6570\u4f5c\u4e3a\u53c2\u6570\uff0c\u7136\u540e\u4f7f\u7528for\u5faa\u73af\u9010\u4e2a\u68c0\u67e5\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\uff0c\u76f4\u5230\u627e\u5230\u76ee\u6807\u5143\u7d20\u6216\u8005\u904d\u5386\u5b8c\u6574\u4e2a\u6570\u7ec4\u3002 3.2 std::vector \u7684\u7ebf\u6027\u641c\u7d22 std::vector \u7684\u7ebf\u6027\u641c\u7d22\u4e0e\u6570\u7ec4\u7c7b\u4f3c\uff0c\u53ef\u4ee5\u4f7f\u7528\u8303\u56f4for\u5faa\u73af\u6216\u8fed\u4ee3\u5668\u904d\u5386 vector \u4e2d\u7684\u5143\u7d20\uff0c\u67e5\u627e\u76ee\u6807\u5143\u7d20\u3002 #include <iostream> #include <vector> using namespace std; int linearSearch(vector<string> vec, string target) { for (int i = 0; i < vec.size(); i++) { if (vec[i] == target) { return i; // \u8fd4\u56de\u76ee\u6807\u5143\u7d20\u7684\u7d22\u5f15 } } return -1; // \u6ca1\u6709\u627e\u5230\u76ee\u6807\u5143\u7d20 } int main() { vector<string> fruits = {\"Apple\", \"Banana\", \"Cherry\"}; string target = \"Banana\"; int index = linearSearch(fruits, target); if (index != -1) { cout << \"\u5143\u7d20 \" << target << \" \u5728vector\u4e2d\u7684\u7d22\u5f15\u4e3a\uff1a\" << index << endl; } else { cout << \"\u5143\u7d20 \" << target << \" \u4e0d\u5728vector\u4e2d\u3002\" << endl; } return 0; } \u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c linearSearch \u51fd\u6570\u63a5\u53d7\u4e00\u4e2a vector \u548c\u76ee\u6807\u5143\u7d20\u4f5c\u4e3a\u53c2\u6570\uff0c\u7136\u540e\u4f7f\u7528for\u5faa\u73af\u904d\u5386 vector \u4e2d\u7684\u5143\u7d20\uff0c\u67e5\u627e\u76ee\u6807\u5143\u7d20\u662f\u5426\u5b58\u5728\u3002 \u603b\u7ed3 \u6570\u7ec4\uff08Array\uff09\uff1a \u4f7f\u7528\u56fa\u5b9a\u5927\u5c0f\u7684\u8fde\u7eed\u5b58\u50a8\u7a7a\u95f4\u6765\u5b58\u50a8\u5143\u7d20\uff0c\u901a\u8fc7\u7d22\u5f15\u8bbf\u95ee\u5143\u7d20\u3002\u521d\u7ea7\u641c\u7d22\u901a\u5e38\u91c7\u7528\u7ebf\u6027\u641c\u7d22\u65b9\u6cd5\u3002 std::vector\uff1a \u662f\u4e00\u79cd\u52a8\u6001\u6570\u7ec4\uff0c\u5b9e\u73b0\u4e86\u66f4\u7075\u6d3b\u7684\u64cd\u4f5c\u548c\u641c\u7d22\u65b9\u6cd5\u3002\u521d\u7ea7\u641c\u7d22\u4e5f\u53ef\u4ee5\u91c7\u7528\u7ebf\u6027\u641c\u7d22\u65b9\u6cd5\u3002 \u6027\u80fd\u6bd4\u8f83\uff1a std::vector \u5728\u968f\u673a\u8bbf\u95ee\u548c\u5c3e\u90e8\u63d2\u5165/\u5220\u9664\u64cd\u4f5c\u4e0a\u5177\u6709\u9ad8\u6548\u7684\u6027\u80fd\uff0c\u4f46\u5728\u4e2d\u95f4\u63d2\u5165/\u5220\u9664\u64cd\u4f5c\u4e0a\u76f8\u5bf9\u8f83\u6162\u3002 \u6ce8\u610f\u4e8b\u9879\uff1a std::vector \u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u9700\u8981\u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e2d\u624b\u52a8\u5b9e\u73b0\u540c\u6b65\u3002 \u8fd9\u4e9b\u793a\u4f8b\u548c\u8bf4\u660e\u63d0\u4f9b\u4e86\u5728C++\u4e2d\u4f7f\u7528\u6570\u7ec4\u548cstd::vector\u8fdb\u884c\u57fa\u672c\u64cd\u4f5c\u548c\u7ebf\u6027\u641c\u7d22\u7684\u57fa\u7840\u77e5\u8bc6\u3002 4. \u8bfe\u540e\u7ec3\u4e60 4.1 \u5b66\u751f\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf \u63cf\u8ff0\uff1a \u8bbe\u8ba1\u5e76\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684\u5b66\u751f\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf\u3002\u7cfb\u7edf\u8981\u6c42\u80fd\u591f\u5b58\u50a8\u591a\u4e2a\u5b66\u751f\u7684\u59d3\u540d\u548c\u5bf9\u5e94\u7684\u6210\u7ee9\uff0c\u5e76\u63d0\u4f9b\u4ee5\u4e0b\u529f\u80fd\uff1a 1. \u6dfb\u52a0\u5b66\u751f\u53ca\u5176\u6210\u7ee9\u3002 2. \u8ba1\u7b97\u5e76\u8f93\u51fa\u6240\u6709\u5b66\u751f\u7684\u5e73\u5747\u6210\u7ee9\u3002 3. \u67e5\u627e\u5e76\u8f93\u51fa\u67d0\u4e2a\u5b66\u751f\u7684\u6210\u7ee9\u3002 4. \u8f93\u51fa\u6210\u7ee9\u6700\u9ad8\u7684\u5b66\u751f\u53ca\u5176\u6210\u7ee9\u3002 \u6a21\u677f #include <iostream> #include <vector> #include <string> using namespace std; // \u6dfb\u52a0\u5b66\u751f\u4fe1\u606f\u5230students\u548cgrades\u5217\u8868\u4e2d void addStudent(vector<string>& students, vector<int>& grades, const string& name, int grade) { // \u586b\u5199\u4ee3\u7801 } // \u8ba1\u7b97\u6240\u6709\u5b66\u751f\u7684\u5e73\u5747\u6210\u7ee9 double calculateAverage(const vector<int>& grades) { // \u586b\u5199\u4ee3\u7801 } // \u67e5\u627e\u6307\u5b9a\u5b66\u751f\u7684\u6210\u7ee9 int findGrade(const vector<string>& students, const vector<int>& grades, const string& name) { // \u586b\u5199\u4ee3\u7801 } // \u627e\u51fa\u6210\u7ee9\u6700\u9ad8\u7684\u5b66\u751f\u53ca\u5176\u6210\u7ee9 void findTopStudent(const vector<string>& students, const vector<int>& grades, string& topStudent, int& topGrade) { // \u586b\u5199\u4ee3\u7801 } int main() { vector<string> students; vector<int> grades; // \u6dfb\u52a0\u5b66\u751f\u4fe1\u606f addStudent(students, grades, \"Alice\", 85); addStudent(students, grades, \"Bob\", 90); addStudent(students, grades, \"Charlie\", 78); addStudent(students, grades, \"David\", 92); // \u8f93\u51fa\u6240\u6709\u5b66\u751f\u7684\u5e73\u5747\u6210\u7ee9 double average = calculateAverage(grades); cout << \"\u6240\u6709\u5b66\u751f\u7684\u5e73\u5747\u6210\u7ee9\u4e3a\uff1a\" << average << endl; // \u67e5\u627e\u67d0\u4e2a\u5b66\u751f\u7684\u6210\u7ee9 string targetName = \"Bob\"; int grade = findGrade(students, grades, targetName); if (grade != -1) { cout << targetName << \" \u7684\u6210\u7ee9\u4e3a\uff1a\" << grade << endl; } else { cout << targetName << \" \u4e0d\u5b58\u5728\u3002\" << endl; } // \u627e\u51fa\u6210\u7ee9\u6700\u9ad8\u7684\u5b66\u751f string topStudent; int topGrade; findTopStudent(students, grades, topStudent, topGrade); cout << \"\u6210\u7ee9\u6700\u9ad8\u7684\u5b66\u751f\u662f \" << topStudent << \"\uff0c\u6210\u7ee9\u4e3a\uff1a\" << topGrade << endl; return 0; } \u53c2\u8003\u7b54\u6848 #include <iostream> #include <vector> #include <string> using namespace std; // \u6dfb\u52a0\u5b66\u751f\u4fe1\u606f\u5230students\u548cgrades\u5217\u8868\u4e2d void addStudent(vector<string>& students, vector<int>& grades, const string& name, int grade) { students.push_back(name); grades.push_back(grade); } // \u8ba1\u7b97\u6240\u6709\u5b66\u751f\u7684\u5e73\u5747\u6210\u7ee9 double calculateAverage(const vector<int>& grades) { int total = 0; for (int i = 0; i < grades.size(); i++) { total += grades[i]; } return static_cast<double>(total) / grades.size(); } // \u67e5\u627e\u6307\u5b9a\u5b66\u751f\u7684\u6210\u7ee9 int findGrade(const vector<string>& students, const vector<int>& grades, const string& name) { for (int i = 0; i < students.size(); i++) { if (students[i] == name) { return grades[i]; } } return -1; // \u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u8fd4\u56de-1 } // \u627e\u51fa\u6210\u7ee9\u6700\u9ad8\u7684\u5b66\u751f\u53ca\u5176\u6210\u7ee9 void findTopStudent(const vector<string>& students, const vector<int>& grades, string& topStudent, int& topGrade) { topGrade = grades[0]; topStudent = students[0]; for (int i = 1; i < grades.size(); i++) { if (grades[i] > topGrade) { topGrade = grades[i]; topStudent = students[i]; } } } int main() { vector<string> students; vector<int> grades; // \u6dfb\u52a0\u5b66\u751f\u4fe1\u606f addStudent(students, grades, \"Alice\", 85); addStudent(students, grades, \"Bob\", 90); addStudent(students, grades, \"Charlie\", 78); addStudent(students, grades, \"David\", 92); // \u8f93\u51fa\u6240\u6709\u5b66\u751f\u7684\u5e73\u5747\u6210\u7ee9 double average = calculateAverage(grades); cout << \"\u6240\u6709\u5b66\u751f\u7684\u5e73\u5747\u6210\u7ee9\u4e3a\uff1a\" << average << endl; // \u67e5\u627e\u67d0\u4e2a\u5b66\u751f\u7684\u6210\u7ee9 string targetName = \"Bob\"; int grade = findGrade(students, grades, targetName); if (grade != -1) { cout << targetName << \" \u7684\u6210\u7ee9\u4e3a\uff1a\" << grade << endl; } else { cout << targetName << \" \u4e0d\u5b58\u5728\u3002\" << endl; } // \u627e\u51fa\u6210\u7ee9\u6700\u9ad8\u7684\u5b66\u751f string topStudent; int topGrade; findTopStudent(students, grades, topStudent, topGrade); cout << \"\u6210\u7ee9\u6700\u9ad8\u7684\u5b66\u751f\u662f \" << topStudent << \"\uff0c\u6210\u7ee9\u4e3a\uff1a\" << topGrade << endl; return 0; } \u8bf4\u660e addStudent : \u901a\u8fc7 push_back \u65b9\u6cd5\u5c06\u5b66\u751f\u59d3\u540d\u548c\u6210\u7ee9\u6dfb\u52a0\u5230 students \u548c grades \u4e24\u4e2a vector \u4e2d\u3002 calculateAverage : \u901a\u8fc7\u904d\u5386 grades \uff0c\u8ba1\u7b97\u6240\u6709\u5b66\u751f\u7684\u6210\u7ee9\u603b\u548c\u5e76\u8fd4\u56de\u5e73\u5747\u503c\u3002 findGrade : \u901a\u8fc7\u904d\u5386 students \uff0c\u67e5\u627e\u6307\u5b9a\u5b66\u751f\u7684\u59d3\u540d\u5e76\u8fd4\u56de\u5bf9\u5e94\u7684\u6210\u7ee9\u3002\u5982\u679c\u627e\u4e0d\u5230\uff0c\u8fd4\u56de -1 \u3002 findTopStudent : \u901a\u8fc7\u904d\u5386 grades \uff0c\u627e\u51fa\u6700\u9ad8\u6210\u7ee9\u7684\u5b66\u751f\u59d3\u540d\u548c\u6210\u7ee9\u3002","title":"Lesson5 \u6570\u7ec4/\u5217\u8868\u4e0e\u521d\u7ea7\u641c\u7d22"},{"location":"lesson5/Lesson5%20C%2B%2B/#lesson5","text":"","title":"Lesson5 \u6570\u7ec4/\u5217\u8868\u4e0e\u521d\u7ea7\u641c\u7d22"},{"location":"lesson5/Lesson5%20C%2B%2B/#_1","text":"1. \u6570\u7ec4\uff08Array\uff09 1.1 \u58f0\u660e\u4e0e\u521d\u59cb\u5316\u6570\u7ec4 1.2 \u8bbf\u95ee\u6570\u7ec4\u5143\u7d20 1.3 \u6570\u7ec4\u7684\u957f\u5ea6 1.4 \u591a\u7ef4\u6570\u7ec4 1.5 \u6570\u7ec4\u7684\u7279\u70b9\u548c\u6ce8\u610f\u4e8b\u9879 2. \u52a8\u6001\u6570\u7ec4\u548c\u5217\u8868\uff08std::vector\uff09 2.1 \u521b\u5efa\u548c\u521d\u59cb\u5316\u52a8\u6001\u6570\u7ec4 2.2 \u57fa\u672c\u64cd\u4f5c 2.3 \u7279\u6027\u548c\u6ce8\u610f\u4e8b\u9879 3. \u521d\u7ea7\u641c\u7d22 3.1 \u6570\u7ec4\u7684\u7ebf\u6027\u641c\u7d22\uff08Linear Search\uff09 3.2 std::vector \u7684\u7ebf\u6027\u641c\u7d22 4. \u8bfe\u540e\u7ec3\u4e60 4.1 \u5b66\u751f\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf","title":"\u76ee\u5f55"},{"location":"lesson5/Lesson5%20C%2B%2B/#1-array","text":"\u5728C++\u4e2d\uff0c\u6570\u7ec4\u662f\u4e00\u79cd\u7528\u6765\u5b58\u50a8\u56fa\u5b9a\u5927\u5c0f\u7684\u540c\u7c7b\u578b\u5143\u7d20\u7684\u6570\u636e\u7ed3\u6784\u3002\u5b83\u662f\u4e00\u4e2a\u8fde\u7eed\u7684\u5185\u5b58\u533a\u57df\uff0c\u53ef\u4ee5\u5b58\u50a8\u591a\u4e2a\u76f8\u540c\u6570\u636e\u7c7b\u578b\u7684\u5143\u7d20\uff0c\u5e76\u901a\u8fc7\u7d22\u5f15\u6765\u8bbf\u95ee\u8fd9\u4e9b\u5143\u7d20\u3002\u4ee5\u4e0b\u662f\u5173\u4e8eC++\u6570\u7ec4\u7684\u8be6\u7ec6\u4ecb\u7ecd\uff1a","title":"1. \u6570\u7ec4\uff08Array\uff09"},{"location":"lesson5/Lesson5%20C%2B%2B/#11","text":"\u5728C++\u4e2d\uff0c\u6570\u7ec4\u7684\u58f0\u660e\u548c\u521d\u59cb\u5316\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u51e0\u79cd\u65b9\u5f0f\uff1a \u58f0\u660e\u6570\u7ec4\u53d8\u91cf\uff1a \u58f0\u660e\u6570\u7ec4\u9700\u8981\u6307\u5b9a\u6570\u7ec4\u7684\u7c7b\u578b\u548c\u5927\u5c0f\uff0c\u4f46\u4e0d\u521d\u59cb\u5316\u6570\u7ec4\u5143\u7d20\u3002 cpp int myArray[5]; \u58f0\u660e\u5e76\u521d\u59cb\u5316\u6570\u7ec4\uff1a \u5728\u58f0\u660e\u6570\u7ec4\u7684\u540c\u65f6\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u672a\u663e\u5f0f\u521d\u59cb\u5316\u7684\u5143\u7d20\u5c06\u88ab\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u503c\uff08\u901a\u5e38\u4e3a0\uff09\u3002 cpp int myArray[5] = {1, 2, 3}; // \u524d\u4e09\u4e2a\u5143\u7d20\u521d\u59cb\u5316\u4e3a1, 2, 3\uff0c\u540e\u4e24\u4e2a\u5143\u7d20\u4e3a0 \u4f7f\u7528\u6570\u7ec4\u521d\u59cb\u5316\u5217\u8868\uff1a \u53ef\u4ee5\u5728\u58f0\u660e\u65f6\u76f4\u63a5\u6307\u5b9a\u6240\u6709\u521d\u59cb\u5143\u7d20\u7684\u503c\u3002 cpp int myArray[] = {1, 2, 3, 4, 5}; // \u7f16\u8bd1\u5668\u81ea\u52a8\u786e\u5b9a\u6570\u7ec4\u5927\u5c0f\u4e3a5 \u52a8\u6001\u5206\u914d\u6570\u7ec4\uff1a \u4f7f\u7528 new \u5173\u952e\u5b57\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u5206\u914d\u6570\u7ec4\u5e76\u6307\u5b9a\u6570\u7ec4\u7684\u5927\u5c0f\u3002 cpp int* myArray = new int[5]; // \u52a8\u6001\u5206\u914d\u4e00\u4e2a\u5305\u542b5\u4e2a\u6574\u6570\u5143\u7d20\u7684\u6570\u7ec4","title":"1.1 \u58f0\u660e\u4e0e\u521d\u59cb\u5316\u6570\u7ec4"},{"location":"lesson5/Lesson5%20C%2B%2B/#12","text":"C++\u6570\u7ec4\u7684\u5143\u7d20\u901a\u8fc7\u7d22\u5f15\u8bbf\u95ee\uff0c\u7d22\u5f15\u4ece0\u5f00\u59cb\u5230\u6570\u7ec4\u957f\u5ea6\u51cf1\u3002 int myArray[] = {10, 20, 30, 40, 50}; int firstElement = myArray[0]; // \u8bbf\u95ee\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u503c\u4e3a10 int thirdElement = myArray[2]; // \u8bbf\u95ee\u7b2c\u4e09\u4e2a\u5143\u7d20\uff0c\u503c\u4e3a30","title":"1.2 \u8bbf\u95ee\u6570\u7ec4\u5143\u7d20"},{"location":"lesson5/Lesson5%20C%2B%2B/#13","text":"\u5728 C++ \u4e2d\uff0c\u6570\u7ec4\u7684\u957f\u5ea6\u6307\u6570\u7ec4\u4e2d\u5143\u7d20\u7684\u6570\u91cf\u3002\u8ba1\u7b97\u6570\u7ec4\u957f\u5ea6\u65f6\uff0c\u9700\u8981\u533a\u5206\u9759\u6001\u5206\u914d\u6570\u7ec4\u548c\u52a8\u6001\u5206\u914d\u6570\u7ec4\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u5904\u7406\u65b9\u5f0f\u662f\u4e0d\u540c\u7684\u3002","title":"1.3 \u6570\u7ec4\u7684\u957f\u5ea6"},{"location":"lesson5/Lesson5%20C%2B%2B/#_2","text":"\u9759\u6001\u5206\u914d\u6570\u7ec4\u7684\u5927\u5c0f\u5728\u7f16\u8bd1\u65f6\u5df2\u7ecf\u786e\u5b9a\uff0c\u4e0d\u80fd\u5728\u8fd0\u884c\u65f6\u4fee\u6539\u3002\u5728 C++ \u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 sizeof \u8fd0\u7b97\u7b26\u8ba1\u7b97\u9759\u6001\u6570\u7ec4\u7684\u5927\u5c0f\u3002 \u793a\u4f8b\u4ee3\u7801\uff1a int myArray[] = {10, 20, 30, 40, 50}; int length = sizeof(myArray) / sizeof(myArray[0]); // \u83b7\u53d6\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u503c\u4e3a 5 \u89e3\u91ca\uff1a sizeof(myArray) : sizeof \u8fd0\u7b97\u7b26\u8fd4\u56de\u6570\u7ec4 myArray \u5360\u7528\u7684\u603b\u5b57\u8282\u6570\u3002\u4f8b\u5982\uff0c\u5982\u679c myArray \u662f\u4e00\u4e2a\u5305\u542b 5 \u4e2a int \u7c7b\u578b\u5143\u7d20\u7684\u6570\u7ec4\uff0c\u800c\u6bcf\u4e2a int \u5360\u7528 4 \u4e2a\u5b57\u8282\uff0c\u90a3\u4e48 sizeof(myArray) \u7684\u503c\u4e3a 20\uff085 * 4\uff09\u3002 sizeof(myArray[0]) : \u8fd4\u56de\u6570\u7ec4\u4e2d\u5355\u4e2a\u5143\u7d20\u7684\u5b57\u8282\u5927\u5c0f\u3002\u5bf9\u4e8e int \u7c7b\u578b\u7684\u6570\u7ec4\u5143\u7d20\uff0c\u901a\u5e38\u662f 4 \u4e2a\u5b57\u8282\u3002 sizeof(myArray) / sizeof(myArray[0]) : \u901a\u8fc7\u5c06\u6570\u7ec4\u7684\u603b\u5b57\u8282\u6570\u9664\u4ee5\u5355\u4e2a\u5143\u7d20\u7684\u5b57\u8282\u5927\u5c0f\uff0c\u53ef\u4ee5\u5f97\u5230\u6570\u7ec4\u7684\u5143\u7d20\u4e2a\u6570\uff08\u5373\u6570\u7ec4\u7684\u957f\u5ea6\uff09\u3002\u4f8b\u5982\uff0c\u5047\u8bbe myArray \u662f\u4e00\u4e2a\u5305\u542b 5 \u4e2a int \u7c7b\u578b\u5143\u7d20\u7684\u6570\u7ec4\uff0c sizeof(myArray) \u7684\u503c\u4e3a 20\uff0c sizeof(myArray[0]) \u7684\u503c\u4e3a 4\uff0c\u90a3\u4e48 sizeof(myArray) / sizeof(myArray[0]) \u7684\u503c\u4e3a 5\u3002","title":"\u9759\u6001\u5206\u914d\u6570\u7ec4"},{"location":"lesson5/Lesson5%20C%2B%2B/#_3","text":"\u52a8\u6001\u5206\u914d\u6570\u7ec4\u7684\u5927\u5c0f\u5728\u8fd0\u884c\u65f6\u786e\u5b9a\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u901a\u8fc7 new \u8fd0\u7b97\u7b26\u5206\u914d\u5185\u5b58\u3002\u5bf9\u4e8e\u52a8\u6001\u5206\u914d\u7684\u6570\u7ec4\uff0c sizeof \u8fd0\u7b97\u7b26\u65e0\u6cd5\u7528\u4e8e\u8ba1\u7b97\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u56e0\u6b64\u9700\u8981\u5728\u5206\u914d\u5185\u5b58\u65f6\u624b\u52a8\u4fdd\u5b58\u6570\u7ec4\u7684\u957f\u5ea6\u3002 \u793a\u4f8b\u4ee3\u7801\uff1a int* myArray = new int[5]; int length = 5; // \u624b\u52a8\u8bb0\u5f55\u6570\u7ec4\u957f\u5ea6 \u89e3\u91ca\uff1a \u52a8\u6001\u5206\u914d\u6570\u7ec4\u7684\u7279\u70b9 \uff1a\u52a8\u6001\u5206\u914d\u7684\u6570\u7ec4\u65e0\u6cd5\u901a\u8fc7 sizeof \u8fd0\u7b97\u7b26\u83b7\u53d6\u957f\u5ea6\uff0c\u56e0\u4e3a sizeof(myArray) \u53ea\u8fd4\u56de\u6307\u9488\u7684\u5927\u5c0f\uff0c\u800c\u4e0d\u662f\u6570\u7ec4\u7684\u5b9e\u9645\u5927\u5c0f\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u901a\u5e38\u9700\u8981\u5728\u5206\u914d\u5185\u5b58\u65f6\u624b\u52a8\u4fdd\u5b58\u6570\u7ec4\u7684\u957f\u5ea6\u3002","title":"\u52a8\u6001\u5206\u914d\u6570\u7ec4"},{"location":"lesson5/Lesson5%20C%2B%2B/#vs","text":"\u9759\u6001\u5206\u914d\u6570\u7ec4 : \u6570\u7ec4\u7684\u5927\u5c0f\u5728\u7f16\u8bd1\u65f6\u5df2\u7ecf\u786e\u5b9a\uff0c\u6570\u7ec4\u957f\u5ea6\u662f\u56fa\u5b9a\u7684\uff0c\u4e0d\u80fd\u5728\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\u6539\u53d8\u6570\u7ec4\u7684\u5927\u5c0f\u3002\u4f7f\u7528 sizeof \u53ef\u4ee5\u8ba1\u7b97\u6570\u7ec4\u7684\u957f\u5ea6\u3002 \u52a8\u6001\u5206\u914d\u6570\u7ec4 : \u6570\u7ec4\u7684\u5927\u5c0f\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u786e\u5b9a\uff0c\u53ef\u4ee5\u5728\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\u6539\u53d8\u6570\u7ec4\u7684\u5927\u5c0f\u3002 sizeof \u4e0d\u80fd\u7528\u4e8e\u8ba1\u7b97\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u901a\u5e38\u9700\u8981\u624b\u52a8\u8bb0\u5f55\u957f\u5ea6\u3002","title":"\u9759\u6001\u5206\u914d vs \u52a8\u6001\u5206\u914d"},{"location":"lesson5/Lesson5%20C%2B%2B/#14","text":"C++\u652f\u6301\u591a\u7ef4\u6570\u7ec4\uff0c\u5373\u6570\u7ec4\u7684\u5143\u7d20\u53ef\u4ee5\u662f\u6570\u7ec4\u3002\u4f8b\u5982\uff0c\u4e8c\u7ef4\u6570\u7ec4\u7684\u58f0\u660e\u548c\u521d\u59cb\u5316\u5982\u4e0b\u6240\u793a\uff1a int twoDArray[3][4]; // \u58f0\u660e\u4e00\u4e2a3\u884c4\u5217\u7684\u4e8c\u7ef4\u6574\u6570\u6570\u7ec4 int twoDArray[3][3] = { {1, 2, 3}, {4, 5, 6}, {7, 8, 9} }; // \u58f0\u660e\u5e76\u521d\u59cb\u5316\u4e00\u4e2a3\u884c3\u5217\u7684\u4e8c\u7ef4\u6574\u6570\u6570\u7ec4","title":"1.4 \u591a\u7ef4\u6570\u7ec4"},{"location":"lesson5/Lesson5%20C%2B%2B/#15","text":"\u6570\u7ec4\u662f\u56fa\u5b9a\u5927\u5c0f\u7684\uff1a \u5728C++\u4e2d\uff0c\u6570\u7ec4\u7684\u5927\u5c0f\u5728\u58f0\u660e\u65f6\u5c31\u786e\u5b9a\u4e86\uff0c\u4e14\u4e0d\u53ef\u53d8\u3002\u5982\u679c\u9700\u8981\u6539\u53d8\u6570\u7ec4\u7684\u5927\u5c0f\uff0c\u901a\u5e38\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6570\u7ec4\u5e76\u590d\u5236\u5143\u7d20\u3002 \u6570\u7ec4\u53ef\u4ee5\u5728\u6808\u6216\u5806\u4e2d\u5206\u914d\uff1a \u9759\u6001\u6570\u7ec4\u5728\u6808\u4e2d\u5206\u914d\uff0c\u52a8\u6001\u6570\u7ec4\u4f7f\u7528new\u5173\u952e\u5b57\u5728\u5806\u4e2d\u5206\u914d\uff0c\u9700\u624b\u52a8\u91ca\u653e\u5185\u5b58\u3002 \u9ed8\u8ba4\u521d\u59cb\u5316\uff1a \u9759\u6001\u6570\u7ec4\u7684\u5143\u7d20\u5728\u58f0\u660e\u65f6\u672a\u663e\u5f0f\u521d\u59cb\u5316\u65f6\uff0c\u5176\u503c\u662f\u672a\u5b9a\u4e49\u7684\u3002\u52a8\u6001\u6570\u7ec4\u7684\u5143\u7d20\u4e5f\u672a\u5b9a\u4e49\uff0c\u9664\u975e\u663e\u5f0f\u521d\u59cb\u5316\u3002 \u6570\u7ec4\u8d8a\u754c\uff1a \u8bbf\u95ee\u6570\u7ec4\u5143\u7d20\u65f6\uff0c\u5982\u679c\u4f7f\u7528\u4e86\u4e0d\u5b58\u5728\u7684\u7d22\u5f15\uff0c\u4f1a\u5bfc\u81f4\u672a\u5b9a\u4e49\u884c\u4e3a\uff08\u901a\u5e38\u662f\u7a0b\u5e8f\u5d29\u6e83\uff09\uff0c\u800c\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38\u3002","title":"1.5 \u6570\u7ec4\u7684\u7279\u70b9\u548c\u6ce8\u610f\u4e8b\u9879"},{"location":"lesson5/Lesson5%20C%2B%2B/#_4","text":"\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff0c\u5c55\u793a\u4e86\u5982\u4f55\u58f0\u660e\u3001\u521d\u59cb\u5316\u548c\u4f7f\u7528\u4e00\u4e2a\u4e00\u7ef4\u6574\u6570\u6570\u7ec4\uff1a #include <iostream> using namespace std; int main() { // \u58f0\u660e\u5e76\u521d\u59cb\u5316\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 int myArray[] = {10, 20, 30, 40, 50}; // \u8ba1\u7b97\u6570\u7ec4\u5143\u7d20\u7684\u603b\u548c int sum = 0; for (int i = 0; i < sizeof(myArray) / sizeof(myArray[0]); i++) { sum += myArray[i]; } // \u6253\u5370\u6570\u7ec4\u5143\u7d20\u7684\u603b\u548c cout << \"\u6570\u7ec4\u5143\u7d20\u7684\u603b\u548c\u4e3a\uff1a\" << sum << endl; return 0; } \u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c myArray \u6570\u7ec4\u5305\u542b5\u4e2a\u6574\u6570\u5143\u7d20\uff0c\u901a\u8fc7\u5faa\u73af\u8ba1\u7b97\u4e86\u8fd9\u4e9b\u5143\u7d20\u7684\u603b\u548c\uff0c\u5e76\u8f93\u51fa\u5230\u63a7\u5236\u53f0\u3002","title":"\u793a\u4f8b"},{"location":"lesson5/Lesson5%20C%2B%2B/#2-stdvector","text":"","title":"2. \u52a8\u6001\u6570\u7ec4\u548c\u5217\u8868\uff08std::vector\uff09"},{"location":"lesson5/Lesson5%20C%2B%2B/#21","text":"\u5728C++\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528std::vector\u7c7b\u6765\u521b\u5efa\u548c\u521d\u59cb\u5316\u52a8\u6001\u6570\u7ec4\uff1a #include <iostream> #include <vector> using namespace std; int main() { // \u521b\u5efa\u4e00\u4e2avector\u5b9e\u4f8b vector<int> myVector = {10, 20, 30, 40, 50}; // \u6253\u5370vector\u5143\u7d20 for (int i = 0; i < myVector.size(); i++) { cout << \"Element at index \" << i << \": \" << myVector[i] << endl; } // \u6dfb\u52a0\u65b0\u5143\u7d20 myVector.push_back(60); // \u6253\u5370\u6dfb\u52a0\u540e\u7684\u5143\u7d20 cout << \"After adding an element, vector elements: \"; for (int i = 0; i < myVector.size(); i++) { cout << myVector[i] << \" \"; } cout << endl; return 0; }","title":"2.1 \u521b\u5efa\u548c\u521d\u59cb\u5316\u52a8\u6001\u6570\u7ec4"},{"location":"lesson5/Lesson5%20C%2B%2B/#22","text":"","title":"2.2 \u57fa\u672c\u64cd\u4f5c"},{"location":"lesson5/Lesson5%20C%2B%2B/#_5","text":"\u53ef\u4ee5\u4f7f\u7528 push_back() \u65b9\u6cd5\u6dfb\u52a0\u5143\u7d20\u5230 vector \u4e2d\uff0c\u5e76\u4f7f\u7528\u7d22\u5f15\u8bbf\u95ee\u5143\u7d20 vector<int> myVector; myVector.push_back(10); myVector.push_back(20); myVector.push_back(30); int firstElement = myVector[0]; // \u83b7\u53d6\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u503c\u4e3a10","title":"\u6dfb\u52a0\u548c\u8bbf\u95ee\u5143\u7d20"},{"location":"lesson5/Lesson5%20C%2B%2B/#_6","text":"\u4f7f\u7528 erase() \u65b9\u6cd5\u5220\u9664\u6307\u5b9a\u4f4d\u7f6e\u7684\u5143\u7d20\uff0c\u6216\u4f7f\u7528 pop_back() \u5220\u9664\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u3002 myVector.erase(myVector.begin() + 1); // \u5220\u9664\u7d22\u5f15\u4e3a1\u7684\u5143\u7d20\uff0c\u537320\u3002\u5982\u679c\u60f3\u5220\u9664\u7d22\u5f15\u4e3a2\u7684\u5143\u7d20\u5219+2\uff0c \u4ee5\u6b64\u7c7b\u63a8 myVector.pop_back(); // \u5220\u9664\u6700\u540e\u4e00\u4e2a\u5143\u7d20","title":"\u5220\u9664\u5143\u7d20"},{"location":"lesson5/Lesson5%20C%2B%2B/#vector","text":"\u4f7f\u7528 size() \u65b9\u6cd5\u83b7\u53d6 vector \u4e2d\u5143\u7d20\u7684\u4e2a\u6570\u3002 int size = myVector.size(); // \u83b7\u53d6vector\u5927\u5c0f\u3002","title":"\u83b7\u53d6vector\u5927\u5c0f"},{"location":"lesson5/Lesson5%20C%2B%2B/#vector_1","text":"\u53ef\u4ee5\u4f7f\u7528\u8303\u56f4for\u5faa\u73af\u6216\u8fed\u4ee3\u5668\u904d\u5386 vector \u4e2d\u7684\u5143\u7d20\u3002 //\u4f7f\u7528for\u5faa\u73af for (int element : myVector) { cout << element << \" \"; } cout << endl; // \u6216\u8005\u4f7f\u7528\u8fed\u4ee3\u5668 for (auto it = myVector.begin(); it != myVector.end(); ++it) { cout << *it << \" \"; } cout << endl;","title":"\u8fed\u4ee3vector\u5143\u7d20"},{"location":"lesson5/Lesson5%20C%2B%2B/#23","text":"\u52a8\u6001\u8c03\u6574\u5927\u5c0f\uff1a std::vector \u53ef\u4ee5\u6839\u636e\u9700\u8981\u81ea\u52a8\u8c03\u6574\u5176\u5927\u5c0f\uff0c\u4e0d\u9700\u8981\u624b\u52a8\u7ba1\u7406\u5185\u5b58\u3002 \u6027\u80fd\uff1a std::vector \u5728\u968f\u673a\u8bbf\u95ee\u548c\u5c3e\u90e8\u63d2\u5165/\u5220\u9664\u64cd\u4f5c\u4e0a\u5177\u6709\u9ad8\u6548\u7684\u6027\u80fd\uff0c\u4f46\u5728\u4e2d\u95f4\u63d2\u5165/\u5220\u9664\u64cd\u4f5c\u4e0a\u76f8\u5bf9\u8f83\u6162\u3002 \u7ebf\u7a0b\u5b89\u5168\u6027\uff1a std::vector \u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u5982\u679c\u9700\u8981\u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e2d\u4f7f\u7528 vector \uff0c\u9700\u8981\u624b\u52a8\u5b9e\u73b0\u540c\u6b65\u3002","title":"2.3 \u7279\u6027\u548c\u6ce8\u610f\u4e8b\u9879"},{"location":"lesson5/Lesson5%20C%2B%2B/#_7","text":"\u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f7f\u7528 std::vector \u7684\u7b80\u5355\u793a\u4f8b\uff1a #include <iostream> #include <vector> using namespace std; int main() { // \u521b\u5efa\u4e00\u4e2avector\u5b9e\u4f8b vector<int> myVector = {10, 20, 30, 40, 50}; // \u6253\u5370vector\u5143\u7d20 cout << \"Vector elements: \"; for (int element : myVector) { cout << element << \" \"; } cout << endl; // \u6dfb\u52a0\u65b0\u5143\u7d20 myVector.push_back(60); // \u6253\u5370\u6dfb\u52a0\u540e\u7684\u5143\u7d20 cout << \"After adding an element, vector elements: \"; for (int element : myVector) { cout << element << \" \"; } cout << endl; return 0; } \u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 std::vector\u521b\u5efa \u3001\u6dfb\u52a0\u548c\u8bbf\u95ee\u5143\u7d20\uff0c\u4ee5\u53ca\u6253\u5370 vector \u7684\u5185\u5bb9\u3002","title":"\u793a\u4f8b"},{"location":"lesson5/Lesson5%20C%2B%2B/#3","text":"","title":"3. \u521d\u7ea7\u641c\u7d22"},{"location":"lesson5/Lesson5%20C%2B%2B/#31-linear-search","text":"\u7ebf\u6027\u641c\u7d22\u662f\u6700\u7b80\u5355\u7684\u6570\u7ec4\u641c\u7d22\u65b9\u6cd5\uff0c\u5b83\u4ece\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\u9010\u4e2a\u68c0\u67e5\uff0c\u76f4\u5230\u627e\u5230\u76ee\u6807\u5143\u7d20\u6216\u904d\u5386\u5b8c\u6574\u4e2a\u6570\u7ec4\u3002 #include <iostream> using namespace std; int linearSearch(int arr[], int size, int target) { for (int i = 0; i < size; i++) { if (arr[i] == target) { return i; // \u8fd4\u56de\u76ee\u6807\u5143\u7d20\u7684\u7d22\u5f15 } } return -1; // \u6ca1\u6709\u627e\u5230\u76ee\u6807\u5143\u7d20 } int main() { int numbers[] = {5, 8, 2, 10, 3}; int target = 10; int size = sizeof(numbers) / sizeof(numbers[0]); int index = linearSearch(numbers, size, target); if (index != -1) { cout << \"\u5143\u7d20 \" << target << \" \u5728\u6570\u7ec4\u4e2d\u7684\u7d22\u5f15\u4e3a\uff1a\" << index << endl; } else { cout << \"\u5143\u7d20 \" << target << \" \u4e0d\u5728\u6570\u7ec4\u4e2d\u3002\" << endl; } return 0; } \u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c linearSearch \u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u6574\u578b\u6570\u7ec4\u3001\u6570\u7ec4\u5927\u5c0f\u548c\u76ee\u6807\u6574\u6570\u4f5c\u4e3a\u53c2\u6570\uff0c\u7136\u540e\u4f7f\u7528for\u5faa\u73af\u9010\u4e2a\u68c0\u67e5\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\uff0c\u76f4\u5230\u627e\u5230\u76ee\u6807\u5143\u7d20\u6216\u8005\u904d\u5386\u5b8c\u6574\u4e2a\u6570\u7ec4\u3002","title":"3.1 \u6570\u7ec4\u7684\u7ebf\u6027\u641c\u7d22\uff08Linear Search\uff09"},{"location":"lesson5/Lesson5%20C%2B%2B/#32-stdvector","text":"std::vector \u7684\u7ebf\u6027\u641c\u7d22\u4e0e\u6570\u7ec4\u7c7b\u4f3c\uff0c\u53ef\u4ee5\u4f7f\u7528\u8303\u56f4for\u5faa\u73af\u6216\u8fed\u4ee3\u5668\u904d\u5386 vector \u4e2d\u7684\u5143\u7d20\uff0c\u67e5\u627e\u76ee\u6807\u5143\u7d20\u3002 #include <iostream> #include <vector> using namespace std; int linearSearch(vector<string> vec, string target) { for (int i = 0; i < vec.size(); i++) { if (vec[i] == target) { return i; // \u8fd4\u56de\u76ee\u6807\u5143\u7d20\u7684\u7d22\u5f15 } } return -1; // \u6ca1\u6709\u627e\u5230\u76ee\u6807\u5143\u7d20 } int main() { vector<string> fruits = {\"Apple\", \"Banana\", \"Cherry\"}; string target = \"Banana\"; int index = linearSearch(fruits, target); if (index != -1) { cout << \"\u5143\u7d20 \" << target << \" \u5728vector\u4e2d\u7684\u7d22\u5f15\u4e3a\uff1a\" << index << endl; } else { cout << \"\u5143\u7d20 \" << target << \" \u4e0d\u5728vector\u4e2d\u3002\" << endl; } return 0; } \u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c linearSearch \u51fd\u6570\u63a5\u53d7\u4e00\u4e2a vector \u548c\u76ee\u6807\u5143\u7d20\u4f5c\u4e3a\u53c2\u6570\uff0c\u7136\u540e\u4f7f\u7528for\u5faa\u73af\u904d\u5386 vector \u4e2d\u7684\u5143\u7d20\uff0c\u67e5\u627e\u76ee\u6807\u5143\u7d20\u662f\u5426\u5b58\u5728\u3002","title":"3.2 std::vector\u7684\u7ebf\u6027\u641c\u7d22"},{"location":"lesson5/Lesson5%20C%2B%2B/#_8","text":"\u6570\u7ec4\uff08Array\uff09\uff1a \u4f7f\u7528\u56fa\u5b9a\u5927\u5c0f\u7684\u8fde\u7eed\u5b58\u50a8\u7a7a\u95f4\u6765\u5b58\u50a8\u5143\u7d20\uff0c\u901a\u8fc7\u7d22\u5f15\u8bbf\u95ee\u5143\u7d20\u3002\u521d\u7ea7\u641c\u7d22\u901a\u5e38\u91c7\u7528\u7ebf\u6027\u641c\u7d22\u65b9\u6cd5\u3002 std::vector\uff1a \u662f\u4e00\u79cd\u52a8\u6001\u6570\u7ec4\uff0c\u5b9e\u73b0\u4e86\u66f4\u7075\u6d3b\u7684\u64cd\u4f5c\u548c\u641c\u7d22\u65b9\u6cd5\u3002\u521d\u7ea7\u641c\u7d22\u4e5f\u53ef\u4ee5\u91c7\u7528\u7ebf\u6027\u641c\u7d22\u65b9\u6cd5\u3002 \u6027\u80fd\u6bd4\u8f83\uff1a std::vector \u5728\u968f\u673a\u8bbf\u95ee\u548c\u5c3e\u90e8\u63d2\u5165/\u5220\u9664\u64cd\u4f5c\u4e0a\u5177\u6709\u9ad8\u6548\u7684\u6027\u80fd\uff0c\u4f46\u5728\u4e2d\u95f4\u63d2\u5165/\u5220\u9664\u64cd\u4f5c\u4e0a\u76f8\u5bf9\u8f83\u6162\u3002 \u6ce8\u610f\u4e8b\u9879\uff1a std::vector \u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u9700\u8981\u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e2d\u624b\u52a8\u5b9e\u73b0\u540c\u6b65\u3002 \u8fd9\u4e9b\u793a\u4f8b\u548c\u8bf4\u660e\u63d0\u4f9b\u4e86\u5728C++\u4e2d\u4f7f\u7528\u6570\u7ec4\u548cstd::vector\u8fdb\u884c\u57fa\u672c\u64cd\u4f5c\u548c\u7ebf\u6027\u641c\u7d22\u7684\u57fa\u7840\u77e5\u8bc6\u3002","title":"\u603b\u7ed3"},{"location":"lesson5/Lesson5%20C%2B%2B/#4","text":"","title":"4. \u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson5/Lesson5%20C%2B%2B/#41","text":"","title":"4.1 \u5b66\u751f\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf"},{"location":"lesson5/Lesson5%20C%2B%2B/#_9","text":"\u8bbe\u8ba1\u5e76\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684\u5b66\u751f\u6210\u7ee9\u7ba1\u7406\u7cfb\u7edf\u3002\u7cfb\u7edf\u8981\u6c42\u80fd\u591f\u5b58\u50a8\u591a\u4e2a\u5b66\u751f\u7684\u59d3\u540d\u548c\u5bf9\u5e94\u7684\u6210\u7ee9\uff0c\u5e76\u63d0\u4f9b\u4ee5\u4e0b\u529f\u80fd\uff1a 1. \u6dfb\u52a0\u5b66\u751f\u53ca\u5176\u6210\u7ee9\u3002 2. \u8ba1\u7b97\u5e76\u8f93\u51fa\u6240\u6709\u5b66\u751f\u7684\u5e73\u5747\u6210\u7ee9\u3002 3. \u67e5\u627e\u5e76\u8f93\u51fa\u67d0\u4e2a\u5b66\u751f\u7684\u6210\u7ee9\u3002 4. \u8f93\u51fa\u6210\u7ee9\u6700\u9ad8\u7684\u5b66\u751f\u53ca\u5176\u6210\u7ee9\u3002","title":"\u63cf\u8ff0\uff1a"},{"location":"lesson5/Lesson5%20C%2B%2B/#_10","text":"#include <iostream> #include <vector> #include <string> using namespace std; // \u6dfb\u52a0\u5b66\u751f\u4fe1\u606f\u5230students\u548cgrades\u5217\u8868\u4e2d void addStudent(vector<string>& students, vector<int>& grades, const string& name, int grade) { // \u586b\u5199\u4ee3\u7801 } // \u8ba1\u7b97\u6240\u6709\u5b66\u751f\u7684\u5e73\u5747\u6210\u7ee9 double calculateAverage(const vector<int>& grades) { // \u586b\u5199\u4ee3\u7801 } // \u67e5\u627e\u6307\u5b9a\u5b66\u751f\u7684\u6210\u7ee9 int findGrade(const vector<string>& students, const vector<int>& grades, const string& name) { // \u586b\u5199\u4ee3\u7801 } // \u627e\u51fa\u6210\u7ee9\u6700\u9ad8\u7684\u5b66\u751f\u53ca\u5176\u6210\u7ee9 void findTopStudent(const vector<string>& students, const vector<int>& grades, string& topStudent, int& topGrade) { // \u586b\u5199\u4ee3\u7801 } int main() { vector<string> students; vector<int> grades; // \u6dfb\u52a0\u5b66\u751f\u4fe1\u606f addStudent(students, grades, \"Alice\", 85); addStudent(students, grades, \"Bob\", 90); addStudent(students, grades, \"Charlie\", 78); addStudent(students, grades, \"David\", 92); // \u8f93\u51fa\u6240\u6709\u5b66\u751f\u7684\u5e73\u5747\u6210\u7ee9 double average = calculateAverage(grades); cout << \"\u6240\u6709\u5b66\u751f\u7684\u5e73\u5747\u6210\u7ee9\u4e3a\uff1a\" << average << endl; // \u67e5\u627e\u67d0\u4e2a\u5b66\u751f\u7684\u6210\u7ee9 string targetName = \"Bob\"; int grade = findGrade(students, grades, targetName); if (grade != -1) { cout << targetName << \" \u7684\u6210\u7ee9\u4e3a\uff1a\" << grade << endl; } else { cout << targetName << \" \u4e0d\u5b58\u5728\u3002\" << endl; } // \u627e\u51fa\u6210\u7ee9\u6700\u9ad8\u7684\u5b66\u751f string topStudent; int topGrade; findTopStudent(students, grades, topStudent, topGrade); cout << \"\u6210\u7ee9\u6700\u9ad8\u7684\u5b66\u751f\u662f \" << topStudent << \"\uff0c\u6210\u7ee9\u4e3a\uff1a\" << topGrade << endl; return 0; }","title":"\u6a21\u677f"},{"location":"lesson5/Lesson5%20C%2B%2B/#_11","text":"#include <iostream> #include <vector> #include <string> using namespace std; // \u6dfb\u52a0\u5b66\u751f\u4fe1\u606f\u5230students\u548cgrades\u5217\u8868\u4e2d void addStudent(vector<string>& students, vector<int>& grades, const string& name, int grade) { students.push_back(name); grades.push_back(grade); } // \u8ba1\u7b97\u6240\u6709\u5b66\u751f\u7684\u5e73\u5747\u6210\u7ee9 double calculateAverage(const vector<int>& grades) { int total = 0; for (int i = 0; i < grades.size(); i++) { total += grades[i]; } return static_cast<double>(total) / grades.size(); } // \u67e5\u627e\u6307\u5b9a\u5b66\u751f\u7684\u6210\u7ee9 int findGrade(const vector<string>& students, const vector<int>& grades, const string& name) { for (int i = 0; i < students.size(); i++) { if (students[i] == name) { return grades[i]; } } return -1; // \u5982\u679c\u6ca1\u6709\u627e\u5230\uff0c\u8fd4\u56de-1 } // \u627e\u51fa\u6210\u7ee9\u6700\u9ad8\u7684\u5b66\u751f\u53ca\u5176\u6210\u7ee9 void findTopStudent(const vector<string>& students, const vector<int>& grades, string& topStudent, int& topGrade) { topGrade = grades[0]; topStudent = students[0]; for (int i = 1; i < grades.size(); i++) { if (grades[i] > topGrade) { topGrade = grades[i]; topStudent = students[i]; } } } int main() { vector<string> students; vector<int> grades; // \u6dfb\u52a0\u5b66\u751f\u4fe1\u606f addStudent(students, grades, \"Alice\", 85); addStudent(students, grades, \"Bob\", 90); addStudent(students, grades, \"Charlie\", 78); addStudent(students, grades, \"David\", 92); // \u8f93\u51fa\u6240\u6709\u5b66\u751f\u7684\u5e73\u5747\u6210\u7ee9 double average = calculateAverage(grades); cout << \"\u6240\u6709\u5b66\u751f\u7684\u5e73\u5747\u6210\u7ee9\u4e3a\uff1a\" << average << endl; // \u67e5\u627e\u67d0\u4e2a\u5b66\u751f\u7684\u6210\u7ee9 string targetName = \"Bob\"; int grade = findGrade(students, grades, targetName); if (grade != -1) { cout << targetName << \" \u7684\u6210\u7ee9\u4e3a\uff1a\" << grade << endl; } else { cout << targetName << \" \u4e0d\u5b58\u5728\u3002\" << endl; } // \u627e\u51fa\u6210\u7ee9\u6700\u9ad8\u7684\u5b66\u751f string topStudent; int topGrade; findTopStudent(students, grades, topStudent, topGrade); cout << \"\u6210\u7ee9\u6700\u9ad8\u7684\u5b66\u751f\u662f \" << topStudent << \"\uff0c\u6210\u7ee9\u4e3a\uff1a\" << topGrade << endl; return 0; }","title":"\u53c2\u8003\u7b54\u6848"},{"location":"lesson5/Lesson5%20C%2B%2B/#_12","text":"addStudent : \u901a\u8fc7 push_back \u65b9\u6cd5\u5c06\u5b66\u751f\u59d3\u540d\u548c\u6210\u7ee9\u6dfb\u52a0\u5230 students \u548c grades \u4e24\u4e2a vector \u4e2d\u3002 calculateAverage : \u901a\u8fc7\u904d\u5386 grades \uff0c\u8ba1\u7b97\u6240\u6709\u5b66\u751f\u7684\u6210\u7ee9\u603b\u548c\u5e76\u8fd4\u56de\u5e73\u5747\u503c\u3002 findGrade : \u901a\u8fc7\u904d\u5386 students \uff0c\u67e5\u627e\u6307\u5b9a\u5b66\u751f\u7684\u59d3\u540d\u5e76\u8fd4\u56de\u5bf9\u5e94\u7684\u6210\u7ee9\u3002\u5982\u679c\u627e\u4e0d\u5230\uff0c\u8fd4\u56de -1 \u3002 findTopStudent : \u901a\u8fc7\u904d\u5386 grades \uff0c\u627e\u51fa\u6700\u9ad8\u6210\u7ee9\u7684\u5b66\u751f\u59d3\u540d\u548c\u6210\u7ee9\u3002","title":"\u8bf4\u660e"},{"location":"lesson5/Lesson5%20Java/","text":"Lesson5 \u6570\u7ec4/\u5217\u8868\u4e0e\u521d\u7ea7\u641c\u7d22 \u76ee\u5f55 \u6570\u7ec4\uff08Array\uff09 1.1 \u58f0\u660e\u548c\u521d\u59cb\u5316\u6570\u7ec4 1.2 \u8bbf\u95ee\u6570\u7ec4\u5143\u7d20 1.3 \u6570\u7ec4\u7684\u957f\u5ea6 1.4 \u591a\u7ef4\u6570\u7ec4 1.5 \u6570\u7ec4\u7684\u7279\u70b9\u548c\u6ce8\u610f\u4e8b\u9879 \u793a\u4f8b \u5217\u8868\uff08ArrayList\uff09 2.1 \u521b\u5efa\u548c\u521d\u59cb\u5316\u5217\u8868 2.2 \u57fa\u672c\u64cd\u4f5c 2.3 \u7279\u6027\u548c\u6ce8\u610f\u4e8b\u9879 \u793a\u4f8b \u521d\u7ea7\u641c\u7d22 3.1 \u6570\u7ec4\u7684\u7ebf\u6027\u641c\u7d22\uff08Linear Search\uff09 3.2 \u5217\u8868\uff08List\uff09\u7684\u521d\u7ea7\u641c\u7d22 \u8bfe\u540e\u7ec3\u4e60 ArrayList \u7ebf\u6027\u641c\u7d22 1. \u6570\u7ec4\uff08Array\uff09 \u5728Java\u4e2d\uff0c\u6570\u7ec4\u662f\u4e00\u79cd\u7528\u6765\u5b58\u50a8\u56fa\u5b9a\u5927\u5c0f\u7684\u540c\u7c7b\u578b\u5143\u7d20\u7684\u6570\u636e\u7ed3\u6784\u3002\u5b83\u662f\u4e00\u4e2a\u8fde\u7eed\u7684\u5185\u5b58\u533a\u57df\uff0c\u53ef\u4ee5\u5b58\u50a8\u591a\u4e2a\u76f8\u540c\u6570\u636e\u7c7b\u578b\u7684\u5143\u7d20\uff0c\u5e76\u901a\u8fc7\u7d22\u5f15\u6765\u8bbf\u95ee\u8fd9\u4e9b\u5143\u7d20\u3002\u4ee5\u4e0b\u662f\u5173\u4e8eJava\u6570\u7ec4\u7684\u8be6\u7ec6\u4ecb\u7ecd\uff1a 1.1 \u58f0\u660e\u548c\u521d\u59cb\u5316\u6570\u7ec4 \u5728Java\u4e2d\uff0c\u6570\u7ec4\u7684\u58f0\u660e\u548c\u521d\u59cb\u5316\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u51e0\u79cd\u65b9\u5f0f\uff1a \u58f0\u660e\u6570\u7ec4\u53d8\u91cf\uff1a \u58f0\u660e\u6570\u7ec4\u9700\u8981\u6307\u5b9a\u6570\u7ec4\u7684\u7c7b\u578b\u548c\u53d8\u91cf\u540d\uff0c\u4f46\u4e0d\u5206\u914d\u5185\u5b58\u7a7a\u95f4\u3002 java int[] myArray; \u521b\u5efa\u6570\u7ec4\u5e76\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff1a \u4f7f\u7528 new \u5173\u952e\u5b57\u521b\u5efa\u6570\u7ec4\u5e76\u6307\u5b9a\u6570\u7ec4\u7684\u5927\u5c0f\uff08\u5373\u5143\u7d20\u4e2a\u6570\uff09\u3002 java myArray = new int[5]; // \u521b\u5efa\u4e86\u4e00\u4e2a\u5305\u542b5\u4e2a\u6574\u6570\u5143\u7d20\u7684\u6570\u7ec4 \u540c\u65f6\u58f0\u660e\u548c\u521d\u59cb\u5316\uff1a \u4e5f\u53ef\u4ee5\u5728\u58f0\u660e\u6570\u7ec4\u53d8\u91cf\u65f6\u76f4\u63a5\u521d\u59cb\u5316\u6570\u7ec4\u3002 java int[] myArray = new int[5]; // \u58f0\u660e\u5e76\u521d\u59cb\u5316\u4e00\u4e2a\u5305\u542b5\u4e2a\u6574\u6570\u5143\u7d20\u7684\u6570\u7ec4 \u4f7f\u7528\u6570\u7ec4\u521d\u59cb\u5316\u5217\u8868\uff08Array Initializer\uff09\uff1a \u5728\u58f0\u660e\u6570\u7ec4\u65f6\u76f4\u63a5\u6307\u5b9a\u521d\u59cb\u5143\u7d20\u7684\u503c\uff0cJava\u4f1a\u6839\u636e\u63d0\u4f9b\u7684\u5143\u7d20\u4e2a\u6570\u81ea\u52a8\u786e\u5b9a\u6570\u7ec4\u5927\u5c0f\u3002 java int[] myArray = {1, 2, 3, 4, 5}; // \u58f0\u660e\u5e76\u521d\u59cb\u5316\u5305\u542b5\u4e2a\u6574\u6570\u5143\u7d20\u7684\u6570\u7ec4 1.2 \u8bbf\u95ee\u6570\u7ec4\u5143\u7d20 Java\u6570\u7ec4\u7684\u5143\u7d20\u901a\u8fc7\u7d22\u5f15\u8bbf\u95ee\uff0c\u7d22\u5f15\u4ece0\u5f00\u59cb\u5230\u6570\u7ec4\u957f\u5ea6\u51cf1\u3002 int[] myArray = {10, 20, 30, 40, 50}; int firstElement = myArray[0]; // \u8bbf\u95ee\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u503c\u4e3a10 int thirdElement = myArray[2]; // \u8bbf\u95ee\u7b2c\u4e09\u4e2a\u5143\u7d20\uff0c\u503c\u4e3a30 1.3 \u6570\u7ec4\u7684\u957f\u5ea6 \u53ef\u4ee5\u4f7f\u7528\u6570\u7ec4\u7684 length \u5c5e\u6027\u83b7\u53d6\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u5373\u6570\u7ec4\u4e2d\u5143\u7d20\u7684\u4e2a\u6570\u3002 int[] myArray = {10, 20, 30, 40, 50}; int length = myArray.length; // \u83b7\u53d6\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u503c\u4e3a5 1.4 \u591a\u7ef4\u6570\u7ec4 Java\u652f\u6301\u591a\u7ef4\u6570\u7ec4\uff0c\u5373\u6570\u7ec4\u7684\u5143\u7d20\u53ef\u4ee5\u662f\u6570\u7ec4\u3002\u4f8b\u5982\uff0c\u4e8c\u7ef4\u6570\u7ec4\u7684\u58f0\u660e\u548c\u521d\u59cb\u5316\u5982\u4e0b\u6240\u793a\uff1a int[][] twoDArray = new int[3][4]; // \u58f0\u660e\u4e00\u4e2a3\u884c4\u5217\u7684\u4e8c\u7ef4\u6574\u6570\u6570\u7ec4 int[][] twoDArray = { {1, 2, 3}, {4, 5, 6}, {7, 8, 9} }; // \u58f0\u660e\u5e76\u521d\u59cb\u5316\u4e00\u4e2a3\u884c3\u5217\u7684\u4e8c\u7ef4\u6574\u6570\u6570\u7ec4 1.5 \u6570\u7ec4\u7684\u7279\u70b9\u548c\u6ce8\u610f\u4e8b\u9879 \u6570\u7ec4\u662f\u5f15\u7528\u7c7b\u578b\uff1a \u5728Java\u4e2d\uff0c\u6570\u7ec4\u662f\u5bf9\u8c61\uff0c\u5b83\u4eec\u5b58\u50a8\u5728\u5806\u5185\u5b58\u4e2d\u3002\u56e0\u6b64\uff0c\u6570\u7ec4\u53d8\u91cf\u5b9e\u9645\u4e0a\u662f\u5f15\u7528\uff0c\u5b58\u50a8\u7684\u662f\u6570\u7ec4\u5bf9\u8c61\u7684\u5730\u5740\u3002 \u957f\u5ea6\u4e0d\u53ef\u53d8\uff1a \u4e00\u65e6\u521b\u5efa\u4e86\u6570\u7ec4\uff0c\u5176\u957f\u5ea6\u5c31\u4e0d\u53ef\u53d8\u3002\u5982\u679c\u9700\u8981\u6539\u53d8\u6570\u7ec4\u7684\u5927\u5c0f\uff0c\u901a\u5e38\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6570\u7ec4\u3002 \u9ed8\u8ba4\u521d\u59cb\u5316\uff1a \u6570\u7ec4\u5143\u7d20\u5728\u521b\u5efa\u65f6\u4f1a\u6839\u636e\u5176\u7c7b\u578b\u8fdb\u884c\u9ed8\u8ba4\u521d\u59cb\u5316\u3002\u4f8b\u5982\uff0c\u6574\u6570\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u9ed8\u8ba4\u503c\u4e3a0\uff0c\u5bf9\u8c61\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u9ed8\u8ba4\u503c\u4e3anull\u3002 \u6570\u7ec4\u8d8a\u754c\u5f02\u5e38\uff08ArrayIndexOutOfBoundsException\uff09\uff1a \u8bbf\u95ee\u6570\u7ec4\u5143\u7d20\u65f6\uff0c\u5982\u679c\u4f7f\u7528\u4e86\u4e0d\u5b58\u5728\u7684\u7d22\u5f15\uff0c\u4f1a\u629b\u51fa\u6570\u7ec4\u8d8a\u754c\u5f02\u5e38\u3002 \u793a\u4f8b \u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff0c\u5c55\u793a\u4e86\u5982\u4f55\u58f0\u660e\u3001\u521d\u59cb\u5316\u548c\u4f7f\u7528\u4e00\u4e2a\u4e00\u7ef4\u6574\u6570\u6570\u7ec4\uff1a public class ArrayExample { public static void main(String[] args) { // \u58f0\u660e\u5e76\u521d\u59cb\u5316\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 int[] myArray = {10, 20, 30, 40, 50}; // \u8ba1\u7b97\u6570\u7ec4\u5143\u7d20\u7684\u603b\u548c int sum = 0; for (int i = 0; i < myArray.length; i++) { sum += myArray[i]; } // \u6253\u5370\u6570\u7ec4\u5143\u7d20\u7684\u603b\u548c System.out.println(\"\u6570\u7ec4\u5143\u7d20\u7684\u603b\u548c\u4e3a\uff1a\" + sum); } } \u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c myArray \u6570\u7ec4\u5305\u542b5\u4e2a\u6574\u6570\u5143\u7d20\uff0c\u901a\u8fc7\u5faa\u73af\u8ba1\u7b97\u4e86\u8fd9\u4e9b\u5143\u7d20\u7684\u603b\u548c\uff0c\u5e76\u8f93\u51fa\u5230\u63a7\u5236\u53f0\u3002 2. \u5217\u8868\uff08ArrayList\uff09 2.1 \u521b\u5efa\u548c\u521d\u59cb\u5316\u5217\u8868 \u5728Java\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 ArrayList \u7c7b\u6765\u521b\u5efa\u548c\u521d\u59cb\u5316\u5217\u8868\uff1a \u4f7f\u7528 ArrayList \u521b\u5efa\u5217\u8868 import java.util.ArrayList; public class ArrayListExample { public static void main(String[] args) { // \u521b\u5efa\u4e00\u4e2aArrayList\u5b9e\u4f8b ArrayList<String> arrayList = new ArrayList<>(); // \u6dfb\u52a0\u5143\u7d20\u5230\u5217\u8868 arrayList.add(\"Apple\"); arrayList.add(\"Banana\"); arrayList.add(\"Cherry\"); // \u6253\u5370\u5217\u8868\u5143\u7d20 System.out.println(\"ArrayList elements: \" + arrayList); } } 2.2 \u57fa\u672c\u64cd\u4f5c \u6dfb\u52a0\u548c\u8bbf\u95ee\u5143\u7d20 \u53ef\u4ee5\u4f7f\u7528 add() \u65b9\u6cd5\u6dfb\u52a0\u5143\u7d20\u5230\u5217\u8868\u4e2d\uff0c\u5e76\u4f7f\u7528\u7d22\u5f15\u8bbf\u95ee\u5143\u7d20\u3002 import java.util.ArrayList; public class Main { public static void main(String[] args) { // \u521b\u5efa\u4e00\u4e2a ArrayList \u5e76\u6dfb\u52a0\u5143\u7d20 ArrayList<String> fruits = new ArrayList<>(); fruits.add(\"Apple\"); fruits.add(\"Banana\"); fruits.add(\"Cherry\"); // \u83b7\u53d6\u7b2c\u4e00\u4e2a\u5143\u7d20 String firstFruit = fruits.get(0); // \u83b7\u53d6\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u503c\u4e3a\"Apple\" // \u8f93\u51fa\u7b2c\u4e00\u4e2a\u5143\u7d20 System.out.println(\"The first fruit is: \" + firstFruit); } } \u5220\u9664\u5143\u7d20 \u4f7f\u7528 remove() \u65b9\u6cd5\u5220\u9664\u6307\u5b9a\u4f4d\u7f6e\u6216\u6307\u5b9a\u5143\u7d20\u3002 import java.util.ArrayList; public class Main { public static void main(String[] args) { // \u521b\u5efa\u4e00\u4e2a ArrayList \u5e76\u6dfb\u52a0\u5143\u7d20 ArrayList<String> fruits = new ArrayList<>(); fruits.add(\"Apple\"); fruits.add(\"Banana\"); fruits.add(\"Cherry\"); // \u5220\u9664\u7d22\u5f15\u4e3a1\u7684\u5143\u7d20\uff0c\u5373\"Banana\" fruits.remove(1); // \u6253\u5370\u5220\u9664\u540e\u7684\u5217\u8868 System.out.println(\"Fruits list after removal: \" + fruits); } } \u83b7\u53d6\u5217\u8868\u5927\u5c0f \u4f7f\u7528 size() \u65b9\u6cd5\u83b7\u53d6\u5217\u8868\u4e2d\u5143\u7d20\u7684\u4e2a\u6570\u3002 import java.util.ArrayList; public class Main { public static void main(String[] args) { // \u521b\u5efa\u4e00\u4e2a ArrayList \u5e76\u6dfb\u52a0\u5143\u7d20 ArrayList<String> fruits = new ArrayList<>(); fruits.add(\"Apple\"); fruits.add(\"Banana\"); fruits.add(\"Cherry\"); // \u83b7\u53d6\u5217\u8868\u5927\u5c0f int size = fruits.size(); // \u83b7\u53d6\u5f53\u524d\u5217\u8868\u7684\u5927\u5c0f\uff0c\u503c\u4e3a3 // \u5220\u9664\u7d22\u5f15\u4e3a1\u7684\u5143\u7d20\uff0c\u5373\"Banana\" fruits.remove(1); // \u83b7\u53d6\u5217\u8868\u5927\u5c0f int size = fruits.size(); // \u83b7\u53d6\u5f53\u524d\u5217\u8868\u7684\u5927\u5c0f\uff0c\u503c\u4e3a2 System.out.println(\"The size of the fruits list is: \" + size); // \u6253\u5370\u5220\u9664\u540e\u7684\u5217\u8868 System.out.println(\"Fruits list after removal: \" + fruits); } } \u8fed\u4ee3\u5217\u8868\u5143\u7d20 \u53ef\u4ee5\u4f7f\u7528\u589e\u5f3a for \u5faa\u73af\u6216\u8fed\u4ee3\u5668\u904d\u5386 ArrayList \u4e2d\u7684\u5143\u7d20\u3002 \u589e\u5f3a for \u5faa\u73af import java.util.ArrayList; public class Main { public static void main(String[] args) { // \u521b\u5efa\u4e00\u4e2a ArrayList \u5e76\u6dfb\u52a0\u5143\u7d20 ArrayList<String> fruits = new ArrayList<>(); fruits.add(\"Apple\"); fruits.add(\"Banana\"); fruits.add(\"Cherry\"); // \u4f7f\u7528\u589e\u5f3a\u7684 for \u5faa\u73af\u904d\u5386\u5e76\u6253\u5370\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20 System.out.println(\"Fruits in the list:\"); for (String fruit : fruits) { System.out.println(fruit); } } } \u8fed\u4ee3\u5668 \u8fed\u4ee3\u5668\uff08Iterator\uff09\u662f Java \u96c6\u5408\u6846\u67b6\u4e2d\u4e00\u4e2a\u91cd\u8981\u7684\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5141\u8bb8\u7a0b\u5e8f\u5458\u5728\u4e0d\u66b4\u9732\u96c6\u5408\u5185\u90e8\u7ed3\u6784\u7684\u60c5\u51b5\u4e0b\uff0c\u9010\u4e2a\u8bbf\u95ee\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u79cd\u7edf\u4e00\u7684\u65b9\u5f0f\u6765\u904d\u5386\u96c6\u5408\uff0c\u5305\u62ec List \u3001 Set \u548c Map \u7b49\u3002 \u4e3b\u8981\u7684\u65b9\u6cd5\u5305\u62ec\uff1a - boolean hasNext() : \u5982\u679c\u8fed\u4ee3\u5668\u6709\u66f4\u591a\u5143\u7d20\u53ef\u4f9b\u904d\u5386\uff0c\u5219\u8fd4\u56de true \u3002 - E next() : \u8fd4\u56de\u8fed\u4ee3\u5668\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\u3002 \u4f7f\u7528\u8fed\u4ee3\u5668\u7684\u793a\u4f8b \u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528\u8fed\u4ee3\u5668\u904d\u5386 ArrayList \u7684\u793a\u4f8b\uff1a import java.util.ArrayList; import java.util.Iterator; public class IteratorExample { public static void main(String[] args) { // \u521b\u5efa\u4e00\u4e2a ArrayList \u5e76\u6dfb\u52a0\u5143\u7d20 ArrayList<String> fruits = new ArrayList<>(); fruits.add(\"Apple\"); fruits.add(\"Banana\"); fruits.add(\"Cherry\"); // \u521b\u5efa\u8fed\u4ee3\u5668 Iterator<String> iterator = fruits.iterator(); // \u4f7f\u7528\u8fed\u4ee3\u5668\u904d\u5386\u96c6\u5408 while (iterator.hasNext()) { String fruit = iterator.next(); System.out.println(fruit); } } } \u4ee3\u7801\u89e3\u6790 while (iterator.hasNext()) : \u8fd9\u662f\u4e00\u4e2a\u5faa\u73af\u6761\u4ef6\uff0c\u4f7f\u7528 iterator.hasNext() \u65b9\u6cd5\u68c0\u67e5\u8fed\u4ee3\u5668\u662f\u5426\u8fd8\u6709\u66f4\u591a\u7684\u5143\u7d20\u53ef\u4ee5\u904d\u5386\u3002 hasNext() \u8fd4\u56de true \u65f6\uff0c\u8868\u793a\u8fd8\u6709\u4e0b\u4e00\u4e2a\u5143\u7d20\u53ef\u4ee5\u8bbf\u95ee\uff1b\u5982\u679c\u6ca1\u6709\u66f4\u591a\u5143\u7d20\uff0c\u8fd4\u56de false \uff0c\u5faa\u73af\u7ed3\u675f\u3002 String fruit = iterator.next(); : \u5f53 hasNext() \u8fd4\u56de true \u65f6\uff0c iterator.next() \u88ab\u8c03\u7528\u4ee5\u83b7\u53d6\u4e0b\u4e00\u4e2a\u5143\u7d20\u3002 next() \u65b9\u6cd5\u8fd4\u56de\u5f53\u524d\u5143\u7d20\uff0c\u5e76\u5c06\u8fed\u4ee3\u5668\u7684\u6e38\u6807\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u5143\u7d20\u3002 \u8fd9\u91cc\uff0c\u5c06\u83b7\u53d6\u5230\u7684\u5b57\u7b26\u4e32\u7c7b\u578b\u5143\u7d20\u8d4b\u503c\u7ed9\u53d8\u91cf fruit \u3002 2.3 \u7279\u6027\u548c\u6ce8\u610f\u4e8b\u9879 \u6709\u5e8f\u6027\uff1a \u5217\u8868\u4e2d\u7684\u5143\u7d20\u662f\u6709\u5e8f\u7684\uff0c\u53ef\u4ee5\u6309\u7167\u5b83\u4eec\u88ab\u63d2\u5165\u7684\u987a\u5e8f\u8bbf\u95ee\u3002 \u53ef\u91cd\u590d\u6027\uff1a \u5217\u8868\u4e2d\u5141\u8bb8\u5b58\u50a8\u91cd\u590d\u7684\u5143\u7d20\u3002 \u7d22\u5f15\u8bbf\u95ee\uff1a \u53ef\u4ee5\u901a\u8fc7\u7d22\u5f15\u8bbf\u95ee\u5217\u8868\u4e2d\u7684\u5143\u7d20\uff0c\u7d22\u5f15\u4ece0\u5f00\u59cb\u5230\u5217\u8868\u5927\u5c0f\u51cf1\u3002 \u793a\u4f8b \u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f7f\u7528 ArrayList \u7684\u7b80\u5355\u793a\u4f8b\uff1a import java.util.ArrayList; public class ListExample { public static void main(String[] args) { // \u4f7f\u7528 ArrayList \u521b\u5efa\u5217\u8868 ArrayList<String> arrayList = new ArrayList<>(); arrayList.add(\"Apple\"); arrayList.add(\"Banana\"); arrayList.add(\"Cherry\"); System.out.println(\"ArrayList elements: \" + arrayList); } } \u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 ArrayList \u521b\u5efa\u3001\u6dfb\u52a0\u548c\u8bbf\u95ee\u5217\u8868\u5143\u7d20\u3002 3. \u521d\u7ea7\u641c\u7d22 3.1 \u6570\u7ec4\u7684\u7ebf\u6027\u641c\u7d22\uff08Linear Search\uff09 \u7ebf\u6027\u641c\u7d22\u662f\u6700\u7b80\u5355\u7684\u6570\u7ec4\u641c\u7d22\u65b9\u6cd5\uff0c\u5b83\u4ece\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\u9010\u4e2a\u68c0\u67e5\uff0c\u76f4\u5230\u627e\u5230\u76ee\u6807\u5143\u7d20\u6216\u904d\u5386\u5b8c\u6574\u4e2a\u6570\u7ec4\u3002 public class ArraySearchExample { public static void main(String[] args) { int[] numbers = {5, 8, 2, 10, 3}; int target = 10; int index = linearSearch(numbers, target); if (index != -1) { System.out.println(\"\u5143\u7d20 \" + target + \" \u5728\u6570\u7ec4\u4e2d\u7684\u7d22\u5f15\u4e3a\uff1a\" + index); } else { System.out.println(\"\u5143\u7d20 \" + target + \" \u4e0d\u5728\u6570\u7ec4\u4e2d\u3002\"); } } // \u7ebf\u6027\u641c\u7d22\u65b9\u6cd5 public static int linearSearch(int[] arr, int target) { for (int i = 0; i < arr.length; i++) { if (arr[i] == target) { return i; // \u8fd4\u56de\u76ee\u6807\u5143\u7d20\u7684\u7d22\u5f15 } } return -1; // \u6ca1\u6709\u627e\u5230\u76ee\u6807\u5143\u7d20 } } \u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c linearSearch \u65b9\u6cd5\u63a5\u53d7\u4e00\u4e2a\u6574\u578b\u6570\u7ec4\u548c\u76ee\u6807\u6574\u6570\u4f5c\u4e3a\u53c2\u6570\uff0c\u7136\u540e\u4f7f\u7528for\u5faa\u73af\u9010\u4e2a\u68c0\u67e5\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\uff0c\u76f4\u5230\u627e\u5230\u76ee\u6807\u5143\u7d20\u6216\u8005\u904d\u5386\u5b8c\u6574\u4e2a\u6570\u7ec4\u3002 3.2 \u5217\u8868\uff08List\uff09\u7684\u521d\u7ea7\u641c\u7d22 \u5217\u8868\u7684\u7ebf\u6027\u641c\u7d22\u4e0e\u6570\u7ec4\u7c7b\u4f3c\uff0c\u53ef\u4ee5\u4f7f\u7528\u8fed\u4ee3\u5668\u6216\u589e\u5f3afor\u5faa\u73af\u6765\u904d\u5386\u5217\u8868\u4e2d\u7684\u5143\u7d20\uff0c\u67e5\u627e\u76ee\u6807\u5143\u7d20\u3002 import java.util.ArrayList; public class ArrayListSearchExample { public static void main(String[] args) { ArrayList<String> fruits = new ArrayList<>(); fruits.add(\"Apple\"); fruits.add(\"Banana\"); fruits.add(\"Cherry\"); String target = \"Banana\"; int index = linearSearch(fruits, target); if (index != -1) { System.out.println(\"\u5143\u7d20 \" + target + \" \u5728\u5217\u8868\u4e2d\u7684\u7d22\u5f15\u4e3a\uff1a\" + index); } else { System.out.println(\"\u5143\u7d20 \" + target + \" \u4e0d\u5728\u5217\u8868\u4e2d\u3002\"); } } // \u7ebf\u6027\u641c\u7d22\u65b9\u6cd5 public static int linearSearch(List<String> list, String target) { for (int i = 0; i < list.size(); i++) { if (list.get(i).equals(target)) { return i; // \u8fd4\u56de\u76ee\u6807\u5143\u7d20\u7684\u7d22\u5f15 } } return -1; // \u6ca1\u6709\u627e\u5230\u76ee\u6807\u5143\u7d20 } } \u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c linearSearch \u65b9\u6cd5\u63a5\u53d7\u4e00\u4e2a List \u548c\u76ee\u6807\u5143\u7d20\u4f5c\u4e3a\u53c2\u6570\uff0c\u7136\u540e\u4f7f\u7528for\u5faa\u73af\u904d\u5386\u5217\u8868\u4e2d\u7684\u5143\u7d20\uff0c\u4f7f\u7528 equals \u65b9\u6cd5\u6bd4\u8f83\u6bcf\u4e2a\u5143\u7d20\u548c\u76ee\u6807\u5143\u7d20\u662f\u5426\u76f8\u7b49\u3002 4. \u8bfe\u540e\u7ec3\u4e60 ArrayList \u9898\u76ee\uff1a \u521b\u5efa\u4e00\u4e2a\u5305\u542b1-5\u6574\u6570\u7684 ArrayList \uff0c\u5e76\u6253\u5370\u8fd9\u4e9b\u6574\u6570\u3002 ```java import java.util.ArrayList; public class ArrayListExample { public static void main(String[] args) { // To be implemented } } ``` \u89e3\u7b54\uff1a ```java import java.util.ArrayList; public class ArrayListExample { public static void main(String[] args) { ArrayList list = new ArrayList<>(); list.add(1); list.add(2); list.add(3); list.add(4); list.add(5); System.out.println(list); } } ``` \u9898\u76ee\uff1a \u4ece\u4e00\u4e2a ArrayList \u4e2d\u79fb\u9664\u7279\u5b9a\u7684\u5143\u7d20\uff0c\u6bd4\u5982\u6570\u5b573\u3002 ```java import java.util.ArrayList; public class ArrayListExample { public static void main(String[] args) { ArrayList list = new ArrayList<>(); list.add(1); list.add(2); list.add(3); list.add(4); list.add(5); // To be implemented System.out.println(list); } } **\u89e3\u7b54\uff1a** java import java.util.ArrayList; public class ArrayListExample { public static void main(String[] args) { ArrayList list = new ArrayList<>(); list.add(1); list.add(2); list.add(3); list.add(4); list.add(5); list.remove(Integer.valueOf(3)); // \u4f7f\u7528\u5305\u88c5\u7c7b\u6765\u79fb\u9664\u7279\u5b9a\u5143\u7d20 System.out.println(list); } } ``` \u9898\u76ee\uff1a \u8bbf\u95ee ArrayList \u4e2d\u7684\u7b2c\u4e09\u4e2a\u5143\u7d20\u5e76\u6253\u5370\u51fa\u6765\u3002 ```java import java.util.ArrayList; public class ArrayListExample { public static void main(String[] args) { ArrayList list = new ArrayList<>(); list.add(\"A\"); list.add(\"B\"); list.add(\"C\"); list.add(\"D\"); // To be implemented } } **\u89e3\u7b54\uff1a** java import java.util.ArrayList; public class ArrayListExample { public static void main(String[] args) { ArrayList list = new ArrayList<>(); list.add(\"A\"); list.add(\"B\"); list.add(\"C\"); list.add(\"D\"); System.out.println(list.get(2)); // \u7d22\u5f15\u4ece0\u5f00\u59cb\uff0c\u6240\u4ee5\u7b2c\u4e09\u4e2a\u5143\u7d20\u662f\u7d22\u5f152 } } ``` \u7ebf\u6027\u641c\u7d22 \u9898\u76ee\uff1a \u7f16\u5199\u4e00\u4e2aJava\u7a0b\u5e8f\uff0c\u8be5\u7a0b\u5e8f\u521b\u5efa\u4e00\u4e2a ArrayList \uff0c\u5176\u4e2d\u5305\u542b 10, 20, 30, 40, 50 \u3002\u7f16\u5199\u4e00\u4e2a\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u4f7f\u7528\u7ebf\u6027\u641c\u7d22\u6765\u67e5\u627e\u4e00\u4e2a\u6307\u5b9a\u7684\u6574\u6570\uff0c\u5e76\u8fd4\u56de\u5b83\u5728 ArrayList \u4e2d\u7684\u7d22\u5f15\u3002\u5982\u679c\u8be5\u6574\u6570\u4e0d\u5728\u5217\u8868\u4e2d\uff0c\u5219\u8fd4\u56de-1\u3002\u6700\u540e\uff0c\u8c03\u7528\u8be5\u65b9\u6cd5\u5e76\u6253\u5370\u51fa\u7ed3\u679c\u3002 import java.util.ArrayList; public class LinearSearchExample { public static void main(String[] args) { // \u521b\u5efa\u4e00\u4e2a\u5305\u542b\u4e00\u4e9b\u6574\u6570\u7684 ArrayList // To be implemented // \u8981\u67e5\u627e\u7684\u76ee\u6807\u5143\u7d20 int target = 30; // \u7ebf\u6027\u641c\u7d22\u65b9\u6cd5 // To be implemented // \u6253\u5370\u7ed3\u679c if (index != -1) { System.out.println(\"\u5143\u7d20 \" + target + \" \u5728\u5217\u8868\u4e2d\u7684\u7d22\u5f15\u662f: \" + index); } else { System.out.println(\"\u5143\u7d20 \" + target + \" \u4e0d\u5728\u5217\u8868\u4e2d\u3002\"); } } } \u89e3\u7b54\uff1a import java.util.ArrayList; public class LinearSearchExample { public static void main(String[] args) { // \u521b\u5efa\u4e00\u4e2a\u5305\u542b\u4e00\u4e9b\u6574\u6570\u7684 ArrayList ArrayList<Integer> list = new ArrayList<>(); list.add(10); list.add(20); list.add(30); list.add(40); list.add(50); // \u8981\u67e5\u627e\u7684\u76ee\u6807\u5143\u7d20 int target = 30; // \u7ebf\u6027\u641c\u7d22\u65b9\u6cd5 int index = -1; for (int i = 0; i < list.size(); i++) { if (list.get(i) == target) { index = i; // \u627e\u5230\u76ee\u6807\u5143\u7d20\uff0c\u8bb0\u5f55\u7d22\u5f15 break; // \u4e00\u65e6\u627e\u5230\u5c31\u53ef\u4ee5\u9000\u51fa\u5faa\u73af } } // \u6253\u5370\u7ed3\u679c if (index != -1) { System.out.println(\"\u5143\u7d20 \" + target + \" \u5728\u5217\u8868\u4e2d\u7684\u7d22\u5f15\u662f: \" + index); } else { System.out.println(\"\u5143\u7d20 \" + target + \" \u4e0d\u5728\u5217\u8868\u4e2d\u3002\"); } } }","title":"Lesson5 \u6570\u7ec4/\u5217\u8868\u4e0e\u521d\u7ea7\u641c\u7d22"},{"location":"lesson5/Lesson5%20Java/#lesson5","text":"","title":"Lesson5 \u6570\u7ec4/\u5217\u8868\u4e0e\u521d\u7ea7\u641c\u7d22"},{"location":"lesson5/Lesson5%20Java/#_1","text":"\u6570\u7ec4\uff08Array\uff09 1.1 \u58f0\u660e\u548c\u521d\u59cb\u5316\u6570\u7ec4 1.2 \u8bbf\u95ee\u6570\u7ec4\u5143\u7d20 1.3 \u6570\u7ec4\u7684\u957f\u5ea6 1.4 \u591a\u7ef4\u6570\u7ec4 1.5 \u6570\u7ec4\u7684\u7279\u70b9\u548c\u6ce8\u610f\u4e8b\u9879 \u793a\u4f8b \u5217\u8868\uff08ArrayList\uff09 2.1 \u521b\u5efa\u548c\u521d\u59cb\u5316\u5217\u8868 2.2 \u57fa\u672c\u64cd\u4f5c 2.3 \u7279\u6027\u548c\u6ce8\u610f\u4e8b\u9879 \u793a\u4f8b \u521d\u7ea7\u641c\u7d22 3.1 \u6570\u7ec4\u7684\u7ebf\u6027\u641c\u7d22\uff08Linear Search\uff09 3.2 \u5217\u8868\uff08List\uff09\u7684\u521d\u7ea7\u641c\u7d22 \u8bfe\u540e\u7ec3\u4e60 ArrayList \u7ebf\u6027\u641c\u7d22","title":"\u76ee\u5f55"},{"location":"lesson5/Lesson5%20Java/#1-array","text":"\u5728Java\u4e2d\uff0c\u6570\u7ec4\u662f\u4e00\u79cd\u7528\u6765\u5b58\u50a8\u56fa\u5b9a\u5927\u5c0f\u7684\u540c\u7c7b\u578b\u5143\u7d20\u7684\u6570\u636e\u7ed3\u6784\u3002\u5b83\u662f\u4e00\u4e2a\u8fde\u7eed\u7684\u5185\u5b58\u533a\u57df\uff0c\u53ef\u4ee5\u5b58\u50a8\u591a\u4e2a\u76f8\u540c\u6570\u636e\u7c7b\u578b\u7684\u5143\u7d20\uff0c\u5e76\u901a\u8fc7\u7d22\u5f15\u6765\u8bbf\u95ee\u8fd9\u4e9b\u5143\u7d20\u3002\u4ee5\u4e0b\u662f\u5173\u4e8eJava\u6570\u7ec4\u7684\u8be6\u7ec6\u4ecb\u7ecd\uff1a","title":"1. \u6570\u7ec4\uff08Array\uff09"},{"location":"lesson5/Lesson5%20Java/#11","text":"\u5728Java\u4e2d\uff0c\u6570\u7ec4\u7684\u58f0\u660e\u548c\u521d\u59cb\u5316\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u51e0\u79cd\u65b9\u5f0f\uff1a \u58f0\u660e\u6570\u7ec4\u53d8\u91cf\uff1a \u58f0\u660e\u6570\u7ec4\u9700\u8981\u6307\u5b9a\u6570\u7ec4\u7684\u7c7b\u578b\u548c\u53d8\u91cf\u540d\uff0c\u4f46\u4e0d\u5206\u914d\u5185\u5b58\u7a7a\u95f4\u3002 java int[] myArray; \u521b\u5efa\u6570\u7ec4\u5e76\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff1a \u4f7f\u7528 new \u5173\u952e\u5b57\u521b\u5efa\u6570\u7ec4\u5e76\u6307\u5b9a\u6570\u7ec4\u7684\u5927\u5c0f\uff08\u5373\u5143\u7d20\u4e2a\u6570\uff09\u3002 java myArray = new int[5]; // \u521b\u5efa\u4e86\u4e00\u4e2a\u5305\u542b5\u4e2a\u6574\u6570\u5143\u7d20\u7684\u6570\u7ec4 \u540c\u65f6\u58f0\u660e\u548c\u521d\u59cb\u5316\uff1a \u4e5f\u53ef\u4ee5\u5728\u58f0\u660e\u6570\u7ec4\u53d8\u91cf\u65f6\u76f4\u63a5\u521d\u59cb\u5316\u6570\u7ec4\u3002 java int[] myArray = new int[5]; // \u58f0\u660e\u5e76\u521d\u59cb\u5316\u4e00\u4e2a\u5305\u542b5\u4e2a\u6574\u6570\u5143\u7d20\u7684\u6570\u7ec4 \u4f7f\u7528\u6570\u7ec4\u521d\u59cb\u5316\u5217\u8868\uff08Array Initializer\uff09\uff1a \u5728\u58f0\u660e\u6570\u7ec4\u65f6\u76f4\u63a5\u6307\u5b9a\u521d\u59cb\u5143\u7d20\u7684\u503c\uff0cJava\u4f1a\u6839\u636e\u63d0\u4f9b\u7684\u5143\u7d20\u4e2a\u6570\u81ea\u52a8\u786e\u5b9a\u6570\u7ec4\u5927\u5c0f\u3002 java int[] myArray = {1, 2, 3, 4, 5}; // \u58f0\u660e\u5e76\u521d\u59cb\u5316\u5305\u542b5\u4e2a\u6574\u6570\u5143\u7d20\u7684\u6570\u7ec4","title":"1.1 \u58f0\u660e\u548c\u521d\u59cb\u5316\u6570\u7ec4"},{"location":"lesson5/Lesson5%20Java/#12","text":"Java\u6570\u7ec4\u7684\u5143\u7d20\u901a\u8fc7\u7d22\u5f15\u8bbf\u95ee\uff0c\u7d22\u5f15\u4ece0\u5f00\u59cb\u5230\u6570\u7ec4\u957f\u5ea6\u51cf1\u3002 int[] myArray = {10, 20, 30, 40, 50}; int firstElement = myArray[0]; // \u8bbf\u95ee\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u503c\u4e3a10 int thirdElement = myArray[2]; // \u8bbf\u95ee\u7b2c\u4e09\u4e2a\u5143\u7d20\uff0c\u503c\u4e3a30","title":"1.2 \u8bbf\u95ee\u6570\u7ec4\u5143\u7d20"},{"location":"lesson5/Lesson5%20Java/#13","text":"\u53ef\u4ee5\u4f7f\u7528\u6570\u7ec4\u7684 length \u5c5e\u6027\u83b7\u53d6\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u5373\u6570\u7ec4\u4e2d\u5143\u7d20\u7684\u4e2a\u6570\u3002 int[] myArray = {10, 20, 30, 40, 50}; int length = myArray.length; // \u83b7\u53d6\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u503c\u4e3a5","title":"1.3 \u6570\u7ec4\u7684\u957f\u5ea6"},{"location":"lesson5/Lesson5%20Java/#14","text":"Java\u652f\u6301\u591a\u7ef4\u6570\u7ec4\uff0c\u5373\u6570\u7ec4\u7684\u5143\u7d20\u53ef\u4ee5\u662f\u6570\u7ec4\u3002\u4f8b\u5982\uff0c\u4e8c\u7ef4\u6570\u7ec4\u7684\u58f0\u660e\u548c\u521d\u59cb\u5316\u5982\u4e0b\u6240\u793a\uff1a int[][] twoDArray = new int[3][4]; // \u58f0\u660e\u4e00\u4e2a3\u884c4\u5217\u7684\u4e8c\u7ef4\u6574\u6570\u6570\u7ec4 int[][] twoDArray = { {1, 2, 3}, {4, 5, 6}, {7, 8, 9} }; // \u58f0\u660e\u5e76\u521d\u59cb\u5316\u4e00\u4e2a3\u884c3\u5217\u7684\u4e8c\u7ef4\u6574\u6570\u6570\u7ec4","title":"1.4 \u591a\u7ef4\u6570\u7ec4"},{"location":"lesson5/Lesson5%20Java/#15","text":"\u6570\u7ec4\u662f\u5f15\u7528\u7c7b\u578b\uff1a \u5728Java\u4e2d\uff0c\u6570\u7ec4\u662f\u5bf9\u8c61\uff0c\u5b83\u4eec\u5b58\u50a8\u5728\u5806\u5185\u5b58\u4e2d\u3002\u56e0\u6b64\uff0c\u6570\u7ec4\u53d8\u91cf\u5b9e\u9645\u4e0a\u662f\u5f15\u7528\uff0c\u5b58\u50a8\u7684\u662f\u6570\u7ec4\u5bf9\u8c61\u7684\u5730\u5740\u3002 \u957f\u5ea6\u4e0d\u53ef\u53d8\uff1a \u4e00\u65e6\u521b\u5efa\u4e86\u6570\u7ec4\uff0c\u5176\u957f\u5ea6\u5c31\u4e0d\u53ef\u53d8\u3002\u5982\u679c\u9700\u8981\u6539\u53d8\u6570\u7ec4\u7684\u5927\u5c0f\uff0c\u901a\u5e38\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6570\u7ec4\u3002 \u9ed8\u8ba4\u521d\u59cb\u5316\uff1a \u6570\u7ec4\u5143\u7d20\u5728\u521b\u5efa\u65f6\u4f1a\u6839\u636e\u5176\u7c7b\u578b\u8fdb\u884c\u9ed8\u8ba4\u521d\u59cb\u5316\u3002\u4f8b\u5982\uff0c\u6574\u6570\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u9ed8\u8ba4\u503c\u4e3a0\uff0c\u5bf9\u8c61\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u9ed8\u8ba4\u503c\u4e3anull\u3002 \u6570\u7ec4\u8d8a\u754c\u5f02\u5e38\uff08ArrayIndexOutOfBoundsException\uff09\uff1a \u8bbf\u95ee\u6570\u7ec4\u5143\u7d20\u65f6\uff0c\u5982\u679c\u4f7f\u7528\u4e86\u4e0d\u5b58\u5728\u7684\u7d22\u5f15\uff0c\u4f1a\u629b\u51fa\u6570\u7ec4\u8d8a\u754c\u5f02\u5e38\u3002","title":"1.5 \u6570\u7ec4\u7684\u7279\u70b9\u548c\u6ce8\u610f\u4e8b\u9879"},{"location":"lesson5/Lesson5%20Java/#_2","text":"\u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u793a\u4f8b\uff0c\u5c55\u793a\u4e86\u5982\u4f55\u58f0\u660e\u3001\u521d\u59cb\u5316\u548c\u4f7f\u7528\u4e00\u4e2a\u4e00\u7ef4\u6574\u6570\u6570\u7ec4\uff1a public class ArrayExample { public static void main(String[] args) { // \u58f0\u660e\u5e76\u521d\u59cb\u5316\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 int[] myArray = {10, 20, 30, 40, 50}; // \u8ba1\u7b97\u6570\u7ec4\u5143\u7d20\u7684\u603b\u548c int sum = 0; for (int i = 0; i < myArray.length; i++) { sum += myArray[i]; } // \u6253\u5370\u6570\u7ec4\u5143\u7d20\u7684\u603b\u548c System.out.println(\"\u6570\u7ec4\u5143\u7d20\u7684\u603b\u548c\u4e3a\uff1a\" + sum); } } \u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c myArray \u6570\u7ec4\u5305\u542b5\u4e2a\u6574\u6570\u5143\u7d20\uff0c\u901a\u8fc7\u5faa\u73af\u8ba1\u7b97\u4e86\u8fd9\u4e9b\u5143\u7d20\u7684\u603b\u548c\uff0c\u5e76\u8f93\u51fa\u5230\u63a7\u5236\u53f0\u3002","title":"\u793a\u4f8b"},{"location":"lesson5/Lesson5%20Java/#2-arraylist","text":"","title":"2. \u5217\u8868\uff08ArrayList\uff09"},{"location":"lesson5/Lesson5%20Java/#21","text":"\u5728Java\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 ArrayList \u7c7b\u6765\u521b\u5efa\u548c\u521d\u59cb\u5316\u5217\u8868\uff1a","title":"2.1 \u521b\u5efa\u548c\u521d\u59cb\u5316\u5217\u8868"},{"location":"lesson5/Lesson5%20Java/#arraylist","text":"import java.util.ArrayList; public class ArrayListExample { public static void main(String[] args) { // \u521b\u5efa\u4e00\u4e2aArrayList\u5b9e\u4f8b ArrayList<String> arrayList = new ArrayList<>(); // \u6dfb\u52a0\u5143\u7d20\u5230\u5217\u8868 arrayList.add(\"Apple\"); arrayList.add(\"Banana\"); arrayList.add(\"Cherry\"); // \u6253\u5370\u5217\u8868\u5143\u7d20 System.out.println(\"ArrayList elements: \" + arrayList); } }","title":"\u4f7f\u7528 ArrayList \u521b\u5efa\u5217\u8868"},{"location":"lesson5/Lesson5%20Java/#22","text":"","title":"2.2 \u57fa\u672c\u64cd\u4f5c"},{"location":"lesson5/Lesson5%20Java/#_3","text":"\u53ef\u4ee5\u4f7f\u7528 add() \u65b9\u6cd5\u6dfb\u52a0\u5143\u7d20\u5230\u5217\u8868\u4e2d\uff0c\u5e76\u4f7f\u7528\u7d22\u5f15\u8bbf\u95ee\u5143\u7d20\u3002 import java.util.ArrayList; public class Main { public static void main(String[] args) { // \u521b\u5efa\u4e00\u4e2a ArrayList \u5e76\u6dfb\u52a0\u5143\u7d20 ArrayList<String> fruits = new ArrayList<>(); fruits.add(\"Apple\"); fruits.add(\"Banana\"); fruits.add(\"Cherry\"); // \u83b7\u53d6\u7b2c\u4e00\u4e2a\u5143\u7d20 String firstFruit = fruits.get(0); // \u83b7\u53d6\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u503c\u4e3a\"Apple\" // \u8f93\u51fa\u7b2c\u4e00\u4e2a\u5143\u7d20 System.out.println(\"The first fruit is: \" + firstFruit); } }","title":"\u6dfb\u52a0\u548c\u8bbf\u95ee\u5143\u7d20"},{"location":"lesson5/Lesson5%20Java/#_4","text":"\u4f7f\u7528 remove() \u65b9\u6cd5\u5220\u9664\u6307\u5b9a\u4f4d\u7f6e\u6216\u6307\u5b9a\u5143\u7d20\u3002 import java.util.ArrayList; public class Main { public static void main(String[] args) { // \u521b\u5efa\u4e00\u4e2a ArrayList \u5e76\u6dfb\u52a0\u5143\u7d20 ArrayList<String> fruits = new ArrayList<>(); fruits.add(\"Apple\"); fruits.add(\"Banana\"); fruits.add(\"Cherry\"); // \u5220\u9664\u7d22\u5f15\u4e3a1\u7684\u5143\u7d20\uff0c\u5373\"Banana\" fruits.remove(1); // \u6253\u5370\u5220\u9664\u540e\u7684\u5217\u8868 System.out.println(\"Fruits list after removal: \" + fruits); } }","title":"\u5220\u9664\u5143\u7d20"},{"location":"lesson5/Lesson5%20Java/#_5","text":"\u4f7f\u7528 size() \u65b9\u6cd5\u83b7\u53d6\u5217\u8868\u4e2d\u5143\u7d20\u7684\u4e2a\u6570\u3002 import java.util.ArrayList; public class Main { public static void main(String[] args) { // \u521b\u5efa\u4e00\u4e2a ArrayList \u5e76\u6dfb\u52a0\u5143\u7d20 ArrayList<String> fruits = new ArrayList<>(); fruits.add(\"Apple\"); fruits.add(\"Banana\"); fruits.add(\"Cherry\"); // \u83b7\u53d6\u5217\u8868\u5927\u5c0f int size = fruits.size(); // \u83b7\u53d6\u5f53\u524d\u5217\u8868\u7684\u5927\u5c0f\uff0c\u503c\u4e3a3 // \u5220\u9664\u7d22\u5f15\u4e3a1\u7684\u5143\u7d20\uff0c\u5373\"Banana\" fruits.remove(1); // \u83b7\u53d6\u5217\u8868\u5927\u5c0f int size = fruits.size(); // \u83b7\u53d6\u5f53\u524d\u5217\u8868\u7684\u5927\u5c0f\uff0c\u503c\u4e3a2 System.out.println(\"The size of the fruits list is: \" + size); // \u6253\u5370\u5220\u9664\u540e\u7684\u5217\u8868 System.out.println(\"Fruits list after removal: \" + fruits); } }","title":"\u83b7\u53d6\u5217\u8868\u5927\u5c0f"},{"location":"lesson5/Lesson5%20Java/#_6","text":"\u53ef\u4ee5\u4f7f\u7528\u589e\u5f3a for \u5faa\u73af\u6216\u8fed\u4ee3\u5668\u904d\u5386 ArrayList \u4e2d\u7684\u5143\u7d20\u3002","title":"\u8fed\u4ee3\u5217\u8868\u5143\u7d20"},{"location":"lesson5/Lesson5%20Java/#for","text":"import java.util.ArrayList; public class Main { public static void main(String[] args) { // \u521b\u5efa\u4e00\u4e2a ArrayList \u5e76\u6dfb\u52a0\u5143\u7d20 ArrayList<String> fruits = new ArrayList<>(); fruits.add(\"Apple\"); fruits.add(\"Banana\"); fruits.add(\"Cherry\"); // \u4f7f\u7528\u589e\u5f3a\u7684 for \u5faa\u73af\u904d\u5386\u5e76\u6253\u5370\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20 System.out.println(\"Fruits in the list:\"); for (String fruit : fruits) { System.out.println(fruit); } } }","title":"\u589e\u5f3afor\u5faa\u73af"},{"location":"lesson5/Lesson5%20Java/#_7","text":"\u8fed\u4ee3\u5668\uff08Iterator\uff09\u662f Java \u96c6\u5408\u6846\u67b6\u4e2d\u4e00\u4e2a\u91cd\u8981\u7684\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5141\u8bb8\u7a0b\u5e8f\u5458\u5728\u4e0d\u66b4\u9732\u96c6\u5408\u5185\u90e8\u7ed3\u6784\u7684\u60c5\u51b5\u4e0b\uff0c\u9010\u4e2a\u8bbf\u95ee\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u79cd\u7edf\u4e00\u7684\u65b9\u5f0f\u6765\u904d\u5386\u96c6\u5408\uff0c\u5305\u62ec List \u3001 Set \u548c Map \u7b49\u3002 \u4e3b\u8981\u7684\u65b9\u6cd5\u5305\u62ec\uff1a - boolean hasNext() : \u5982\u679c\u8fed\u4ee3\u5668\u6709\u66f4\u591a\u5143\u7d20\u53ef\u4f9b\u904d\u5386\uff0c\u5219\u8fd4\u56de true \u3002 - E next() : \u8fd4\u56de\u8fed\u4ee3\u5668\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\u3002","title":"\u8fed\u4ee3\u5668"},{"location":"lesson5/Lesson5%20Java/#_8","text":"\u4e0b\u9762\u662f\u4e00\u4e2a\u4f7f\u7528\u8fed\u4ee3\u5668\u904d\u5386 ArrayList \u7684\u793a\u4f8b\uff1a import java.util.ArrayList; import java.util.Iterator; public class IteratorExample { public static void main(String[] args) { // \u521b\u5efa\u4e00\u4e2a ArrayList \u5e76\u6dfb\u52a0\u5143\u7d20 ArrayList<String> fruits = new ArrayList<>(); fruits.add(\"Apple\"); fruits.add(\"Banana\"); fruits.add(\"Cherry\"); // \u521b\u5efa\u8fed\u4ee3\u5668 Iterator<String> iterator = fruits.iterator(); // \u4f7f\u7528\u8fed\u4ee3\u5668\u904d\u5386\u96c6\u5408 while (iterator.hasNext()) { String fruit = iterator.next(); System.out.println(fruit); } } }","title":"\u4f7f\u7528\u8fed\u4ee3\u5668\u7684\u793a\u4f8b"},{"location":"lesson5/Lesson5%20Java/#_9","text":"while (iterator.hasNext()) : \u8fd9\u662f\u4e00\u4e2a\u5faa\u73af\u6761\u4ef6\uff0c\u4f7f\u7528 iterator.hasNext() \u65b9\u6cd5\u68c0\u67e5\u8fed\u4ee3\u5668\u662f\u5426\u8fd8\u6709\u66f4\u591a\u7684\u5143\u7d20\u53ef\u4ee5\u904d\u5386\u3002 hasNext() \u8fd4\u56de true \u65f6\uff0c\u8868\u793a\u8fd8\u6709\u4e0b\u4e00\u4e2a\u5143\u7d20\u53ef\u4ee5\u8bbf\u95ee\uff1b\u5982\u679c\u6ca1\u6709\u66f4\u591a\u5143\u7d20\uff0c\u8fd4\u56de false \uff0c\u5faa\u73af\u7ed3\u675f\u3002 String fruit = iterator.next(); : \u5f53 hasNext() \u8fd4\u56de true \u65f6\uff0c iterator.next() \u88ab\u8c03\u7528\u4ee5\u83b7\u53d6\u4e0b\u4e00\u4e2a\u5143\u7d20\u3002 next() \u65b9\u6cd5\u8fd4\u56de\u5f53\u524d\u5143\u7d20\uff0c\u5e76\u5c06\u8fed\u4ee3\u5668\u7684\u6e38\u6807\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u5143\u7d20\u3002 \u8fd9\u91cc\uff0c\u5c06\u83b7\u53d6\u5230\u7684\u5b57\u7b26\u4e32\u7c7b\u578b\u5143\u7d20\u8d4b\u503c\u7ed9\u53d8\u91cf fruit \u3002","title":"\u4ee3\u7801\u89e3\u6790"},{"location":"lesson5/Lesson5%20Java/#23","text":"\u6709\u5e8f\u6027\uff1a \u5217\u8868\u4e2d\u7684\u5143\u7d20\u662f\u6709\u5e8f\u7684\uff0c\u53ef\u4ee5\u6309\u7167\u5b83\u4eec\u88ab\u63d2\u5165\u7684\u987a\u5e8f\u8bbf\u95ee\u3002 \u53ef\u91cd\u590d\u6027\uff1a \u5217\u8868\u4e2d\u5141\u8bb8\u5b58\u50a8\u91cd\u590d\u7684\u5143\u7d20\u3002 \u7d22\u5f15\u8bbf\u95ee\uff1a \u53ef\u4ee5\u901a\u8fc7\u7d22\u5f15\u8bbf\u95ee\u5217\u8868\u4e2d\u7684\u5143\u7d20\uff0c\u7d22\u5f15\u4ece0\u5f00\u59cb\u5230\u5217\u8868\u5927\u5c0f\u51cf1\u3002","title":"2.3 \u7279\u6027\u548c\u6ce8\u610f\u4e8b\u9879"},{"location":"lesson5/Lesson5%20Java/#_10","text":"\u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f7f\u7528 ArrayList \u7684\u7b80\u5355\u793a\u4f8b\uff1a import java.util.ArrayList; public class ListExample { public static void main(String[] args) { // \u4f7f\u7528 ArrayList \u521b\u5efa\u5217\u8868 ArrayList<String> arrayList = new ArrayList<>(); arrayList.add(\"Apple\"); arrayList.add(\"Banana\"); arrayList.add(\"Cherry\"); System.out.println(\"ArrayList elements: \" + arrayList); } } \u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 ArrayList \u521b\u5efa\u3001\u6dfb\u52a0\u548c\u8bbf\u95ee\u5217\u8868\u5143\u7d20\u3002","title":"\u793a\u4f8b"},{"location":"lesson5/Lesson5%20Java/#3","text":"","title":"3. \u521d\u7ea7\u641c\u7d22"},{"location":"lesson5/Lesson5%20Java/#31-linear-search","text":"\u7ebf\u6027\u641c\u7d22\u662f\u6700\u7b80\u5355\u7684\u6570\u7ec4\u641c\u7d22\u65b9\u6cd5\uff0c\u5b83\u4ece\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb\u9010\u4e2a\u68c0\u67e5\uff0c\u76f4\u5230\u627e\u5230\u76ee\u6807\u5143\u7d20\u6216\u904d\u5386\u5b8c\u6574\u4e2a\u6570\u7ec4\u3002 public class ArraySearchExample { public static void main(String[] args) { int[] numbers = {5, 8, 2, 10, 3}; int target = 10; int index = linearSearch(numbers, target); if (index != -1) { System.out.println(\"\u5143\u7d20 \" + target + \" \u5728\u6570\u7ec4\u4e2d\u7684\u7d22\u5f15\u4e3a\uff1a\" + index); } else { System.out.println(\"\u5143\u7d20 \" + target + \" \u4e0d\u5728\u6570\u7ec4\u4e2d\u3002\"); } } // \u7ebf\u6027\u641c\u7d22\u65b9\u6cd5 public static int linearSearch(int[] arr, int target) { for (int i = 0; i < arr.length; i++) { if (arr[i] == target) { return i; // \u8fd4\u56de\u76ee\u6807\u5143\u7d20\u7684\u7d22\u5f15 } } return -1; // \u6ca1\u6709\u627e\u5230\u76ee\u6807\u5143\u7d20 } } \u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c linearSearch \u65b9\u6cd5\u63a5\u53d7\u4e00\u4e2a\u6574\u578b\u6570\u7ec4\u548c\u76ee\u6807\u6574\u6570\u4f5c\u4e3a\u53c2\u6570\uff0c\u7136\u540e\u4f7f\u7528for\u5faa\u73af\u9010\u4e2a\u68c0\u67e5\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\uff0c\u76f4\u5230\u627e\u5230\u76ee\u6807\u5143\u7d20\u6216\u8005\u904d\u5386\u5b8c\u6574\u4e2a\u6570\u7ec4\u3002","title":"3.1 \u6570\u7ec4\u7684\u7ebf\u6027\u641c\u7d22\uff08Linear Search\uff09"},{"location":"lesson5/Lesson5%20Java/#32-list","text":"\u5217\u8868\u7684\u7ebf\u6027\u641c\u7d22\u4e0e\u6570\u7ec4\u7c7b\u4f3c\uff0c\u53ef\u4ee5\u4f7f\u7528\u8fed\u4ee3\u5668\u6216\u589e\u5f3afor\u5faa\u73af\u6765\u904d\u5386\u5217\u8868\u4e2d\u7684\u5143\u7d20\uff0c\u67e5\u627e\u76ee\u6807\u5143\u7d20\u3002 import java.util.ArrayList; public class ArrayListSearchExample { public static void main(String[] args) { ArrayList<String> fruits = new ArrayList<>(); fruits.add(\"Apple\"); fruits.add(\"Banana\"); fruits.add(\"Cherry\"); String target = \"Banana\"; int index = linearSearch(fruits, target); if (index != -1) { System.out.println(\"\u5143\u7d20 \" + target + \" \u5728\u5217\u8868\u4e2d\u7684\u7d22\u5f15\u4e3a\uff1a\" + index); } else { System.out.println(\"\u5143\u7d20 \" + target + \" \u4e0d\u5728\u5217\u8868\u4e2d\u3002\"); } } // \u7ebf\u6027\u641c\u7d22\u65b9\u6cd5 public static int linearSearch(List<String> list, String target) { for (int i = 0; i < list.size(); i++) { if (list.get(i).equals(target)) { return i; // \u8fd4\u56de\u76ee\u6807\u5143\u7d20\u7684\u7d22\u5f15 } } return -1; // \u6ca1\u6709\u627e\u5230\u76ee\u6807\u5143\u7d20 } } \u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c linearSearch \u65b9\u6cd5\u63a5\u53d7\u4e00\u4e2a List \u548c\u76ee\u6807\u5143\u7d20\u4f5c\u4e3a\u53c2\u6570\uff0c\u7136\u540e\u4f7f\u7528for\u5faa\u73af\u904d\u5386\u5217\u8868\u4e2d\u7684\u5143\u7d20\uff0c\u4f7f\u7528 equals \u65b9\u6cd5\u6bd4\u8f83\u6bcf\u4e2a\u5143\u7d20\u548c\u76ee\u6807\u5143\u7d20\u662f\u5426\u76f8\u7b49\u3002","title":"3.2 \u5217\u8868\uff08List\uff09\u7684\u521d\u7ea7\u641c\u7d22"},{"location":"lesson5/Lesson5%20Java/#4","text":"","title":"4. \u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson5/Lesson5%20Java/#arraylist_1","text":"\u9898\u76ee\uff1a \u521b\u5efa\u4e00\u4e2a\u5305\u542b1-5\u6574\u6570\u7684 ArrayList \uff0c\u5e76\u6253\u5370\u8fd9\u4e9b\u6574\u6570\u3002 ```java import java.util.ArrayList; public class ArrayListExample { public static void main(String[] args) { // To be implemented } } ``` \u89e3\u7b54\uff1a ```java import java.util.ArrayList; public class ArrayListExample { public static void main(String[] args) { ArrayList list = new ArrayList<>(); list.add(1); list.add(2); list.add(3); list.add(4); list.add(5); System.out.println(list); } } ``` \u9898\u76ee\uff1a \u4ece\u4e00\u4e2a ArrayList \u4e2d\u79fb\u9664\u7279\u5b9a\u7684\u5143\u7d20\uff0c\u6bd4\u5982\u6570\u5b573\u3002 ```java import java.util.ArrayList; public class ArrayListExample { public static void main(String[] args) { ArrayList list = new ArrayList<>(); list.add(1); list.add(2); list.add(3); list.add(4); list.add(5); // To be implemented System.out.println(list); } } **\u89e3\u7b54\uff1a** java import java.util.ArrayList; public class ArrayListExample { public static void main(String[] args) { ArrayList list = new ArrayList<>(); list.add(1); list.add(2); list.add(3); list.add(4); list.add(5); list.remove(Integer.valueOf(3)); // \u4f7f\u7528\u5305\u88c5\u7c7b\u6765\u79fb\u9664\u7279\u5b9a\u5143\u7d20 System.out.println(list); } } ``` \u9898\u76ee\uff1a \u8bbf\u95ee ArrayList \u4e2d\u7684\u7b2c\u4e09\u4e2a\u5143\u7d20\u5e76\u6253\u5370\u51fa\u6765\u3002 ```java import java.util.ArrayList; public class ArrayListExample { public static void main(String[] args) { ArrayList list = new ArrayList<>(); list.add(\"A\"); list.add(\"B\"); list.add(\"C\"); list.add(\"D\"); // To be implemented } } **\u89e3\u7b54\uff1a** java import java.util.ArrayList; public class ArrayListExample { public static void main(String[] args) { ArrayList list = new ArrayList<>(); list.add(\"A\"); list.add(\"B\"); list.add(\"C\"); list.add(\"D\"); System.out.println(list.get(2)); // \u7d22\u5f15\u4ece0\u5f00\u59cb\uff0c\u6240\u4ee5\u7b2c\u4e09\u4e2a\u5143\u7d20\u662f\u7d22\u5f152 } } ```","title":"ArrayList"},{"location":"lesson5/Lesson5%20Java/#_11","text":"\u9898\u76ee\uff1a \u7f16\u5199\u4e00\u4e2aJava\u7a0b\u5e8f\uff0c\u8be5\u7a0b\u5e8f\u521b\u5efa\u4e00\u4e2a ArrayList \uff0c\u5176\u4e2d\u5305\u542b 10, 20, 30, 40, 50 \u3002\u7f16\u5199\u4e00\u4e2a\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u4f7f\u7528\u7ebf\u6027\u641c\u7d22\u6765\u67e5\u627e\u4e00\u4e2a\u6307\u5b9a\u7684\u6574\u6570\uff0c\u5e76\u8fd4\u56de\u5b83\u5728 ArrayList \u4e2d\u7684\u7d22\u5f15\u3002\u5982\u679c\u8be5\u6574\u6570\u4e0d\u5728\u5217\u8868\u4e2d\uff0c\u5219\u8fd4\u56de-1\u3002\u6700\u540e\uff0c\u8c03\u7528\u8be5\u65b9\u6cd5\u5e76\u6253\u5370\u51fa\u7ed3\u679c\u3002 import java.util.ArrayList; public class LinearSearchExample { public static void main(String[] args) { // \u521b\u5efa\u4e00\u4e2a\u5305\u542b\u4e00\u4e9b\u6574\u6570\u7684 ArrayList // To be implemented // \u8981\u67e5\u627e\u7684\u76ee\u6807\u5143\u7d20 int target = 30; // \u7ebf\u6027\u641c\u7d22\u65b9\u6cd5 // To be implemented // \u6253\u5370\u7ed3\u679c if (index != -1) { System.out.println(\"\u5143\u7d20 \" + target + \" \u5728\u5217\u8868\u4e2d\u7684\u7d22\u5f15\u662f: \" + index); } else { System.out.println(\"\u5143\u7d20 \" + target + \" \u4e0d\u5728\u5217\u8868\u4e2d\u3002\"); } } } \u89e3\u7b54\uff1a import java.util.ArrayList; public class LinearSearchExample { public static void main(String[] args) { // \u521b\u5efa\u4e00\u4e2a\u5305\u542b\u4e00\u4e9b\u6574\u6570\u7684 ArrayList ArrayList<Integer> list = new ArrayList<>(); list.add(10); list.add(20); list.add(30); list.add(40); list.add(50); // \u8981\u67e5\u627e\u7684\u76ee\u6807\u5143\u7d20 int target = 30; // \u7ebf\u6027\u641c\u7d22\u65b9\u6cd5 int index = -1; for (int i = 0; i < list.size(); i++) { if (list.get(i) == target) { index = i; // \u627e\u5230\u76ee\u6807\u5143\u7d20\uff0c\u8bb0\u5f55\u7d22\u5f15 break; // \u4e00\u65e6\u627e\u5230\u5c31\u53ef\u4ee5\u9000\u51fa\u5faa\u73af } } // \u6253\u5370\u7ed3\u679c if (index != -1) { System.out.println(\"\u5143\u7d20 \" + target + \" \u5728\u5217\u8868\u4e2d\u7684\u7d22\u5f15\u662f: \" + index); } else { System.out.println(\"\u5143\u7d20 \" + target + \" \u4e0d\u5728\u5217\u8868\u4e2d\u3002\"); } } }","title":"\u7ebf\u6027\u641c\u7d22"},{"location":"lesson5/Lesson5%20Python/","text":"Lesson 5 \u5217\u8868\u4e0e\u521d\u7ea7\u641c\u7d22 \u5199\u5728\u524d\u9762\uff1a \u6570\u7ec4\u5728Java\uff0cC / C ++\uff0cJavaScript\u7b49\u5927\u591a\u6570\u7f16\u7a0b\u8bed\u8a00\u4e2d\u90fd\u5f88\u6d41\u884c\u3002\u4f46\u662f\uff0c\u5728Python\u4e2d\uff0c\u5b83\u4eec\u5e76\u4e0d\u5e38\u89c1\u3002\u4eba\u4eec\u7ecf\u5e38\u8c08\u8bbaPython\u6570\u7ec4\u65f6\uff0c\u4ed6\u4eec\u8c08\u8bba\u7684\u662fPython\u5217\u8868\u3002 \u5217\u8868\u6bd4\u6570\u7ec4\u7075\u6d3b\u5f97\u591a\u3002\u5b83\u4eec\u53ef\u4ee5\u5b58\u50a8\u4e0d\u540c\u6570\u636e\u7c7b\u578b\u7684\u5143\u7d20\uff0c\u5305\u62ec\u5b57\u7b26\u4e32\u3002\u5217\u8868\u6bd4\u6570\u7ec4\u8981\u5feb\uff0c\u5982\u679c\u9700\u8981\u5bf9\u6570\u7ec4\u548c\u77e9\u9635\u8fdb\u884c\u6570\u5b66\u8ba1\u7b97\uff0c\u53ef\u4ee5\u4f7f\u7528Numpy\u5e93\u4e4b\u7c7b\u7684\u65b9\u6cd5\uff0c\u672c\u7ae0\u7740\u91cd\u8ba8\u8bba\u5217\u8868\u7684\u5404\u79cd\u64cd\u4f5c\u65b9\u6cd5\u3002 \u521b\u5efa\u4e00\u4e2a\u5217\u8868\uff0c\u53ea\u8981\u628a\u9017\u53f7\u5206\u9694\u7684\u4e0d\u540c\u7684\u6570\u636e\u9879\u4f7f\u7528\u65b9\u62ec\u53f7\u62ec\u8d77\u6765\u5373\u53ef\u3002\u5982\u4e0b\u6240\u793a\uff1a list1 = ['Google', 'Baidu', 1997, 2000] list2 = [1, 2, 3, 4, 5 ] list3 = [\"a\", \"b\", \"c\", \"d\"] list4 = ['red', 'green', 'blue', 'yellow', 'white', 'black'] \u76ee\u5f55 1 \u5217\u8868 1.1 \u8bbf\u95ee\u5217\u8868\u4e2d\u7684\u503c 1.2 \u66f4\u65b0\u5217\u8868 1.2.1 \u4f7f\u7528append\u65b9\u6cd5 1.2.2 \u4f7f\u7528insert\u65b9\u6cd5 1.3 \u5220\u9664\u5217\u8868\u5143\u7d20 1.4 Python\u5217\u8868\u64cd\u4f5c\u7b26 1.5 Python-\u5217\u8868\u622a\u53d6\u4e0e\u62fc\u63a5 1.6 \u5d4c\u5957\u5217\u8868 1.7 python\u5217\u8868\u51fd\u6570\u548c\u65b9\u6cd5 2 \u521d\u7ea7\u641c\u7d22 2.1 index\u65b9\u6cd5\u67e5\u627e\u7d22\u5f15 2.2 for\u5faa\u73af\u83b7\u53d6\u7d22\u5f15 \u603b\u7ed3 \u8bfe\u540e\u7ec3\u4e60 \u95ee\u9898\u63cf\u8ff0 hints \u4efb\u52a1 1 \u5217\u8868 1.1 \u8bbf\u95ee\u5217\u8868\u4e2d\u7684\u503c \u4e0e\u5b57\u7b26\u4e32\u7684\u7d22\u5f15\u4e00\u6837\uff0c\u5217\u8868\u7d22\u5f15\u4ece 0 \u5f00\u59cb\uff0c\u7b2c\u4e8c\u4e2a\u7d22\u5f15\u662f 1 \uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002 \u901a\u8fc7\u7d22\u5f15\u5217\u8868\u53ef\u4ee5\u8fdb\u884c\u622a\u53d6\u3001\u7ec4\u5408\u7b49\u64cd\u4f5c\u3002 list = ['red', 'green', 'blue', 'yellow', 'white', 'black'] print(list[0]) print(list[1]) print(list[2]) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a red green blue \u7d22\u5f15\u4e5f\u53ef\u4ee5\u4ece\u5c3e\u90e8\u5f00\u59cb\uff0c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u7d22\u5f15\u4e3a -1 \uff0c\u5f80\u524d\u4e00\u4f4d\u4e3a -2 \uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002 list = ['red', 'green', 'blue', 'yellow', 'white', 'black'] print(list[-1]) print(list[-2]) print(list[-3]) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a black white yellow \u4f7f\u7528\u4e0b\u6807\u7d22\u5f15\u6765\u8bbf\u95ee\u5217\u8868\u4e2d\u7684\u503c\uff0c\u540c\u6837\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u65b9\u62ec\u53f7 [] \u7684\u5f62\u5f0f\u622a\u53d6\u5b57\u7b26\uff0c\u5982\u4e0b\u6240\u793a\uff1a nums = [10, 20, 30, 40, 50, 60, 70, 80, 90] print(nums[0:4]) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a [10, 20, 30, 40] \u4f7f\u7528\u8d1f\u6570\u7d22\u5f15\u503c\u622a\u53d6\uff1a list = ['Google', 'Amazon', \"Zhihu\", \"Taobao\", \"Wiki\"] # \u8bfb\u53d6\u7b2c\u4e8c\u4f4d print (\"list[1]: \", list[1]) # \u4ece\u7b2c\u4e8c\u4f4d\u5f00\u59cb\uff08\u5305\u542b\uff09\u622a\u53d6\u5230\u5012\u6570\u7b2c\u4e8c\u4f4d\uff08\u4e0d\u5305\u542b\uff09 print (\"list[1:-2]: \", list[1:-2]) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a list[1]: Amazon list[1:-2]: ['Amazon', 'Zhihu'] 1.2 \u66f4\u65b0\u5217\u8868 1.2.1 \u4f7f\u7528append()\u65b9\u6cd5 \u4f60\u53ef\u4ee5\u5bf9\u5217\u8868\u7684\u6570\u636e\u9879\u8fdb\u884c\u4fee\u6539\u6216\u66f4\u65b0\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 append() \u65b9\u6cd5\u6765\u6dfb\u52a0\u5217\u8868\u9879\uff0c\u5982\u4e0b\u6240\u793a\uff1a list = ['Google', 'Amazon', 1997, 2000] print (\"\u7b2c\u4e09\u4e2a\u5143\u7d20\u4e3a : \", list[2]) list[2] = 2001 print (\"\u66f4\u65b0\u540e\u7684\u7b2c\u4e09\u4e2a\u5143\u7d20\u4e3a : \", list[2]) list1 = ['Google', 'Amazon', 'Taobao'] list1.append('Baidu') #append()\u7528\u4e8e\u6dfb\u52a0\u5143\u7d20\u6dfb\u52a0\u5230\u5217\u8868\u6700\u540e\u4e00\u4f4d print (\"\u66f4\u65b0\u540e\u7684\u5217\u8868 : \", list1) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a \u7b2c\u4e09\u4e2a\u5143\u7d20\u4e3a : 1997 \u66f4\u65b0\u540e\u7684\u7b2c\u4e09\u4e2a\u5143\u7d20\u4e3a : 2001 \u66f4\u65b0\u540e\u7684\u5217\u8868 : ['Google', 'Amazon', 'Taobao', 'Baidu'] 1.2.2 \u4f7f\u7528insert()\u65b9\u6cd5 \u4f60\u8fd8\u53ef\u4ee5\u4f7f\u7528 insert() \u65b9\u6cd5\u5728\u5217\u8868\u7684\u6307\u5b9a\u4f4d\u7f6e\u63d2\u5165\u5143\u7d20\u3002 insert() \u65b9\u6cd5\u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a list.insert(index, obj) \u5176\u4e2d\uff0c index \u662f\u63d2\u5165\u4f4d\u7f6e\u7684\u7d22\u5f15\uff0c obj \u662f\u8981\u63d2\u5165\u7684\u5bf9\u8c61\u3002 \u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a list2 = ['Google', 'Amazon', 'Taobao'] list2.insert(1, 'Baidu') # \u5728\u7d22\u5f15\u4e3a1\u7684\u4f4d\u7f6e\u63d2\u5165'Baidu' print(\"\u63d2\u5165\u5143\u7d20\u540e\u7684\u5217\u8868\uff1a\", list2) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a \u63d2\u5165\u5143\u7d20\u540e\u7684\u5217\u8868\uff1a ['Google', 'Baidu', 'Amazon', 'Taobao'] 1.3 \u5220\u9664\u5217\u8868\u5143\u7d20 \u53ef\u4ee5\u4f7f\u7528 del \u8bed\u53e5\u6765\u5220\u9664\u5217\u8868\u4e2d\u7684\u5143\u7d20\uff0c\u5982\u4e0b\u5b9e\u4f8b\uff1a list = ['Google', 'Amazon', 1997, 2000] print (\"\u539f\u59cb\u5217\u8868 : \", list) del list[2] print (\"\u5220\u9664\u7b2c\u4e09\u4e2a\u5143\u7d20 : \", list) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a \u539f\u59cb\u5217\u8868 : ['Google', 'Amazon', 1997, 2000] \u5220\u9664\u7b2c\u4e09\u4e2a\u5143\u7d20 : ['Google', 'Amazon', 2000] 1.4 Python \u5217\u8868\u64cd\u4f5c\u7b26 \u5217\u8868\u5bf9 + \u548c * \u7684\u64cd\u4f5c\u7b26\u4e0e\u5b57\u7b26\u4e32\u76f8\u4f3c\u3002+ \u53f7\u7528\u4e8e\u7ec4\u5408\u5217\u8868\uff0c* \u53f7\u7528\u4e8e\u91cd\u590d\u5217\u8868\u3002 \u5982\u4e0b\u6240\u793a\uff1a Python \u8868\u8fbe\u5f0f \u7ed3\u679c \u63cf\u8ff0 len([1, 2, 3]) 3 \u957f\u5ea6 [1, 2, 3] + [4, 5, 6] [1, 2, 3, 4, 5, 6] \u7ec4\u5408 ['Hi!'] * 4 ['Hi!', 'Hi!', 'Hi!', 'Hi!'] \u91cd\u590d 3 in [1, 2, 3] True \u5143\u7d20\u662f\u5426\u5b58\u5728\u4e8e\u5217\u8868\u4e2d for x in [1, 2, 3]: print(x, end=\" \") 1 2 3 \u8fed\u4ee3 1.5 Python \u5217\u8868\u622a\u53d6\u4e0e\u62fc\u63a5 Python \u7684\u5217\u8868\u622a\u53d6\u4e0e\u5b57\u7b26\u4e32\u64cd\u4f5c\u7c7b\u4f3c\uff0c\u5982\u4e0b\u6240\u793a\uff1a L=['Google', 'Apple', 'Taobao'] \u64cd\u4f5c\uff1a Python \u8868\u8fbe\u5f0f \u7ed3\u679c \u63cf\u8ff0 L[2] 'Taobao' \u8bfb\u53d6\u7b2c\u4e09\u4e2a\u5143\u7d20 L[-2] 'Apple' \u4ece\u53f3\u4fa7\u5f00\u59cb\u8bfb\u53d6\u5012\u6570\u7b2c\u4e8c\u4e2a\u5143\u7d20: count from the right L[1:] ['Apple', 'Taobao'] \u8f93\u51fa\u4ece\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5f00\u59cb\u540e\u7684\u6240\u6709\u5143\u7d20 >>> L=['Google', 'Apple', 'Taobao'] >>> L[2] 'Taobao' >>> L[-2] 'Apple' >>> L[1:] ['Apple', 'Taobao'] >>> \u5217\u8868\u8fd8\u652f\u6301\u62fc\u63a5\u64cd\u4f5c\uff1a >>> squares = [1, 4, 9, 16, 25] >>> squares += [36, 49, 64, 81, 100] >>> squares [1, 4, 9, 16, 25, 36, 49, 64, 81, 100] >>> 1.6 \u5d4c\u5957\u5217\u8868 \u4f7f\u7528\u5d4c\u5957\u5217\u8868\u5373\u5728\u5217\u8868\u91cc\u521b\u5efa\u5176\u5b83\u5217\u8868\uff0c\u4f8b\u5982\uff1a >>> a = ['a', 'b', 'c'] >>> n = [1, 2, 3] >>> x = [a, n] >>> x [['a', 'b', 'c'], [1, 2, 3]] >>> x[0] ['a', 'b', 'c'] >>> x[0][1] 'b' 1.7 Python \u5217\u8868\u51fd\u6570\u548c\u65b9\u6cd5 Python\u5305\u542b\u4ee5\u4e0b\u51fd\u6570: \u5e8f\u53f7 \u51fd\u6570 1 len(list) \u5217\u8868\u5143\u7d20\u4e2a\u6570 2 max(list) \u8fd4\u56de\u5217\u8868\u5143\u7d20\u6700\u5927\u503c 3 min(list)\u8fd4\u56de\u5217\u8868\u5143\u7d20\u6700\u5c0f\u503c 4 list(seq)\u5c06\u5143\u7ec4\u8f6c\u6362\u4e3a\u5217\u8868 Python\u5305\u542b\u4ee5\u4e0b\u65b9\u6cd5: \u5e8f\u53f7 \u65b9\u6cd5 1 list.append(obj) \u5728\u5217\u8868\u672b\u5c3e\u6dfb\u52a0\u65b0\u7684\u5bf9\u8c61 2 list.count(obj) \u7edf\u8ba1\u67d0\u4e2a\u5143\u7d20\u5728\u5217\u8868\u4e2d\u51fa\u73b0\u7684\u6b21\u6570 3 list.extend(seq) \u5728\u5217\u8868\u672b\u5c3e\u4e00\u6b21\u6027\u8ffd\u52a0\u53e6\u4e00\u4e2a\u5e8f\u5217\u4e2d\u7684\u591a\u4e2a\u503c\uff08\u7528\u65b0\u5217\u8868\u6269\u5c55\u539f\u6765\u7684\u5217\u8868\uff09 4 list.index(obj) \u4ece\u5217\u8868\u4e2d\u627e\u51fa\u67d0\u4e2a\u503c\u7b2c\u4e00\u4e2a\u5339\u914d\u9879\u7684\u7d22\u5f15\u4f4d\u7f6e 5 list.insert(index, obj) \u5c06\u5bf9\u8c61\u63d2\u5165\u5217\u8868 6 list.pop([index=-1]) \u79fb\u9664\u5217\u8868\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20\uff08\u9ed8\u8ba4\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff09\uff0c\u5e76\u4e14\u8fd4\u56de\u8be5\u5143\u7d20\u7684\u503c 7 list.remove(obj) \u79fb\u9664\u5217\u8868\u4e2d\u67d0\u4e2a\u503c\u7684\u7b2c\u4e00\u4e2a\u5339\u914d\u9879 8 list.reverse() \u53cd\u5411\u5217\u8868\u4e2d\u5143\u7d20 9 list.sort( key=None, reverse=False) \u5bf9\u539f\u5217\u8868\u8fdb\u884c\u6392\u5e8f 10 list.clear() \u6e05\u7a7a\u5217\u8868 11 list.copy() \u590d\u5236\u5217\u8868 2 \u521d\u7ea7\u641c\u7d22 2.1 index()\u65b9\u6cd5\u67e5\u627e\u7d22\u5f15 Python \u7684\u5185\u7f6e index() \u65b9\u6cd5\u53ef\u4ee5\u88ab\u7528\u4f5c\u641c\u7d22\u5de5\u5177\uff0c index() \u65b9\u6cd5\u7684\u8bed\u6cd5\u5982\u4e0b\u6240\u793a\uff1a my_list.index(item, start, end) my_list \u662f\u4f60\u6b63\u5728\u641c\u7d22\u7684\u5217\u8868\u7684\u540d\u79f0\u3002 .index() \u662f\u91c7\u7528\u4e09\u4e2a\u53c2\u6570\u7684\u641c\u7d22\u65b9\u6cd5\uff0c\u4e00\u4e2a\u53c2\u6570\u662f\u5fc5\u9700\u7684\uff0c\u53e6\u5916\u4e24\u4e2a\u662f\u53ef\u9009\u7684\u3002 item \u662f\u5fc5\u9700\u7684\u53c2\u6570\uff0c\u5b83\u662f\u4f60\u8981\u641c\u7d22\u5176\u7d22\u5f15\u7684\u5143\u7d20\u3002 start \u662f\u7b2c\u4e00\u4e2a\u53ef\u9009\u53c2\u6570\uff0c\u8fd9\u662f\u4f60\u5f00\u59cb\u641c\u7d22\u7684\u7d22\u5f15\u3002 end \u662f\u7b2c\u4e8c\u4e2a\u53ef\u9009\u53c2\u6570\uff0c\u8fd9\u662f\u4f60\u5c06\u7ed3\u675f\u641c\u7d22\u7684\u7d22\u5f15\u3002 \u793a\u4f8b\uff1a programming_languages = [\"JavaScript\",\"Python\",\"Java\",\"C++\"] print(programming_languages.index(\"Python\")) \u8f93\u51fa\u4e3a\uff1a 1 \u4f20\u9012\u7684\u53c2\u6570\u662f\u533a\u5206\u5927\u5c0f\u5199\u7684\u3002\u8fd9\u610f\u5473\u7740\u5982\u679c\u4f60\u4f20\u9012\u7684\u662f \u201cpython\u201d\uff0c\u800c\u4e0d\u662f \u201cPython\u201d\uff0c\u4f60\u5c06\u6536\u5230\u4e00\u4e2a\u9519\u8bef\uff0c\u56e0\u4e3a\u5e26\u6709\u5c0f\u5199 \u201cp\u201d \u7684 \u201cpython\u201d \u4e0d\u662f\u5217\u8868\u7684\u4e00\u90e8\u5206\u3002 \u5f53\u7136\u4e0a\u9762\u8fd9\u79cdindex\u65b9\u6cd5\u6709\u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u70b9\uff1a\u5982\u679c\u6211\u4eecindex\u627e\u4e0d\u5230\u641c\u7d22\u7684\u503c\uff0c\u5c31\u4f1a\u62a5\u9519\uff0c\u7c7b\u4f3c\uff1a programming_languages = [\"JavaScript\",\"Python\",\"Java\",\"C++\"] print(programming_languages.index(\"C\")) \u62a5\u9519\u4e3a\uff1a print(programming_languages.index(\"C\")) ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ValueError: 'C' is not in list \u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u9519\u8bef\u7684\u53d1\u751f\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528if-else\u7684\u65b9\u6cd5\u6765\u907f\u514d\u7cfb\u7edf\u62a5\u9519\uff0c\u793a\u4f8b\u4e3a\uff1a def find_index(lst, item): if item in lst: return lst.index(item) # \u5982\u679c\u627e\u5230\uff0c\u8fd4\u56de\u8be5\u503c else: return -1 # \u5426\u5219\u8fd4\u56de-1 programming_languages = [\"JavaScript\", \"Python\", \"Java\", \"C++\"] print(find_index(programming_languages, \"Python\")) # \u8f93\u51fa: 1 print(find_index(programming_languages, \"python\")) # \u8f93\u51fa: -1 \u8f93\u51fa\u4e3a\uff1a 1 -1 2.2 for\u5faa\u73af\u83b7\u53d6\u7d22\u5f15 \u4e0b\u9762\u5217\u8868\u51fa\u73b0\u4e86\u4e09\u4e2a\u5b57\u7b26\u4e32 \u201cPython\u201d\u3002 programming_languages = [\"JavaScript\",\"Python\",\"Java\",\"Python\",\"C++\",\"Python\"] \u9996\u5148\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7a7a\u5217\u8868\uff0c\u7528\u4e8e\u5b58\u50a8 \u201cPython\u201d \u6240\u6709\u7d22\u5f15\u7684\u5217\u8868\u3002 programming_languages = [\"JavaScript\",\"Python\",\"Java\",\"Python\",\"C++\",\"Python\"] python_indices = [] \u63a5\u4e0b\u6765\uff0c\u4f7f\u7528 for \u5faa\u73af\uff0c\u5e76\u4f7f\u7528 append() \u65b9\u6cd5\u5c06\u5143\u7d20\u6dfb\u52a0\u5230\u5217\u8868\u4e2d\u3002 programming_languages = [\"JavaScript\",\"Python\",\"Java\",\"Python\",\"C++\",\"Python\"] python_indices = [] for i in range(len(programming_languages)): if programming_languages[i] == \"Python\": python_indices.append(i) print(python_indices) \u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a [1, 3, 5] \u5f53\u7136\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7d22\u5f15\u6765\u904d\u5386\u5185\u5bb9\uff0c programming_languages = [\"JavaScript\",\"Python\",\"Java\",\"Python\",\"C++\",\"Python\"] for i in range(3): print(programming_languages[i]) \u7ed3\u679c\u4e3a\uff1a JavaScript Python Java \u603b\u7ed3 Python\u5217\u8868\u662f\u4e00\u79cd\u7075\u6d3b\u4e14\u5e38\u7528\u7684\u6570\u636e\u7ed3\u6784\uff0c\u53ef\u4ee5\u5b58\u50a8\u548c\u64cd\u4f5c\u4efb\u610f\u7c7b\u578b\u7684\u5143\u7d20\uff0c\u9002\u7528\u4e8e\u5404\u79cd\u7f16\u7a0b\u4efb\u52a1\u3002\u66f4\u591a\u9ad8\u7ea7\u641c\u7d22\u65b9\u5f0f\u5982\u4e8c\u5206\u641c\u7d22\uff08Binary Search\uff09\u6563\u5217\u641c\u7d22\uff08Hash Search\uff09\uff0c\u540c\u5b66\u4eec\u4f1a\u5728\u8fdb\u9636\u7684\u7b97\u6cd5\u4e0e\u6570\u636e\u7ed3\u6784\u5185\u5bb9\u4e2d\u63a5\u89e6\u3002 \u8bfe\u540e\u7ec3\u4e60 \u95ee\u9898\u63cf\u8ff0 \u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u5305\u542b\u591a\u4e2a\u59d3\u540d\u7684\u5217\u8868\u3002\u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570\u6765\u641c\u7d22\u4e00\u4e2a\u7ed9\u5b9a\u59d3\u540d\u5728\u5217\u8868\u4e2d\u7684\u4f4d\u7f6e\uff0c\u5e76\u8fd4\u56de\u5176\u7d22\u5f15\u3002\u5982\u679c\u627e\u4e0d\u5230\u5339\u914d\u7684\u59d3\u540d\uff0c\u5219\u8fd4\u56de -1\u3002 Hints \u5728\u4e3b\u7a0b\u5e8f\u4e2d\uff0c\u521b\u5efa\u4e00\u4e2a\u5305\u542b\u591a\u4e2a\u59d3\u540d\u7684\u5217\u8868\u3002\u7136\u540e\u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570\uff0c\u901a\u8fc7\u904d\u5386\u5217\u8868\u627e\u5230\u76ee\u6807\u59d3\u540d\u7684\u4f4d\u7f6e\uff0c\u5e76\u8fd4\u56de\u5176\u7d22\u5f15\u3002\u5982\u679c\u627e\u4e0d\u5230\uff0c\u8fd4\u56de -1\u3002 \u4efb\u52a1 \u521b\u5efa\u59d3\u540d\u5217\u8868: \u5728\u4e3b\u7a0b\u5e8f\u4e2d\uff0c\u521b\u5efa\u4e00\u4e2a\u5305\u542b\u591a\u4e2a\u59d3\u540d\u7684\u5217\u8868\u3002 \u7ebf\u6027\u641c\u7d22\u51fd\u6570: \u5b9e\u73b0\u4e00\u4e2a linear_search \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u5305\u542b\u59d3\u540d\u7684\u5217\u8868\u548c\u4e00\u4e2a\u5b57\u7b26\u4e32\u53c2\u6570\uff08\u8981\u641c\u7d22\u7684\u59d3\u540d\uff09\u3002\u5728\u8fd9\u4e2a\u51fd\u6570\u4e2d\uff0c\u4f7f\u7528\u7b80\u5355\u7684 for \u5faa\u73af\u904d\u5386\u5217\u8868\uff0c\u9010\u4e2a\u6bd4\u8f83\u6bcf\u4e2a\u59d3\u540d\u662f\u5426\u4e0e\u76ee\u6807\u59d3\u540d\u5339\u914d\u3002 3.\u8fd4\u56de\u7ed3\u679c: \u5982\u679c\u627e\u5230\u5339\u914d\u7684\u59d3\u540d\uff0c\u8fd4\u56de\u8be5\u59d3\u540d\u5728\u5217\u8868\u4e2d\u7684\u7d22\u5f15\uff1b\u5982\u679c\u627e\u4e0d\u5230\uff0c\u8fd4\u56de -1\u3002 \u4ee3\u7801\u793a\u4f8b\uff1a def linear_search(name_list, target_name): for index in range(len(name_list)): if name_list[index] == target_name: return index return -1 # \u793a\u4f8b\u7528\u6cd5 names = [\"Alice\", \"Bob\", \"Charlie\", \"David\", \"Eve\"] # \u641c\u7d22 \"Bob\" \u7684\u4f4d\u7f6e index = linear_search(names, \"Bob\") print(f\"Bob's index is: {index}\") # \u8f93\u51fa: Bob's index is: 1 # \u641c\u7d22 \"Frank\" \u7684\u4f4d\u7f6e index = linear_search(names, \"Frank\") print(f\"Frank's index is: {index}\") # \u8f93\u51fa: Frank's index is: -1 \u53c2\u8003\u8f93\u51fa\uff1a Bob's index is: 1 Frank's index is: -1","title":"Lesson 5 \u5217\u8868\u4e0e\u521d\u7ea7\u641c\u7d22"},{"location":"lesson5/Lesson5%20Python/#lesson-5","text":"\u5199\u5728\u524d\u9762\uff1a \u6570\u7ec4\u5728Java\uff0cC / C ++\uff0cJavaScript\u7b49\u5927\u591a\u6570\u7f16\u7a0b\u8bed\u8a00\u4e2d\u90fd\u5f88\u6d41\u884c\u3002\u4f46\u662f\uff0c\u5728Python\u4e2d\uff0c\u5b83\u4eec\u5e76\u4e0d\u5e38\u89c1\u3002\u4eba\u4eec\u7ecf\u5e38\u8c08\u8bbaPython\u6570\u7ec4\u65f6\uff0c\u4ed6\u4eec\u8c08\u8bba\u7684\u662fPython\u5217\u8868\u3002 \u5217\u8868\u6bd4\u6570\u7ec4\u7075\u6d3b\u5f97\u591a\u3002\u5b83\u4eec\u53ef\u4ee5\u5b58\u50a8\u4e0d\u540c\u6570\u636e\u7c7b\u578b\u7684\u5143\u7d20\uff0c\u5305\u62ec\u5b57\u7b26\u4e32\u3002\u5217\u8868\u6bd4\u6570\u7ec4\u8981\u5feb\uff0c\u5982\u679c\u9700\u8981\u5bf9\u6570\u7ec4\u548c\u77e9\u9635\u8fdb\u884c\u6570\u5b66\u8ba1\u7b97\uff0c\u53ef\u4ee5\u4f7f\u7528Numpy\u5e93\u4e4b\u7c7b\u7684\u65b9\u6cd5\uff0c\u672c\u7ae0\u7740\u91cd\u8ba8\u8bba\u5217\u8868\u7684\u5404\u79cd\u64cd\u4f5c\u65b9\u6cd5\u3002 \u521b\u5efa\u4e00\u4e2a\u5217\u8868\uff0c\u53ea\u8981\u628a\u9017\u53f7\u5206\u9694\u7684\u4e0d\u540c\u7684\u6570\u636e\u9879\u4f7f\u7528\u65b9\u62ec\u53f7\u62ec\u8d77\u6765\u5373\u53ef\u3002\u5982\u4e0b\u6240\u793a\uff1a list1 = ['Google', 'Baidu', 1997, 2000] list2 = [1, 2, 3, 4, 5 ] list3 = [\"a\", \"b\", \"c\", \"d\"] list4 = ['red', 'green', 'blue', 'yellow', 'white', 'black']","title":"Lesson 5 \u5217\u8868\u4e0e\u521d\u7ea7\u641c\u7d22"},{"location":"lesson5/Lesson5%20Python/#_1","text":"1 \u5217\u8868 1.1 \u8bbf\u95ee\u5217\u8868\u4e2d\u7684\u503c 1.2 \u66f4\u65b0\u5217\u8868 1.2.1 \u4f7f\u7528append\u65b9\u6cd5 1.2.2 \u4f7f\u7528insert\u65b9\u6cd5 1.3 \u5220\u9664\u5217\u8868\u5143\u7d20 1.4 Python\u5217\u8868\u64cd\u4f5c\u7b26 1.5 Python-\u5217\u8868\u622a\u53d6\u4e0e\u62fc\u63a5 1.6 \u5d4c\u5957\u5217\u8868 1.7 python\u5217\u8868\u51fd\u6570\u548c\u65b9\u6cd5 2 \u521d\u7ea7\u641c\u7d22 2.1 index\u65b9\u6cd5\u67e5\u627e\u7d22\u5f15 2.2 for\u5faa\u73af\u83b7\u53d6\u7d22\u5f15 \u603b\u7ed3 \u8bfe\u540e\u7ec3\u4e60 \u95ee\u9898\u63cf\u8ff0 hints \u4efb\u52a1","title":"\u76ee\u5f55"},{"location":"lesson5/Lesson5%20Python/#1","text":"","title":"1 \u5217\u8868"},{"location":"lesson5/Lesson5%20Python/#11","text":"\u4e0e\u5b57\u7b26\u4e32\u7684\u7d22\u5f15\u4e00\u6837\uff0c\u5217\u8868\u7d22\u5f15\u4ece 0 \u5f00\u59cb\uff0c\u7b2c\u4e8c\u4e2a\u7d22\u5f15\u662f 1 \uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002 \u901a\u8fc7\u7d22\u5f15\u5217\u8868\u53ef\u4ee5\u8fdb\u884c\u622a\u53d6\u3001\u7ec4\u5408\u7b49\u64cd\u4f5c\u3002 list = ['red', 'green', 'blue', 'yellow', 'white', 'black'] print(list[0]) print(list[1]) print(list[2]) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a red green blue \u7d22\u5f15\u4e5f\u53ef\u4ee5\u4ece\u5c3e\u90e8\u5f00\u59cb\uff0c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u7d22\u5f15\u4e3a -1 \uff0c\u5f80\u524d\u4e00\u4f4d\u4e3a -2 \uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002 list = ['red', 'green', 'blue', 'yellow', 'white', 'black'] print(list[-1]) print(list[-2]) print(list[-3]) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a black white yellow \u4f7f\u7528\u4e0b\u6807\u7d22\u5f15\u6765\u8bbf\u95ee\u5217\u8868\u4e2d\u7684\u503c\uff0c\u540c\u6837\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u65b9\u62ec\u53f7 [] \u7684\u5f62\u5f0f\u622a\u53d6\u5b57\u7b26\uff0c\u5982\u4e0b\u6240\u793a\uff1a nums = [10, 20, 30, 40, 50, 60, 70, 80, 90] print(nums[0:4]) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a [10, 20, 30, 40] \u4f7f\u7528\u8d1f\u6570\u7d22\u5f15\u503c\u622a\u53d6\uff1a list = ['Google', 'Amazon', \"Zhihu\", \"Taobao\", \"Wiki\"] # \u8bfb\u53d6\u7b2c\u4e8c\u4f4d print (\"list[1]: \", list[1]) # \u4ece\u7b2c\u4e8c\u4f4d\u5f00\u59cb\uff08\u5305\u542b\uff09\u622a\u53d6\u5230\u5012\u6570\u7b2c\u4e8c\u4f4d\uff08\u4e0d\u5305\u542b\uff09 print (\"list[1:-2]: \", list[1:-2]) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a list[1]: Amazon list[1:-2]: ['Amazon', 'Zhihu']","title":"1.1 \u8bbf\u95ee\u5217\u8868\u4e2d\u7684\u503c"},{"location":"lesson5/Lesson5%20Python/#12","text":"","title":"1.2 \u66f4\u65b0\u5217\u8868"},{"location":"lesson5/Lesson5%20Python/#121-append","text":"\u4f60\u53ef\u4ee5\u5bf9\u5217\u8868\u7684\u6570\u636e\u9879\u8fdb\u884c\u4fee\u6539\u6216\u66f4\u65b0\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 append() \u65b9\u6cd5\u6765\u6dfb\u52a0\u5217\u8868\u9879\uff0c\u5982\u4e0b\u6240\u793a\uff1a list = ['Google', 'Amazon', 1997, 2000] print (\"\u7b2c\u4e09\u4e2a\u5143\u7d20\u4e3a : \", list[2]) list[2] = 2001 print (\"\u66f4\u65b0\u540e\u7684\u7b2c\u4e09\u4e2a\u5143\u7d20\u4e3a : \", list[2]) list1 = ['Google', 'Amazon', 'Taobao'] list1.append('Baidu') #append()\u7528\u4e8e\u6dfb\u52a0\u5143\u7d20\u6dfb\u52a0\u5230\u5217\u8868\u6700\u540e\u4e00\u4f4d print (\"\u66f4\u65b0\u540e\u7684\u5217\u8868 : \", list1) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a \u7b2c\u4e09\u4e2a\u5143\u7d20\u4e3a : 1997 \u66f4\u65b0\u540e\u7684\u7b2c\u4e09\u4e2a\u5143\u7d20\u4e3a : 2001 \u66f4\u65b0\u540e\u7684\u5217\u8868 : ['Google', 'Amazon', 'Taobao', 'Baidu']","title":"1.2.1 \u4f7f\u7528append()\u65b9\u6cd5"},{"location":"lesson5/Lesson5%20Python/#122-insert","text":"\u4f60\u8fd8\u53ef\u4ee5\u4f7f\u7528 insert() \u65b9\u6cd5\u5728\u5217\u8868\u7684\u6307\u5b9a\u4f4d\u7f6e\u63d2\u5165\u5143\u7d20\u3002 insert() \u65b9\u6cd5\u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a list.insert(index, obj) \u5176\u4e2d\uff0c index \u662f\u63d2\u5165\u4f4d\u7f6e\u7684\u7d22\u5f15\uff0c obj \u662f\u8981\u63d2\u5165\u7684\u5bf9\u8c61\u3002 \u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a list2 = ['Google', 'Amazon', 'Taobao'] list2.insert(1, 'Baidu') # \u5728\u7d22\u5f15\u4e3a1\u7684\u4f4d\u7f6e\u63d2\u5165'Baidu' print(\"\u63d2\u5165\u5143\u7d20\u540e\u7684\u5217\u8868\uff1a\", list2) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a \u63d2\u5165\u5143\u7d20\u540e\u7684\u5217\u8868\uff1a ['Google', 'Baidu', 'Amazon', 'Taobao']","title":"1.2.2 \u4f7f\u7528insert()\u65b9\u6cd5"},{"location":"lesson5/Lesson5%20Python/#13","text":"\u53ef\u4ee5\u4f7f\u7528 del \u8bed\u53e5\u6765\u5220\u9664\u5217\u8868\u4e2d\u7684\u5143\u7d20\uff0c\u5982\u4e0b\u5b9e\u4f8b\uff1a list = ['Google', 'Amazon', 1997, 2000] print (\"\u539f\u59cb\u5217\u8868 : \", list) del list[2] print (\"\u5220\u9664\u7b2c\u4e09\u4e2a\u5143\u7d20 : \", list) \u4ee5\u4e0a\u5b9e\u4f8b\u8f93\u51fa\u7ed3\u679c\uff1a \u539f\u59cb\u5217\u8868 : ['Google', 'Amazon', 1997, 2000] \u5220\u9664\u7b2c\u4e09\u4e2a\u5143\u7d20 : ['Google', 'Amazon', 2000]","title":"1.3 \u5220\u9664\u5217\u8868\u5143\u7d20"},{"location":"lesson5/Lesson5%20Python/#14-python","text":"\u5217\u8868\u5bf9 + \u548c * \u7684\u64cd\u4f5c\u7b26\u4e0e\u5b57\u7b26\u4e32\u76f8\u4f3c\u3002+ \u53f7\u7528\u4e8e\u7ec4\u5408\u5217\u8868\uff0c* \u53f7\u7528\u4e8e\u91cd\u590d\u5217\u8868\u3002 \u5982\u4e0b\u6240\u793a\uff1a Python \u8868\u8fbe\u5f0f \u7ed3\u679c \u63cf\u8ff0 len([1, 2, 3]) 3 \u957f\u5ea6 [1, 2, 3] + [4, 5, 6] [1, 2, 3, 4, 5, 6] \u7ec4\u5408 ['Hi!'] * 4 ['Hi!', 'Hi!', 'Hi!', 'Hi!'] \u91cd\u590d 3 in [1, 2, 3] True \u5143\u7d20\u662f\u5426\u5b58\u5728\u4e8e\u5217\u8868\u4e2d for x in [1, 2, 3]: print(x, end=\" \") 1 2 3 \u8fed\u4ee3","title":"1.4 Python \u5217\u8868\u64cd\u4f5c\u7b26"},{"location":"lesson5/Lesson5%20Python/#15-python","text":"Python \u7684\u5217\u8868\u622a\u53d6\u4e0e\u5b57\u7b26\u4e32\u64cd\u4f5c\u7c7b\u4f3c\uff0c\u5982\u4e0b\u6240\u793a\uff1a L=['Google', 'Apple', 'Taobao'] \u64cd\u4f5c\uff1a Python \u8868\u8fbe\u5f0f \u7ed3\u679c \u63cf\u8ff0 L[2] 'Taobao' \u8bfb\u53d6\u7b2c\u4e09\u4e2a\u5143\u7d20 L[-2] 'Apple' \u4ece\u53f3\u4fa7\u5f00\u59cb\u8bfb\u53d6\u5012\u6570\u7b2c\u4e8c\u4e2a\u5143\u7d20: count from the right L[1:] ['Apple', 'Taobao'] \u8f93\u51fa\u4ece\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5f00\u59cb\u540e\u7684\u6240\u6709\u5143\u7d20 >>> L=['Google', 'Apple', 'Taobao'] >>> L[2] 'Taobao' >>> L[-2] 'Apple' >>> L[1:] ['Apple', 'Taobao'] >>> \u5217\u8868\u8fd8\u652f\u6301\u62fc\u63a5\u64cd\u4f5c\uff1a >>> squares = [1, 4, 9, 16, 25] >>> squares += [36, 49, 64, 81, 100] >>> squares [1, 4, 9, 16, 25, 36, 49, 64, 81, 100] >>>","title":"1.5 Python \u5217\u8868\u622a\u53d6\u4e0e\u62fc\u63a5"},{"location":"lesson5/Lesson5%20Python/#16","text":"\u4f7f\u7528\u5d4c\u5957\u5217\u8868\u5373\u5728\u5217\u8868\u91cc\u521b\u5efa\u5176\u5b83\u5217\u8868\uff0c\u4f8b\u5982\uff1a >>> a = ['a', 'b', 'c'] >>> n = [1, 2, 3] >>> x = [a, n] >>> x [['a', 'b', 'c'], [1, 2, 3]] >>> x[0] ['a', 'b', 'c'] >>> x[0][1] 'b'","title":"1.6 \u5d4c\u5957\u5217\u8868"},{"location":"lesson5/Lesson5%20Python/#17-python","text":"Python\u5305\u542b\u4ee5\u4e0b\u51fd\u6570: \u5e8f\u53f7 \u51fd\u6570 1 len(list) \u5217\u8868\u5143\u7d20\u4e2a\u6570 2 max(list) \u8fd4\u56de\u5217\u8868\u5143\u7d20\u6700\u5927\u503c 3 min(list)\u8fd4\u56de\u5217\u8868\u5143\u7d20\u6700\u5c0f\u503c 4 list(seq)\u5c06\u5143\u7ec4\u8f6c\u6362\u4e3a\u5217\u8868 Python\u5305\u542b\u4ee5\u4e0b\u65b9\u6cd5: \u5e8f\u53f7 \u65b9\u6cd5 1 list.append(obj) \u5728\u5217\u8868\u672b\u5c3e\u6dfb\u52a0\u65b0\u7684\u5bf9\u8c61 2 list.count(obj) \u7edf\u8ba1\u67d0\u4e2a\u5143\u7d20\u5728\u5217\u8868\u4e2d\u51fa\u73b0\u7684\u6b21\u6570 3 list.extend(seq) \u5728\u5217\u8868\u672b\u5c3e\u4e00\u6b21\u6027\u8ffd\u52a0\u53e6\u4e00\u4e2a\u5e8f\u5217\u4e2d\u7684\u591a\u4e2a\u503c\uff08\u7528\u65b0\u5217\u8868\u6269\u5c55\u539f\u6765\u7684\u5217\u8868\uff09 4 list.index(obj) \u4ece\u5217\u8868\u4e2d\u627e\u51fa\u67d0\u4e2a\u503c\u7b2c\u4e00\u4e2a\u5339\u914d\u9879\u7684\u7d22\u5f15\u4f4d\u7f6e 5 list.insert(index, obj) \u5c06\u5bf9\u8c61\u63d2\u5165\u5217\u8868 6 list.pop([index=-1]) \u79fb\u9664\u5217\u8868\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20\uff08\u9ed8\u8ba4\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff09\uff0c\u5e76\u4e14\u8fd4\u56de\u8be5\u5143\u7d20\u7684\u503c 7 list.remove(obj) \u79fb\u9664\u5217\u8868\u4e2d\u67d0\u4e2a\u503c\u7684\u7b2c\u4e00\u4e2a\u5339\u914d\u9879 8 list.reverse() \u53cd\u5411\u5217\u8868\u4e2d\u5143\u7d20 9 list.sort( key=None, reverse=False) \u5bf9\u539f\u5217\u8868\u8fdb\u884c\u6392\u5e8f 10 list.clear() \u6e05\u7a7a\u5217\u8868 11 list.copy() \u590d\u5236\u5217\u8868","title":"1.7 Python \u5217\u8868\u51fd\u6570\u548c\u65b9\u6cd5"},{"location":"lesson5/Lesson5%20Python/#2","text":"","title":"2 \u521d\u7ea7\u641c\u7d22"},{"location":"lesson5/Lesson5%20Python/#21-index","text":"Python \u7684\u5185\u7f6e index() \u65b9\u6cd5\u53ef\u4ee5\u88ab\u7528\u4f5c\u641c\u7d22\u5de5\u5177\uff0c index() \u65b9\u6cd5\u7684\u8bed\u6cd5\u5982\u4e0b\u6240\u793a\uff1a my_list.index(item, start, end) my_list \u662f\u4f60\u6b63\u5728\u641c\u7d22\u7684\u5217\u8868\u7684\u540d\u79f0\u3002 .index() \u662f\u91c7\u7528\u4e09\u4e2a\u53c2\u6570\u7684\u641c\u7d22\u65b9\u6cd5\uff0c\u4e00\u4e2a\u53c2\u6570\u662f\u5fc5\u9700\u7684\uff0c\u53e6\u5916\u4e24\u4e2a\u662f\u53ef\u9009\u7684\u3002 item \u662f\u5fc5\u9700\u7684\u53c2\u6570\uff0c\u5b83\u662f\u4f60\u8981\u641c\u7d22\u5176\u7d22\u5f15\u7684\u5143\u7d20\u3002 start \u662f\u7b2c\u4e00\u4e2a\u53ef\u9009\u53c2\u6570\uff0c\u8fd9\u662f\u4f60\u5f00\u59cb\u641c\u7d22\u7684\u7d22\u5f15\u3002 end \u662f\u7b2c\u4e8c\u4e2a\u53ef\u9009\u53c2\u6570\uff0c\u8fd9\u662f\u4f60\u5c06\u7ed3\u675f\u641c\u7d22\u7684\u7d22\u5f15\u3002 \u793a\u4f8b\uff1a programming_languages = [\"JavaScript\",\"Python\",\"Java\",\"C++\"] print(programming_languages.index(\"Python\")) \u8f93\u51fa\u4e3a\uff1a 1 \u4f20\u9012\u7684\u53c2\u6570\u662f\u533a\u5206\u5927\u5c0f\u5199\u7684\u3002\u8fd9\u610f\u5473\u7740\u5982\u679c\u4f60\u4f20\u9012\u7684\u662f \u201cpython\u201d\uff0c\u800c\u4e0d\u662f \u201cPython\u201d\uff0c\u4f60\u5c06\u6536\u5230\u4e00\u4e2a\u9519\u8bef\uff0c\u56e0\u4e3a\u5e26\u6709\u5c0f\u5199 \u201cp\u201d \u7684 \u201cpython\u201d \u4e0d\u662f\u5217\u8868\u7684\u4e00\u90e8\u5206\u3002 \u5f53\u7136\u4e0a\u9762\u8fd9\u79cdindex\u65b9\u6cd5\u6709\u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u70b9\uff1a\u5982\u679c\u6211\u4eecindex\u627e\u4e0d\u5230\u641c\u7d22\u7684\u503c\uff0c\u5c31\u4f1a\u62a5\u9519\uff0c\u7c7b\u4f3c\uff1a programming_languages = [\"JavaScript\",\"Python\",\"Java\",\"C++\"] print(programming_languages.index(\"C\")) \u62a5\u9519\u4e3a\uff1a print(programming_languages.index(\"C\")) ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ValueError: 'C' is not in list \u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u9519\u8bef\u7684\u53d1\u751f\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528if-else\u7684\u65b9\u6cd5\u6765\u907f\u514d\u7cfb\u7edf\u62a5\u9519\uff0c\u793a\u4f8b\u4e3a\uff1a def find_index(lst, item): if item in lst: return lst.index(item) # \u5982\u679c\u627e\u5230\uff0c\u8fd4\u56de\u8be5\u503c else: return -1 # \u5426\u5219\u8fd4\u56de-1 programming_languages = [\"JavaScript\", \"Python\", \"Java\", \"C++\"] print(find_index(programming_languages, \"Python\")) # \u8f93\u51fa: 1 print(find_index(programming_languages, \"python\")) # \u8f93\u51fa: -1 \u8f93\u51fa\u4e3a\uff1a 1 -1","title":"2.1 index()\u65b9\u6cd5\u67e5\u627e\u7d22\u5f15"},{"location":"lesson5/Lesson5%20Python/#22-for","text":"\u4e0b\u9762\u5217\u8868\u51fa\u73b0\u4e86\u4e09\u4e2a\u5b57\u7b26\u4e32 \u201cPython\u201d\u3002 programming_languages = [\"JavaScript\",\"Python\",\"Java\",\"Python\",\"C++\",\"Python\"] \u9996\u5148\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u7a7a\u5217\u8868\uff0c\u7528\u4e8e\u5b58\u50a8 \u201cPython\u201d \u6240\u6709\u7d22\u5f15\u7684\u5217\u8868\u3002 programming_languages = [\"JavaScript\",\"Python\",\"Java\",\"Python\",\"C++\",\"Python\"] python_indices = [] \u63a5\u4e0b\u6765\uff0c\u4f7f\u7528 for \u5faa\u73af\uff0c\u5e76\u4f7f\u7528 append() \u65b9\u6cd5\u5c06\u5143\u7d20\u6dfb\u52a0\u5230\u5217\u8868\u4e2d\u3002 programming_languages = [\"JavaScript\",\"Python\",\"Java\",\"Python\",\"C++\",\"Python\"] python_indices = [] for i in range(len(programming_languages)): if programming_languages[i] == \"Python\": python_indices.append(i) print(python_indices) \u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a [1, 3, 5] \u5f53\u7136\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7d22\u5f15\u6765\u904d\u5386\u5185\u5bb9\uff0c programming_languages = [\"JavaScript\",\"Python\",\"Java\",\"Python\",\"C++\",\"Python\"] for i in range(3): print(programming_languages[i]) \u7ed3\u679c\u4e3a\uff1a JavaScript Python Java","title":"2.2 for\u5faa\u73af\u83b7\u53d6\u7d22\u5f15"},{"location":"lesson5/Lesson5%20Python/#_2","text":"Python\u5217\u8868\u662f\u4e00\u79cd\u7075\u6d3b\u4e14\u5e38\u7528\u7684\u6570\u636e\u7ed3\u6784\uff0c\u53ef\u4ee5\u5b58\u50a8\u548c\u64cd\u4f5c\u4efb\u610f\u7c7b\u578b\u7684\u5143\u7d20\uff0c\u9002\u7528\u4e8e\u5404\u79cd\u7f16\u7a0b\u4efb\u52a1\u3002\u66f4\u591a\u9ad8\u7ea7\u641c\u7d22\u65b9\u5f0f\u5982\u4e8c\u5206\u641c\u7d22\uff08Binary Search\uff09\u6563\u5217\u641c\u7d22\uff08Hash Search\uff09\uff0c\u540c\u5b66\u4eec\u4f1a\u5728\u8fdb\u9636\u7684\u7b97\u6cd5\u4e0e\u6570\u636e\u7ed3\u6784\u5185\u5bb9\u4e2d\u63a5\u89e6\u3002","title":"\u603b\u7ed3"},{"location":"lesson5/Lesson5%20Python/#_3","text":"","title":"\u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson5/Lesson5%20Python/#_4","text":"\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u5305\u542b\u591a\u4e2a\u59d3\u540d\u7684\u5217\u8868\u3002\u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570\u6765\u641c\u7d22\u4e00\u4e2a\u7ed9\u5b9a\u59d3\u540d\u5728\u5217\u8868\u4e2d\u7684\u4f4d\u7f6e\uff0c\u5e76\u8fd4\u56de\u5176\u7d22\u5f15\u3002\u5982\u679c\u627e\u4e0d\u5230\u5339\u914d\u7684\u59d3\u540d\uff0c\u5219\u8fd4\u56de -1\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson5/Lesson5%20Python/#hints","text":"\u5728\u4e3b\u7a0b\u5e8f\u4e2d\uff0c\u521b\u5efa\u4e00\u4e2a\u5305\u542b\u591a\u4e2a\u59d3\u540d\u7684\u5217\u8868\u3002\u7136\u540e\u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570\uff0c\u901a\u8fc7\u904d\u5386\u5217\u8868\u627e\u5230\u76ee\u6807\u59d3\u540d\u7684\u4f4d\u7f6e\uff0c\u5e76\u8fd4\u56de\u5176\u7d22\u5f15\u3002\u5982\u679c\u627e\u4e0d\u5230\uff0c\u8fd4\u56de -1\u3002","title":"Hints"},{"location":"lesson5/Lesson5%20Python/#_5","text":"\u521b\u5efa\u59d3\u540d\u5217\u8868: \u5728\u4e3b\u7a0b\u5e8f\u4e2d\uff0c\u521b\u5efa\u4e00\u4e2a\u5305\u542b\u591a\u4e2a\u59d3\u540d\u7684\u5217\u8868\u3002 \u7ebf\u6027\u641c\u7d22\u51fd\u6570: \u5b9e\u73b0\u4e00\u4e2a linear_search \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u63a5\u53d7\u4e00\u4e2a\u5305\u542b\u59d3\u540d\u7684\u5217\u8868\u548c\u4e00\u4e2a\u5b57\u7b26\u4e32\u53c2\u6570\uff08\u8981\u641c\u7d22\u7684\u59d3\u540d\uff09\u3002\u5728\u8fd9\u4e2a\u51fd\u6570\u4e2d\uff0c\u4f7f\u7528\u7b80\u5355\u7684 for \u5faa\u73af\u904d\u5386\u5217\u8868\uff0c\u9010\u4e2a\u6bd4\u8f83\u6bcf\u4e2a\u59d3\u540d\u662f\u5426\u4e0e\u76ee\u6807\u59d3\u540d\u5339\u914d\u3002 3.\u8fd4\u56de\u7ed3\u679c: \u5982\u679c\u627e\u5230\u5339\u914d\u7684\u59d3\u540d\uff0c\u8fd4\u56de\u8be5\u59d3\u540d\u5728\u5217\u8868\u4e2d\u7684\u7d22\u5f15\uff1b\u5982\u679c\u627e\u4e0d\u5230\uff0c\u8fd4\u56de -1\u3002 \u4ee3\u7801\u793a\u4f8b\uff1a def linear_search(name_list, target_name): for index in range(len(name_list)): if name_list[index] == target_name: return index return -1 # \u793a\u4f8b\u7528\u6cd5 names = [\"Alice\", \"Bob\", \"Charlie\", \"David\", \"Eve\"] # \u641c\u7d22 \"Bob\" \u7684\u4f4d\u7f6e index = linear_search(names, \"Bob\") print(f\"Bob's index is: {index}\") # \u8f93\u51fa: Bob's index is: 1 # \u641c\u7d22 \"Frank\" \u7684\u4f4d\u7f6e index = linear_search(names, \"Frank\") print(f\"Frank's index is: {index}\") # \u8f93\u51fa: Frank's index is: -1 \u53c2\u8003\u8f93\u51fa\uff1a Bob's index is: 1 Frank's index is: -1","title":"\u4efb\u52a1"},{"location":"lesson6/Lesson6%20C%2B%2B/","text":"Lesson6 Leetcode\u5165\u95e8/\u5e38\u7528\u7684\u5b57\u7b26\u4e32\u51fd\u6570/Leetcode\u5b57\u7b26\u4e32\u7ec3\u4e60 1. Leetcode\u5165\u95e8 1.1 \u521d\u8bc6Leetcode LeetCode\u662f\u4e00\u4e2a\u5728\u7ebf\u7f16\u7a0b\u7ade\u6280\u5e73\u53f0\uff0c\u65e8\u5728\u5e2e\u52a9\u200c\u7a0b\u5e8f\u5458\u63d0\u5347\u7f16\u7a0b\u6280\u80fd\u548c\u89e3\u51b3\u7b97\u6cd5\u95ee\u9898\u3002\u5b83\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u9898\u5e93\uff0c\u5305\u62ec\u5404\u79cd\u7f16\u7a0b\u8bed\u8a00\u7684\u9898\u76ee\uff0c\u8986\u76d6\u4e86\u7b97\u6cd5\u3001\u200c\u6570\u636e\u7ed3\u6784\u3001\u200c\u7cfb\u7edf\u8bbe\u8ba1\u7b49\u591a\u4e2a\u9886\u57df\u3002LeetCode\u4e0d\u4ec5\u662f\u4e00\u4e2a\u7ec3\u4e60\u5e73\u53f0\uff0c\u4e5f\u662f\u4e00\u4e2a\u6280\u672f\u793e\u533a\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u4e0a\u9762\u63d0\u4ea4\u4ee3\u7801\u89e3\u51b3\u65b9\u6848\uff0c\u5e76\u4e0e\u5176\u4ed6\u5f00\u53d1\u8005\u4ea4\u6d41\u5b66\u4e60\u3002 \u5b98\u7f51\uff1ahttps://leetcode.cn \u9996\u5148\u5728\u83dc\u5355\u4e2d\u70b9\u51fb\u2018\u9898\u5e93\u2019\uff1a \u641c\u7d22\u6846\u4e2d\u53ef\u4ee5\u8f93\u5165\u9898\u53f7\u3001\u6807\u9898\u7b49\u67e5\u627e\u76f8\u5e94\u9898\u76ee \u641c\u7d22\u65f6\u53ef\u4ee5\u8bbe\u7f6e\u9898\u76ee\u96be\u5ea6 1.2 Leetcode \u9898\u76ee \u9898\u76ee\u63cf\u8ff0\uff1a \u6587\u5b57\u63cf\u8ff0 \u5b9e\u4f8b\uff1a\u7ed9\u4e00\u4e9b\u6709\u4ee3\u8868\u6027\u7684\u8f93\u5165\u4e0e\u8f93\u51fa\uff0c\u5e76\u7ed9\u51fa\u89e3\u91ca \u63d0\u793a\uff1a\u7ed9\u51fa\u4e00\u4e9b\u53d8\u91cf\u5728test case\u4e2d\u7684\u8303\u56f4 \u4ee5\u4e0b\u7528LC35\u9898\u4f5c\u4e3a\u4f8b\u5b50 1.3 Leetcode\u9898\u89e3 \u9898\u89e3\uff1a\u70b9\u51fb\u9898\u89e3\u540e\u5373\u53ef\u67e5\u770b\u8be5\u9898\u7684\u51e0\u79cd\u89e3\u6cd5 1.4 Leetcode\u63d0\u4ea4\u8bb0\u5f55 \u70b9\u51fb\u2018\u63d0\u4ea4\u8bb0\u5f55\u2019\u53ef\u67e5\u770b\u4ee5\u5f80\u63d0\u4ea4\u5185\u5bb9 \u70b9\u51fb\u5176\u4e2d\u4e00\u6761\uff0c\u5373\u51fa\u73b0\u8be5\u6b21\u63d0\u4ea4\u7684\u8be6\u60c5\uff0c\u5305\u62ec\u6027\u80fd\u4e0e\u4ee3\u7801\u5185\u5bb9 1.5 Leetcode\u505a\u9898\u5206\u6790 \u70b9\u51fb\u5934\u50cf\uff0c\u67e5\u770b\u505a\u9898\u5206\u6790\u3001\u8fdb\u5ea6\u7ba1\u7406\u7b49\uff0c\u5373\u53ef\u67e5\u770b\u81ea\u5df1\u7684\u505a\u9898\u5185\u5bb9 \u4e0b\u9762\u662f\u4e00\u4e2a\u5e38\u7528\u7684C++\u5b57\u7b26\u4e32\u65b9\u6cd5\u7684\u8868\u683c\uff0c\u5c55\u793a\u4e86C++\u4e2d\u5e38\u89c1\u7684\u5b57\u7b26\u4e32\u64cd\u4f5c\u53ca\u5176\u63cf\u8ff0\uff1a \u5e8f\u53f7 \u65b9\u6cd5\u53ca\u63cf\u8ff0 1 str.size() \u6216 str.length() \u8fd4\u56de\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002 2 str.empty() \u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u7a7a\u3002 3 str[index] \u6216 str.at(index) \u8bbf\u95ee\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u3002 at() \u5e26\u6709\u8d8a\u754c\u68c0\u67e5\u3002 4 str.find(subStr) \u67e5\u627e\u5b50\u5b57\u7b26\u4e32\u5728\u5f53\u524d\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e\uff0c\u8fd4\u56de\u627e\u5230\u7684\u7d22\u5f15\u6216 std::string::npos \u3002 5 str.substr(pos, len) \u63d0\u53d6\u4ece\u4f4d\u7f6e pos \u5f00\u59cb\u7684\u957f\u5ea6\u4e3a len \u7684\u5b50\u5b57\u7b26\u4e32\u3002 6 str.append(str2) \u6216 str += str2 \u5c06\u5b57\u7b26\u4e32 str2 \u6dfb\u52a0\u5230\u5f53\u524d\u5b57\u7b26\u4e32 str \u7684\u672b\u5c3e\u3002 7 str.insert(pos, str2) \u5728\u4f4d\u7f6e pos \u63d2\u5165\u5b57\u7b26\u4e32 str2 \u3002 8 str.erase(pos, len) \u5220\u9664\u4ece\u4f4d\u7f6e pos \u5f00\u59cb\u957f\u5ea6\u4e3a len \u7684\u5b50\u5b57\u7b26\u4e32\u3002 9 std::string::npos \u5e38\u91cf\uff0c\u7528\u4e8e\u8868\u793a\u5b57\u7b26\u4e32\u4e2d\u4e0d\u5b58\u5728\u5b50\u5b57\u7b26\u4e32\u65f6\u7684\u8fd4\u56de\u503c\u3002 10 str.clear() \u6e05\u7a7a\u5b57\u7b26\u4e32\u5185\u5bb9\uff0c\u4f7f\u5176\u957f\u5ea6\u53d8\u4e3a0\u3002 11 str.swap(str2) \u4ea4\u6362\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\u3002 12 std::reverse(str.begin(), str.end()) \u53cd\u8f6c\u5b57\u7b26\u4e32\u7684\u5b57\u7b26\u987a\u5e8f\u3002 3. Leetcode \u9898\u76ee\u7ec3\u4e60 \u4ece\u672c\u8282\u8bfe\u7a0b\u5f00\u59cb\uff0c\u6211\u4eec\u5c06\u7ed3\u5408Leetcode\u4e0a\u7684\u7ecf\u5178\u9898\u76ee\u8fdb\u884c\u6559\u5b66 \u4f8b\u9898\u8bb2\u89e3 LC 58 \u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u5b57\u6570 \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u7531\u82e5\u5e72\u5355\u8bcd\u7ec4\u6210\uff0c\u5355\u8bcd\u524d\u540e\u7528\u4e00\u4e9b\u7a7a\u683c\u5b57\u7b26\u9694\u5f00\u3002\u8fd4\u56de\u5b57\u7b26\u4e32\u4e2d \u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6 \u3002 \u5355\u8bcd \u662f\u6307\u4ec5\u7531\u5b57\u6bcd\u7ec4\u6210\u3001\u4e0d\u5305\u542b\u4efb\u4f55\u7a7a\u683c\u5b57\u7b26\u7684\u6700\u5927\u5b50\u5b57\u7b26\u4e32\u3002 \u601d\u8def \u53bb\u9664\u5b57\u7b26\u4e32\u672b\u5c3e\u7684\u7a7a\u683c : \u5b57\u7b26\u4e32\u53ef\u80fd\u5728\u672b\u5c3e\u5305\u542b\u7a7a\u683c\uff0c\u6211\u4eec\u9996\u5148\u8981\u53bb\u6389\u8fd9\u4e9b\u7a7a\u683c\uff0c\u4ee5\u4fbf\u51c6\u786e\u627e\u5230\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u3002 \u4ece\u5b57\u7b26\u4e32\u672b\u5c3e\u5f00\u59cb\u5411\u524d\u904d\u5386 : \u4ece\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u5f00\u59cb\u5411\u524d\u904d\u5386\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u540e\u7ee7\u7eed\u8ba1\u6570\uff0c\u76f4\u5230\u627e\u5230\u7a7a\u683c\u6216\u8005\u5230\u8fbe\u5b57\u7b26\u4e32\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u8fd9\u6bb5\u8ba1\u6570\u5c31\u662f\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6\u3002 \u53c2\u8003\u89e3\u7b54 \u53cd\u5411\u904d\u5386\u65b9\u6cd5 \uff1a \u4ece\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u5f00\u59cb\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u975e\u7a7a\u683c\u5b57\u7b26\uff0c\u8fd9\u4e2a\u5b57\u7b26\u662f\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\u3002 \u4ece\u8fd9\u4e2a\u5b57\u6bcd\u5f00\u59cb\u53cd\u5411\u904d\u5386\uff0c\u76f4\u5230\u9047\u5230\u7a7a\u683c\u6216\u8005\u5230\u8fbe\u5b57\u7b26\u4e32\u7684\u8d77\u59cb\u4f4d\u7f6e\u3002\u904d\u5386\u5230\u7684\u6bcf\u4e2a\u5b57\u6bcd\u90fd\u662f\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u4e00\u90e8\u5206\u3002 \u904d\u5386\u5230\u7684\u5b57\u6bcd\u6570\u91cf\u5373\u4e3a\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6\u3002 class Solution { public: int lengthOfLastWord(string s) { int index = s.length() - 1; // \u8df3\u8fc7\u5c3e\u90e8\u7a7a\u683c while (index >= 0 && s[index] == ' ') { index--; } int wordLength = 0; // \u8ba1\u7b97\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6 while (index >= 0 && s[index] != ' ') { wordLength++; index--; } return wordLength; } }; LC434. \u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd\u6570 \u95ee\u9898\u63cf\u8ff0 \u7edf\u8ba1\u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd\u4e2a\u6570\uff0c\u8fd9\u91cc\u7684\u5355\u8bcd\u6307\u7684\u662f\u8fde\u7eed\u7684\u4e0d\u662f\u7a7a\u683c\u7684\u5b57\u7b26\u3002 \u8bf7\u6ce8\u610f\uff0c\u4f60\u53ef\u4ee5\u5047\u5b9a\u5b57\u7b26\u4e32\u91cc\u4e0d\u5305\u62ec\u4efb\u4f55\u4e0d\u53ef\u6253\u5370\u7684\u5b57\u7b26\u3002 \u9898\u76ee\u5206\u6790 \u6211\u4eec\u9700\u8981\u7edf\u8ba1\u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd\u4e2a\u6570\uff0c\u5355\u8bcd\u662f\u7531\u8fde\u7eed\u7684\u975e\u7a7a\u683c\u5b57\u7b26\u7ec4\u6210\u7684\u3002\u7a7a\u683c\u53ef\u4ee5\u7528\u6765\u5206\u9694\u5355\u8bcd\u3002\u9898\u76ee\u4fdd\u8bc1\u5b57\u7b26\u4e32\u4e2d\u6ca1\u6709\u4e0d\u53ef\u6253\u5370\u5b57\u7b26\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u5904\u7406\u7279\u6b8a\u5b57\u7b26\u3002 \u601d\u8def \u5e38\u89c4\u601d\u8def 1. \u53bb\u9664\u591a\u4f59\u7a7a\u683c : \u5728\u5904\u7406\u5b57\u7b26\u4e32\u4e4b\u524d\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u8003\u8651\u5982\u4f55\u5904\u7406\u5b57\u7b26\u4e32\u4e2d\u53ef\u80fd\u5b58\u5728\u7684\u591a\u4f59\u7a7a\u683c\u95ee\u9898\uff08\u5982\u524d\u540e\u7a7a\u683c\u6216\u591a\u91cd\u7a7a\u683c\uff09\u3002\u4f46\u5b9e\u9645\u5b9e\u73b0\u4e2d\uff0c\u901a\u5e38\u4e0d\u9700\u8981\u4e13\u95e8\u53bb\u9664\u7a7a\u683c\uff0c\u53ea\u9700\u8981\u6b63\u786e\u5730\u5206\u5272\u5355\u8bcd\u5373\u53ef\u3002 \u68c0\u6d4b\u4e00\u4e2a\u5355\u8bcd\u7684\u5f00\u59cb\uff1a - s[i] != ' ' \uff1a\u5f53\u524d\u5b57\u7b26\u4e0d\u662f\u7a7a\u683c\u3002 - (i == 0 || s[i - 1] == ' ') \uff1a\u5f53\u524d\u5b57\u7b26\u662f\u7b2c\u4e00\u4e2a\u5b57\u7b26\uff0c\u6216\u8005\u524d\u4e00\u4e2a\u5b57\u7b26\u662f\u7a7a\u683c\u3002 \u6ee1\u8db3\u8fd9\u4e24\u4e2a\u6761\u4ef6\u65f6\uff0c\u610f\u5473\u7740\u6211\u4eec\u9047\u5230\u4e00\u4e2a\u65b0\u7684\u5355\u8bcd\uff0c\u4e8e\u662f\u8ba1\u6570\u5668 count \u589e\u52a0\u3002 \u904d\u5386\u5b57\u7b26\u4e32 : \u6211\u4eec\u53ef\u4ee5\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u5e76\u5728\u9047\u5230\u975e\u7a7a\u683c\u5b57\u7b26\u65f6\uff0c\u8bc6\u522b\u5230\u4e00\u4e2a\u65b0\u7684\u5355\u8bcd\u5f00\u59cb\u3002\u5f53\u9047\u5230\u7a7a\u683c\u5b57\u7b26\u65f6\uff0c\u5219\u8868\u793a\u5f53\u524d\u5355\u8bcd\u7ed3\u675f\u3002 \u8bb0\u5f55\u5355\u8bcd\u6570\u91cf : \u4f7f\u7528\u4e00\u4e2a\u8ba1\u6570\u5668\uff0c\u5f53\u68c0\u6d4b\u5230\u4e00\u4e2a\u5355\u8bcd\u7684\u5f00\u59cb\u65f6\uff0c\u8ba1\u6570\u5668\u52a01\u3002 class Solution { public: int countSegments(string s) { int count = 0; // \u904d\u5386\u5b57\u7b26\u4e32 for (int i = 0; i < s.length(); i++) { // \u68c0\u67e5\u5f53\u524d\u5b57\u7b26\u662f\u5426\u4e3a\u975e\u7a7a\u683c\u5b57\u7b26\u4e14\u524d\u4e00\u4e2a\u5b57\u7b26\u4e3a\u7a7a\u683c\u5b57\u7b26 if (s[i] != ' ' && (i == 0 || s[i - 1] == ' ')) { count++; } } return count; } }; \u4e3e\u4e00\u53cd\u4e09 LC709. \u8f6c\u6362\u6210\u5c0f\u5199\u5b57\u6bcd \u95ee\u9898\u63cf\u8ff0 \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u5c06\u8be5\u5b57\u7b26\u4e32\u4e2d\u7684\u5927\u5199\u5b57\u6bcd\u8f6c\u6362\u6210\u76f8\u540c\u7684\u5c0f\u5199\u5b57\u6bcd\uff0c\u8fd4\u56de\u65b0\u7684\u5b57\u7b26\u4e32\uff0c\u67e5\u627e\u5e76\u4f7f\u7528\u5408\u9002\u7684\u5b57\u7b26\u4e32\u51fd\u6570\u89e3\u7b54\u5373\u53ef\u3002 \u4ee3\u7801\u5b9e\u73b0 class Solution { public: string toLowerCase(string s) { for (int i = 0; i < s.length(); i++) { // \u4f7f\u7528tolower\u51fd\u6570\u5c06\u5b57\u7b26\u8f6c\u6362\u4e3a\u5c0f\u5199 s[i] = tolower(s[i]); } return s; } }; LC520. \u68c0\u6d4b\u5927\u5199\u5b57\u6bcd \u95ee\u9898\u63cf\u8ff0 \u6211\u4eec\u5b9a\u4e49\uff0c\u5728\u4ee5\u4e0b\u60c5\u51b5\u4e0b\uff0c\u5355\u8bcd\u7684\u5927\u5199\u7528\u6cd5\u662f\u6b63\u786e\u7684\uff1a \u5168\u90e8\u5b57\u6bcd\u90fd\u662f\u5927\u5199\uff0c\u6bd4\u5982 \"USA\" \u3002 \u5355\u8bcd\u4e2d\u6240\u6709\u5b57\u6bcd\u90fd\u4e0d\u662f\u5927\u5199\uff0c\u6bd4\u5982 \"leetcode\" \u3002 \u5982\u679c\u5355\u8bcd\u4e0d\u53ea\u542b\u6709\u4e00\u4e2a\u5b57\u6bcd\uff0c\u53ea\u6709\u9996\u5b57\u6bcd\u5927\u5199\uff0c\u6bd4\u5982 \"Google\" \u3002 \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 word \u3002\u5982\u679c\u5927\u5199\u7528\u6cd5\u6b63\u786e\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002 \u9898\u76ee\u5206\u6790 \u8fd9\u4e2a\u95ee\u9898\u8981\u6c42\u6211\u4eec\u5224\u65ad\u4e00\u4e2a\u5355\u8bcd\u7684\u5927\u5c0f\u5199\u662f\u5426\u7b26\u5408\u7279\u5b9a\u7684\u89c4\u5219\u3002\u5177\u4f53\u7684\u89c4\u5219\u5305\u62ec\uff1a \u5168\u90e8\u5b57\u6bcd\u90fd\u662f\u5927\u5199 \uff0c\u4f8b\u5982 \"USA\" \u3002 \u5168\u90e8\u5b57\u6bcd\u90fd\u4e0d\u662f\u5927\u5199 \uff0c\u4f8b\u5982 \"leetcode\" \u3002 \u53ea\u6709\u9996\u5b57\u6bcd\u5927\u5199 \uff0c\u4f8b\u5982 \"Google\" \u3002 \u5982\u679c\u4e00\u4e2a\u5355\u8bcd\u7b26\u5408\u4ee5\u4e0a\u4efb\u610f\u4e00\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u8fd4\u56de true \uff0c\u5426\u5219\u8fd4\u56de false \u3002 \u601d\u8def\u8bb2\u89e3 \u5224\u65ad\u5168\u5927\u5199 \uff1a\u4f7f\u7528 toupper() \u65b9\u6cd5\uff0c\u628a\u5355\u8bcd\u8f6c\u6362\u4e3a\u5927\u5199\uff0c\u7136\u540e\u68c0\u67e5\u8f6c\u6362\u540e\u7684\u5355\u8bcd\u662f\u5426\u548c\u539f\u59cb\u5355\u8bcd\u76f8\u540c\u3002\u5982\u679c\u76f8\u540c\uff0c\u8bf4\u660e\u6240\u6709\u5b57\u6bcd\u90fd\u5927\u5199\u3002 \u5224\u65ad\u5168\u5c0f\u5199 \uff1a\u7c7b\u4f3c\u7684\uff0c\u4f7f\u7528 tolower() \u65b9\u6cd5\uff0c\u628a\u5355\u8bcd\u8f6c\u6362\u4e3a\u5c0f\u5199\uff0c\u7136\u540e\u68c0\u67e5\u8f6c\u6362\u540e\u7684\u5355\u8bcd\u662f\u5426\u548c\u539f\u59cb\u5355\u8bcd\u76f8\u540c\u3002\u5982\u679c\u76f8\u540c\uff0c\u8bf4\u660e\u6240\u6709\u5b57\u6bcd\u90fd\u5c0f\u5199\u3002 \u5224\u65ad\u9996\u5b57\u6bcd\u5927\u5199 \uff1a\u9996\u5148\u68c0\u67e5\u9996\u5b57\u6bcd\u662f\u5426\u5927\u5199\uff08\u53ef\u4ee5\u4f7f\u7528 Character.isupper() \u65b9\u6cd5\uff09\uff0c\u7136\u540e\u68c0\u67e5\u5269\u4e0b\u7684\u5b57\u6bcd\u662f\u5426\u5168\u90e8\u662f\u5c0f\u5199\u3002 \u5f52\u7eb3 \uff1a\u5982\u679c\u6ee1\u8db3\u4ee5\u4e0a\u4efb\u4f55\u4e00\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u5c31\u8fd4\u56de true \uff0c\u5426\u5219\u8fd4\u56de false \u3002 \u4ee3\u7801\u5b9e\u73b0 \u5e38\u89c4\u89e3\u6cd5 class Solution { public: bool detectCapitalUse(string word) { // \u82e5\u7b2c 1 \u4e2a\u5b57\u6bcd\u4e3a\u5c0f\u5199\uff0c\u5219\u9700\u989d\u5916\u5224\u65ad\u7b2c 2 \u4e2a\u5b57\u6bcd\u662f\u5426\u4e3a\u5927\u5199 if (word.length() >= 2 && islower(word[0]) && isupper(word[1])) { return false; } // \u65e0\u8bba\u7b2c 1 \u4e2a\u5b57\u6bcd\u662f\u5426\u5927\u5199\uff0c\u5176\u4ed6\u5b57\u6bcd\u5fc5\u987b\u4e0e\u7b2c 2 \u4e2a\u5b57\u6bcd\u7684\u5927\u5c0f\u5199\u76f8\u540c for (int i = 2; i < word.length(); ++i) { if (islower(word[i]) ^ islower(word[1])) { return false; } } return true; } }; LC521. \u6700\u957f\u7279\u6b8a\u5e8f\u5217 \u2160 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u4f60\u4e24\u4e2a\u5b57\u7b26\u4e32 a \u548c b \uff0c\u8bf7\u8fd4\u56de\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u6700\u957f\u7684\u7279\u6b8a\u5e8f\u5217\u7684\u957f\u5ea6\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de -1 \u3002 \u6700\u957f\u7279\u6b8a\u5e8f\u5217 \u5b9a\u4e49\u5982\u4e0b\uff1a\u8be5\u5e8f\u5217\u4e3a\u67d0\u5b57\u7b26\u4e32\u72ec\u6709\u7684\u6700\u957f\u5b50\u5e8f\u5217\uff08\u5373\u4e0d\u80fd\u662f\u5176\u4ed6\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\uff09\u3002 \u5b57\u7b26\u4e32 s \u7684\u5b50\u5e8f\u5217\u662f\u5728\u4ece s \u4e2d\u5220\u9664\u4efb\u610f\u6570\u91cf\u7684\u5b57\u7b26\u540e\u53ef\u4ee5\u83b7\u5f97\u7684\u5b57\u7b26\u4e32\u3002\u4f8b\u5982\uff0c\"abc\" \u662f \"aebdc\" \u7684\u5b50\u5e8f\u5217\uff0c\u56e0\u4e3a\u5220\u9664 \"aebdc\" \u4e2d\u659c\u4f53\u52a0\u7c97\u7684\u5b57\u7b26\u53ef\u4ee5\u5f97\u5230 \"abc\"\u3002 \"aebdc\" \u7684\u5b50\u5e8f\u5217\u8fd8\u5305\u62ec \"aebdc\"\u3001\"aeb\" \u548c \"\"\uff08\u7a7a\u5b57\u7b26\u4e32\uff09\u3002 \u63d0\u793a \u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u4e0d\u4f1a\u8d85\u8fc7\u8be5\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002\u82e5\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u7b49\u4e8e\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff0c\u90a3\u4e48\u5b50\u5e8f\u5217\u5c31\u662f\u8be5\u5b57\u7b26\u4e32\u3002 \u82e5\u4e24\u5b57\u7b26\u4e32\u4e0d\u76f8\u540c\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u8f83\u957f\u7684\u5b57\u7b26\u4e32\u4f5c\u4e3a\u6700\u957f\u7279\u6b8a\u5e8f\u5217\uff0c\u663e\u7136\u5b83\u4e0d\u4f1a\u662f\u8f83\u77ed\u7684\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\u3002\u7279\u522b\u5730\uff0c\u5f53\u4e24\u5b57\u7b26\u4e32\u957f\u5ea6\u76f8\u540c\u65f6\uff08\u4f46\u4e0d\u662f\u540c\u4e00\u5b57\u7b26\u4e32\uff09\uff0c\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u9009\u62e9\u5176\u4e2d\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32\u4f5c\u4e3a\u6700\u957f\u7279\u6b8a\u5e8f\u5217\uff0c\u5b83\u4e0d\u4f1a\u662f\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\u3002 \u82e5\u4e24\u5b57\u7b26\u4e32\u76f8\u540c\uff0c\u90a3\u4e48\u4efb\u4e00\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\u5747\u4f1a\u51fa\u73b0\u5728\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\uff0c\u6b64\u65f6\u5e94\u8fd4\u56de \u22121\u3002 \u9898\u76ee\u5206\u6790 \u8fd9\u4e2a\u95ee\u9898\u8981\u6c42\u6211\u4eec\u627e\u5230\u4e24\u4e2a\u5b57\u7b26\u4e32 a \u548c b \u7684\u6700\u957f\u7279\u6b8a\u5e8f\u5217\u3002\u6839\u636e\u9898\u76ee\u4e2d\u7684\u5b9a\u4e49\uff0c\u6700\u957f\u7279\u6b8a\u5e8f\u5217\u662f\u6307\u5728\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u72ec\u6709\u7684\u6700\u957f\u5b50\u5e8f\u5217\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\uff0c\u90a3\u4e48\u5b83\u4e0d\u662f\u7279\u6b8a\u5e8f\u5217\u3002\u6211\u4eec\u7684\u76ee\u6807\u662f\u627e\u5230\u6700\u957f\u7684\u7279\u6b8a\u5e8f\u5217\u7684\u957f\u5ea6\u3002 \u601d\u8def \u5b57\u7b26\u4e32\u76f8\u7b49\u7684\u60c5\u51b5 : \u5982\u679c\u5b57\u7b26\u4e32 a \u548c b \u76f8\u7b49\uff0c\u90a3\u4e48\u6bcf\u4e2a\u5b50\u5e8f\u5217\u5728\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u4e5f\u662f\u5b58\u5728\u7684\u3002\u56e0\u6b64\uff0c\u4e0d\u53ef\u80fd\u6709\u72ec\u6709\u7684\u5b50\u5e8f\u5217\uff0c\u76f4\u63a5\u8fd4\u56de -1 \u3002 \u5b57\u7b26\u4e32\u4e0d\u76f8\u7b49\u7684\u60c5\u51b5 : \u5982\u679c\u5b57\u7b26\u4e32 a \u548c b \u4e0d\u76f8\u7b49\uff0c\u90a3\u4e48\u8f83\u957f\u7684\u5b57\u7b26\u4e32\u672c\u8eab\u5c31\u662f\u5b83\u7684\u6700\u957f\u7279\u6b8a\u5e8f\u5217\uff0c\u56e0\u4e3a\u5b83\u4e0d\u80fd\u5b8c\u5168\u51fa\u73b0\u5728\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u3002\u6b64\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u8f83\u957f\u7684\u90a3\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002 \u4ee3\u7801\u5b9e\u73b0 \u76f4\u89c2\u7248\u672c class Solution { public: int findLUSlength(string a, string b) { // \u5982\u679c\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e0d\u540c\uff0c\u8fd4\u56de\u957f\u5ea6\u8f83\u957f\u7684\u5b57\u7b26\u4e32 if (a != b) { return max(a.length(), b.length()); } // \u5982\u679c\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u540c\uff0c\u8fd4\u56de -1 return -1; } }; \u7b80\u6d01\u7248\u672c class Solution { public: int findLUSlength(string a, string b) { return a != b ? max(a.length(), b.length()) : -1; } }; \u8bfe\u540e\u7ec3\u4e60 \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC551 Student Attendence Record I \u7ed9\u5b9a\u4e00\u4e2a\u5b66\u751f\u7684\u51fa\u52e4\u8bb0\u5f55\uff0c\u5224\u65ad\u8be5\u5b66\u751f\u662f\u5426\u5b58\u5728\u8fde\u7eed\u7684\u4e09\u5929\u7f3a\u52e4\u6216\u6709\u8d85\u8fc710\u5929\u7684\u65f7\u8bfe\u3002 LC657 Robot Return to Origin \u5224\u65ad\u7ed9\u5b9a\u7684\u673a\u5668\u4eba\u79fb\u52a8\u6307\u4ee4\u662f\u5426\u4f7f\u673a\u5668\u4eba\u56de\u5230\u539f\u70b9\u3002 LC1078 Occurrences After Bigram \u7ed9\u5b9a\u4e00\u4e2a\u6587\u672c\u548c\u4e00\u4e2a\u5927\u5b57\u5178\uff0c\u627e\u51fa\u5927\u5b57\u5178\u4e2d\u51fa\u73b0\u7684\u5355\u8bcd\u5728\u6587\u672c\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u3002 LC557 Reverse Words in a String III \u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e2a\u5355\u8bcd\uff0c\u4fdd\u6301\u5355\u8bcd\u7684\u987a\u5e8f\u4e0d\u53d8\u3002","title":"Lesson6 Leetcode\u5165\u95e8/\u5e38\u7528\u7684\u5b57\u7b26\u4e32\u51fd\u6570/Leetcode\u5b57\u7b26\u4e32\u7ec3\u4e60"},{"location":"lesson6/Lesson6%20C%2B%2B/#lesson6-leetcodeleetcode","text":"","title":"Lesson6 Leetcode\u5165\u95e8/\u5e38\u7528\u7684\u5b57\u7b26\u4e32\u51fd\u6570/Leetcode\u5b57\u7b26\u4e32\u7ec3\u4e60"},{"location":"lesson6/Lesson6%20C%2B%2B/#1-leetcode","text":"","title":"1. Leetcode\u5165\u95e8"},{"location":"lesson6/Lesson6%20C%2B%2B/#11-leetcode","text":"LeetCode\u662f\u4e00\u4e2a\u5728\u7ebf\u7f16\u7a0b\u7ade\u6280\u5e73\u53f0\uff0c\u65e8\u5728\u5e2e\u52a9\u200c\u7a0b\u5e8f\u5458\u63d0\u5347\u7f16\u7a0b\u6280\u80fd\u548c\u89e3\u51b3\u7b97\u6cd5\u95ee\u9898\u3002\u5b83\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u9898\u5e93\uff0c\u5305\u62ec\u5404\u79cd\u7f16\u7a0b\u8bed\u8a00\u7684\u9898\u76ee\uff0c\u8986\u76d6\u4e86\u7b97\u6cd5\u3001\u200c\u6570\u636e\u7ed3\u6784\u3001\u200c\u7cfb\u7edf\u8bbe\u8ba1\u7b49\u591a\u4e2a\u9886\u57df\u3002LeetCode\u4e0d\u4ec5\u662f\u4e00\u4e2a\u7ec3\u4e60\u5e73\u53f0\uff0c\u4e5f\u662f\u4e00\u4e2a\u6280\u672f\u793e\u533a\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u4e0a\u9762\u63d0\u4ea4\u4ee3\u7801\u89e3\u51b3\u65b9\u6848\uff0c\u5e76\u4e0e\u5176\u4ed6\u5f00\u53d1\u8005\u4ea4\u6d41\u5b66\u4e60\u3002 \u5b98\u7f51\uff1ahttps://leetcode.cn \u9996\u5148\u5728\u83dc\u5355\u4e2d\u70b9\u51fb\u2018\u9898\u5e93\u2019\uff1a \u641c\u7d22\u6846\u4e2d\u53ef\u4ee5\u8f93\u5165\u9898\u53f7\u3001\u6807\u9898\u7b49\u67e5\u627e\u76f8\u5e94\u9898\u76ee \u641c\u7d22\u65f6\u53ef\u4ee5\u8bbe\u7f6e\u9898\u76ee\u96be\u5ea6","title":"1.1 \u521d\u8bc6Leetcode"},{"location":"lesson6/Lesson6%20C%2B%2B/#12-leetcode","text":"\u9898\u76ee\u63cf\u8ff0\uff1a \u6587\u5b57\u63cf\u8ff0 \u5b9e\u4f8b\uff1a\u7ed9\u4e00\u4e9b\u6709\u4ee3\u8868\u6027\u7684\u8f93\u5165\u4e0e\u8f93\u51fa\uff0c\u5e76\u7ed9\u51fa\u89e3\u91ca \u63d0\u793a\uff1a\u7ed9\u51fa\u4e00\u4e9b\u53d8\u91cf\u5728test case\u4e2d\u7684\u8303\u56f4 \u4ee5\u4e0b\u7528LC35\u9898\u4f5c\u4e3a\u4f8b\u5b50","title":"1.2 Leetcode \u9898\u76ee"},{"location":"lesson6/Lesson6%20C%2B%2B/#13-leetcode","text":"\u9898\u89e3\uff1a\u70b9\u51fb\u9898\u89e3\u540e\u5373\u53ef\u67e5\u770b\u8be5\u9898\u7684\u51e0\u79cd\u89e3\u6cd5","title":"1.3 Leetcode\u9898\u89e3"},{"location":"lesson6/Lesson6%20C%2B%2B/#14-leetcode","text":"\u70b9\u51fb\u2018\u63d0\u4ea4\u8bb0\u5f55\u2019\u53ef\u67e5\u770b\u4ee5\u5f80\u63d0\u4ea4\u5185\u5bb9 \u70b9\u51fb\u5176\u4e2d\u4e00\u6761\uff0c\u5373\u51fa\u73b0\u8be5\u6b21\u63d0\u4ea4\u7684\u8be6\u60c5\uff0c\u5305\u62ec\u6027\u80fd\u4e0e\u4ee3\u7801\u5185\u5bb9","title":"1.4 Leetcode\u63d0\u4ea4\u8bb0\u5f55"},{"location":"lesson6/Lesson6%20C%2B%2B/#15-leetcode","text":"\u70b9\u51fb\u5934\u50cf\uff0c\u67e5\u770b\u505a\u9898\u5206\u6790\u3001\u8fdb\u5ea6\u7ba1\u7406\u7b49\uff0c\u5373\u53ef\u67e5\u770b\u81ea\u5df1\u7684\u505a\u9898\u5185\u5bb9 \u4e0b\u9762\u662f\u4e00\u4e2a\u5e38\u7528\u7684C++\u5b57\u7b26\u4e32\u65b9\u6cd5\u7684\u8868\u683c\uff0c\u5c55\u793a\u4e86C++\u4e2d\u5e38\u89c1\u7684\u5b57\u7b26\u4e32\u64cd\u4f5c\u53ca\u5176\u63cf\u8ff0\uff1a \u5e8f\u53f7 \u65b9\u6cd5\u53ca\u63cf\u8ff0 1 str.size() \u6216 str.length() \u8fd4\u56de\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002 2 str.empty() \u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u7a7a\u3002 3 str[index] \u6216 str.at(index) \u8bbf\u95ee\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u3002 at() \u5e26\u6709\u8d8a\u754c\u68c0\u67e5\u3002 4 str.find(subStr) \u67e5\u627e\u5b50\u5b57\u7b26\u4e32\u5728\u5f53\u524d\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e\uff0c\u8fd4\u56de\u627e\u5230\u7684\u7d22\u5f15\u6216 std::string::npos \u3002 5 str.substr(pos, len) \u63d0\u53d6\u4ece\u4f4d\u7f6e pos \u5f00\u59cb\u7684\u957f\u5ea6\u4e3a len \u7684\u5b50\u5b57\u7b26\u4e32\u3002 6 str.append(str2) \u6216 str += str2 \u5c06\u5b57\u7b26\u4e32 str2 \u6dfb\u52a0\u5230\u5f53\u524d\u5b57\u7b26\u4e32 str \u7684\u672b\u5c3e\u3002 7 str.insert(pos, str2) \u5728\u4f4d\u7f6e pos \u63d2\u5165\u5b57\u7b26\u4e32 str2 \u3002 8 str.erase(pos, len) \u5220\u9664\u4ece\u4f4d\u7f6e pos \u5f00\u59cb\u957f\u5ea6\u4e3a len \u7684\u5b50\u5b57\u7b26\u4e32\u3002 9 std::string::npos \u5e38\u91cf\uff0c\u7528\u4e8e\u8868\u793a\u5b57\u7b26\u4e32\u4e2d\u4e0d\u5b58\u5728\u5b50\u5b57\u7b26\u4e32\u65f6\u7684\u8fd4\u56de\u503c\u3002 10 str.clear() \u6e05\u7a7a\u5b57\u7b26\u4e32\u5185\u5bb9\uff0c\u4f7f\u5176\u957f\u5ea6\u53d8\u4e3a0\u3002 11 str.swap(str2) \u4ea4\u6362\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\u3002 12 std::reverse(str.begin(), str.end()) \u53cd\u8f6c\u5b57\u7b26\u4e32\u7684\u5b57\u7b26\u987a\u5e8f\u3002","title":"1.5 Leetcode\u505a\u9898\u5206\u6790"},{"location":"lesson6/Lesson6%20C%2B%2B/#3-leetcode","text":"\u4ece\u672c\u8282\u8bfe\u7a0b\u5f00\u59cb\uff0c\u6211\u4eec\u5c06\u7ed3\u5408Leetcode\u4e0a\u7684\u7ecf\u5178\u9898\u76ee\u8fdb\u884c\u6559\u5b66","title":"3. Leetcode \u9898\u76ee\u7ec3\u4e60"},{"location":"lesson6/Lesson6%20C%2B%2B/#_1","text":"","title":"\u4f8b\u9898\u8bb2\u89e3"},{"location":"lesson6/Lesson6%20C%2B%2B/#lc-58","text":"\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u7531\u82e5\u5e72\u5355\u8bcd\u7ec4\u6210\uff0c\u5355\u8bcd\u524d\u540e\u7528\u4e00\u4e9b\u7a7a\u683c\u5b57\u7b26\u9694\u5f00\u3002\u8fd4\u56de\u5b57\u7b26\u4e32\u4e2d \u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6 \u3002 \u5355\u8bcd \u662f\u6307\u4ec5\u7531\u5b57\u6bcd\u7ec4\u6210\u3001\u4e0d\u5305\u542b\u4efb\u4f55\u7a7a\u683c\u5b57\u7b26\u7684\u6700\u5927\u5b50\u5b57\u7b26\u4e32\u3002","title":"LC 58 \u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u5b57\u6570"},{"location":"lesson6/Lesson6%20C%2B%2B/#_2","text":"\u53bb\u9664\u5b57\u7b26\u4e32\u672b\u5c3e\u7684\u7a7a\u683c : \u5b57\u7b26\u4e32\u53ef\u80fd\u5728\u672b\u5c3e\u5305\u542b\u7a7a\u683c\uff0c\u6211\u4eec\u9996\u5148\u8981\u53bb\u6389\u8fd9\u4e9b\u7a7a\u683c\uff0c\u4ee5\u4fbf\u51c6\u786e\u627e\u5230\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u3002 \u4ece\u5b57\u7b26\u4e32\u672b\u5c3e\u5f00\u59cb\u5411\u524d\u904d\u5386 : \u4ece\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u5f00\u59cb\u5411\u524d\u904d\u5386\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u540e\u7ee7\u7eed\u8ba1\u6570\uff0c\u76f4\u5230\u627e\u5230\u7a7a\u683c\u6216\u8005\u5230\u8fbe\u5b57\u7b26\u4e32\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u8fd9\u6bb5\u8ba1\u6570\u5c31\u662f\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6\u3002","title":"\u601d\u8def"},{"location":"lesson6/Lesson6%20C%2B%2B/#_3","text":"\u53cd\u5411\u904d\u5386\u65b9\u6cd5 \uff1a \u4ece\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u5f00\u59cb\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u975e\u7a7a\u683c\u5b57\u7b26\uff0c\u8fd9\u4e2a\u5b57\u7b26\u662f\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\u3002 \u4ece\u8fd9\u4e2a\u5b57\u6bcd\u5f00\u59cb\u53cd\u5411\u904d\u5386\uff0c\u76f4\u5230\u9047\u5230\u7a7a\u683c\u6216\u8005\u5230\u8fbe\u5b57\u7b26\u4e32\u7684\u8d77\u59cb\u4f4d\u7f6e\u3002\u904d\u5386\u5230\u7684\u6bcf\u4e2a\u5b57\u6bcd\u90fd\u662f\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u4e00\u90e8\u5206\u3002 \u904d\u5386\u5230\u7684\u5b57\u6bcd\u6570\u91cf\u5373\u4e3a\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6\u3002 class Solution { public: int lengthOfLastWord(string s) { int index = s.length() - 1; // \u8df3\u8fc7\u5c3e\u90e8\u7a7a\u683c while (index >= 0 && s[index] == ' ') { index--; } int wordLength = 0; // \u8ba1\u7b97\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6 while (index >= 0 && s[index] != ' ') { wordLength++; index--; } return wordLength; } };","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson6/Lesson6%20C%2B%2B/#lc434","text":"","title":"LC434. \u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd\u6570"},{"location":"lesson6/Lesson6%20C%2B%2B/#_4","text":"\u7edf\u8ba1\u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd\u4e2a\u6570\uff0c\u8fd9\u91cc\u7684\u5355\u8bcd\u6307\u7684\u662f\u8fde\u7eed\u7684\u4e0d\u662f\u7a7a\u683c\u7684\u5b57\u7b26\u3002 \u8bf7\u6ce8\u610f\uff0c\u4f60\u53ef\u4ee5\u5047\u5b9a\u5b57\u7b26\u4e32\u91cc\u4e0d\u5305\u62ec\u4efb\u4f55\u4e0d\u53ef\u6253\u5370\u7684\u5b57\u7b26\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson6/Lesson6%20C%2B%2B/#_5","text":"\u6211\u4eec\u9700\u8981\u7edf\u8ba1\u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd\u4e2a\u6570\uff0c\u5355\u8bcd\u662f\u7531\u8fde\u7eed\u7684\u975e\u7a7a\u683c\u5b57\u7b26\u7ec4\u6210\u7684\u3002\u7a7a\u683c\u53ef\u4ee5\u7528\u6765\u5206\u9694\u5355\u8bcd\u3002\u9898\u76ee\u4fdd\u8bc1\u5b57\u7b26\u4e32\u4e2d\u6ca1\u6709\u4e0d\u53ef\u6253\u5370\u5b57\u7b26\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u5904\u7406\u7279\u6b8a\u5b57\u7b26\u3002","title":"\u9898\u76ee\u5206\u6790"},{"location":"lesson6/Lesson6%20C%2B%2B/#_6","text":"\u5e38\u89c4\u601d\u8def 1. \u53bb\u9664\u591a\u4f59\u7a7a\u683c : \u5728\u5904\u7406\u5b57\u7b26\u4e32\u4e4b\u524d\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u8003\u8651\u5982\u4f55\u5904\u7406\u5b57\u7b26\u4e32\u4e2d\u53ef\u80fd\u5b58\u5728\u7684\u591a\u4f59\u7a7a\u683c\u95ee\u9898\uff08\u5982\u524d\u540e\u7a7a\u683c\u6216\u591a\u91cd\u7a7a\u683c\uff09\u3002\u4f46\u5b9e\u9645\u5b9e\u73b0\u4e2d\uff0c\u901a\u5e38\u4e0d\u9700\u8981\u4e13\u95e8\u53bb\u9664\u7a7a\u683c\uff0c\u53ea\u9700\u8981\u6b63\u786e\u5730\u5206\u5272\u5355\u8bcd\u5373\u53ef\u3002 \u68c0\u6d4b\u4e00\u4e2a\u5355\u8bcd\u7684\u5f00\u59cb\uff1a - s[i] != ' ' \uff1a\u5f53\u524d\u5b57\u7b26\u4e0d\u662f\u7a7a\u683c\u3002 - (i == 0 || s[i - 1] == ' ') \uff1a\u5f53\u524d\u5b57\u7b26\u662f\u7b2c\u4e00\u4e2a\u5b57\u7b26\uff0c\u6216\u8005\u524d\u4e00\u4e2a\u5b57\u7b26\u662f\u7a7a\u683c\u3002 \u6ee1\u8db3\u8fd9\u4e24\u4e2a\u6761\u4ef6\u65f6\uff0c\u610f\u5473\u7740\u6211\u4eec\u9047\u5230\u4e00\u4e2a\u65b0\u7684\u5355\u8bcd\uff0c\u4e8e\u662f\u8ba1\u6570\u5668 count \u589e\u52a0\u3002 \u904d\u5386\u5b57\u7b26\u4e32 : \u6211\u4eec\u53ef\u4ee5\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u5e76\u5728\u9047\u5230\u975e\u7a7a\u683c\u5b57\u7b26\u65f6\uff0c\u8bc6\u522b\u5230\u4e00\u4e2a\u65b0\u7684\u5355\u8bcd\u5f00\u59cb\u3002\u5f53\u9047\u5230\u7a7a\u683c\u5b57\u7b26\u65f6\uff0c\u5219\u8868\u793a\u5f53\u524d\u5355\u8bcd\u7ed3\u675f\u3002 \u8bb0\u5f55\u5355\u8bcd\u6570\u91cf : \u4f7f\u7528\u4e00\u4e2a\u8ba1\u6570\u5668\uff0c\u5f53\u68c0\u6d4b\u5230\u4e00\u4e2a\u5355\u8bcd\u7684\u5f00\u59cb\u65f6\uff0c\u8ba1\u6570\u5668\u52a01\u3002 class Solution { public: int countSegments(string s) { int count = 0; // \u904d\u5386\u5b57\u7b26\u4e32 for (int i = 0; i < s.length(); i++) { // \u68c0\u67e5\u5f53\u524d\u5b57\u7b26\u662f\u5426\u4e3a\u975e\u7a7a\u683c\u5b57\u7b26\u4e14\u524d\u4e00\u4e2a\u5b57\u7b26\u4e3a\u7a7a\u683c\u5b57\u7b26 if (s[i] != ' ' && (i == 0 || s[i - 1] == ' ')) { count++; } } return count; } };","title":"\u601d\u8def"},{"location":"lesson6/Lesson6%20C%2B%2B/#_7","text":"","title":"\u4e3e\u4e00\u53cd\u4e09"},{"location":"lesson6/Lesson6%20C%2B%2B/#lc709","text":"","title":"LC709. \u8f6c\u6362\u6210\u5c0f\u5199\u5b57\u6bcd"},{"location":"lesson6/Lesson6%20C%2B%2B/#_8","text":"\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u5c06\u8be5\u5b57\u7b26\u4e32\u4e2d\u7684\u5927\u5199\u5b57\u6bcd\u8f6c\u6362\u6210\u76f8\u540c\u7684\u5c0f\u5199\u5b57\u6bcd\uff0c\u8fd4\u56de\u65b0\u7684\u5b57\u7b26\u4e32\uff0c\u67e5\u627e\u5e76\u4f7f\u7528\u5408\u9002\u7684\u5b57\u7b26\u4e32\u51fd\u6570\u89e3\u7b54\u5373\u53ef\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson6/Lesson6%20C%2B%2B/#_9","text":"class Solution { public: string toLowerCase(string s) { for (int i = 0; i < s.length(); i++) { // \u4f7f\u7528tolower\u51fd\u6570\u5c06\u5b57\u7b26\u8f6c\u6362\u4e3a\u5c0f\u5199 s[i] = tolower(s[i]); } return s; } };","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"lesson6/Lesson6%20C%2B%2B/#lc520","text":"","title":"LC520. \u68c0\u6d4b\u5927\u5199\u5b57\u6bcd"},{"location":"lesson6/Lesson6%20C%2B%2B/#_10","text":"\u6211\u4eec\u5b9a\u4e49\uff0c\u5728\u4ee5\u4e0b\u60c5\u51b5\u4e0b\uff0c\u5355\u8bcd\u7684\u5927\u5199\u7528\u6cd5\u662f\u6b63\u786e\u7684\uff1a \u5168\u90e8\u5b57\u6bcd\u90fd\u662f\u5927\u5199\uff0c\u6bd4\u5982 \"USA\" \u3002 \u5355\u8bcd\u4e2d\u6240\u6709\u5b57\u6bcd\u90fd\u4e0d\u662f\u5927\u5199\uff0c\u6bd4\u5982 \"leetcode\" \u3002 \u5982\u679c\u5355\u8bcd\u4e0d\u53ea\u542b\u6709\u4e00\u4e2a\u5b57\u6bcd\uff0c\u53ea\u6709\u9996\u5b57\u6bcd\u5927\u5199\uff0c\u6bd4\u5982 \"Google\" \u3002 \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 word \u3002\u5982\u679c\u5927\u5199\u7528\u6cd5\u6b63\u786e\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson6/Lesson6%20C%2B%2B/#_11","text":"\u8fd9\u4e2a\u95ee\u9898\u8981\u6c42\u6211\u4eec\u5224\u65ad\u4e00\u4e2a\u5355\u8bcd\u7684\u5927\u5c0f\u5199\u662f\u5426\u7b26\u5408\u7279\u5b9a\u7684\u89c4\u5219\u3002\u5177\u4f53\u7684\u89c4\u5219\u5305\u62ec\uff1a \u5168\u90e8\u5b57\u6bcd\u90fd\u662f\u5927\u5199 \uff0c\u4f8b\u5982 \"USA\" \u3002 \u5168\u90e8\u5b57\u6bcd\u90fd\u4e0d\u662f\u5927\u5199 \uff0c\u4f8b\u5982 \"leetcode\" \u3002 \u53ea\u6709\u9996\u5b57\u6bcd\u5927\u5199 \uff0c\u4f8b\u5982 \"Google\" \u3002 \u5982\u679c\u4e00\u4e2a\u5355\u8bcd\u7b26\u5408\u4ee5\u4e0a\u4efb\u610f\u4e00\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u8fd4\u56de true \uff0c\u5426\u5219\u8fd4\u56de false \u3002","title":"\u9898\u76ee\u5206\u6790"},{"location":"lesson6/Lesson6%20C%2B%2B/#_12","text":"\u5224\u65ad\u5168\u5927\u5199 \uff1a\u4f7f\u7528 toupper() \u65b9\u6cd5\uff0c\u628a\u5355\u8bcd\u8f6c\u6362\u4e3a\u5927\u5199\uff0c\u7136\u540e\u68c0\u67e5\u8f6c\u6362\u540e\u7684\u5355\u8bcd\u662f\u5426\u548c\u539f\u59cb\u5355\u8bcd\u76f8\u540c\u3002\u5982\u679c\u76f8\u540c\uff0c\u8bf4\u660e\u6240\u6709\u5b57\u6bcd\u90fd\u5927\u5199\u3002 \u5224\u65ad\u5168\u5c0f\u5199 \uff1a\u7c7b\u4f3c\u7684\uff0c\u4f7f\u7528 tolower() \u65b9\u6cd5\uff0c\u628a\u5355\u8bcd\u8f6c\u6362\u4e3a\u5c0f\u5199\uff0c\u7136\u540e\u68c0\u67e5\u8f6c\u6362\u540e\u7684\u5355\u8bcd\u662f\u5426\u548c\u539f\u59cb\u5355\u8bcd\u76f8\u540c\u3002\u5982\u679c\u76f8\u540c\uff0c\u8bf4\u660e\u6240\u6709\u5b57\u6bcd\u90fd\u5c0f\u5199\u3002 \u5224\u65ad\u9996\u5b57\u6bcd\u5927\u5199 \uff1a\u9996\u5148\u68c0\u67e5\u9996\u5b57\u6bcd\u662f\u5426\u5927\u5199\uff08\u53ef\u4ee5\u4f7f\u7528 Character.isupper() \u65b9\u6cd5\uff09\uff0c\u7136\u540e\u68c0\u67e5\u5269\u4e0b\u7684\u5b57\u6bcd\u662f\u5426\u5168\u90e8\u662f\u5c0f\u5199\u3002 \u5f52\u7eb3 \uff1a\u5982\u679c\u6ee1\u8db3\u4ee5\u4e0a\u4efb\u4f55\u4e00\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u5c31\u8fd4\u56de true \uff0c\u5426\u5219\u8fd4\u56de false \u3002","title":"\u601d\u8def\u8bb2\u89e3"},{"location":"lesson6/Lesson6%20C%2B%2B/#_13","text":"\u5e38\u89c4\u89e3\u6cd5 class Solution { public: bool detectCapitalUse(string word) { // \u82e5\u7b2c 1 \u4e2a\u5b57\u6bcd\u4e3a\u5c0f\u5199\uff0c\u5219\u9700\u989d\u5916\u5224\u65ad\u7b2c 2 \u4e2a\u5b57\u6bcd\u662f\u5426\u4e3a\u5927\u5199 if (word.length() >= 2 && islower(word[0]) && isupper(word[1])) { return false; } // \u65e0\u8bba\u7b2c 1 \u4e2a\u5b57\u6bcd\u662f\u5426\u5927\u5199\uff0c\u5176\u4ed6\u5b57\u6bcd\u5fc5\u987b\u4e0e\u7b2c 2 \u4e2a\u5b57\u6bcd\u7684\u5927\u5c0f\u5199\u76f8\u540c for (int i = 2; i < word.length(); ++i) { if (islower(word[i]) ^ islower(word[1])) { return false; } } return true; } };","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"lesson6/Lesson6%20C%2B%2B/#lc521-i","text":"","title":"LC521. \u6700\u957f\u7279\u6b8a\u5e8f\u5217 \u2160"},{"location":"lesson6/Lesson6%20C%2B%2B/#_14","text":"\u7ed9\u4f60\u4e24\u4e2a\u5b57\u7b26\u4e32 a \u548c b \uff0c\u8bf7\u8fd4\u56de\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u6700\u957f\u7684\u7279\u6b8a\u5e8f\u5217\u7684\u957f\u5ea6\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de -1 \u3002 \u6700\u957f\u7279\u6b8a\u5e8f\u5217 \u5b9a\u4e49\u5982\u4e0b\uff1a\u8be5\u5e8f\u5217\u4e3a\u67d0\u5b57\u7b26\u4e32\u72ec\u6709\u7684\u6700\u957f\u5b50\u5e8f\u5217\uff08\u5373\u4e0d\u80fd\u662f\u5176\u4ed6\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\uff09\u3002 \u5b57\u7b26\u4e32 s \u7684\u5b50\u5e8f\u5217\u662f\u5728\u4ece s \u4e2d\u5220\u9664\u4efb\u610f\u6570\u91cf\u7684\u5b57\u7b26\u540e\u53ef\u4ee5\u83b7\u5f97\u7684\u5b57\u7b26\u4e32\u3002\u4f8b\u5982\uff0c\"abc\" \u662f \"aebdc\" \u7684\u5b50\u5e8f\u5217\uff0c\u56e0\u4e3a\u5220\u9664 \"aebdc\" \u4e2d\u659c\u4f53\u52a0\u7c97\u7684\u5b57\u7b26\u53ef\u4ee5\u5f97\u5230 \"abc\"\u3002 \"aebdc\" \u7684\u5b50\u5e8f\u5217\u8fd8\u5305\u62ec \"aebdc\"\u3001\"aeb\" \u548c \"\"\uff08\u7a7a\u5b57\u7b26\u4e32\uff09\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson6/Lesson6%20C%2B%2B/#_15","text":"\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u4e0d\u4f1a\u8d85\u8fc7\u8be5\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002\u82e5\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u7b49\u4e8e\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff0c\u90a3\u4e48\u5b50\u5e8f\u5217\u5c31\u662f\u8be5\u5b57\u7b26\u4e32\u3002 \u82e5\u4e24\u5b57\u7b26\u4e32\u4e0d\u76f8\u540c\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u8f83\u957f\u7684\u5b57\u7b26\u4e32\u4f5c\u4e3a\u6700\u957f\u7279\u6b8a\u5e8f\u5217\uff0c\u663e\u7136\u5b83\u4e0d\u4f1a\u662f\u8f83\u77ed\u7684\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\u3002\u7279\u522b\u5730\uff0c\u5f53\u4e24\u5b57\u7b26\u4e32\u957f\u5ea6\u76f8\u540c\u65f6\uff08\u4f46\u4e0d\u662f\u540c\u4e00\u5b57\u7b26\u4e32\uff09\uff0c\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u9009\u62e9\u5176\u4e2d\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32\u4f5c\u4e3a\u6700\u957f\u7279\u6b8a\u5e8f\u5217\uff0c\u5b83\u4e0d\u4f1a\u662f\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\u3002 \u82e5\u4e24\u5b57\u7b26\u4e32\u76f8\u540c\uff0c\u90a3\u4e48\u4efb\u4e00\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\u5747\u4f1a\u51fa\u73b0\u5728\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\uff0c\u6b64\u65f6\u5e94\u8fd4\u56de \u22121\u3002","title":"\u63d0\u793a"},{"location":"lesson6/Lesson6%20C%2B%2B/#_16","text":"\u8fd9\u4e2a\u95ee\u9898\u8981\u6c42\u6211\u4eec\u627e\u5230\u4e24\u4e2a\u5b57\u7b26\u4e32 a \u548c b \u7684\u6700\u957f\u7279\u6b8a\u5e8f\u5217\u3002\u6839\u636e\u9898\u76ee\u4e2d\u7684\u5b9a\u4e49\uff0c\u6700\u957f\u7279\u6b8a\u5e8f\u5217\u662f\u6307\u5728\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u72ec\u6709\u7684\u6700\u957f\u5b50\u5e8f\u5217\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\uff0c\u90a3\u4e48\u5b83\u4e0d\u662f\u7279\u6b8a\u5e8f\u5217\u3002\u6211\u4eec\u7684\u76ee\u6807\u662f\u627e\u5230\u6700\u957f\u7684\u7279\u6b8a\u5e8f\u5217\u7684\u957f\u5ea6\u3002","title":"\u9898\u76ee\u5206\u6790"},{"location":"lesson6/Lesson6%20C%2B%2B/#_17","text":"\u5b57\u7b26\u4e32\u76f8\u7b49\u7684\u60c5\u51b5 : \u5982\u679c\u5b57\u7b26\u4e32 a \u548c b \u76f8\u7b49\uff0c\u90a3\u4e48\u6bcf\u4e2a\u5b50\u5e8f\u5217\u5728\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u4e5f\u662f\u5b58\u5728\u7684\u3002\u56e0\u6b64\uff0c\u4e0d\u53ef\u80fd\u6709\u72ec\u6709\u7684\u5b50\u5e8f\u5217\uff0c\u76f4\u63a5\u8fd4\u56de -1 \u3002 \u5b57\u7b26\u4e32\u4e0d\u76f8\u7b49\u7684\u60c5\u51b5 : \u5982\u679c\u5b57\u7b26\u4e32 a \u548c b \u4e0d\u76f8\u7b49\uff0c\u90a3\u4e48\u8f83\u957f\u7684\u5b57\u7b26\u4e32\u672c\u8eab\u5c31\u662f\u5b83\u7684\u6700\u957f\u7279\u6b8a\u5e8f\u5217\uff0c\u56e0\u4e3a\u5b83\u4e0d\u80fd\u5b8c\u5168\u51fa\u73b0\u5728\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u3002\u6b64\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u8f83\u957f\u7684\u90a3\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002","title":"\u601d\u8def"},{"location":"lesson6/Lesson6%20C%2B%2B/#_18","text":"\u76f4\u89c2\u7248\u672c class Solution { public: int findLUSlength(string a, string b) { // \u5982\u679c\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e0d\u540c\uff0c\u8fd4\u56de\u957f\u5ea6\u8f83\u957f\u7684\u5b57\u7b26\u4e32 if (a != b) { return max(a.length(), b.length()); } // \u5982\u679c\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u540c\uff0c\u8fd4\u56de -1 return -1; } }; \u7b80\u6d01\u7248\u672c class Solution { public: int findLUSlength(string a, string b) { return a != b ? max(a.length(), b.length()) : -1; } };","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"lesson6/Lesson6%20C%2B%2B/#_19","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC551 Student Attendence Record I \u7ed9\u5b9a\u4e00\u4e2a\u5b66\u751f\u7684\u51fa\u52e4\u8bb0\u5f55\uff0c\u5224\u65ad\u8be5\u5b66\u751f\u662f\u5426\u5b58\u5728\u8fde\u7eed\u7684\u4e09\u5929\u7f3a\u52e4\u6216\u6709\u8d85\u8fc710\u5929\u7684\u65f7\u8bfe\u3002 LC657 Robot Return to Origin \u5224\u65ad\u7ed9\u5b9a\u7684\u673a\u5668\u4eba\u79fb\u52a8\u6307\u4ee4\u662f\u5426\u4f7f\u673a\u5668\u4eba\u56de\u5230\u539f\u70b9\u3002 LC1078 Occurrences After Bigram \u7ed9\u5b9a\u4e00\u4e2a\u6587\u672c\u548c\u4e00\u4e2a\u5927\u5b57\u5178\uff0c\u627e\u51fa\u5927\u5b57\u5178\u4e2d\u51fa\u73b0\u7684\u5355\u8bcd\u5728\u6587\u672c\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u3002 LC557 Reverse Words in a String III \u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e2a\u5355\u8bcd\uff0c\u4fdd\u6301\u5355\u8bcd\u7684\u987a\u5e8f\u4e0d\u53d8\u3002","title":"\u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson6/Lesson6%20Java/","text":"Lesson6 Leetcode\u5165\u95e8/\u5e38\u7528\u7684\u5b57\u7b26\u4e32\u51fd\u6570/Leetcode\u5b57\u7b26\u4e32\u7ec3\u4e60 1. Leetcode\u5165\u95e8 1.1 \u521d\u8bc6Leetcode LeetCode\u662f\u4e00\u4e2a\u5728\u7ebf\u7f16\u7a0b\u7ade\u6280\u5e73\u53f0\uff0c\u65e8\u5728\u5e2e\u52a9\u200c\u7a0b\u5e8f\u5458\u63d0\u5347\u7f16\u7a0b\u6280\u80fd\u548c\u89e3\u51b3\u7b97\u6cd5\u95ee\u9898\u3002\u5b83\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u9898\u5e93\uff0c\u5305\u62ec\u5404\u79cd\u7f16\u7a0b\u8bed\u8a00\u7684\u9898\u76ee\uff0c\u8986\u76d6\u4e86\u7b97\u6cd5\u3001\u200c\u6570\u636e\u7ed3\u6784\u3001\u200c\u7cfb\u7edf\u8bbe\u8ba1\u7b49\u591a\u4e2a\u9886\u57df\u3002LeetCode\u4e0d\u4ec5\u662f\u4e00\u4e2a\u7ec3\u4e60\u5e73\u53f0\uff0c\u4e5f\u662f\u4e00\u4e2a\u6280\u672f\u793e\u533a\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u4e0a\u9762\u63d0\u4ea4\u4ee3\u7801\u89e3\u51b3\u65b9\u6848\uff0c\u5e76\u4e0e\u5176\u4ed6\u5f00\u53d1\u8005\u4ea4\u6d41\u5b66\u4e60\u3002 \u5b98\u7f51\uff1ahttps://leetcode.cn \u9996\u5148\u5728\u83dc\u5355\u4e2d\u70b9\u51fb\u2018\u9898\u5e93\u2019\uff1a \u641c\u7d22\u6846\u4e2d\u53ef\u4ee5\u8f93\u5165\u9898\u53f7\u3001\u6807\u9898\u7b49\u67e5\u627e\u76f8\u5e94\u9898\u76ee \u641c\u7d22\u65f6\u53ef\u4ee5\u8bbe\u7f6e\u9898\u76ee\u96be\u5ea6 1.2 Leetcode \u9898\u76ee \u9898\u76ee\u63cf\u8ff0\uff1a \u6587\u5b57\u63cf\u8ff0 \u5b9e\u4f8b\uff1a\u7ed9\u4e00\u4e9b\u6709\u4ee3\u8868\u6027\u7684\u8f93\u5165\u4e0e\u8f93\u51fa\uff0c\u5e76\u7ed9\u51fa\u89e3\u91ca \u63d0\u793a\uff1a\u7ed9\u51fa\u4e00\u4e9b\u53d8\u91cf\u5728test case\u4e2d\u7684\u8303\u56f4 1.3 Leetcode\u9898\u89e3 \u9898\u89e3\uff1a\u70b9\u51fb\u9898\u89e3\u540e\u5373\u53ef\u67e5\u770b\u8be5\u9898\u7684\u51e0\u79cd\u89e3\u6cd5 1.4 Leetcode\u63d0\u4ea4\u8bb0\u5f55 \u70b9\u51fb\u2018\u63d0\u4ea4\u8bb0\u5f55\u2019\u53ef\u67e5\u770b\u4ee5\u5f80\u63d0\u4ea4\u5185\u5bb9 \u70b9\u51fb\u5176\u4e2d\u4e00\u6761\uff0c\u5373\u51fa\u73b0\u8be5\u6b21\u63d0\u4ea4\u7684\u8be6\u60c5\uff0c\u5305\u62ec\u6027\u80fd\u4e0e\u4ee3\u7801\u5185\u5bb9 1.5 Leetcode\u505a\u9898\u5206\u6790 \u70b9\u51fb\u5934\u50cf\uff0c\u67e5\u770b\u505a\u9898\u5206\u6790\u3001\u8fdb\u5ea6\u7ba1\u7406\u7b49\uff0c\u5373\u53ef\u67e5\u770b\u81ea\u5df1\u7684\u505a\u9898\u5185\u5bb9 2. \u66f4\u591a\u5e38\u7528\u5b57\u7b26\u4e32\u51fd\u6570\u7528\u6cd5\u548c\u6587\u6863\u67e5\u627e\u65b9\u6cd5 \u4f60\u53ef\u4ee5\u53c2\u8003 Java \u7684\u5b98\u65b9\u6587\u6863\u6765\u67e5\u627e String \u7c7b\u7684\u65b9\u6cd5\u548c API\u3002 Java 17 API \u6587\u6863\uff08\u6700\u65b0\u957f\u671f\u652f\u6301\u7248\u672c\uff09 : String (Java SE 17) Java 21 API \u6587\u6863\uff08\u6700\u65b0\u7a33\u5b9a\u7248\u672c\uff09 : String (Java SE 21) \u5e8f\u53f7 \u65b9\u6cd5\u53ca\u63cf\u8ff0 1 String.toUpperCase() \u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709\u5b57\u7b26\u8f6c\u6362\u4e3a\u5927\u5199\u3002 2 String.format(format, args...) \u7528\u6307\u5b9a\u7684\u5bbd\u5ea6\u548c\u586b\u5145\u5b57\u7b26\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u3002\u53ef\u4ee5\u4f7f\u7528 String.format \u6765\u6a21\u62df center \u65b9\u6cd5\u3002 3 String.indexOf(String str, int fromIndex) \u67e5\u627e\u6307\u5b9a\u5b57\u7b26\u4e32\u5728\u5f53\u524d\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e\u3002\u5982\u679c\u6307\u5b9a\u8303\u56f4\u5185\u67e5\u627e\uff0c\u53ef\u4ee5\u7528 String.indexOf \u548c String.substring \u7ec4\u5408\u6765\u5b9e\u73b0\u3002 4 String.endsWith(String suffix) \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u6307\u5b9a\u7684\u540e\u7f00\u7ed3\u5c3e\u3002 5 String.replace(\"\\t\", String.format(\"%\" + tabSize + \"s\", \"\")) \u5c06\u5236\u8868\u7b26\u8f6c\u6362\u4e3a\u7a7a\u683c\u3002\u53ef\u4ee5\u4f7f\u7528 String.format \u6765\u66ff\u6362\u5236\u8868\u7b26\u3002 6 String.indexOf(String str, int fromIndex) \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u5305\u542b\u6307\u5b9a\u7684\u5b50\u5b57\u7b26\u4e32\u3002\u5982\u679c\u6307\u5b9a\u8303\u56f4\u5185\u67e5\u627e\uff0c\u53ef\u4ee5\u7528 String.indexOf \u548c String.substring \u7ec4\u5408\u6765\u5b9e\u73b0\u3002 7 String.indexOf(String str, int fromIndex) \u67e5\u627e\u6307\u5b9a\u5b57\u7b26\u4e32\u5728\u5f53\u524d\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e\u3002\u5982\u679c\u5b57\u7b26\u4e32\u4e0d\u5b58\u5728\u4f1a\u8fd4\u56de -1\u3002 8 String.chars().allMatch(Character::isLetter) \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u6240\u6709\u5b57\u7b26\u90fd\u662f\u5b57\u6bcd\u3002 9 String.chars().allMatch(Character::isDigit) \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u6240\u6709\u5b57\u7b26\u90fd\u662f\u6570\u5b57\u3002 10 String.chars().allMatch(Character::isLowerCase) \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u6240\u6709\u5b57\u6bcd\u90fd\u662f\u5c0f\u5199\u3002 11 String.chars().allMatch(Character::isDigit) \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u6240\u6709\u5b57\u7b26\u90fd\u662f\u6570\u5b57\u3002 12 String.chars().allMatch(Character::isUpperCase) \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u6240\u6709\u5b57\u6bcd\u90fd\u662f\u5927\u5199\u3002 13 String.join(CharSequence delimiter, CharSequence... elements) \u4f7f\u7528\u6307\u5b9a\u7684\u5206\u9694\u7b26\u5c06\u591a\u4e2a\u5b57\u7b26\u4e32\u8fde\u63a5\u6210\u4e00\u4e2a\u3002 14 String.length() \u8fd4\u56de\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002 15 String.format(\"%-\" + width + \"s\", original) \u5de6\u5bf9\u9f50\u5b57\u7b26\u4e32\uff0c\u5e76\u586b\u5145\u81f3\u6307\u5b9a\u5bbd\u5ea6\u3002 16 String.toLowerCase() \u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709\u5927\u5199\u5b57\u7b26\u8f6c\u6362\u4e3a\u5c0f\u5199\u3002 17 String.replace(CharSequence target, CharSequence replacement) \u66ff\u6362\u5b57\u7b26\u4e32\u4e2d\u7684\u65e7\u503c\u4e3a\u65b0\u503c\u3002 18 String.lastIndexOf(String str) \u4ece\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u5f00\u59cb\u67e5\u627e\u6307\u5b9a\u7684\u5b50\u5b57\u7b26\u4e32\u3002 19 String.lastIndexOf(String str) \u4ece\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u5f00\u59cb\u67e5\u627e\u6307\u5b9a\u7684\u5b50\u5b57\u7b26\u4e32\u3002\u5982\u679c\u5b57\u7b26\u4e32\u4e0d\u5b58\u5728\u4f1a\u8fd4\u56de -1\u3002 20 String.format(\"%\" + width + \"s\", original) \u53f3\u5bf9\u9f50\u5b57\u7b26\u4e32\uff0c\u5e76\u586b\u5145\u81f3\u6307\u5b9a\u5bbd\u5ea6\u3002 21 String.split(String regex, int limit) \u4f7f\u7528\u6307\u5b9a\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u5206\u9694\u5b57\u7b26\u4e32\u3002 22 String.startsWith(String prefix) \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u6307\u5b9a\u7684\u524d\u7f00\u5f00\u5934\u3002 23 String.toUpperCase() \u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u5c0f\u5199\u5b57\u6bcd\u8f6c\u6362\u4e3a\u5927\u5199\u3002 3. Leetcode \u9898\u76ee\u7ec3\u4e60 \u4ece\u672c\u8282\u8bfe\u7a0b\u5f00\u59cb\uff0c\u6211\u4eec\u5c06\u7ed3\u5408Leetcode\u4e0a\u7684\u7ecf\u5178\u9898\u76ee\u8fdb\u884c\u6559\u5b66 \u4f8b\u9898\u8bb2\u89e3 LC 58 \u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u5b57\u6570 \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u7531\u82e5\u5e72\u5355\u8bcd\u7ec4\u6210\uff0c\u5355\u8bcd\u524d\u540e\u7528\u4e00\u4e9b\u7a7a\u683c\u5b57\u7b26\u9694\u5f00\u3002\u8fd4\u56de\u5b57\u7b26\u4e32\u4e2d \u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6 \u3002 \u5355\u8bcd \u662f\u6307\u4ec5\u7531\u5b57\u6bcd\u7ec4\u6210\u3001\u4e0d\u5305\u542b\u4efb\u4f55\u7a7a\u683c\u5b57\u7b26\u7684\u6700\u5927\u5b50\u5b57\u7b26\u4e32\u3002 \u601d\u8def \u53bb\u9664\u5b57\u7b26\u4e32\u672b\u5c3e\u7684\u7a7a\u683c : \u5b57\u7b26\u4e32\u53ef\u80fd\u5728\u672b\u5c3e\u5305\u542b\u7a7a\u683c\uff0c\u6211\u4eec\u9996\u5148\u8981\u53bb\u6389\u8fd9\u4e9b\u7a7a\u683c\uff0c\u4ee5\u4fbf\u51c6\u786e\u627e\u5230\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u3002 \u4ece\u5b57\u7b26\u4e32\u672b\u5c3e\u5f00\u59cb\u5411\u524d\u904d\u5386 : \u4ece\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u5f00\u59cb\u5411\u524d\u904d\u5386\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u540e\u7ee7\u7eed\u8ba1\u6570\uff0c\u76f4\u5230\u627e\u5230\u7a7a\u683c\u6216\u8005\u5230\u8fbe\u5b57\u7b26\u4e32\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u8fd9\u6bb5\u8ba1\u6570\u5c31\u662f\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6\u3002 \u53c2\u8003\u89e3\u7b54 \u53cd\u5411\u904d\u5386\u65b9\u6cd5 \uff1a \u4ece\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u5f00\u59cb\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u975e\u7a7a\u683c\u5b57\u7b26\uff0c\u8fd9\u4e2a\u5b57\u7b26\u662f\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\u3002 \u4ece\u8fd9\u4e2a\u5b57\u6bcd\u5f00\u59cb\u53cd\u5411\u904d\u5386\uff0c\u76f4\u5230\u9047\u5230\u7a7a\u683c\u6216\u8005\u5230\u8fbe\u5b57\u7b26\u4e32\u7684\u8d77\u59cb\u4f4d\u7f6e\u3002\u904d\u5386\u5230\u7684\u6bcf\u4e2a\u5b57\u6bcd\u90fd\u662f\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u4e00\u90e8\u5206\u3002 \u904d\u5386\u5230\u7684\u5b57\u6bcd\u6570\u91cf\u5373\u4e3a\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6\u3002 class Solution { public int lengthOfLastWord(String s) { int index = s.length() - 1; // \u8df3\u8fc7\u5c3e\u90e8\u7a7a\u683c while (index >= 0 && s.charAt(index) == ' ') { index--; } int wordLength = 0; // \u8ba1\u7b97\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6 while (index >= 0 && s.charAt(index) != ' ') { wordLength++; index--; } return wordLength; } } \u8c03\u7528\u51fd\u6570\u65b9\u6cd5 \uff1a class Solution { public int lengthOfLastWord(String s) { s = s.trim(); return s.length() - s.lastIndexOf(\" \") - 1; } } LC434. \u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd\u6570 \u95ee\u9898\u63cf\u8ff0 \u7edf\u8ba1\u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd\u4e2a\u6570\uff0c\u8fd9\u91cc\u7684\u5355\u8bcd\u6307\u7684\u662f\u8fde\u7eed\u7684\u4e0d\u662f\u7a7a\u683c\u7684\u5b57\u7b26\u3002 \u8bf7\u6ce8\u610f\uff0c\u4f60\u53ef\u4ee5\u5047\u5b9a\u5b57\u7b26\u4e32\u91cc\u4e0d\u5305\u62ec\u4efb\u4f55\u4e0d\u53ef\u6253\u5370\u7684\u5b57\u7b26\u3002 \u9898\u76ee\u5206\u6790 \u6211\u4eec\u9700\u8981\u7edf\u8ba1\u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd\u4e2a\u6570\uff0c\u5355\u8bcd\u662f\u7531\u8fde\u7eed\u7684\u975e\u7a7a\u683c\u5b57\u7b26\u7ec4\u6210\u7684\u3002\u7a7a\u683c\u53ef\u4ee5\u7528\u6765\u5206\u9694\u5355\u8bcd\u3002\u9898\u76ee\u4fdd\u8bc1\u5b57\u7b26\u4e32\u4e2d\u6ca1\u6709\u4e0d\u53ef\u6253\u5370\u5b57\u7b26\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u5904\u7406\u7279\u6b8a\u5b57\u7b26\u3002 \u601d\u8def \u5e38\u89c4\u601d\u8def 1. \u53bb\u9664\u591a\u4f59\u7a7a\u683c : \u5728\u5904\u7406\u5b57\u7b26\u4e32\u4e4b\u524d\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u8003\u8651\u5982\u4f55\u5904\u7406\u5b57\u7b26\u4e32\u4e2d\u53ef\u80fd\u5b58\u5728\u7684\u591a\u4f59\u7a7a\u683c\u95ee\u9898\uff08\u5982\u524d\u540e\u7a7a\u683c\u6216\u591a\u91cd\u7a7a\u683c\uff09\u3002\u4f46\u5b9e\u9645\u5b9e\u73b0\u4e2d\uff0c\u901a\u5e38\u4e0d\u9700\u8981\u4e13\u95e8\u53bb\u9664\u7a7a\u683c\uff0c\u53ea\u9700\u8981\u6b63\u786e\u5730\u5206\u5272\u5355\u8bcd\u5373\u53ef\u3002 \u68c0\u6d4b\u4e00\u4e2a\u5355\u8bcd\u7684\u5f00\u59cb\uff1a - s.charAt(i) != ' ' \uff1a\u5f53\u524d\u5b57\u7b26\u4e0d\u662f\u7a7a\u683c\u3002 - (i == 0 || s.charAt(i - 1) == ' ') \uff1a\u5f53\u524d\u5b57\u7b26\u662f\u7b2c\u4e00\u4e2a\u5b57\u7b26\uff0c\u6216\u8005\u524d\u4e00\u4e2a\u5b57\u7b26\u662f\u7a7a\u683c\u3002 \u6ee1\u8db3\u8fd9\u4e24\u4e2a\u6761\u4ef6\u65f6\uff0c\u610f\u5473\u7740\u6211\u4eec\u9047\u5230\u4e00\u4e2a\u65b0\u7684\u5355\u8bcd\uff0c\u4e8e\u662f\u8ba1\u6570\u5668 count \u589e\u52a0\u3002 \u904d\u5386\u5b57\u7b26\u4e32 : \u6211\u4eec\u53ef\u4ee5\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u5e76\u5728\u9047\u5230\u975e\u7a7a\u683c\u5b57\u7b26\u65f6\uff0c\u8bc6\u522b\u5230\u4e00\u4e2a\u65b0\u7684\u5355\u8bcd\u5f00\u59cb\u3002\u5f53\u9047\u5230\u7a7a\u683c\u5b57\u7b26\u65f6\uff0c\u5219\u8868\u793a\u5f53\u524d\u5355\u8bcd\u7ed3\u675f\u3002 \u8bb0\u5f55\u5355\u8bcd\u6570\u91cf : \u4f7f\u7528\u4e00\u4e2a\u8ba1\u6570\u5668\uff0c\u5f53\u68c0\u6d4b\u5230\u4e00\u4e2a\u5355\u8bcd\u7684\u5f00\u59cb\u65f6\uff0c\u8ba1\u6570\u5668\u52a01\u3002 class Solution { public int countSegments(String s) { int count = 0; // \u904d\u5386\u5b57\u7b26\u4e32 for (int i = 0; i < s.length(); i++) { // \u68c0\u67e5\u5f53\u524d\u5b57\u7b26\u662f\u5426\u4e3a\u975e\u7a7a\u683c\u5b57\u7b26\u4e14\u524d\u4e00\u4e2a\u5b57\u7b26\u4e3a\u7a7a\u683c\u5b57\u7b26 if (s.charAt(i) != ' ' && (i == 0 || s.charAt(i - 1) == ' ')) { count++; } } return count; } } \u8c03\u7528\u51fd\u6570\u6cd5 java class Solution { public int countWords(String s) { // \u4f7f\u7528\u7a7a\u683c\u5206\u9694\u5b57\u7b26\u4e32\u5e76\u8ba1\u7b97\u5355\u8bcd\u6570 String[] words = s.split(\"\\\\s+\"); return words.length; } } \u4e3e\u4e00\u53cd\u4e09 LC709. \u8f6c\u6362\u6210\u5c0f\u5199\u5b57\u6bcd \u95ee\u9898\u63cf\u8ff0 \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u5c06\u8be5\u5b57\u7b26\u4e32\u4e2d\u7684\u5927\u5199\u5b57\u6bcd\u8f6c\u6362\u6210\u76f8\u540c\u7684\u5c0f\u5199\u5b57\u6bcd\uff0c\u8fd4\u56de\u65b0\u7684\u5b57\u7b26\u4e32\uff0c\u67e5\u627e\u5e76\u4f7f\u7528\u5408\u9002\u7684\u5b57\u7b26\u4e32\u51fd\u6570\u89e3\u7b54\u5373\u53ef\u3002 \u4ee3\u7801\u5b9e\u73b0 class Solution { public String toLowerCase(String s) { return s.toLowerCase(); } } LC520. \u68c0\u6d4b\u5927\u5199\u5b57\u6bcd \u95ee\u9898\u63cf\u8ff0 \u6211\u4eec\u5b9a\u4e49\uff0c\u5728\u4ee5\u4e0b\u60c5\u51b5\u4e0b\uff0c\u5355\u8bcd\u7684\u5927\u5199\u7528\u6cd5\u662f\u6b63\u786e\u7684\uff1a \u5168\u90e8\u5b57\u6bcd\u90fd\u662f\u5927\u5199\uff0c\u6bd4\u5982 \"USA\" \u3002 \u5355\u8bcd\u4e2d\u6240\u6709\u5b57\u6bcd\u90fd\u4e0d\u662f\u5927\u5199\uff0c\u6bd4\u5982 \"leetcode\" \u3002 \u5982\u679c\u5355\u8bcd\u4e0d\u53ea\u542b\u6709\u4e00\u4e2a\u5b57\u6bcd\uff0c\u53ea\u6709\u9996\u5b57\u6bcd\u5927\u5199\uff0c\u6bd4\u5982 \"Google\" \u3002 \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 word \u3002\u5982\u679c\u5927\u5199\u7528\u6cd5\u6b63\u786e\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002 \u9898\u76ee\u5206\u6790 \u8fd9\u4e2a\u95ee\u9898\u8981\u6c42\u6211\u4eec\u5224\u65ad\u4e00\u4e2a\u5355\u8bcd\u7684\u5927\u5c0f\u5199\u662f\u5426\u7b26\u5408\u7279\u5b9a\u7684\u89c4\u5219\u3002\u5177\u4f53\u7684\u89c4\u5219\u5305\u62ec\uff1a \u5168\u90e8\u5b57\u6bcd\u90fd\u662f\u5927\u5199 \uff0c\u4f8b\u5982 \"USA\" \u3002 \u5168\u90e8\u5b57\u6bcd\u90fd\u4e0d\u662f\u5927\u5199 \uff0c\u4f8b\u5982 \"leetcode\" \u3002 \u53ea\u6709\u9996\u5b57\u6bcd\u5927\u5199 \uff0c\u4f8b\u5982 \"Google\" \u3002 \u5982\u679c\u4e00\u4e2a\u5355\u8bcd\u7b26\u5408\u4ee5\u4e0a\u4efb\u610f\u4e00\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u8fd4\u56de true \uff0c\u5426\u5219\u8fd4\u56de false \u3002 \u601d\u8def\u8bb2\u89e3 \u5224\u65ad\u5168\u5927\u5199 \uff1a\u4f7f\u7528 Java \u7684 String \u7c7b\u7684 toUpperCase() \u65b9\u6cd5\uff0c\u628a\u5355\u8bcd\u8f6c\u6362\u4e3a\u5927\u5199\uff0c\u7136\u540e\u68c0\u67e5\u8f6c\u6362\u540e\u7684\u5355\u8bcd\u662f\u5426\u548c\u539f\u59cb\u5355\u8bcd\u76f8\u540c\u3002\u5982\u679c\u76f8\u540c\uff0c\u8bf4\u660e\u6240\u6709\u5b57\u6bcd\u90fd\u5927\u5199\u3002 \u5224\u65ad\u5168\u5c0f\u5199 \uff1a\u7c7b\u4f3c\u7684\uff0c\u4f7f\u7528 toLowerCase() \u65b9\u6cd5\uff0c\u628a\u5355\u8bcd\u8f6c\u6362\u4e3a\u5c0f\u5199\uff0c\u7136\u540e\u68c0\u67e5\u8f6c\u6362\u540e\u7684\u5355\u8bcd\u662f\u5426\u548c\u539f\u59cb\u5355\u8bcd\u76f8\u540c\u3002\u5982\u679c\u76f8\u540c\uff0c\u8bf4\u660e\u6240\u6709\u5b57\u6bcd\u90fd\u5c0f\u5199\u3002 \u5224\u65ad\u9996\u5b57\u6bcd\u5927\u5199 \uff1a\u9996\u5148\u68c0\u67e5\u9996\u5b57\u6bcd\u662f\u5426\u5927\u5199\uff08\u53ef\u4ee5\u4f7f\u7528 Character.isUpperCase() \u65b9\u6cd5\uff09\uff0c\u7136\u540e\u68c0\u67e5\u5269\u4e0b\u7684\u5b57\u6bcd\u662f\u5426\u5168\u90e8\u662f\u5c0f\u5199\u3002 \u5f52\u7eb3 \uff1a\u5982\u679c\u6ee1\u8db3\u4ee5\u4e0a\u4efb\u4f55\u4e00\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u5c31\u8fd4\u56de true \uff0c\u5426\u5219\u8fd4\u56de false \u3002 \u4ee3\u7801\u5b9e\u73b0 \u5e38\u89c4\u89e3\u6cd5 class Solution { public boolean detectCapitalUse(String word) { // \u82e5\u7b2c 1 \u4e2a\u5b57\u6bcd\u4e3a\u5c0f\u5199\uff0c\u5219\u9700\u989d\u5916\u5224\u65ad\u7b2c 2 \u4e2a\u5b57\u6bcd\u662f\u5426\u4e3a\u5c0f\u5199 if (word.length() >= 2 && Character.isLowerCase(word.charAt(0)) && Character.isUpperCase(word.charAt(1))) { return false; } // \u65e0\u8bba\u7b2c 1 \u4e2a\u5b57\u6bcd\u662f\u5426\u5927\u5199\uff0c\u5176\u4ed6\u5b57\u6bcd\u5fc5\u987b\u4e0e\u7b2c 2 \u4e2a\u5b57\u6bcd\u7684\u5927\u5c0f\u5199\u76f8\u540c for (int i = 2; i < word.length(); ++i) { if (Character.isLowerCase(word.charAt(i)) ^ Character.isLowerCase(word.charAt(1))) { return false; } } return true; } } \u5b57\u7b26\u4e32\u51fd\u6570\u89e3\u6cd5 class Solution { public boolean detectCapitalUse(String word) { return word.equals(word.toUpperCase())||word.substring(1).equals(word.substring(1).toLowerCase()); } } LC521. \u6700\u957f\u7279\u6b8a\u5e8f\u5217 \u2160 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u4f60\u4e24\u4e2a\u5b57\u7b26\u4e32 a \u548c b \uff0c\u8bf7\u8fd4\u56de\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u6700\u957f\u7684\u7279\u6b8a\u5e8f\u5217\u7684\u957f\u5ea6\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de -1 \u3002 \u6700\u957f\u7279\u6b8a\u5e8f\u5217 \u5b9a\u4e49\u5982\u4e0b\uff1a\u8be5\u5e8f\u5217\u4e3a\u67d0\u5b57\u7b26\u4e32\u72ec\u6709\u7684\u6700\u957f\u5b50\u5e8f\u5217\uff08\u5373\u4e0d\u80fd\u662f\u5176\u4ed6\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\uff09\u3002 \u5b57\u7b26\u4e32 s \u7684\u5b50\u5e8f\u5217\u662f\u5728\u4ece s \u4e2d\u5220\u9664\u4efb\u610f\u6570\u91cf\u7684\u5b57\u7b26\u540e\u53ef\u4ee5\u83b7\u5f97\u7684\u5b57\u7b26\u4e32\u3002\u4f8b\u5982\uff0c\"abc\" \u662f \"aebdc\" \u7684\u5b50\u5e8f\u5217\uff0c\u56e0\u4e3a\u5220\u9664 \"aebdc\" \u4e2d\u659c\u4f53\u52a0\u7c97\u7684\u5b57\u7b26\u53ef\u4ee5\u5f97\u5230 \"abc\"\u3002 \"aebdc\" \u7684\u5b50\u5e8f\u5217\u8fd8\u5305\u62ec \"aebdc\"\u3001\"aeb\" \u548c \"\"\uff08\u7a7a\u5b57\u7b26\u4e32\uff09\u3002 \u63d0\u793a \u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u4e0d\u4f1a\u8d85\u8fc7\u8be5\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002\u82e5\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u7b49\u4e8e\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff0c\u90a3\u4e48\u5b50\u5e8f\u5217\u5c31\u662f\u8be5\u5b57\u7b26\u4e32\u3002 \u82e5\u4e24\u5b57\u7b26\u4e32\u4e0d\u76f8\u540c\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u8f83\u957f\u7684\u5b57\u7b26\u4e32\u4f5c\u4e3a\u6700\u957f\u7279\u6b8a\u5e8f\u5217\uff0c\u663e\u7136\u5b83\u4e0d\u4f1a\u662f\u8f83\u77ed\u7684\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\u3002\u7279\u522b\u5730\uff0c\u5f53\u4e24\u5b57\u7b26\u4e32\u957f\u5ea6\u76f8\u540c\u65f6\uff08\u4f46\u4e0d\u662f\u540c\u4e00\u5b57\u7b26\u4e32\uff09\uff0c\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u9009\u62e9\u5176\u4e2d\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32\u4f5c\u4e3a\u6700\u957f\u7279\u6b8a\u5e8f\u5217\uff0c\u5b83\u4e0d\u4f1a\u662f\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\u3002 \u82e5\u4e24\u5b57\u7b26\u4e32\u76f8\u540c\uff0c\u90a3\u4e48\u4efb\u4e00\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\u5747\u4f1a\u51fa\u73b0\u5728\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\uff0c\u6b64\u65f6\u5e94\u8fd4\u56de \u22121\u3002 \u9898\u76ee\u5206\u6790 \u8fd9\u4e2a\u95ee\u9898\u8981\u6c42\u6211\u4eec\u627e\u5230\u4e24\u4e2a\u5b57\u7b26\u4e32 a \u548c b \u7684\u6700\u957f\u7279\u6b8a\u5e8f\u5217\u3002\u6839\u636e\u9898\u76ee\u4e2d\u7684\u5b9a\u4e49\uff0c\u6700\u957f\u7279\u6b8a\u5e8f\u5217\u662f\u6307\u5728\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u72ec\u6709\u7684\u6700\u957f\u5b50\u5e8f\u5217\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\uff0c\u90a3\u4e48\u5b83\u4e0d\u662f\u7279\u6b8a\u5e8f\u5217\u3002\u6211\u4eec\u7684\u76ee\u6807\u662f\u627e\u5230\u6700\u957f\u7684\u7279\u6b8a\u5e8f\u5217\u7684\u957f\u5ea6\u3002 \u601d\u8def \u5b57\u7b26\u4e32\u76f8\u7b49\u7684\u60c5\u51b5 : \u5982\u679c\u5b57\u7b26\u4e32 a \u548c b \u76f8\u7b49\uff0c\u90a3\u4e48\u6bcf\u4e2a\u5b50\u5e8f\u5217\u5728\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u4e5f\u662f\u5b58\u5728\u7684\u3002\u56e0\u6b64\uff0c\u4e0d\u53ef\u80fd\u6709\u72ec\u6709\u7684\u5b50\u5e8f\u5217\uff0c\u76f4\u63a5\u8fd4\u56de -1 \u3002 \u5b57\u7b26\u4e32\u4e0d\u76f8\u7b49\u7684\u60c5\u51b5 : \u5982\u679c\u5b57\u7b26\u4e32 a \u548c b \u4e0d\u76f8\u7b49\uff0c\u90a3\u4e48\u8f83\u957f\u7684\u5b57\u7b26\u4e32\u672c\u8eab\u5c31\u662f\u5b83\u7684\u6700\u957f\u7279\u6b8a\u5e8f\u5217\uff0c\u56e0\u4e3a\u5b83\u4e0d\u80fd\u5b8c\u5168\u51fa\u73b0\u5728\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u3002\u6b64\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u8f83\u957f\u7684\u90a3\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002 \u4ee3\u7801\u5b9e\u73b0 \u76f4\u89c2\u7248\u672c class Solution { public int findLUSlength(String a, String b) { // \u5982\u679c\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e0d\u540c\uff0c\u8fd4\u56de\u957f\u5ea6\u8f83\u957f\u7684\u5b57\u7b26\u4e32 if (!a.equals(b)) { return Math.max(a.length(), b.length()); } // \u5982\u679c\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u540c\uff0c\u8fd4\u56de -1 return -1; } } \u7b80\u6d01\u7248\u672c class Solution { public int findLUSlength(String a, String b) { return !a.equals(b) ? Math.max(a.length(), b.length()) : -1; } } \u8bfe\u540e\u7ec3\u4e60 \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC551 Student Attendence Record I \u7ed9\u5b9a\u4e00\u4e2a\u5b66\u751f\u7684\u51fa\u52e4\u8bb0\u5f55\uff0c\u5224\u65ad\u8be5\u5b66\u751f\u662f\u5426\u5b58\u5728\u8fde\u7eed\u7684\u4e09\u5929\u7f3a\u52e4\u6216\u6709\u8d85\u8fc710\u5929\u7684\u65f7\u8bfe\u3002 LC657 Robot Return to Origin \u5224\u65ad\u7ed9\u5b9a\u7684\u673a\u5668\u4eba\u79fb\u52a8\u6307\u4ee4\u662f\u5426\u4f7f\u673a\u5668\u4eba\u56de\u5230\u539f\u70b9\u3002 LC1078 Occurrences After Bigram \u7ed9\u5b9a\u4e00\u4e2a\u6587\u672c\u548c\u4e00\u4e2a\u5927\u5b57\u5178\uff0c\u627e\u51fa\u5927\u5b57\u5178\u4e2d\u51fa\u73b0\u7684\u5355\u8bcd\u5728\u6587\u672c\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u3002 LC557 Reverse Words in a String III \u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e2a\u5355\u8bcd\uff0c\u4fdd\u6301\u5355\u8bcd\u7684\u987a\u5e8f\u4e0d\u53d8\u3002","title":"Lesson6 Leetcode\u5165\u95e8/\u5e38\u7528\u7684\u5b57\u7b26\u4e32\u51fd\u6570/Leetcode\u5b57\u7b26\u4e32\u7ec3\u4e60"},{"location":"lesson6/Lesson6%20Java/#lesson6-leetcodeleetcode","text":"","title":"Lesson6 Leetcode\u5165\u95e8/\u5e38\u7528\u7684\u5b57\u7b26\u4e32\u51fd\u6570/Leetcode\u5b57\u7b26\u4e32\u7ec3\u4e60"},{"location":"lesson6/Lesson6%20Java/#1-leetcode","text":"","title":"1. Leetcode\u5165\u95e8"},{"location":"lesson6/Lesson6%20Java/#11-leetcode","text":"LeetCode\u662f\u4e00\u4e2a\u5728\u7ebf\u7f16\u7a0b\u7ade\u6280\u5e73\u53f0\uff0c\u65e8\u5728\u5e2e\u52a9\u200c\u7a0b\u5e8f\u5458\u63d0\u5347\u7f16\u7a0b\u6280\u80fd\u548c\u89e3\u51b3\u7b97\u6cd5\u95ee\u9898\u3002\u5b83\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u9898\u5e93\uff0c\u5305\u62ec\u5404\u79cd\u7f16\u7a0b\u8bed\u8a00\u7684\u9898\u76ee\uff0c\u8986\u76d6\u4e86\u7b97\u6cd5\u3001\u200c\u6570\u636e\u7ed3\u6784\u3001\u200c\u7cfb\u7edf\u8bbe\u8ba1\u7b49\u591a\u4e2a\u9886\u57df\u3002LeetCode\u4e0d\u4ec5\u662f\u4e00\u4e2a\u7ec3\u4e60\u5e73\u53f0\uff0c\u4e5f\u662f\u4e00\u4e2a\u6280\u672f\u793e\u533a\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u4e0a\u9762\u63d0\u4ea4\u4ee3\u7801\u89e3\u51b3\u65b9\u6848\uff0c\u5e76\u4e0e\u5176\u4ed6\u5f00\u53d1\u8005\u4ea4\u6d41\u5b66\u4e60\u3002 \u5b98\u7f51\uff1ahttps://leetcode.cn \u9996\u5148\u5728\u83dc\u5355\u4e2d\u70b9\u51fb\u2018\u9898\u5e93\u2019\uff1a \u641c\u7d22\u6846\u4e2d\u53ef\u4ee5\u8f93\u5165\u9898\u53f7\u3001\u6807\u9898\u7b49\u67e5\u627e\u76f8\u5e94\u9898\u76ee \u641c\u7d22\u65f6\u53ef\u4ee5\u8bbe\u7f6e\u9898\u76ee\u96be\u5ea6","title":"1.1 \u521d\u8bc6Leetcode"},{"location":"lesson6/Lesson6%20Java/#12-leetcode","text":"\u9898\u76ee\u63cf\u8ff0\uff1a \u6587\u5b57\u63cf\u8ff0 \u5b9e\u4f8b\uff1a\u7ed9\u4e00\u4e9b\u6709\u4ee3\u8868\u6027\u7684\u8f93\u5165\u4e0e\u8f93\u51fa\uff0c\u5e76\u7ed9\u51fa\u89e3\u91ca \u63d0\u793a\uff1a\u7ed9\u51fa\u4e00\u4e9b\u53d8\u91cf\u5728test case\u4e2d\u7684\u8303\u56f4","title":"1.2 Leetcode \u9898\u76ee"},{"location":"lesson6/Lesson6%20Java/#13-leetcode","text":"\u9898\u89e3\uff1a\u70b9\u51fb\u9898\u89e3\u540e\u5373\u53ef\u67e5\u770b\u8be5\u9898\u7684\u51e0\u79cd\u89e3\u6cd5","title":"1.3 Leetcode\u9898\u89e3"},{"location":"lesson6/Lesson6%20Java/#14-leetcode","text":"\u70b9\u51fb\u2018\u63d0\u4ea4\u8bb0\u5f55\u2019\u53ef\u67e5\u770b\u4ee5\u5f80\u63d0\u4ea4\u5185\u5bb9 \u70b9\u51fb\u5176\u4e2d\u4e00\u6761\uff0c\u5373\u51fa\u73b0\u8be5\u6b21\u63d0\u4ea4\u7684\u8be6\u60c5\uff0c\u5305\u62ec\u6027\u80fd\u4e0e\u4ee3\u7801\u5185\u5bb9","title":"1.4 Leetcode\u63d0\u4ea4\u8bb0\u5f55"},{"location":"lesson6/Lesson6%20Java/#15-leetcode","text":"\u70b9\u51fb\u5934\u50cf\uff0c\u67e5\u770b\u505a\u9898\u5206\u6790\u3001\u8fdb\u5ea6\u7ba1\u7406\u7b49\uff0c\u5373\u53ef\u67e5\u770b\u81ea\u5df1\u7684\u505a\u9898\u5185\u5bb9","title":"1.5 Leetcode\u505a\u9898\u5206\u6790"},{"location":"lesson6/Lesson6%20Java/#2","text":"\u4f60\u53ef\u4ee5\u53c2\u8003 Java \u7684\u5b98\u65b9\u6587\u6863\u6765\u67e5\u627e String \u7c7b\u7684\u65b9\u6cd5\u548c API\u3002 Java 17 API \u6587\u6863\uff08\u6700\u65b0\u957f\u671f\u652f\u6301\u7248\u672c\uff09 : String (Java SE 17) Java 21 API \u6587\u6863\uff08\u6700\u65b0\u7a33\u5b9a\u7248\u672c\uff09 : String (Java SE 21) \u5e8f\u53f7 \u65b9\u6cd5\u53ca\u63cf\u8ff0 1 String.toUpperCase() \u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709\u5b57\u7b26\u8f6c\u6362\u4e3a\u5927\u5199\u3002 2 String.format(format, args...) \u7528\u6307\u5b9a\u7684\u5bbd\u5ea6\u548c\u586b\u5145\u5b57\u7b26\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u3002\u53ef\u4ee5\u4f7f\u7528 String.format \u6765\u6a21\u62df center \u65b9\u6cd5\u3002 3 String.indexOf(String str, int fromIndex) \u67e5\u627e\u6307\u5b9a\u5b57\u7b26\u4e32\u5728\u5f53\u524d\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e\u3002\u5982\u679c\u6307\u5b9a\u8303\u56f4\u5185\u67e5\u627e\uff0c\u53ef\u4ee5\u7528 String.indexOf \u548c String.substring \u7ec4\u5408\u6765\u5b9e\u73b0\u3002 4 String.endsWith(String suffix) \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u6307\u5b9a\u7684\u540e\u7f00\u7ed3\u5c3e\u3002 5 String.replace(\"\\t\", String.format(\"%\" + tabSize + \"s\", \"\")) \u5c06\u5236\u8868\u7b26\u8f6c\u6362\u4e3a\u7a7a\u683c\u3002\u53ef\u4ee5\u4f7f\u7528 String.format \u6765\u66ff\u6362\u5236\u8868\u7b26\u3002 6 String.indexOf(String str, int fromIndex) \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u5305\u542b\u6307\u5b9a\u7684\u5b50\u5b57\u7b26\u4e32\u3002\u5982\u679c\u6307\u5b9a\u8303\u56f4\u5185\u67e5\u627e\uff0c\u53ef\u4ee5\u7528 String.indexOf \u548c String.substring \u7ec4\u5408\u6765\u5b9e\u73b0\u3002 7 String.indexOf(String str, int fromIndex) \u67e5\u627e\u6307\u5b9a\u5b57\u7b26\u4e32\u5728\u5f53\u524d\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e\u3002\u5982\u679c\u5b57\u7b26\u4e32\u4e0d\u5b58\u5728\u4f1a\u8fd4\u56de -1\u3002 8 String.chars().allMatch(Character::isLetter) \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u6240\u6709\u5b57\u7b26\u90fd\u662f\u5b57\u6bcd\u3002 9 String.chars().allMatch(Character::isDigit) \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u6240\u6709\u5b57\u7b26\u90fd\u662f\u6570\u5b57\u3002 10 String.chars().allMatch(Character::isLowerCase) \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u6240\u6709\u5b57\u6bcd\u90fd\u662f\u5c0f\u5199\u3002 11 String.chars().allMatch(Character::isDigit) \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u6240\u6709\u5b57\u7b26\u90fd\u662f\u6570\u5b57\u3002 12 String.chars().allMatch(Character::isUpperCase) \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u6240\u6709\u5b57\u6bcd\u90fd\u662f\u5927\u5199\u3002 13 String.join(CharSequence delimiter, CharSequence... elements) \u4f7f\u7528\u6307\u5b9a\u7684\u5206\u9694\u7b26\u5c06\u591a\u4e2a\u5b57\u7b26\u4e32\u8fde\u63a5\u6210\u4e00\u4e2a\u3002 14 String.length() \u8fd4\u56de\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002 15 String.format(\"%-\" + width + \"s\", original) \u5de6\u5bf9\u9f50\u5b57\u7b26\u4e32\uff0c\u5e76\u586b\u5145\u81f3\u6307\u5b9a\u5bbd\u5ea6\u3002 16 String.toLowerCase() \u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709\u5927\u5199\u5b57\u7b26\u8f6c\u6362\u4e3a\u5c0f\u5199\u3002 17 String.replace(CharSequence target, CharSequence replacement) \u66ff\u6362\u5b57\u7b26\u4e32\u4e2d\u7684\u65e7\u503c\u4e3a\u65b0\u503c\u3002 18 String.lastIndexOf(String str) \u4ece\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u5f00\u59cb\u67e5\u627e\u6307\u5b9a\u7684\u5b50\u5b57\u7b26\u4e32\u3002 19 String.lastIndexOf(String str) \u4ece\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u5f00\u59cb\u67e5\u627e\u6307\u5b9a\u7684\u5b50\u5b57\u7b26\u4e32\u3002\u5982\u679c\u5b57\u7b26\u4e32\u4e0d\u5b58\u5728\u4f1a\u8fd4\u56de -1\u3002 20 String.format(\"%\" + width + \"s\", original) \u53f3\u5bf9\u9f50\u5b57\u7b26\u4e32\uff0c\u5e76\u586b\u5145\u81f3\u6307\u5b9a\u5bbd\u5ea6\u3002 21 String.split(String regex, int limit) \u4f7f\u7528\u6307\u5b9a\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u5206\u9694\u5b57\u7b26\u4e32\u3002 22 String.startsWith(String prefix) \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u6307\u5b9a\u7684\u524d\u7f00\u5f00\u5934\u3002 23 String.toUpperCase() \u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u5c0f\u5199\u5b57\u6bcd\u8f6c\u6362\u4e3a\u5927\u5199\u3002","title":"2. \u66f4\u591a\u5e38\u7528\u5b57\u7b26\u4e32\u51fd\u6570\u7528\u6cd5\u548c\u6587\u6863\u67e5\u627e\u65b9\u6cd5"},{"location":"lesson6/Lesson6%20Java/#3-leetcode","text":"\u4ece\u672c\u8282\u8bfe\u7a0b\u5f00\u59cb\uff0c\u6211\u4eec\u5c06\u7ed3\u5408Leetcode\u4e0a\u7684\u7ecf\u5178\u9898\u76ee\u8fdb\u884c\u6559\u5b66","title":"3. Leetcode \u9898\u76ee\u7ec3\u4e60"},{"location":"lesson6/Lesson6%20Java/#_1","text":"","title":"\u4f8b\u9898\u8bb2\u89e3"},{"location":"lesson6/Lesson6%20Java/#lc-58","text":"\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u7531\u82e5\u5e72\u5355\u8bcd\u7ec4\u6210\uff0c\u5355\u8bcd\u524d\u540e\u7528\u4e00\u4e9b\u7a7a\u683c\u5b57\u7b26\u9694\u5f00\u3002\u8fd4\u56de\u5b57\u7b26\u4e32\u4e2d \u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6 \u3002 \u5355\u8bcd \u662f\u6307\u4ec5\u7531\u5b57\u6bcd\u7ec4\u6210\u3001\u4e0d\u5305\u542b\u4efb\u4f55\u7a7a\u683c\u5b57\u7b26\u7684\u6700\u5927\u5b50\u5b57\u7b26\u4e32\u3002","title":"LC 58 \u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u5b57\u6570"},{"location":"lesson6/Lesson6%20Java/#_2","text":"\u53bb\u9664\u5b57\u7b26\u4e32\u672b\u5c3e\u7684\u7a7a\u683c : \u5b57\u7b26\u4e32\u53ef\u80fd\u5728\u672b\u5c3e\u5305\u542b\u7a7a\u683c\uff0c\u6211\u4eec\u9996\u5148\u8981\u53bb\u6389\u8fd9\u4e9b\u7a7a\u683c\uff0c\u4ee5\u4fbf\u51c6\u786e\u627e\u5230\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u3002 \u4ece\u5b57\u7b26\u4e32\u672b\u5c3e\u5f00\u59cb\u5411\u524d\u904d\u5386 : \u4ece\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u5f00\u59cb\u5411\u524d\u904d\u5386\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u540e\u7ee7\u7eed\u8ba1\u6570\uff0c\u76f4\u5230\u627e\u5230\u7a7a\u683c\u6216\u8005\u5230\u8fbe\u5b57\u7b26\u4e32\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u8fd9\u6bb5\u8ba1\u6570\u5c31\u662f\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6\u3002","title":"\u601d\u8def"},{"location":"lesson6/Lesson6%20Java/#_3","text":"\u53cd\u5411\u904d\u5386\u65b9\u6cd5 \uff1a \u4ece\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u5f00\u59cb\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u975e\u7a7a\u683c\u5b57\u7b26\uff0c\u8fd9\u4e2a\u5b57\u7b26\u662f\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\u3002 \u4ece\u8fd9\u4e2a\u5b57\u6bcd\u5f00\u59cb\u53cd\u5411\u904d\u5386\uff0c\u76f4\u5230\u9047\u5230\u7a7a\u683c\u6216\u8005\u5230\u8fbe\u5b57\u7b26\u4e32\u7684\u8d77\u59cb\u4f4d\u7f6e\u3002\u904d\u5386\u5230\u7684\u6bcf\u4e2a\u5b57\u6bcd\u90fd\u662f\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u4e00\u90e8\u5206\u3002 \u904d\u5386\u5230\u7684\u5b57\u6bcd\u6570\u91cf\u5373\u4e3a\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6\u3002 class Solution { public int lengthOfLastWord(String s) { int index = s.length() - 1; // \u8df3\u8fc7\u5c3e\u90e8\u7a7a\u683c while (index >= 0 && s.charAt(index) == ' ') { index--; } int wordLength = 0; // \u8ba1\u7b97\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6 while (index >= 0 && s.charAt(index) != ' ') { wordLength++; index--; } return wordLength; } } \u8c03\u7528\u51fd\u6570\u65b9\u6cd5 \uff1a class Solution { public int lengthOfLastWord(String s) { s = s.trim(); return s.length() - s.lastIndexOf(\" \") - 1; } }","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson6/Lesson6%20Java/#lc434","text":"","title":"LC434. \u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd\u6570"},{"location":"lesson6/Lesson6%20Java/#_4","text":"\u7edf\u8ba1\u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd\u4e2a\u6570\uff0c\u8fd9\u91cc\u7684\u5355\u8bcd\u6307\u7684\u662f\u8fde\u7eed\u7684\u4e0d\u662f\u7a7a\u683c\u7684\u5b57\u7b26\u3002 \u8bf7\u6ce8\u610f\uff0c\u4f60\u53ef\u4ee5\u5047\u5b9a\u5b57\u7b26\u4e32\u91cc\u4e0d\u5305\u62ec\u4efb\u4f55\u4e0d\u53ef\u6253\u5370\u7684\u5b57\u7b26\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson6/Lesson6%20Java/#_5","text":"\u6211\u4eec\u9700\u8981\u7edf\u8ba1\u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd\u4e2a\u6570\uff0c\u5355\u8bcd\u662f\u7531\u8fde\u7eed\u7684\u975e\u7a7a\u683c\u5b57\u7b26\u7ec4\u6210\u7684\u3002\u7a7a\u683c\u53ef\u4ee5\u7528\u6765\u5206\u9694\u5355\u8bcd\u3002\u9898\u76ee\u4fdd\u8bc1\u5b57\u7b26\u4e32\u4e2d\u6ca1\u6709\u4e0d\u53ef\u6253\u5370\u5b57\u7b26\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u5904\u7406\u7279\u6b8a\u5b57\u7b26\u3002","title":"\u9898\u76ee\u5206\u6790"},{"location":"lesson6/Lesson6%20Java/#_6","text":"\u5e38\u89c4\u601d\u8def 1. \u53bb\u9664\u591a\u4f59\u7a7a\u683c : \u5728\u5904\u7406\u5b57\u7b26\u4e32\u4e4b\u524d\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u8003\u8651\u5982\u4f55\u5904\u7406\u5b57\u7b26\u4e32\u4e2d\u53ef\u80fd\u5b58\u5728\u7684\u591a\u4f59\u7a7a\u683c\u95ee\u9898\uff08\u5982\u524d\u540e\u7a7a\u683c\u6216\u591a\u91cd\u7a7a\u683c\uff09\u3002\u4f46\u5b9e\u9645\u5b9e\u73b0\u4e2d\uff0c\u901a\u5e38\u4e0d\u9700\u8981\u4e13\u95e8\u53bb\u9664\u7a7a\u683c\uff0c\u53ea\u9700\u8981\u6b63\u786e\u5730\u5206\u5272\u5355\u8bcd\u5373\u53ef\u3002 \u68c0\u6d4b\u4e00\u4e2a\u5355\u8bcd\u7684\u5f00\u59cb\uff1a - s.charAt(i) != ' ' \uff1a\u5f53\u524d\u5b57\u7b26\u4e0d\u662f\u7a7a\u683c\u3002 - (i == 0 || s.charAt(i - 1) == ' ') \uff1a\u5f53\u524d\u5b57\u7b26\u662f\u7b2c\u4e00\u4e2a\u5b57\u7b26\uff0c\u6216\u8005\u524d\u4e00\u4e2a\u5b57\u7b26\u662f\u7a7a\u683c\u3002 \u6ee1\u8db3\u8fd9\u4e24\u4e2a\u6761\u4ef6\u65f6\uff0c\u610f\u5473\u7740\u6211\u4eec\u9047\u5230\u4e00\u4e2a\u65b0\u7684\u5355\u8bcd\uff0c\u4e8e\u662f\u8ba1\u6570\u5668 count \u589e\u52a0\u3002 \u904d\u5386\u5b57\u7b26\u4e32 : \u6211\u4eec\u53ef\u4ee5\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u5e76\u5728\u9047\u5230\u975e\u7a7a\u683c\u5b57\u7b26\u65f6\uff0c\u8bc6\u522b\u5230\u4e00\u4e2a\u65b0\u7684\u5355\u8bcd\u5f00\u59cb\u3002\u5f53\u9047\u5230\u7a7a\u683c\u5b57\u7b26\u65f6\uff0c\u5219\u8868\u793a\u5f53\u524d\u5355\u8bcd\u7ed3\u675f\u3002 \u8bb0\u5f55\u5355\u8bcd\u6570\u91cf : \u4f7f\u7528\u4e00\u4e2a\u8ba1\u6570\u5668\uff0c\u5f53\u68c0\u6d4b\u5230\u4e00\u4e2a\u5355\u8bcd\u7684\u5f00\u59cb\u65f6\uff0c\u8ba1\u6570\u5668\u52a01\u3002 class Solution { public int countSegments(String s) { int count = 0; // \u904d\u5386\u5b57\u7b26\u4e32 for (int i = 0; i < s.length(); i++) { // \u68c0\u67e5\u5f53\u524d\u5b57\u7b26\u662f\u5426\u4e3a\u975e\u7a7a\u683c\u5b57\u7b26\u4e14\u524d\u4e00\u4e2a\u5b57\u7b26\u4e3a\u7a7a\u683c\u5b57\u7b26 if (s.charAt(i) != ' ' && (i == 0 || s.charAt(i - 1) == ' ')) { count++; } } return count; } } \u8c03\u7528\u51fd\u6570\u6cd5 java class Solution { public int countWords(String s) { // \u4f7f\u7528\u7a7a\u683c\u5206\u9694\u5b57\u7b26\u4e32\u5e76\u8ba1\u7b97\u5355\u8bcd\u6570 String[] words = s.split(\"\\\\s+\"); return words.length; } }","title":"\u601d\u8def"},{"location":"lesson6/Lesson6%20Java/#_7","text":"","title":"\u4e3e\u4e00\u53cd\u4e09"},{"location":"lesson6/Lesson6%20Java/#lc709","text":"","title":"LC709. \u8f6c\u6362\u6210\u5c0f\u5199\u5b57\u6bcd"},{"location":"lesson6/Lesson6%20Java/#_8","text":"\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u5c06\u8be5\u5b57\u7b26\u4e32\u4e2d\u7684\u5927\u5199\u5b57\u6bcd\u8f6c\u6362\u6210\u76f8\u540c\u7684\u5c0f\u5199\u5b57\u6bcd\uff0c\u8fd4\u56de\u65b0\u7684\u5b57\u7b26\u4e32\uff0c\u67e5\u627e\u5e76\u4f7f\u7528\u5408\u9002\u7684\u5b57\u7b26\u4e32\u51fd\u6570\u89e3\u7b54\u5373\u53ef\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson6/Lesson6%20Java/#_9","text":"class Solution { public String toLowerCase(String s) { return s.toLowerCase(); } }","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"lesson6/Lesson6%20Java/#lc520","text":"","title":"LC520. \u68c0\u6d4b\u5927\u5199\u5b57\u6bcd"},{"location":"lesson6/Lesson6%20Java/#_10","text":"\u6211\u4eec\u5b9a\u4e49\uff0c\u5728\u4ee5\u4e0b\u60c5\u51b5\u4e0b\uff0c\u5355\u8bcd\u7684\u5927\u5199\u7528\u6cd5\u662f\u6b63\u786e\u7684\uff1a \u5168\u90e8\u5b57\u6bcd\u90fd\u662f\u5927\u5199\uff0c\u6bd4\u5982 \"USA\" \u3002 \u5355\u8bcd\u4e2d\u6240\u6709\u5b57\u6bcd\u90fd\u4e0d\u662f\u5927\u5199\uff0c\u6bd4\u5982 \"leetcode\" \u3002 \u5982\u679c\u5355\u8bcd\u4e0d\u53ea\u542b\u6709\u4e00\u4e2a\u5b57\u6bcd\uff0c\u53ea\u6709\u9996\u5b57\u6bcd\u5927\u5199\uff0c\u6bd4\u5982 \"Google\" \u3002 \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 word \u3002\u5982\u679c\u5927\u5199\u7528\u6cd5\u6b63\u786e\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson6/Lesson6%20Java/#_11","text":"\u8fd9\u4e2a\u95ee\u9898\u8981\u6c42\u6211\u4eec\u5224\u65ad\u4e00\u4e2a\u5355\u8bcd\u7684\u5927\u5c0f\u5199\u662f\u5426\u7b26\u5408\u7279\u5b9a\u7684\u89c4\u5219\u3002\u5177\u4f53\u7684\u89c4\u5219\u5305\u62ec\uff1a \u5168\u90e8\u5b57\u6bcd\u90fd\u662f\u5927\u5199 \uff0c\u4f8b\u5982 \"USA\" \u3002 \u5168\u90e8\u5b57\u6bcd\u90fd\u4e0d\u662f\u5927\u5199 \uff0c\u4f8b\u5982 \"leetcode\" \u3002 \u53ea\u6709\u9996\u5b57\u6bcd\u5927\u5199 \uff0c\u4f8b\u5982 \"Google\" \u3002 \u5982\u679c\u4e00\u4e2a\u5355\u8bcd\u7b26\u5408\u4ee5\u4e0a\u4efb\u610f\u4e00\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u8fd4\u56de true \uff0c\u5426\u5219\u8fd4\u56de false \u3002","title":"\u9898\u76ee\u5206\u6790"},{"location":"lesson6/Lesson6%20Java/#_12","text":"\u5224\u65ad\u5168\u5927\u5199 \uff1a\u4f7f\u7528 Java \u7684 String \u7c7b\u7684 toUpperCase() \u65b9\u6cd5\uff0c\u628a\u5355\u8bcd\u8f6c\u6362\u4e3a\u5927\u5199\uff0c\u7136\u540e\u68c0\u67e5\u8f6c\u6362\u540e\u7684\u5355\u8bcd\u662f\u5426\u548c\u539f\u59cb\u5355\u8bcd\u76f8\u540c\u3002\u5982\u679c\u76f8\u540c\uff0c\u8bf4\u660e\u6240\u6709\u5b57\u6bcd\u90fd\u5927\u5199\u3002 \u5224\u65ad\u5168\u5c0f\u5199 \uff1a\u7c7b\u4f3c\u7684\uff0c\u4f7f\u7528 toLowerCase() \u65b9\u6cd5\uff0c\u628a\u5355\u8bcd\u8f6c\u6362\u4e3a\u5c0f\u5199\uff0c\u7136\u540e\u68c0\u67e5\u8f6c\u6362\u540e\u7684\u5355\u8bcd\u662f\u5426\u548c\u539f\u59cb\u5355\u8bcd\u76f8\u540c\u3002\u5982\u679c\u76f8\u540c\uff0c\u8bf4\u660e\u6240\u6709\u5b57\u6bcd\u90fd\u5c0f\u5199\u3002 \u5224\u65ad\u9996\u5b57\u6bcd\u5927\u5199 \uff1a\u9996\u5148\u68c0\u67e5\u9996\u5b57\u6bcd\u662f\u5426\u5927\u5199\uff08\u53ef\u4ee5\u4f7f\u7528 Character.isUpperCase() \u65b9\u6cd5\uff09\uff0c\u7136\u540e\u68c0\u67e5\u5269\u4e0b\u7684\u5b57\u6bcd\u662f\u5426\u5168\u90e8\u662f\u5c0f\u5199\u3002 \u5f52\u7eb3 \uff1a\u5982\u679c\u6ee1\u8db3\u4ee5\u4e0a\u4efb\u4f55\u4e00\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u5c31\u8fd4\u56de true \uff0c\u5426\u5219\u8fd4\u56de false \u3002","title":"\u601d\u8def\u8bb2\u89e3"},{"location":"lesson6/Lesson6%20Java/#_13","text":"\u5e38\u89c4\u89e3\u6cd5 class Solution { public boolean detectCapitalUse(String word) { // \u82e5\u7b2c 1 \u4e2a\u5b57\u6bcd\u4e3a\u5c0f\u5199\uff0c\u5219\u9700\u989d\u5916\u5224\u65ad\u7b2c 2 \u4e2a\u5b57\u6bcd\u662f\u5426\u4e3a\u5c0f\u5199 if (word.length() >= 2 && Character.isLowerCase(word.charAt(0)) && Character.isUpperCase(word.charAt(1))) { return false; } // \u65e0\u8bba\u7b2c 1 \u4e2a\u5b57\u6bcd\u662f\u5426\u5927\u5199\uff0c\u5176\u4ed6\u5b57\u6bcd\u5fc5\u987b\u4e0e\u7b2c 2 \u4e2a\u5b57\u6bcd\u7684\u5927\u5c0f\u5199\u76f8\u540c for (int i = 2; i < word.length(); ++i) { if (Character.isLowerCase(word.charAt(i)) ^ Character.isLowerCase(word.charAt(1))) { return false; } } return true; } } \u5b57\u7b26\u4e32\u51fd\u6570\u89e3\u6cd5 class Solution { public boolean detectCapitalUse(String word) { return word.equals(word.toUpperCase())||word.substring(1).equals(word.substring(1).toLowerCase()); } }","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"lesson6/Lesson6%20Java/#lc521-i","text":"","title":"LC521. \u6700\u957f\u7279\u6b8a\u5e8f\u5217 \u2160"},{"location":"lesson6/Lesson6%20Java/#_14","text":"\u7ed9\u4f60\u4e24\u4e2a\u5b57\u7b26\u4e32 a \u548c b \uff0c\u8bf7\u8fd4\u56de\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u6700\u957f\u7684\u7279\u6b8a\u5e8f\u5217\u7684\u957f\u5ea6\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de -1 \u3002 \u6700\u957f\u7279\u6b8a\u5e8f\u5217 \u5b9a\u4e49\u5982\u4e0b\uff1a\u8be5\u5e8f\u5217\u4e3a\u67d0\u5b57\u7b26\u4e32\u72ec\u6709\u7684\u6700\u957f\u5b50\u5e8f\u5217\uff08\u5373\u4e0d\u80fd\u662f\u5176\u4ed6\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\uff09\u3002 \u5b57\u7b26\u4e32 s \u7684\u5b50\u5e8f\u5217\u662f\u5728\u4ece s \u4e2d\u5220\u9664\u4efb\u610f\u6570\u91cf\u7684\u5b57\u7b26\u540e\u53ef\u4ee5\u83b7\u5f97\u7684\u5b57\u7b26\u4e32\u3002\u4f8b\u5982\uff0c\"abc\" \u662f \"aebdc\" \u7684\u5b50\u5e8f\u5217\uff0c\u56e0\u4e3a\u5220\u9664 \"aebdc\" \u4e2d\u659c\u4f53\u52a0\u7c97\u7684\u5b57\u7b26\u53ef\u4ee5\u5f97\u5230 \"abc\"\u3002 \"aebdc\" \u7684\u5b50\u5e8f\u5217\u8fd8\u5305\u62ec \"aebdc\"\u3001\"aeb\" \u548c \"\"\uff08\u7a7a\u5b57\u7b26\u4e32\uff09\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson6/Lesson6%20Java/#_15","text":"\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u4e0d\u4f1a\u8d85\u8fc7\u8be5\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002\u82e5\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u7b49\u4e8e\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff0c\u90a3\u4e48\u5b50\u5e8f\u5217\u5c31\u662f\u8be5\u5b57\u7b26\u4e32\u3002 \u82e5\u4e24\u5b57\u7b26\u4e32\u4e0d\u76f8\u540c\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u8f83\u957f\u7684\u5b57\u7b26\u4e32\u4f5c\u4e3a\u6700\u957f\u7279\u6b8a\u5e8f\u5217\uff0c\u663e\u7136\u5b83\u4e0d\u4f1a\u662f\u8f83\u77ed\u7684\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\u3002\u7279\u522b\u5730\uff0c\u5f53\u4e24\u5b57\u7b26\u4e32\u957f\u5ea6\u76f8\u540c\u65f6\uff08\u4f46\u4e0d\u662f\u540c\u4e00\u5b57\u7b26\u4e32\uff09\uff0c\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u9009\u62e9\u5176\u4e2d\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32\u4f5c\u4e3a\u6700\u957f\u7279\u6b8a\u5e8f\u5217\uff0c\u5b83\u4e0d\u4f1a\u662f\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\u3002 \u82e5\u4e24\u5b57\u7b26\u4e32\u76f8\u540c\uff0c\u90a3\u4e48\u4efb\u4e00\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\u5747\u4f1a\u51fa\u73b0\u5728\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\uff0c\u6b64\u65f6\u5e94\u8fd4\u56de \u22121\u3002","title":"\u63d0\u793a"},{"location":"lesson6/Lesson6%20Java/#_16","text":"\u8fd9\u4e2a\u95ee\u9898\u8981\u6c42\u6211\u4eec\u627e\u5230\u4e24\u4e2a\u5b57\u7b26\u4e32 a \u548c b \u7684\u6700\u957f\u7279\u6b8a\u5e8f\u5217\u3002\u6839\u636e\u9898\u76ee\u4e2d\u7684\u5b9a\u4e49\uff0c\u6700\u957f\u7279\u6b8a\u5e8f\u5217\u662f\u6307\u5728\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u72ec\u6709\u7684\u6700\u957f\u5b50\u5e8f\u5217\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\uff0c\u90a3\u4e48\u5b83\u4e0d\u662f\u7279\u6b8a\u5e8f\u5217\u3002\u6211\u4eec\u7684\u76ee\u6807\u662f\u627e\u5230\u6700\u957f\u7684\u7279\u6b8a\u5e8f\u5217\u7684\u957f\u5ea6\u3002","title":"\u9898\u76ee\u5206\u6790"},{"location":"lesson6/Lesson6%20Java/#_17","text":"\u5b57\u7b26\u4e32\u76f8\u7b49\u7684\u60c5\u51b5 : \u5982\u679c\u5b57\u7b26\u4e32 a \u548c b \u76f8\u7b49\uff0c\u90a3\u4e48\u6bcf\u4e2a\u5b50\u5e8f\u5217\u5728\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u4e5f\u662f\u5b58\u5728\u7684\u3002\u56e0\u6b64\uff0c\u4e0d\u53ef\u80fd\u6709\u72ec\u6709\u7684\u5b50\u5e8f\u5217\uff0c\u76f4\u63a5\u8fd4\u56de -1 \u3002 \u5b57\u7b26\u4e32\u4e0d\u76f8\u7b49\u7684\u60c5\u51b5 : \u5982\u679c\u5b57\u7b26\u4e32 a \u548c b \u4e0d\u76f8\u7b49\uff0c\u90a3\u4e48\u8f83\u957f\u7684\u5b57\u7b26\u4e32\u672c\u8eab\u5c31\u662f\u5b83\u7684\u6700\u957f\u7279\u6b8a\u5e8f\u5217\uff0c\u56e0\u4e3a\u5b83\u4e0d\u80fd\u5b8c\u5168\u51fa\u73b0\u5728\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u3002\u6b64\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u8f83\u957f\u7684\u90a3\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002","title":"\u601d\u8def"},{"location":"lesson6/Lesson6%20Java/#_18","text":"\u76f4\u89c2\u7248\u672c class Solution { public int findLUSlength(String a, String b) { // \u5982\u679c\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e0d\u540c\uff0c\u8fd4\u56de\u957f\u5ea6\u8f83\u957f\u7684\u5b57\u7b26\u4e32 if (!a.equals(b)) { return Math.max(a.length(), b.length()); } // \u5982\u679c\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u540c\uff0c\u8fd4\u56de -1 return -1; } } \u7b80\u6d01\u7248\u672c class Solution { public int findLUSlength(String a, String b) { return !a.equals(b) ? Math.max(a.length(), b.length()) : -1; } }","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"lesson6/Lesson6%20Java/#_19","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC551 Student Attendence Record I \u7ed9\u5b9a\u4e00\u4e2a\u5b66\u751f\u7684\u51fa\u52e4\u8bb0\u5f55\uff0c\u5224\u65ad\u8be5\u5b66\u751f\u662f\u5426\u5b58\u5728\u8fde\u7eed\u7684\u4e09\u5929\u7f3a\u52e4\u6216\u6709\u8d85\u8fc710\u5929\u7684\u65f7\u8bfe\u3002 LC657 Robot Return to Origin \u5224\u65ad\u7ed9\u5b9a\u7684\u673a\u5668\u4eba\u79fb\u52a8\u6307\u4ee4\u662f\u5426\u4f7f\u673a\u5668\u4eba\u56de\u5230\u539f\u70b9\u3002 LC1078 Occurrences After Bigram \u7ed9\u5b9a\u4e00\u4e2a\u6587\u672c\u548c\u4e00\u4e2a\u5927\u5b57\u5178\uff0c\u627e\u51fa\u5927\u5b57\u5178\u4e2d\u51fa\u73b0\u7684\u5355\u8bcd\u5728\u6587\u672c\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u3002 LC557 Reverse Words in a String III \u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e2a\u5355\u8bcd\uff0c\u4fdd\u6301\u5355\u8bcd\u7684\u987a\u5e8f\u4e0d\u53d8\u3002","title":"\u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson6/Lesson6%20Python/","text":"Lesson6 Leetcode\u5165\u95e8/\u5e38\u7528\u7684\u5b57\u7b26\u4e32\u51fd\u6570/Leetcode\u5b57\u7b26\u4e32\u7ec3\u4e60 \u76ee\u5f55 1. Leetcode\u5165\u95e8 1.1 \u521d\u8bc6Leetcode 1.2 Leetcode \u9898\u76ee 1.3 Leetcode\u9898\u89e3 1.4 Leetcode\u63d0\u4ea4\u8bb0\u5f55 1.5 Leetcode\u505a\u9898\u5206\u6790 2. \u66f4\u591a\u5e38\u7528\u5b57\u7b26\u4e32\u51fd\u6570\u7528\u6cd5\u548c\u6587\u6863\u67e5\u627e\u65b9\u6cd5 3. Leetcode \u9898\u76ee\u7ec3\u4e60 \u4f8b\u9898\u8bb2\u89e3 LC 58 \u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u5b57\u6570 LC434. \u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd\u6570 \u4e3e\u4e00\u53cd\u4e09 LC709. \u8f6c\u6362\u6210\u5c0f\u5199\u5b57\u6bcd LC520. \u68c0\u6d4b\u5927\u5199\u5b57\u6bcd LC521. \u6700\u957f\u7279\u6b8a\u5e8f\u5217 \u2160 \u8bfe\u540e\u7ec3\u4e60 1. Leetcode\u5165\u95e8 1.1 \u521d\u8bc6Leetcode LeetCode\u662f\u4e00\u4e2a\u5728\u7ebf\u7f16\u7a0b\u7ade\u6280\u5e73\u53f0\uff0c\u65e8\u5728\u5e2e\u52a9\u200c\u7a0b\u5e8f\u5458\u63d0\u5347\u7f16\u7a0b\u6280\u80fd\u548c\u89e3\u51b3\u7b97\u6cd5\u95ee\u9898\u3002\u5b83\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u9898\u5e93\uff0c\u5305\u62ec\u5404\u79cd\u7f16\u7a0b\u8bed\u8a00\u7684\u9898\u76ee\uff0c\u8986\u76d6\u4e86\u7b97\u6cd5\u3001\u200c\u6570\u636e\u7ed3\u6784\u3001\u200c\u7cfb\u7edf\u8bbe\u8ba1\u7b49\u591a\u4e2a\u9886\u57df\u3002LeetCode\u4e0d\u4ec5\u662f\u4e00\u4e2a\u7ec3\u4e60\u5e73\u53f0\uff0c\u4e5f\u662f\u4e00\u4e2a\u6280\u672f\u793e\u533a\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u4e0a\u9762\u63d0\u4ea4\u4ee3\u7801\u89e3\u51b3\u65b9\u6848\uff0c\u5e76\u4e0e\u5176\u4ed6\u5f00\u53d1\u8005\u4ea4\u6d41\u5b66\u4e60\u3002 \u5b98\u7f51\uff1ahttps://leetcode.cn \u9996\u5148\u5728\u83dc\u5355\u4e2d\u70b9\u51fb\u2018\u9898\u5e93\u2019\uff1a \u641c\u7d22\u6846\u4e2d\u53ef\u4ee5\u8f93\u5165\u9898\u53f7\u3001\u6807\u9898\u7b49\u67e5\u627e\u76f8\u5e94\u9898\u76ee \u641c\u7d22\u65f6\u53ef\u4ee5\u8bbe\u7f6e\u9898\u76ee\u96be\u5ea6 1.2 Leetcode \u9898\u76ee \u9898\u76ee\u63cf\u8ff0\uff1a \u6587\u5b57\u63cf\u8ff0 \u5b9e\u4f8b\uff1a\u7ed9\u4e00\u4e9b\u6709\u4ee3\u8868\u6027\u7684\u8f93\u5165\u4e0e\u8f93\u51fa\uff0c\u5e76\u7ed9\u51fa\u89e3\u91ca \u63d0\u793a\uff1a\u7ed9\u51fa\u4e00\u4e9b\u53d8\u91cf\u5728test case\u4e2d\u7684\u8303\u56f4 1.3 Leetcode\u9898\u89e3 \u9898\u89e3\uff1a\u70b9\u51fb\u9898\u89e3\u540e\u5373\u53ef\u67e5\u770b\u8be5\u9898\u7684\u51e0\u79cd\u89e3\u6cd5 1.4 Leetcode\u63d0\u4ea4\u8bb0\u5f55 \u70b9\u51fb\u2018\u63d0\u4ea4\u8bb0\u5f55\u2019\u53ef\u67e5\u770b\u4ee5\u5f80\u63d0\u4ea4\u5185\u5bb9 \u70b9\u51fb\u5176\u4e2d\u4e00\u6761\uff0c\u5373\u51fa\u73b0\u8be5\u6b21\u63d0\u4ea4\u7684\u8be6\u60c5\uff0c\u5305\u62ec\u6027\u80fd\u4e0e\u4ee3\u7801\u5185\u5bb9 1.5 Leetcode\u505a\u9898\u5206\u6790 \u70b9\u51fb\u5934\u50cf\uff0c\u67e5\u770b\u505a\u9898\u5206\u6790\u3001\u8fdb\u5ea6\u7ba1\u7406\u7b49\uff0c\u5373\u53ef\u67e5\u770b\u81ea\u5df1\u7684\u505a\u9898\u5185\u5bb9 2. \u66f4\u591a\u5e38\u7528\u5b57\u7b26\u4e32\u51fd\u6570\u7528\u6cd5\u548c\u6587\u6863\u67e5\u627e\u65b9\u6cd5 \u5e38\u7528\u5b57\u7b26\u4e32\u51fd\u6570\u4e0e\u641c\u7d22\u6587\u6863\u65b9\u6cd5 \u5e8f\u53f7 Python\u65b9\u6cd5\u53ca\u63cf\u8ff0 1 str.upper() \u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709\u5b57\u7b26\u8f6c\u6362\u4e3a\u5927\u5199\u3002 2 str.center(width, fillchar) \u7528\u6307\u5b9a\u7684\u5bbd\u5ea6\u548c\u586b\u5145\u5b57\u7b26\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u3002 3 str.find(substring, start) \u67e5\u627e\u6307\u5b9a\u5b57\u7b26\u4e32\u5728\u5f53\u524d\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e\uff0c\u5982\u679c\u6307\u5b9a\u8303\u56f4\u5185\u67e5\u627e\u3002 4 str.endswith(suffix) \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u6307\u5b9a\u7684\u540e\u7f00\u7ed3\u5c3e\u3002 5 str.replace(\"\\t\", \" \" * tabSize) \u5c06\u5236\u8868\u7b26\u8f6c\u6362\u4e3a\u7a7a\u683c\u3002 6 str.find(substring, start) != -1 \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u5305\u542b\u6307\u5b9a\u7684\u5b50\u5b57\u7b26\u4e32\u3002 7 str.find(substring, start) \u67e5\u627e\u6307\u5b9a\u5b57\u7b26\u4e32\u5728\u5f53\u524d\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e\uff0c\u5982\u679c\u5b57\u7b26\u4e32\u4e0d\u5b58\u5728\u4f1a\u8fd4\u56de -1\u3002 8 str.isalpha() \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u6240\u6709\u5b57\u7b26\u90fd\u662f\u5b57\u6bcd\u3002 9 str.isdigit() \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u6240\u6709\u5b57\u7b26\u90fd\u662f\u6570\u5b57\u3002 10 str.islower() \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u6240\u6709\u5b57\u6bcd\u90fd\u662f\u5c0f\u5199\u3002 11 str.isdigit() \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u6240\u6709\u5b57\u7b26\u90fd\u662f\u6570\u5b57\u3002 12 str.isupper() \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u6240\u6709\u5b57\u6bcd\u90fd\u662f\u5927\u5199\u3002 13 delimiter.join(elements) \u4f7f\u7528\u6307\u5b9a\u7684\u5206\u9694\u7b26\u5c06\u591a\u4e2a\u5b57\u7b26\u4e32\u8fde\u63a5\u6210\u4e00\u4e2a\u3002 14 len(str) \u8fd4\u56de\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002 15 str.ljust(width) \u5de6\u5bf9\u9f50\u5b57\u7b26\u4e32\uff0c\u5e76\u586b\u5145\u81f3\u6307\u5b9a\u5bbd\u5ea6\u3002 16 str.lower() \u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709\u5927\u5199\u5b57\u7b26\u8f6c\u6362\u4e3a\u5c0f\u5199\u3002 17 str.replace(old_value, new_value) \u66ff\u6362\u5b57\u7b26\u4e32\u4e2d\u7684\u65e7\u503c\u4e3a\u65b0\u503c\u3002 18 str.rfind(substring) \u4ece\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u5f00\u59cb\u67e5\u627e\u6307\u5b9a\u7684\u5b50\u5b57\u7b26\u4e32\u3002 19 str.rfind(substring) \u4ece\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u5f00\u59cb\u67e5\u627e\u6307\u5b9a\u7684\u5b50\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u5b57\u7b26\u4e32\u4e0d\u5b58\u5728\u4f1a\u8fd4\u56de -1\u3002 20 str.rjust(width) \u53f3\u5bf9\u9f50\u5b57\u7b26\u4e32\uff0c\u5e76\u586b\u5145\u81f3\u6307\u5b9a\u5bbd\u5ea6\u3002 21 re.split(regex, str, maxsplit=limit) \u4f7f\u7528\u6307\u5b9a\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u5206\u9694\u5b57\u7b26\u4e32\u3002 22 str.startswith(prefix) \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u6307\u5b9a\u7684\u524d\u7f00\u5f00\u5934\u3002 23 str.upper() \u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u5c0f\u5199\u5b57\u6bcd\u8f6c\u6362\u4e3a\u5927\u5199\u3002 3. Leetcode \u9898\u76ee\u7ec3\u4e60 \u4ece\u672c\u8282\u8bfe\u7a0b\u5f00\u59cb\uff0c\u6211\u4eec\u5c06\u7ed3\u5408Leetcode\u4e0a\u7684\u7ecf\u5178\u9898\u76ee\u8fdb\u884c\u6559\u5b66 \u4f8b\u9898\u8bb2\u89e3 LC 58 \u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u5b57\u6570 \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u7531\u82e5\u5e72\u5355\u8bcd\u7ec4\u6210\uff0c\u5355\u8bcd\u524d\u540e\u7528\u4e00\u4e9b\u7a7a\u683c\u5b57\u7b26\u9694\u5f00\u3002\u8fd4\u56de\u5b57\u7b26\u4e32\u4e2d \u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6 \u3002 \u5355\u8bcd \u662f\u6307\u4ec5\u7531\u5b57\u6bcd\u7ec4\u6210\u3001\u4e0d\u5305\u542b\u4efb\u4f55\u7a7a\u683c\u5b57\u7b26\u7684\u6700\u5927\u5b50\u5b57\u7b26\u4e32\u3002 \u601d\u8def \u53bb\u9664\u5b57\u7b26\u4e32\u672b\u5c3e\u7684\u7a7a\u683c : \u5b57\u7b26\u4e32\u53ef\u80fd\u5728\u672b\u5c3e\u5305\u542b\u7a7a\u683c\uff0c\u6211\u4eec\u9996\u5148\u8981\u53bb\u6389\u8fd9\u4e9b\u7a7a\u683c\uff0c\u4ee5\u4fbf\u51c6\u786e\u627e\u5230\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u3002 \u4ece\u5b57\u7b26\u4e32\u672b\u5c3e\u5f00\u59cb\u5411\u524d\u904d\u5386 : \u4ece\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u5f00\u59cb\u5411\u524d\u904d\u5386\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u540e\u7ee7\u7eed\u8ba1\u6570\uff0c\u76f4\u5230\u627e\u5230\u7a7a\u683c\u6216\u8005\u5230\u8fbe\u5b57\u7b26\u4e32\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u8fd9\u6bb5\u8ba1\u6570\u5c31\u662f\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6\u3002 \u53c2\u8003\u89e3\u7b54 \u53cd\u5411\u904d\u5386\u65b9\u6cd5 \uff1a \u4ece\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u5f00\u59cb\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u975e\u7a7a\u683c\u5b57\u7b26\uff0c\u8fd9\u4e2a\u5b57\u7b26\u662f\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\u3002 \u4ece\u8fd9\u4e2a\u5b57\u6bcd\u5f00\u59cb\u53cd\u5411\u904d\u5386\uff0c\u76f4\u5230\u9047\u5230\u7a7a\u683c\u6216\u8005\u5230\u8fbe\u5b57\u7b26\u4e32\u7684\u8d77\u59cb\u4f4d\u7f6e\u3002\u904d\u5386\u5230\u7684\u6bcf\u4e2a\u5b57\u6bcd\u90fd\u662f\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u4e00\u90e8\u5206\u3002 \u904d\u5386\u5230\u7684\u5b57\u6bcd\u6570\u91cf\u5373\u4e3a\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6\u3002 class Solution(object): def lengthOfLastWord(self, s): c = 0 for i in range(-1,-(len(s))-1,-1): if s[i] != \" \": c += 1 elif c > 0: break return c \u8c03\u7528\u51fd\u6570\u65b9\u6cd5 \uff1a class Solution: def lengthOfLastWord(self, s: str) -> int: return len(s.strip().split()[-1]) LC434. \u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd\u6570 \u95ee\u9898\u63cf\u8ff0 \u7edf\u8ba1\u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd\u4e2a\u6570\uff0c\u8fd9\u91cc\u7684\u5355\u8bcd\u6307\u7684\u662f\u8fde\u7eed\u7684\u4e0d\u662f\u7a7a\u683c\u7684\u5b57\u7b26\u3002 \u8bf7\u6ce8\u610f\uff0c\u4f60\u53ef\u4ee5\u5047\u5b9a\u5b57\u7b26\u4e32\u91cc\u4e0d\u5305\u62ec\u4efb\u4f55\u4e0d\u53ef\u6253\u5370\u7684\u5b57\u7b26\u3002 \u9898\u76ee\u5206\u6790 \u6211\u4eec\u9700\u8981\u7edf\u8ba1\u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd\u4e2a\u6570\uff0c\u5355\u8bcd\u662f\u7531\u8fde\u7eed\u7684\u975e\u7a7a\u683c\u5b57\u7b26\u7ec4\u6210\u7684\u3002\u7a7a\u683c\u53ef\u4ee5\u7528\u6765\u5206\u9694\u5355\u8bcd\u3002\u9898\u76ee\u4fdd\u8bc1\u5b57\u7b26\u4e32\u4e2d\u6ca1\u6709\u4e0d\u53ef\u6253\u5370\u5b57\u7b26\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u5904\u7406\u7279\u6b8a\u5b57\u7b26\u3002 \u601d\u8def \u5e38\u89c4\u601d\u8def \u53bb\u9664\u591a\u4f59\u7a7a\u683c: \u5728\u5904\u7406\u5b57\u7b26\u4e32\u4e4b\u524d\uff0c\u53ef\u4ee5\u8003\u8651\u53bb\u9664\u524d\u540e\u591a\u4f59\u7684\u7a7a\u683c\uff0c\u5e76\u5c06\u591a\u91cd\u7a7a\u683c\u5408\u5e76\u3002 \u5b9e\u9645\u5b9e\u73b0\u4e2d\uff0c\u901a\u5e38\u53ea\u9700\u8981\u6b63\u786e\u5730\u5206\u5272\u5355\u8bcd\u5373\u53ef\uff0c\u65e0\u9700\u4e13\u95e8\u53bb\u9664\u7a7a\u683c\u3002 \u68c0\u6d4b\u4e00\u4e2a\u5355\u8bcd\u7684\u5f00\u59cb: - s[i] != ' ': \u5f53\u524d\u5b57\u7b26\u4e0d\u662f\u7a7a\u683c\u3002 - (i == 0 or s[i - 1] == ' '): \u5f53\u524d\u5b57\u7b26\u662f\u7b2c\u4e00\u4e2a\u5b57\u7b26\uff0c\u6216\u8005\u524d\u4e00\u4e2a\u5b57\u7b26\u662f\u7a7a\u683c\u3002 \u6ee1\u8db3\u8fd9\u4e24\u4e2a\u6761\u4ef6\u65f6\uff0c\u610f\u5473\u7740\u9047\u5230\u4e86\u4e00\u4e2a\u65b0\u7684\u5355\u8bcd\uff0c\u6b64\u65f6\u8ba1\u6570\u5668 count \u589e\u52a0\u3002 \u904d\u5386\u5b57\u7b26\u4e32: \u901a\u8fc7\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u5e76\u5728\u9047\u5230\u975e\u7a7a\u683c\u5b57\u7b26\u65f6\u8bc6\u522b\u51fa\u4e00\u4e2a\u65b0\u7684\u5355\u8bcd\u5f00\u59cb\u3002\u5f53\u9047\u5230\u7a7a\u683c\u5b57\u7b26\u65f6\uff0c\u8868\u793a\u5f53\u524d\u5355\u8bcd\u7ed3\u675f\u3002 \u8bb0\u5f55\u5355\u8bcd\u6570\u91cf: \u4f7f\u7528\u4e00\u4e2a\u8ba1\u6570\u5668\uff0c\u5728\u68c0\u6d4b\u5230\u4e00\u4e2a\u5355\u8bcd\u7684\u5f00\u59cb\u65f6\uff0c\u8ba1\u6570\u5668\u52a01\u3002 class Solution(object): def countSegments(self, s): s = s.strip() if not s: return 0 c = 0 for i in range(len(s)): if s[i] != ' ' and (i == 0 or s[i - 1] == ' '): c += 1 # \u9047\u5230\u4e00\u4e2a\u65b0\u7684\u5355\u8bcd\uff0c\u8ba1\u6570\u5668\u589e\u52a0 return c \u8c03\u7528\u51fd\u6570\u6cd5 split() \u65b9\u6cd5\u4f1a\u81ea\u52a8\u53bb\u9664\u5b57\u7b26\u4e32\u4e2d\u7684\u591a\u4f59\u7a7a\u683c\uff0c\u5e76\u5c06\u5b57\u7b26\u4e32\u6309\u7a7a\u683c\u5206\u5272\u4e3a\u5355\u8bcd\u5217\u8868\u3002 \u7136\u540e\uff0c\u901a\u8fc7 len() \u51fd\u6570\u8ba1\u7b97\u5355\u8bcd\u5217\u8868\u7684\u957f\u5ea6\uff0c\u5373\u5355\u8bcd\u7684\u6570\u91cf\u3002 python class Solution(object): def countSegments(self, s): s = s.split() return len(s) \u4e3e\u4e00\u53cd\u4e09 LC709. \u8f6c\u6362\u6210\u5c0f\u5199\u5b57\u6bcd \u95ee\u9898\u63cf\u8ff0 \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u5c06\u8be5\u5b57\u7b26\u4e32\u4e2d\u7684\u5927\u5199\u5b57\u6bcd\u8f6c\u6362\u6210\u76f8\u540c\u7684\u5c0f\u5199\u5b57\u6bcd\uff0c\u8fd4\u56de\u65b0\u7684\u5b57\u7b26\u4e32\uff0c\u67e5\u627e\u5e76\u4f7f\u7528\u5408\u9002\u7684\u5b57\u7b26\u4e32\u51fd\u6570\u89e3\u7b54\u5373\u53ef\u3002 \u4ee3\u7801\u5b9e\u73b0 class Solution(object): def toLowerCase(self, s): return s.lower() LC520. \u68c0\u6d4b\u5927\u5199\u5b57\u6bcd \u95ee\u9898\u63cf\u8ff0 \u6211\u4eec\u5b9a\u4e49\uff0c\u5728\u4ee5\u4e0b\u60c5\u51b5\u4e0b\uff0c\u5355\u8bcd\u7684\u5927\u5199\u7528\u6cd5\u662f\u6b63\u786e\u7684\uff1a \u5168\u90e8\u5b57\u6bcd\u90fd\u662f\u5927\u5199\uff0c\u6bd4\u5982 \"USA\" \u3002 \u5355\u8bcd\u4e2d\u6240\u6709\u5b57\u6bcd\u90fd\u4e0d\u662f\u5927\u5199\uff0c\u6bd4\u5982 \"leetcode\" \u3002 \u5982\u679c\u5355\u8bcd\u4e0d\u53ea\u542b\u6709\u4e00\u4e2a\u5b57\u6bcd\uff0c\u53ea\u6709\u9996\u5b57\u6bcd\u5927\u5199\uff0c\u6bd4\u5982 \"Google\" \u3002 \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 word \u3002\u5982\u679c\u5927\u5199\u7528\u6cd5\u6b63\u786e\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002 \u9898\u76ee\u5206\u6790 \u8fd9\u4e2a\u95ee\u9898\u8981\u6c42\u6211\u4eec\u5224\u65ad\u4e00\u4e2a\u5355\u8bcd\u7684\u5927\u5c0f\u5199\u662f\u5426\u7b26\u5408\u7279\u5b9a\u7684\u89c4\u5219\u3002\u5177\u4f53\u7684\u89c4\u5219\u5305\u62ec\uff1a \u5168\u90e8\u5b57\u6bcd\u90fd\u662f\u5927\u5199 \uff0c\u4f8b\u5982 \"USA\" \u3002 \u5168\u90e8\u5b57\u6bcd\u90fd\u4e0d\u662f\u5927\u5199 \uff0c\u4f8b\u5982 \"leetcode\" \u3002 \u53ea\u6709\u9996\u5b57\u6bcd\u5927\u5199 \uff0c\u4f8b\u5982 \"Google\" \u3002 \u5982\u679c\u4e00\u4e2a\u5355\u8bcd\u7b26\u5408\u4ee5\u4e0a\u4efb\u610f\u4e00\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u8fd4\u56de true \uff0c\u5426\u5219\u8fd4\u56de false \u3002 \u601d\u8def\u8bb2\u89e3 \u5224\u65ad\u5168\u5927\u5199 \uff1a\u4f7f\u7528Python\u7684 str.isupper() \u65b9\u6cd5\u68c0\u67e5\u6574\u4e2a\u5355\u8bcd\u662f\u5426\u5168\u90e8\u4e3a\u5927\u5199\u3002\u5982\u679c\u662f\uff0c\u5219\u8fd4\u56de True \u3002 \u5224\u65ad\u5168\u5c0f\u5199 \uff1a\u4f7f\u7528 str.islower() \u65b9\u6cd5\u68c0\u67e5\u6574\u4e2a\u5355\u8bcd\u662f\u5426\u5168\u90e8\u4e3a\u5c0f\u5199\u3002\u5982\u679c\u662f\uff0c\u5219\u8fd4\u56de True \u3002 \u5224\u65ad\u9996\u5b57\u6bcd\u5927\u5199 \uff1a\u9996\u5148\u68c0\u67e5\u7b2c\u4e00\u4e2a\u5b57\u7b26\u662f\u5426\u5927\u5199 ( str[0].isupper() )\uff0c\u7136\u540e\u68c0\u67e5\u5176\u4f59\u5b57\u7b26\u662f\u5426\u5168\u90e8\u5c0f\u5199 ( str[1:].islower() )\u3002 \u5f52\u7eb3 \uff1a\u5982\u679c\u6ee1\u8db3\u4ee5\u4e0a\u4efb\u610f\u4e00\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u5c31\u8fd4\u56de True \uff0c\u5426\u5219\u8fd4\u56de False \u3002 \u4ee3\u7801\u5b9e\u73b0 \u5e38\u89c4\u89e3\u6cd5 class Solution(object): def detectCapitalUse(self, word): if len(word) >= 2 and word[0].islower() and word[1].isupper(): return False # \u65e0\u8bba\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u662f\u5426\u5927\u5199\uff0c\u5176\u4ed6\u5b57\u6bcd\u5fc5\u987b\u4e0e\u7b2c\u4e8c\u4e2a\u5b57\u6bcd\u7684\u5927\u5c0f\u5199\u76f8\u540c for i in range(2, len(word)): if word[i].islower() != word[1].islower(): return False return True \u5b57\u7b26\u4e32\u51fd\u6570\u89e3\u6cd5 class Solution(object): def detectCapitalUse(self, word): return word.isupper() or word.islower() or (word[0].isupper() and word[1:].islower()) LC521. \u6700\u957f\u7279\u6b8a\u5e8f\u5217 \u2160 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u4f60\u4e24\u4e2a\u5b57\u7b26\u4e32 a \u548c b \uff0c\u8bf7\u8fd4\u56de\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u6700\u957f\u7684\u7279\u6b8a\u5e8f\u5217\u7684\u957f\u5ea6\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de -1 \u3002 \u6700\u957f\u7279\u6b8a\u5e8f\u5217 \u5b9a\u4e49\u5982\u4e0b\uff1a\u8be5\u5e8f\u5217\u4e3a\u67d0\u5b57\u7b26\u4e32\u72ec\u6709\u7684\u6700\u957f\u5b50\u5e8f\u5217\uff08\u5373\u4e0d\u80fd\u662f\u5176\u4ed6\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\uff09\u3002 \u5b57\u7b26\u4e32 s \u7684\u5b50\u5e8f\u5217\u662f\u5728\u4ece s \u4e2d\u5220\u9664\u4efb\u610f\u6570\u91cf\u7684\u5b57\u7b26\u540e\u53ef\u4ee5\u83b7\u5f97\u7684\u5b57\u7b26\u4e32\u3002\u4f8b\u5982\uff0c\"abc\" \u662f \"aebdc\" \u7684\u5b50\u5e8f\u5217\uff0c\u56e0\u4e3a\u5220\u9664 \"aebdc\" \u4e2d\u659c\u4f53\u52a0\u7c97\u7684\u5b57\u7b26\u53ef\u4ee5\u5f97\u5230 \"abc\"\u3002 \"aebdc\" \u7684\u5b50\u5e8f\u5217\u8fd8\u5305\u62ec \"aebdc\"\u3001\"aeb\" \u548c \"\"\uff08\u7a7a\u5b57\u7b26\u4e32\uff09\u3002 \u63d0\u793a \u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u4e0d\u4f1a\u8d85\u8fc7\u8be5\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002\u82e5\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u7b49\u4e8e\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff0c\u90a3\u4e48\u5b50\u5e8f\u5217\u5c31\u662f\u8be5\u5b57\u7b26\u4e32\u3002 \u82e5\u4e24\u5b57\u7b26\u4e32\u4e0d\u76f8\u540c\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u8f83\u957f\u7684\u5b57\u7b26\u4e32\u4f5c\u4e3a\u6700\u957f\u7279\u6b8a\u5e8f\u5217\uff0c\u663e\u7136\u5b83\u4e0d\u4f1a\u662f\u8f83\u77ed\u7684\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\u3002\u7279\u522b\u5730\uff0c\u5f53\u4e24\u5b57\u7b26\u4e32\u957f\u5ea6\u76f8\u540c\u65f6\uff08\u4f46\u4e0d\u662f\u540c\u4e00\u5b57\u7b26\u4e32\uff09\uff0c\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u9009\u62e9\u5176\u4e2d\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32\u4f5c\u4e3a\u6700\u957f\u7279\u6b8a\u5e8f\u5217\uff0c\u5b83\u4e0d\u4f1a\u662f\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\u3002 \u82e5\u4e24\u5b57\u7b26\u4e32\u76f8\u540c\uff0c\u90a3\u4e48\u4efb\u4e00\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\u5747\u4f1a\u51fa\u73b0\u5728\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\uff0c\u6b64\u65f6\u5e94\u8fd4\u56de \u22121\u3002 \u9898\u76ee\u5206\u6790 \u8fd9\u4e2a\u95ee\u9898\u8981\u6c42\u6211\u4eec\u627e\u5230\u4e24\u4e2a\u5b57\u7b26\u4e32 a \u548c b \u7684\u6700\u957f\u7279\u6b8a\u5e8f\u5217\u3002\u6839\u636e\u9898\u76ee\u4e2d\u7684\u5b9a\u4e49\uff0c\u6700\u957f\u7279\u6b8a\u5e8f\u5217\u662f\u6307\u5728\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u72ec\u6709\u7684\u6700\u957f\u5b50\u5e8f\u5217\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\uff0c\u90a3\u4e48\u5b83\u4e0d\u662f\u7279\u6b8a\u5e8f\u5217\u3002\u6211\u4eec\u7684\u76ee\u6807\u662f\u627e\u5230\u6700\u957f\u7684\u7279\u6b8a\u5e8f\u5217\u7684\u957f\u5ea6\u3002 \u601d\u8def \u5b57\u7b26\u4e32\u76f8\u7b49\u7684\u60c5\u51b5 : \u5982\u679c\u5b57\u7b26\u4e32 a \u548c b \u76f8\u7b49\uff0c\u90a3\u4e48\u6bcf\u4e2a\u5b50\u5e8f\u5217\u5728\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u4e5f\u662f\u5b58\u5728\u7684\u3002\u56e0\u6b64\uff0c\u4e0d\u53ef\u80fd\u6709\u72ec\u6709\u7684\u5b50\u5e8f\u5217\uff0c\u76f4\u63a5\u8fd4\u56de -1 \u3002 \u5b57\u7b26\u4e32\u4e0d\u76f8\u7b49\u7684\u60c5\u51b5 : \u5982\u679c\u5b57\u7b26\u4e32 a \u548c b \u4e0d\u76f8\u7b49\uff0c\u90a3\u4e48\u8f83\u957f\u7684\u5b57\u7b26\u4e32\u672c\u8eab\u5c31\u662f\u5b83\u7684\u6700\u957f\u7279\u6b8a\u5e8f\u5217\uff0c\u56e0\u4e3a\u5b83\u4e0d\u80fd\u5b8c\u5168\u51fa\u73b0\u5728\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u3002\u6b64\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u8f83\u957f\u7684\u90a3\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002 \u4ee3\u7801\u5b9e\u73b0 \u76f4\u89c2\u7248\u672c class Solution(object): def findLUSlength(self, a, b): if a != b: return max(len(a), len(b)) # \u5982\u679c\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u540c\uff0c\u8fd4\u56de -1 return -1 \u7b80\u6d01\u7248\u672c class Solution(object): def findLUSlength(self, a, b): return max(len(a), len(b)) if a != b else -1 \u8bfe\u540e\u7ec3\u4e60 \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC551 Student Attendence Record I \u7ed9\u5b9a\u4e00\u4e2a\u5b66\u751f\u7684\u51fa\u52e4\u8bb0\u5f55\uff0c\u5224\u65ad\u8be5\u5b66\u751f\u662f\u5426\u5b58\u5728\u8fde\u7eed\u7684\u4e09\u5929\u7f3a\u52e4\u6216\u6709\u8d85\u8fc710\u5929\u7684\u65f7\u8bfe\u3002 LC657 Robot Return to Origin \u5224\u65ad\u7ed9\u5b9a\u7684\u673a\u5668\u4eba\u79fb\u52a8\u6307\u4ee4\u662f\u5426\u4f7f\u673a\u5668\u4eba\u56de\u5230\u539f\u70b9\u3002 LC1078 Occurrences After Bigram \u7ed9\u5b9a\u4e00\u4e2a\u6587\u672c\u548c\u4e00\u4e2a\u5927\u5b57\u5178\uff0c\u627e\u51fa\u5927\u5b57\u5178\u4e2d\u51fa\u73b0\u7684\u5355\u8bcd\u5728\u6587\u672c\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u3002 LC557 Reverse Words in a String III \u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e2a\u5355\u8bcd\uff0c\u4fdd\u6301\u5355\u8bcd\u7684\u987a\u5e8f\u4e0d\u53d8\u3002","title":"Lesson6 Leetcode\u5165\u95e8/\u5e38\u7528\u7684\u5b57\u7b26\u4e32\u51fd\u6570/Leetcode\u5b57\u7b26\u4e32\u7ec3\u4e60"},{"location":"lesson6/Lesson6%20Python/#lesson6-leetcodeleetcode","text":"","title":"Lesson6 Leetcode\u5165\u95e8/\u5e38\u7528\u7684\u5b57\u7b26\u4e32\u51fd\u6570/Leetcode\u5b57\u7b26\u4e32\u7ec3\u4e60"},{"location":"lesson6/Lesson6%20Python/#_1","text":"1. Leetcode\u5165\u95e8 1.1 \u521d\u8bc6Leetcode 1.2 Leetcode \u9898\u76ee 1.3 Leetcode\u9898\u89e3 1.4 Leetcode\u63d0\u4ea4\u8bb0\u5f55 1.5 Leetcode\u505a\u9898\u5206\u6790 2. \u66f4\u591a\u5e38\u7528\u5b57\u7b26\u4e32\u51fd\u6570\u7528\u6cd5\u548c\u6587\u6863\u67e5\u627e\u65b9\u6cd5 3. Leetcode \u9898\u76ee\u7ec3\u4e60 \u4f8b\u9898\u8bb2\u89e3 LC 58 \u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u5b57\u6570 LC434. \u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd\u6570 \u4e3e\u4e00\u53cd\u4e09 LC709. \u8f6c\u6362\u6210\u5c0f\u5199\u5b57\u6bcd LC520. \u68c0\u6d4b\u5927\u5199\u5b57\u6bcd LC521. \u6700\u957f\u7279\u6b8a\u5e8f\u5217 \u2160 \u8bfe\u540e\u7ec3\u4e60","title":"\u76ee\u5f55"},{"location":"lesson6/Lesson6%20Python/#1-leetcode","text":"","title":"1. Leetcode\u5165\u95e8"},{"location":"lesson6/Lesson6%20Python/#11-leetcode","text":"LeetCode\u662f\u4e00\u4e2a\u5728\u7ebf\u7f16\u7a0b\u7ade\u6280\u5e73\u53f0\uff0c\u65e8\u5728\u5e2e\u52a9\u200c\u7a0b\u5e8f\u5458\u63d0\u5347\u7f16\u7a0b\u6280\u80fd\u548c\u89e3\u51b3\u7b97\u6cd5\u95ee\u9898\u3002\u5b83\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u9898\u5e93\uff0c\u5305\u62ec\u5404\u79cd\u7f16\u7a0b\u8bed\u8a00\u7684\u9898\u76ee\uff0c\u8986\u76d6\u4e86\u7b97\u6cd5\u3001\u200c\u6570\u636e\u7ed3\u6784\u3001\u200c\u7cfb\u7edf\u8bbe\u8ba1\u7b49\u591a\u4e2a\u9886\u57df\u3002LeetCode\u4e0d\u4ec5\u662f\u4e00\u4e2a\u7ec3\u4e60\u5e73\u53f0\uff0c\u4e5f\u662f\u4e00\u4e2a\u6280\u672f\u793e\u533a\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u4e0a\u9762\u63d0\u4ea4\u4ee3\u7801\u89e3\u51b3\u65b9\u6848\uff0c\u5e76\u4e0e\u5176\u4ed6\u5f00\u53d1\u8005\u4ea4\u6d41\u5b66\u4e60\u3002 \u5b98\u7f51\uff1ahttps://leetcode.cn \u9996\u5148\u5728\u83dc\u5355\u4e2d\u70b9\u51fb\u2018\u9898\u5e93\u2019\uff1a \u641c\u7d22\u6846\u4e2d\u53ef\u4ee5\u8f93\u5165\u9898\u53f7\u3001\u6807\u9898\u7b49\u67e5\u627e\u76f8\u5e94\u9898\u76ee \u641c\u7d22\u65f6\u53ef\u4ee5\u8bbe\u7f6e\u9898\u76ee\u96be\u5ea6","title":"1.1 \u521d\u8bc6Leetcode"},{"location":"lesson6/Lesson6%20Python/#12-leetcode","text":"\u9898\u76ee\u63cf\u8ff0\uff1a \u6587\u5b57\u63cf\u8ff0 \u5b9e\u4f8b\uff1a\u7ed9\u4e00\u4e9b\u6709\u4ee3\u8868\u6027\u7684\u8f93\u5165\u4e0e\u8f93\u51fa\uff0c\u5e76\u7ed9\u51fa\u89e3\u91ca \u63d0\u793a\uff1a\u7ed9\u51fa\u4e00\u4e9b\u53d8\u91cf\u5728test case\u4e2d\u7684\u8303\u56f4","title":"1.2 Leetcode \u9898\u76ee"},{"location":"lesson6/Lesson6%20Python/#13-leetcode","text":"\u9898\u89e3\uff1a\u70b9\u51fb\u9898\u89e3\u540e\u5373\u53ef\u67e5\u770b\u8be5\u9898\u7684\u51e0\u79cd\u89e3\u6cd5","title":"1.3 Leetcode\u9898\u89e3"},{"location":"lesson6/Lesson6%20Python/#14-leetcode","text":"\u70b9\u51fb\u2018\u63d0\u4ea4\u8bb0\u5f55\u2019\u53ef\u67e5\u770b\u4ee5\u5f80\u63d0\u4ea4\u5185\u5bb9 \u70b9\u51fb\u5176\u4e2d\u4e00\u6761\uff0c\u5373\u51fa\u73b0\u8be5\u6b21\u63d0\u4ea4\u7684\u8be6\u60c5\uff0c\u5305\u62ec\u6027\u80fd\u4e0e\u4ee3\u7801\u5185\u5bb9","title":"1.4 Leetcode\u63d0\u4ea4\u8bb0\u5f55"},{"location":"lesson6/Lesson6%20Python/#15-leetcode","text":"\u70b9\u51fb\u5934\u50cf\uff0c\u67e5\u770b\u505a\u9898\u5206\u6790\u3001\u8fdb\u5ea6\u7ba1\u7406\u7b49\uff0c\u5373\u53ef\u67e5\u770b\u81ea\u5df1\u7684\u505a\u9898\u5185\u5bb9","title":"1.5 Leetcode\u505a\u9898\u5206\u6790"},{"location":"lesson6/Lesson6%20Python/#2","text":"\u5e38\u7528\u5b57\u7b26\u4e32\u51fd\u6570\u4e0e\u641c\u7d22\u6587\u6863\u65b9\u6cd5 \u5e8f\u53f7 Python\u65b9\u6cd5\u53ca\u63cf\u8ff0 1 str.upper() \u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709\u5b57\u7b26\u8f6c\u6362\u4e3a\u5927\u5199\u3002 2 str.center(width, fillchar) \u7528\u6307\u5b9a\u7684\u5bbd\u5ea6\u548c\u586b\u5145\u5b57\u7b26\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u3002 3 str.find(substring, start) \u67e5\u627e\u6307\u5b9a\u5b57\u7b26\u4e32\u5728\u5f53\u524d\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e\uff0c\u5982\u679c\u6307\u5b9a\u8303\u56f4\u5185\u67e5\u627e\u3002 4 str.endswith(suffix) \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u6307\u5b9a\u7684\u540e\u7f00\u7ed3\u5c3e\u3002 5 str.replace(\"\\t\", \" \" * tabSize) \u5c06\u5236\u8868\u7b26\u8f6c\u6362\u4e3a\u7a7a\u683c\u3002 6 str.find(substring, start) != -1 \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u5305\u542b\u6307\u5b9a\u7684\u5b50\u5b57\u7b26\u4e32\u3002 7 str.find(substring, start) \u67e5\u627e\u6307\u5b9a\u5b57\u7b26\u4e32\u5728\u5f53\u524d\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e\uff0c\u5982\u679c\u5b57\u7b26\u4e32\u4e0d\u5b58\u5728\u4f1a\u8fd4\u56de -1\u3002 8 str.isalpha() \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u6240\u6709\u5b57\u7b26\u90fd\u662f\u5b57\u6bcd\u3002 9 str.isdigit() \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u6240\u6709\u5b57\u7b26\u90fd\u662f\u6570\u5b57\u3002 10 str.islower() \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u6240\u6709\u5b57\u6bcd\u90fd\u662f\u5c0f\u5199\u3002 11 str.isdigit() \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u6240\u6709\u5b57\u7b26\u90fd\u662f\u6570\u5b57\u3002 12 str.isupper() \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u6240\u6709\u5b57\u6bcd\u90fd\u662f\u5927\u5199\u3002 13 delimiter.join(elements) \u4f7f\u7528\u6307\u5b9a\u7684\u5206\u9694\u7b26\u5c06\u591a\u4e2a\u5b57\u7b26\u4e32\u8fde\u63a5\u6210\u4e00\u4e2a\u3002 14 len(str) \u8fd4\u56de\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002 15 str.ljust(width) \u5de6\u5bf9\u9f50\u5b57\u7b26\u4e32\uff0c\u5e76\u586b\u5145\u81f3\u6307\u5b9a\u5bbd\u5ea6\u3002 16 str.lower() \u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709\u5927\u5199\u5b57\u7b26\u8f6c\u6362\u4e3a\u5c0f\u5199\u3002 17 str.replace(old_value, new_value) \u66ff\u6362\u5b57\u7b26\u4e32\u4e2d\u7684\u65e7\u503c\u4e3a\u65b0\u503c\u3002 18 str.rfind(substring) \u4ece\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u5f00\u59cb\u67e5\u627e\u6307\u5b9a\u7684\u5b50\u5b57\u7b26\u4e32\u3002 19 str.rfind(substring) \u4ece\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u5f00\u59cb\u67e5\u627e\u6307\u5b9a\u7684\u5b50\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u5b57\u7b26\u4e32\u4e0d\u5b58\u5728\u4f1a\u8fd4\u56de -1\u3002 20 str.rjust(width) \u53f3\u5bf9\u9f50\u5b57\u7b26\u4e32\uff0c\u5e76\u586b\u5145\u81f3\u6307\u5b9a\u5bbd\u5ea6\u3002 21 re.split(regex, str, maxsplit=limit) \u4f7f\u7528\u6307\u5b9a\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u5206\u9694\u5b57\u7b26\u4e32\u3002 22 str.startswith(prefix) \u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u6307\u5b9a\u7684\u524d\u7f00\u5f00\u5934\u3002 23 str.upper() \u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u5c0f\u5199\u5b57\u6bcd\u8f6c\u6362\u4e3a\u5927\u5199\u3002","title":"2. \u66f4\u591a\u5e38\u7528\u5b57\u7b26\u4e32\u51fd\u6570\u7528\u6cd5\u548c\u6587\u6863\u67e5\u627e\u65b9\u6cd5"},{"location":"lesson6/Lesson6%20Python/#3-leetcode","text":"\u4ece\u672c\u8282\u8bfe\u7a0b\u5f00\u59cb\uff0c\u6211\u4eec\u5c06\u7ed3\u5408Leetcode\u4e0a\u7684\u7ecf\u5178\u9898\u76ee\u8fdb\u884c\u6559\u5b66","title":"3. Leetcode \u9898\u76ee\u7ec3\u4e60"},{"location":"lesson6/Lesson6%20Python/#_2","text":"","title":"\u4f8b\u9898\u8bb2\u89e3"},{"location":"lesson6/Lesson6%20Python/#lc-58","text":"\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u7531\u82e5\u5e72\u5355\u8bcd\u7ec4\u6210\uff0c\u5355\u8bcd\u524d\u540e\u7528\u4e00\u4e9b\u7a7a\u683c\u5b57\u7b26\u9694\u5f00\u3002\u8fd4\u56de\u5b57\u7b26\u4e32\u4e2d \u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6 \u3002 \u5355\u8bcd \u662f\u6307\u4ec5\u7531\u5b57\u6bcd\u7ec4\u6210\u3001\u4e0d\u5305\u542b\u4efb\u4f55\u7a7a\u683c\u5b57\u7b26\u7684\u6700\u5927\u5b50\u5b57\u7b26\u4e32\u3002","title":"LC 58 \u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u5b57\u6570"},{"location":"lesson6/Lesson6%20Python/#_3","text":"\u53bb\u9664\u5b57\u7b26\u4e32\u672b\u5c3e\u7684\u7a7a\u683c : \u5b57\u7b26\u4e32\u53ef\u80fd\u5728\u672b\u5c3e\u5305\u542b\u7a7a\u683c\uff0c\u6211\u4eec\u9996\u5148\u8981\u53bb\u6389\u8fd9\u4e9b\u7a7a\u683c\uff0c\u4ee5\u4fbf\u51c6\u786e\u627e\u5230\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u3002 \u4ece\u5b57\u7b26\u4e32\u672b\u5c3e\u5f00\u59cb\u5411\u524d\u904d\u5386 : \u4ece\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u5f00\u59cb\u5411\u524d\u904d\u5386\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u540e\u7ee7\u7eed\u8ba1\u6570\uff0c\u76f4\u5230\u627e\u5230\u7a7a\u683c\u6216\u8005\u5230\u8fbe\u5b57\u7b26\u4e32\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u8fd9\u6bb5\u8ba1\u6570\u5c31\u662f\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6\u3002","title":"\u601d\u8def"},{"location":"lesson6/Lesson6%20Python/#_4","text":"\u53cd\u5411\u904d\u5386\u65b9\u6cd5 \uff1a \u4ece\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u5f00\u59cb\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u975e\u7a7a\u683c\u5b57\u7b26\uff0c\u8fd9\u4e2a\u5b57\u7b26\u662f\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\u3002 \u4ece\u8fd9\u4e2a\u5b57\u6bcd\u5f00\u59cb\u53cd\u5411\u904d\u5386\uff0c\u76f4\u5230\u9047\u5230\u7a7a\u683c\u6216\u8005\u5230\u8fbe\u5b57\u7b26\u4e32\u7684\u8d77\u59cb\u4f4d\u7f6e\u3002\u904d\u5386\u5230\u7684\u6bcf\u4e2a\u5b57\u6bcd\u90fd\u662f\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u4e00\u90e8\u5206\u3002 \u904d\u5386\u5230\u7684\u5b57\u6bcd\u6570\u91cf\u5373\u4e3a\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6\u3002 class Solution(object): def lengthOfLastWord(self, s): c = 0 for i in range(-1,-(len(s))-1,-1): if s[i] != \" \": c += 1 elif c > 0: break return c \u8c03\u7528\u51fd\u6570\u65b9\u6cd5 \uff1a class Solution: def lengthOfLastWord(self, s: str) -> int: return len(s.strip().split()[-1])","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson6/Lesson6%20Python/#lc434","text":"","title":"LC434. \u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd\u6570"},{"location":"lesson6/Lesson6%20Python/#_5","text":"\u7edf\u8ba1\u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd\u4e2a\u6570\uff0c\u8fd9\u91cc\u7684\u5355\u8bcd\u6307\u7684\u662f\u8fde\u7eed\u7684\u4e0d\u662f\u7a7a\u683c\u7684\u5b57\u7b26\u3002 \u8bf7\u6ce8\u610f\uff0c\u4f60\u53ef\u4ee5\u5047\u5b9a\u5b57\u7b26\u4e32\u91cc\u4e0d\u5305\u62ec\u4efb\u4f55\u4e0d\u53ef\u6253\u5370\u7684\u5b57\u7b26\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson6/Lesson6%20Python/#_6","text":"\u6211\u4eec\u9700\u8981\u7edf\u8ba1\u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd\u4e2a\u6570\uff0c\u5355\u8bcd\u662f\u7531\u8fde\u7eed\u7684\u975e\u7a7a\u683c\u5b57\u7b26\u7ec4\u6210\u7684\u3002\u7a7a\u683c\u53ef\u4ee5\u7528\u6765\u5206\u9694\u5355\u8bcd\u3002\u9898\u76ee\u4fdd\u8bc1\u5b57\u7b26\u4e32\u4e2d\u6ca1\u6709\u4e0d\u53ef\u6253\u5370\u5b57\u7b26\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u5904\u7406\u7279\u6b8a\u5b57\u7b26\u3002","title":"\u9898\u76ee\u5206\u6790"},{"location":"lesson6/Lesson6%20Python/#_7","text":"\u5e38\u89c4\u601d\u8def \u53bb\u9664\u591a\u4f59\u7a7a\u683c: \u5728\u5904\u7406\u5b57\u7b26\u4e32\u4e4b\u524d\uff0c\u53ef\u4ee5\u8003\u8651\u53bb\u9664\u524d\u540e\u591a\u4f59\u7684\u7a7a\u683c\uff0c\u5e76\u5c06\u591a\u91cd\u7a7a\u683c\u5408\u5e76\u3002 \u5b9e\u9645\u5b9e\u73b0\u4e2d\uff0c\u901a\u5e38\u53ea\u9700\u8981\u6b63\u786e\u5730\u5206\u5272\u5355\u8bcd\u5373\u53ef\uff0c\u65e0\u9700\u4e13\u95e8\u53bb\u9664\u7a7a\u683c\u3002 \u68c0\u6d4b\u4e00\u4e2a\u5355\u8bcd\u7684\u5f00\u59cb: - s[i] != ' ': \u5f53\u524d\u5b57\u7b26\u4e0d\u662f\u7a7a\u683c\u3002 - (i == 0 or s[i - 1] == ' '): \u5f53\u524d\u5b57\u7b26\u662f\u7b2c\u4e00\u4e2a\u5b57\u7b26\uff0c\u6216\u8005\u524d\u4e00\u4e2a\u5b57\u7b26\u662f\u7a7a\u683c\u3002 \u6ee1\u8db3\u8fd9\u4e24\u4e2a\u6761\u4ef6\u65f6\uff0c\u610f\u5473\u7740\u9047\u5230\u4e86\u4e00\u4e2a\u65b0\u7684\u5355\u8bcd\uff0c\u6b64\u65f6\u8ba1\u6570\u5668 count \u589e\u52a0\u3002 \u904d\u5386\u5b57\u7b26\u4e32: \u901a\u8fc7\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u5e76\u5728\u9047\u5230\u975e\u7a7a\u683c\u5b57\u7b26\u65f6\u8bc6\u522b\u51fa\u4e00\u4e2a\u65b0\u7684\u5355\u8bcd\u5f00\u59cb\u3002\u5f53\u9047\u5230\u7a7a\u683c\u5b57\u7b26\u65f6\uff0c\u8868\u793a\u5f53\u524d\u5355\u8bcd\u7ed3\u675f\u3002 \u8bb0\u5f55\u5355\u8bcd\u6570\u91cf: \u4f7f\u7528\u4e00\u4e2a\u8ba1\u6570\u5668\uff0c\u5728\u68c0\u6d4b\u5230\u4e00\u4e2a\u5355\u8bcd\u7684\u5f00\u59cb\u65f6\uff0c\u8ba1\u6570\u5668\u52a01\u3002 class Solution(object): def countSegments(self, s): s = s.strip() if not s: return 0 c = 0 for i in range(len(s)): if s[i] != ' ' and (i == 0 or s[i - 1] == ' '): c += 1 # \u9047\u5230\u4e00\u4e2a\u65b0\u7684\u5355\u8bcd\uff0c\u8ba1\u6570\u5668\u589e\u52a0 return c \u8c03\u7528\u51fd\u6570\u6cd5 split() \u65b9\u6cd5\u4f1a\u81ea\u52a8\u53bb\u9664\u5b57\u7b26\u4e32\u4e2d\u7684\u591a\u4f59\u7a7a\u683c\uff0c\u5e76\u5c06\u5b57\u7b26\u4e32\u6309\u7a7a\u683c\u5206\u5272\u4e3a\u5355\u8bcd\u5217\u8868\u3002 \u7136\u540e\uff0c\u901a\u8fc7 len() \u51fd\u6570\u8ba1\u7b97\u5355\u8bcd\u5217\u8868\u7684\u957f\u5ea6\uff0c\u5373\u5355\u8bcd\u7684\u6570\u91cf\u3002 python class Solution(object): def countSegments(self, s): s = s.split() return len(s)","title":"\u601d\u8def"},{"location":"lesson6/Lesson6%20Python/#_8","text":"","title":"\u4e3e\u4e00\u53cd\u4e09"},{"location":"lesson6/Lesson6%20Python/#lc709","text":"","title":"LC709. \u8f6c\u6362\u6210\u5c0f\u5199\u5b57\u6bcd"},{"location":"lesson6/Lesson6%20Python/#_9","text":"\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u5c06\u8be5\u5b57\u7b26\u4e32\u4e2d\u7684\u5927\u5199\u5b57\u6bcd\u8f6c\u6362\u6210\u76f8\u540c\u7684\u5c0f\u5199\u5b57\u6bcd\uff0c\u8fd4\u56de\u65b0\u7684\u5b57\u7b26\u4e32\uff0c\u67e5\u627e\u5e76\u4f7f\u7528\u5408\u9002\u7684\u5b57\u7b26\u4e32\u51fd\u6570\u89e3\u7b54\u5373\u53ef\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson6/Lesson6%20Python/#_10","text":"class Solution(object): def toLowerCase(self, s): return s.lower()","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"lesson6/Lesson6%20Python/#lc520","text":"","title":"LC520. \u68c0\u6d4b\u5927\u5199\u5b57\u6bcd"},{"location":"lesson6/Lesson6%20Python/#_11","text":"\u6211\u4eec\u5b9a\u4e49\uff0c\u5728\u4ee5\u4e0b\u60c5\u51b5\u4e0b\uff0c\u5355\u8bcd\u7684\u5927\u5199\u7528\u6cd5\u662f\u6b63\u786e\u7684\uff1a \u5168\u90e8\u5b57\u6bcd\u90fd\u662f\u5927\u5199\uff0c\u6bd4\u5982 \"USA\" \u3002 \u5355\u8bcd\u4e2d\u6240\u6709\u5b57\u6bcd\u90fd\u4e0d\u662f\u5927\u5199\uff0c\u6bd4\u5982 \"leetcode\" \u3002 \u5982\u679c\u5355\u8bcd\u4e0d\u53ea\u542b\u6709\u4e00\u4e2a\u5b57\u6bcd\uff0c\u53ea\u6709\u9996\u5b57\u6bcd\u5927\u5199\uff0c\u6bd4\u5982 \"Google\" \u3002 \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 word \u3002\u5982\u679c\u5927\u5199\u7528\u6cd5\u6b63\u786e\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson6/Lesson6%20Python/#_12","text":"\u8fd9\u4e2a\u95ee\u9898\u8981\u6c42\u6211\u4eec\u5224\u65ad\u4e00\u4e2a\u5355\u8bcd\u7684\u5927\u5c0f\u5199\u662f\u5426\u7b26\u5408\u7279\u5b9a\u7684\u89c4\u5219\u3002\u5177\u4f53\u7684\u89c4\u5219\u5305\u62ec\uff1a \u5168\u90e8\u5b57\u6bcd\u90fd\u662f\u5927\u5199 \uff0c\u4f8b\u5982 \"USA\" \u3002 \u5168\u90e8\u5b57\u6bcd\u90fd\u4e0d\u662f\u5927\u5199 \uff0c\u4f8b\u5982 \"leetcode\" \u3002 \u53ea\u6709\u9996\u5b57\u6bcd\u5927\u5199 \uff0c\u4f8b\u5982 \"Google\" \u3002 \u5982\u679c\u4e00\u4e2a\u5355\u8bcd\u7b26\u5408\u4ee5\u4e0a\u4efb\u610f\u4e00\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u8fd4\u56de true \uff0c\u5426\u5219\u8fd4\u56de false \u3002","title":"\u9898\u76ee\u5206\u6790"},{"location":"lesson6/Lesson6%20Python/#_13","text":"\u5224\u65ad\u5168\u5927\u5199 \uff1a\u4f7f\u7528Python\u7684 str.isupper() \u65b9\u6cd5\u68c0\u67e5\u6574\u4e2a\u5355\u8bcd\u662f\u5426\u5168\u90e8\u4e3a\u5927\u5199\u3002\u5982\u679c\u662f\uff0c\u5219\u8fd4\u56de True \u3002 \u5224\u65ad\u5168\u5c0f\u5199 \uff1a\u4f7f\u7528 str.islower() \u65b9\u6cd5\u68c0\u67e5\u6574\u4e2a\u5355\u8bcd\u662f\u5426\u5168\u90e8\u4e3a\u5c0f\u5199\u3002\u5982\u679c\u662f\uff0c\u5219\u8fd4\u56de True \u3002 \u5224\u65ad\u9996\u5b57\u6bcd\u5927\u5199 \uff1a\u9996\u5148\u68c0\u67e5\u7b2c\u4e00\u4e2a\u5b57\u7b26\u662f\u5426\u5927\u5199 ( str[0].isupper() )\uff0c\u7136\u540e\u68c0\u67e5\u5176\u4f59\u5b57\u7b26\u662f\u5426\u5168\u90e8\u5c0f\u5199 ( str[1:].islower() )\u3002 \u5f52\u7eb3 \uff1a\u5982\u679c\u6ee1\u8db3\u4ee5\u4e0a\u4efb\u610f\u4e00\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u5c31\u8fd4\u56de True \uff0c\u5426\u5219\u8fd4\u56de False \u3002","title":"\u601d\u8def\u8bb2\u89e3"},{"location":"lesson6/Lesson6%20Python/#_14","text":"\u5e38\u89c4\u89e3\u6cd5 class Solution(object): def detectCapitalUse(self, word): if len(word) >= 2 and word[0].islower() and word[1].isupper(): return False # \u65e0\u8bba\u7b2c\u4e00\u4e2a\u5b57\u6bcd\u662f\u5426\u5927\u5199\uff0c\u5176\u4ed6\u5b57\u6bcd\u5fc5\u987b\u4e0e\u7b2c\u4e8c\u4e2a\u5b57\u6bcd\u7684\u5927\u5c0f\u5199\u76f8\u540c for i in range(2, len(word)): if word[i].islower() != word[1].islower(): return False return True \u5b57\u7b26\u4e32\u51fd\u6570\u89e3\u6cd5 class Solution(object): def detectCapitalUse(self, word): return word.isupper() or word.islower() or (word[0].isupper() and word[1:].islower())","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"lesson6/Lesson6%20Python/#lc521-i","text":"","title":"LC521. \u6700\u957f\u7279\u6b8a\u5e8f\u5217 \u2160"},{"location":"lesson6/Lesson6%20Python/#_15","text":"\u7ed9\u4f60\u4e24\u4e2a\u5b57\u7b26\u4e32 a \u548c b \uff0c\u8bf7\u8fd4\u56de\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u6700\u957f\u7684\u7279\u6b8a\u5e8f\u5217\u7684\u957f\u5ea6\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de -1 \u3002 \u6700\u957f\u7279\u6b8a\u5e8f\u5217 \u5b9a\u4e49\u5982\u4e0b\uff1a\u8be5\u5e8f\u5217\u4e3a\u67d0\u5b57\u7b26\u4e32\u72ec\u6709\u7684\u6700\u957f\u5b50\u5e8f\u5217\uff08\u5373\u4e0d\u80fd\u662f\u5176\u4ed6\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\uff09\u3002 \u5b57\u7b26\u4e32 s \u7684\u5b50\u5e8f\u5217\u662f\u5728\u4ece s \u4e2d\u5220\u9664\u4efb\u610f\u6570\u91cf\u7684\u5b57\u7b26\u540e\u53ef\u4ee5\u83b7\u5f97\u7684\u5b57\u7b26\u4e32\u3002\u4f8b\u5982\uff0c\"abc\" \u662f \"aebdc\" \u7684\u5b50\u5e8f\u5217\uff0c\u56e0\u4e3a\u5220\u9664 \"aebdc\" \u4e2d\u659c\u4f53\u52a0\u7c97\u7684\u5b57\u7b26\u53ef\u4ee5\u5f97\u5230 \"abc\"\u3002 \"aebdc\" \u7684\u5b50\u5e8f\u5217\u8fd8\u5305\u62ec \"aebdc\"\u3001\"aeb\" \u548c \"\"\uff08\u7a7a\u5b57\u7b26\u4e32\uff09\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson6/Lesson6%20Python/#_16","text":"\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u4e0d\u4f1a\u8d85\u8fc7\u8be5\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002\u82e5\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u7b49\u4e8e\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff0c\u90a3\u4e48\u5b50\u5e8f\u5217\u5c31\u662f\u8be5\u5b57\u7b26\u4e32\u3002 \u82e5\u4e24\u5b57\u7b26\u4e32\u4e0d\u76f8\u540c\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u8f83\u957f\u7684\u5b57\u7b26\u4e32\u4f5c\u4e3a\u6700\u957f\u7279\u6b8a\u5e8f\u5217\uff0c\u663e\u7136\u5b83\u4e0d\u4f1a\u662f\u8f83\u77ed\u7684\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\u3002\u7279\u522b\u5730\uff0c\u5f53\u4e24\u5b57\u7b26\u4e32\u957f\u5ea6\u76f8\u540c\u65f6\uff08\u4f46\u4e0d\u662f\u540c\u4e00\u5b57\u7b26\u4e32\uff09\uff0c\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u9009\u62e9\u5176\u4e2d\u7684\u4e00\u4e2a\u5b57\u7b26\u4e32\u4f5c\u4e3a\u6700\u957f\u7279\u6b8a\u5e8f\u5217\uff0c\u5b83\u4e0d\u4f1a\u662f\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\u3002 \u82e5\u4e24\u5b57\u7b26\u4e32\u76f8\u540c\uff0c\u90a3\u4e48\u4efb\u4e00\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\u5747\u4f1a\u51fa\u73b0\u5728\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\uff0c\u6b64\u65f6\u5e94\u8fd4\u56de \u22121\u3002","title":"\u63d0\u793a"},{"location":"lesson6/Lesson6%20Python/#_17","text":"\u8fd9\u4e2a\u95ee\u9898\u8981\u6c42\u6211\u4eec\u627e\u5230\u4e24\u4e2a\u5b57\u7b26\u4e32 a \u548c b \u7684\u6700\u957f\u7279\u6b8a\u5e8f\u5217\u3002\u6839\u636e\u9898\u76ee\u4e2d\u7684\u5b9a\u4e49\uff0c\u6700\u957f\u7279\u6b8a\u5e8f\u5217\u662f\u6307\u5728\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u72ec\u6709\u7684\u6700\u957f\u5b50\u5e8f\u5217\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u5b50\u5e8f\u5217\uff0c\u90a3\u4e48\u5b83\u4e0d\u662f\u7279\u6b8a\u5e8f\u5217\u3002\u6211\u4eec\u7684\u76ee\u6807\u662f\u627e\u5230\u6700\u957f\u7684\u7279\u6b8a\u5e8f\u5217\u7684\u957f\u5ea6\u3002","title":"\u9898\u76ee\u5206\u6790"},{"location":"lesson6/Lesson6%20Python/#_18","text":"\u5b57\u7b26\u4e32\u76f8\u7b49\u7684\u60c5\u51b5 : \u5982\u679c\u5b57\u7b26\u4e32 a \u548c b \u76f8\u7b49\uff0c\u90a3\u4e48\u6bcf\u4e2a\u5b50\u5e8f\u5217\u5728\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u4e5f\u662f\u5b58\u5728\u7684\u3002\u56e0\u6b64\uff0c\u4e0d\u53ef\u80fd\u6709\u72ec\u6709\u7684\u5b50\u5e8f\u5217\uff0c\u76f4\u63a5\u8fd4\u56de -1 \u3002 \u5b57\u7b26\u4e32\u4e0d\u76f8\u7b49\u7684\u60c5\u51b5 : \u5982\u679c\u5b57\u7b26\u4e32 a \u548c b \u4e0d\u76f8\u7b49\uff0c\u90a3\u4e48\u8f83\u957f\u7684\u5b57\u7b26\u4e32\u672c\u8eab\u5c31\u662f\u5b83\u7684\u6700\u957f\u7279\u6b8a\u5e8f\u5217\uff0c\u56e0\u4e3a\u5b83\u4e0d\u80fd\u5b8c\u5168\u51fa\u73b0\u5728\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u3002\u6b64\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u8f83\u957f\u7684\u90a3\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002","title":"\u601d\u8def"},{"location":"lesson6/Lesson6%20Python/#_19","text":"\u76f4\u89c2\u7248\u672c class Solution(object): def findLUSlength(self, a, b): if a != b: return max(len(a), len(b)) # \u5982\u679c\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u540c\uff0c\u8fd4\u56de -1 return -1 \u7b80\u6d01\u7248\u672c class Solution(object): def findLUSlength(self, a, b): return max(len(a), len(b)) if a != b else -1","title":"\u4ee3\u7801\u5b9e\u73b0"},{"location":"lesson6/Lesson6%20Python/#_20","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC551 Student Attendence Record I \u7ed9\u5b9a\u4e00\u4e2a\u5b66\u751f\u7684\u51fa\u52e4\u8bb0\u5f55\uff0c\u5224\u65ad\u8be5\u5b66\u751f\u662f\u5426\u5b58\u5728\u8fde\u7eed\u7684\u4e09\u5929\u7f3a\u52e4\u6216\u6709\u8d85\u8fc710\u5929\u7684\u65f7\u8bfe\u3002 LC657 Robot Return to Origin \u5224\u65ad\u7ed9\u5b9a\u7684\u673a\u5668\u4eba\u79fb\u52a8\u6307\u4ee4\u662f\u5426\u4f7f\u673a\u5668\u4eba\u56de\u5230\u539f\u70b9\u3002 LC1078 Occurrences After Bigram \u7ed9\u5b9a\u4e00\u4e2a\u6587\u672c\u548c\u4e00\u4e2a\u5927\u5b57\u5178\uff0c\u627e\u51fa\u5927\u5b57\u5178\u4e2d\u51fa\u73b0\u7684\u5355\u8bcd\u5728\u6587\u672c\u4e2d\u51fa\u73b0\u7684\u6b21\u6570\u3002 LC557 Reverse Words in a String III \u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e2a\u5355\u8bcd\uff0c\u4fdd\u6301\u5355\u8bcd\u7684\u987a\u5e8f\u4e0d\u53d8\u3002","title":"\u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson7/Lesson7%20C%2B%2B/","text":"Lesson 7. Ascii \u8f6c\u6362\u4e0e\u8fdb\u5236\u8f6c\u6362 \u76ee\u5f55 \u7406\u89e3 ASCII 1.1 \u4ec0\u4e48\u662f ASCII 1.2 ASCII \u7684\u5e94\u7528 1.3 ASCII \u4f8b\u9898\u8bb2\u89e3 1.3.1 LC1309 - \u89e3\u7801\u5b57\u6bcd\u5230\u6574\u6570\u6620\u5c04 1.4 ASCII \u4e3e\u4e00\u53cd\u4e09 1.4.1 LC387 - \u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u552f\u4e00\u5b57\u7b26 1.4.2 LC171 - Excel \u8868\u5217\u5e8f\u53f7 1.4.3 LC804 - \u552f\u4e00\u6469\u65af\u5bc6\u7801\u8bcd \u8fdb\u5236\u8f6c\u6362 2.1 \u6570\u5b57\u8fdb\u5236\u6982\u8ff0 2.2 \u5341\u8fdb\u5236\u5230\u4e8c\u8fdb\u5236\u7684\u8f6c\u6362 2.3 \u4e8c\u8fdb\u5236\u5230\u5341\u8fdb\u5236\u7684\u8f6c\u6362 2.4 \u5341\u8fdb\u5236\u5230\u5341\u516d\u8fdb\u5236\u7684\u8f6c\u6362 2.5 \u4e8c\u8fdb\u5236\u5230\u5341\u516d\u8fdb\u5236\u7684\u8f6c\u6362 2.6 \u8fdb\u5236 \u4f8b\u9898\u8bb2\u89e3 2.6.1 LC504 - \u4e03\u8fdb\u5236\u6570 2.7 \u8fdb\u5236 \u4e3e\u4e00\u53cd\u4e09 2.7.1 LC168 - Excel \u8868\u5217\u540d\u79f0 2.7.2 LC728 - \u81ea\u9664\u6570 2.7.3 LC693 - \u4ea4\u66ff\u4f4d\u4e8c\u8fdb\u5236\u6570 \u8bfe\u540e\u7ec3\u4e60 \u5728\u672c\u8bfe\u4e2d\uff0c\u6211\u4eec\u5c06\u63a2\u8ba8\u5b57\u7b26\u5982\u4f55\u901a\u8fc7 ASCII \u503c\u5b58\u50a8\u548c\u5904\u7406\uff0c\u5e76\u5b66\u4e60\u5982\u4f55\u5728\u4e0d\u540c\u7684\u8fdb\u5236\uff08\u5982\u4e8c\u8fdb\u5236\u3001\u516b\u8fdb\u5236\u3001\u5341\u8fdb\u5236\u548c\u5341\u516d\u8fdb\u5236\uff09\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\u3002 1. \u7406\u89e3 ASCII 1.1 \u4ec0\u4e48\u662f ASCII\uff1f ASCII\uff08American Standard Code for Information Interchange\uff0c\u7f8e\u56fd\u4fe1\u606f\u4ea4\u6362\u6807\u51c6\u4ee3\u7801\uff09\u662f\u4e00\u79cd\u5b57\u7b26\u7f16\u7801\u6807\u51c6\uff0c\u5b83\u4f7f\u7528\u6570\u503c\u6765\u8868\u793a\u5b57\u7b26\u3002\u6bcf\u4e2a\u5b57\u7b26\uff08\u5982\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u7b26\u53f7\u7b49\uff09\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u7684 ASCII \u4ee3\u7801\uff0c\u901a\u5e38\u8303\u56f4\u4ece 0 \u5230 127\u3002 \u8fd9\u4e9b\u503c\u53ef\u4ee5\u7528\u4e8e\u5b57\u7b26\u4e0e\u6570\u5b57\u4e4b\u95f4\u7684\u8f6c\u6362\u3002\u4f8b\u5982\uff0c\u5c06\u5b57\u7b26 '0' \u5230 '9' \u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u6574\u6570\uff0c\u6216\u53cd\u5411\u64cd\u4f5c\u3002 \u793a\u4f8b ASCII \u8868 \u5b57\u7b26 ASCII \u503c \u4e8c\u8fdb\u5236 \u5341\u516d\u8fdb\u5236 'A' 65 01000001 0x41 'a' 97 01100001 0x61 '0' 48 00110000 0x30 ' '\uff08\u7a7a\u683c\uff09 32 00100000 0x20 \u5b8c\u6574ASCII\u8868\u683c\uff1ahttps://www.ascii-code.com/ 1.2 ASCII \u7684\u5e94\u7528 \u5728 C++ \u4e2d\uff0c\u6bcf\u4e2a\u5b57\u7b26\u90fd\u4ee5\u5176\u5bf9\u5e94\u7684 ASCII \u503c\u5f62\u5f0f\u5b58\u50a8\u4e3a\u6574\u6570\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5c06\u5b57\u7b26\u89c6\u4e3a\u6574\u6570\u6765\u8f7b\u677e\u5730\u64cd\u4f5c\u5b83\u4eec\u3002 \u901a\u8fc7ASCII\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u5b57\u7b26\u8fdb\u884c\u52a0\u51cf\u8fd0\u7b97\uff0c\u751a\u81f3\u662f\u8f6c\u6362\u3002 1.2.1 \u4f7f\u7528 +'0' \u548c -'0' \u8fdb\u884c\u8f6c\u6362 -'0' \uff1a\u5b57\u7b26\u5230\u6574\u6570\u7684\u8f6c\u6362 \u901a\u8fc7\u5c06\u5b57\u7b26\u51cf\u53bb '0' \uff0c\u53ef\u4ee5\u5f97\u5230\u5bf9\u5e94\u7684\u6574\u6570\u503c\u3002\u6bd4\u5982 '3' - '0' \u7684\u7ed3\u679c\u662f\u6574\u6570 3 \u3002 \u793a\u4f8b\uff1a\u5b57\u7b26\u5230\u6574\u6570\u7684\u8f6c\u6362 #include <iostream> using namespace std; int main() { char digit = '5'; // '5' \u7684 ASCII \u503c\u662f 53 int num = digit - '0'; // '5' - '0' = 5 cout << \"\u5b57\u7b26 \" << digit << \" \u8f6c\u6362\u4e3a\u6574\u6570\u662f \" << num << endl; return 0; } \u8f93\u51fa: \u5b57\u7b26 5 \u8f6c\u6362\u4e3a\u6574\u6570\u662f 5 +'0' \uff1a\u6574\u6570\u5230\u5b57\u7b26\u7684\u8f6c\u6362 \u901a\u8fc7\u5c06\u6574\u6570\u52a0\u4e0a '0' \uff0c\u53ef\u4ee5\u5f97\u5230\u5bf9\u5e94\u7684\u5b57\u7b26\u3002\u6bd4\u5982 5 + '0' \u7684\u7ed3\u679c\u662f\u5b57\u7b26 '5' \u3002 \u793a\u4f8b\uff1a\u6574\u6570\u5230\u5b57\u7b26\u7684\u8f6c\u6362 #include <iostream> using namespace std; int main() { int num = 7; char digit = num + '0'; // 7 + '0' = '7' cout << \"\u6574\u6570 \" << num << \" \u8f6c\u6362\u4e3a\u5b57\u7b26\u662f \" << digit << endl; return 0; } \u8f93\u51fa\uff1a \u6574\u6570 7 \u8f6c\u6362\u4e3a\u5b57\u7b26\u662f 7 1.2.2 \u4f7f\u7528 +'A' \u548c -'A' \u8fdb\u884c\u8f6c\u6362 \u901a\u8fc7\u5728\u5b57\u7b26\u4e0a\u52a0\u4e0a\u6216\u51cf\u53bb\u5b57\u7b26 'A' \uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5b57\u7b26\u4e0e\u5b57\u6bcd\u8868\u7684\u4f4d\u7f6e\u5173\u8054\u8d77\u6765\u3002\u4f8b\u5982\uff0c\u5c06\u5b57\u7b26 'C' \u51cf\u53bb 'A' \u53ef\u4ee5\u5f97\u5230 'C' \u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\uff08\u4ece0\u5f00\u59cb\u8ba1\u6570\uff09\u3002\u8fd9\u6837\u5bf9\u4e8e\u5b9e\u73b0\u7b80\u5355\u7684\u5b57\u6bcd\u7f16\u7801\u6216\u89e3\u7801\u975e\u5e38\u6709\u7528\u3002 -'A' \uff1a\u5b57\u7b26\u5230\u5b57\u6bcd\u8868\u4f4d\u7f6e\u7684\u8f6c\u6362 \u901a\u8fc7\u5c06\u5b57\u7b26\u51cf\u53bb 'A' \uff0c\u53ef\u4ee5\u5f97\u5230\u5b57\u7b26\u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\uff08\u4ece0\u5f00\u59cb\uff09\u3002\u6bd4\u5982 'C' - 'A' \u7684\u7ed3\u679c\u662f 2 \u3002 \u793a\u4f8b\uff1a\u5b57\u7b26\u5230\u5b57\u6bcd\u8868\u4f4d\u7f6e\u7684\u8f6c\u6362 #include <iostream> using namespace std; int main() { char letter = 'C'; // 'C' \u7684 ASCII \u503c\u662f 67 int position = letter - 'A'; // 'C' - 'A' = 2 cout << \"\u5b57\u7b26 \" << letter << \" \u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\u662f \" << position << endl; return 0; } \u8f93\u51fa: \u5b57\u7b26 C \u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\u662f 2 +'A' \uff1a\u5b57\u6bcd\u8868\u4f4d\u7f6e\u5230\u5b57\u7b26\u7684\u8f6c\u6362 \u901a\u8fc7\u5c06\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\u52a0\u4e0a 'A' \uff0c\u53ef\u4ee5\u5f97\u5230\u5bf9\u5e94\u7684\u5b57\u7b26\u3002\u6bd4\u5982 2 + 'A' \u7684\u7ed3\u679c\u662f\u5b57\u7b26 'C' \u3002 \u793a\u4f8b\uff1a\u5b57\u6bcd\u8868\u4f4d\u7f6e\u5230\u5b57\u7b26\u7684\u8f6c\u6362 #include <iostream> using namespace std; int main() { int position = 2; char letter = position + 'A'; // 2 + 'A' = 'C' cout << \"\u5b57\u6bcd\u8868\u4e2d\u4f4d\u7f6e \" << position << \" \u5bf9\u5e94\u7684\u5b57\u7b26\u662f \" << letter << endl; return 0; } \u8f93\u51fa\uff1a \u5b57\u6bcd\u8868\u4e2d\u4f4d\u7f6e 2 \u5bf9\u5e94\u7684\u5b57\u7b26\u662f C \u7efc\u5408\u8fd0\u7528 +'0' \u548c -'0' \u4ee5\u53ca +'A' \u548c -'A' \u901a\u8fc7\u7ed3\u5408\u4f7f\u7528\u8fd9\u4e9b\u64cd\u4f5c\u7b26\uff0c\u6211\u4eec\u53ef\u4ee5\u7075\u6d3b\u5730\u5728\u5b57\u7b26\u3001\u6570\u5b57\u548c\u5b57\u6bcd\u8868\u4f4d\u7f6e\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e2a\u6570\u5b57\u5b57\u7b26\u8f6c\u6362\u4e3a\u6574\u6570\uff0c\u7136\u540e\u8fdb\u884c\u7b80\u5355\u7684\u8fd0\u7b97\uff0c\u518d\u5c06\u7ed3\u679c\u8f6c\u6362\u56de\u5b57\u7b26\uff1b\u6216\u8005\u5c06\u5b57\u6bcd\u5b57\u7b26\u8f6c\u6362\u4e3a\u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\uff0c\u5e76\u8fdb\u884c\u4e00\u4e9b\u52a0\u5bc6\u64cd\u4f5c\u3002 \u793a\u4f8b\uff1a\u5904\u7406\u5b57\u7b26\u4e32\u4e2d\u7684\u6570\u5b57\u548c\u5b57\u6bcd #include <iostream> #include <string> using namespace std; int main() { string str = \"A3C7\"; int sum = 0; for (char ch : str) { if (ch >= '0' && ch <= '9') { sum += (ch - '0'); // \u5c06\u6570\u5b57\u5b57\u7b26\u8f6c\u6362\u4e3a\u6574\u6570\u5e76\u6c42\u548c } else if (ch >= 'A' && ch <= 'Z') { int pos = ch - 'A'; // \u5c06\u5b57\u6bcd\u5b57\u7b26\u8f6c\u6362\u4e3a\u5b57\u6bcd\u8868\u4f4d\u7f6e cout << ch << \" \u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\u662f: \" << pos << endl; } } cout << \"\u5b57\u7b26\u4e32 \" << str << \" \u4e2d\u6570\u5b57\u5b57\u7b26\u7684\u548c\u662f: \" << sum << endl; return 0; } \u8f93\u51fa\uff1a A \u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\u662f: 0 C \u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\u662f: 2 \u5b57\u7b26\u4e32 A3C7 \u4e2d\u6570\u5b57\u5b57\u7b26\u7684\u548c\u662f: 10 1.3 ASCII \u4f8b\u9898\u8bb2\u89e3 1.3.1 LC1309 \u89e3\u7801\u5b57\u6bcd\u5230\u6574\u6570\u6620\u5c04 \u9898\u76ee\u63cf\u8ff0\uff1a \u7ed9\u5b9a\u4e00\u4e2a\u52a0\u5bc6\u5b57\u7b26\u4e32 s \uff0c\u5b83\u7531\u6570\u5b57 '0' \u5230 '9' \u3001 '#' \u548c\u5b57\u6bcd\u7ec4\u6210\u3002\u6211\u4eec\u6309\u7167\u4e0b\u8ff0\u89c4\u5219\u89e3\u7801\uff1a 1. \u5b57\u7b26\uff08 '1' - '9' \uff09\u8868\u793a\u6620\u5c04\u5230\u5c0f\u5199\u5b57\u6bcd\uff08 'a' - 'i' \uff09\u3002 2. \u5b57\u7b26\uff08 '10#' - '26#' \uff09\u8868\u793a\u6620\u5c04\u5230\u5c0f\u5199\u5b57\u6bcd\uff08 'j' - 'z' \uff09\u3002 \u8fd4\u56de\u5b57\u7b26\u4e32 s \u89e3\u7801\u540e\u7684\u7ed3\u679c\u3002 \u6ce8\u610f\uff1a - \u8f93\u5165\u53ea\u5305\u542b\u6570\u5b57\u3001\u5b57\u7b26 '#' \u548c\u5c0f\u5199\u5b57\u6bcd\u3002 - \u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u8303\u56f4\u662f [1, 1000] \u3002 \u793a\u4f8b\uff1a \u8f93\u5165\uff1as = \"10#11#12\" \u8f93\u51fa\uff1a\"jkab\" \u63d0\u793a \u51c6\u5907\u4e00\u4e2a vector<char> \u6765\u5b58\u50a8\u5b57\u6bcd a \u5230 z \u7684\u6620\u5c04\u3002 \u904d\u5386\u5b57\u7b26\u4e32 s \uff1a \u5982\u679c\u5f53\u524d\u5b57\u7b26\u662f\u6570\u5b57\u4e14\u540e\u9762\u6709 '#' \uff0c\u5c31\u5c06\u5f53\u524d\u7684\u6570\u5b57\u548c\u4e0b\u4e00\u4e2a\u6570\u5b57\u62fc\u63a5\u6210\u4e24\u4f4d\u6570\u5b57\uff0c\u7136\u540e\u5c06\u5176\u8f6c\u6362\u4e3a\u5b57\u6bcd\u3002 \u5982\u679c\u5f53\u524d\u5b57\u7b26\u662f\u5355\u72ec\u7684\u6570\u5b57\uff0c\u5219\u76f4\u63a5\u8f6c\u6362\u4e3a\u5b57\u6bcd\u3002 \u6784\u5efa\u89e3\u5bc6\u540e\u7684\u5b57\u7b26\u4e32\u3002 \u53c2\u8003\u7b54\u6848 class Solution { public: string freqAlphabets(string s) { // \u7528 vector<char> \u6765\u5b58\u50a8\u5b57\u6bcd a-z \u7684\u6620\u5c04 vector<char> mapping(26); for (int i = 0; i < 26; ++i) { mapping[i] = 'a' + i; // 'a' + i \u8868\u793a\u7b2c i+1 \u4e2a\u5b57\u6bcd } string result = \"\"; int n = s.length(); for (int i = 0; i < n; ++i) { if (i + 2 < n && s[i + 2] == '#') { // \u68c0\u67e5\u662f\u5426\u662f '10#' \u5230 '26#' int num = (s[i] - '0') * 10 + (s[i + 1] - '0'); // \u8ba1\u7b97\u4e24\u4f4d\u6570 result += mapping[num - 1]; // \u5c06\u5176\u6620\u5c04\u4e3a\u5b57\u6bcd i += 2; // \u8df3\u8fc7\u6570\u5b57\u548c '#' } else { // \u5355\u4e2a\u6570\u5b57 '1' \u5230 '9' int num = s[i] - '0'; // \u8f6c\u6362\u6210\u6570\u5b57 result += mapping[num - 1]; // \u6620\u5c04\u4e3a\u5b57\u6bcd } } return result; } }; \u4ee3\u7801\u8bb2\u89e3 \u6784\u5efa\u6620\u5c04\u8868 \uff1a vector<char> mapping(26) \u521b\u5efa\u4e00\u4e2a\u5305\u542b 26 \u4e2a\u5b57\u7b26\u7684\u6570\u7ec4\uff0c\u5176\u4e2d\u7d22\u5f15 0 \u5bf9\u5e94 'a' \uff0c\u7d22\u5f15 25 \u5bf9\u5e94 'z' \u3002 \u904d\u5386\u5b57\u7b26\u4e32 \uff1a\u5faa\u73af\u904d\u5386\u52a0\u5bc6\u5b57\u7b26\u4e32 s \u3002 \u5982\u679c\u5f53\u524d\u5b57\u7b26\u540e\u9762\u4e24\u4e2a\u5b57\u7b26\u6784\u6210\u4e00\u4e2a\u6709\u6548\u7684 \"#\" \u5e8f\u5217\uff0c\u63d0\u53d6\u8be5\u5e8f\u5217\uff0c\u8ba1\u7b97\u5bf9\u5e94\u7684\u6570\u5b57\u5e76\u6620\u5c04\u4e3a\u5b57\u6bcd\u3002 \u5982\u679c\u662f\u5355\u4e2a\u6570\u5b57\uff0c\u5219\u76f4\u63a5\u6620\u5c04\u4e3a\u76f8\u5e94\u7684\u5b57\u6bcd\u3002 \u7ed3\u679c\u6784\u5efa \uff1a\u5c06\u89e3\u5bc6\u540e\u7684\u5b57\u7b26\u62fc\u63a5\u5230\u7ed3\u679c\u5b57\u7b26\u4e32\u4e2d\u3002 1.4 ASCII \u4e3e\u4e00\u53cd\u4e09 1.4.1 LC387. \u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u552f\u4e00\u5b57\u7b26 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u51fa\u73b0\u7684\u5b57\u7b26\uff0c\u5e76\u8fd4\u56de\u5b83\u7684\u7d22\u5f15\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de -1 \u3002 \u601d\u8def\u5206\u6790 \u901a\u8fc7 vector \u6765\u5b9e\u73b0\u5b57\u7b26\u9891\u7387\u7edf\u8ba1\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u5927\u5c0f\u4e3a 26 \u7684 vector \u6765\u5b58\u50a8\u6bcf\u4e2a\u5b57\u6bcd\u51fa\u73b0\u7684\u6b21\u6570\u3002 \u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a \u5b57\u7b26\u9891\u7387\u7edf\u8ba1 \uff1a\u4f7f\u7528\u4e00\u4e2a\u5927\u5c0f\u4e3a 26 \u7684 vector \u6765\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u6bcd\u7684\u51fa\u73b0\u6b21\u6570\u3002\u901a\u8fc7 s[i] - 'a' \u53ef\u4ee5\u786e\u5b9a\u5b57\u6bcd\u5728 vector \u4e2d\u7684\u7d22\u5f15\u4f4d\u7f6e\u3002 \u904d\u5386\u5b57\u7b26\u4e32 \uff1a\u5148\u904d\u5386\u4e00\u6b21\u5b57\u7b26\u4e32\uff0c\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\u3002 \u627e\u5230\u7b2c\u4e00\u4e2a\u552f\u4e00\u5b57\u7b26 \uff1a\u518d\u6b21\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u6839\u636e\u7edf\u8ba1\u7ed3\u679c\u627e\u5230\u7b2c\u4e00\u4e2a\u51fa\u73b0\u6b21\u6570\u4e3a 1 \u7684\u5b57\u7b26\u3002 \u53c2\u8003\u89e3\u7b54 class Solution { public: int firstUniqChar(string s) { // \u5b9a\u4e49\u5927\u5c0f\u4e3a26\u7684vector\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u6b64\u5904\u8868\u793a\u65b9\u6cd5\u610f\u601d\u4e3a\u5728vector\u91cc\u9762\u653e26\u4e2a0 vector<int> count(26, 0); // \u7b2c\u4e00\u6b21\u904d\u5386\uff1a\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26\u7684\u9891\u7387 for (int i = 0; i < s.length(); i++) { count[s[i] - 'a']++; } // \u7b2c\u4e8c\u6b21\u904d\u5386\uff1a\u627e\u5230\u7b2c\u4e00\u4e2a\u51fa\u73b0\u6b21\u6570\u4e3a1\u7684\u5b57\u7b26 for (int i = 0; i < s.length(); i++) { if (count[s[i] - 'a'] == 1) { return i; // \u8fd4\u56de\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u5b57\u7b26\u7684\u7d22\u5f15 } } return -1; // \u6ca1\u6709\u627e\u5230\u4e0d\u91cd\u590d\u7684\u5b57\u7b26\uff0c\u8fd4\u56de-1 } }; \u4ee3\u7801\u8bb2\u89e3 vector<int> count(26, 0); \uff1a\u5b9a\u4e49\u4e00\u4e2a\u957f\u5ea6\u4e3a 26 \u7684 vector \uff0c\u7528\u4e8e\u5b58\u50a8\u6bcf\u4e2a\u5b57\u6bcd\u7684\u51fa\u73b0\u6b21\u6570\u3002 vector \u7684\u521d\u59cb\u503c\u5168\u90e8\u8bbe\u7f6e\u4e3a 0 \u3002 \u7b2c\u4e00\u6b21\u904d\u5386\u5b57\u7b26\u4e32 \uff1a\u5728\u7b2c\u4e00\u6b21\u904d\u5386\u4e2d\uff0c\u901a\u8fc7 s[i] - 'a' \u8ba1\u7b97\u51fa\u5f53\u524d\u5b57\u7b26\u5728 vector \u4e2d\u7684\u7d22\u5f15\u4f4d\u7f6e\uff0c\u5e76\u5c06\u5176\u5bf9\u5e94\u7684\u503c\u52a0 1\u3002 \u7b2c\u4e8c\u6b21\u904d\u5386\u5b57\u7b26\u4e32 \uff1a\u901a\u8fc7\u7b2c\u4e8c\u6b21\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u627e\u51fa\u7b2c\u4e00\u4e2a\u51fa\u73b0\u6b21\u6570\u4e3a 1 \u7684\u5b57\u7b26\uff0c\u5e76\u8fd4\u56de\u8be5\u5b57\u7b26\u7684\u7d22\u5f15\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u5982\u679c\u6ca1\u6709\u627e\u5230\u552f\u4e00\u5b57\u7b26\uff0c\u5219\u8fd4\u56de -1 \u3002 1.4.2 LC171. Excel\u8868\u5217\u5e8f\u53f7 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 columnTitle \uff0c\u8868\u793a Excel \u8868\u683c\u4e2d\u7684\u5217\u540d\u3002\u8bf7\u5c06\u5176\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5217\u5e8f\u53f7\u3002 \u4f8b\u5982\uff1a A -> 1 B -> 2 C -> 3 ... Z -> 26 AA -> 27 AB -> 28 ... \u601d\u8def\u5206\u6790 \u901a\u8fc7 \u8fdb\u5236\u8f6c\u6362 \u7684\u65b9\u6cd5\uff0c\u5c06 Excel \u5217\u540d\u770b\u4f5c\u4e00\u4e2a\u4ee5 26 \u4e3a\u57fa\u6570\u7684\u6570\u5b57\u7cfb\u7edf\uff0c\u6bcf\u4e2a\u5b57\u6bcd\u4ee3\u8868\u4e00\u4e2a\u6570\u5b57\u3002 A \u5230 Z \u5206\u522b\u4ee3\u8868 1 \u5230 26\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5217\u540d\u8f6c\u6362\u6210\u76f8\u5e94\u7684\u6570\u5b57\u3002 \u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a \u5b57\u7b26\u8f6c\u6362\u4e3a\u6570\u5b57 \uff1a\u6bcf\u4e2a\u5b57\u7b26\u4ece A \u5230 Z \u5bf9\u5e94\u7684\u503c\u4e3a 1 \u5230 26 \uff0c\u53ef\u4ee5\u901a\u8fc7 columnTitle[i] - 'A' + 1 \u5f97\u5230\u5176\u5bf9\u5e94\u7684\u6570\u503c\u3002 \u8fdb\u5236\u8f6c\u6362 \uff1a\u5c06\u5217\u540d\u770b\u4f5c\u662f 26 \u8fdb\u5236\u6570\uff0c\u4ece\u53f3\u5230\u5de6\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u5c06\u6bcf\u4e2a\u5b57\u7b26\u8f6c\u6362\u6210\u6570\u5b57\u5e76\u4e58\u4ee5 26 \u7684\u5e42\u6b21\u7d2f\u52a0\u5230\u7ed3\u679c\u4e2d\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u6700\u7ec8\u7684\u7d2f\u52a0\u7ed3\u679c\u5373\u4e3a Excel \u8868\u683c\u5217\u540d\u5bf9\u5e94\u7684\u5217\u5e8f\u53f7\u3002 \u53c2\u8003\u89e3\u7b54 class Solution { public: int titleToNumber(string columnTitle) { int result = 0; int pow_num = 0; // \u4ece\u53f3\u5230\u5de6\u904d\u5386\u5217\u540d for (int i = columnTitle.length() - 1; i >= 0; i--) { // \u5c06\u5b57\u7b26\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u6570\u503c int extract_char = columnTitle[i] - 'A' + 1; // \u8ba1\u7b97 26 \u7684\u5e42\u6b21\uff0c\u5e76\u7d2f\u52a0\u5230\u7ed3\u679c\u4e2d result += extract_char * pow(26, pow_num); pow_num++; } return result; } }; \u4ee3\u7801\u8bb2\u89e3 int extract_char = columnTitle[i] - 'A' + 1; \uff1a\u5c06\u5b57\u6bcd A-Z \u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684 1-26 \u6570\u5b57\u3002 \u8fdb\u5236\u8f6c\u6362 \uff1a\u6bcf\u4e2a\u5b57\u7b26\u7684\u4f4d\u7f6e\u5bf9\u5e94 26 \u7684\u5e42\u6b21\uff0c\u6700\u53f3\u8fb9\u7684\u5b57\u7b26\u4e58\u4ee5 26^0 \uff0c\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e58\u4ee5 26^1 \uff0c\u4f9d\u6b21\u7c7b\u63a8\u3002 result += extract_char * pow(26, pow_num); \uff1a\u5c06\u6bcf\u4e2a\u5b57\u7b26\u5bf9\u5e94\u7684\u503c\u4e58\u4ee5 26 \u7684\u5e42\u6b21\uff0c\u5e76\u7d2f\u52a0\u5230\u7ed3\u679c\u4e2d\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u6700\u7ec8\u7ed3\u679c\u662f\u5217\u540d\u5bf9\u5e94\u7684\u5217\u5e8f\u53f7\u3002 1.4.3 LC804. \u552f\u4e00\u6469\u65af\u5bc6\u7801\u8bcd \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4 words \uff0c\u5176\u4e2d\u6bcf\u4e2a\u5355\u8bcd\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u3002\u6bcf\u4e2a\u5b57\u6bcd\u53ef\u4ee5\u7528\u6469\u65af\u5bc6\u7801\u8868\u793a\uff0c\u4f8b\u5982\uff1a - 'a' -> \".-\" - 'b' -> \"-...\" - 'c' -> \"-.-.\" - ... \u4f60\u9700\u8981\u5c06\u6bcf\u4e2a\u5355\u8bcd\u8f6c\u6362\u4e3a\u6469\u65af\u5bc6\u7801\u8868\u793a\uff0c\u5e76\u8fd4\u56de\u552f\u4e00\u6469\u65af\u5bc6\u7801\u8bcd\u7684\u4e2a\u6570\u3002 \u601d\u8def\u5206\u6790 \u6469\u65af\u5bc6\u7801\u6620\u5c04 \uff1a\u6bcf\u4e2a\u5b57\u6bcd\u5bf9\u5e94\u4e00\u4e2a\u56fa\u5b9a\u7684\u6469\u65af\u5bc6\u7801\uff0c\u53ef\u4ee5\u7528\u6570\u7ec4\u6765\u8868\u793a\u6bcf\u4e2a\u5b57\u6bcd\u7684\u6469\u65af\u5bc6\u7801\u3002 \u9010\u5b57\u8f6c\u6362 \uff1a\u904d\u5386\u6bcf\u4e2a\u5355\u8bcd\uff0c\u5c06\u5176\u8f6c\u6362\u4e3a\u6469\u65af\u5bc6\u7801\u7ec4\u5408\u3002 \u552f\u4e00\u6027\u68c0\u67e5 \uff1a\u901a\u8fc7\u5411\u91cf\u5b58\u50a8\u5df2\u8f6c\u6362\u7684\u6469\u65af\u5bc6\u7801\uff0c\u5e76\u68c0\u67e5\u6bcf\u4e2a\u8f6c\u6362\u662f\u5426\u662f\u552f\u4e00\u7684\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u6700\u7ec8\u8fd4\u56de\u552f\u4e00\u6469\u65af\u5bc6\u7801\u7684\u6570\u91cf\u3002 \u53c2\u8003\u89e3\u7b54 class Solution { public: int uniqueMorseRepresentations(vector<string>& words) { // \u7528\u6570\u7ec4\u6765\u5b58\u50a8\u5b57\u6bcd\u5230\u6469\u65af\u5bc6\u7801\u7684\u6620\u5c04 string morse_code[26] = {\".-\", \"-...\", \"-.-.\", \"-..\", \".\", \"..-.\", \"--.\", \"....\", \"..\", \".---\", \"-.-\", \".-..\", \"--\", \"-.\", \"---\", \".--.\", \"--.-\", \".-.\", \"...\", \"-\", \"..-\", \"...-\", \".--\", \"-..-\", \"-.--\", \"--..\"}; vector<string> result; // \u904d\u5386\u6bcf\u4e2a\u5355\u8bcd for (int i = 0; i < words.size(); i++) { string combination = \"\"; // \u5c06\u5355\u8bcd\u8f6c\u6362\u4e3a\u6469\u65af\u5bc6\u7801\u8868\u793a for (int x = 0; x < words[i].length(); x++) { combination += morse_code[words[i][x] - 'a']; // \u901a\u8fc7 'a' \u7684 ASCII \u503c\u627e\u5230\u5bf9\u5e94\u7684\u6469\u65af\u5bc6\u7801 } // \u68c0\u67e5\u662f\u5426\u662f\u552f\u4e00\u7684\u6469\u65af\u5bc6\u7801\u8868\u793a if (find(result.begin(), result.end(), combination) == result.end()) { result.push_back(combination); } } return result.size(); } }; \u4ee3\u7801\u8bb2\u89e3 \u6469\u65af\u5bc6\u7801\u6620\u5c04 \uff1a\u7528\u957f\u5ea6\u4e3a 26 \u7684\u6570\u7ec4 morse_code \u6765\u5b58\u50a8\u5b57\u6bcd 'a' \u5230 'z' \u5bf9\u5e94\u7684\u6469\u65af\u5bc6\u7801\u8868\u793a\u3002 \u5355\u8bcd\u8f6c\u6362 \uff1a\u901a\u8fc7\u904d\u5386\u5355\u8bcd\u7684\u6bcf\u4e2a\u5b57\u7b26\uff0c\u6839\u636e\u5b57\u7b26\u7684 ASCII \u503c\u627e\u5230\u5bf9\u5e94\u7684\u6469\u65af\u5bc6\u7801\u5e76\u5c06\u5176\u7ec4\u5408\u8d77\u6765\u3002 \u68c0\u67e5\u552f\u4e00\u6027 \uff1a\u901a\u8fc7 find \u68c0\u67e5\u6469\u65af\u5bc6\u7801\u7ec4\u5408\u662f\u5426\u5df2\u5b58\u5728\u4e8e result \u4e2d\uff0c\u5982\u679c\u6ca1\u6709\u5219\u6dfb\u52a0\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u8fd4\u56de\u5b58\u50a8\u552f\u4e00\u6469\u65af\u5bc6\u7801\u7ec4\u5408\u7684\u5411\u91cf result \u7684\u5927\u5c0f\uff0c\u5373\u552f\u4e00\u6469\u65af\u5bc6\u7801\u7684\u6570\u91cf\u3002 2. \u8fdb\u5236\u8f6c\u6362 2.1 \u6570\u5b57\u8fdb\u5236\u6982\u8ff0 \u4e8c\u8fdb\u5236\uff08Base 2\uff09\uff1a \u4f7f\u7528\u6570\u5b57 0 \u548c 1\u3002\u4f8b\u5982\uff1a 1010 \uff08\u4e8c\u8fdb\u5236\uff09 = 10 \uff08\u5341\u8fdb\u5236\uff09\u3002 \u516b\u8fdb\u5236\uff08Base 8\uff09\uff1a \u4f7f\u7528\u6570\u5b57 0 \u5230 7\u3002\u4f8b\u5982\uff1a 12 \uff08\u516b\u8fdb\u5236\uff09 = 10 \uff08\u5341\u8fdb\u5236\uff09\u3002 \u5341\u8fdb\u5236\uff08Base 10\uff09\uff1a \u6807\u51c6\u6570\u5b57\u7cfb\u7edf\u3002\u4f8b\u5982\uff1a 10 \uff08\u5341\u8fdb\u5236\uff09\u3002 \u5341\u516d\u8fdb\u5236\uff08Base 16\uff09\uff1a \u4f7f\u7528\u6570\u5b57 0-9 \u548c\u5b57\u6bcd A-F\u3002\u4f8b\u5982\uff1a A \uff08\u5341\u516d\u8fdb\u5236\uff09= 10 \uff08\u5341\u8fdb\u5236\uff09\u3002 \u4ee5\u4e0b\u8868\u683c\u5c55\u793a\u4e86\u5341\u8fdb\u5236\u6570\u5b57\u4ece1\u523010\u7684\u4e8c\u8fdb\u5236\u3001\u516b\u8fdb\u5236\u548c\u5341\u516d\u8fdb\u5236\u8868\u793a: \u5341\u8fdb\u5236 (Decimal) \u4e8c\u8fdb\u5236 (Binary) \u516b\u8fdb\u5236 (Octal) \u5341\u516d\u8fdb\u5236 (Hexadecimal) 1 1 1 1 2 10 2 2 3 11 3 3 4 100 4 4 5 101 5 5 6 110 6 6 7 111 7 7 8 1000 10 8 9 1001 11 9 10 1010 12 A 2.2 \u5341\u8fdb\u5236\u5230\u4e8c\u8fdb\u5236\u7684\u8f6c\u6362 \u624b\u52a8\u65b9\u6cd5\uff1a\u4f7f\u7528\u77ed\u9664\u6cd5 \u6b65\u9aa41 \uff1a\u5c06\u5341\u8fdb\u5236\u6570\u9664\u4ee5 2\u3002 \u6b65\u9aa42 \uff1a\u8bb0\u5f55\u4f59\u6570\u3002 \u6b65\u9aa43 \uff1a\u7528\u5546\u7ee7\u7eed\u9664\u4ee5 2\uff0c\u76f4\u5230\u5546\u4e3a 0\u3002 \u6b65\u9aa44 \uff1a\u4e8c\u8fdb\u5236\u6570\u5373\u4e3a\u9006\u5e8f\u8bfb\u53d6\u7684\u4f59\u6570\u5e8f\u5217\u3002 \u793a\u4f8b\uff1a\u5c06 13 \u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236 13 / 2 = 6 \u4f59 1 6 / 2 = 3 \u4f59 0 3 / 2 = 1 \u4f59 1 1 / 2 = 0 \u4f59 1 \u7ed3\u679c\uff1a 13 (\u5341\u8fdb\u5236) = 1101 (\u4e8c\u8fdb\u5236) \u7528 C++ \u5b9e\u73b0\u5341\u8fdb\u5236\u5230\u4e8c\u8fdb\u5236\u7684\u8f6c\u6362 #include <iostream> #include <algorithm> // \u9700\u8981\u4f7f\u7528 reverse \u51fd\u6570 using namespace std; int main() { string ans = \"\"; // \u7528\u4e8e\u5b58\u50a8\u4e8c\u8fdb\u5236\u7ed3\u679c\u7684\u5b57\u7b26\u4e32 int num; cout << \"Enter a number: \"; cin >> num; // \u5faa\u73af\u5c06\u6570\u5b57\u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236 while (num > 0) { ans.push_back('0' + num % 2); // \u8ba1\u7b97\u5f53\u524d\u4f4d\u7684\u4e8c\u8fdb\u5236\u503c\u5e76\u6dfb\u52a0\u5230\u7ed3\u679c\u4e2d num = num / 2; // \u66f4\u65b0 num \u4e3a\u5546 } reverse(ans.begin(), ans.end()); // \u5c06\u7ed3\u679c\u53cd\u8f6c\uff0c\u56e0\u4e3a\u8ba1\u7b97\u7684\u7ed3\u679c\u662f\u9006\u5e8f\u7684 cout << \"Binary: \" << ans << endl; return 0; } \u4ee3\u7801\u89e3\u91ca\uff1a - ans.push_back('0' + num % 2); \uff1a num % 2 \u8ba1\u7b97\u5f53\u524d\u4f4d\u7684\u4e8c\u8fdb\u5236\u503c\uff0c '0' + num % 2 \u5c06\u5176\u8f6c\u6362\u4e3a\u5b57\u7b26\u5e76\u6dfb\u52a0\u5230 ans \u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u3002 - num = num / 2; \uff1a\u66f4\u65b0 num \u4e3a\u5f53\u524d\u5546\uff0c\u7ee7\u7eed\u4e0b\u4e00\u8f6e\u7684\u9664\u6cd5\u8fd0\u7b97\u3002 - reverse(ans.begin(), ans.end()); \uff1a\u53cd\u8f6c\u5b57\u7b26\u4e32 ans \uff0c\u56e0\u4e3a\u8ba1\u7b97\u5f97\u5230\u7684\u4e8c\u8fdb\u5236\u4f4d\u662f\u9006\u5e8f\u7684\u3002 2.3 \u4e8c\u8fdb\u5236\u5230\u5341\u8fdb\u5236 \u624b\u52a8\u65b9\u6cd5\uff1a \u6b65\u9aa41 \uff1a\u5c06\u6bcf\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u4e58\u4ee5 2 \u7684\u76f8\u5e94\u6b21\u65b9\uff08\u4ece\u53f3\u5f80\u5de6\uff0c\u4f4d\u7f6e\u4ece 0 \u5f00\u59cb\uff09\u3002 \u6b65\u9aa42 \uff1a\u5c06\u6240\u6709\u7ed3\u679c\u76f8\u52a0\u3002 \u793a\u4f8b\uff1a\u5c06 1101 \u8f6c\u6362\u4e3a\u5341\u8fdb\u5236 1 * 2^3 + 1 * 2^2 + 0 * 2^1 + 1 * 2^0 = 8 + 4 + 0 + 1 = 13 \u7ed3\u679c\uff1a 1101 (\u4e8c\u8fdb\u5236) = 13 (\u5341\u8fdb\u5236) \u7528 C++ \u5b9e\u73b0\u4e8c\u8fdb\u5236\u5230\u5341\u8fdb\u5236\u7684\u8f6c\u6362 #include <iostream> using namespace std; int main() { string num; int ans = 0; cout << \"Enter a number with base of 2: \"; cin >> num; // \u5faa\u73af\u904d\u5386\u6bcf\u4e2a\u4e8c\u8fdb\u5236\u4f4d for (char i : num) { ans = ans * 2 + (i - '0'); // \u5c06\u4e8c\u8fdb\u5236\u6570\u9010\u4f4d\u8f6c\u6362\u4e3a\u5341\u8fdb\u5236 } cout << \"Decimal: \" << ans << endl; return 0; } \u4ee3\u7801\u89e3\u91ca\uff1a - ans = ans * 2 + (i - '0'); \uff1a i - '0' \u5c06\u5b57\u7b26\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u6574\u6570\u503c\uff0c ans * 2 \u5c06\u524d\u9762\u8ba1\u7b97\u7684\u5341\u8fdb\u5236\u503c\u5de6\u79fb\u4e00\u4f4d\uff0c\u7136\u540e\u52a0\u4e0a\u5f53\u524d\u4f4d\u7684\u503c\u3002 - \u8fd9\u4e2a\u8fc7\u7a0b\u6a21\u62df\u4e86\u624b\u52a8\u8ba1\u7b97\u7684\u8fc7\u7a0b\uff0c\u6bcf\u6b21\u4e58\u4ee5 2 \u76f8\u5f53\u4e8e\u5728\u5341\u8fdb\u5236\u4e2d\u5c06\u4f4d\u6570\u8fdb\u4e00\u4f4d\uff0c\u7136\u540e\u52a0\u4e0a\u5f53\u524d\u7684\u4e8c\u8fdb\u5236\u4f4d\u3002 2.4 \u5341\u8fdb\u5236\u5230\u5341\u516d\u8fdb\u5236 \u624b\u52a8\u65b9\u6cd5\uff1a \u6b65\u9aa41 \uff1a\u5c06\u5341\u8fdb\u5236\u6570\u9664\u4ee5 16\u3002 \u6b65\u9aa42 \uff1a\u8bb0\u5f55\u4f59\u6570\uff0c\u5982\u679c\u4f59\u6570\u5927\u4e8e 9\uff0c\u5219\u5c06\u5176\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5341\u516d\u8fdb\u5236\u5b57\u7b26\uff08A-F\uff09\u3002 \u6b65\u9aa43 \uff1a\u7528\u5546\u7ee7\u7eed\u9664\u4ee5 16\uff0c\u76f4\u5230\u5546\u4e3a 0\u3002 \u6b65\u9aa44 \uff1a\u5341\u516d\u8fdb\u5236\u6570\u5373\u4e3a\u9006\u5e8f\u8bfb\u53d6\u7684\u4f59\u6570\u5e8f\u5217\u3002 \u793a\u4f8b\uff1a\u5c06 479 \u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236 479 / 16 = 29 \u4f59 F 29 / 16 = 1 \u4f59 D 1 / 16 = 0 \u4f59 1 \u7ed3\u679c\uff1a 479 (\u5341\u8fdb\u5236) = 1DF (\u5341\u516d\u8fdb\u5236) \u7528 C++ \u5b9e\u73b0\u5341\u8fdb\u5236\u5230\u5341\u516d\u8fdb\u5236\u7684\u8f6c\u6362 #include <iostream> #include <algorithm> // \u9700\u8981\u4f7f\u7528 reverse \u51fd\u6570 using namespace std; string dec_to_hex(int num) { string result = \"\"; // \u7528\u4e8e\u5b58\u50a8\u5341\u516d\u8fdb\u5236\u7ed3\u679c\u7684\u5b57\u7b26\u4e32 // \u5faa\u73af\u5c06\u6570\u5b57\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236 while (num != 0) { int remainder = num % 16; // \u8ba1\u7b97\u5f53\u524d\u4f4d\u7684\u5341\u516d\u8fdb\u5236\u503c // \u6839\u636e\u4f59\u6570\u5927\u5c0f\u51b3\u5b9a\u662f\u6570\u5b57\u8fd8\u662f\u5b57\u7b26 if (remainder >= 10) { result += (remainder - 10) + 'A'; // \u4f59\u6570\u5728 10-15 \u4e4b\u95f4\uff0c\u8f6c\u6362\u4e3a 'A'-'F' } else { result += remainder + '0'; // \u4f59\u6570\u5728 0-9 \u4e4b\u95f4\uff0c\u8f6c\u6362\u4e3a\u5b57\u7b26 '0'-'9' } num = num / 16; // \u66f4\u65b0 num \u4e3a\u5546 } reverse(result.begin(), result.end()); // \u5c06\u7ed3\u679c\u53cd\u8f6c\uff0c\u56e0\u4e3a\u8ba1\u7b97\u7684\u7ed3\u679c\u662f\u9006\u5e8f\u7684 return result; } int main() { int number = 479; cout << \"Decimal: \" << number << \" -> Hexadecimal: \" << dec_to_hex(number) << endl; return 0; } \u4ee3\u7801\u89e3\u91ca\uff1a - remainder = num % 16; \uff1a\u8ba1\u7b97\u5f53\u524d\u4f4d\u7684\u5341\u516d\u8fdb\u5236\u503c\u3002 - result += (remainder - 10) + 'A'; \uff1a\u5982\u679c\u4f59\u6570\u5927\u4e8e\u6216\u7b49\u4e8e10\uff0c\u5219\u5c06\u5176\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5b57\u6bcdA-F\u3002 - result += remainder + '0'; \uff1a\u5982\u679c\u4f59\u6570\u5c0f\u4e8e10\uff0c\u5219\u76f4\u63a5\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5b57\u7b260-9\u3002 - reverse(result.begin(), result.end()); \uff1a\u56e0\u4e3a\u8ba1\u7b97\u5f97\u5230\u7684\u5341\u516d\u8fdb\u5236\u4f4d\u662f\u9006\u5e8f\u7684\uff0c\u56e0\u6b64\u9700\u8981\u53cd\u8f6c\u7ed3\u679c\u5b57\u7b26\u4e32\u3002 2.5 \u4e8c\u8fdb\u5236\u5230\u5341\u516d\u8fdb\u5236 \u624b\u52a8\u65b9\u6cd5\uff1a \u4e8c\u8fdb\u5236\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236\u7684\u65b9\u6cd5\u662f\u5c06\u4e8c\u8fdb\u5236\u6570\u6bcf4\u4f4d\u5206\u4e3a\u4e00\u7ec4\uff0c\u7136\u540e\u5c06\u6bcf\u7ec4\u7684\u4e8c\u8fdb\u5236\u6570\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5341\u516d\u8fdb\u5236\u6570\u3002\u56e0\u4e3a\u5341\u516d\u8fdb\u5236\u662f\u4ee54\u4f4d\u4e8c\u8fdb\u5236\u4e3a\u57fa\u7840\u7684\uff0c\u6240\u4ee5\u8fd9\u4e2a\u8fc7\u7a0b\u975e\u5e38\u76f4\u63a5\u3002 \u6b65\u9aa4\uff1a \u4ece\u53f3\u5230\u5de6\uff0c\u5c06\u4e8c\u8fdb\u5236\u6570\u6bcf4\u4f4d\u5206\u4e3a\u4e00\u7ec4\u3002\u5982\u679c\u4e0d\u8db34\u4f4d\uff0c\u5219\u5728\u5de6\u4fa7\u8865\u96f6\u3002 \u5c06\u6bcf\u7ec4\u4e8c\u8fdb\u5236\u6570\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5341\u516d\u8fdb\u5236\u6570\u3002 \u5c06\u8f6c\u6362\u540e\u7684\u5341\u516d\u8fdb\u5236\u6570\u8fde\u63a5\u8d77\u6765\uff0c\u5f97\u5230\u6700\u7ec8\u7ed3\u679c\u3002 \u793a\u4f8b\uff1a\u5c06\u4e8c\u8fdb\u5236 110111101 \u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236 \u6b65\u9aa4\uff1a 1. \u5c06 110111101 \u5206\u4e3a 1101 \u548c 1110 \uff0c\u4e0d\u8db34\u4f4d\u7684\u5de6\u4fa7\u8865\u96f6\uff1a 0110 1110 1101 2. \u5c06\u6bcf\u7ec4\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236\uff1a - 0110 \u8f6c\u6362\u4e3a 6 - 1110 \u8f6c\u6362\u4e3a E - 1101 \u8f6c\u6362\u4e3a D 3. \u5c06\u8fd9\u4e9b\u8f6c\u6362\u7ed3\u679c\u8fde\u63a5\u8d77\u6765\uff1a 6ED \u7ed3\u679c\uff1a 110111101 (\u4e8c\u8fdb\u5236) = 6ED (\u5341\u516d\u8fdb\u5236) \u4ee3\u7801\u5b9e\u73b0\u90e8\u5206\u6211\u4eec\u73b0\u5728\u5148\u4e0d\u9700\u8981\u6df1\u5165\u4e86\u89e3\uff0c\u56e0\u4e3a\u6d89\u53ca\u5230\u5176\u4ed6\u7684\u4e00\u4e9b\u51fd\u6570\u548c\u5e93\u7684\u4f7f\u7528\u3002\u5f53\u524d\u6211\u4eec\u4e3b\u8981\u4e13\u6ce8\u4e8e\u7406\u89e3\u624b\u52a8\u65b9\u6cd5\uff0c\u8fd9\u6837\u53ef\u4ee5\u5e2e\u52a9\u66f4\u597d\u5730\u638c\u63e1\u8fdb\u5236\u8f6c\u6362\u7684\u57fa\u7840\u6982\u5ff5\u3002 2.6 \u8fdb\u5236 \u4f8b\u9898\u8bb2\u89e3 2.6.1 LC504. \u4e03\u8fdb\u5236\u6570 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570 num \uff0c\u8fd4\u56de\u5b83\u7684 7 \u8fdb\u5236\u8868\u793a\u5b57\u7b26\u4e32\u3002 \u601d\u8def\u5206\u6790 \u5c06\u4e00\u4e2a\u6574\u6570\u8f6c\u6362\u4e3a7\u8fdb\u5236\u672c\u8d28\u4e0a\u548c\u8f6c\u6362\u4e3a\u4efb\u4f55\u5176\u4ed6\u8fdb\u5236\u7684\u601d\u8def\u4e00\u81f4\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0d\u65ad\u5730\u53d6\u6a21\uff08 % \uff09\u548c\u9664\u6cd5\uff08 / \uff09\u64cd\u4f5c\u6765\u9010\u4f4d\u83b7\u53d67\u8fdb\u5236\u7684\u5404\u4f4d\u6570\u5b57\uff0c\u6700\u540e\u5c06\u5176\u53cd\u8f6c\u5373\u53ef\u5f97\u5230\u6700\u7ec8\u7684\u7ed3\u679c\u3002 \u5904\u7406\u8d1f\u6570 \uff1a \u5982\u679c\u8f93\u5165 num \u662f\u8d1f\u6570\uff0c\u5148\u53d6\u5b83\u7684\u7edd\u5bf9\u503c\u8fdb\u884c\u8ba1\u7b97\uff0c\u6700\u540e\u5728\u7ed3\u679c\u524d\u6dfb\u52a0\u8d1f\u53f7\u3002 \u5904\u7406 0 \u7684\u7279\u6b8a\u60c5\u51b5 \uff1a \u5982\u679c num == 0 \uff0c\u76f4\u63a5\u8fd4\u56de \"0\" \u3002 \u53d6\u6a21\u6cd5\u6784\u5efa7\u8fdb\u5236 \uff1a \u6211\u4eec\u4e0d\u65ad\u5c06 num \u9664\u4ee5 7\uff0c\u53d6\u51fa\u4f59\u6570\u4f5c\u4e3a\u5f53\u524d\u4f4d\u76847\u8fdb\u5236\u6570\u5b57\uff0c\u5c06\u5176\u52a0\u5165\u5230\u7ed3\u679c\u5b57\u7b26\u4e32\u4e2d\u3002\u7136\u540e\u5c06 num \u66f4\u65b0\u4e3a num / 7 \uff0c\u76f4\u5230 num \u53d8\u4e3a 0 \u4e3a\u6b62\u3002 \u53cd\u8f6c\u5b57\u7b26\u4e32 \uff1a \u56e0\u4e3a\u6211\u4eec\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\u8ba1\u7b97\uff0c\u6240\u4ee5\u6700\u7ec8\u9700\u8981\u5c06\u5b57\u7b26\u4e32\u53cd\u8f6c\u3002 \u53c2\u8003\u89e3\u7b54 class Solution { public: string ans = \"\"; string convertToBase7(int num) { int initial_num = num; // \u4fdd\u5b58\u521d\u59cb\u503c // \u5982\u679c\u662f\u8d1f\u6570\uff0c\u53d6\u7edd\u5bf9\u503c\u8fdb\u884c\u8ba1\u7b97 if(num < 0) { num = -num; } // \u7279\u6b8a\u60c5\u51b5\uff1anum \u4e3a 0\uff0c\u76f4\u63a5\u8fd4\u56de \"0\" if(num == 0) { return \"0\"; } // \u6784\u5efa 7 \u8fdb\u5236 while(num > 0) { ans.push_back(num % 7 + '0'); // \u5c06\u6bcf\u4e00\u4f4d\u7684 7 \u8fdb\u5236\u6570\u5b57\u52a0\u5165\u5230\u5b57\u7b26\u4e32 num /= 7; // \u9664\u4ee5 7\uff0c\u8fdb\u884c\u4e0b\u4e00\u4f4d\u7684\u8ba1\u7b97 } // \u5982\u679c\u521d\u59cb\u503c\u662f\u8d1f\u6570\uff0c\u6dfb\u52a0\u8d1f\u53f7 if(initial_num < 0) { ans.push_back('-'); } // \u6700\u540e\u53cd\u8f6c\u5b57\u7b26\u4e32 reverse(ans.begin(), ans.end()); return ans; } }; \u4ee3\u7801\u8bb2\u89e3 initial_num = num \uff1a\u4fdd\u7559\u539f\u59cb\u7684 num \u503c\uff0c\u7528\u4e8e\u540e\u7eed\u5224\u65ad\u662f\u5426\u9700\u8981\u6dfb\u52a0\u8d1f\u53f7\u3002 \u5904\u7406\u8d1f\u6570 \uff1a\u5982\u679c num \u4e3a\u8d1f\u6570\uff0c\u5148\u53d6\u7edd\u5bf9\u503c\uff0c\u8ba1\u7b97\u5b8c\u540e\u518d\u5728\u7ed3\u679c\u524d\u52a0\u4e0a '-' \u3002 \u5904\u74060\u7684\u60c5\u51b5 \uff1a\u5982\u679c num \u4e3a 0\uff0c\u76f4\u63a5\u8fd4\u56de \"0\" \u3002 \u53d6\u6a21\u548c\u9664\u6cd5 \uff1a\u901a\u8fc7 num % 7 \u83b7\u53d6\u5f53\u524d\u4f4d\u76847\u8fdb\u5236\u6570\u5b57\uff0c\u5e76\u5c06\u5176\u52a0\u5165\u5230\u7ed3\u679c\u5b57\u7b26\u4e32\u4e2d\uff1b\u7136\u540e\u901a\u8fc7 num /= 7 \u8fdb\u884c\u4e0b\u4e00\u4f4d\u7684\u8ba1\u7b97\u3002 \u53cd\u8f6c\u5b57\u7b26\u4e32 \uff1a\u7531\u4e8e\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\u6784\u5efa\u5b57\u7b26\u4e32\uff0c\u6700\u540e\u9700\u8981\u53cd\u8f6c\u5f97\u5230\u6b63\u786e\u7684\u987a\u5e8f\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u7ecf\u8fc7\u6240\u6709\u5904\u7406\u540e\uff0c\u8fd4\u56de\u7ed3\u679c\u5b57\u7b26\u4e32\u3002 2.7 \u8fdb\u5236 \u4e3e\u4e00\u53cd\u4e09 2.7.1 LC168. Excel\u8868\u5217\u540d\u79f0 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u8fd4\u56de\u5b83\u5728 Excel \u8868\u4e2d\u5bf9\u5e94\u7684\u5217\u6807\u9898\u3002Excel \u5217\u662f\u4ee5 A-Z \u7684\u65b9\u5f0f\u6392\u5217\u7684\uff0c\u4f8b\u5982\uff1a 1 -> A 2 -> B 3 -> C ... 26 -> Z 27 -> AA 28 -> AB ... \u601d\u8def\u5206\u6790 \u8fd9\u662f\u4e00\u4e2a\u5178\u578b\u7684\u8fdb\u5236\u8f6c\u6362\u95ee\u9898\u3002\u9700\u8981\u5c06\u6570\u5b57\u8f6c\u6362\u6210\u4ee5 A-Z \u4e3a\u57fa\u7840\u768426\u8fdb\u5236\u8868\u793a\u6cd5\uff0c\u7c7b\u4f3c\u4e8e\u5341\u8fdb\u5236\u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236\u6216\u5341\u516d\u8fdb\u5236\u3002\u7531\u4e8e Excel \u5217\u7f16\u53f7\u4ece 1 \u5f00\u59cb\uff0c\u800c\u4e0d\u662f\u4ece 0 \u5f00\u59cb\uff0c\u6240\u4ee5\u5728\u8f6c\u6362\u65f6\u9700\u8981\u4e00\u4e9b\u989d\u5916\u7684\u8c03\u6574\u3002 \u4ece 1 \u5f00\u59cb\u768426\u8fdb\u5236\uff1a \u6211\u4eec\u53ef\u4ee5\u5c06 A-Z \u5bf9\u5e94\u7684\u6570\u5b57\u770b\u4f5c\u662f\u4e00\u4e2a\u57fa\u4e8e26\u7684\u8fdb\u5236\u7cfb\u7edf\u3002 \u4f46\u4e0e\u5e38\u89c1\u8fdb\u5236\u4e0d\u540c\u7684\u662f\uff0cExcel \u5217\u7f16\u53f7\u662f\u4ece 1 \u5f00\u59cb\u7684\uff0c\u800c\u4e0d\u662f\u4ece 0 \u5f00\u59cb\uff0c\u56e0\u6b64\u5728\u6bcf\u6b21\u53d6\u4f59\u65f6\u9700\u8981\u505a\u4e00\u4e9b\u8c03\u6574\uff1a\u6bcf\u6b21\u5c06 columnNumber \u51cf\u53bb 1\u3002 \u5904\u7406\u903b\u8f91\uff1a \u4e0d\u65ad\u5c06 columnNumber \u51cf\u53bb1\uff0c\u5e76\u8ba1\u7b97\u51fa\u5bf9\u5e94\u7684\u5b57\u6bcd\u3002 \u6bcf\u6b21\u901a\u8fc7 columnNumber % 26 \u5f97\u5230\u4e00\u4e2a\u5b57\u6bcd\uff0c\u5c06\u5176\u52a0\u5165\u7ed3\u679c\u5b57\u7b26\u4e32\u4e2d\u3002 \u5c06 columnNumber \u9664\u4ee526\uff0c\u7ee7\u7eed\u5904\u7406\u4e0b\u4e00\u4e2a\u6570\u5b57\uff0c\u76f4\u5230 columnNumber \u4e3a 0\u3002 \u53cd\u8f6c\u5b57\u7b26\u4e32\uff1a \u7531\u4e8e\u6211\u4eec\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\u6784\u9020\u5b57\u7b26\u4e32\uff0c\u56e0\u6b64\u6700\u540e\u9700\u8981\u5c06\u7ed3\u679c\u5b57\u7b26\u4e32\u53cd\u8f6c\u3002 \u53c2\u8003\u89e3\u7b54 class Solution { public: string convertToTitle(int columnNumber) { string result = \"\"; // \u5904\u7406\u8fdb\u5236\u8f6c\u6362 while(columnNumber > 0) { // \u56e0\u4e3a\u662f\u4ece 1 \u5f00\u59cb\u7684\u5217\uff0c\u6240\u4ee5\u9700\u8981\u5148\u51cf1 columnNumber -= 1; // \u8ba1\u7b97\u5f53\u524d\u4f4d\u5bf9\u5e94\u7684\u5b57\u6bcd int temp = columnNumber % 26; result += temp + 'A'; // \u51cf\u5c11\u5217\u53f7 columnNumber /= 26; } // \u7531\u4e8e\u6211\u4eec\u4ece\u4f4e\u4f4d\u5f00\u59cb\u8ba1\u7b97\uff0c\u56e0\u6b64\u9700\u8981\u53cd\u8f6c\u7ed3\u679c int start = 0; int end = result.length() - 1; while (start < end) { swap(result[start], result[end]); start++; end--; } return result; } }; \u4ee3\u7801\u8bb2\u89e3 columnNumber -= 1 \uff1a columnNumber \u9700\u8981\u51cf 1 \u662f\u56e0\u4e3a Excel \u5217\u53f7\u662f\u4ece 1 \u5f00\u59cb\u7684\uff0c\u800c 26 \u8fdb\u5236\u7684\u5b57\u6bcd\u8868\u793a\u7cfb\u7edf\u662f\u4ece 0 \u5f00\u59cb\u7684\u3002\u51cf 1 \u7684\u64cd\u4f5c\u5c06\u5217\u53f7\u8f6c\u6362\u4e3a 0 \u57fa\u7840\u7684\u7cfb\u7edf\uff0c\u4f7f\u5f97\u6570\u5b57 1 \u5bf9\u5e94\u5b57\u6bcd A \uff0c\u6570\u5b57 26 \u5bf9\u5e94\u5b57\u6bcd Z \uff0c\u4ece\u800c\u6b63\u786e\u5730\u8fdb\u884c\u8fdb\u5236\u8f6c\u6362\u3002 \u6bd4\u5982\u5f53 columnNumber = 1 \u65f6\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u51cf 1\uff0c\u6309\u7167\u8fdb\u5236\u8f6c\u6362\u8fc7\u7a0b\u4f1a\u51fa\u9519\uff1a \u4e0d\u51cf 1 \u7684\u60c5\u51b5\u4e0b\uff1a - columnNumber = 1 - \u76f4\u63a5\u8ba1\u7b97 1 % 26 = 1 \uff0c\u7136\u540e\u52a0\u4e0a 'A' \u5f97\u5230 1 + 'A' = 'B' \u3002\u4f46\u662f\u6211\u4eec\u5e0c\u671b columnNumber = 1 \u5bf9\u5e94\u7684\u662f A \u800c\u4e0d\u662f B \uff0c\u6240\u4ee5\u8fd9\u663e\u7136\u662f\u9519\u8bef\u7684\u3002 \u51cf 1 \u7684\u60c5\u51b5\u4e0b\uff1a - columnNumber = 1 - 1 = 0 - \u8ba1\u7b97 0 % 26 = 0 \uff0c\u7136\u540e\u52a0\u4e0a 'A' \u5f97\u5230 0 + 'A' = 'A' \u3002 - \u56e0\u6b64\uff0c columnNumber = 1 \u6b63\u786e\u5bf9\u5e94\u5230\u5b57\u6bcd A \u3002 columnNumber % 26 \uff1a\u8ba1\u7b97\u5f53\u524d\u7684\u5217\u5bf9\u5e94\u7684\u5b57\u6bcd\u7f16\u53f7\uff080 \u5230 25 \u5bf9\u5e94 A \u5230 Z \uff09\u3002 result += temp + 'A' \uff1a\u5c06\u7f16\u53f7\u8f6c\u6362\u4e3a\u5b57\u6bcd\u5e76\u6dfb\u52a0\u5230\u7ed3\u679c\u5b57\u7b26\u4e32\u4e2d\u3002 columnNumber /= 26 \uff1a\u5c06\u5217\u53f7\u9664\u4ee5 26\uff0c\u5904\u7406\u4e0b\u4e00\u4f4d\u3002 \u5b57\u7b26\u4e32\u53cd\u8f6c \uff1a\u56e0\u4e3a\u5b57\u6bcd\u662f\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\u8ba1\u7b97\u7684\uff0c\u56e0\u6b64\u9700\u8981\u5728\u6700\u540e\u53cd\u8f6c\u5b57\u7b26\u4e32\u3002 2.7.2 LC728. \u81ea\u9664\u6570 \u95ee\u9898\u63cf\u8ff0 \u81ea\u9664\u6570\u662f\u6307\u4e00\u4e2a\u6574\u6570\uff0c\u5b83\u7684\u6bcf\u4e00\u4f4d\u6570\u5b57\u90fd\u80fd\u6574\u9664\u8fd9\u4e2a\u6570\u672c\u8eab\u3002\u7ed9\u5b9a\u4e00\u4e2a\u8303\u56f4 [left, right] \uff0c\u8fd4\u56de\u8be5\u8303\u56f4\u5185\u6240\u6709\u7684\u81ea\u9664\u6570\u3002 \u4e00\u4e2a\u81ea\u9664\u6570\u5fc5\u987b\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a 1. \u8be5\u6570\u4e0d\u80fd\u5305\u542b\u6570\u5b57 0 \u3002 2. \u8be5\u6570\u80fd\u88ab\u5b83\u7684\u6bcf\u4e00\u4f4d\u6570\u5b57\u6574\u9664\u3002 \u601d\u8def\u5206\u6790 \u9010\u4f4d\u68c0\u67e5 \uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u6570\u5b57\uff0c\u5c06\u5176\u6bcf\u4e00\u4f4d\u63d0\u53d6\u51fa\u6765\uff0c\u68c0\u67e5\u8be5\u4f4d\u662f\u5426\u4e3a 0\uff0c\u5e76\u4e14\u80fd\u5426\u6574\u9664\u539f\u6570\u5b57\u3002 \u904d\u5386\u8303\u56f4 \uff1a\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u8303\u56f4 [left, right] \uff0c\u9010\u4e00\u68c0\u67e5\u6bcf\u4e2a\u6570\u5b57\u662f\u5426\u662f\u81ea\u9664\u6570\uff0c\u5982\u679c\u662f\uff0c\u5c06\u5176\u52a0\u5165\u7ed3\u679c\u5217\u8868\u4e2d\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u8fd4\u56de\u5728 [left, right] \u8303\u56f4\u5185\u6240\u6709\u81ea\u9664\u6570\u7684\u5217\u8868\u3002 \u53c2\u8003\u89e3\u7b54 class Solution { public: // \u68c0\u67e5\u4e00\u4e2a\u6570\u5b57\u662f\u5426\u662f\u81ea\u9664\u6570 bool check_selfDivid(int num) { int num_original = num; while (num != 0) { int digit = num % 10; // \u63d0\u53d6\u5f53\u524d\u6570\u5b57\u7684\u6700\u540e\u4e00\u4f4d if (digit == 0) { return false; // \u5982\u679c\u67d0\u4e00\u4f4d\u662f 0\uff0c\u5219\u8be5\u6570\u5b57\u4e0d\u53ef\u80fd\u662f\u81ea\u9664\u6570 } if (num_original % digit != 0) { return false; // \u5982\u679c\u67d0\u4e00\u4f4d\u4e0d\u80fd\u6574\u9664\u539f\u6570\u5b57\uff0c\u5219\u4e0d\u662f\u81ea\u9664\u6570 } num = num / 10; // \u53bb\u6389\u6700\u540e\u4e00\u4f4d } return true; // \u6240\u6709\u4f4d\u90fd\u80fd\u6574\u9664\uff0c\u5219\u8be5\u6570\u5b57\u662f\u81ea\u9664\u6570 } vector<int> selfDividingNumbers(int left, int right) { vector<int> result{}; for (int i = left; i <= right; i++) { if (check_selfDivid(i)) { // \u5982\u679c\u662f\u81ea\u9664\u6570\uff0c\u52a0\u5165\u7ed3\u679c result.push_back(i); } } return result; } }; \u4ee3\u7801\u8bb2\u89e3 check_selfDivid \u51fd\u6570 \uff1a\u8fd9\u4e2a\u51fd\u6570\u7528\u4e8e\u68c0\u67e5\u4e00\u4e2a\u6570\u662f\u5426\u662f\u81ea\u9664\u6570\u3002\u9010\u4f4d\u63d0\u53d6\u6570\u5b57\uff0c\u5e76\u68c0\u67e5\u6bcf\u4f4d\u662f\u5426\u80fd\u6574\u9664\u539f\u6570\u5b57\u3002\u5982\u679c\u6709\u4efb\u4f55\u4e00\u4f4d\u4e0d\u80fd\u6574\u9664\u6216\u8005\u5305\u542b 0\uff0c\u5219\u8fd4\u56de false \u3002 \u904d\u5386\u8303\u56f4 \uff1a\u5728 selfDividingNumbers \u51fd\u6570\u4e2d\uff0c\u904d\u5386\u8303\u56f4 [left, right] \uff0c\u4f7f\u7528 check_selfDivid \u51fd\u6570\u5224\u65ad\u6bcf\u4e2a\u6570\u662f\u5426\u662f\u81ea\u9664\u6570\uff0c\u5982\u679c\u662f\u5219\u5c06\u5176\u52a0\u5165\u7ed3\u679c\u5217\u8868\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u6700\u7ec8\u8fd4\u56de [left, right] \u8303\u56f4\u5185\u6240\u6709\u81ea\u9664\u6570\u7684\u5217\u8868\u3002 2.7.3 LC693. \u4ea4\u66ff\u4f4d\u4e8c\u8fdb\u5236\u6570 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570 n \uff0c\u68c0\u67e5\u5176\u4e8c\u8fdb\u5236\u8868\u793a\u662f\u5426\u4e3a\u4ea4\u66ff\u4f4d\u4e8c\u8fdb\u5236\u6570\uff0c\u4ea4\u66ff\u4f4d\u4e8c\u8fdb\u5236\u6570\u7684\u5b9a\u4e49\u662f\u5176\u76f8\u90bb\u7684\u4e24\u4e2a\u4f4d\u59cb\u7ec8\u4e0d\u540c\uff0c\u5373\u4e8c\u8fdb\u5236\u4e2d 0 \u548c 1 \u4ea4\u66ff\u51fa\u73b0\u3002 \u601d\u8def\u5206\u6790 \u9010\u4f4d\u68c0\u67e5 \uff1a\u901a\u8fc7\u4e0d\u65ad\u5c06 n \u53f3\u79fb\uff0c\u5e76\u63d0\u53d6\u5176\u5f53\u524d\u7684\u6700\u540e\u4e00\u4f4d\uff0c\u68c0\u67e5\u662f\u5426\u76f8\u90bb\u7684\u4e24\u4f4d\u76f8\u540c\u3002 \u7ec8\u6b62\u6761\u4ef6 \uff1a\u5f53\u67d0\u4e00\u4f4d\u548c\u5176\u76f8\u90bb\u7684\u4e0a\u4e00\u4f4d\u76f8\u540c\u65f6\uff0c\u76f4\u63a5\u8fd4\u56de false \u3002 \u5168\u90e8\u68c0\u67e5\u901a\u8fc7 \uff1a\u5982\u679c\u6240\u6709\u76f8\u90bb\u7684\u4f4d\u90fd\u4e0d\u540c\uff0c\u5219\u8fd4\u56de true \u3002 \u53c2\u8003\u89e3\u7b54 class Solution { public: bool hasAlternatingBits(int n) { int next; int now; while(n > 0) { now = n % 2; // \u63d0\u53d6\u5f53\u524d\u4f4d n = n / 2; // \u53f3\u79fb\uff0c\u53bb\u6389\u5f53\u524d\u4f4d next = n % 2; // \u63d0\u53d6\u4e0b\u4e00\u4f4d if(next == now) { return false; // \u5982\u679c\u76f8\u90bb\u7684\u4e24\u4f4d\u76f8\u540c\uff0c\u8fd4\u56de false } } return true; // \u5168\u90e8\u4f4d\u90fd\u4ea4\u66ff\uff0c\u8fd4\u56de true } }; \u4ee3\u7801\u8bb2\u89e3 now = n % 2; \uff1a\u63d0\u53d6\u5f53\u524d\u6700\u4f4e\u4f4d\u3002 n = n / 2; \uff1a\u53f3\u79fb n \uff0c\u53bb\u6389\u5df2\u7ecf\u68c0\u67e5\u7684\u6700\u4f4e\u4f4d\u3002 next = n % 2; \uff1a\u63d0\u53d6\u53f3\u79fb\u540e\u7684\u4e0b\u4e00\u4f4d\u3002 \u76f8\u90bb\u4f4d\u6bd4\u8f83 \uff1a\u5982\u679c next \u548c now \u76f8\u7b49\uff0c\u5219\u8bf4\u660e\u76f8\u90bb\u7684\u4e24\u4f4d\u76f8\u540c\uff0c\u8fd4\u56de false \u3002 \u68c0\u67e5\u901a\u8fc7 \uff1a\u5982\u679c\u6240\u6709\u4f4d\u90fd\u4e0d\u540c\uff0c\u8fd4\u56de true \uff0c\u8868\u793a n \u662f\u4ea4\u66ff\u4f4d\u4e8c\u8fdb\u5236\u6570\u3002 3. \u8bfe\u540e\u7ec3\u4e60 ASCII \u76f8\u5173\u95ee\u9898 \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC405 \u6570\u5b57\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236\u6570 \u5c06\u4e00\u4e2a\u6574\u6570\u8f6c\u6362\u4e3a\u5176 16 \u8fdb\u5236\u8868\u793a\u3002 LC806 \u5199\u5b57\u7b26\u4e32\u9700\u8981\u7684\u884c\u6570 \u7ed9\u5b9a\u82e5\u5e72\u884c\u5b57\u7b26\u4e32\uff0c\u8ba1\u7b97\u5199\u5165\u6240\u9700\u7684\u884c\u6570\u3002 LC2309 \u95f4\u8ddd\u5927\u5c0f\u5199\u7684\u6700\u597d\u82f1\u6587\u5b57\u6bcd \u627e\u5230\u5305\u542b\u5927\u5199\u548c\u5c0f\u5199\u5b57\u6bcd\u7684\u6700\u5927\u82f1\u6587\u5b57\u6bcd\u3002 LC383 \u8d4e\u91d1\u4fe1 \u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u662f\u5426\u80fd\u7531\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u6784\u6210\u3002 LC389 \u627e\u4e0d\u540c \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u627e\u51fa\u4e00\u4e2a\u5728\u5176\u4e2d\u591a\u51fa\u7684\u5b57\u7b26\u3002 \u8fdb\u5236\u8f6c\u6362\u76f8\u5173\u95ee\u9898 \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC868 \u4e8c\u8fdb\u5236\u95f4\u8ddd \u627e\u5230\u4e8c\u8fdb\u5236\u6570\u4e2d\u6700\u5927\u7684 0 \u548c 1 \u95f4\u7684\u8ddd\u79bb\u3002 LC1317 \u5c06\u6574\u6570\u8f6c\u6362\u4e3a\u4e24\u4e2a\u65e0\u96f6\u6574\u6570\u7684\u548c \u5c06\u4e00\u4e2a\u6574\u6570\u8f6c\u6362\u4e3a\u4e24\u4e2a\u975e\u96f6\u6574\u6570\u4e4b\u548c\u3002 LC1281 \u6574\u6570\u7684\u5404\u4f4d\u79ef\u548c\u4e4b\u5dee \u8fd4\u56de\u4e00\u4e2a\u6574\u6570\u5404\u4f4d\u6570\u5b57\u4e58\u79ef\u4e0e\u548c\u7684\u5dee\u503c\u3002 LC67 \u4e8c\u8fdb\u5236\u6c42\u548c \u7ed9\u5b9a\u4e24\u4e2a\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\u5b83\u4eec\u7684\u548c\uff08\u4ee5\u4e8c\u8fdb\u5236\u8868\u793a\uff09\u3002","title":"Lesson 7. Ascii \u8f6c\u6362\u4e0e\u8fdb\u5236\u8f6c\u6362"},{"location":"lesson7/Lesson7%20C%2B%2B/#lesson-7-ascii","text":"","title":"Lesson 7. Ascii \u8f6c\u6362\u4e0e\u8fdb\u5236\u8f6c\u6362"},{"location":"lesson7/Lesson7%20C%2B%2B/#_1","text":"\u7406\u89e3 ASCII 1.1 \u4ec0\u4e48\u662f ASCII 1.2 ASCII \u7684\u5e94\u7528 1.3 ASCII \u4f8b\u9898\u8bb2\u89e3 1.3.1 LC1309 - \u89e3\u7801\u5b57\u6bcd\u5230\u6574\u6570\u6620\u5c04 1.4 ASCII \u4e3e\u4e00\u53cd\u4e09 1.4.1 LC387 - \u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u552f\u4e00\u5b57\u7b26 1.4.2 LC171 - Excel \u8868\u5217\u5e8f\u53f7 1.4.3 LC804 - \u552f\u4e00\u6469\u65af\u5bc6\u7801\u8bcd \u8fdb\u5236\u8f6c\u6362 2.1 \u6570\u5b57\u8fdb\u5236\u6982\u8ff0 2.2 \u5341\u8fdb\u5236\u5230\u4e8c\u8fdb\u5236\u7684\u8f6c\u6362 2.3 \u4e8c\u8fdb\u5236\u5230\u5341\u8fdb\u5236\u7684\u8f6c\u6362 2.4 \u5341\u8fdb\u5236\u5230\u5341\u516d\u8fdb\u5236\u7684\u8f6c\u6362 2.5 \u4e8c\u8fdb\u5236\u5230\u5341\u516d\u8fdb\u5236\u7684\u8f6c\u6362 2.6 \u8fdb\u5236 \u4f8b\u9898\u8bb2\u89e3 2.6.1 LC504 - \u4e03\u8fdb\u5236\u6570 2.7 \u8fdb\u5236 \u4e3e\u4e00\u53cd\u4e09 2.7.1 LC168 - Excel \u8868\u5217\u540d\u79f0 2.7.2 LC728 - \u81ea\u9664\u6570 2.7.3 LC693 - \u4ea4\u66ff\u4f4d\u4e8c\u8fdb\u5236\u6570 \u8bfe\u540e\u7ec3\u4e60 \u5728\u672c\u8bfe\u4e2d\uff0c\u6211\u4eec\u5c06\u63a2\u8ba8\u5b57\u7b26\u5982\u4f55\u901a\u8fc7 ASCII \u503c\u5b58\u50a8\u548c\u5904\u7406\uff0c\u5e76\u5b66\u4e60\u5982\u4f55\u5728\u4e0d\u540c\u7684\u8fdb\u5236\uff08\u5982\u4e8c\u8fdb\u5236\u3001\u516b\u8fdb\u5236\u3001\u5341\u8fdb\u5236\u548c\u5341\u516d\u8fdb\u5236\uff09\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\u3002","title":"\u76ee\u5f55"},{"location":"lesson7/Lesson7%20C%2B%2B/#1-ascii","text":"","title":"1. \u7406\u89e3 ASCII"},{"location":"lesson7/Lesson7%20C%2B%2B/#11-ascii","text":"ASCII\uff08American Standard Code for Information Interchange\uff0c\u7f8e\u56fd\u4fe1\u606f\u4ea4\u6362\u6807\u51c6\u4ee3\u7801\uff09\u662f\u4e00\u79cd\u5b57\u7b26\u7f16\u7801\u6807\u51c6\uff0c\u5b83\u4f7f\u7528\u6570\u503c\u6765\u8868\u793a\u5b57\u7b26\u3002\u6bcf\u4e2a\u5b57\u7b26\uff08\u5982\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u7b26\u53f7\u7b49\uff09\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u7684 ASCII \u4ee3\u7801\uff0c\u901a\u5e38\u8303\u56f4\u4ece 0 \u5230 127\u3002 \u8fd9\u4e9b\u503c\u53ef\u4ee5\u7528\u4e8e\u5b57\u7b26\u4e0e\u6570\u5b57\u4e4b\u95f4\u7684\u8f6c\u6362\u3002\u4f8b\u5982\uff0c\u5c06\u5b57\u7b26 '0' \u5230 '9' \u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u6574\u6570\uff0c\u6216\u53cd\u5411\u64cd\u4f5c\u3002","title":"1.1 \u4ec0\u4e48\u662f ASCII\uff1f"},{"location":"lesson7/Lesson7%20C%2B%2B/#ascii","text":"\u5b57\u7b26 ASCII \u503c \u4e8c\u8fdb\u5236 \u5341\u516d\u8fdb\u5236 'A' 65 01000001 0x41 'a' 97 01100001 0x61 '0' 48 00110000 0x30 ' '\uff08\u7a7a\u683c\uff09 32 00100000 0x20 \u5b8c\u6574ASCII\u8868\u683c\uff1ahttps://www.ascii-code.com/","title":"\u793a\u4f8b ASCII \u8868"},{"location":"lesson7/Lesson7%20C%2B%2B/#12-ascii","text":"\u5728 C++ \u4e2d\uff0c\u6bcf\u4e2a\u5b57\u7b26\u90fd\u4ee5\u5176\u5bf9\u5e94\u7684 ASCII \u503c\u5f62\u5f0f\u5b58\u50a8\u4e3a\u6574\u6570\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5c06\u5b57\u7b26\u89c6\u4e3a\u6574\u6570\u6765\u8f7b\u677e\u5730\u64cd\u4f5c\u5b83\u4eec\u3002 \u901a\u8fc7ASCII\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u5b57\u7b26\u8fdb\u884c\u52a0\u51cf\u8fd0\u7b97\uff0c\u751a\u81f3\u662f\u8f6c\u6362\u3002","title":"1.2 ASCII \u7684\u5e94\u7528"},{"location":"lesson7/Lesson7%20C%2B%2B/#121-0-0","text":"","title":"1.2.1 \u4f7f\u7528 +'0' \u548c -'0'\u8fdb\u884c\u8f6c\u6362"},{"location":"lesson7/Lesson7%20C%2B%2B/#-0","text":"\u901a\u8fc7\u5c06\u5b57\u7b26\u51cf\u53bb '0' \uff0c\u53ef\u4ee5\u5f97\u5230\u5bf9\u5e94\u7684\u6574\u6570\u503c\u3002\u6bd4\u5982 '3' - '0' \u7684\u7ed3\u679c\u662f\u6574\u6570 3 \u3002 \u793a\u4f8b\uff1a\u5b57\u7b26\u5230\u6574\u6570\u7684\u8f6c\u6362 #include <iostream> using namespace std; int main() { char digit = '5'; // '5' \u7684 ASCII \u503c\u662f 53 int num = digit - '0'; // '5' - '0' = 5 cout << \"\u5b57\u7b26 \" << digit << \" \u8f6c\u6362\u4e3a\u6574\u6570\u662f \" << num << endl; return 0; } \u8f93\u51fa: \u5b57\u7b26 5 \u8f6c\u6362\u4e3a\u6574\u6570\u662f 5","title":"-'0'\uff1a\u5b57\u7b26\u5230\u6574\u6570\u7684\u8f6c\u6362"},{"location":"lesson7/Lesson7%20C%2B%2B/#0","text":"\u901a\u8fc7\u5c06\u6574\u6570\u52a0\u4e0a '0' \uff0c\u53ef\u4ee5\u5f97\u5230\u5bf9\u5e94\u7684\u5b57\u7b26\u3002\u6bd4\u5982 5 + '0' \u7684\u7ed3\u679c\u662f\u5b57\u7b26 '5' \u3002 \u793a\u4f8b\uff1a\u6574\u6570\u5230\u5b57\u7b26\u7684\u8f6c\u6362 #include <iostream> using namespace std; int main() { int num = 7; char digit = num + '0'; // 7 + '0' = '7' cout << \"\u6574\u6570 \" << num << \" \u8f6c\u6362\u4e3a\u5b57\u7b26\u662f \" << digit << endl; return 0; } \u8f93\u51fa\uff1a \u6574\u6570 7 \u8f6c\u6362\u4e3a\u5b57\u7b26\u662f 7","title":"+'0'\uff1a\u6574\u6570\u5230\u5b57\u7b26\u7684\u8f6c\u6362"},{"location":"lesson7/Lesson7%20C%2B%2B/#122-a-a","text":"\u901a\u8fc7\u5728\u5b57\u7b26\u4e0a\u52a0\u4e0a\u6216\u51cf\u53bb\u5b57\u7b26 'A' \uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5b57\u7b26\u4e0e\u5b57\u6bcd\u8868\u7684\u4f4d\u7f6e\u5173\u8054\u8d77\u6765\u3002\u4f8b\u5982\uff0c\u5c06\u5b57\u7b26 'C' \u51cf\u53bb 'A' \u53ef\u4ee5\u5f97\u5230 'C' \u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\uff08\u4ece0\u5f00\u59cb\u8ba1\u6570\uff09\u3002\u8fd9\u6837\u5bf9\u4e8e\u5b9e\u73b0\u7b80\u5355\u7684\u5b57\u6bcd\u7f16\u7801\u6216\u89e3\u7801\u975e\u5e38\u6709\u7528\u3002","title":"1.2.2 \u4f7f\u7528 +'A' \u548c -'A'\u8fdb\u884c\u8f6c\u6362"},{"location":"lesson7/Lesson7%20C%2B%2B/#-a","text":"\u901a\u8fc7\u5c06\u5b57\u7b26\u51cf\u53bb 'A' \uff0c\u53ef\u4ee5\u5f97\u5230\u5b57\u7b26\u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\uff08\u4ece0\u5f00\u59cb\uff09\u3002\u6bd4\u5982 'C' - 'A' \u7684\u7ed3\u679c\u662f 2 \u3002 \u793a\u4f8b\uff1a\u5b57\u7b26\u5230\u5b57\u6bcd\u8868\u4f4d\u7f6e\u7684\u8f6c\u6362 #include <iostream> using namespace std; int main() { char letter = 'C'; // 'C' \u7684 ASCII \u503c\u662f 67 int position = letter - 'A'; // 'C' - 'A' = 2 cout << \"\u5b57\u7b26 \" << letter << \" \u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\u662f \" << position << endl; return 0; } \u8f93\u51fa: \u5b57\u7b26 C \u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\u662f 2","title":"-'A'\uff1a\u5b57\u7b26\u5230\u5b57\u6bcd\u8868\u4f4d\u7f6e\u7684\u8f6c\u6362"},{"location":"lesson7/Lesson7%20C%2B%2B/#a","text":"\u901a\u8fc7\u5c06\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\u52a0\u4e0a 'A' \uff0c\u53ef\u4ee5\u5f97\u5230\u5bf9\u5e94\u7684\u5b57\u7b26\u3002\u6bd4\u5982 2 + 'A' \u7684\u7ed3\u679c\u662f\u5b57\u7b26 'C' \u3002 \u793a\u4f8b\uff1a\u5b57\u6bcd\u8868\u4f4d\u7f6e\u5230\u5b57\u7b26\u7684\u8f6c\u6362 #include <iostream> using namespace std; int main() { int position = 2; char letter = position + 'A'; // 2 + 'A' = 'C' cout << \"\u5b57\u6bcd\u8868\u4e2d\u4f4d\u7f6e \" << position << \" \u5bf9\u5e94\u7684\u5b57\u7b26\u662f \" << letter << endl; return 0; } \u8f93\u51fa\uff1a \u5b57\u6bcd\u8868\u4e2d\u4f4d\u7f6e 2 \u5bf9\u5e94\u7684\u5b57\u7b26\u662f C","title":"+'A'\uff1a\u5b57\u6bcd\u8868\u4f4d\u7f6e\u5230\u5b57\u7b26\u7684\u8f6c\u6362"},{"location":"lesson7/Lesson7%20C%2B%2B/#0-0-a-a","text":"\u901a\u8fc7\u7ed3\u5408\u4f7f\u7528\u8fd9\u4e9b\u64cd\u4f5c\u7b26\uff0c\u6211\u4eec\u53ef\u4ee5\u7075\u6d3b\u5730\u5728\u5b57\u7b26\u3001\u6570\u5b57\u548c\u5b57\u6bcd\u8868\u4f4d\u7f6e\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e2a\u6570\u5b57\u5b57\u7b26\u8f6c\u6362\u4e3a\u6574\u6570\uff0c\u7136\u540e\u8fdb\u884c\u7b80\u5355\u7684\u8fd0\u7b97\uff0c\u518d\u5c06\u7ed3\u679c\u8f6c\u6362\u56de\u5b57\u7b26\uff1b\u6216\u8005\u5c06\u5b57\u6bcd\u5b57\u7b26\u8f6c\u6362\u4e3a\u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\uff0c\u5e76\u8fdb\u884c\u4e00\u4e9b\u52a0\u5bc6\u64cd\u4f5c\u3002 \u793a\u4f8b\uff1a\u5904\u7406\u5b57\u7b26\u4e32\u4e2d\u7684\u6570\u5b57\u548c\u5b57\u6bcd #include <iostream> #include <string> using namespace std; int main() { string str = \"A3C7\"; int sum = 0; for (char ch : str) { if (ch >= '0' && ch <= '9') { sum += (ch - '0'); // \u5c06\u6570\u5b57\u5b57\u7b26\u8f6c\u6362\u4e3a\u6574\u6570\u5e76\u6c42\u548c } else if (ch >= 'A' && ch <= 'Z') { int pos = ch - 'A'; // \u5c06\u5b57\u6bcd\u5b57\u7b26\u8f6c\u6362\u4e3a\u5b57\u6bcd\u8868\u4f4d\u7f6e cout << ch << \" \u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\u662f: \" << pos << endl; } } cout << \"\u5b57\u7b26\u4e32 \" << str << \" \u4e2d\u6570\u5b57\u5b57\u7b26\u7684\u548c\u662f: \" << sum << endl; return 0; } \u8f93\u51fa\uff1a A \u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\u662f: 0 C \u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\u662f: 2 \u5b57\u7b26\u4e32 A3C7 \u4e2d\u6570\u5b57\u5b57\u7b26\u7684\u548c\u662f: 10","title":"\u7efc\u5408\u8fd0\u7528 +'0' \u548c -'0' \u4ee5\u53ca +'A' \u548c -'A'"},{"location":"lesson7/Lesson7%20C%2B%2B/#13-ascii","text":"","title":"1.3 ASCII \u4f8b\u9898\u8bb2\u89e3"},{"location":"lesson7/Lesson7%20C%2B%2B/#131-lc1309","text":"","title":"1.3.1 LC1309 \u89e3\u7801\u5b57\u6bcd\u5230\u6574\u6570\u6620\u5c04"},{"location":"lesson7/Lesson7%20C%2B%2B/#_2","text":"\u7ed9\u5b9a\u4e00\u4e2a\u52a0\u5bc6\u5b57\u7b26\u4e32 s \uff0c\u5b83\u7531\u6570\u5b57 '0' \u5230 '9' \u3001 '#' \u548c\u5b57\u6bcd\u7ec4\u6210\u3002\u6211\u4eec\u6309\u7167\u4e0b\u8ff0\u89c4\u5219\u89e3\u7801\uff1a 1. \u5b57\u7b26\uff08 '1' - '9' \uff09\u8868\u793a\u6620\u5c04\u5230\u5c0f\u5199\u5b57\u6bcd\uff08 'a' - 'i' \uff09\u3002 2. \u5b57\u7b26\uff08 '10#' - '26#' \uff09\u8868\u793a\u6620\u5c04\u5230\u5c0f\u5199\u5b57\u6bcd\uff08 'j' - 'z' \uff09\u3002 \u8fd4\u56de\u5b57\u7b26\u4e32 s \u89e3\u7801\u540e\u7684\u7ed3\u679c\u3002 \u6ce8\u610f\uff1a - \u8f93\u5165\u53ea\u5305\u542b\u6570\u5b57\u3001\u5b57\u7b26 '#' \u548c\u5c0f\u5199\u5b57\u6bcd\u3002 - \u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u8303\u56f4\u662f [1, 1000] \u3002","title":"\u9898\u76ee\u63cf\u8ff0\uff1a"},{"location":"lesson7/Lesson7%20C%2B%2B/#_3","text":"\u8f93\u5165\uff1as = \"10#11#12\" \u8f93\u51fa\uff1a\"jkab\"","title":"\u793a\u4f8b\uff1a"},{"location":"lesson7/Lesson7%20C%2B%2B/#_4","text":"\u51c6\u5907\u4e00\u4e2a vector<char> \u6765\u5b58\u50a8\u5b57\u6bcd a \u5230 z \u7684\u6620\u5c04\u3002 \u904d\u5386\u5b57\u7b26\u4e32 s \uff1a \u5982\u679c\u5f53\u524d\u5b57\u7b26\u662f\u6570\u5b57\u4e14\u540e\u9762\u6709 '#' \uff0c\u5c31\u5c06\u5f53\u524d\u7684\u6570\u5b57\u548c\u4e0b\u4e00\u4e2a\u6570\u5b57\u62fc\u63a5\u6210\u4e24\u4f4d\u6570\u5b57\uff0c\u7136\u540e\u5c06\u5176\u8f6c\u6362\u4e3a\u5b57\u6bcd\u3002 \u5982\u679c\u5f53\u524d\u5b57\u7b26\u662f\u5355\u72ec\u7684\u6570\u5b57\uff0c\u5219\u76f4\u63a5\u8f6c\u6362\u4e3a\u5b57\u6bcd\u3002 \u6784\u5efa\u89e3\u5bc6\u540e\u7684\u5b57\u7b26\u4e32\u3002","title":"\u63d0\u793a"},{"location":"lesson7/Lesson7%20C%2B%2B/#_5","text":"class Solution { public: string freqAlphabets(string s) { // \u7528 vector<char> \u6765\u5b58\u50a8\u5b57\u6bcd a-z \u7684\u6620\u5c04 vector<char> mapping(26); for (int i = 0; i < 26; ++i) { mapping[i] = 'a' + i; // 'a' + i \u8868\u793a\u7b2c i+1 \u4e2a\u5b57\u6bcd } string result = \"\"; int n = s.length(); for (int i = 0; i < n; ++i) { if (i + 2 < n && s[i + 2] == '#') { // \u68c0\u67e5\u662f\u5426\u662f '10#' \u5230 '26#' int num = (s[i] - '0') * 10 + (s[i + 1] - '0'); // \u8ba1\u7b97\u4e24\u4f4d\u6570 result += mapping[num - 1]; // \u5c06\u5176\u6620\u5c04\u4e3a\u5b57\u6bcd i += 2; // \u8df3\u8fc7\u6570\u5b57\u548c '#' } else { // \u5355\u4e2a\u6570\u5b57 '1' \u5230 '9' int num = s[i] - '0'; // \u8f6c\u6362\u6210\u6570\u5b57 result += mapping[num - 1]; // \u6620\u5c04\u4e3a\u5b57\u6bcd } } return result; } };","title":"\u53c2\u8003\u7b54\u6848"},{"location":"lesson7/Lesson7%20C%2B%2B/#_6","text":"\u6784\u5efa\u6620\u5c04\u8868 \uff1a vector<char> mapping(26) \u521b\u5efa\u4e00\u4e2a\u5305\u542b 26 \u4e2a\u5b57\u7b26\u7684\u6570\u7ec4\uff0c\u5176\u4e2d\u7d22\u5f15 0 \u5bf9\u5e94 'a' \uff0c\u7d22\u5f15 25 \u5bf9\u5e94 'z' \u3002 \u904d\u5386\u5b57\u7b26\u4e32 \uff1a\u5faa\u73af\u904d\u5386\u52a0\u5bc6\u5b57\u7b26\u4e32 s \u3002 \u5982\u679c\u5f53\u524d\u5b57\u7b26\u540e\u9762\u4e24\u4e2a\u5b57\u7b26\u6784\u6210\u4e00\u4e2a\u6709\u6548\u7684 \"#\" \u5e8f\u5217\uff0c\u63d0\u53d6\u8be5\u5e8f\u5217\uff0c\u8ba1\u7b97\u5bf9\u5e94\u7684\u6570\u5b57\u5e76\u6620\u5c04\u4e3a\u5b57\u6bcd\u3002 \u5982\u679c\u662f\u5355\u4e2a\u6570\u5b57\uff0c\u5219\u76f4\u63a5\u6620\u5c04\u4e3a\u76f8\u5e94\u7684\u5b57\u6bcd\u3002 \u7ed3\u679c\u6784\u5efa \uff1a\u5c06\u89e3\u5bc6\u540e\u7684\u5b57\u7b26\u62fc\u63a5\u5230\u7ed3\u679c\u5b57\u7b26\u4e32\u4e2d\u3002","title":"\u4ee3\u7801\u8bb2\u89e3"},{"location":"lesson7/Lesson7%20C%2B%2B/#14-ascii","text":"","title":"1.4 ASCII \u4e3e\u4e00\u53cd\u4e09"},{"location":"lesson7/Lesson7%20C%2B%2B/#141-lc387","text":"","title":"1.4.1 LC387. \u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u552f\u4e00\u5b57\u7b26"},{"location":"lesson7/Lesson7%20C%2B%2B/#_7","text":"\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u51fa\u73b0\u7684\u5b57\u7b26\uff0c\u5e76\u8fd4\u56de\u5b83\u7684\u7d22\u5f15\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de -1 \u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson7/Lesson7%20C%2B%2B/#_8","text":"\u901a\u8fc7 vector \u6765\u5b9e\u73b0\u5b57\u7b26\u9891\u7387\u7edf\u8ba1\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u5927\u5c0f\u4e3a 26 \u7684 vector \u6765\u5b58\u50a8\u6bcf\u4e2a\u5b57\u6bcd\u51fa\u73b0\u7684\u6b21\u6570\u3002 \u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a \u5b57\u7b26\u9891\u7387\u7edf\u8ba1 \uff1a\u4f7f\u7528\u4e00\u4e2a\u5927\u5c0f\u4e3a 26 \u7684 vector \u6765\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u6bcd\u7684\u51fa\u73b0\u6b21\u6570\u3002\u901a\u8fc7 s[i] - 'a' \u53ef\u4ee5\u786e\u5b9a\u5b57\u6bcd\u5728 vector \u4e2d\u7684\u7d22\u5f15\u4f4d\u7f6e\u3002 \u904d\u5386\u5b57\u7b26\u4e32 \uff1a\u5148\u904d\u5386\u4e00\u6b21\u5b57\u7b26\u4e32\uff0c\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\u3002 \u627e\u5230\u7b2c\u4e00\u4e2a\u552f\u4e00\u5b57\u7b26 \uff1a\u518d\u6b21\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u6839\u636e\u7edf\u8ba1\u7ed3\u679c\u627e\u5230\u7b2c\u4e00\u4e2a\u51fa\u73b0\u6b21\u6570\u4e3a 1 \u7684\u5b57\u7b26\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson7/Lesson7%20C%2B%2B/#_9","text":"class Solution { public: int firstUniqChar(string s) { // \u5b9a\u4e49\u5927\u5c0f\u4e3a26\u7684vector\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u6b64\u5904\u8868\u793a\u65b9\u6cd5\u610f\u601d\u4e3a\u5728vector\u91cc\u9762\u653e26\u4e2a0 vector<int> count(26, 0); // \u7b2c\u4e00\u6b21\u904d\u5386\uff1a\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26\u7684\u9891\u7387 for (int i = 0; i < s.length(); i++) { count[s[i] - 'a']++; } // \u7b2c\u4e8c\u6b21\u904d\u5386\uff1a\u627e\u5230\u7b2c\u4e00\u4e2a\u51fa\u73b0\u6b21\u6570\u4e3a1\u7684\u5b57\u7b26 for (int i = 0; i < s.length(); i++) { if (count[s[i] - 'a'] == 1) { return i; // \u8fd4\u56de\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u5b57\u7b26\u7684\u7d22\u5f15 } } return -1; // \u6ca1\u6709\u627e\u5230\u4e0d\u91cd\u590d\u7684\u5b57\u7b26\uff0c\u8fd4\u56de-1 } };","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson7/Lesson7%20C%2B%2B/#_10","text":"vector<int> count(26, 0); \uff1a\u5b9a\u4e49\u4e00\u4e2a\u957f\u5ea6\u4e3a 26 \u7684 vector \uff0c\u7528\u4e8e\u5b58\u50a8\u6bcf\u4e2a\u5b57\u6bcd\u7684\u51fa\u73b0\u6b21\u6570\u3002 vector \u7684\u521d\u59cb\u503c\u5168\u90e8\u8bbe\u7f6e\u4e3a 0 \u3002 \u7b2c\u4e00\u6b21\u904d\u5386\u5b57\u7b26\u4e32 \uff1a\u5728\u7b2c\u4e00\u6b21\u904d\u5386\u4e2d\uff0c\u901a\u8fc7 s[i] - 'a' \u8ba1\u7b97\u51fa\u5f53\u524d\u5b57\u7b26\u5728 vector \u4e2d\u7684\u7d22\u5f15\u4f4d\u7f6e\uff0c\u5e76\u5c06\u5176\u5bf9\u5e94\u7684\u503c\u52a0 1\u3002 \u7b2c\u4e8c\u6b21\u904d\u5386\u5b57\u7b26\u4e32 \uff1a\u901a\u8fc7\u7b2c\u4e8c\u6b21\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u627e\u51fa\u7b2c\u4e00\u4e2a\u51fa\u73b0\u6b21\u6570\u4e3a 1 \u7684\u5b57\u7b26\uff0c\u5e76\u8fd4\u56de\u8be5\u5b57\u7b26\u7684\u7d22\u5f15\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u5982\u679c\u6ca1\u6709\u627e\u5230\u552f\u4e00\u5b57\u7b26\uff0c\u5219\u8fd4\u56de -1 \u3002","title":"\u4ee3\u7801\u8bb2\u89e3"},{"location":"lesson7/Lesson7%20C%2B%2B/#142-lc171-excel","text":"","title":"1.4.2 LC171. Excel\u8868\u5217\u5e8f\u53f7"},{"location":"lesson7/Lesson7%20C%2B%2B/#_11","text":"\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 columnTitle \uff0c\u8868\u793a Excel \u8868\u683c\u4e2d\u7684\u5217\u540d\u3002\u8bf7\u5c06\u5176\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5217\u5e8f\u53f7\u3002 \u4f8b\u5982\uff1a A -> 1 B -> 2 C -> 3 ... Z -> 26 AA -> 27 AB -> 28 ...","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson7/Lesson7%20C%2B%2B/#_12","text":"\u901a\u8fc7 \u8fdb\u5236\u8f6c\u6362 \u7684\u65b9\u6cd5\uff0c\u5c06 Excel \u5217\u540d\u770b\u4f5c\u4e00\u4e2a\u4ee5 26 \u4e3a\u57fa\u6570\u7684\u6570\u5b57\u7cfb\u7edf\uff0c\u6bcf\u4e2a\u5b57\u6bcd\u4ee3\u8868\u4e00\u4e2a\u6570\u5b57\u3002 A \u5230 Z \u5206\u522b\u4ee3\u8868 1 \u5230 26\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5217\u540d\u8f6c\u6362\u6210\u76f8\u5e94\u7684\u6570\u5b57\u3002 \u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a \u5b57\u7b26\u8f6c\u6362\u4e3a\u6570\u5b57 \uff1a\u6bcf\u4e2a\u5b57\u7b26\u4ece A \u5230 Z \u5bf9\u5e94\u7684\u503c\u4e3a 1 \u5230 26 \uff0c\u53ef\u4ee5\u901a\u8fc7 columnTitle[i] - 'A' + 1 \u5f97\u5230\u5176\u5bf9\u5e94\u7684\u6570\u503c\u3002 \u8fdb\u5236\u8f6c\u6362 \uff1a\u5c06\u5217\u540d\u770b\u4f5c\u662f 26 \u8fdb\u5236\u6570\uff0c\u4ece\u53f3\u5230\u5de6\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u5c06\u6bcf\u4e2a\u5b57\u7b26\u8f6c\u6362\u6210\u6570\u5b57\u5e76\u4e58\u4ee5 26 \u7684\u5e42\u6b21\u7d2f\u52a0\u5230\u7ed3\u679c\u4e2d\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u6700\u7ec8\u7684\u7d2f\u52a0\u7ed3\u679c\u5373\u4e3a Excel \u8868\u683c\u5217\u540d\u5bf9\u5e94\u7684\u5217\u5e8f\u53f7\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson7/Lesson7%20C%2B%2B/#_13","text":"class Solution { public: int titleToNumber(string columnTitle) { int result = 0; int pow_num = 0; // \u4ece\u53f3\u5230\u5de6\u904d\u5386\u5217\u540d for (int i = columnTitle.length() - 1; i >= 0; i--) { // \u5c06\u5b57\u7b26\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u6570\u503c int extract_char = columnTitle[i] - 'A' + 1; // \u8ba1\u7b97 26 \u7684\u5e42\u6b21\uff0c\u5e76\u7d2f\u52a0\u5230\u7ed3\u679c\u4e2d result += extract_char * pow(26, pow_num); pow_num++; } return result; } };","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson7/Lesson7%20C%2B%2B/#_14","text":"int extract_char = columnTitle[i] - 'A' + 1; \uff1a\u5c06\u5b57\u6bcd A-Z \u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684 1-26 \u6570\u5b57\u3002 \u8fdb\u5236\u8f6c\u6362 \uff1a\u6bcf\u4e2a\u5b57\u7b26\u7684\u4f4d\u7f6e\u5bf9\u5e94 26 \u7684\u5e42\u6b21\uff0c\u6700\u53f3\u8fb9\u7684\u5b57\u7b26\u4e58\u4ee5 26^0 \uff0c\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e58\u4ee5 26^1 \uff0c\u4f9d\u6b21\u7c7b\u63a8\u3002 result += extract_char * pow(26, pow_num); \uff1a\u5c06\u6bcf\u4e2a\u5b57\u7b26\u5bf9\u5e94\u7684\u503c\u4e58\u4ee5 26 \u7684\u5e42\u6b21\uff0c\u5e76\u7d2f\u52a0\u5230\u7ed3\u679c\u4e2d\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u6700\u7ec8\u7ed3\u679c\u662f\u5217\u540d\u5bf9\u5e94\u7684\u5217\u5e8f\u53f7\u3002","title":"\u4ee3\u7801\u8bb2\u89e3"},{"location":"lesson7/Lesson7%20C%2B%2B/#143-lc804","text":"","title":"1.4.3 LC804. \u552f\u4e00\u6469\u65af\u5bc6\u7801\u8bcd"},{"location":"lesson7/Lesson7%20C%2B%2B/#_15","text":"\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4 words \uff0c\u5176\u4e2d\u6bcf\u4e2a\u5355\u8bcd\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u3002\u6bcf\u4e2a\u5b57\u6bcd\u53ef\u4ee5\u7528\u6469\u65af\u5bc6\u7801\u8868\u793a\uff0c\u4f8b\u5982\uff1a - 'a' -> \".-\" - 'b' -> \"-...\" - 'c' -> \"-.-.\" - ... \u4f60\u9700\u8981\u5c06\u6bcf\u4e2a\u5355\u8bcd\u8f6c\u6362\u4e3a\u6469\u65af\u5bc6\u7801\u8868\u793a\uff0c\u5e76\u8fd4\u56de\u552f\u4e00\u6469\u65af\u5bc6\u7801\u8bcd\u7684\u4e2a\u6570\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson7/Lesson7%20C%2B%2B/#_16","text":"\u6469\u65af\u5bc6\u7801\u6620\u5c04 \uff1a\u6bcf\u4e2a\u5b57\u6bcd\u5bf9\u5e94\u4e00\u4e2a\u56fa\u5b9a\u7684\u6469\u65af\u5bc6\u7801\uff0c\u53ef\u4ee5\u7528\u6570\u7ec4\u6765\u8868\u793a\u6bcf\u4e2a\u5b57\u6bcd\u7684\u6469\u65af\u5bc6\u7801\u3002 \u9010\u5b57\u8f6c\u6362 \uff1a\u904d\u5386\u6bcf\u4e2a\u5355\u8bcd\uff0c\u5c06\u5176\u8f6c\u6362\u4e3a\u6469\u65af\u5bc6\u7801\u7ec4\u5408\u3002 \u552f\u4e00\u6027\u68c0\u67e5 \uff1a\u901a\u8fc7\u5411\u91cf\u5b58\u50a8\u5df2\u8f6c\u6362\u7684\u6469\u65af\u5bc6\u7801\uff0c\u5e76\u68c0\u67e5\u6bcf\u4e2a\u8f6c\u6362\u662f\u5426\u662f\u552f\u4e00\u7684\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u6700\u7ec8\u8fd4\u56de\u552f\u4e00\u6469\u65af\u5bc6\u7801\u7684\u6570\u91cf\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson7/Lesson7%20C%2B%2B/#_17","text":"class Solution { public: int uniqueMorseRepresentations(vector<string>& words) { // \u7528\u6570\u7ec4\u6765\u5b58\u50a8\u5b57\u6bcd\u5230\u6469\u65af\u5bc6\u7801\u7684\u6620\u5c04 string morse_code[26] = {\".-\", \"-...\", \"-.-.\", \"-..\", \".\", \"..-.\", \"--.\", \"....\", \"..\", \".---\", \"-.-\", \".-..\", \"--\", \"-.\", \"---\", \".--.\", \"--.-\", \".-.\", \"...\", \"-\", \"..-\", \"...-\", \".--\", \"-..-\", \"-.--\", \"--..\"}; vector<string> result; // \u904d\u5386\u6bcf\u4e2a\u5355\u8bcd for (int i = 0; i < words.size(); i++) { string combination = \"\"; // \u5c06\u5355\u8bcd\u8f6c\u6362\u4e3a\u6469\u65af\u5bc6\u7801\u8868\u793a for (int x = 0; x < words[i].length(); x++) { combination += morse_code[words[i][x] - 'a']; // \u901a\u8fc7 'a' \u7684 ASCII \u503c\u627e\u5230\u5bf9\u5e94\u7684\u6469\u65af\u5bc6\u7801 } // \u68c0\u67e5\u662f\u5426\u662f\u552f\u4e00\u7684\u6469\u65af\u5bc6\u7801\u8868\u793a if (find(result.begin(), result.end(), combination) == result.end()) { result.push_back(combination); } } return result.size(); } };","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson7/Lesson7%20C%2B%2B/#_18","text":"\u6469\u65af\u5bc6\u7801\u6620\u5c04 \uff1a\u7528\u957f\u5ea6\u4e3a 26 \u7684\u6570\u7ec4 morse_code \u6765\u5b58\u50a8\u5b57\u6bcd 'a' \u5230 'z' \u5bf9\u5e94\u7684\u6469\u65af\u5bc6\u7801\u8868\u793a\u3002 \u5355\u8bcd\u8f6c\u6362 \uff1a\u901a\u8fc7\u904d\u5386\u5355\u8bcd\u7684\u6bcf\u4e2a\u5b57\u7b26\uff0c\u6839\u636e\u5b57\u7b26\u7684 ASCII \u503c\u627e\u5230\u5bf9\u5e94\u7684\u6469\u65af\u5bc6\u7801\u5e76\u5c06\u5176\u7ec4\u5408\u8d77\u6765\u3002 \u68c0\u67e5\u552f\u4e00\u6027 \uff1a\u901a\u8fc7 find \u68c0\u67e5\u6469\u65af\u5bc6\u7801\u7ec4\u5408\u662f\u5426\u5df2\u5b58\u5728\u4e8e result \u4e2d\uff0c\u5982\u679c\u6ca1\u6709\u5219\u6dfb\u52a0\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u8fd4\u56de\u5b58\u50a8\u552f\u4e00\u6469\u65af\u5bc6\u7801\u7ec4\u5408\u7684\u5411\u91cf result \u7684\u5927\u5c0f\uff0c\u5373\u552f\u4e00\u6469\u65af\u5bc6\u7801\u7684\u6570\u91cf\u3002","title":"\u4ee3\u7801\u8bb2\u89e3"},{"location":"lesson7/Lesson7%20C%2B%2B/#2","text":"","title":"2. \u8fdb\u5236\u8f6c\u6362"},{"location":"lesson7/Lesson7%20C%2B%2B/#21","text":"\u4e8c\u8fdb\u5236\uff08Base 2\uff09\uff1a \u4f7f\u7528\u6570\u5b57 0 \u548c 1\u3002\u4f8b\u5982\uff1a 1010 \uff08\u4e8c\u8fdb\u5236\uff09 = 10 \uff08\u5341\u8fdb\u5236\uff09\u3002 \u516b\u8fdb\u5236\uff08Base 8\uff09\uff1a \u4f7f\u7528\u6570\u5b57 0 \u5230 7\u3002\u4f8b\u5982\uff1a 12 \uff08\u516b\u8fdb\u5236\uff09 = 10 \uff08\u5341\u8fdb\u5236\uff09\u3002 \u5341\u8fdb\u5236\uff08Base 10\uff09\uff1a \u6807\u51c6\u6570\u5b57\u7cfb\u7edf\u3002\u4f8b\u5982\uff1a 10 \uff08\u5341\u8fdb\u5236\uff09\u3002 \u5341\u516d\u8fdb\u5236\uff08Base 16\uff09\uff1a \u4f7f\u7528\u6570\u5b57 0-9 \u548c\u5b57\u6bcd A-F\u3002\u4f8b\u5982\uff1a A \uff08\u5341\u516d\u8fdb\u5236\uff09= 10 \uff08\u5341\u8fdb\u5236\uff09\u3002 \u4ee5\u4e0b\u8868\u683c\u5c55\u793a\u4e86\u5341\u8fdb\u5236\u6570\u5b57\u4ece1\u523010\u7684\u4e8c\u8fdb\u5236\u3001\u516b\u8fdb\u5236\u548c\u5341\u516d\u8fdb\u5236\u8868\u793a: \u5341\u8fdb\u5236 (Decimal) \u4e8c\u8fdb\u5236 (Binary) \u516b\u8fdb\u5236 (Octal) \u5341\u516d\u8fdb\u5236 (Hexadecimal) 1 1 1 1 2 10 2 2 3 11 3 3 4 100 4 4 5 101 5 5 6 110 6 6 7 111 7 7 8 1000 10 8 9 1001 11 9 10 1010 12 A","title":"2.1 \u6570\u5b57\u8fdb\u5236\u6982\u8ff0"},{"location":"lesson7/Lesson7%20C%2B%2B/#22","text":"","title":"2.2 \u5341\u8fdb\u5236\u5230\u4e8c\u8fdb\u5236\u7684\u8f6c\u6362"},{"location":"lesson7/Lesson7%20C%2B%2B/#_19","text":"\u6b65\u9aa41 \uff1a\u5c06\u5341\u8fdb\u5236\u6570\u9664\u4ee5 2\u3002 \u6b65\u9aa42 \uff1a\u8bb0\u5f55\u4f59\u6570\u3002 \u6b65\u9aa43 \uff1a\u7528\u5546\u7ee7\u7eed\u9664\u4ee5 2\uff0c\u76f4\u5230\u5546\u4e3a 0\u3002 \u6b65\u9aa44 \uff1a\u4e8c\u8fdb\u5236\u6570\u5373\u4e3a\u9006\u5e8f\u8bfb\u53d6\u7684\u4f59\u6570\u5e8f\u5217\u3002","title":"\u624b\u52a8\u65b9\u6cd5\uff1a\u4f7f\u7528\u77ed\u9664\u6cd5"},{"location":"lesson7/Lesson7%20C%2B%2B/#13","text":"13 / 2 = 6 \u4f59 1 6 / 2 = 3 \u4f59 0 3 / 2 = 1 \u4f59 1 1 / 2 = 0 \u4f59 1 \u7ed3\u679c\uff1a 13 (\u5341\u8fdb\u5236) = 1101 (\u4e8c\u8fdb\u5236)","title":"\u793a\u4f8b\uff1a\u5c06 13 \u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236"},{"location":"lesson7/Lesson7%20C%2B%2B/#c","text":"#include <iostream> #include <algorithm> // \u9700\u8981\u4f7f\u7528 reverse \u51fd\u6570 using namespace std; int main() { string ans = \"\"; // \u7528\u4e8e\u5b58\u50a8\u4e8c\u8fdb\u5236\u7ed3\u679c\u7684\u5b57\u7b26\u4e32 int num; cout << \"Enter a number: \"; cin >> num; // \u5faa\u73af\u5c06\u6570\u5b57\u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236 while (num > 0) { ans.push_back('0' + num % 2); // \u8ba1\u7b97\u5f53\u524d\u4f4d\u7684\u4e8c\u8fdb\u5236\u503c\u5e76\u6dfb\u52a0\u5230\u7ed3\u679c\u4e2d num = num / 2; // \u66f4\u65b0 num \u4e3a\u5546 } reverse(ans.begin(), ans.end()); // \u5c06\u7ed3\u679c\u53cd\u8f6c\uff0c\u56e0\u4e3a\u8ba1\u7b97\u7684\u7ed3\u679c\u662f\u9006\u5e8f\u7684 cout << \"Binary: \" << ans << endl; return 0; } \u4ee3\u7801\u89e3\u91ca\uff1a - ans.push_back('0' + num % 2); \uff1a num % 2 \u8ba1\u7b97\u5f53\u524d\u4f4d\u7684\u4e8c\u8fdb\u5236\u503c\uff0c '0' + num % 2 \u5c06\u5176\u8f6c\u6362\u4e3a\u5b57\u7b26\u5e76\u6dfb\u52a0\u5230 ans \u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u3002 - num = num / 2; \uff1a\u66f4\u65b0 num \u4e3a\u5f53\u524d\u5546\uff0c\u7ee7\u7eed\u4e0b\u4e00\u8f6e\u7684\u9664\u6cd5\u8fd0\u7b97\u3002 - reverse(ans.begin(), ans.end()); \uff1a\u53cd\u8f6c\u5b57\u7b26\u4e32 ans \uff0c\u56e0\u4e3a\u8ba1\u7b97\u5f97\u5230\u7684\u4e8c\u8fdb\u5236\u4f4d\u662f\u9006\u5e8f\u7684\u3002","title":"\u7528 C++ \u5b9e\u73b0\u5341\u8fdb\u5236\u5230\u4e8c\u8fdb\u5236\u7684\u8f6c\u6362"},{"location":"lesson7/Lesson7%20C%2B%2B/#23","text":"","title":"2.3 \u4e8c\u8fdb\u5236\u5230\u5341\u8fdb\u5236"},{"location":"lesson7/Lesson7%20C%2B%2B/#_20","text":"\u6b65\u9aa41 \uff1a\u5c06\u6bcf\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u4e58\u4ee5 2 \u7684\u76f8\u5e94\u6b21\u65b9\uff08\u4ece\u53f3\u5f80\u5de6\uff0c\u4f4d\u7f6e\u4ece 0 \u5f00\u59cb\uff09\u3002 \u6b65\u9aa42 \uff1a\u5c06\u6240\u6709\u7ed3\u679c\u76f8\u52a0\u3002","title":"\u624b\u52a8\u65b9\u6cd5\uff1a"},{"location":"lesson7/Lesson7%20C%2B%2B/#1101","text":"1 * 2^3 + 1 * 2^2 + 0 * 2^1 + 1 * 2^0 = 8 + 4 + 0 + 1 = 13 \u7ed3\u679c\uff1a 1101 (\u4e8c\u8fdb\u5236) = 13 (\u5341\u8fdb\u5236)","title":"\u793a\u4f8b\uff1a\u5c06 1101 \u8f6c\u6362\u4e3a\u5341\u8fdb\u5236"},{"location":"lesson7/Lesson7%20C%2B%2B/#c_1","text":"#include <iostream> using namespace std; int main() { string num; int ans = 0; cout << \"Enter a number with base of 2: \"; cin >> num; // \u5faa\u73af\u904d\u5386\u6bcf\u4e2a\u4e8c\u8fdb\u5236\u4f4d for (char i : num) { ans = ans * 2 + (i - '0'); // \u5c06\u4e8c\u8fdb\u5236\u6570\u9010\u4f4d\u8f6c\u6362\u4e3a\u5341\u8fdb\u5236 } cout << \"Decimal: \" << ans << endl; return 0; } \u4ee3\u7801\u89e3\u91ca\uff1a - ans = ans * 2 + (i - '0'); \uff1a i - '0' \u5c06\u5b57\u7b26\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u6574\u6570\u503c\uff0c ans * 2 \u5c06\u524d\u9762\u8ba1\u7b97\u7684\u5341\u8fdb\u5236\u503c\u5de6\u79fb\u4e00\u4f4d\uff0c\u7136\u540e\u52a0\u4e0a\u5f53\u524d\u4f4d\u7684\u503c\u3002 - \u8fd9\u4e2a\u8fc7\u7a0b\u6a21\u62df\u4e86\u624b\u52a8\u8ba1\u7b97\u7684\u8fc7\u7a0b\uff0c\u6bcf\u6b21\u4e58\u4ee5 2 \u76f8\u5f53\u4e8e\u5728\u5341\u8fdb\u5236\u4e2d\u5c06\u4f4d\u6570\u8fdb\u4e00\u4f4d\uff0c\u7136\u540e\u52a0\u4e0a\u5f53\u524d\u7684\u4e8c\u8fdb\u5236\u4f4d\u3002","title":"\u7528 C++ \u5b9e\u73b0\u4e8c\u8fdb\u5236\u5230\u5341\u8fdb\u5236\u7684\u8f6c\u6362"},{"location":"lesson7/Lesson7%20C%2B%2B/#24","text":"","title":"2.4 \u5341\u8fdb\u5236\u5230\u5341\u516d\u8fdb\u5236"},{"location":"lesson7/Lesson7%20C%2B%2B/#_21","text":"\u6b65\u9aa41 \uff1a\u5c06\u5341\u8fdb\u5236\u6570\u9664\u4ee5 16\u3002 \u6b65\u9aa42 \uff1a\u8bb0\u5f55\u4f59\u6570\uff0c\u5982\u679c\u4f59\u6570\u5927\u4e8e 9\uff0c\u5219\u5c06\u5176\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5341\u516d\u8fdb\u5236\u5b57\u7b26\uff08A-F\uff09\u3002 \u6b65\u9aa43 \uff1a\u7528\u5546\u7ee7\u7eed\u9664\u4ee5 16\uff0c\u76f4\u5230\u5546\u4e3a 0\u3002 \u6b65\u9aa44 \uff1a\u5341\u516d\u8fdb\u5236\u6570\u5373\u4e3a\u9006\u5e8f\u8bfb\u53d6\u7684\u4f59\u6570\u5e8f\u5217\u3002","title":"\u624b\u52a8\u65b9\u6cd5\uff1a"},{"location":"lesson7/Lesson7%20C%2B%2B/#479","text":"479 / 16 = 29 \u4f59 F 29 / 16 = 1 \u4f59 D 1 / 16 = 0 \u4f59 1 \u7ed3\u679c\uff1a 479 (\u5341\u8fdb\u5236) = 1DF (\u5341\u516d\u8fdb\u5236)","title":"\u793a\u4f8b\uff1a\u5c06 479 \u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236"},{"location":"lesson7/Lesson7%20C%2B%2B/#c_2","text":"#include <iostream> #include <algorithm> // \u9700\u8981\u4f7f\u7528 reverse \u51fd\u6570 using namespace std; string dec_to_hex(int num) { string result = \"\"; // \u7528\u4e8e\u5b58\u50a8\u5341\u516d\u8fdb\u5236\u7ed3\u679c\u7684\u5b57\u7b26\u4e32 // \u5faa\u73af\u5c06\u6570\u5b57\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236 while (num != 0) { int remainder = num % 16; // \u8ba1\u7b97\u5f53\u524d\u4f4d\u7684\u5341\u516d\u8fdb\u5236\u503c // \u6839\u636e\u4f59\u6570\u5927\u5c0f\u51b3\u5b9a\u662f\u6570\u5b57\u8fd8\u662f\u5b57\u7b26 if (remainder >= 10) { result += (remainder - 10) + 'A'; // \u4f59\u6570\u5728 10-15 \u4e4b\u95f4\uff0c\u8f6c\u6362\u4e3a 'A'-'F' } else { result += remainder + '0'; // \u4f59\u6570\u5728 0-9 \u4e4b\u95f4\uff0c\u8f6c\u6362\u4e3a\u5b57\u7b26 '0'-'9' } num = num / 16; // \u66f4\u65b0 num \u4e3a\u5546 } reverse(result.begin(), result.end()); // \u5c06\u7ed3\u679c\u53cd\u8f6c\uff0c\u56e0\u4e3a\u8ba1\u7b97\u7684\u7ed3\u679c\u662f\u9006\u5e8f\u7684 return result; } int main() { int number = 479; cout << \"Decimal: \" << number << \" -> Hexadecimal: \" << dec_to_hex(number) << endl; return 0; } \u4ee3\u7801\u89e3\u91ca\uff1a - remainder = num % 16; \uff1a\u8ba1\u7b97\u5f53\u524d\u4f4d\u7684\u5341\u516d\u8fdb\u5236\u503c\u3002 - result += (remainder - 10) + 'A'; \uff1a\u5982\u679c\u4f59\u6570\u5927\u4e8e\u6216\u7b49\u4e8e10\uff0c\u5219\u5c06\u5176\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5b57\u6bcdA-F\u3002 - result += remainder + '0'; \uff1a\u5982\u679c\u4f59\u6570\u5c0f\u4e8e10\uff0c\u5219\u76f4\u63a5\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5b57\u7b260-9\u3002 - reverse(result.begin(), result.end()); \uff1a\u56e0\u4e3a\u8ba1\u7b97\u5f97\u5230\u7684\u5341\u516d\u8fdb\u5236\u4f4d\u662f\u9006\u5e8f\u7684\uff0c\u56e0\u6b64\u9700\u8981\u53cd\u8f6c\u7ed3\u679c\u5b57\u7b26\u4e32\u3002","title":"\u7528 C++ \u5b9e\u73b0\u5341\u8fdb\u5236\u5230\u5341\u516d\u8fdb\u5236\u7684\u8f6c\u6362"},{"location":"lesson7/Lesson7%20C%2B%2B/#25","text":"","title":"2.5 \u4e8c\u8fdb\u5236\u5230\u5341\u516d\u8fdb\u5236"},{"location":"lesson7/Lesson7%20C%2B%2B/#_22","text":"\u4e8c\u8fdb\u5236\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236\u7684\u65b9\u6cd5\u662f\u5c06\u4e8c\u8fdb\u5236\u6570\u6bcf4\u4f4d\u5206\u4e3a\u4e00\u7ec4\uff0c\u7136\u540e\u5c06\u6bcf\u7ec4\u7684\u4e8c\u8fdb\u5236\u6570\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5341\u516d\u8fdb\u5236\u6570\u3002\u56e0\u4e3a\u5341\u516d\u8fdb\u5236\u662f\u4ee54\u4f4d\u4e8c\u8fdb\u5236\u4e3a\u57fa\u7840\u7684\uff0c\u6240\u4ee5\u8fd9\u4e2a\u8fc7\u7a0b\u975e\u5e38\u76f4\u63a5\u3002","title":"\u624b\u52a8\u65b9\u6cd5\uff1a"},{"location":"lesson7/Lesson7%20C%2B%2B/#_23","text":"\u4ece\u53f3\u5230\u5de6\uff0c\u5c06\u4e8c\u8fdb\u5236\u6570\u6bcf4\u4f4d\u5206\u4e3a\u4e00\u7ec4\u3002\u5982\u679c\u4e0d\u8db34\u4f4d\uff0c\u5219\u5728\u5de6\u4fa7\u8865\u96f6\u3002 \u5c06\u6bcf\u7ec4\u4e8c\u8fdb\u5236\u6570\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5341\u516d\u8fdb\u5236\u6570\u3002 \u5c06\u8f6c\u6362\u540e\u7684\u5341\u516d\u8fdb\u5236\u6570\u8fde\u63a5\u8d77\u6765\uff0c\u5f97\u5230\u6700\u7ec8\u7ed3\u679c\u3002","title":"\u6b65\u9aa4\uff1a"},{"location":"lesson7/Lesson7%20C%2B%2B/#110111101","text":"\u6b65\u9aa4\uff1a 1. \u5c06 110111101 \u5206\u4e3a 1101 \u548c 1110 \uff0c\u4e0d\u8db34\u4f4d\u7684\u5de6\u4fa7\u8865\u96f6\uff1a 0110 1110 1101 2. \u5c06\u6bcf\u7ec4\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236\uff1a - 0110 \u8f6c\u6362\u4e3a 6 - 1110 \u8f6c\u6362\u4e3a E - 1101 \u8f6c\u6362\u4e3a D 3. \u5c06\u8fd9\u4e9b\u8f6c\u6362\u7ed3\u679c\u8fde\u63a5\u8d77\u6765\uff1a 6ED \u7ed3\u679c\uff1a 110111101 (\u4e8c\u8fdb\u5236) = 6ED (\u5341\u516d\u8fdb\u5236) \u4ee3\u7801\u5b9e\u73b0\u90e8\u5206\u6211\u4eec\u73b0\u5728\u5148\u4e0d\u9700\u8981\u6df1\u5165\u4e86\u89e3\uff0c\u56e0\u4e3a\u6d89\u53ca\u5230\u5176\u4ed6\u7684\u4e00\u4e9b\u51fd\u6570\u548c\u5e93\u7684\u4f7f\u7528\u3002\u5f53\u524d\u6211\u4eec\u4e3b\u8981\u4e13\u6ce8\u4e8e\u7406\u89e3\u624b\u52a8\u65b9\u6cd5\uff0c\u8fd9\u6837\u53ef\u4ee5\u5e2e\u52a9\u66f4\u597d\u5730\u638c\u63e1\u8fdb\u5236\u8f6c\u6362\u7684\u57fa\u7840\u6982\u5ff5\u3002","title":"\u793a\u4f8b\uff1a\u5c06\u4e8c\u8fdb\u5236 110111101 \u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236"},{"location":"lesson7/Lesson7%20C%2B%2B/#26","text":"","title":"2.6 \u8fdb\u5236 \u4f8b\u9898\u8bb2\u89e3"},{"location":"lesson7/Lesson7%20C%2B%2B/#261-lc504","text":"","title":"2.6.1 LC504. \u4e03\u8fdb\u5236\u6570"},{"location":"lesson7/Lesson7%20C%2B%2B/#_24","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570 num \uff0c\u8fd4\u56de\u5b83\u7684 7 \u8fdb\u5236\u8868\u793a\u5b57\u7b26\u4e32\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson7/Lesson7%20C%2B%2B/#_25","text":"\u5c06\u4e00\u4e2a\u6574\u6570\u8f6c\u6362\u4e3a7\u8fdb\u5236\u672c\u8d28\u4e0a\u548c\u8f6c\u6362\u4e3a\u4efb\u4f55\u5176\u4ed6\u8fdb\u5236\u7684\u601d\u8def\u4e00\u81f4\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0d\u65ad\u5730\u53d6\u6a21\uff08 % \uff09\u548c\u9664\u6cd5\uff08 / \uff09\u64cd\u4f5c\u6765\u9010\u4f4d\u83b7\u53d67\u8fdb\u5236\u7684\u5404\u4f4d\u6570\u5b57\uff0c\u6700\u540e\u5c06\u5176\u53cd\u8f6c\u5373\u53ef\u5f97\u5230\u6700\u7ec8\u7684\u7ed3\u679c\u3002 \u5904\u7406\u8d1f\u6570 \uff1a \u5982\u679c\u8f93\u5165 num \u662f\u8d1f\u6570\uff0c\u5148\u53d6\u5b83\u7684\u7edd\u5bf9\u503c\u8fdb\u884c\u8ba1\u7b97\uff0c\u6700\u540e\u5728\u7ed3\u679c\u524d\u6dfb\u52a0\u8d1f\u53f7\u3002 \u5904\u7406 0 \u7684\u7279\u6b8a\u60c5\u51b5 \uff1a \u5982\u679c num == 0 \uff0c\u76f4\u63a5\u8fd4\u56de \"0\" \u3002 \u53d6\u6a21\u6cd5\u6784\u5efa7\u8fdb\u5236 \uff1a \u6211\u4eec\u4e0d\u65ad\u5c06 num \u9664\u4ee5 7\uff0c\u53d6\u51fa\u4f59\u6570\u4f5c\u4e3a\u5f53\u524d\u4f4d\u76847\u8fdb\u5236\u6570\u5b57\uff0c\u5c06\u5176\u52a0\u5165\u5230\u7ed3\u679c\u5b57\u7b26\u4e32\u4e2d\u3002\u7136\u540e\u5c06 num \u66f4\u65b0\u4e3a num / 7 \uff0c\u76f4\u5230 num \u53d8\u4e3a 0 \u4e3a\u6b62\u3002 \u53cd\u8f6c\u5b57\u7b26\u4e32 \uff1a \u56e0\u4e3a\u6211\u4eec\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\u8ba1\u7b97\uff0c\u6240\u4ee5\u6700\u7ec8\u9700\u8981\u5c06\u5b57\u7b26\u4e32\u53cd\u8f6c\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson7/Lesson7%20C%2B%2B/#_26","text":"class Solution { public: string ans = \"\"; string convertToBase7(int num) { int initial_num = num; // \u4fdd\u5b58\u521d\u59cb\u503c // \u5982\u679c\u662f\u8d1f\u6570\uff0c\u53d6\u7edd\u5bf9\u503c\u8fdb\u884c\u8ba1\u7b97 if(num < 0) { num = -num; } // \u7279\u6b8a\u60c5\u51b5\uff1anum \u4e3a 0\uff0c\u76f4\u63a5\u8fd4\u56de \"0\" if(num == 0) { return \"0\"; } // \u6784\u5efa 7 \u8fdb\u5236 while(num > 0) { ans.push_back(num % 7 + '0'); // \u5c06\u6bcf\u4e00\u4f4d\u7684 7 \u8fdb\u5236\u6570\u5b57\u52a0\u5165\u5230\u5b57\u7b26\u4e32 num /= 7; // \u9664\u4ee5 7\uff0c\u8fdb\u884c\u4e0b\u4e00\u4f4d\u7684\u8ba1\u7b97 } // \u5982\u679c\u521d\u59cb\u503c\u662f\u8d1f\u6570\uff0c\u6dfb\u52a0\u8d1f\u53f7 if(initial_num < 0) { ans.push_back('-'); } // \u6700\u540e\u53cd\u8f6c\u5b57\u7b26\u4e32 reverse(ans.begin(), ans.end()); return ans; } };","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson7/Lesson7%20C%2B%2B/#_27","text":"initial_num = num \uff1a\u4fdd\u7559\u539f\u59cb\u7684 num \u503c\uff0c\u7528\u4e8e\u540e\u7eed\u5224\u65ad\u662f\u5426\u9700\u8981\u6dfb\u52a0\u8d1f\u53f7\u3002 \u5904\u7406\u8d1f\u6570 \uff1a\u5982\u679c num \u4e3a\u8d1f\u6570\uff0c\u5148\u53d6\u7edd\u5bf9\u503c\uff0c\u8ba1\u7b97\u5b8c\u540e\u518d\u5728\u7ed3\u679c\u524d\u52a0\u4e0a '-' \u3002 \u5904\u74060\u7684\u60c5\u51b5 \uff1a\u5982\u679c num \u4e3a 0\uff0c\u76f4\u63a5\u8fd4\u56de \"0\" \u3002 \u53d6\u6a21\u548c\u9664\u6cd5 \uff1a\u901a\u8fc7 num % 7 \u83b7\u53d6\u5f53\u524d\u4f4d\u76847\u8fdb\u5236\u6570\u5b57\uff0c\u5e76\u5c06\u5176\u52a0\u5165\u5230\u7ed3\u679c\u5b57\u7b26\u4e32\u4e2d\uff1b\u7136\u540e\u901a\u8fc7 num /= 7 \u8fdb\u884c\u4e0b\u4e00\u4f4d\u7684\u8ba1\u7b97\u3002 \u53cd\u8f6c\u5b57\u7b26\u4e32 \uff1a\u7531\u4e8e\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\u6784\u5efa\u5b57\u7b26\u4e32\uff0c\u6700\u540e\u9700\u8981\u53cd\u8f6c\u5f97\u5230\u6b63\u786e\u7684\u987a\u5e8f\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u7ecf\u8fc7\u6240\u6709\u5904\u7406\u540e\uff0c\u8fd4\u56de\u7ed3\u679c\u5b57\u7b26\u4e32\u3002","title":"\u4ee3\u7801\u8bb2\u89e3"},{"location":"lesson7/Lesson7%20C%2B%2B/#27","text":"","title":"2.7 \u8fdb\u5236 \u4e3e\u4e00\u53cd\u4e09"},{"location":"lesson7/Lesson7%20C%2B%2B/#271-lc168-excel","text":"","title":"2.7.1 LC168. Excel\u8868\u5217\u540d\u79f0"},{"location":"lesson7/Lesson7%20C%2B%2B/#_28","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u8fd4\u56de\u5b83\u5728 Excel \u8868\u4e2d\u5bf9\u5e94\u7684\u5217\u6807\u9898\u3002Excel \u5217\u662f\u4ee5 A-Z \u7684\u65b9\u5f0f\u6392\u5217\u7684\uff0c\u4f8b\u5982\uff1a 1 -> A 2 -> B 3 -> C ... 26 -> Z 27 -> AA 28 -> AB ...","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson7/Lesson7%20C%2B%2B/#_29","text":"\u8fd9\u662f\u4e00\u4e2a\u5178\u578b\u7684\u8fdb\u5236\u8f6c\u6362\u95ee\u9898\u3002\u9700\u8981\u5c06\u6570\u5b57\u8f6c\u6362\u6210\u4ee5 A-Z \u4e3a\u57fa\u7840\u768426\u8fdb\u5236\u8868\u793a\u6cd5\uff0c\u7c7b\u4f3c\u4e8e\u5341\u8fdb\u5236\u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236\u6216\u5341\u516d\u8fdb\u5236\u3002\u7531\u4e8e Excel \u5217\u7f16\u53f7\u4ece 1 \u5f00\u59cb\uff0c\u800c\u4e0d\u662f\u4ece 0 \u5f00\u59cb\uff0c\u6240\u4ee5\u5728\u8f6c\u6362\u65f6\u9700\u8981\u4e00\u4e9b\u989d\u5916\u7684\u8c03\u6574\u3002 \u4ece 1 \u5f00\u59cb\u768426\u8fdb\u5236\uff1a \u6211\u4eec\u53ef\u4ee5\u5c06 A-Z \u5bf9\u5e94\u7684\u6570\u5b57\u770b\u4f5c\u662f\u4e00\u4e2a\u57fa\u4e8e26\u7684\u8fdb\u5236\u7cfb\u7edf\u3002 \u4f46\u4e0e\u5e38\u89c1\u8fdb\u5236\u4e0d\u540c\u7684\u662f\uff0cExcel \u5217\u7f16\u53f7\u662f\u4ece 1 \u5f00\u59cb\u7684\uff0c\u800c\u4e0d\u662f\u4ece 0 \u5f00\u59cb\uff0c\u56e0\u6b64\u5728\u6bcf\u6b21\u53d6\u4f59\u65f6\u9700\u8981\u505a\u4e00\u4e9b\u8c03\u6574\uff1a\u6bcf\u6b21\u5c06 columnNumber \u51cf\u53bb 1\u3002 \u5904\u7406\u903b\u8f91\uff1a \u4e0d\u65ad\u5c06 columnNumber \u51cf\u53bb1\uff0c\u5e76\u8ba1\u7b97\u51fa\u5bf9\u5e94\u7684\u5b57\u6bcd\u3002 \u6bcf\u6b21\u901a\u8fc7 columnNumber % 26 \u5f97\u5230\u4e00\u4e2a\u5b57\u6bcd\uff0c\u5c06\u5176\u52a0\u5165\u7ed3\u679c\u5b57\u7b26\u4e32\u4e2d\u3002 \u5c06 columnNumber \u9664\u4ee526\uff0c\u7ee7\u7eed\u5904\u7406\u4e0b\u4e00\u4e2a\u6570\u5b57\uff0c\u76f4\u5230 columnNumber \u4e3a 0\u3002 \u53cd\u8f6c\u5b57\u7b26\u4e32\uff1a \u7531\u4e8e\u6211\u4eec\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\u6784\u9020\u5b57\u7b26\u4e32\uff0c\u56e0\u6b64\u6700\u540e\u9700\u8981\u5c06\u7ed3\u679c\u5b57\u7b26\u4e32\u53cd\u8f6c\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson7/Lesson7%20C%2B%2B/#_30","text":"class Solution { public: string convertToTitle(int columnNumber) { string result = \"\"; // \u5904\u7406\u8fdb\u5236\u8f6c\u6362 while(columnNumber > 0) { // \u56e0\u4e3a\u662f\u4ece 1 \u5f00\u59cb\u7684\u5217\uff0c\u6240\u4ee5\u9700\u8981\u5148\u51cf1 columnNumber -= 1; // \u8ba1\u7b97\u5f53\u524d\u4f4d\u5bf9\u5e94\u7684\u5b57\u6bcd int temp = columnNumber % 26; result += temp + 'A'; // \u51cf\u5c11\u5217\u53f7 columnNumber /= 26; } // \u7531\u4e8e\u6211\u4eec\u4ece\u4f4e\u4f4d\u5f00\u59cb\u8ba1\u7b97\uff0c\u56e0\u6b64\u9700\u8981\u53cd\u8f6c\u7ed3\u679c int start = 0; int end = result.length() - 1; while (start < end) { swap(result[start], result[end]); start++; end--; } return result; } };","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson7/Lesson7%20C%2B%2B/#_31","text":"columnNumber -= 1 \uff1a columnNumber \u9700\u8981\u51cf 1 \u662f\u56e0\u4e3a Excel \u5217\u53f7\u662f\u4ece 1 \u5f00\u59cb\u7684\uff0c\u800c 26 \u8fdb\u5236\u7684\u5b57\u6bcd\u8868\u793a\u7cfb\u7edf\u662f\u4ece 0 \u5f00\u59cb\u7684\u3002\u51cf 1 \u7684\u64cd\u4f5c\u5c06\u5217\u53f7\u8f6c\u6362\u4e3a 0 \u57fa\u7840\u7684\u7cfb\u7edf\uff0c\u4f7f\u5f97\u6570\u5b57 1 \u5bf9\u5e94\u5b57\u6bcd A \uff0c\u6570\u5b57 26 \u5bf9\u5e94\u5b57\u6bcd Z \uff0c\u4ece\u800c\u6b63\u786e\u5730\u8fdb\u884c\u8fdb\u5236\u8f6c\u6362\u3002 \u6bd4\u5982\u5f53 columnNumber = 1 \u65f6\uff0c\u5982\u679c\u6211\u4eec\u4e0d\u51cf 1\uff0c\u6309\u7167\u8fdb\u5236\u8f6c\u6362\u8fc7\u7a0b\u4f1a\u51fa\u9519\uff1a \u4e0d\u51cf 1 \u7684\u60c5\u51b5\u4e0b\uff1a - columnNumber = 1 - \u76f4\u63a5\u8ba1\u7b97 1 % 26 = 1 \uff0c\u7136\u540e\u52a0\u4e0a 'A' \u5f97\u5230 1 + 'A' = 'B' \u3002\u4f46\u662f\u6211\u4eec\u5e0c\u671b columnNumber = 1 \u5bf9\u5e94\u7684\u662f A \u800c\u4e0d\u662f B \uff0c\u6240\u4ee5\u8fd9\u663e\u7136\u662f\u9519\u8bef\u7684\u3002 \u51cf 1 \u7684\u60c5\u51b5\u4e0b\uff1a - columnNumber = 1 - 1 = 0 - \u8ba1\u7b97 0 % 26 = 0 \uff0c\u7136\u540e\u52a0\u4e0a 'A' \u5f97\u5230 0 + 'A' = 'A' \u3002 - \u56e0\u6b64\uff0c columnNumber = 1 \u6b63\u786e\u5bf9\u5e94\u5230\u5b57\u6bcd A \u3002 columnNumber % 26 \uff1a\u8ba1\u7b97\u5f53\u524d\u7684\u5217\u5bf9\u5e94\u7684\u5b57\u6bcd\u7f16\u53f7\uff080 \u5230 25 \u5bf9\u5e94 A \u5230 Z \uff09\u3002 result += temp + 'A' \uff1a\u5c06\u7f16\u53f7\u8f6c\u6362\u4e3a\u5b57\u6bcd\u5e76\u6dfb\u52a0\u5230\u7ed3\u679c\u5b57\u7b26\u4e32\u4e2d\u3002 columnNumber /= 26 \uff1a\u5c06\u5217\u53f7\u9664\u4ee5 26\uff0c\u5904\u7406\u4e0b\u4e00\u4f4d\u3002 \u5b57\u7b26\u4e32\u53cd\u8f6c \uff1a\u56e0\u4e3a\u5b57\u6bcd\u662f\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\u8ba1\u7b97\u7684\uff0c\u56e0\u6b64\u9700\u8981\u5728\u6700\u540e\u53cd\u8f6c\u5b57\u7b26\u4e32\u3002","title":"\u4ee3\u7801\u8bb2\u89e3"},{"location":"lesson7/Lesson7%20C%2B%2B/#272-lc728","text":"","title":"2.7.2 LC728. \u81ea\u9664\u6570"},{"location":"lesson7/Lesson7%20C%2B%2B/#_32","text":"\u81ea\u9664\u6570\u662f\u6307\u4e00\u4e2a\u6574\u6570\uff0c\u5b83\u7684\u6bcf\u4e00\u4f4d\u6570\u5b57\u90fd\u80fd\u6574\u9664\u8fd9\u4e2a\u6570\u672c\u8eab\u3002\u7ed9\u5b9a\u4e00\u4e2a\u8303\u56f4 [left, right] \uff0c\u8fd4\u56de\u8be5\u8303\u56f4\u5185\u6240\u6709\u7684\u81ea\u9664\u6570\u3002 \u4e00\u4e2a\u81ea\u9664\u6570\u5fc5\u987b\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a 1. \u8be5\u6570\u4e0d\u80fd\u5305\u542b\u6570\u5b57 0 \u3002 2. \u8be5\u6570\u80fd\u88ab\u5b83\u7684\u6bcf\u4e00\u4f4d\u6570\u5b57\u6574\u9664\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson7/Lesson7%20C%2B%2B/#_33","text":"\u9010\u4f4d\u68c0\u67e5 \uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u6570\u5b57\uff0c\u5c06\u5176\u6bcf\u4e00\u4f4d\u63d0\u53d6\u51fa\u6765\uff0c\u68c0\u67e5\u8be5\u4f4d\u662f\u5426\u4e3a 0\uff0c\u5e76\u4e14\u80fd\u5426\u6574\u9664\u539f\u6570\u5b57\u3002 \u904d\u5386\u8303\u56f4 \uff1a\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u8303\u56f4 [left, right] \uff0c\u9010\u4e00\u68c0\u67e5\u6bcf\u4e2a\u6570\u5b57\u662f\u5426\u662f\u81ea\u9664\u6570\uff0c\u5982\u679c\u662f\uff0c\u5c06\u5176\u52a0\u5165\u7ed3\u679c\u5217\u8868\u4e2d\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u8fd4\u56de\u5728 [left, right] \u8303\u56f4\u5185\u6240\u6709\u81ea\u9664\u6570\u7684\u5217\u8868\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson7/Lesson7%20C%2B%2B/#_34","text":"class Solution { public: // \u68c0\u67e5\u4e00\u4e2a\u6570\u5b57\u662f\u5426\u662f\u81ea\u9664\u6570 bool check_selfDivid(int num) { int num_original = num; while (num != 0) { int digit = num % 10; // \u63d0\u53d6\u5f53\u524d\u6570\u5b57\u7684\u6700\u540e\u4e00\u4f4d if (digit == 0) { return false; // \u5982\u679c\u67d0\u4e00\u4f4d\u662f 0\uff0c\u5219\u8be5\u6570\u5b57\u4e0d\u53ef\u80fd\u662f\u81ea\u9664\u6570 } if (num_original % digit != 0) { return false; // \u5982\u679c\u67d0\u4e00\u4f4d\u4e0d\u80fd\u6574\u9664\u539f\u6570\u5b57\uff0c\u5219\u4e0d\u662f\u81ea\u9664\u6570 } num = num / 10; // \u53bb\u6389\u6700\u540e\u4e00\u4f4d } return true; // \u6240\u6709\u4f4d\u90fd\u80fd\u6574\u9664\uff0c\u5219\u8be5\u6570\u5b57\u662f\u81ea\u9664\u6570 } vector<int> selfDividingNumbers(int left, int right) { vector<int> result{}; for (int i = left; i <= right; i++) { if (check_selfDivid(i)) { // \u5982\u679c\u662f\u81ea\u9664\u6570\uff0c\u52a0\u5165\u7ed3\u679c result.push_back(i); } } return result; } };","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson7/Lesson7%20C%2B%2B/#_35","text":"check_selfDivid \u51fd\u6570 \uff1a\u8fd9\u4e2a\u51fd\u6570\u7528\u4e8e\u68c0\u67e5\u4e00\u4e2a\u6570\u662f\u5426\u662f\u81ea\u9664\u6570\u3002\u9010\u4f4d\u63d0\u53d6\u6570\u5b57\uff0c\u5e76\u68c0\u67e5\u6bcf\u4f4d\u662f\u5426\u80fd\u6574\u9664\u539f\u6570\u5b57\u3002\u5982\u679c\u6709\u4efb\u4f55\u4e00\u4f4d\u4e0d\u80fd\u6574\u9664\u6216\u8005\u5305\u542b 0\uff0c\u5219\u8fd4\u56de false \u3002 \u904d\u5386\u8303\u56f4 \uff1a\u5728 selfDividingNumbers \u51fd\u6570\u4e2d\uff0c\u904d\u5386\u8303\u56f4 [left, right] \uff0c\u4f7f\u7528 check_selfDivid \u51fd\u6570\u5224\u65ad\u6bcf\u4e2a\u6570\u662f\u5426\u662f\u81ea\u9664\u6570\uff0c\u5982\u679c\u662f\u5219\u5c06\u5176\u52a0\u5165\u7ed3\u679c\u5217\u8868\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u6700\u7ec8\u8fd4\u56de [left, right] \u8303\u56f4\u5185\u6240\u6709\u81ea\u9664\u6570\u7684\u5217\u8868\u3002","title":"\u4ee3\u7801\u8bb2\u89e3"},{"location":"lesson7/Lesson7%20C%2B%2B/#273-lc693","text":"","title":"2.7.3 LC693. \u4ea4\u66ff\u4f4d\u4e8c\u8fdb\u5236\u6570"},{"location":"lesson7/Lesson7%20C%2B%2B/#_36","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570 n \uff0c\u68c0\u67e5\u5176\u4e8c\u8fdb\u5236\u8868\u793a\u662f\u5426\u4e3a\u4ea4\u66ff\u4f4d\u4e8c\u8fdb\u5236\u6570\uff0c\u4ea4\u66ff\u4f4d\u4e8c\u8fdb\u5236\u6570\u7684\u5b9a\u4e49\u662f\u5176\u76f8\u90bb\u7684\u4e24\u4e2a\u4f4d\u59cb\u7ec8\u4e0d\u540c\uff0c\u5373\u4e8c\u8fdb\u5236\u4e2d 0 \u548c 1 \u4ea4\u66ff\u51fa\u73b0\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson7/Lesson7%20C%2B%2B/#_37","text":"\u9010\u4f4d\u68c0\u67e5 \uff1a\u901a\u8fc7\u4e0d\u65ad\u5c06 n \u53f3\u79fb\uff0c\u5e76\u63d0\u53d6\u5176\u5f53\u524d\u7684\u6700\u540e\u4e00\u4f4d\uff0c\u68c0\u67e5\u662f\u5426\u76f8\u90bb\u7684\u4e24\u4f4d\u76f8\u540c\u3002 \u7ec8\u6b62\u6761\u4ef6 \uff1a\u5f53\u67d0\u4e00\u4f4d\u548c\u5176\u76f8\u90bb\u7684\u4e0a\u4e00\u4f4d\u76f8\u540c\u65f6\uff0c\u76f4\u63a5\u8fd4\u56de false \u3002 \u5168\u90e8\u68c0\u67e5\u901a\u8fc7 \uff1a\u5982\u679c\u6240\u6709\u76f8\u90bb\u7684\u4f4d\u90fd\u4e0d\u540c\uff0c\u5219\u8fd4\u56de true \u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson7/Lesson7%20C%2B%2B/#_38","text":"class Solution { public: bool hasAlternatingBits(int n) { int next; int now; while(n > 0) { now = n % 2; // \u63d0\u53d6\u5f53\u524d\u4f4d n = n / 2; // \u53f3\u79fb\uff0c\u53bb\u6389\u5f53\u524d\u4f4d next = n % 2; // \u63d0\u53d6\u4e0b\u4e00\u4f4d if(next == now) { return false; // \u5982\u679c\u76f8\u90bb\u7684\u4e24\u4f4d\u76f8\u540c\uff0c\u8fd4\u56de false } } return true; // \u5168\u90e8\u4f4d\u90fd\u4ea4\u66ff\uff0c\u8fd4\u56de true } };","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson7/Lesson7%20C%2B%2B/#_39","text":"now = n % 2; \uff1a\u63d0\u53d6\u5f53\u524d\u6700\u4f4e\u4f4d\u3002 n = n / 2; \uff1a\u53f3\u79fb n \uff0c\u53bb\u6389\u5df2\u7ecf\u68c0\u67e5\u7684\u6700\u4f4e\u4f4d\u3002 next = n % 2; \uff1a\u63d0\u53d6\u53f3\u79fb\u540e\u7684\u4e0b\u4e00\u4f4d\u3002 \u76f8\u90bb\u4f4d\u6bd4\u8f83 \uff1a\u5982\u679c next \u548c now \u76f8\u7b49\uff0c\u5219\u8bf4\u660e\u76f8\u90bb\u7684\u4e24\u4f4d\u76f8\u540c\uff0c\u8fd4\u56de false \u3002 \u68c0\u67e5\u901a\u8fc7 \uff1a\u5982\u679c\u6240\u6709\u4f4d\u90fd\u4e0d\u540c\uff0c\u8fd4\u56de true \uff0c\u8868\u793a n \u662f\u4ea4\u66ff\u4f4d\u4e8c\u8fdb\u5236\u6570\u3002","title":"\u4ee3\u7801\u8bb2\u89e3"},{"location":"lesson7/Lesson7%20C%2B%2B/#3","text":"","title":"3. \u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson7/Lesson7%20C%2B%2B/#ascii_1","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC405 \u6570\u5b57\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236\u6570 \u5c06\u4e00\u4e2a\u6574\u6570\u8f6c\u6362\u4e3a\u5176 16 \u8fdb\u5236\u8868\u793a\u3002 LC806 \u5199\u5b57\u7b26\u4e32\u9700\u8981\u7684\u884c\u6570 \u7ed9\u5b9a\u82e5\u5e72\u884c\u5b57\u7b26\u4e32\uff0c\u8ba1\u7b97\u5199\u5165\u6240\u9700\u7684\u884c\u6570\u3002 LC2309 \u95f4\u8ddd\u5927\u5c0f\u5199\u7684\u6700\u597d\u82f1\u6587\u5b57\u6bcd \u627e\u5230\u5305\u542b\u5927\u5199\u548c\u5c0f\u5199\u5b57\u6bcd\u7684\u6700\u5927\u82f1\u6587\u5b57\u6bcd\u3002 LC383 \u8d4e\u91d1\u4fe1 \u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u662f\u5426\u80fd\u7531\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u6784\u6210\u3002 LC389 \u627e\u4e0d\u540c \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u627e\u51fa\u4e00\u4e2a\u5728\u5176\u4e2d\u591a\u51fa\u7684\u5b57\u7b26\u3002","title":"ASCII \u76f8\u5173\u95ee\u9898"},{"location":"lesson7/Lesson7%20C%2B%2B/#_40","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC868 \u4e8c\u8fdb\u5236\u95f4\u8ddd \u627e\u5230\u4e8c\u8fdb\u5236\u6570\u4e2d\u6700\u5927\u7684 0 \u548c 1 \u95f4\u7684\u8ddd\u79bb\u3002 LC1317 \u5c06\u6574\u6570\u8f6c\u6362\u4e3a\u4e24\u4e2a\u65e0\u96f6\u6574\u6570\u7684\u548c \u5c06\u4e00\u4e2a\u6574\u6570\u8f6c\u6362\u4e3a\u4e24\u4e2a\u975e\u96f6\u6574\u6570\u4e4b\u548c\u3002 LC1281 \u6574\u6570\u7684\u5404\u4f4d\u79ef\u548c\u4e4b\u5dee \u8fd4\u56de\u4e00\u4e2a\u6574\u6570\u5404\u4f4d\u6570\u5b57\u4e58\u79ef\u4e0e\u548c\u7684\u5dee\u503c\u3002 LC67 \u4e8c\u8fdb\u5236\u6c42\u548c \u7ed9\u5b9a\u4e24\u4e2a\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\u5b83\u4eec\u7684\u548c\uff08\u4ee5\u4e8c\u8fdb\u5236\u8868\u793a\uff09\u3002","title":"\u8fdb\u5236\u8f6c\u6362\u76f8\u5173\u95ee\u9898"},{"location":"lesson7/Lesson7%20Java/","text":"Lesson7 ASCII \u8f6c\u6362\u4e0e\u8fdb\u5236\u8f6c\u6362 \u76ee\u5f55 \u7406\u89e3 ASCII 1.1 \u4ec0\u4e48\u662f ASCII 1.2 ASCII \u7684\u5e94\u7528 1.3 ASCII \u4f8b\u9898\u8bb2\u89e3 1.3.1 LC1309 - \u89e3\u7801\u5b57\u6bcd\u5230\u6574\u6570\u6620\u5c04 1.4 ASCII \u4e3e\u4e00\u53cd\u4e09 1.4.1 LC387 - \u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u552f\u4e00\u5b57\u7b26 1.4.2 LC171 - Excel \u8868\u5217\u5e8f\u53f7 1.4.3 LC804 - \u552f\u4e00\u6469\u65af\u5bc6\u7801\u8bcd \u8fdb\u5236\u8f6c\u6362 2.1 \u6570\u5b57\u8fdb\u5236\u6982\u8ff0 2.2 \u5341\u8fdb\u5236\u5230\u4e8c\u8fdb\u5236\u7684\u8f6c\u6362 2.3 \u4e8c\u8fdb\u5236\u5230\u5341\u8fdb\u5236\u7684\u8f6c\u6362 2.4 \u5341\u8fdb\u5236\u5230\u5341\u516d\u8fdb\u5236\u7684\u8f6c\u6362 2.5 \u4e8c\u8fdb\u5236\u5230\u5341\u516d\u8fdb\u5236\u7684\u8f6c\u6362 2.6 \u8fdb\u5236 \u4f8b\u9898\u8bb2\u89e3 2.6.1 LC504 - \u4e03\u8fdb\u5236\u6570 2.7 \u8fdb\u5236 \u4e3e\u4e00\u53cd\u4e09 2.7.1 LC168 - Excel \u8868\u5217\u540d\u79f0 2.7.2 LC728 - \u81ea\u9664\u6570 2.7.3 LC693 - \u4ea4\u66ff\u4f4d\u4e8c\u8fdb\u5236\u6570 \u8bfe\u540e\u7ec3\u4e60 1. \u7406\u89e3 ASCII 1.1 \u4ec0\u4e48\u662f ASCII\uff1f ASCII\uff08American Standard Code for Information Interchange\uff0c\u7f8e\u56fd\u4fe1\u606f\u4ea4\u6362\u6807\u51c6\u4ee3\u7801\uff09\u662f\u4e00\u79cd\u5b57\u7b26\u7f16\u7801\u6807\u51c6\uff0c\u5b83\u4f7f\u7528\u6570\u503c\u6765\u8868\u793a\u5b57\u7b26\u3002\u6bcf\u4e2a\u5b57\u7b26\uff08\u5982\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u7b26\u53f7\u7b49\uff09\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u7684 ASCII \u4ee3\u7801\uff0c\u901a\u5e38\u8303\u56f4\u4ece 0 \u5230 127\u3002 \u8fd9\u4e9b\u503c\u53ef\u4ee5\u7528\u4e8e\u5b57\u7b26\u4e0e\u6570\u5b57\u4e4b\u95f4\u7684\u8f6c\u6362\u3002\u4f8b\u5982\uff0c\u5c06\u5b57\u7b26 '0' \u5230 '9' \u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u6574\u6570\uff0c\u6216\u53cd\u5411\u64cd\u4f5c\u3002 \u793a\u4f8b ASCII \u8868 \u5b57\u7b26 ASCII \u503c \u4e8c\u8fdb\u5236 \u5341\u516d\u8fdb\u5236 'A' 65 01000001 0x41 'a' 97 01100001 0x61 '0' 48 00110000 0x30 ' '\uff08\u7a7a\u683c\uff09 32 00100000 0x20 \u5b8c\u6574ASCII\u8868\u683c\uff1ahttps://www.ascii-code.com/ 1.2 ASCII \u7684\u5e94\u7528 \u5728 Java \u4e2d\uff0c\u6bcf\u4e2a\u5b57\u7b26\u90fd\u4ee5\u5176\u5bf9\u5e94\u7684 ASCII \u503c\u5f62\u5f0f\u5b58\u50a8\u4e3a\u6574\u6570\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5c06\u5b57\u7b26\u89c6\u4e3a\u6574\u6570\u6765\u8f7b\u677e\u5730\u64cd\u4f5c\u5b83\u4eec\u3002 \u901a\u8fc7ASCII\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u5b57\u7b26\u8fdb\u884c\u52a0\u51cf\u8fd0\u7b97\uff0c\u751a\u81f3\u662f\u8f6c\u6362\u3002 1.2.1 \u4f7f\u7528 +'0' \u548c -'0' \u8fdb\u884c\u8f6c\u6362 -'0' \uff1a\u5b57\u7b26\u5230\u6574\u6570\u7684\u8f6c\u6362 \u901a\u8fc7\u5c06\u5b57\u7b26\u51cf\u53bb '0' \uff0c\u53ef\u4ee5\u5f97\u5230\u5bf9\u5e94\u7684\u6574\u6570\u503c\u3002\u6bd4\u5982 '3' - '0' \u7684\u7ed3\u679c\u662f\u6574\u6570 3 \u3002 \u793a\u4f8b\uff1a\u5b57\u7b26\u5230\u6574\u6570\u7684\u8f6c\u6362 public class AsciiConversion { public static void main(String[] args) { char digit = '5'; // '5' \u7684 ASCII \u503c\u662f 53 int num = digit - '0'; // '5' - '0' = 5 System.out.println(\"\u5b57\u7b26 \" + digit + \" \u8f6c\u6362\u4e3a\u6574\u6570\u662f \" + num); } } \u8f93\u51fa: \u5b57\u7b26 5 \u8f6c\u6362\u4e3a\u6574\u6570\u662f 5 +'0' \uff1a\u6574\u6570\u5230\u5b57\u7b26\u7684\u8f6c\u6362 \u901a\u8fc7\u5c06\u6574\u6570\u52a0\u4e0a '0' \uff0c\u53ef\u4ee5\u5f97\u5230\u5bf9\u5e94\u7684\u5b57\u7b26\u3002\u6bd4\u5982 5 + '0' \u7684\u7ed3\u679c\u662f\u5b57\u7b26 '5' \u3002 \u793a\u4f8b\uff1a\u6574\u6570\u5230\u5b57\u7b26\u7684\u8f6c\u6362 public class AsciiConversion { public static void main(String[] args) { int num = 7; char digit = (char) (num + '0'); // 7 + '0' = '7' System.out.println(\"\u6574\u6570 \" + num + \" \u8f6c\u6362\u4e3a\u5b57\u7b26\u662f \" + digit); } } \u8f93\u51fa\uff1a \u6574\u6570 7 \u8f6c\u6362\u4e3a\u5b57\u7b26\u662f 7 1.2.2 \u4f7f\u7528 +'A' \u548c -'A' \u8fdb\u884c\u8f6c\u6362 \u901a\u8fc7\u5728\u5b57\u7b26\u4e0a\u52a0\u4e0a\u6216\u51cf\u53bb\u5b57\u7b26 'A' \uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5b57\u7b26\u4e0e\u5b57\u6bcd\u8868\u7684\u4f4d\u7f6e\u5173\u8054\u8d77\u6765\u3002\u4f8b\u5982\uff0c\u5c06\u5b57\u7b26 'C' \u51cf\u53bb 'A' \u53ef\u4ee5\u5f97\u5230 'C' \u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\uff08\u4ece0\u5f00\u59cb\u8ba1\u6570\uff09\u3002\u8fd9\u6837\u5bf9\u4e8e\u5b9e\u73b0\u7b80\u5355\u7684\u5b57\u6bcd\u7f16\u7801\u6216\u89e3\u7801\u975e\u5e38\u6709\u7528\u3002 -'A' \uff1a\u5b57\u7b26\u5230\u5b57\u6bcd\u8868\u4f4d\u7f6e\u7684\u8f6c\u6362 \u901a\u8fc7\u5c06\u5b57\u7b26\u51cf\u53bb 'A' \uff0c\u53ef\u4ee5\u5f97\u5230\u5b57\u7b26\u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\uff08\u4ece0\u5f00\u59cb\uff09\u3002\u6bd4\u5982 'C' - 'A' \u7684\u7ed3\u679c\u662f 2 \u3002 \u793a\u4f8b\uff1a\u5b57\u7b26\u5230\u5b57\u6bcd\u8868\u4f4d\u7f6e\u7684\u8f6c\u6362 public class AsciiConversion { public static void main(String[] args) { char letter = 'C'; // 'C' \u7684 ASCII \u503c\u662f 67 int position = letter - 'A'; // 'C' - 'A' = 2 System.out.println(\"\u5b57\u7b26 \" + letter + \" \u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\u662f \" + position); } } \u8f93\u51fa: \u5b57\u7b26 C \u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\u662f 2 +'A' \uff1a\u5b57\u6bcd\u8868\u4f4d\u7f6e\u5230\u5b57\u7b26\u7684\u8f6c\u6362 \u901a\u8fc7\u5c06\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\u52a0\u4e0a 'A' \uff0c\u53ef\u4ee5\u5f97\u5230\u5bf9\u5e94\u7684\u5b57\u7b26\u3002\u6bd4\u5982 2 + 'A' \u7684\u7ed3\u679c\u662f\u5b57\u7b26 'C' \u3002 \u793a\u4f8b\uff1a\u5b57\u6bcd\u8868\u4f4d\u7f6e\u5230\u5b57\u7b26\u7684\u8f6c\u6362 public class AsciiConversion { public static void main(String[] args) { int position = 2; char letter = (char) (position + 'A'); // 2 + 'A' = 'C' System.out.println(\"\u5b57\u6bcd\u8868\u4e2d\u4f4d\u7f6e \" + position + \" \u5bf9\u5e94\u7684\u5b57\u7b26\u662f \" + letter); } } \u8f93\u51fa\uff1a \u5b57\u6bcd\u8868\u4e2d\u4f4d\u7f6e 2 \u5bf9\u5e94\u7684\u5b57\u7b26\u662f C \u7efc\u5408\u8fd0\u7528 +'0' \u548c -'0' \u4ee5\u53ca +'A' \u548c -'A' \u901a\u8fc7\u7ed3\u5408\u4f7f\u7528\u8fd9\u4e9b\u64cd\u4f5c\u7b26\uff0c\u6211\u4eec\u53ef\u4ee5\u7075\u6d3b\u5730\u5728\u5b57\u7b26\u3001\u6570\u5b57\u548c\u5b57\u6bcd\u8868\u4f4d\u7f6e\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e2a\u6570\u5b57\u5b57\u7b26\u8f6c\u6362\u4e3a\u6574\u6570\uff0c\u7136\u540e\u8fdb\u884c\u7b80\u5355\u7684\u8fd0\u7b97\uff0c\u518d\u5c06\u7ed3\u679c\u8f6c\u6362\u56de\u5b57\u7b26\uff1b\u6216\u8005\u5c06\u5b57\u6bcd\u5b57\u7b26\u8f6c\u6362\u4e3a\u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\uff0c\u5e76\u8fdb\u884c\u4e00\u4e9b\u52a0\u5bc6\u64cd\u4f5c\u3002 \u793a\u4f8b\uff1a\u5904\u7406\u5b57\u7b26\u4e32\u4e2d\u7684\u6570\u5b57\u548c\u5b57\u6bcd public class AsciiConversion { public static void main(String[] args) { String str = \"A3C7\"; int sum = 0; for (char ch : str.toCharArray()) { // \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5b57\u7b26\u6570\u7ec4 if (ch >= '0' && ch <= '9') { sum += (ch - '0'); // \u5c06\u6570\u5b57\u5b57\u7b26\u8f6c\u6362\u4e3a\u6574\u6570\u5e76\u6c42\u548c } else if (ch >= 'A' && ch <= 'Z') { int pos = ch - 'A'; // \u5c06\u5b57\u6bcd\u5b57\u7b26\u8f6c\u6362\u4e3a\u5b57\u6bcd\u8868\u4f4d\u7f6e System.out.println(ch + \" \u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\u662f: \" + pos); } } System.out.println(\"\u5b57\u7b26\u4e32 \" + str + \" \u4e2d\u6570\u5b57\u5b57\u7b26\u7684\u548c\u662f: \" + sum); } } \u8f93\u51fa\uff1a A \u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\u662f: 0 C \u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\u662f: 2 \u5b57\u7b26\u4e32 A3C7 \u4e2d\u6570\u5b57\u5b57\u7b26\u7684\u548c\u662f: 10 1.3 ASCII \u4f8b\u9898\u8bb2\u89e3 1.3.1 LC1309: \u89e3\u7801\u5b57\u6bcd\u5230\u6574\u6570\u6620\u5c04 \u9898\u76ee\u63cf\u8ff0\uff1a \u7ed9\u5b9a\u4e00\u4e2a\u52a0\u5bc6\u5b57\u7b26\u4e32 s \uff0c\u5b83\u7531\u6570\u5b57 '0' \u5230 '9' \u3001 '#' \u548c\u5b57\u6bcd\u7ec4\u6210\u3002\u6211\u4eec\u6309\u7167\u4e0b\u8ff0\u89c4\u5219\u89e3\u7801\uff1a 1. \u5b57\u7b26\uff08 '1' - '9' \uff09\u8868\u793a\u6620\u5c04\u5230\u5c0f\u5199\u5b57\u6bcd\uff08 'a' - 'i' \uff09\u3002 2. \u5b57\u7b26\uff08 '10#' - '26#' \uff09\u8868\u793a\u6620\u5c04\u5230\u5c0f\u5199\u5b57\u6bcd\uff08 'j' - 'z' \uff09\u3002 \u8fd4\u56de\u5b57\u7b26\u4e32 s \u89e3\u7801\u540e\u7684\u7ed3\u679c\u3002 \u6ce8\u610f\uff1a - \u8f93\u5165\u53ea\u5305\u542b\u6570\u5b57\u3001\u5b57\u7b26 '#' \u548c\u5c0f\u5199\u5b57\u6bcd\u3002 - \u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u8303\u56f4\u662f [1, 1000] \u3002 \u793a\u4f8b\uff1a \u8f93\u5165\uff1as = \"10#11#12\" \u8f93\u51fa\uff1a\"jkab\" \u601d\u8def \u904d\u5386\u5b57\u7b26\u4e32 \uff1a \u4f7f\u7528\u4e00\u4e2a\u5faa\u73af\u904d\u5386\u5b57\u7b26\u4e32\u7684\u6bcf\u4e2a\u5b57\u7b26\u3002 \u5982\u679c\u5f53\u524d\u5b57\u7b26\u662f\u6570\u5b57\uff0c\u4e14\u5176\u540e\u4e24\u4e2a\u5b57\u7b26\u6784\u6210\u4e00\u4e2a\u6709\u6548\u7684 '#' \u5e8f\u5217\uff08\u5373 10# \u5230 26# \uff09\uff0c\u5219\u63d0\u53d6\u8be5\u6570\u5b57\u5e76\u8f6c\u6362\u4e3a\u76f8\u5e94\u7684\u5b57\u6bcd\u3002 \u5982\u679c\u5f53\u524d\u5b57\u7b26\u662f\u5355\u72ec\u7684\u6570\u5b57\uff0c\u5219\u76f4\u63a5\u8f6c\u6362\u4e3a\u5b57\u6bcd\u3002 \u6784\u5efa\u7ed3\u679c\u5b57\u7b26\u4e32 \uff1a \u5c06\u6bcf\u6b21\u89e3\u7801\u5f97\u5230\u7684\u5b57\u7b26\u62fc\u63a5\u5230\u7ed3\u679c\u5b57\u7b26\u4e32\u4e2d\u3002 \u53c2\u8003\u89e3\u7b54 class Solution { public String freqAlphabets(String s) { // \u7528 StringBuilder \u6765\u5b58\u50a8\u7ed3\u679c StringBuilder result = new StringBuilder(); int n = s.length(); // \u904d\u5386\u5b57\u7b26\u4e32 for (int i = 0; i < n; i++) { // \u68c0\u67e5\u5f53\u524d\u5b57\u7b26\u540e\u9762\u662f\u5426\u6709 '#' if (i + 2 < n && s.charAt(i + 2) == '#') { // \u5904\u7406 '10#' \u5230 '26#' int num = (s.charAt(i) - '0') * 10 + (s.charAt(i + 1) - '0'); // \u8ba1\u7b97\u4e24\u4f4d\u6570 result.append((char)('a' + num - 1)); // \u6620\u5c04\u5230\u5b57\u6bcd i += 2; // \u8df3\u8fc7\u6570\u5b57\u548c '#' } else { // \u5904\u7406\u5355\u4e2a\u6570\u5b57 '1' \u5230 '9' int num = s.charAt(i) - '0'; // \u8f6c\u6362\u4e3a\u6570\u5b57 result.append((char)('a' + num - 1)); // \u6620\u5c04\u5230\u5b57\u6bcd } } return result.toString(); // \u8fd4\u56de\u89e3\u7801\u540e\u7684\u5b57\u7b26\u4e32 } } 1.4 ASCII \u4e3e\u4e00\u53cd\u4e09 1.4.1 LC387 \u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u552f\u4e00\u5b57\u7b26 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u51fa\u73b0\u7684\u5b57\u7b26\uff0c\u5e76\u8fd4\u56de\u5b83\u7684\u7d22\u5f15\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de -1 \u3002 \u89e3\u9898\u601d\u8def \u5b57\u7b26\u9891\u7387\u7edf\u8ba1 \uff1a\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u5927\u5c0f\u4e3a 26 \u7684\u6570\u7ec4\u6765\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u6bcd\u7684\u51fa\u73b0\u6b21\u6570\u3002\u7531\u4e8e\u8f93\u5165\u7684\u5b57\u7b26\u4e3a\u5c0f\u5199\u5b57\u6bcd a \u5230 z \uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5b57\u7b26 ASCII \u503c\u6765\u7d22\u5f15\u3002 \u7b2c\u4e00\u6b21\u904d\u5386 \uff1a\u904d\u5386\u5b57\u7b26\u4e32 s \uff0c\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26\u51fa\u73b0\u7684\u9891\u7387\u3002 \u7b2c\u4e8c\u6b21\u904d\u5386 \uff1a\u518d\u6b21\u904d\u5386\u5b57\u7b26\u4e32 s \uff0c\u6839\u636e\u9891\u7387\u6570\u7ec4\u627e\u5230\u7b2c\u4e00\u4e2a\u51fa\u73b0\u6b21\u6570\u4e3a 1 \u7684\u5b57\u7b26\u3002 Java \u4ee3\u7801\u5b9e\u73b0 class Solution { public int firstUniqChar(String s) { // \u5b9a\u4e49\u5927\u5c0f\u4e3a26\u7684\u6570\u7ec4\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570 int[] count = new int[26]; // \u7b2c\u4e00\u6b21\u904d\u5386\uff1a\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26\u7684\u9891\u7387 for (int i = 0; i < s.length(); i++) { count[s.charAt(i) - 'a']++; } // \u7b2c\u4e8c\u6b21\u904d\u5386\uff1a\u627e\u5230\u7b2c\u4e00\u4e2a\u51fa\u73b0\u6b21\u6570\u4e3a1\u7684\u5b57\u7b26 for (int i = 0; i < s.length(); i++) { if (count[s.charAt(i) - 'a'] == 1) { return i; // \u8fd4\u56de\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u5b57\u7b26\u7684\u7d22\u5f15 } } return -1; // \u6ca1\u6709\u627e\u5230\u4e0d\u91cd\u590d\u7684\u5b57\u7b26\uff0c\u8fd4\u56de-1 } } 1.4.2 LC171 Excel\u8868\u5217\u5e8f\u53f7 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 columnTitle \uff0c\u8868\u793a Excel \u8868\u683c\u4e2d\u7684\u5217\u540d\u3002\u8bf7\u5c06\u5176\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5217\u5e8f\u53f7\u3002 \u4f8b\u5982\uff1a A -> 1 B -> 2 C -> 3 ... Z -> 26 AA -> 27 AB -> 28 ... \u601d\u8def\u5206\u6790 \u904d\u5386\u6bcf\u4e2a\u5b57\u7b26 \uff1a \u4ece\u5de6\u5230\u53f3\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u6bcf\u4e2a\u5b57\u7b26\u90fd\u4ee3\u8868 Excel \u8868\u4e2d\u7684\u4e00\u4f4d\u6570\u3002 \u4f7f\u7528 columnTitle.charAt(i) - 'A' + 1 \uff0c\u5c06\u5b57\u6bcd A \u5230 Z \u8f6c\u6362\u4e3a 1 \u5230 26 \u4e4b\u95f4\u7684\u6570\u503c\u3002 \u7d2f\u79ef\u7ed3\u679c \uff1a \u6bcf\u6b21\u9047\u5230\u4e00\u4e2a\u5b57\u7b26\u65f6\uff0c\u5c06\u4e4b\u524d\u7684\u7ed3\u679c\u4e58\u4ee5 26\uff08\u76f8\u5f53\u4e8e\u5c06\u5f53\u524d\u7684\u6570\u5b57\u63d0\u5347\u4e00\u4f4d\uff09\u540e\u518d\u52a0\u4e0a\u5f53\u524d\u5b57\u7b26\u5bf9\u5e94\u7684\u6570\u503c\u3002 \u4f8b\u5982\uff1a AA -> 1 * 26 + 1 = 27 \uff0c AB -> 1 * 26 + 2 = 28 \u3002 \u8fd4\u56de\u6700\u7ec8\u7ed3\u679c \uff1a \u5f53\u904d\u5386\u7ed3\u675f\u540e\uff0c\u7ed3\u679c\u53d8\u91cf result \u4e2d\u5b58\u50a8\u7684\u5c31\u662f\u5217\u540d\u8f6c\u6362\u6210\u7684\u6570\u5b57\u3002 \u53c2\u8003\u89e3\u7b54\uff1a class Solution { public int titleToNumber(String columnTitle) { int result = 0; // \u904d\u5386\u6bcf\u4e2a\u5b57\u7b26\uff0c\u4ece\u5de6\u5230\u53f3 for (int i = 0; i < columnTitle.length(); i++) { // \u5c06\u5b57\u7b26\u8f6c\u6362\u4e3a\u6570\u5b57\uff0c\u5e76\u7d2f\u52a0\u5230\u7ed3\u679c\u4e2d int charValue = columnTitle.charAt(i) - 'A' + 1; result = result * 26 + charValue; } return result; } } 1.4.3 LC804. \u552f\u4e00\u6469\u65af\u5bc6\u7801\u8bcd \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4 words \uff0c\u5176\u4e2d\u6bcf\u4e2a\u5355\u8bcd\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u3002\u6bcf\u4e2a\u5b57\u6bcd\u53ef\u4ee5\u7528\u6469\u65af\u5bc6\u7801\u8868\u793a\uff0c\u4f8b\u5982\uff1a - 'a' -> \".-\" - 'b' -> \"-...\" - 'c' -> \"-.-.\" - ... \u4f60\u9700\u8981\u5c06\u6bcf\u4e2a\u5355\u8bcd\u8f6c\u6362\u4e3a\u6469\u65af\u5bc6\u7801\u8868\u793a\uff0c\u5e76\u8fd4\u56de\u552f\u4e00\u6469\u65af\u5bc6\u7801\u8bcd\u7684\u4e2a\u6570\u3002 \u601d\u8def\u5206\u6790 \u6469\u65af\u5bc6\u7801\u6620\u5c04 \uff1a \u4f7f\u7528\u4e00\u4e2a\u6570\u7ec4 morseCode \u6765\u5b58\u50a8\u5b57\u6bcd 'a' \u5230 'z' \u7684\u6469\u65af\u5bc6\u7801\u8868\u793a\u3002 \u8f6c\u6362\u5355\u8bcd\u4e3a\u6469\u65af\u5bc6\u7801 \uff1a \u4f7f\u7528 StringBuilder \u6765\u6784\u5efa\u6bcf\u4e2a\u5355\u8bcd\u7684\u6469\u65af\u5bc6\u7801\u8868\u793a\u3002 \u5bf9\u6bcf\u4e2a\u5355\u8bcd\u4e2d\u7684\u5b57\u6bcd\uff0c\u8ba1\u7b97\u5176\u5728\u6469\u65af\u5bc6\u7801\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e ( c - 'a' ) \u5e76\u53d6\u51fa\u76f8\u5e94\u7684\u6469\u65af\u5bc6\u7801\u3002 \u68c0\u67e5\u552f\u4e00\u6027 \uff1a \u4f7f\u7528 ArrayList<String> \u5b58\u50a8\u8f6c\u6362\u540e\u7684\u6469\u65af\u5bc6\u7801\u7ec4\u5408\u3002 \u5728\u63d2\u5165\u6bcf\u4e2a\u6469\u65af\u5bc6\u7801\u7ec4\u5408\u524d\uff0c\u4f7f\u7528 contains \u65b9\u6cd5\u6765\u68c0\u67e5\u8be5\u7ec4\u5408\u662f\u5426\u5df2\u7ecf\u5b58\u5728\u4e8e List \u4e2d\u3002\u5982\u679c\u4e0d\u5b58\u5728\u5219\u6dfb\u52a0\u5230 List \u3002 \u8fd4\u56de\u7ed3\u679c \uff1a ArrayList \u4e2d\u53ea\u5b58\u50a8\u552f\u4e00\u7684\u6469\u65af\u5bc6\u7801\u7ec4\u5408\uff0c\u6700\u7ec8\u8fd4\u56de ArrayList.size() \u5373\u4e3a\u552f\u4e00\u6469\u65af\u5bc6\u7801\u7ec4\u5408\u7684\u6570\u91cf\u3002 \u53c2\u8003\u89e3\u7b54 import java.util.ArrayList; class Solution { public int uniqueMorseRepresentations(String[] words) { // \u6469\u65af\u5bc6\u7801\u8868\uff0c\u5bf9\u5e94\u5b57\u6bcd 'a' \u5230 'z' String[] morseCode = { \".-\", \"-...\", \"-.-.\", \"-..\", \".\", \"..-.\", \"--.\", \"....\", \"..\", \".---\", \"-.-\", \".-..\", \"--\", \"-.\", \"---\", \".--.\", \"--.-\", \".-.\", \"...\", \"-\", \"..-\", \"...-\", \".--\", \"-..-\", \"-.--\", \"--..\" }; // \u4f7f\u7528 ArrayList \u6765\u4fdd\u5b58\u552f\u4e00\u7684\u6469\u65af\u5bc6\u7801\u7ec4\u5408 ArrayList<String> uniqueTransformations = new ArrayList<>(); // \u904d\u5386\u6bcf\u4e2a\u5355\u8bcd for (String word : words) { StringBuilder morseWord = new StringBuilder(); // \u5c06\u5355\u8bcd\u7684\u6bcf\u4e2a\u5b57\u6bcd\u8f6c\u6362\u4e3a\u6469\u65af\u5bc6\u7801 for (char c : word.toCharArray()) { morseWord.append(morseCode[c - 'a']); // \u6839\u636e\u5b57\u6bcd 'a' \u7684\u7d22\u5f15\u627e\u5230\u5bf9\u5e94\u7684\u6469\u65af\u5bc6\u7801 } // \u5c06\u8f6c\u6362\u540e\u7684\u6469\u65af\u5bc6\u7801\u7ec4\u5408\u52a0\u5165\u5230 List \u4e2d\uff0c\u68c0\u67e5\u662f\u5426\u5df2\u7ecf\u5b58\u5728 if (!uniqueTransformations.contains(morseWord.toString())) { uniqueTransformations.add(morseWord.toString()); } } // \u8fd4\u56de List \u4e2d\u552f\u4e00\u6469\u65af\u5bc6\u7801\u7ec4\u5408\u7684\u6570\u91cf return uniqueTransformations.size(); } } 2. \u8fdb\u5236\u8f6c\u6362 2.1 \u6570\u5b57\u8fdb\u5236\u6982\u8ff0 \u4e8c\u8fdb\u5236\uff08Base 2\uff09\uff1a \u4f7f\u7528\u6570\u5b57 0 \u548c 1\u3002\u4f8b\u5982\uff1a 1010 \uff08\u4e8c\u8fdb\u5236\uff09 = 10 \uff08\u5341\u8fdb\u5236\uff09\u3002 \u516b\u8fdb\u5236\uff08Base 8\uff09\uff1a \u4f7f\u7528\u6570\u5b57 0 \u5230 7\u3002\u4f8b\u5982\uff1a 12 \uff08\u516b\u8fdb\u5236\uff09 = 10 \uff08\u5341\u8fdb\u5236\uff09\u3002 \u5341\u8fdb\u5236\uff08Base 10\uff09\uff1a \u6807\u51c6\u6570\u5b57\u7cfb\u7edf\u3002\u4f8b\u5982\uff1a 10 \uff08\u5341\u8fdb\u5236\uff09\u3002 \u5341\u516d\u8fdb\u5236\uff08Base 16\uff09\uff1a \u4f7f\u7528\u6570\u5b57 0-9 \u548c\u5b57\u6bcd A-F\u3002\u4f8b\u5982\uff1a A \uff08\u5341\u516d\u8fdb\u5236\uff09= 10 \uff08\u5341\u8fdb\u5236\uff09\u3002 \u4ee5\u4e0b\u662f\u4ece1\u523010\u7684\u5341\u8fdb\u5236\u6570\u5b57\u5728\u4e8c\u8fdb\u5236\u3001\u516b\u8fdb\u5236\u548c\u5341\u516d\u8fdb\u5236\u4e2d\u7684\u8868\u793a\uff1a \u5341\u8fdb\u5236 (Decimal) \u4e8c\u8fdb\u5236 (Binary) \u516b\u8fdb\u5236 (Octal) \u5341\u516d\u8fdb\u5236 (Hexadecimal) 1 1 1 1 2 10 2 2 3 11 3 3 4 100 4 4 5 101 5 5 6 110 6 6 7 111 7 7 8 1000 10 8 9 1001 11 9 10 1010 12 A \u8fd9\u4e2a\u8868\u683c\u5c55\u793a\u4e86\u5341\u8fdb\u5236\u6570\u5b57\u4ece1\u523010\u7684\u4e8c\u8fdb\u5236\u3001\u516b\u8fdb\u5236\u548c\u5341\u516d\u8fdb\u5236\u8868\u793a\u3002 2.2 \u5341\u8fdb\u5236\u5230\u4e8c\u8fdb\u5236\u7684\u8f6c\u6362 \u624b\u52a8\u65b9\u6cd5\uff1a\u4f7f\u7528\u77ed\u9664\u6cd5 \u6b65\u9aa41 \uff1a\u5c06\u5341\u8fdb\u5236\u6570\u9664\u4ee5 2\u3002 \u6b65\u9aa42 \uff1a\u8bb0\u5f55\u4f59\u6570\u3002 \u6b65\u9aa43 \uff1a\u7528\u5546\u7ee7\u7eed\u9664\u4ee5 2\uff0c\u76f4\u5230\u5546\u4e3a 0\u3002 \u6b65\u9aa44 \uff1a\u4e8c\u8fdb\u5236\u6570\u5373\u4e3a\u9006\u5e8f\u8bfb\u53d6\u7684\u4f59\u6570\u5e8f\u5217\u3002 \u793a\u4f8b\uff1a\u5c06 13 \u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236 13 / 2 = 6 \u4f59 1 6 / 2 = 3 \u4f59 0 3 / 2 = 1 \u4f59 1 1 / 2 = 0 \u4f59 1 \u7ed3\u679c\uff1a 13 (\u5341\u8fdb\u5236) = 1101 (\u4e8c\u8fdb\u5236) \u7528 Java \u5b9e\u73b0\u5341\u8fdb\u5236\u5230\u4e8c\u8fdb\u5236\u7684\u8f6c\u6362 import java.util.Scanner; public class DecimalToBinary { public static void main(String[] args) { StringBuilder ans = new StringBuilder(); // \u7528\u4e8e\u5b58\u50a8\u4e8c\u8fdb\u5236\u7ed3\u679c\u7684\u5b57\u7b26\u4e32 Scanner scanner = new Scanner(System.in); System.out.print(\"Enter a number: \"); int num = scanner.nextInt(); // \u5faa\u73af\u5c06\u6570\u5b57\u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236 while (num > 0) { ans.append(num % 2); // \u8ba1\u7b97\u5f53\u524d\u4f4d\u7684\u4e8c\u8fdb\u5236\u503c\u5e76\u6dfb\u52a0\u5230\u7ed3\u679c\u4e2d num = num / 2; // \u66f4\u65b0 num \u4e3a\u5546 } ans.reverse(); // \u5c06\u7ed3\u679c\u53cd\u8f6c\uff0c\u56e0\u4e3a\u8ba1\u7b97\u7684\u7ed3\u679c\u662f\u9006\u5e8f\u7684 System.out.println(\"Binary: \" + ans); scanner.close(); // \u5173\u95ed Scanner } } \u4ee3\u7801\u89e3\u91ca\uff1a ans.append(num % 2); \uff1a num % 2 \u8ba1\u7b97\u5f53\u524d\u4f4d\u7684\u4e8c\u8fdb\u5236\u503c\u5e76\u5c06\u5176\u6dfb\u52a0\u5230 ans \u7684\u672b\u5c3e\u3002 num = num / 2; \uff1a\u66f4\u65b0 num \u4e3a\u5f53\u524d\u5546\uff0c\u7ee7\u7eed\u4e0b\u4e00\u8f6e\u7684\u9664\u6cd5\u8fd0\u7b97\u3002 ans.reverse(); \uff1a\u53cd\u8f6c StringBuilder \u4e2d\u7684\u5b57\u7b26\u4e32\uff0c\u56e0\u4e3a\u8ba1\u7b97\u5f97\u5230\u7684\u4e8c\u8fdb\u5236\u4f4d\u662f\u9006\u5e8f\u7684\u3002 2.3 \u4e8c\u8fdb\u5236\u5230\u5341\u8fdb\u5236\u7684\u8f6c\u6362 \u624b\u52a8\u65b9\u6cd5\uff1a \u6b65\u9aa41 \uff1a\u5c06\u6bcf\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u4e58\u4ee5 2 \u7684\u76f8\u5e94\u6b21\u65b9\uff08\u4ece\u53f3\u5f80\u5de6\uff0c\u4f4d\u7f6e\u4ece 0 \u5f00\u59cb\uff09\u3002 \u6b65\u9aa42 \uff1a\u5c06\u6240\u6709\u7ed3\u679c\u76f8\u52a0\u3002 \u793a\u4f8b\uff1a\u5c06 1101 \u8f6c\u6362\u4e3a\u5341\u8fdb\u5236 1 * 2^3 + 1 * 2^2 + 0 * 2^1 + 1 * 2^0 = 8 + 4 + 0 + 1 = 13 \u7ed3\u679c\uff1a 1101 (\u4e8c\u8fdb\u5236) = 13 (\u5341\u8fdb\u5236) \u7528 Java \u5b9e\u73b0\u4e8c\u8fdb\u5236\u5230\u5341\u8fdb\u5236\u7684\u8f6c\u6362 import java.util.Scanner; public class BinaryToDecimal { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); System.out.print(\"Enter a number with base of 2: \"); String num = scanner.nextLine(); // \u8bfb\u53d6\u7528\u6237\u8f93\u5165\u7684\u4e8c\u8fdb\u5236\u6570 int ans = 0; // \u5faa\u73af\u904d\u5386\u6bcf\u4e2a\u4e8c\u8fdb\u5236\u4f4d for (char i : num.toCharArray()) { ans = ans * 2 + (i - '0'); // \u5c06\u4e8c\u8fdb\u5236\u6570\u9010\u4f4d\u8f6c\u6362\u4e3a\u5341\u8fdb\u5236 } System.out.println(\"Decimal: \" + ans); scanner.close(); // \u5173\u95ed Scanner } } \u4ee3\u7801\u89e3\u91ca\uff1a for (char i : num.toCharArray()) \uff1a\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5b57\u7b26\u6570\u7ec4\uff0c\u9010\u4e2a\u904d\u5386\u6bcf\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u3002 ans = ans * 2 + (i - '0'); \uff1a i - '0' \u5c06\u5b57\u7b26\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u6574\u6570\u503c\uff0c ans * 2 \u5c06\u524d\u9762\u8ba1\u7b97\u7684\u5341\u8fdb\u5236\u503c\u5de6\u79fb\u4e00\u4f4d\uff0c\u7136\u540e\u52a0\u4e0a\u5f53\u524d\u4f4d\u7684\u503c\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u6a21\u62df\u4e86\u624b\u52a8\u8ba1\u7b97\u7684\u8fc7\u7a0b\u3002 2.4 \u5341\u8fdb\u5236\u5230\u5341\u516d\u8fdb\u5236\u7684\u8f6c\u6362 \u624b\u52a8\u65b9\u6cd5\uff1a \u6b65\u9aa41 \uff1a\u5c06\u5341\u8fdb\u5236\u6570\u9664\u4ee5 16\u3002 \u6b65\u9aa42 \uff1a\u8bb0\u5f55\u4f59\u6570\uff0c\u5982\u679c\u4f59\u6570\u5927\u4e8e 9\uff0c\u5219\u5c06\u5176\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5341\u516d\u8fdb\u5236\u5b57\u7b26\uff08A-F\uff09\u3002 \u6b65\u9aa43 \uff1a\u7528\u5546\u7ee7\u7eed\u9664\u4ee5 16\uff0c\u76f4\u5230\u5546\u4e3a 0\u3002 \u6b65\u9aa44 \uff1a\u5341\u516d\u8fdb\u5236\u6570\u5373\u4e3a\u9006\u5e8f\u8bfb\u53d6\u7684\u4f59\u6570\u5e8f\u5217\u3002 \u793a\u4f8b\uff1a\u5c06 479 \u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236 479 / 16 = 29 \u4f59 F 29 / 16 = 1 \u4f59 D 1 / 16 = 0 \u4f59 1 \u7ed3\u679c\uff1a 479 (\u5341\u8fdb\u5236) = 1DF (\u5341\u516d\u8fdb\u5236) \u7528 Java \u5b9e\u73b0\u5341\u8fdb\u5236\u5230\u5341\u516d\u8fdb\u5236\u7684\u8f6c\u6362 public class DecimalToHexadecimal { public static String decToHex(int num) { StringBuilder result = new StringBuilder(); // \u7528\u4e8e\u5b58\u50a8\u5341\u516d\u8fdb\u5236\u7ed3\u679c\u7684\u5b57\u7b26\u4e32 // \u5faa\u73af\u5c06\u6570\u5b57\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236 while (num != 0) { int remainder = num % 16; // \u8ba1\u7b97\u5f53\u524d\u4f4d\u7684\u5341\u516d\u8fdb\u5236\u503c // \u6839\u636e\u4f59\u6570\u5927\u5c0f\u51b3\u5b9a\u662f\u6570\u5b57\u8fd8\u662f\u5b57\u7b26 if (remainder >= 10) { result.append((char) (remainder - 10 + 'A')); // \u4f59\u6570\u5728 10-15 \u4e4b\u95f4\uff0c\u8f6c\u6362\u4e3a 'A'-'F' } else { result.append((char) (remainder + '0')); // \u4f59\u6570\u5728 0-9 \u4e4b\u95f4\uff0c\u8f6c\u6362\u4e3a\u5b57\u7b26 '0'-'9' } num = num / 16; // \u66f4\u65b0 num \u4e3a\u5546 } result.reverse(); // \u5c06\u7ed3\u679c\u53cd\u8f6c\uff0c\u56e0\u4e3a\u8ba1\u7b97\u7684\u7ed3\u679c\u662f\u9006\u5e8f\u7684 return result.toString(); // \u8fd4\u56de\u7ed3\u679c\u5b57\u7b26\u4e32 } public static void main(String[] args) { int number = 479; System.out.println(\"Decimal: \" + number + \" -> Hexadecimal: \" + decToHex(number)); } } \u4ee3\u7801\u89e3\u91ca\uff1a int remainder = num % 16; \uff1a\u8ba1\u7b97\u5f53\u524d\u4f4d\u7684\u5341\u516d\u8fdb\u5236\u503c\u3002 result.append((char) (remainder - 10 + 'A')); \uff1a\u5982\u679c\u4f59\u6570\u5927\u4e8e\u6216\u7b49\u4e8e10\uff0c\u5c06\u5176\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5b57\u6bcdA-F\u3002 result.append((char) (remainder + '0')); \uff1a\u5982\u679c\u4f59\u6570\u5c0f\u4e8e10\uff0c\u5219\u76f4\u63a5\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5b57\u7b260-9\u3002 result.reverse(); \uff1a\u53cd\u8f6c StringBuilder \u4e2d\u7684\u5b57\u7b26\u4e32\uff0c\u56e0\u4e3a\u8ba1\u7b97\u5f97\u5230\u7684\u5341\u516d\u8fdb\u5236\u4f4d\u662f\u9006\u5e8f\u7684\u3002 2.5 \u4e8c\u8fdb\u5236\u5230\u5341\u516d\u8fdb\u5236\u7684\u8f6c\u6362 \u624b\u52a8\u65b9\u6cd5\uff1a \u4e8c\u8fdb\u5236\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236\u7684\u65b9\u6cd5\u662f\u5c06\u4e8c\u8fdb\u5236\u6570\u6bcf4\u4f4d\u5206\u4e3a\u4e00\u7ec4\uff0c\u7136\u540e\u5c06\u6bcf\u7ec4\u7684\u4e8c\u8fdb\u5236\u6570\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5341\u516d\u8fdb\u5236\u6570\u3002\u56e0\u4e3a\u5341\u516d\u8fdb\u5236\u662f\u4ee54\u4f4d\u4e8c\u8fdb\u5236\u4e3a\u57fa\u7840\u7684\uff0c\u6240\u4ee5\u8fd9\u4e2a\u8fc7\u7a0b\u975e\u5e38\u76f4\u63a5\u3002 \u6b65\u9aa4\uff1a \u4ece\u53f3\u5230\u5de6\uff0c\u5c06\u4e8c\u8fdb\u5236\u6570\u6bcf4\u4f4d\u5206\u4e3a\u4e00\u7ec4\u3002\u5982\u679c\u4e0d\u8db34\u4f4d\uff0c\u5219\u5728\u5de6\u4fa7\u8865\u96f6\u3002 \u5c06\u6bcf\u7ec4\u4e8c\u8fdb\u5236\u6570\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5341\u516d\u8fdb\u5236\u6570\u3002 \u5c06\u8f6c\u6362\u540e\u7684\u5341\u516d\u8fdb\u5236\u6570\u8fde\u63a5\u8d77\u6765\uff0c\u5f97\u5230\u6700\u7ec8\u7ed3\u679c\u3002 \u793a\u4f8b\uff1a\u5c06\u4e8c\u8fdb\u5236 110111101 \u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236 \u6b65\u9aa4\uff1a 1. \u5c06 110111101 \u5206\u4e3a 1101 \u548c 1110 \uff0c\u4e0d\u8db34\u4f4d\u7684\u5de6\u4fa7\u8865\u96f6\uff1a 0110 1110 1101 2. \u5c06\u6bcf\u7ec4\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236\uff1a - 0110 \u8f6c\u6362\u4e3a 6 - 1110 \u8f6c\u6362\u4e3a E - 1101 \u8f6c\u6362\u4e3a D 3. \u5c06\u8fd9\u4e9b\u8f6c\u6362\u7ed3\u679c\u8fde\u63a5\u8d77\u6765\uff1a 6ED \u7ed3\u679c\uff1a 110111101 (\u4e8c\u8fdb\u5236) = 6ED (\u5341\u516d\u8fdb\u5236) \u4ee3\u7801\u5b9e\u73b0\u90e8\u5206\u6211\u4eec\u73b0\u5728\u5148\u4e0d\u9700\u8981\u6df1\u5165\u4e86\u89e3\uff0c\u56e0\u4e3a\u6d89\u53ca\u5230\u5176\u4ed6\u7684\u4e00\u4e9b\u51fd\u6570\u548c\u5e93\u7684\u4f7f\u7528\u3002\u5f53\u524d\u6211\u4eec\u4e3b\u8981\u4e13\u6ce8\u4e8e\u7406\u89e3\u624b\u52a8\u65b9\u6cd5\uff0c\u8fd9\u6837\u53ef\u4ee5\u5e2e\u52a9\u66f4\u597d\u5730\u638c\u63e1\u8fdb\u5236\u8f6c\u6362\u7684\u57fa\u7840\u6982\u5ff5\u3002 2.6 \u8fdb\u5236 \u4f8b\u9898\u8bb2\u89e3 2.6.1 LC504 \u4e03\u8fdb\u5236\u6570 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570 num \uff0c\u8fd4\u56de\u5b83\u7684 7 \u8fdb\u5236\u8868\u793a\u5b57\u7b26\u4e32\u3002 \u601d\u8def\u5206\u6790 \u5c06\u4e00\u4e2a\u6574\u6570\u8f6c\u6362\u4e3a7\u8fdb\u5236\u672c\u8d28\u4e0a\u548c\u8f6c\u6362\u4e3a\u4efb\u4f55\u5176\u4ed6\u8fdb\u5236\u7684\u601d\u8def\u4e00\u81f4\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0d\u65ad\u5730\u53d6\u6a21\uff08 % \uff09\u548c\u9664\u6cd5\uff08 / \uff09\u64cd\u4f5c\u6765\u9010\u4f4d\u83b7\u53d67\u8fdb\u5236\u7684\u5404\u4f4d\u6570\u5b57\uff0c\u6700\u540e\u5c06\u5176\u53cd\u8f6c\u5373\u53ef\u5f97\u5230\u6700\u7ec8\u7684\u7ed3\u679c\u3002 \u5904\u7406\u8d1f\u6570 \uff1a \u5982\u679c\u8f93\u5165 num \u662f\u8d1f\u6570\uff0c\u5148\u53d6\u5b83\u7684\u7edd\u5bf9\u503c\u8fdb\u884c\u8ba1\u7b97\uff0c\u6700\u540e\u5728\u7ed3\u679c\u524d\u6dfb\u52a0\u8d1f\u53f7\u3002 \u5904\u7406 0 \u7684\u7279\u6b8a\u60c5\u51b5 \uff1a \u5982\u679c num == 0 \uff0c\u76f4\u63a5\u8fd4\u56de \"0\" \u3002 \u53d6\u6a21\u6cd5\u6784\u5efa7\u8fdb\u5236 \uff1a \u6211\u4eec\u4e0d\u65ad\u5c06 num \u9664\u4ee5 7\uff0c\u53d6\u51fa\u4f59\u6570\u4f5c\u4e3a\u5f53\u524d\u4f4d\u76847\u8fdb\u5236\u6570\u5b57\uff0c\u5c06\u5176\u52a0\u5165\u5230\u7ed3\u679c\u5b57\u7b26\u4e32\u4e2d\u3002\u7136\u540e\u5c06 num \u66f4\u65b0\u4e3a num / 7 \uff0c\u76f4\u5230 num \u53d8\u4e3a 0 \u4e3a\u6b62\u3002 \u53cd\u8f6c\u5b57\u7b26\u4e32 \uff1a \u56e0\u4e3a\u6211\u4eec\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\u8ba1\u7b97\uff0c\u6240\u4ee5\u6700\u7ec8\u9700\u8981\u5c06\u5b57\u7b26\u4e32\u53cd\u8f6c\u3002 \u53c2\u8003\u89e3\u7b54 class Solution { public String convertToBase7(int num) { // \u5904\u7406\u8d1f\u6570 boolean isNegative = num < 0; if (isNegative) { num = -num; // \u5c06\u8d1f\u6570\u8f6c\u4e3a\u6b63\u6570 } // \u5904\u74060\u7684\u60c5\u51b5 if (num == 0) { return \"0\"; } StringBuilder ans = new StringBuilder(); // \u4f7f\u7528StringBuilder\u6765\u6784\u5efa\u7ed3\u679c\u5b57\u7b26\u4e32 // \u53d6\u6a21\u6cd5\u6784\u5efa7\u8fdb\u5236 while (num > 0) { ans.append(num % 7); // \u53d6\u6a21\u83b7\u53d6\u5f53\u524d\u4f4d\u76847\u8fdb\u5236\u6570\u5b57 num /= 7; // \u66f4\u65b0num\u4e3anum / 7 } // \u5982\u679c\u521d\u59cb\u503c\u662f\u8d1f\u6570\uff0c\u6dfb\u52a0\u8d1f\u53f7 if (isNegative) { ans.append('-'); } // \u53cd\u8f6c\u5b57\u7b26\u4e32\u5e76\u8fd4\u56de\u7ed3\u679c return ans.reverse().toString(); } } 2.7 \u8fdb\u5236 \u4e3e\u4e00\u53cd\u4e09 2.7.1 LC168. Excel\u8868\u5217\u540d\u79f0 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u8fd4\u56de\u5b83\u5728 Excel \u8868\u4e2d\u5bf9\u5e94\u7684\u5217\u6807\u9898\u3002Excel \u5217\u662f\u4ee5 A-Z \u7684\u65b9\u5f0f\u6392\u5217\u7684\uff0c\u4f8b\u5982\uff1a 1 -> A 2 -> B 3 -> C ... 26 -> Z 27 -> AA 28 -> AB ... \u601d\u8def\u5206\u6790 \u8fd9\u662f\u4e00\u4e2a\u5178\u578b\u7684\u8fdb\u5236\u8f6c\u6362\u95ee\u9898\u3002\u9700\u8981\u5c06\u6570\u5b57\u8f6c\u6362\u6210\u4ee5 A-Z \u4e3a\u57fa\u7840\u768426\u8fdb\u5236\u8868\u793a\u6cd5\uff0c\u7c7b\u4f3c\u4e8e\u5341\u8fdb\u5236\u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236\u6216\u5341\u516d\u8fdb\u5236\u3002\u7531\u4e8e Excel \u5217\u7f16\u53f7\u4ece 1 \u5f00\u59cb\uff0c\u800c\u4e0d\u662f\u4ece 0 \u5f00\u59cb\uff0c\u6240\u4ee5\u5728\u8f6c\u6362\u65f6\u9700\u8981\u4e00\u4e9b\u989d\u5916\u7684\u8c03\u6574\u3002 \u4ece 1 \u5f00\u59cb\u768426\u8fdb\u5236\uff1a \u6211\u4eec\u53ef\u4ee5\u5c06 A-Z \u5bf9\u5e94\u7684\u6570\u5b57\u770b\u4f5c\u662f\u4e00\u4e2a\u57fa\u4e8e26\u7684\u8fdb\u5236\u7cfb\u7edf\u3002 \u4f46\u4e0e\u5e38\u89c1\u8fdb\u5236\u4e0d\u540c\u7684\u662f\uff0cExcel \u5217\u7f16\u53f7\u662f\u4ece 1 \u5f00\u59cb\u7684\uff0c\u800c\u4e0d\u662f\u4ece 0 \u5f00\u59cb\uff0c\u56e0\u6b64\u5728\u6bcf\u6b21\u53d6\u4f59\u65f6\u9700\u8981\u505a\u4e00\u4e9b\u8c03\u6574\uff1a\u6bcf\u6b21\u5c06 columnNumber \u51cf\u53bb 1\u3002 \u5904\u7406\u903b\u8f91\uff1a \u4e0d\u65ad\u5c06 columnNumber \u51cf\u53bb1\uff0c\u5e76\u8ba1\u7b97\u51fa\u5bf9\u5e94\u7684\u5b57\u6bcd\u3002 \u6bcf\u6b21\u901a\u8fc7 columnNumber % 26 \u5f97\u5230\u4e00\u4e2a\u5b57\u6bcd\uff0c\u5c06\u5176\u52a0\u5165\u7ed3\u679c\u5b57\u7b26\u4e32\u4e2d\u3002 \u5c06 columnNumber \u9664\u4ee526\uff0c\u7ee7\u7eed\u5904\u7406\u4e0b\u4e00\u4e2a\u6570\u5b57\uff0c\u76f4\u5230 columnNumber \u4e3a 0\u3002 \u53cd\u8f6c\u5b57\u7b26\u4e32\uff1a \u7531\u4e8e\u6211\u4eec\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\u6784\u9020\u5b57\u7b26\u4e32\uff0c\u56e0\u6b64\u6700\u540e\u9700\u8981\u5c06\u7ed3\u679c\u5b57\u7b26\u4e32\u53cd\u8f6c\u3002 \u53c2\u8003\u89e3\u7b54 class Solution { public String convertToTitle(int columnNumber) { StringBuilder result = new StringBuilder(); // \u5904\u7406\u8fdb\u5236\u8f6c\u6362 while (columnNumber > 0) { // \u56e0\u4e3a\u662f\u4ece 1 \u5f00\u59cb\u7684\u5217\uff0c\u6240\u4ee5\u9700\u8981\u5148\u51cf1 columnNumber--; // \u8ba1\u7b97\u5f53\u524d\u4f4d\u5bf9\u5e94\u7684\u5b57\u6bcd char currentChar = (char) ('A' + (columnNumber % 26)); result.append(currentChar); // \u5c06\u5b57\u7b26\u6dfb\u52a0\u5230\u7ed3\u679c\u5b57\u7b26\u4e32\u4e2d // \u51cf\u5c11\u5217\u53f7 columnNumber /= 26; } // \u7531\u4e8e\u6211\u4eec\u662f\u4ece\u4f4e\u4f4d\u5f00\u59cb\u8ba1\u7b97\uff0c\u56e0\u6b64\u9700\u8981\u53cd\u8f6c\u7ed3\u679c return result.reverse().toString(); // \u76f4\u63a5\u53cd\u8f6c\u5e76\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32 } } 2.7.2 LC728 \u81ea\u9664\u6570 \u95ee\u9898\u63cf\u8ff0 \u81ea\u9664\u6570\u662f\u6307\u4e00\u4e2a\u6574\u6570\uff0c\u5b83\u7684\u6bcf\u4e00\u4f4d\u6570\u5b57\u90fd\u80fd\u6574\u9664\u8fd9\u4e2a\u6570\u672c\u8eab\u3002\u7ed9\u5b9a\u4e00\u4e2a\u8303\u56f4 [left, right] \uff0c\u8fd4\u56de\u8be5\u8303\u56f4\u5185\u6240\u6709\u7684\u81ea\u9664\u6570\u3002 \u4e00\u4e2a\u81ea\u9664\u6570\u5fc5\u987b\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a 1. \u8be5\u6570\u4e0d\u80fd\u5305\u542b\u6570\u5b57 0 \u3002 2. \u8be5\u6570\u80fd\u88ab\u5b83\u7684\u6bcf\u4e00\u4f4d\u6570\u5b57\u6574\u9664\u3002 \u601d\u8def\u5206\u6790 \u9010\u4f4d\u68c0\u67e5 \uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u6570\u5b57\uff0c\u5c06\u5176\u6bcf\u4e00\u4f4d\u63d0\u53d6\u51fa\u6765\uff0c\u68c0\u67e5\u8be5\u4f4d\u662f\u5426\u4e3a 0\uff0c\u5e76\u4e14\u80fd\u5426\u6574\u9664\u539f\u6570\u5b57\u3002 \u904d\u5386\u8303\u56f4 \uff1a\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u8303\u56f4 [left, right] \uff0c\u9010\u4e00\u68c0\u67e5\u6bcf\u4e2a\u6570\u5b57\u662f\u5426\u662f\u81ea\u9664\u6570\uff0c\u5982\u679c\u662f\uff0c\u5c06\u5176\u52a0\u5165\u7ed3\u679c\u5217\u8868\u4e2d\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u8fd4\u56de\u5728 [left, right] \u8303\u56f4\u5185\u6240\u6709\u81ea\u9664\u6570\u7684\u5217\u8868\u3002 \u53c2\u8003\u89e3\u7b54 import java.util.ArrayList; class Solution { // \u68c0\u67e5\u4e00\u4e2a\u6570\u5b57\u662f\u5426\u662f\u81ea\u9664\u6570 public boolean isSelfDividing(int num) { int originalNum = num; while (num > 0) { int digit = num % 10; // \u63d0\u53d6\u6570\u5b57\u7684\u6700\u540e\u4e00\u4f4d if (digit == 0 || originalNum % digit != 0) { return false; // \u4efb\u4f55\u4e00\u4f4d\u4e3a0\u6216\u8005\u4e0d\u80fd\u6574\u9664\u539f\u6570\u5b57\uff0c\u5219\u4e0d\u662f\u81ea\u9664\u6570 } num /= 10; // \u53bb\u6389\u6700\u540e\u4e00\u4f4d } return true; // \u6240\u6709\u4f4d\u90fd\u80fd\u6574\u9664\u539f\u6570\u5b57\uff0c\u8bf4\u660e\u662f\u81ea\u9664\u6570 } public ArrayList<Integer> selfDividingNumbers(int left, int right) { ArrayList<Integer> result = new ArrayList<>(); // \u904d\u5386\u8303\u56f4 [left, right]\uff0c\u9010\u4e2a\u68c0\u67e5\u662f\u5426\u4e3a\u81ea\u9664\u6570 for (int i = left; i <= right; i++) { if (isSelfDividing(i)) { result.add(i); // \u5982\u679c\u662f\u81ea\u9664\u6570\uff0c\u52a0\u5165\u7ed3\u679c\u5217\u8868 } } return result; } } 2.7.3 LC693 \u4ea4\u66ff\u4f4d\u4e8c\u8fdb\u5236\u6570 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570 n \uff0c\u68c0\u67e5\u5176\u4e8c\u8fdb\u5236\u8868\u793a\u662f\u5426\u4e3a\u4ea4\u66ff\u4f4d\u4e8c\u8fdb\u5236\u6570\uff0c\u4ea4\u66ff\u4f4d\u4e8c\u8fdb\u5236\u6570\u7684\u5b9a\u4e49\u662f\u5176\u76f8\u90bb\u7684\u4e24\u4e2a\u4f4d\u59cb\u7ec8\u4e0d\u540c\uff0c\u5373\u4e8c\u8fdb\u5236\u4e2d 0 \u548c 1 \u4ea4\u66ff\u51fa\u73b0\u3002 \u601d\u8def\u5206\u6790 \u63d0\u53d6\u6700\u540e\u4e00\u4f4d \uff1a\u4f7f\u7528 n % 2 \u6765\u83b7\u53d6\u6570\u5b57\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u7684\u6700\u540e\u4e00\u4f4d\u3002 % 2 \u7684\u7ed3\u679c\u8981\u4e48\u662f 0\uff08\u8868\u793a\u5076\u6570\u4f4d\uff09\uff0c\u8981\u4e48\u662f 1\uff08\u8868\u793a\u5947\u6570\u4f4d\uff09\u3002 \u9664\u4ee5 2 \uff1a n /= 2 \u64cd\u4f5c\u53ef\u4ee5\u79fb\u9664\u6700\u540e\u4e00\u4f4d\uff0c\u76f8\u5f53\u4e8e\u5411\u53f3\u79fb\u4f4d\u3002 \u6bd4\u8f83\u76f8\u90bb\u4f4d \uff1a\u5728\u5faa\u73af\u4e2d\uff0c\u5f53\u524d\u4f4d currentBit \u548c\u4e0b\u4e00\u4f4d nextBit \u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u53d1\u73b0\u76f8\u90bb\u7684\u4f4d\u76f8\u540c\uff0c\u8fd4\u56de false \u3002 \u66f4\u65b0\u72b6\u6001 \uff1a\u5982\u679c\u76f8\u90bb\u4f4d\u4e0d\u540c\uff0c\u66f4\u65b0 currentBit \u5e76\u7ee7\u7eed\u4e0b\u4e00\u8f6e\u9664\u4ee5 2 \u7684\u64cd\u4f5c\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u5982\u679c\u904d\u5386\u5230\u6700\u540e\u90fd\u6ca1\u6709\u53d1\u73b0\u76f8\u90bb\u4f4d\u76f8\u540c\u7684\u60c5\u51b5\uff0c\u8fd4\u56de true \u3002 \u53c2\u8003\u89e3\u7b54 class Solution { public boolean hasAlternatingBits(int n) { // \u63d0\u53d6\u6700\u540e\u4e00\u4f4d\u6570\u5b57 int currentBit = n % 2; n /= 2; // \u9664\u4ee5 2\uff0c\u7b49\u540c\u4e8e\u53f3\u79fb\u4e00\u4f4d while (n > 0) { int nextBit = n % 2; // \u63d0\u53d6\u65b0\u7684\u6700\u540e\u4e00\u4f4d if (nextBit == currentBit) { return false; // \u5982\u679c\u76f8\u90bb\u7684\u4e24\u4f4d\u76f8\u540c\uff0c\u8fd4\u56de false } currentBit = nextBit; // \u66f4\u65b0\u5f53\u524d\u4f4d n /= 2; // \u518d\u6b21\u9664\u4ee5 2 } return true; // \u5982\u679c\u6ca1\u6709\u53d1\u73b0\u76f8\u90bb\u76f8\u540c\u7684\u4f4d\uff0c\u8fd4\u56de true } } 3. \u8bfe\u540e\u7ec3\u4e60 ASCII \u76f8\u5173\u95ee\u9898 \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC405 \u6570\u5b57\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236\u6570 \u5c06\u4e00\u4e2a\u6574\u6570\u8f6c\u6362\u4e3a\u5176 16 \u8fdb\u5236\u8868\u793a\u3002 LC806 \u5199\u5b57\u7b26\u4e32\u9700\u8981\u7684\u884c\u6570 \u7ed9\u5b9a\u82e5\u5e72\u884c\u5b57\u7b26\u4e32\uff0c\u8ba1\u7b97\u5199\u5165\u6240\u9700\u7684\u884c\u6570\u3002 LC2309 \u95f4\u8ddd\u5927\u5c0f\u5199\u7684\u6700\u597d\u82f1\u6587\u5b57\u6bcd \u627e\u5230\u5305\u542b\u5927\u5199\u548c\u5c0f\u5199\u5b57\u6bcd\u7684\u6700\u5927\u82f1\u6587\u5b57\u6bcd\u3002 LC383 \u8d4e\u91d1\u4fe1 \u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u662f\u5426\u80fd\u7531\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u6784\u6210\u3002 LC389 \u627e\u4e0d\u540c \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u627e\u51fa\u4e00\u4e2a\u5728\u5176\u4e2d\u591a\u51fa\u7684\u5b57\u7b26\u3002 \u8fdb\u5236\u8f6c\u6362\u76f8\u5173\u95ee\u9898 \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC868 \u4e8c\u8fdb\u5236\u95f4\u8ddd \u627e\u5230\u4e8c\u8fdb\u5236\u6570\u4e2d\u6700\u5927\u7684 0 \u548c 1 \u95f4\u7684\u8ddd\u79bb\u3002 LC1317 \u5c06\u6574\u6570\u8f6c\u6362\u4e3a\u4e24\u4e2a\u65e0\u96f6\u6574\u6570\u7684\u548c \u5c06\u4e00\u4e2a\u6574\u6570\u8f6c\u6362\u4e3a\u4e24\u4e2a\u975e\u96f6\u6574\u6570\u4e4b\u548c\u3002 LC1281 \u6574\u6570\u7684\u5404\u4f4d\u79ef\u548c\u4e4b\u5dee \u8fd4\u56de\u4e00\u4e2a\u6574\u6570\u5404\u4f4d\u6570\u5b57\u4e58\u79ef\u4e0e\u548c\u7684\u5dee\u503c\u3002 LC67 \u4e8c\u8fdb\u5236\u6c42\u548c \u7ed9\u5b9a\u4e24\u4e2a\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\u5b83\u4eec\u7684\u548c\uff08\u4ee5\u4e8c\u8fdb\u5236\u8868\u793a\uff09\u3002","title":"Lesson7 ASCII \u8f6c\u6362\u4e0e\u8fdb\u5236\u8f6c\u6362"},{"location":"lesson7/Lesson7%20Java/#lesson7-ascii","text":"","title":"Lesson7 ASCII \u8f6c\u6362\u4e0e\u8fdb\u5236\u8f6c\u6362"},{"location":"lesson7/Lesson7%20Java/#_1","text":"\u7406\u89e3 ASCII 1.1 \u4ec0\u4e48\u662f ASCII 1.2 ASCII \u7684\u5e94\u7528 1.3 ASCII \u4f8b\u9898\u8bb2\u89e3 1.3.1 LC1309 - \u89e3\u7801\u5b57\u6bcd\u5230\u6574\u6570\u6620\u5c04 1.4 ASCII \u4e3e\u4e00\u53cd\u4e09 1.4.1 LC387 - \u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u552f\u4e00\u5b57\u7b26 1.4.2 LC171 - Excel \u8868\u5217\u5e8f\u53f7 1.4.3 LC804 - \u552f\u4e00\u6469\u65af\u5bc6\u7801\u8bcd \u8fdb\u5236\u8f6c\u6362 2.1 \u6570\u5b57\u8fdb\u5236\u6982\u8ff0 2.2 \u5341\u8fdb\u5236\u5230\u4e8c\u8fdb\u5236\u7684\u8f6c\u6362 2.3 \u4e8c\u8fdb\u5236\u5230\u5341\u8fdb\u5236\u7684\u8f6c\u6362 2.4 \u5341\u8fdb\u5236\u5230\u5341\u516d\u8fdb\u5236\u7684\u8f6c\u6362 2.5 \u4e8c\u8fdb\u5236\u5230\u5341\u516d\u8fdb\u5236\u7684\u8f6c\u6362 2.6 \u8fdb\u5236 \u4f8b\u9898\u8bb2\u89e3 2.6.1 LC504 - \u4e03\u8fdb\u5236\u6570 2.7 \u8fdb\u5236 \u4e3e\u4e00\u53cd\u4e09 2.7.1 LC168 - Excel \u8868\u5217\u540d\u79f0 2.7.2 LC728 - \u81ea\u9664\u6570 2.7.3 LC693 - \u4ea4\u66ff\u4f4d\u4e8c\u8fdb\u5236\u6570 \u8bfe\u540e\u7ec3\u4e60","title":"\u76ee\u5f55"},{"location":"lesson7/Lesson7%20Java/#1-ascii","text":"","title":"1. \u7406\u89e3 ASCII"},{"location":"lesson7/Lesson7%20Java/#11-ascii","text":"ASCII\uff08American Standard Code for Information Interchange\uff0c\u7f8e\u56fd\u4fe1\u606f\u4ea4\u6362\u6807\u51c6\u4ee3\u7801\uff09\u662f\u4e00\u79cd\u5b57\u7b26\u7f16\u7801\u6807\u51c6\uff0c\u5b83\u4f7f\u7528\u6570\u503c\u6765\u8868\u793a\u5b57\u7b26\u3002\u6bcf\u4e2a\u5b57\u7b26\uff08\u5982\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u7b26\u53f7\u7b49\uff09\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u7684 ASCII \u4ee3\u7801\uff0c\u901a\u5e38\u8303\u56f4\u4ece 0 \u5230 127\u3002 \u8fd9\u4e9b\u503c\u53ef\u4ee5\u7528\u4e8e\u5b57\u7b26\u4e0e\u6570\u5b57\u4e4b\u95f4\u7684\u8f6c\u6362\u3002\u4f8b\u5982\uff0c\u5c06\u5b57\u7b26 '0' \u5230 '9' \u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u6574\u6570\uff0c\u6216\u53cd\u5411\u64cd\u4f5c\u3002","title":"1.1 \u4ec0\u4e48\u662f ASCII\uff1f"},{"location":"lesson7/Lesson7%20Java/#ascii","text":"\u5b57\u7b26 ASCII \u503c \u4e8c\u8fdb\u5236 \u5341\u516d\u8fdb\u5236 'A' 65 01000001 0x41 'a' 97 01100001 0x61 '0' 48 00110000 0x30 ' '\uff08\u7a7a\u683c\uff09 32 00100000 0x20 \u5b8c\u6574ASCII\u8868\u683c\uff1ahttps://www.ascii-code.com/","title":"\u793a\u4f8b ASCII \u8868"},{"location":"lesson7/Lesson7%20Java/#12-ascii","text":"\u5728 Java \u4e2d\uff0c\u6bcf\u4e2a\u5b57\u7b26\u90fd\u4ee5\u5176\u5bf9\u5e94\u7684 ASCII \u503c\u5f62\u5f0f\u5b58\u50a8\u4e3a\u6574\u6570\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5c06\u5b57\u7b26\u89c6\u4e3a\u6574\u6570\u6765\u8f7b\u677e\u5730\u64cd\u4f5c\u5b83\u4eec\u3002 \u901a\u8fc7ASCII\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u5b57\u7b26\u8fdb\u884c\u52a0\u51cf\u8fd0\u7b97\uff0c\u751a\u81f3\u662f\u8f6c\u6362\u3002","title":"1.2 ASCII \u7684\u5e94\u7528"},{"location":"lesson7/Lesson7%20Java/#121-0-0","text":"","title":"1.2.1 \u4f7f\u7528 +'0' \u548c -'0'\u8fdb\u884c\u8f6c\u6362"},{"location":"lesson7/Lesson7%20Java/#-0","text":"\u901a\u8fc7\u5c06\u5b57\u7b26\u51cf\u53bb '0' \uff0c\u53ef\u4ee5\u5f97\u5230\u5bf9\u5e94\u7684\u6574\u6570\u503c\u3002\u6bd4\u5982 '3' - '0' \u7684\u7ed3\u679c\u662f\u6574\u6570 3 \u3002 \u793a\u4f8b\uff1a\u5b57\u7b26\u5230\u6574\u6570\u7684\u8f6c\u6362 public class AsciiConversion { public static void main(String[] args) { char digit = '5'; // '5' \u7684 ASCII \u503c\u662f 53 int num = digit - '0'; // '5' - '0' = 5 System.out.println(\"\u5b57\u7b26 \" + digit + \" \u8f6c\u6362\u4e3a\u6574\u6570\u662f \" + num); } } \u8f93\u51fa: \u5b57\u7b26 5 \u8f6c\u6362\u4e3a\u6574\u6570\u662f 5","title":"-'0'\uff1a\u5b57\u7b26\u5230\u6574\u6570\u7684\u8f6c\u6362"},{"location":"lesson7/Lesson7%20Java/#0","text":"\u901a\u8fc7\u5c06\u6574\u6570\u52a0\u4e0a '0' \uff0c\u53ef\u4ee5\u5f97\u5230\u5bf9\u5e94\u7684\u5b57\u7b26\u3002\u6bd4\u5982 5 + '0' \u7684\u7ed3\u679c\u662f\u5b57\u7b26 '5' \u3002 \u793a\u4f8b\uff1a\u6574\u6570\u5230\u5b57\u7b26\u7684\u8f6c\u6362 public class AsciiConversion { public static void main(String[] args) { int num = 7; char digit = (char) (num + '0'); // 7 + '0' = '7' System.out.println(\"\u6574\u6570 \" + num + \" \u8f6c\u6362\u4e3a\u5b57\u7b26\u662f \" + digit); } } \u8f93\u51fa\uff1a \u6574\u6570 7 \u8f6c\u6362\u4e3a\u5b57\u7b26\u662f 7","title":"+'0'\uff1a\u6574\u6570\u5230\u5b57\u7b26\u7684\u8f6c\u6362"},{"location":"lesson7/Lesson7%20Java/#122-a-a","text":"\u901a\u8fc7\u5728\u5b57\u7b26\u4e0a\u52a0\u4e0a\u6216\u51cf\u53bb\u5b57\u7b26 'A' \uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5b57\u7b26\u4e0e\u5b57\u6bcd\u8868\u7684\u4f4d\u7f6e\u5173\u8054\u8d77\u6765\u3002\u4f8b\u5982\uff0c\u5c06\u5b57\u7b26 'C' \u51cf\u53bb 'A' \u53ef\u4ee5\u5f97\u5230 'C' \u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\uff08\u4ece0\u5f00\u59cb\u8ba1\u6570\uff09\u3002\u8fd9\u6837\u5bf9\u4e8e\u5b9e\u73b0\u7b80\u5355\u7684\u5b57\u6bcd\u7f16\u7801\u6216\u89e3\u7801\u975e\u5e38\u6709\u7528\u3002","title":"1.2.2 \u4f7f\u7528 +'A' \u548c -'A'\u8fdb\u884c\u8f6c\u6362"},{"location":"lesson7/Lesson7%20Java/#-a","text":"\u901a\u8fc7\u5c06\u5b57\u7b26\u51cf\u53bb 'A' \uff0c\u53ef\u4ee5\u5f97\u5230\u5b57\u7b26\u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\uff08\u4ece0\u5f00\u59cb\uff09\u3002\u6bd4\u5982 'C' - 'A' \u7684\u7ed3\u679c\u662f 2 \u3002 \u793a\u4f8b\uff1a\u5b57\u7b26\u5230\u5b57\u6bcd\u8868\u4f4d\u7f6e\u7684\u8f6c\u6362 public class AsciiConversion { public static void main(String[] args) { char letter = 'C'; // 'C' \u7684 ASCII \u503c\u662f 67 int position = letter - 'A'; // 'C' - 'A' = 2 System.out.println(\"\u5b57\u7b26 \" + letter + \" \u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\u662f \" + position); } } \u8f93\u51fa: \u5b57\u7b26 C \u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\u662f 2","title":"-'A'\uff1a\u5b57\u7b26\u5230\u5b57\u6bcd\u8868\u4f4d\u7f6e\u7684\u8f6c\u6362"},{"location":"lesson7/Lesson7%20Java/#a","text":"\u901a\u8fc7\u5c06\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\u52a0\u4e0a 'A' \uff0c\u53ef\u4ee5\u5f97\u5230\u5bf9\u5e94\u7684\u5b57\u7b26\u3002\u6bd4\u5982 2 + 'A' \u7684\u7ed3\u679c\u662f\u5b57\u7b26 'C' \u3002 \u793a\u4f8b\uff1a\u5b57\u6bcd\u8868\u4f4d\u7f6e\u5230\u5b57\u7b26\u7684\u8f6c\u6362 public class AsciiConversion { public static void main(String[] args) { int position = 2; char letter = (char) (position + 'A'); // 2 + 'A' = 'C' System.out.println(\"\u5b57\u6bcd\u8868\u4e2d\u4f4d\u7f6e \" + position + \" \u5bf9\u5e94\u7684\u5b57\u7b26\u662f \" + letter); } } \u8f93\u51fa\uff1a \u5b57\u6bcd\u8868\u4e2d\u4f4d\u7f6e 2 \u5bf9\u5e94\u7684\u5b57\u7b26\u662f C","title":"+'A'\uff1a\u5b57\u6bcd\u8868\u4f4d\u7f6e\u5230\u5b57\u7b26\u7684\u8f6c\u6362"},{"location":"lesson7/Lesson7%20Java/#0-0-a-a","text":"\u901a\u8fc7\u7ed3\u5408\u4f7f\u7528\u8fd9\u4e9b\u64cd\u4f5c\u7b26\uff0c\u6211\u4eec\u53ef\u4ee5\u7075\u6d3b\u5730\u5728\u5b57\u7b26\u3001\u6570\u5b57\u548c\u5b57\u6bcd\u8868\u4f4d\u7f6e\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e2a\u6570\u5b57\u5b57\u7b26\u8f6c\u6362\u4e3a\u6574\u6570\uff0c\u7136\u540e\u8fdb\u884c\u7b80\u5355\u7684\u8fd0\u7b97\uff0c\u518d\u5c06\u7ed3\u679c\u8f6c\u6362\u56de\u5b57\u7b26\uff1b\u6216\u8005\u5c06\u5b57\u6bcd\u5b57\u7b26\u8f6c\u6362\u4e3a\u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\uff0c\u5e76\u8fdb\u884c\u4e00\u4e9b\u52a0\u5bc6\u64cd\u4f5c\u3002 \u793a\u4f8b\uff1a\u5904\u7406\u5b57\u7b26\u4e32\u4e2d\u7684\u6570\u5b57\u548c\u5b57\u6bcd public class AsciiConversion { public static void main(String[] args) { String str = \"A3C7\"; int sum = 0; for (char ch : str.toCharArray()) { // \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5b57\u7b26\u6570\u7ec4 if (ch >= '0' && ch <= '9') { sum += (ch - '0'); // \u5c06\u6570\u5b57\u5b57\u7b26\u8f6c\u6362\u4e3a\u6574\u6570\u5e76\u6c42\u548c } else if (ch >= 'A' && ch <= 'Z') { int pos = ch - 'A'; // \u5c06\u5b57\u6bcd\u5b57\u7b26\u8f6c\u6362\u4e3a\u5b57\u6bcd\u8868\u4f4d\u7f6e System.out.println(ch + \" \u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\u662f: \" + pos); } } System.out.println(\"\u5b57\u7b26\u4e32 \" + str + \" \u4e2d\u6570\u5b57\u5b57\u7b26\u7684\u548c\u662f: \" + sum); } } \u8f93\u51fa\uff1a A \u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\u662f: 0 C \u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\u662f: 2 \u5b57\u7b26\u4e32 A3C7 \u4e2d\u6570\u5b57\u5b57\u7b26\u7684\u548c\u662f: 10","title":"\u7efc\u5408\u8fd0\u7528 +'0' \u548c -'0' \u4ee5\u53ca +'A' \u548c -'A'"},{"location":"lesson7/Lesson7%20Java/#13-ascii","text":"","title":"1.3 ASCII \u4f8b\u9898\u8bb2\u89e3"},{"location":"lesson7/Lesson7%20Java/#131-lc1309","text":"","title":"1.3.1 LC1309: \u89e3\u7801\u5b57\u6bcd\u5230\u6574\u6570\u6620\u5c04"},{"location":"lesson7/Lesson7%20Java/#_2","text":"\u7ed9\u5b9a\u4e00\u4e2a\u52a0\u5bc6\u5b57\u7b26\u4e32 s \uff0c\u5b83\u7531\u6570\u5b57 '0' \u5230 '9' \u3001 '#' \u548c\u5b57\u6bcd\u7ec4\u6210\u3002\u6211\u4eec\u6309\u7167\u4e0b\u8ff0\u89c4\u5219\u89e3\u7801\uff1a 1. \u5b57\u7b26\uff08 '1' - '9' \uff09\u8868\u793a\u6620\u5c04\u5230\u5c0f\u5199\u5b57\u6bcd\uff08 'a' - 'i' \uff09\u3002 2. \u5b57\u7b26\uff08 '10#' - '26#' \uff09\u8868\u793a\u6620\u5c04\u5230\u5c0f\u5199\u5b57\u6bcd\uff08 'j' - 'z' \uff09\u3002 \u8fd4\u56de\u5b57\u7b26\u4e32 s \u89e3\u7801\u540e\u7684\u7ed3\u679c\u3002 \u6ce8\u610f\uff1a - \u8f93\u5165\u53ea\u5305\u542b\u6570\u5b57\u3001\u5b57\u7b26 '#' \u548c\u5c0f\u5199\u5b57\u6bcd\u3002 - \u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u8303\u56f4\u662f [1, 1000] \u3002","title":"\u9898\u76ee\u63cf\u8ff0\uff1a"},{"location":"lesson7/Lesson7%20Java/#_3","text":"\u8f93\u5165\uff1as = \"10#11#12\" \u8f93\u51fa\uff1a\"jkab\"","title":"\u793a\u4f8b\uff1a"},{"location":"lesson7/Lesson7%20Java/#_4","text":"\u904d\u5386\u5b57\u7b26\u4e32 \uff1a \u4f7f\u7528\u4e00\u4e2a\u5faa\u73af\u904d\u5386\u5b57\u7b26\u4e32\u7684\u6bcf\u4e2a\u5b57\u7b26\u3002 \u5982\u679c\u5f53\u524d\u5b57\u7b26\u662f\u6570\u5b57\uff0c\u4e14\u5176\u540e\u4e24\u4e2a\u5b57\u7b26\u6784\u6210\u4e00\u4e2a\u6709\u6548\u7684 '#' \u5e8f\u5217\uff08\u5373 10# \u5230 26# \uff09\uff0c\u5219\u63d0\u53d6\u8be5\u6570\u5b57\u5e76\u8f6c\u6362\u4e3a\u76f8\u5e94\u7684\u5b57\u6bcd\u3002 \u5982\u679c\u5f53\u524d\u5b57\u7b26\u662f\u5355\u72ec\u7684\u6570\u5b57\uff0c\u5219\u76f4\u63a5\u8f6c\u6362\u4e3a\u5b57\u6bcd\u3002 \u6784\u5efa\u7ed3\u679c\u5b57\u7b26\u4e32 \uff1a \u5c06\u6bcf\u6b21\u89e3\u7801\u5f97\u5230\u7684\u5b57\u7b26\u62fc\u63a5\u5230\u7ed3\u679c\u5b57\u7b26\u4e32\u4e2d\u3002","title":"\u601d\u8def"},{"location":"lesson7/Lesson7%20Java/#_5","text":"class Solution { public String freqAlphabets(String s) { // \u7528 StringBuilder \u6765\u5b58\u50a8\u7ed3\u679c StringBuilder result = new StringBuilder(); int n = s.length(); // \u904d\u5386\u5b57\u7b26\u4e32 for (int i = 0; i < n; i++) { // \u68c0\u67e5\u5f53\u524d\u5b57\u7b26\u540e\u9762\u662f\u5426\u6709 '#' if (i + 2 < n && s.charAt(i + 2) == '#') { // \u5904\u7406 '10#' \u5230 '26#' int num = (s.charAt(i) - '0') * 10 + (s.charAt(i + 1) - '0'); // \u8ba1\u7b97\u4e24\u4f4d\u6570 result.append((char)('a' + num - 1)); // \u6620\u5c04\u5230\u5b57\u6bcd i += 2; // \u8df3\u8fc7\u6570\u5b57\u548c '#' } else { // \u5904\u7406\u5355\u4e2a\u6570\u5b57 '1' \u5230 '9' int num = s.charAt(i) - '0'; // \u8f6c\u6362\u4e3a\u6570\u5b57 result.append((char)('a' + num - 1)); // \u6620\u5c04\u5230\u5b57\u6bcd } } return result.toString(); // \u8fd4\u56de\u89e3\u7801\u540e\u7684\u5b57\u7b26\u4e32 } }","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson7/Lesson7%20Java/#14-ascii","text":"","title":"1.4 ASCII \u4e3e\u4e00\u53cd\u4e09"},{"location":"lesson7/Lesson7%20Java/#141-lc387","text":"","title":"1.4.1 LC387 \u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u552f\u4e00\u5b57\u7b26"},{"location":"lesson7/Lesson7%20Java/#_6","text":"\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u51fa\u73b0\u7684\u5b57\u7b26\uff0c\u5e76\u8fd4\u56de\u5b83\u7684\u7d22\u5f15\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de -1 \u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson7/Lesson7%20Java/#_7","text":"\u5b57\u7b26\u9891\u7387\u7edf\u8ba1 \uff1a\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u5927\u5c0f\u4e3a 26 \u7684\u6570\u7ec4\u6765\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u6bcd\u7684\u51fa\u73b0\u6b21\u6570\u3002\u7531\u4e8e\u8f93\u5165\u7684\u5b57\u7b26\u4e3a\u5c0f\u5199\u5b57\u6bcd a \u5230 z \uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u5b57\u7b26 ASCII \u503c\u6765\u7d22\u5f15\u3002 \u7b2c\u4e00\u6b21\u904d\u5386 \uff1a\u904d\u5386\u5b57\u7b26\u4e32 s \uff0c\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26\u51fa\u73b0\u7684\u9891\u7387\u3002 \u7b2c\u4e8c\u6b21\u904d\u5386 \uff1a\u518d\u6b21\u904d\u5386\u5b57\u7b26\u4e32 s \uff0c\u6839\u636e\u9891\u7387\u6570\u7ec4\u627e\u5230\u7b2c\u4e00\u4e2a\u51fa\u73b0\u6b21\u6570\u4e3a 1 \u7684\u5b57\u7b26\u3002","title":"\u89e3\u9898\u601d\u8def"},{"location":"lesson7/Lesson7%20Java/#java","text":"class Solution { public int firstUniqChar(String s) { // \u5b9a\u4e49\u5927\u5c0f\u4e3a26\u7684\u6570\u7ec4\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570 int[] count = new int[26]; // \u7b2c\u4e00\u6b21\u904d\u5386\uff1a\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26\u7684\u9891\u7387 for (int i = 0; i < s.length(); i++) { count[s.charAt(i) - 'a']++; } // \u7b2c\u4e8c\u6b21\u904d\u5386\uff1a\u627e\u5230\u7b2c\u4e00\u4e2a\u51fa\u73b0\u6b21\u6570\u4e3a1\u7684\u5b57\u7b26 for (int i = 0; i < s.length(); i++) { if (count[s.charAt(i) - 'a'] == 1) { return i; // \u8fd4\u56de\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u5b57\u7b26\u7684\u7d22\u5f15 } } return -1; // \u6ca1\u6709\u627e\u5230\u4e0d\u91cd\u590d\u7684\u5b57\u7b26\uff0c\u8fd4\u56de-1 } }","title":"Java \u4ee3\u7801\u5b9e\u73b0"},{"location":"lesson7/Lesson7%20Java/#142-lc171-excel","text":"","title":"1.4.2 LC171 Excel\u8868\u5217\u5e8f\u53f7"},{"location":"lesson7/Lesson7%20Java/#_8","text":"\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 columnTitle \uff0c\u8868\u793a Excel \u8868\u683c\u4e2d\u7684\u5217\u540d\u3002\u8bf7\u5c06\u5176\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5217\u5e8f\u53f7\u3002 \u4f8b\u5982\uff1a A -> 1 B -> 2 C -> 3 ... Z -> 26 AA -> 27 AB -> 28 ...","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson7/Lesson7%20Java/#_9","text":"\u904d\u5386\u6bcf\u4e2a\u5b57\u7b26 \uff1a \u4ece\u5de6\u5230\u53f3\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u6bcf\u4e2a\u5b57\u7b26\u90fd\u4ee3\u8868 Excel \u8868\u4e2d\u7684\u4e00\u4f4d\u6570\u3002 \u4f7f\u7528 columnTitle.charAt(i) - 'A' + 1 \uff0c\u5c06\u5b57\u6bcd A \u5230 Z \u8f6c\u6362\u4e3a 1 \u5230 26 \u4e4b\u95f4\u7684\u6570\u503c\u3002 \u7d2f\u79ef\u7ed3\u679c \uff1a \u6bcf\u6b21\u9047\u5230\u4e00\u4e2a\u5b57\u7b26\u65f6\uff0c\u5c06\u4e4b\u524d\u7684\u7ed3\u679c\u4e58\u4ee5 26\uff08\u76f8\u5f53\u4e8e\u5c06\u5f53\u524d\u7684\u6570\u5b57\u63d0\u5347\u4e00\u4f4d\uff09\u540e\u518d\u52a0\u4e0a\u5f53\u524d\u5b57\u7b26\u5bf9\u5e94\u7684\u6570\u503c\u3002 \u4f8b\u5982\uff1a AA -> 1 * 26 + 1 = 27 \uff0c AB -> 1 * 26 + 2 = 28 \u3002 \u8fd4\u56de\u6700\u7ec8\u7ed3\u679c \uff1a \u5f53\u904d\u5386\u7ed3\u675f\u540e\uff0c\u7ed3\u679c\u53d8\u91cf result \u4e2d\u5b58\u50a8\u7684\u5c31\u662f\u5217\u540d\u8f6c\u6362\u6210\u7684\u6570\u5b57\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson7/Lesson7%20Java/#_10","text":"class Solution { public int titleToNumber(String columnTitle) { int result = 0; // \u904d\u5386\u6bcf\u4e2a\u5b57\u7b26\uff0c\u4ece\u5de6\u5230\u53f3 for (int i = 0; i < columnTitle.length(); i++) { // \u5c06\u5b57\u7b26\u8f6c\u6362\u4e3a\u6570\u5b57\uff0c\u5e76\u7d2f\u52a0\u5230\u7ed3\u679c\u4e2d int charValue = columnTitle.charAt(i) - 'A' + 1; result = result * 26 + charValue; } return result; } }","title":"\u53c2\u8003\u89e3\u7b54\uff1a"},{"location":"lesson7/Lesson7%20Java/#143-lc804","text":"","title":"1.4.3 LC804. \u552f\u4e00\u6469\u65af\u5bc6\u7801\u8bcd"},{"location":"lesson7/Lesson7%20Java/#_11","text":"\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4 words \uff0c\u5176\u4e2d\u6bcf\u4e2a\u5355\u8bcd\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u3002\u6bcf\u4e2a\u5b57\u6bcd\u53ef\u4ee5\u7528\u6469\u65af\u5bc6\u7801\u8868\u793a\uff0c\u4f8b\u5982\uff1a - 'a' -> \".-\" - 'b' -> \"-...\" - 'c' -> \"-.-.\" - ... \u4f60\u9700\u8981\u5c06\u6bcf\u4e2a\u5355\u8bcd\u8f6c\u6362\u4e3a\u6469\u65af\u5bc6\u7801\u8868\u793a\uff0c\u5e76\u8fd4\u56de\u552f\u4e00\u6469\u65af\u5bc6\u7801\u8bcd\u7684\u4e2a\u6570\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson7/Lesson7%20Java/#_12","text":"\u6469\u65af\u5bc6\u7801\u6620\u5c04 \uff1a \u4f7f\u7528\u4e00\u4e2a\u6570\u7ec4 morseCode \u6765\u5b58\u50a8\u5b57\u6bcd 'a' \u5230 'z' \u7684\u6469\u65af\u5bc6\u7801\u8868\u793a\u3002 \u8f6c\u6362\u5355\u8bcd\u4e3a\u6469\u65af\u5bc6\u7801 \uff1a \u4f7f\u7528 StringBuilder \u6765\u6784\u5efa\u6bcf\u4e2a\u5355\u8bcd\u7684\u6469\u65af\u5bc6\u7801\u8868\u793a\u3002 \u5bf9\u6bcf\u4e2a\u5355\u8bcd\u4e2d\u7684\u5b57\u6bcd\uff0c\u8ba1\u7b97\u5176\u5728\u6469\u65af\u5bc6\u7801\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e ( c - 'a' ) \u5e76\u53d6\u51fa\u76f8\u5e94\u7684\u6469\u65af\u5bc6\u7801\u3002 \u68c0\u67e5\u552f\u4e00\u6027 \uff1a \u4f7f\u7528 ArrayList<String> \u5b58\u50a8\u8f6c\u6362\u540e\u7684\u6469\u65af\u5bc6\u7801\u7ec4\u5408\u3002 \u5728\u63d2\u5165\u6bcf\u4e2a\u6469\u65af\u5bc6\u7801\u7ec4\u5408\u524d\uff0c\u4f7f\u7528 contains \u65b9\u6cd5\u6765\u68c0\u67e5\u8be5\u7ec4\u5408\u662f\u5426\u5df2\u7ecf\u5b58\u5728\u4e8e List \u4e2d\u3002\u5982\u679c\u4e0d\u5b58\u5728\u5219\u6dfb\u52a0\u5230 List \u3002 \u8fd4\u56de\u7ed3\u679c \uff1a ArrayList \u4e2d\u53ea\u5b58\u50a8\u552f\u4e00\u7684\u6469\u65af\u5bc6\u7801\u7ec4\u5408\uff0c\u6700\u7ec8\u8fd4\u56de ArrayList.size() \u5373\u4e3a\u552f\u4e00\u6469\u65af\u5bc6\u7801\u7ec4\u5408\u7684\u6570\u91cf\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson7/Lesson7%20Java/#_13","text":"import java.util.ArrayList; class Solution { public int uniqueMorseRepresentations(String[] words) { // \u6469\u65af\u5bc6\u7801\u8868\uff0c\u5bf9\u5e94\u5b57\u6bcd 'a' \u5230 'z' String[] morseCode = { \".-\", \"-...\", \"-.-.\", \"-..\", \".\", \"..-.\", \"--.\", \"....\", \"..\", \".---\", \"-.-\", \".-..\", \"--\", \"-.\", \"---\", \".--.\", \"--.-\", \".-.\", \"...\", \"-\", \"..-\", \"...-\", \".--\", \"-..-\", \"-.--\", \"--..\" }; // \u4f7f\u7528 ArrayList \u6765\u4fdd\u5b58\u552f\u4e00\u7684\u6469\u65af\u5bc6\u7801\u7ec4\u5408 ArrayList<String> uniqueTransformations = new ArrayList<>(); // \u904d\u5386\u6bcf\u4e2a\u5355\u8bcd for (String word : words) { StringBuilder morseWord = new StringBuilder(); // \u5c06\u5355\u8bcd\u7684\u6bcf\u4e2a\u5b57\u6bcd\u8f6c\u6362\u4e3a\u6469\u65af\u5bc6\u7801 for (char c : word.toCharArray()) { morseWord.append(morseCode[c - 'a']); // \u6839\u636e\u5b57\u6bcd 'a' \u7684\u7d22\u5f15\u627e\u5230\u5bf9\u5e94\u7684\u6469\u65af\u5bc6\u7801 } // \u5c06\u8f6c\u6362\u540e\u7684\u6469\u65af\u5bc6\u7801\u7ec4\u5408\u52a0\u5165\u5230 List \u4e2d\uff0c\u68c0\u67e5\u662f\u5426\u5df2\u7ecf\u5b58\u5728 if (!uniqueTransformations.contains(morseWord.toString())) { uniqueTransformations.add(morseWord.toString()); } } // \u8fd4\u56de List \u4e2d\u552f\u4e00\u6469\u65af\u5bc6\u7801\u7ec4\u5408\u7684\u6570\u91cf return uniqueTransformations.size(); } }","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson7/Lesson7%20Java/#2","text":"","title":"2. \u8fdb\u5236\u8f6c\u6362"},{"location":"lesson7/Lesson7%20Java/#21","text":"\u4e8c\u8fdb\u5236\uff08Base 2\uff09\uff1a \u4f7f\u7528\u6570\u5b57 0 \u548c 1\u3002\u4f8b\u5982\uff1a 1010 \uff08\u4e8c\u8fdb\u5236\uff09 = 10 \uff08\u5341\u8fdb\u5236\uff09\u3002 \u516b\u8fdb\u5236\uff08Base 8\uff09\uff1a \u4f7f\u7528\u6570\u5b57 0 \u5230 7\u3002\u4f8b\u5982\uff1a 12 \uff08\u516b\u8fdb\u5236\uff09 = 10 \uff08\u5341\u8fdb\u5236\uff09\u3002 \u5341\u8fdb\u5236\uff08Base 10\uff09\uff1a \u6807\u51c6\u6570\u5b57\u7cfb\u7edf\u3002\u4f8b\u5982\uff1a 10 \uff08\u5341\u8fdb\u5236\uff09\u3002 \u5341\u516d\u8fdb\u5236\uff08Base 16\uff09\uff1a \u4f7f\u7528\u6570\u5b57 0-9 \u548c\u5b57\u6bcd A-F\u3002\u4f8b\u5982\uff1a A \uff08\u5341\u516d\u8fdb\u5236\uff09= 10 \uff08\u5341\u8fdb\u5236\uff09\u3002 \u4ee5\u4e0b\u662f\u4ece1\u523010\u7684\u5341\u8fdb\u5236\u6570\u5b57\u5728\u4e8c\u8fdb\u5236\u3001\u516b\u8fdb\u5236\u548c\u5341\u516d\u8fdb\u5236\u4e2d\u7684\u8868\u793a\uff1a \u5341\u8fdb\u5236 (Decimal) \u4e8c\u8fdb\u5236 (Binary) \u516b\u8fdb\u5236 (Octal) \u5341\u516d\u8fdb\u5236 (Hexadecimal) 1 1 1 1 2 10 2 2 3 11 3 3 4 100 4 4 5 101 5 5 6 110 6 6 7 111 7 7 8 1000 10 8 9 1001 11 9 10 1010 12 A \u8fd9\u4e2a\u8868\u683c\u5c55\u793a\u4e86\u5341\u8fdb\u5236\u6570\u5b57\u4ece1\u523010\u7684\u4e8c\u8fdb\u5236\u3001\u516b\u8fdb\u5236\u548c\u5341\u516d\u8fdb\u5236\u8868\u793a\u3002","title":"2.1 \u6570\u5b57\u8fdb\u5236\u6982\u8ff0"},{"location":"lesson7/Lesson7%20Java/#22","text":"","title":"2.2 \u5341\u8fdb\u5236\u5230\u4e8c\u8fdb\u5236\u7684\u8f6c\u6362"},{"location":"lesson7/Lesson7%20Java/#_14","text":"\u6b65\u9aa41 \uff1a\u5c06\u5341\u8fdb\u5236\u6570\u9664\u4ee5 2\u3002 \u6b65\u9aa42 \uff1a\u8bb0\u5f55\u4f59\u6570\u3002 \u6b65\u9aa43 \uff1a\u7528\u5546\u7ee7\u7eed\u9664\u4ee5 2\uff0c\u76f4\u5230\u5546\u4e3a 0\u3002 \u6b65\u9aa44 \uff1a\u4e8c\u8fdb\u5236\u6570\u5373\u4e3a\u9006\u5e8f\u8bfb\u53d6\u7684\u4f59\u6570\u5e8f\u5217\u3002","title":"\u624b\u52a8\u65b9\u6cd5\uff1a\u4f7f\u7528\u77ed\u9664\u6cd5"},{"location":"lesson7/Lesson7%20Java/#13","text":"13 / 2 = 6 \u4f59 1 6 / 2 = 3 \u4f59 0 3 / 2 = 1 \u4f59 1 1 / 2 = 0 \u4f59 1 \u7ed3\u679c\uff1a 13 (\u5341\u8fdb\u5236) = 1101 (\u4e8c\u8fdb\u5236)","title":"\u793a\u4f8b\uff1a\u5c06 13 \u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236"},{"location":"lesson7/Lesson7%20Java/#java_1","text":"import java.util.Scanner; public class DecimalToBinary { public static void main(String[] args) { StringBuilder ans = new StringBuilder(); // \u7528\u4e8e\u5b58\u50a8\u4e8c\u8fdb\u5236\u7ed3\u679c\u7684\u5b57\u7b26\u4e32 Scanner scanner = new Scanner(System.in); System.out.print(\"Enter a number: \"); int num = scanner.nextInt(); // \u5faa\u73af\u5c06\u6570\u5b57\u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236 while (num > 0) { ans.append(num % 2); // \u8ba1\u7b97\u5f53\u524d\u4f4d\u7684\u4e8c\u8fdb\u5236\u503c\u5e76\u6dfb\u52a0\u5230\u7ed3\u679c\u4e2d num = num / 2; // \u66f4\u65b0 num \u4e3a\u5546 } ans.reverse(); // \u5c06\u7ed3\u679c\u53cd\u8f6c\uff0c\u56e0\u4e3a\u8ba1\u7b97\u7684\u7ed3\u679c\u662f\u9006\u5e8f\u7684 System.out.println(\"Binary: \" + ans); scanner.close(); // \u5173\u95ed Scanner } }","title":"\u7528 Java \u5b9e\u73b0\u5341\u8fdb\u5236\u5230\u4e8c\u8fdb\u5236\u7684\u8f6c\u6362"},{"location":"lesson7/Lesson7%20Java/#_15","text":"ans.append(num % 2); \uff1a num % 2 \u8ba1\u7b97\u5f53\u524d\u4f4d\u7684\u4e8c\u8fdb\u5236\u503c\u5e76\u5c06\u5176\u6dfb\u52a0\u5230 ans \u7684\u672b\u5c3e\u3002 num = num / 2; \uff1a\u66f4\u65b0 num \u4e3a\u5f53\u524d\u5546\uff0c\u7ee7\u7eed\u4e0b\u4e00\u8f6e\u7684\u9664\u6cd5\u8fd0\u7b97\u3002 ans.reverse(); \uff1a\u53cd\u8f6c StringBuilder \u4e2d\u7684\u5b57\u7b26\u4e32\uff0c\u56e0\u4e3a\u8ba1\u7b97\u5f97\u5230\u7684\u4e8c\u8fdb\u5236\u4f4d\u662f\u9006\u5e8f\u7684\u3002","title":"\u4ee3\u7801\u89e3\u91ca\uff1a"},{"location":"lesson7/Lesson7%20Java/#23","text":"","title":"2.3 \u4e8c\u8fdb\u5236\u5230\u5341\u8fdb\u5236\u7684\u8f6c\u6362"},{"location":"lesson7/Lesson7%20Java/#_16","text":"\u6b65\u9aa41 \uff1a\u5c06\u6bcf\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u4e58\u4ee5 2 \u7684\u76f8\u5e94\u6b21\u65b9\uff08\u4ece\u53f3\u5f80\u5de6\uff0c\u4f4d\u7f6e\u4ece 0 \u5f00\u59cb\uff09\u3002 \u6b65\u9aa42 \uff1a\u5c06\u6240\u6709\u7ed3\u679c\u76f8\u52a0\u3002","title":"\u624b\u52a8\u65b9\u6cd5\uff1a"},{"location":"lesson7/Lesson7%20Java/#1101","text":"1 * 2^3 + 1 * 2^2 + 0 * 2^1 + 1 * 2^0 = 8 + 4 + 0 + 1 = 13 \u7ed3\u679c\uff1a 1101 (\u4e8c\u8fdb\u5236) = 13 (\u5341\u8fdb\u5236)","title":"\u793a\u4f8b\uff1a\u5c06 1101 \u8f6c\u6362\u4e3a\u5341\u8fdb\u5236"},{"location":"lesson7/Lesson7%20Java/#java_2","text":"import java.util.Scanner; public class BinaryToDecimal { public static void main(String[] args) { Scanner scanner = new Scanner(System.in); System.out.print(\"Enter a number with base of 2: \"); String num = scanner.nextLine(); // \u8bfb\u53d6\u7528\u6237\u8f93\u5165\u7684\u4e8c\u8fdb\u5236\u6570 int ans = 0; // \u5faa\u73af\u904d\u5386\u6bcf\u4e2a\u4e8c\u8fdb\u5236\u4f4d for (char i : num.toCharArray()) { ans = ans * 2 + (i - '0'); // \u5c06\u4e8c\u8fdb\u5236\u6570\u9010\u4f4d\u8f6c\u6362\u4e3a\u5341\u8fdb\u5236 } System.out.println(\"Decimal: \" + ans); scanner.close(); // \u5173\u95ed Scanner } }","title":"\u7528 Java \u5b9e\u73b0\u4e8c\u8fdb\u5236\u5230\u5341\u8fdb\u5236\u7684\u8f6c\u6362"},{"location":"lesson7/Lesson7%20Java/#_17","text":"for (char i : num.toCharArray()) \uff1a\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5b57\u7b26\u6570\u7ec4\uff0c\u9010\u4e2a\u904d\u5386\u6bcf\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u3002 ans = ans * 2 + (i - '0'); \uff1a i - '0' \u5c06\u5b57\u7b26\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u6574\u6570\u503c\uff0c ans * 2 \u5c06\u524d\u9762\u8ba1\u7b97\u7684\u5341\u8fdb\u5236\u503c\u5de6\u79fb\u4e00\u4f4d\uff0c\u7136\u540e\u52a0\u4e0a\u5f53\u524d\u4f4d\u7684\u503c\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u6a21\u62df\u4e86\u624b\u52a8\u8ba1\u7b97\u7684\u8fc7\u7a0b\u3002","title":"\u4ee3\u7801\u89e3\u91ca\uff1a"},{"location":"lesson7/Lesson7%20Java/#24","text":"","title":"2.4 \u5341\u8fdb\u5236\u5230\u5341\u516d\u8fdb\u5236\u7684\u8f6c\u6362"},{"location":"lesson7/Lesson7%20Java/#_18","text":"\u6b65\u9aa41 \uff1a\u5c06\u5341\u8fdb\u5236\u6570\u9664\u4ee5 16\u3002 \u6b65\u9aa42 \uff1a\u8bb0\u5f55\u4f59\u6570\uff0c\u5982\u679c\u4f59\u6570\u5927\u4e8e 9\uff0c\u5219\u5c06\u5176\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5341\u516d\u8fdb\u5236\u5b57\u7b26\uff08A-F\uff09\u3002 \u6b65\u9aa43 \uff1a\u7528\u5546\u7ee7\u7eed\u9664\u4ee5 16\uff0c\u76f4\u5230\u5546\u4e3a 0\u3002 \u6b65\u9aa44 \uff1a\u5341\u516d\u8fdb\u5236\u6570\u5373\u4e3a\u9006\u5e8f\u8bfb\u53d6\u7684\u4f59\u6570\u5e8f\u5217\u3002","title":"\u624b\u52a8\u65b9\u6cd5\uff1a"},{"location":"lesson7/Lesson7%20Java/#479","text":"479 / 16 = 29 \u4f59 F 29 / 16 = 1 \u4f59 D 1 / 16 = 0 \u4f59 1 \u7ed3\u679c\uff1a 479 (\u5341\u8fdb\u5236) = 1DF (\u5341\u516d\u8fdb\u5236)","title":"\u793a\u4f8b\uff1a\u5c06 479 \u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236"},{"location":"lesson7/Lesson7%20Java/#java_3","text":"public class DecimalToHexadecimal { public static String decToHex(int num) { StringBuilder result = new StringBuilder(); // \u7528\u4e8e\u5b58\u50a8\u5341\u516d\u8fdb\u5236\u7ed3\u679c\u7684\u5b57\u7b26\u4e32 // \u5faa\u73af\u5c06\u6570\u5b57\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236 while (num != 0) { int remainder = num % 16; // \u8ba1\u7b97\u5f53\u524d\u4f4d\u7684\u5341\u516d\u8fdb\u5236\u503c // \u6839\u636e\u4f59\u6570\u5927\u5c0f\u51b3\u5b9a\u662f\u6570\u5b57\u8fd8\u662f\u5b57\u7b26 if (remainder >= 10) { result.append((char) (remainder - 10 + 'A')); // \u4f59\u6570\u5728 10-15 \u4e4b\u95f4\uff0c\u8f6c\u6362\u4e3a 'A'-'F' } else { result.append((char) (remainder + '0')); // \u4f59\u6570\u5728 0-9 \u4e4b\u95f4\uff0c\u8f6c\u6362\u4e3a\u5b57\u7b26 '0'-'9' } num = num / 16; // \u66f4\u65b0 num \u4e3a\u5546 } result.reverse(); // \u5c06\u7ed3\u679c\u53cd\u8f6c\uff0c\u56e0\u4e3a\u8ba1\u7b97\u7684\u7ed3\u679c\u662f\u9006\u5e8f\u7684 return result.toString(); // \u8fd4\u56de\u7ed3\u679c\u5b57\u7b26\u4e32 } public static void main(String[] args) { int number = 479; System.out.println(\"Decimal: \" + number + \" -> Hexadecimal: \" + decToHex(number)); } }","title":"\u7528 Java \u5b9e\u73b0\u5341\u8fdb\u5236\u5230\u5341\u516d\u8fdb\u5236\u7684\u8f6c\u6362"},{"location":"lesson7/Lesson7%20Java/#_19","text":"int remainder = num % 16; \uff1a\u8ba1\u7b97\u5f53\u524d\u4f4d\u7684\u5341\u516d\u8fdb\u5236\u503c\u3002 result.append((char) (remainder - 10 + 'A')); \uff1a\u5982\u679c\u4f59\u6570\u5927\u4e8e\u6216\u7b49\u4e8e10\uff0c\u5c06\u5176\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5b57\u6bcdA-F\u3002 result.append((char) (remainder + '0')); \uff1a\u5982\u679c\u4f59\u6570\u5c0f\u4e8e10\uff0c\u5219\u76f4\u63a5\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5b57\u7b260-9\u3002 result.reverse(); \uff1a\u53cd\u8f6c StringBuilder \u4e2d\u7684\u5b57\u7b26\u4e32\uff0c\u56e0\u4e3a\u8ba1\u7b97\u5f97\u5230\u7684\u5341\u516d\u8fdb\u5236\u4f4d\u662f\u9006\u5e8f\u7684\u3002","title":"\u4ee3\u7801\u89e3\u91ca\uff1a"},{"location":"lesson7/Lesson7%20Java/#25","text":"","title":"2.5 \u4e8c\u8fdb\u5236\u5230\u5341\u516d\u8fdb\u5236\u7684\u8f6c\u6362"},{"location":"lesson7/Lesson7%20Java/#_20","text":"\u4e8c\u8fdb\u5236\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236\u7684\u65b9\u6cd5\u662f\u5c06\u4e8c\u8fdb\u5236\u6570\u6bcf4\u4f4d\u5206\u4e3a\u4e00\u7ec4\uff0c\u7136\u540e\u5c06\u6bcf\u7ec4\u7684\u4e8c\u8fdb\u5236\u6570\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5341\u516d\u8fdb\u5236\u6570\u3002\u56e0\u4e3a\u5341\u516d\u8fdb\u5236\u662f\u4ee54\u4f4d\u4e8c\u8fdb\u5236\u4e3a\u57fa\u7840\u7684\uff0c\u6240\u4ee5\u8fd9\u4e2a\u8fc7\u7a0b\u975e\u5e38\u76f4\u63a5\u3002","title":"\u624b\u52a8\u65b9\u6cd5\uff1a"},{"location":"lesson7/Lesson7%20Java/#_21","text":"\u4ece\u53f3\u5230\u5de6\uff0c\u5c06\u4e8c\u8fdb\u5236\u6570\u6bcf4\u4f4d\u5206\u4e3a\u4e00\u7ec4\u3002\u5982\u679c\u4e0d\u8db34\u4f4d\uff0c\u5219\u5728\u5de6\u4fa7\u8865\u96f6\u3002 \u5c06\u6bcf\u7ec4\u4e8c\u8fdb\u5236\u6570\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5341\u516d\u8fdb\u5236\u6570\u3002 \u5c06\u8f6c\u6362\u540e\u7684\u5341\u516d\u8fdb\u5236\u6570\u8fde\u63a5\u8d77\u6765\uff0c\u5f97\u5230\u6700\u7ec8\u7ed3\u679c\u3002","title":"\u6b65\u9aa4\uff1a"},{"location":"lesson7/Lesson7%20Java/#110111101","text":"\u6b65\u9aa4\uff1a 1. \u5c06 110111101 \u5206\u4e3a 1101 \u548c 1110 \uff0c\u4e0d\u8db34\u4f4d\u7684\u5de6\u4fa7\u8865\u96f6\uff1a 0110 1110 1101 2. \u5c06\u6bcf\u7ec4\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236\uff1a - 0110 \u8f6c\u6362\u4e3a 6 - 1110 \u8f6c\u6362\u4e3a E - 1101 \u8f6c\u6362\u4e3a D 3. \u5c06\u8fd9\u4e9b\u8f6c\u6362\u7ed3\u679c\u8fde\u63a5\u8d77\u6765\uff1a 6ED \u7ed3\u679c\uff1a 110111101 (\u4e8c\u8fdb\u5236) = 6ED (\u5341\u516d\u8fdb\u5236) \u4ee3\u7801\u5b9e\u73b0\u90e8\u5206\u6211\u4eec\u73b0\u5728\u5148\u4e0d\u9700\u8981\u6df1\u5165\u4e86\u89e3\uff0c\u56e0\u4e3a\u6d89\u53ca\u5230\u5176\u4ed6\u7684\u4e00\u4e9b\u51fd\u6570\u548c\u5e93\u7684\u4f7f\u7528\u3002\u5f53\u524d\u6211\u4eec\u4e3b\u8981\u4e13\u6ce8\u4e8e\u7406\u89e3\u624b\u52a8\u65b9\u6cd5\uff0c\u8fd9\u6837\u53ef\u4ee5\u5e2e\u52a9\u66f4\u597d\u5730\u638c\u63e1\u8fdb\u5236\u8f6c\u6362\u7684\u57fa\u7840\u6982\u5ff5\u3002","title":"\u793a\u4f8b\uff1a\u5c06\u4e8c\u8fdb\u5236 110111101 \u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236"},{"location":"lesson7/Lesson7%20Java/#26","text":"","title":"2.6 \u8fdb\u5236 \u4f8b\u9898\u8bb2\u89e3"},{"location":"lesson7/Lesson7%20Java/#261-lc504","text":"","title":"2.6.1 LC504 \u4e03\u8fdb\u5236\u6570"},{"location":"lesson7/Lesson7%20Java/#_22","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570 num \uff0c\u8fd4\u56de\u5b83\u7684 7 \u8fdb\u5236\u8868\u793a\u5b57\u7b26\u4e32\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson7/Lesson7%20Java/#_23","text":"\u5c06\u4e00\u4e2a\u6574\u6570\u8f6c\u6362\u4e3a7\u8fdb\u5236\u672c\u8d28\u4e0a\u548c\u8f6c\u6362\u4e3a\u4efb\u4f55\u5176\u4ed6\u8fdb\u5236\u7684\u601d\u8def\u4e00\u81f4\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0d\u65ad\u5730\u53d6\u6a21\uff08 % \uff09\u548c\u9664\u6cd5\uff08 / \uff09\u64cd\u4f5c\u6765\u9010\u4f4d\u83b7\u53d67\u8fdb\u5236\u7684\u5404\u4f4d\u6570\u5b57\uff0c\u6700\u540e\u5c06\u5176\u53cd\u8f6c\u5373\u53ef\u5f97\u5230\u6700\u7ec8\u7684\u7ed3\u679c\u3002 \u5904\u7406\u8d1f\u6570 \uff1a \u5982\u679c\u8f93\u5165 num \u662f\u8d1f\u6570\uff0c\u5148\u53d6\u5b83\u7684\u7edd\u5bf9\u503c\u8fdb\u884c\u8ba1\u7b97\uff0c\u6700\u540e\u5728\u7ed3\u679c\u524d\u6dfb\u52a0\u8d1f\u53f7\u3002 \u5904\u7406 0 \u7684\u7279\u6b8a\u60c5\u51b5 \uff1a \u5982\u679c num == 0 \uff0c\u76f4\u63a5\u8fd4\u56de \"0\" \u3002 \u53d6\u6a21\u6cd5\u6784\u5efa7\u8fdb\u5236 \uff1a \u6211\u4eec\u4e0d\u65ad\u5c06 num \u9664\u4ee5 7\uff0c\u53d6\u51fa\u4f59\u6570\u4f5c\u4e3a\u5f53\u524d\u4f4d\u76847\u8fdb\u5236\u6570\u5b57\uff0c\u5c06\u5176\u52a0\u5165\u5230\u7ed3\u679c\u5b57\u7b26\u4e32\u4e2d\u3002\u7136\u540e\u5c06 num \u66f4\u65b0\u4e3a num / 7 \uff0c\u76f4\u5230 num \u53d8\u4e3a 0 \u4e3a\u6b62\u3002 \u53cd\u8f6c\u5b57\u7b26\u4e32 \uff1a \u56e0\u4e3a\u6211\u4eec\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\u8ba1\u7b97\uff0c\u6240\u4ee5\u6700\u7ec8\u9700\u8981\u5c06\u5b57\u7b26\u4e32\u53cd\u8f6c\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson7/Lesson7%20Java/#_24","text":"class Solution { public String convertToBase7(int num) { // \u5904\u7406\u8d1f\u6570 boolean isNegative = num < 0; if (isNegative) { num = -num; // \u5c06\u8d1f\u6570\u8f6c\u4e3a\u6b63\u6570 } // \u5904\u74060\u7684\u60c5\u51b5 if (num == 0) { return \"0\"; } StringBuilder ans = new StringBuilder(); // \u4f7f\u7528StringBuilder\u6765\u6784\u5efa\u7ed3\u679c\u5b57\u7b26\u4e32 // \u53d6\u6a21\u6cd5\u6784\u5efa7\u8fdb\u5236 while (num > 0) { ans.append(num % 7); // \u53d6\u6a21\u83b7\u53d6\u5f53\u524d\u4f4d\u76847\u8fdb\u5236\u6570\u5b57 num /= 7; // \u66f4\u65b0num\u4e3anum / 7 } // \u5982\u679c\u521d\u59cb\u503c\u662f\u8d1f\u6570\uff0c\u6dfb\u52a0\u8d1f\u53f7 if (isNegative) { ans.append('-'); } // \u53cd\u8f6c\u5b57\u7b26\u4e32\u5e76\u8fd4\u56de\u7ed3\u679c return ans.reverse().toString(); } }","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson7/Lesson7%20Java/#27","text":"","title":"2.7 \u8fdb\u5236 \u4e3e\u4e00\u53cd\u4e09"},{"location":"lesson7/Lesson7%20Java/#271-lc168-excel","text":"","title":"2.7.1 LC168. Excel\u8868\u5217\u540d\u79f0"},{"location":"lesson7/Lesson7%20Java/#_25","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u8fd4\u56de\u5b83\u5728 Excel \u8868\u4e2d\u5bf9\u5e94\u7684\u5217\u6807\u9898\u3002Excel \u5217\u662f\u4ee5 A-Z \u7684\u65b9\u5f0f\u6392\u5217\u7684\uff0c\u4f8b\u5982\uff1a 1 -> A 2 -> B 3 -> C ... 26 -> Z 27 -> AA 28 -> AB ...","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson7/Lesson7%20Java/#_26","text":"\u8fd9\u662f\u4e00\u4e2a\u5178\u578b\u7684\u8fdb\u5236\u8f6c\u6362\u95ee\u9898\u3002\u9700\u8981\u5c06\u6570\u5b57\u8f6c\u6362\u6210\u4ee5 A-Z \u4e3a\u57fa\u7840\u768426\u8fdb\u5236\u8868\u793a\u6cd5\uff0c\u7c7b\u4f3c\u4e8e\u5341\u8fdb\u5236\u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236\u6216\u5341\u516d\u8fdb\u5236\u3002\u7531\u4e8e Excel \u5217\u7f16\u53f7\u4ece 1 \u5f00\u59cb\uff0c\u800c\u4e0d\u662f\u4ece 0 \u5f00\u59cb\uff0c\u6240\u4ee5\u5728\u8f6c\u6362\u65f6\u9700\u8981\u4e00\u4e9b\u989d\u5916\u7684\u8c03\u6574\u3002 \u4ece 1 \u5f00\u59cb\u768426\u8fdb\u5236\uff1a \u6211\u4eec\u53ef\u4ee5\u5c06 A-Z \u5bf9\u5e94\u7684\u6570\u5b57\u770b\u4f5c\u662f\u4e00\u4e2a\u57fa\u4e8e26\u7684\u8fdb\u5236\u7cfb\u7edf\u3002 \u4f46\u4e0e\u5e38\u89c1\u8fdb\u5236\u4e0d\u540c\u7684\u662f\uff0cExcel \u5217\u7f16\u53f7\u662f\u4ece 1 \u5f00\u59cb\u7684\uff0c\u800c\u4e0d\u662f\u4ece 0 \u5f00\u59cb\uff0c\u56e0\u6b64\u5728\u6bcf\u6b21\u53d6\u4f59\u65f6\u9700\u8981\u505a\u4e00\u4e9b\u8c03\u6574\uff1a\u6bcf\u6b21\u5c06 columnNumber \u51cf\u53bb 1\u3002 \u5904\u7406\u903b\u8f91\uff1a \u4e0d\u65ad\u5c06 columnNumber \u51cf\u53bb1\uff0c\u5e76\u8ba1\u7b97\u51fa\u5bf9\u5e94\u7684\u5b57\u6bcd\u3002 \u6bcf\u6b21\u901a\u8fc7 columnNumber % 26 \u5f97\u5230\u4e00\u4e2a\u5b57\u6bcd\uff0c\u5c06\u5176\u52a0\u5165\u7ed3\u679c\u5b57\u7b26\u4e32\u4e2d\u3002 \u5c06 columnNumber \u9664\u4ee526\uff0c\u7ee7\u7eed\u5904\u7406\u4e0b\u4e00\u4e2a\u6570\u5b57\uff0c\u76f4\u5230 columnNumber \u4e3a 0\u3002 \u53cd\u8f6c\u5b57\u7b26\u4e32\uff1a \u7531\u4e8e\u6211\u4eec\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\u6784\u9020\u5b57\u7b26\u4e32\uff0c\u56e0\u6b64\u6700\u540e\u9700\u8981\u5c06\u7ed3\u679c\u5b57\u7b26\u4e32\u53cd\u8f6c\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson7/Lesson7%20Java/#_27","text":"class Solution { public String convertToTitle(int columnNumber) { StringBuilder result = new StringBuilder(); // \u5904\u7406\u8fdb\u5236\u8f6c\u6362 while (columnNumber > 0) { // \u56e0\u4e3a\u662f\u4ece 1 \u5f00\u59cb\u7684\u5217\uff0c\u6240\u4ee5\u9700\u8981\u5148\u51cf1 columnNumber--; // \u8ba1\u7b97\u5f53\u524d\u4f4d\u5bf9\u5e94\u7684\u5b57\u6bcd char currentChar = (char) ('A' + (columnNumber % 26)); result.append(currentChar); // \u5c06\u5b57\u7b26\u6dfb\u52a0\u5230\u7ed3\u679c\u5b57\u7b26\u4e32\u4e2d // \u51cf\u5c11\u5217\u53f7 columnNumber /= 26; } // \u7531\u4e8e\u6211\u4eec\u662f\u4ece\u4f4e\u4f4d\u5f00\u59cb\u8ba1\u7b97\uff0c\u56e0\u6b64\u9700\u8981\u53cd\u8f6c\u7ed3\u679c return result.reverse().toString(); // \u76f4\u63a5\u53cd\u8f6c\u5e76\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32 } }","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson7/Lesson7%20Java/#272-lc728","text":"","title":"2.7.2 LC728 \u81ea\u9664\u6570"},{"location":"lesson7/Lesson7%20Java/#_28","text":"\u81ea\u9664\u6570\u662f\u6307\u4e00\u4e2a\u6574\u6570\uff0c\u5b83\u7684\u6bcf\u4e00\u4f4d\u6570\u5b57\u90fd\u80fd\u6574\u9664\u8fd9\u4e2a\u6570\u672c\u8eab\u3002\u7ed9\u5b9a\u4e00\u4e2a\u8303\u56f4 [left, right] \uff0c\u8fd4\u56de\u8be5\u8303\u56f4\u5185\u6240\u6709\u7684\u81ea\u9664\u6570\u3002 \u4e00\u4e2a\u81ea\u9664\u6570\u5fc5\u987b\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a 1. \u8be5\u6570\u4e0d\u80fd\u5305\u542b\u6570\u5b57 0 \u3002 2. \u8be5\u6570\u80fd\u88ab\u5b83\u7684\u6bcf\u4e00\u4f4d\u6570\u5b57\u6574\u9664\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson7/Lesson7%20Java/#_29","text":"\u9010\u4f4d\u68c0\u67e5 \uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u6570\u5b57\uff0c\u5c06\u5176\u6bcf\u4e00\u4f4d\u63d0\u53d6\u51fa\u6765\uff0c\u68c0\u67e5\u8be5\u4f4d\u662f\u5426\u4e3a 0\uff0c\u5e76\u4e14\u80fd\u5426\u6574\u9664\u539f\u6570\u5b57\u3002 \u904d\u5386\u8303\u56f4 \uff1a\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u8303\u56f4 [left, right] \uff0c\u9010\u4e00\u68c0\u67e5\u6bcf\u4e2a\u6570\u5b57\u662f\u5426\u662f\u81ea\u9664\u6570\uff0c\u5982\u679c\u662f\uff0c\u5c06\u5176\u52a0\u5165\u7ed3\u679c\u5217\u8868\u4e2d\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u8fd4\u56de\u5728 [left, right] \u8303\u56f4\u5185\u6240\u6709\u81ea\u9664\u6570\u7684\u5217\u8868\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson7/Lesson7%20Java/#_30","text":"import java.util.ArrayList; class Solution { // \u68c0\u67e5\u4e00\u4e2a\u6570\u5b57\u662f\u5426\u662f\u81ea\u9664\u6570 public boolean isSelfDividing(int num) { int originalNum = num; while (num > 0) { int digit = num % 10; // \u63d0\u53d6\u6570\u5b57\u7684\u6700\u540e\u4e00\u4f4d if (digit == 0 || originalNum % digit != 0) { return false; // \u4efb\u4f55\u4e00\u4f4d\u4e3a0\u6216\u8005\u4e0d\u80fd\u6574\u9664\u539f\u6570\u5b57\uff0c\u5219\u4e0d\u662f\u81ea\u9664\u6570 } num /= 10; // \u53bb\u6389\u6700\u540e\u4e00\u4f4d } return true; // \u6240\u6709\u4f4d\u90fd\u80fd\u6574\u9664\u539f\u6570\u5b57\uff0c\u8bf4\u660e\u662f\u81ea\u9664\u6570 } public ArrayList<Integer> selfDividingNumbers(int left, int right) { ArrayList<Integer> result = new ArrayList<>(); // \u904d\u5386\u8303\u56f4 [left, right]\uff0c\u9010\u4e2a\u68c0\u67e5\u662f\u5426\u4e3a\u81ea\u9664\u6570 for (int i = left; i <= right; i++) { if (isSelfDividing(i)) { result.add(i); // \u5982\u679c\u662f\u81ea\u9664\u6570\uff0c\u52a0\u5165\u7ed3\u679c\u5217\u8868 } } return result; } }","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson7/Lesson7%20Java/#273-lc693","text":"","title":"2.7.3 LC693 \u4ea4\u66ff\u4f4d\u4e8c\u8fdb\u5236\u6570"},{"location":"lesson7/Lesson7%20Java/#_31","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570 n \uff0c\u68c0\u67e5\u5176\u4e8c\u8fdb\u5236\u8868\u793a\u662f\u5426\u4e3a\u4ea4\u66ff\u4f4d\u4e8c\u8fdb\u5236\u6570\uff0c\u4ea4\u66ff\u4f4d\u4e8c\u8fdb\u5236\u6570\u7684\u5b9a\u4e49\u662f\u5176\u76f8\u90bb\u7684\u4e24\u4e2a\u4f4d\u59cb\u7ec8\u4e0d\u540c\uff0c\u5373\u4e8c\u8fdb\u5236\u4e2d 0 \u548c 1 \u4ea4\u66ff\u51fa\u73b0\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson7/Lesson7%20Java/#_32","text":"\u63d0\u53d6\u6700\u540e\u4e00\u4f4d \uff1a\u4f7f\u7528 n % 2 \u6765\u83b7\u53d6\u6570\u5b57\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u7684\u6700\u540e\u4e00\u4f4d\u3002 % 2 \u7684\u7ed3\u679c\u8981\u4e48\u662f 0\uff08\u8868\u793a\u5076\u6570\u4f4d\uff09\uff0c\u8981\u4e48\u662f 1\uff08\u8868\u793a\u5947\u6570\u4f4d\uff09\u3002 \u9664\u4ee5 2 \uff1a n /= 2 \u64cd\u4f5c\u53ef\u4ee5\u79fb\u9664\u6700\u540e\u4e00\u4f4d\uff0c\u76f8\u5f53\u4e8e\u5411\u53f3\u79fb\u4f4d\u3002 \u6bd4\u8f83\u76f8\u90bb\u4f4d \uff1a\u5728\u5faa\u73af\u4e2d\uff0c\u5f53\u524d\u4f4d currentBit \u548c\u4e0b\u4e00\u4f4d nextBit \u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u53d1\u73b0\u76f8\u90bb\u7684\u4f4d\u76f8\u540c\uff0c\u8fd4\u56de false \u3002 \u66f4\u65b0\u72b6\u6001 \uff1a\u5982\u679c\u76f8\u90bb\u4f4d\u4e0d\u540c\uff0c\u66f4\u65b0 currentBit \u5e76\u7ee7\u7eed\u4e0b\u4e00\u8f6e\u9664\u4ee5 2 \u7684\u64cd\u4f5c\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u5982\u679c\u904d\u5386\u5230\u6700\u540e\u90fd\u6ca1\u6709\u53d1\u73b0\u76f8\u90bb\u4f4d\u76f8\u540c\u7684\u60c5\u51b5\uff0c\u8fd4\u56de true \u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson7/Lesson7%20Java/#_33","text":"class Solution { public boolean hasAlternatingBits(int n) { // \u63d0\u53d6\u6700\u540e\u4e00\u4f4d\u6570\u5b57 int currentBit = n % 2; n /= 2; // \u9664\u4ee5 2\uff0c\u7b49\u540c\u4e8e\u53f3\u79fb\u4e00\u4f4d while (n > 0) { int nextBit = n % 2; // \u63d0\u53d6\u65b0\u7684\u6700\u540e\u4e00\u4f4d if (nextBit == currentBit) { return false; // \u5982\u679c\u76f8\u90bb\u7684\u4e24\u4f4d\u76f8\u540c\uff0c\u8fd4\u56de false } currentBit = nextBit; // \u66f4\u65b0\u5f53\u524d\u4f4d n /= 2; // \u518d\u6b21\u9664\u4ee5 2 } return true; // \u5982\u679c\u6ca1\u6709\u53d1\u73b0\u76f8\u90bb\u76f8\u540c\u7684\u4f4d\uff0c\u8fd4\u56de true } }","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson7/Lesson7%20Java/#3","text":"","title":"3. \u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson7/Lesson7%20Java/#ascii_1","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC405 \u6570\u5b57\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236\u6570 \u5c06\u4e00\u4e2a\u6574\u6570\u8f6c\u6362\u4e3a\u5176 16 \u8fdb\u5236\u8868\u793a\u3002 LC806 \u5199\u5b57\u7b26\u4e32\u9700\u8981\u7684\u884c\u6570 \u7ed9\u5b9a\u82e5\u5e72\u884c\u5b57\u7b26\u4e32\uff0c\u8ba1\u7b97\u5199\u5165\u6240\u9700\u7684\u884c\u6570\u3002 LC2309 \u95f4\u8ddd\u5927\u5c0f\u5199\u7684\u6700\u597d\u82f1\u6587\u5b57\u6bcd \u627e\u5230\u5305\u542b\u5927\u5199\u548c\u5c0f\u5199\u5b57\u6bcd\u7684\u6700\u5927\u82f1\u6587\u5b57\u6bcd\u3002 LC383 \u8d4e\u91d1\u4fe1 \u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u662f\u5426\u80fd\u7531\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u6784\u6210\u3002 LC389 \u627e\u4e0d\u540c \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u627e\u51fa\u4e00\u4e2a\u5728\u5176\u4e2d\u591a\u51fa\u7684\u5b57\u7b26\u3002","title":"ASCII \u76f8\u5173\u95ee\u9898"},{"location":"lesson7/Lesson7%20Java/#_34","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC868 \u4e8c\u8fdb\u5236\u95f4\u8ddd \u627e\u5230\u4e8c\u8fdb\u5236\u6570\u4e2d\u6700\u5927\u7684 0 \u548c 1 \u95f4\u7684\u8ddd\u79bb\u3002 LC1317 \u5c06\u6574\u6570\u8f6c\u6362\u4e3a\u4e24\u4e2a\u65e0\u96f6\u6574\u6570\u7684\u548c \u5c06\u4e00\u4e2a\u6574\u6570\u8f6c\u6362\u4e3a\u4e24\u4e2a\u975e\u96f6\u6574\u6570\u4e4b\u548c\u3002 LC1281 \u6574\u6570\u7684\u5404\u4f4d\u79ef\u548c\u4e4b\u5dee \u8fd4\u56de\u4e00\u4e2a\u6574\u6570\u5404\u4f4d\u6570\u5b57\u4e58\u79ef\u4e0e\u548c\u7684\u5dee\u503c\u3002 LC67 \u4e8c\u8fdb\u5236\u6c42\u548c \u7ed9\u5b9a\u4e24\u4e2a\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\u5b83\u4eec\u7684\u548c\uff08\u4ee5\u4e8c\u8fdb\u5236\u8868\u793a\uff09\u3002","title":"\u8fdb\u5236\u8f6c\u6362\u76f8\u5173\u95ee\u9898"},{"location":"lesson7/Lesson7%20Python/","text":"Lesson 7 Ascii \u8f6c\u6362\u4e0e\u8fdb\u5236\u8f6c\u6362 \u76ee\u5f55 \u7406\u89e3 ASCII 1.1 \u4ec0\u4e48\u662f ASCII 1.2 ASCII \u7684\u5e94\u7528 1.3 ASCII \u4f8b\u9898\u8bb2\u89e3 1.3.1 LC1309 - \u89e3\u7801\u5b57\u6bcd\u5230\u6574\u6570\u6620\u5c04 1.4 ASCII \u4e3e\u4e00\u53cd\u4e09 1.4.1 LC387 - \u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u552f\u4e00\u5b57\u7b26 1.4.2 LC171 - Excel \u8868\u5217\u5e8f\u53f7 1.4.3 LC804 - \u552f\u4e00\u6469\u65af\u5bc6\u7801\u8bcd \u8fdb\u5236\u8f6c\u6362 2.1 \u6570\u5b57\u8fdb\u5236\u6982\u8ff0 2.2 \u5341\u8fdb\u5236\u5230\u4e8c\u8fdb\u5236\u7684\u8f6c\u6362 2.3 \u4e8c\u8fdb\u5236\u5230\u5341\u8fdb\u5236\u7684\u8f6c\u6362 2.4 \u5341\u8fdb\u5236\u5230\u5341\u516d\u8fdb\u5236\u7684\u8f6c\u6362 2.5 \u4e8c\u8fdb\u5236\u5230\u5341\u516d\u8fdb\u5236\u7684\u8f6c\u6362 2.6 \u8fdb\u5236 \u4f8b\u9898\u8bb2\u89e3 2.6.1 LC504 - \u4e03\u8fdb\u5236\u6570 2.7 \u8fdb\u5236 \u4e3e\u4e00\u53cd\u4e09 2.7.1 LC168 - Excel \u8868\u5217\u540d\u79f0 2.7.2 LC728 - \u81ea\u9664\u6570 2.7.3 LC693 - \u4ea4\u66ff\u4f4d\u4e8c\u8fdb\u5236\u6570 \u8bfe\u540e\u7ec3\u4e60 \u5728\u672c\u8bfe\u4e2d\uff0c\u6211\u4eec\u5c06\u63a2\u8ba8\u5b57\u7b26\u5982\u4f55\u901a\u8fc7 ASCII \u503c\u5b58\u50a8\u548c\u5904\u7406\uff0c\u5e76\u5b66\u4e60\u5982\u4f55\u5728\u4e0d\u540c\u7684\u8fdb\u5236\uff08\u5982\u4e8c\u8fdb\u5236\u3001\u516b\u8fdb\u5236\u3001\u5341\u8fdb\u5236\u548c\u5341\u516d\u8fdb\u5236\uff09\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\u3002 1. \u7406\u89e3 ASCII 1.1 \u4ec0\u4e48\u662f ASCII\uff1f ASCII\uff08American Standard Code for Information Interchange\uff0c\u7f8e\u56fd\u4fe1\u606f\u4ea4\u6362\u6807\u51c6\u4ee3\u7801\uff09\u662f\u4e00\u79cd\u5b57\u7b26\u7f16\u7801\u6807\u51c6\uff0c\u5b83\u4f7f\u7528\u6570\u503c\u6765\u8868\u793a\u5b57\u7b26\u3002\u6bcf\u4e2a\u5b57\u7b26\uff08\u5982\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u7b26\u53f7\u7b49\uff09\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u7684 ASCII \u4ee3\u7801\uff0c\u901a\u5e38\u8303\u56f4\u4ece 0 \u5230 127\u3002 \u8fd9\u4e9b\u503c\u53ef\u4ee5\u7528\u4e8e\u5b57\u7b26\u4e0e\u6570\u5b57\u4e4b\u95f4\u7684\u8f6c\u6362\u3002\u4f8b\u5982\uff0c\u5c06\u5b57\u7b26 '0' \u5230 '9' \u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u6574\u6570\uff0c\u6216\u53cd\u5411\u64cd\u4f5c\u3002 \u793a\u4f8b ASCII \u8868 \u5b57\u7b26 ASCII \u503c \u4e8c\u8fdb\u5236 \u5341\u516d\u8fdb\u5236 'A' 65 01000001 0x41 'a' 97 01100001 0x61 '0' 48 00110000 0x30 ' '\uff08\u7a7a\u683c\uff09 32 00100000 0x20 \u5b8c\u6574ASCII\u8868\u683c\uff1ahttps://www.ascii-code.com/ 1.2 ASCII \u7684\u5e94\u7528 \u5728 Python \u4e2d\uff0c\u6bcf\u4e2a\u5b57\u7b26\u90fd\u4ee5\u5176\u5bf9\u5e94\u7684 ASCII \u503c\u5f62\u5f0f\u5b58\u50a8\u4e3a\u6574\u6570\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5c06\u5b57\u7b26\u89c6\u4e3a\u6574\u6570\u6765\u8f7b\u677e\u5730\u64cd\u4f5c\u5b83\u4eec\u3002 \u901a\u8fc7ASCII\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u5b57\u7b26\u8fdb\u884c\u52a0\u51cf\u8fd0\u7b97\uff0c\u751a\u81f3\u662f\u8f6c\u6362\u3002 \u4f7f\u7528+ord(\u20180\u2019)\u548c-ord(\u20180\u2019)\u8fdb\u884c\u8f6c\u6362 -ord('0') \uff1a\u5b57\u7b26\u5230\u6574\u6570\u7684\u8f6c\u6362 \u901a\u8fc7\u5c06\u5b57\u7b26\u51cf\u53bb ord('0') \uff0c\u53ef\u4ee5\u5f97\u5230\u5bf9\u5e94\u7684\u6574\u6570\u503c\u3002\u6bd4\u5982 ord('3') - ord('0') \u7684\u7ed3\u679c\u662f 3 \u3002 \u793a\u4f8b\uff1a\u5b57\u7b26\u5230\u6574\u6570\u7684\u8f6c\u6362 digit = '5' # '5' \u7684 ASCII \u503c\u662f 53 num = ord(digit) - ord('0') # '5' - '0' = 5 print(f\"\u5b57\u7b26 {digit} \u8f6c\u6362\u4e3a\u6574\u6570\u662f {num}\") \u8f93\u51fa\uff1a \u5b57\u7b26 5 \u8f6c\u6362\u4e3a\u6574\u6570\u662f 5 +ord('0') \uff1a\u6574\u6570\u5230\u5b57\u7b26\u7684\u8f6c\u6362 \u901a\u8fc7\u5c06\u6574\u6570\u52a0\u4e0a ord('0') \uff0c\u53ef\u4ee5\u5f97\u5230\u5bf9\u5e94\u7684\u5b57\u7b26\u3002\u6bd4\u5982 5 + ord('0') \u7684\u7ed3\u679c\u662f\u5b57\u7b26 '5' \u3002 \u793a\u4f8b\uff1a\u6574\u6570\u5230\u5b57\u7b26\u7684\u8f6c\u6362 num = 7 digit = chr(num + ord('0')) # 7 + '0' = '7' print(f\"\u6574\u6570 {num} \u8f6c\u6362\u4e3a\u5b57\u7b26\u662f {digit}\") \u8f93\u51fa\uff1a \u6574\u6570 7 \u8f6c\u6362\u4e3a\u5b57\u7b26\u662f 7 \u4f7f\u7528+ord(\u2018A\u2019)\u548c-ord(\u2018A\u2019)\u8fdb\u884c\u8f6c\u6362 \u901a\u8fc7\u5728\u5b57\u7b26\u4e0a\u52a0\u4e0a\u6216\u51cf\u53bb\u5b57\u7b26 ord('A') \uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5b57\u7b26\u4e0e\u5b57\u6bcd\u8868\u7684\u4f4d\u7f6e\u5173\u8054\u8d77\u6765\u3002\u4f8b\u5982\uff0c\u5c06\u5b57\u7b26 'C' \u51cf\u53bb 'A' \u53ef\u4ee5\u5f97\u5230 'C' \u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\uff08\u4ece0\u5f00\u59cb\u8ba1\u6570\uff09\u3002\u8fd9\u5bf9\u4e8e\u5b9e\u73b0\u7b80\u5355\u7684\u5b57\u6bcd\u7f16\u7801\u6216\u89e3\u7801\u975e\u5e38\u6709\u7528\u3002 -ord('A') \uff1a\u5b57\u7b26\u5230\u5b57\u6bcd\u8868\u4f4d\u7f6e\u7684\u8f6c\u6362 \u901a\u8fc7\u5c06\u5b57\u7b26\u51cf\u53bb ord('A') \uff0c\u53ef\u4ee5\u5f97\u5230\u5b57\u7b26\u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\uff08\u4ece0\u5f00\u59cb\uff09\u3002\u6bd4\u5982 ord('C') - ord('A') \u7684\u7ed3\u679c\u662f 2 \u3002 \u793a\u4f8b\uff1a\u5b57\u7b26\u5230\u5b57\u6bcd\u8868\u4f4d\u7f6e\u7684\u8f6c\u6362 letter = 'C' # 'C' \u7684 ASCII \u503c\u662f 67 position = ord(letter) - ord('A') # 'C' - 'A' = 2 print(f\"\u5b57\u7b26 {letter} \u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\u662f {position}\") \u8f93\u51fa\uff1a \u5b57\u7b26 C \u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\u662f 2 +ord('A') \uff1a\u5b57\u6bcd\u8868\u4f4d\u7f6e\u5230\u5b57\u7b26\u7684\u8f6c\u6362 \u901a\u8fc7\u5c06\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\u52a0\u4e0a ord('A') \uff0c\u53ef\u4ee5\u5f97\u5230\u5bf9\u5e94\u7684\u5b57\u7b26\u3002\u6bd4\u5982 2 + ord('A') \u7684\u7ed3\u679c\u662f\u5b57\u7b26 'C' \u3002 \u793a\u4f8b\uff1a\u5b57\u6bcd\u8868\u4f4d\u7f6e\u5230\u5b57\u7b26\u7684\u8f6c\u6362 position = 2 letter = chr(position + ord('A')) # 2 + 'A' = 'C' print(f\"\u5b57\u6bcd\u8868\u4e2d\u4f4d\u7f6e {position} \u5bf9\u5e94\u7684\u5b57\u7b26\u662f {letter}\") \u8f93\u51fa\uff1a \u5b57\u6bcd\u8868\u4e2d\u4f4d\u7f6e 2 \u5bf9\u5e94\u7684\u5b57\u7b26\u662f C \u7efc\u5408\u8fd0\u7528 +ord(\u20180\u2019)\u548c -ord(\u20180\u2019)\u4ee5\u53ca+ord(\u2018A\u2019)\u548c-ord(\u2018A\u2019) \u901a\u8fc7\u7ed3\u5408\u4f7f\u7528\u8fd9\u4e9b\u64cd\u4f5c\u7b26\uff0c\u6211\u4eec\u53ef\u4ee5\u7075\u6d3b\u5730\u5728\u5b57\u7b26\u3001\u6570\u5b57\u548c\u5b57\u6bcd\u8868\u4f4d\u7f6e\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e2a\u6570\u5b57\u5b57\u7b26\u8f6c\u6362\u4e3a\u6574\u6570\uff0c\u7136\u540e\u8fdb\u884c\u7b80\u5355\u7684\u8fd0\u7b97\uff0c\u518d\u5c06\u7ed3\u679c\u8f6c\u6362\u56de\u5b57\u7b26\uff1b\u6216\u8005\u5c06\u5b57\u6bcd\u5b57\u7b26\u8f6c\u6362\u4e3a\u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\uff0c\u5e76\u8fdb\u884c\u4e00\u4e9b\u52a0\u5bc6\u64cd\u4f5c\u3002 \u793a\u4f8b\uff1a\u5904\u7406\u5b57\u7b26\u4e32\u4e2d\u7684\u6570\u5b57\u548c\u5b57\u6bcd str_input = \"A3C7\" sum_num = 0 for ch in str_input: if '0' <= ch <= '9': sum_num += (ord(ch) - ord('0')) # \u5c06\u6570\u5b57\u5b57\u7b26\u8f6c\u6362\u4e3a\u6574\u6570\u5e76\u6c42\u548c elif 'A' <= ch <= 'Z': pos = ord(ch) - ord('A') # \u5c06\u5b57\u6bcd\u5b57\u7b26\u8f6c\u6362\u4e3a\u5b57\u6bcd\u8868\u4f4d\u7f6e print(f\"{ch} \u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\u662f: {pos}\") print(f\"\u5b57\u7b26\u4e32 {str_input} \u4e2d\u6570\u5b57\u5b57\u7b26\u7684\u548c\u662f: {sum_num}\") \u8f93\u51fa\uff1a A \u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\u662f: 0 C \u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\u662f: 2 \u5b57\u7b26\u4e32 A3C7 \u4e2d\u6570\u5b57\u5b57\u7b26\u7684\u548c\u662f: 10 1.3 ASCII\u4f8b\u9898\u8bb2\u89e3 1.3.1 LC1309: \u89e3\u7801\u5b57\u6bcd\u5230\u6574\u6570\u6620\u5c04 \u9898\u76ee\u63cf\u8ff0\uff1a \u7ed9\u5b9a\u4e00\u4e2a\u52a0\u5bc6\u5b57\u7b26\u4e32 s \uff0c\u5b83\u7531\u6570\u5b57 '0' \u5230 '9' \u3001 '#' \u548c\u5b57\u6bcd\u7ec4\u6210\u3002\u6211\u4eec\u6309\u7167\u4e0b\u8ff0\u89c4\u5219\u89e3\u7801\uff1a \u5b57\u7b26\uff08 '1' - '9' \uff09\u8868\u793a\u6620\u5c04\u5230\u5c0f\u5199\u5b57\u6bcd\uff08 'a' - 'i' \uff09\u3002 \u5b57\u7b26\uff08 '10#' - '26#' \uff09\u8868\u793a\u6620\u5c04\u5230\u5c0f\u5199\u5b57\u6bcd\uff08 'j' - 'z' \uff09\u3002 \u8fd4\u56de\u5b57\u7b26\u4e32 s \u89e3\u7801\u540e\u7684\u7ed3\u679c\u3002 \u6ce8\u610f\uff1a \u8f93\u5165\u53ea\u5305\u542b\u6570\u5b57\u3001\u5b57\u7b26 '#' \u548c\u5c0f\u5199\u5b57\u6bcd\u3002 \u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u8303\u56f4\u662f [1, 1000] \u3002 \u793a\u4f8b\uff1a \u8f93\u5165\uff1as = \"10#11#12\" \u8f93\u51fa\uff1a\"jkab\" \u63d0\u793a \u51c6\u5907\u4e00\u4e2a\u5217\u8868 mapping \u6765\u5b58\u50a8\u5b57\u6bcd a \u5230 z \u7684\u6620\u5c04\u3002 \u904d\u5386\u5b57\u7b26\u4e32 s \uff1a \u5982\u679c\u5f53\u524d\u5b57\u7b26\u662f\u6570\u5b57\u4e14\u540e\u9762\u6709 '#' \uff0c\u5c31\u5c06\u5f53\u524d\u7684\u6570\u5b57\u548c\u4e0b\u4e00\u4e2a\u6570\u5b57\u62fc\u63a5\u6210\u4e24\u4f4d\u6570\u5b57\uff0c\u7136\u540e\u5c06\u5176\u8f6c\u6362\u4e3a\u5b57\u6bcd\u3002 \u5982\u679c\u5f53\u524d\u5b57\u7b26\u662f\u5355\u72ec\u7684\u6570\u5b57\uff0c\u5219\u76f4\u63a5\u8f6c\u6362\u4e3a\u5b57\u6bcd\u3002 \u6784\u5efa\u89e3\u5bc6\u540e\u7684\u5b57\u7b26\u4e32\u3002 \u53c2\u8003\u7b54\u6848 class Solution: def freqAlphabets(self, s: str) -> str: # \u7528\u4e00\u4e2a\u5217\u8868\u5b58\u50a8\u5b57\u6bcd a-z \u7684\u6620\u5c04 mapping = [chr(i + ord('a')) for i in range(26)] result = [] n = len(s) i = 0 while i < n: if i + 2 < n and s[i + 2] == '#': # \u68c0\u67e5\u662f\u5426\u662f '10#' \u5230 '26#' num = int(s[i:i + 2]) # \u8ba1\u7b97\u4e24\u4f4d\u6570 result.append(mapping[num - 1]) # \u5c06\u5176\u6620\u5c04\u4e3a\u5b57\u6bcd i += 3 # \u8df3\u8fc7\u6570\u5b57\u548c '#' else: # \u5355\u4e2a\u6570\u5b57 '1' \u5230 '9' num = int(s[i]) # \u8f6c\u6362\u6210\u6570\u5b57 result.append(mapping[num - 1]) # \u6620\u5c04\u4e3a\u5b57\u6bcd i += 1 return ''.join(result) # \u5c06\u5217\u8868\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32 \u6784\u5efa\u6620\u5c04\u8868 \uff1amapping = [chr(i + ord('a')) for i in range(26)]\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a mapping \u7684\u5217\u8868\uff0c\u5b83\u5305\u542b\u4e86\u4ece 'a' \u5230 'z' \u7684\u6240\u6709\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u3002\u8fd9\u662f\u901a\u8fc7\u5217\u8868\u63a8\u5bfc\u5f0f\u548c chr \u51fd\u6570\u5b9e\u73b0\u7684\uff0c ord('a') \u8fd4\u56de\u5b57\u7b26 'a' \u7684ASCII\u503c\uff0c\u7136\u540e chr(i + ord('a')) \u8fd4\u56de\u4ece 'a' \u5f00\u59cb\u7684\u7b2c i \u4e2a\u5b57\u6bcd\u3002 \u904d\u5386\u5b57\u7b26\u4e32 \uff1a\u5faa\u73af\u904d\u5386\u52a0\u5bc6\u5b57\u7b26\u4e32 s \u3002 \u5982\u679c\u5f53\u524d\u5b57\u7b26\u540e\u9762\u4e24\u4e2a\u5b57\u7b26\u6784\u6210\u4e00\u4e2a\u6709\u6548\u7684 \"#\" \u5e8f\u5217\uff0c\u63d0\u53d6\u8be5\u5e8f\u5217\uff0c\u8ba1\u7b97\u5bf9\u5e94\u7684\u6570\u5b57\u5e76\u6620\u5c04\u4e3a\u5b57\u6bcd\u3002 \u5982\u679c\u662f\u5355\u4e2a\u6570\u5b57\uff0c\u5219\u76f4\u63a5\u6620\u5c04\u4e3a\u76f8\u5e94\u7684\u5b57\u6bcd\u3002 \u7ed3\u679c\u6784\u5efa \uff1a\u5c06\u89e3\u5bc6\u540e\u7684\u5b57\u7b26\u62fc\u63a5\u5230\u7ed3\u679c\u5b57\u7b26\u4e32\u4e2d\u3002 1.4 ASCII\u4e3e\u4e00\u53cd\u4e09 1.4.1 LC387. \u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u552f\u4e00\u5b57\u7b26 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u51fa\u73b0\u7684\u5b57\u7b26\uff0c\u5e76\u8fd4\u56de\u5b83\u7684\u7d22\u5f15\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de -1 \u3002 \u601d\u8def\u5206\u6790 \u901a\u8fc7 \u5217\u8868 \u6765\u5b9e\u73b0\u5b57\u7b26\u9891\u7387\u7edf\u8ba1\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u5927\u5c0f\u4e3a 26 \u7684\u5217\u8868\u6765\u5b58\u50a8\u6bcf\u4e2a\u5b57\u6bcd\u51fa\u73b0\u7684\u6b21\u6570\u3002 \u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a \u5b57\u7b26\u9891\u7387\u7edf\u8ba1 \uff1a\u4f7f\u7528\u4e00\u4e2a\u5927\u5c0f\u4e3a 26 \u7684\u5217\u8868\u6765\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u6bcd\u7684\u51fa\u73b0\u6b21\u6570\u3002\u901a\u8fc7 ord(s[i]) - ord('a') \u53ef\u4ee5\u786e\u5b9a\u5b57\u6bcd\u5728\u5217\u8868\u4e2d\u7684\u7d22\u5f15\u4f4d\u7f6e\u3002 \u904d\u5386\u5b57\u7b26\u4e32 \uff1a\u5148\u904d\u5386\u4e00\u6b21\u5b57\u7b26\u4e32\uff0c\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\u3002 \u627e\u5230\u7b2c\u4e00\u4e2a\u552f\u4e00\u5b57\u7b26 \uff1a\u518d\u6b21\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u6839\u636e\u7edf\u8ba1\u7ed3\u679c\u627e\u5230\u7b2c\u4e00\u4e2a\u51fa\u73b0\u6b21\u6570\u4e3a 1 \u7684\u5b57\u7b26\u3002 \u53c2\u8003\u89e3\u7b54 class Solution: def firstUniqChar(self, s: str) -> int: # \u5b9a\u4e49\u5927\u5c0f\u4e3a26\u7684\u5217\u8868\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570 count = [0] * 26 # \u7b2c\u4e00\u6b21\u904d\u5386\uff1a\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26\u7684\u9891\u7387 for char in s: count[ord(char) - ord('a')] += 1 # \u7b2c\u4e8c\u6b21\u904d\u5386\uff1a\u627e\u5230\u7b2c\u4e00\u4e2a\u51fa\u73b0\u6b21\u6570\u4e3a1\u7684\u5b57\u7b26 for i, char in enumerate(s): if count[ord(char) - ord('a')] == 1: return i # \u8fd4\u56de\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u5b57\u7b26\u7684\u7d22\u5f15 return -1 # \u6ca1\u6709\u627e\u5230\u4e0d\u91cd\u590d\u7684\u5b57\u7b26\uff0c\u8fd4\u56de-1 \u4ee3\u7801\u8bb2\u89e3 count = [0] * 26 \uff1a\u521d\u59cb\u5316\u4e00\u4e2a\u957f\u5ea6\u4e3a26\u7684\u5217\u8868 count \uff0c\u7528\u4e8e\u8bb0\u5f55\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u6bcf\u4e2a\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570\u3002\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u521d\u59cb\u5316\u4e3a0\u3002 \u7b2c\u4e00\u6b21\u904d\u5386\u5b57\u7b26\u4e32 \uff1a\u5728\u7b2c\u4e00\u6b21\u904d\u5386\u4e2d\uff0c\u4f7f\u7528 ord(char) - ord('a') \u8ba1\u7b97\u5b83\u7684\u7d22\u5f15\uff08\u5176\u4e2d 'a' \u662f\u5b57\u6bcd\u8868\u4e2d\u7684\u8d77\u59cb\u5b57\u6bcd\uff09\uff0c\u7136\u540e\u5728 count \u5217\u8868\u4e2d\u5bf9\u5e94\u7684\u7d22\u5f15\u4f4d\u7f6e\u589e\u52a01\uff0c\u4ee5\u6b64\u6765\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570\u3002 \u7b2c\u4e8c\u6b21\u904d\u5386\u5b57\u7b26\u4e32 \uff1a\u901a\u8fc7\u7b2c\u4e8c\u6b21\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u627e\u51fa\u7b2c\u4e00\u4e2a\u51fa\u73b0\u6b21\u6570\u4e3a 1 \u7684\u5b57\u7b26\uff0c\u5e76\u8fd4\u56de\u8be5\u5b57\u7b26\u7684\u7d22\u5f15\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u5982\u679c\u6ca1\u6709\u627e\u5230\u552f\u4e00\u5b57\u7b26\uff0c\u5219\u8fd4\u56de -1 \u3002 1.4.2 LC171. Excel\u8868\u5217\u5e8f\u53f7 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 columnTitle \uff0c\u8868\u793a Excel \u8868\u683c\u4e2d\u7684\u5217\u540d\u3002\u8bf7\u5c06\u5176\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5217\u5e8f\u53f7\u3002 \u4f8b\u5982\uff1a A -> 1 B -> 2 C -> 3 ... Z -> 26 AA -> 27 AB -> 28 ... \u601d\u8def\u5206\u6790 \u901a\u8fc7 \u8fdb\u5236\u8f6c\u6362 \u7684\u65b9\u6cd5\uff0c\u5c06 Excel \u5217\u540d\u770b\u4f5c\u4e00\u4e2a\u4ee5 26 \u4e3a\u57fa\u6570\u7684\u6570\u5b57\u7cfb\u7edf\uff0c\u6bcf\u4e2a\u5b57\u6bcd\u4ee3\u8868\u4e00\u4e2a\u6570\u5b57\u3002 A \u5230 Z \u5206\u522b\u4ee3\u8868 1 \u5230 26\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5217\u540d\u8f6c\u6362\u6210\u76f8\u5e94\u7684\u6570\u5b57\u3002 \u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a \u5b57\u7b26\u8f6c\u6362\u4e3a\u6570\u5b57 \uff1a\u6bcf\u4e2a\u5b57\u7b26\u4ece A \u5230 Z \u5bf9\u5e94\u7684\u503c\u4e3a 1 \u5230 26 \uff0c\u53ef\u4ee5\u901a\u8fc7 columnTitle[i] - ord('A') + 1 \u5f97\u5230\u5176\u5bf9\u5e94\u7684\u6570\u503c\u3002 \u8fdb\u5236\u8f6c\u6362 \uff1a\u5c06\u5217\u540d\u770b\u4f5c\u662f 26 \u8fdb\u5236\u6570\uff0c\u4ece\u53f3\u5230\u5de6\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u5c06\u6bcf\u4e2a\u5b57\u7b26\u8f6c\u6362\u6210\u6570\u5b57\u5e76\u4e58\u4ee5 26 \u7684\u5e42\u6b21\u7d2f\u52a0\u5230\u7ed3\u679c\u4e2d\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u6700\u7ec8\u7684\u7d2f\u52a0\u7ed3\u679c\u5373\u4e3a Excel \u8868\u683c\u5217\u540d\u5bf9\u5e94\u7684\u5217\u5e8f\u53f7\u3002 class Solution: def titleToNumber(self, columnTitle: str) -> int: result = 0 pow_num = 0 # \u4ece\u53f3\u5230\u5de6\u904d\u5386\u5217\u540d for i in range(len(columnTitle) - 1, -1, -1): # \u5c06\u5b57\u7b26\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u6570\u503c extract_char = ord(columnTitle[i]) - ord('A') + 1 # \u8ba1\u7b97 26 \u7684\u5e42\u6b21\uff0c\u5e76\u7d2f\u52a0\u5230\u7ed3\u679c\u4e2d result += extract_char * (26 ** pow_num) pow_num += 1 return result \u4ee3\u7801\u8bb2\u89e3 extract_char = ord(columnTitle[i]) - ord('A') + 1 \uff1a\u5c06\u5b57\u6bcd A-Z \u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684 1-26 \u6570\u5b57\u3002 \u8fdb\u5236\u8f6c\u6362 \uff1a\u6bcf\u4e2a\u5b57\u7b26\u7684\u4f4d\u7f6e\u5bf9\u5e94 26 \u7684\u5e42\u6b21\uff0c\u6700\u53f3\u8fb9\u7684\u5b57\u7b26\u4e58\u4ee5 26^0 \uff0c\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e58\u4ee5 26^1 \uff0c\u4f9d\u6b21\u7c7b\u63a8\u3002 result += extract_char * (26 ** pow_num) \uff1a\u5c06\u6bcf\u4e2a\u5b57\u7b26\u5bf9\u5e94\u7684\u503c\u4e58\u4ee5 26 \u7684\u5e42\u6b21\uff0c\u5e76\u7d2f\u52a0\u5230\u7ed3\u679c\u4e2d\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u6700\u7ec8\u7ed3\u679c\u662f\u5217\u540d\u5bf9\u5e94\u7684\u5217\u5e8f\u53f7\u3002 1.4.3 LC804. \u552f\u4e00\u6469\u65af\u5bc6\u7801\u8bcd \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4 words \uff0c\u5176\u4e2d\u6bcf\u4e2a\u5355\u8bcd\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u3002\u6bcf\u4e2a\u5b57\u6bcd\u53ef\u4ee5\u7528\u6469\u65af\u5bc6\u7801\u8868\u793a\uff0c\u4f8b\u5982\uff1a 'a' -> \".-\" 'b' -> \"-...\" 'c' -> \"-.-.\" ... \u4f60\u9700\u8981\u5c06\u6bcf\u4e2a\u5355\u8bcd\u8f6c\u6362\u4e3a\u6469\u65af\u5bc6\u7801\u8868\u793a\uff0c\u5e76\u8fd4\u56de\u552f\u4e00\u6469\u65af\u5bc6\u7801\u8bcd\u7684\u4e2a\u6570\u3002 \u601d\u8def\u5206\u6790 \u6469\u65af\u5bc6\u7801\u6620\u5c04 \uff1a\u6bcf\u4e2a\u5b57\u6bcd\u5bf9\u5e94\u4e00\u4e2a\u56fa\u5b9a\u7684\u6469\u65af\u5bc6\u7801\uff0c\u53ef\u4ee5\u7528\u6570\u7ec4\u6765\u8868\u793a\u6bcf\u4e2a\u5b57\u6bcd\u7684\u6469\u65af\u5bc6\u7801\u3002 \u9010\u5b57\u8f6c\u6362 \uff1a\u904d\u5386\u6bcf\u4e2a\u5355\u8bcd\uff0c\u5c06\u5176\u8f6c\u6362\u4e3a\u6469\u65af\u5bc6\u7801\u7ec4\u5408\u3002 \u552f\u4e00\u6027\u68c0\u67e5 \uff1a\u901a\u8fc7\u5411\u91cf\u5b58\u50a8\u5df2\u8f6c\u6362\u7684\u6469\u65af\u5bc6\u7801\uff0c\u5e76\u68c0\u67e5\u6bcf\u4e2a\u8f6c\u6362\u662f\u5426\u662f\u552f\u4e00\u7684\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u6700\u7ec8\u8fd4\u56de\u552f\u4e00\u6469\u65af\u5bc6\u7801\u7684\u6570\u91cf\u3002 \u53c2\u8003\u89e3\u7b54 class Solution: def uniqueMorseRepresentations(self, words: list[str]) -> int: # \u7528\u6570\u7ec4\u6765\u5b58\u50a8\u5b57\u6bcd\u5230\u6469\u65af\u5bc6\u7801\u7684\u6620\u5c04 morse_code = [\".-\", \"-...\", \"-.-.\", \"-..\", \".\", \"..-.\", \"--.\", \"....\", \"..\", \".---\", \"-.-\", \".-..\", \"--\", \"-.\", \"---\", \".--.\", \"--.-\", \".-.\", \"...\", \"-\", \"..-\", \"...-\", \".--\", \"-..-\", \"-.--\", \"--..\"] # \u4f7f\u7528\u96c6\u5408\u6765\u5b58\u50a8\u552f\u4e00\u7684\u6469\u65af\u5bc6\u7801\u8868\u793a result = set() # \u904d\u5386\u6bcf\u4e2a\u5355\u8bcd for word in words: combination = \"\" # \u5c06\u5355\u8bcd\u8f6c\u6362\u4e3a\u6469\u65af\u5bc6\u7801\u8868\u793a for char in word: combination += morse_code[ord(char) - ord('a')] # \u901a\u8fc7 'a' \u7684 ASCII \u503c\u627e\u5230\u5bf9\u5e94\u7684\u6469\u65af\u5bc6\u7801 # \u5c06\u552f\u4e00\u7684\u6469\u65af\u5bc6\u7801\u8868\u793a\u52a0\u5165\u96c6\u5408 result.add(combination) return len(result) \u4ee3\u7801\u8bb2\u89e3 \u6469\u65af\u5bc6\u7801\u6620\u5c04 \uff1a\u7528\u957f\u5ea6\u4e3a 26 \u7684\u6570\u7ec4 morse_code \u6765\u5b58\u50a8\u5b57\u6bcd 'a' \u5230 'z' \u5bf9\u5e94\u7684\u6469\u65af\u5bc6\u7801\u8868\u793a\u3002 \u5355\u8bcd\u8f6c\u6362 \uff1a\u901a\u8fc7\u904d\u5386\u5355\u8bcd\u7684\u6bcf\u4e2a\u5b57\u7b26\uff0c\u6839\u636e\u5b57\u7b26\u7684 ASCII \u503c\u627e\u5230\u5bf9\u5e94\u7684\u6469\u65af\u5bc6\u7801\u5e76\u5c06\u5176\u7ec4\u5408\u8d77\u6765\u3002 \u68c0\u67e5\u552f\u4e00\u6027 \uff1a\u901a\u8fc7\u96c6\u5408set\uff08\uff09\u7684\u65b9\u5f0f\u786e\u4fdd\u5f53\u524d\u6469\u65af\u5bc6\u7801\u7ec4\u5408\u5728 result \u4e2d\u7684\u552f\u4e00\u6027\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u8fd4\u56de\u5b58\u50a8\u552f\u4e00\u6469\u65af\u5bc6\u7801\u7ec4\u5408\u7684\u5411\u91cf result \u7684\u5927\u5c0f\uff0c\u5373\u552f\u4e00\u6469\u65af\u5bc6\u7801\u7684\u6570\u91cf\u3002 2. \u8fdb\u5236\u8f6c\u6362 2.1 \u6570\u5b57\u8fdb\u5236\u6982\u8ff0 \u4e8c\u8fdb\u5236\uff08Base 2\uff09\uff1a \u4f7f\u7528\u6570\u5b57 0 \u548c 1\u3002\u4f8b\u5982\uff1a 1010 \uff08\u4e8c\u8fdb\u5236\uff09 = 10 \uff08\u5341\u8fdb\u5236\uff09\u3002 \u516b\u8fdb\u5236\uff08Base 8\uff09\uff1a \u4f7f\u7528\u6570\u5b57 0 \u5230 7\u3002\u4f8b\u5982\uff1a 12 \uff08\u516b\u8fdb\u5236\uff09 = 10 \uff08\u5341\u8fdb\u5236\uff09\u3002 \u5341\u8fdb\u5236\uff08Base 10\uff09\uff1a \u6807\u51c6\u6570\u5b57\u7cfb\u7edf\u3002\u4f8b\u5982\uff1a 10 \uff08\u5341\u8fdb\u5236\uff09\u3002 \u5341\u516d\u8fdb\u5236\uff08Base 16\uff09\uff1a \u4f7f\u7528\u6570\u5b57 0-9 \u548c\u5b57\u6bcd A-F\u3002\u4f8b\u5982\uff1a A \uff08\u5341\u516d\u8fdb\u5236\uff09= 10 \uff08\u5341\u8fdb\u5236\uff09\u3002 \u4ee5\u4e0b\u8868\u683c\u5c55\u793a\u4e86\u5341\u8fdb\u5236\u6570\u5b57\u4ece1\u523010\u7684\u4e8c\u8fdb\u5236\u3001\u516b\u8fdb\u5236\u548c\u5341\u516d\u8fdb\u5236\u8868\u793a: \u5341\u8fdb\u5236 (Decimal) \u4e8c\u8fdb\u5236 (Binary) \u516b\u8fdb\u5236 (Octal) \u5341\u516d\u8fdb\u5236 (Hexadecimal) 1 1 1 1 2 10 2 2 3 11 3 3 4 100 4 4 5 101 5 5 6 110 6 6 7 111 7 7 8 1000 10 8 9 1001 11 9 10 1010 12 A 2.2 \u5341\u8fdb\u5236\u5230\u4e8c\u8fdb\u5236\u7684\u8f6c\u6362 \u624b\u52a8\u65b9\u6cd5\uff1a\u4f7f\u7528\u77ed\u9664\u6cd5 \u5c06\u5341\u8fdb\u5236\u6570\u9664\u4ee5 2\u3002 \u8bb0\u5f55\u4f59\u6570\u3002 \u7528\u5546\u7ee7\u7eed\u9664\u4ee5 2\uff0c\u76f4\u5230\u5546\u4e3a 0\u3002 \u4e8c\u8fdb\u5236\u6570\u5373\u4e3a\u9006\u5e8f\u8bfb\u53d6\u7684\u4f59\u6570\u5e8f\u5217\u3002 \u793a\u4f8b\uff1a\u5c06 13 \u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236 13 / 2 = 6 \u4f59 1 6 / 2 = 3 \u4f59 0 3 / 2 = 1 \u4f59 1 1 / 2 = 0 \u4f59 1 \u7ed3\u679c\uff1a 13 (\u5341\u8fdb\u5236) = 1101 (\u4e8c\u8fdb\u5236) \u7528 Python\u5b9e\u73b0\u5341\u8fdb\u5236\u5230\u4e8c\u8fdb\u5236\u7684\u8f6c\u6362 def decimal_to_binary(num): ans = \"\" while num > 0: ans += str(num % 2) num = num // 2 return ans[::-1] # \u9006\u5e8f\u8f93\u51fa num = int(input(\"Enter a number: \")) binary_representation = decimal_to_binary(num) print(binary_representation) \u4ee3\u7801\u89e3\u91ca\uff1a ans += str(num % 2)\uff1a\u4f7f\u7528 num % 2 \u8ba1\u7b97\u5f53\u524d\u4f4d\u7684\u4e8c\u8fdb\u5236\u503c\uff080 \u6216 1\uff09\uff0c\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\uff0c\u6dfb\u52a0\u5230 ans \u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u3002 num = num // 2\uff1a\u4f7f\u7528\u6574\u6570\u9664\u6cd5 // \u66f4\u65b0 num \u4e3a\u5f53\u524d\u7684\u5546\uff0c\u4ee5\u4fbf\u5728\u4e0b\u4e00\u6b21\u8fed\u4ee3\u4e2d\u7ee7\u7eed\u8ba1\u7b97\u4e0b\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u3002 return ans[::-1]\uff1a\u7531\u4e8e\u8ba1\u7b97\u5f97\u5230\u7684\u4e8c\u8fdb\u5236\u4f4d\u662f\u9006\u5e8f\u7684\uff08\u6700\u4f4e\u4f4d\u5728\u524d\uff0c\u6700\u9ad8\u4f4d\u5728\u540e\uff09\uff0c\u4f7f\u7528\u5207\u7247 [::-1] \u5c06\u5b57\u7b26\u4e32\u9006\u5e8f\uff0c\u4ee5\u5f97\u5230\u6b63\u786e\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u3002 2.3 \u4e8c\u8fdb\u5236\u5230\u5341\u8fdb\u5236\u7684\u8f6c\u6362 \u624b\u52a8\u65b9\u6cd5\uff1a \u5c06\u6bcf\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u4e58\u4ee5 2 \u7684\u76f8\u5e94\u6b21\u65b9\uff08\u4ece\u53f3\u5f80\u5de6\uff0c\u4f4d\u7f6e\u4ece 0 \u5f00\u59cb\uff09\u3002 \u5c06\u6240\u6709\u7ed3\u679c\u76f8\u52a0\u3002 \u793a\u4f8b\uff1a\u5c06 1101 \u8f6c\u6362\u4e3a\u5341\u8fdb\u5236 1 * 2^3 + 1 * 2^2 + 0 * 2^1 + 1 * 2^0 = 8 + 4 + 0 + 1 = 13 \u7ed3\u679c\uff1a 1101 (\u4e8c\u8fdb\u5236) = 13 (\u5341\u8fdb\u5236) \u7528 Python\u5b9e\u73b0\u4e8c\u8fdb\u5236\u5230\u5341\u8fdb\u5236\u7684\u8f6c\u6362 def binary_to_decimal(binary_str): ans = 0 for char in binary_str: ans = ans * 2 + int(char) return ans binary_str = input(\"Enter a number with base of 2: \") decimal_value = binary_to_decimal(binary_str) print(decimal_value) ans = ans * 2 + int(char)\uff1a\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e2d\uff0c\u5c06\u5f53\u524d\u7ed3\u679c ans \u4e58\u4ee5 2\uff08\u4e8c\u8fdb\u5236\u7684\u57fa\u6570\uff09\uff0c\u7136\u540e\u52a0\u4e0a\u5f53\u524d\u5b57\u7b26\u4ee3\u8868\u7684\u6570\u503c\uff08 int(char) \u5c06\u5b57\u7b26 '0' \u6216 '1' \u8f6c\u6362\u4e3a\u6574\u6570 0 \u6216 1\uff09\u3002\u8fd9\u6837\uff0c\u6bcf\u6b21\u8fed\u4ee3\u90fd\u4f1a\u6b63\u786e\u5730\u5c06\u4e8c\u8fdb\u5236\u4f4d\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5341\u8fdb\u5236\u503c\u3002 \u8fd9\u4e2a\u8fc7\u7a0b\u6a21\u62df\u4e86\u624b\u52a8\u8ba1\u7b97\u7684\u8fc7\u7a0b\uff0c\u6bcf\u6b21\u4e58\u4ee5 2 \u76f8\u5f53\u4e8e\u5728\u5341\u8fdb\u5236\u4e2d\u5c06\u4f4d\u6570\u8fdb\u4e00\u4f4d\uff0c\u7136\u540e\u52a0\u4e0a\u5f53\u524d\u7684\u4e8c\u8fdb\u5236\u4f4d\u3002 2.4 \u5341\u8fdb\u5236\u5230\u5341\u516d\u8fdb\u5236\u7684\u8f6c\u6362 \u624b\u52a8\u65b9\u6cd5\uff1a \u5c06\u5341\u8fdb\u5236\u6570\u9664\u4ee5 16\u3002 \u8bb0\u5f55\u4f59\u6570\uff0c\u5982\u679c\u4f59\u6570\u5927\u4e8e 9\uff0c\u5219\u5c06\u5176\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5341\u516d\u8fdb\u5236\u5b57\u7b26\uff08A-F\uff09\u3002 \u7528\u5546\u7ee7\u7eed\u9664\u4ee5 16\uff0c\u76f4\u5230\u5546\u4e3a 0\u3002 \u5341\u516d\u8fdb\u5236\u6570\u5373\u4e3a\u9006\u5e8f\u8bfb\u53d6\u7684\u4f59\u6570\u5e8f\u5217\u3002 \u793a\u4f8b\uff1a\u5c06 479 \u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236 479 / 16 = 29 \u4f59 F 29 / 16 = 1 \u4f59 D 1 / 16 = 0 \u4f59 1 \u7ed3\u679c\uff1a 479 (\u5341\u8fdb\u5236) = 1DF (\u5341\u516d\u8fdb\u5236) \u793a\u4f8b\uff1a\u7528 Python \u5b9e\u73b0\u5341\u8fdb\u5236\u5230\u5341\u516d\u8fdb\u5236\u7684\u8f6c\u6362 def dec_to_hex(num): result = \"\" while num != 0: remainder = num % 16 if remainder >= 10: result += chr(remainder - 10 + ord('a')) else: result += str(remainder) num = num // 16 return result[::-1] # \u9006\u5e8f\u8f93\u51fa # \u4e3b\u7a0b\u5e8f print(dec_to_hex(479)) remainder = num % 16\uff1a\u4f7f\u7528 num % 16 \u8ba1\u7b97\u5f53\u524d\u4f4d\u7684\u4f59\u6570\uff080-15\uff09\uff0c\u8fd9\u4e2a\u4f59\u6570\u5c31\u662f\u5f53\u524d\u4f4d\u7684\u5341\u516d\u8fdb\u5236\u503c\u3002 result += chr(remainder - 10 + ord('a'))\uff1a\u5982\u679c\u4f59\u6570\u5927\u4e8e\u7b49\u4e8e10\uff08\u5373A-F\uff09\uff0c\u4f7f\u7528 chr(remainder - 10 + ord('a')) \u5c06\u4f59\u6570\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5341\u516d\u8fdb\u5236\u5b57\u7b26\uff08'a' \u5230 'f'\uff09\u3002 result += str(remainder)\uff1a\u5982\u679c\u4f59\u6570\u5c0f\u4e8e10\uff0c\u76f4\u63a5\u5c06\u4f59\u6570\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\uff0c\u5e76\u6dfb\u52a0\u5230 result \u7684\u672b\u5c3e\u3002 return result[::-1]\uff1a\u8ba1\u7b97\u5f97\u5230\u7684\u5341\u516d\u8fdb\u5236\u4f4d\u662f\u9006\u5e8f\u7684\uff08\u6700\u4f4e\u4f4d\u5728\u524d\uff0c\u6700\u9ad8\u4f4d\u5728\u540e\uff09\uff0c\u4f7f\u7528\u5207\u7247 [::-1] \u5c06\u5b57\u7b26\u4e32\u9006\u5e8f\uff0c\u4ee5\u5f97\u5230\u6b63\u786e\u7684\u5341\u516d\u8fdb\u5236\u8868\u793a\u3002 2.5 \u4e8c\u8fdb\u5236\u5230\u5341\u516d\u8fdb\u5236\u7684\u8f6c\u6362 \u624b\u52a8\u65b9\u6cd5\uff1a \u4e8c\u8fdb\u5236\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236\u7684\u65b9\u6cd5\u662f\u5c06\u4e8c\u8fdb\u5236\u6570\u6bcf4\u4f4d\u5206\u4e3a\u4e00\u7ec4\uff0c\u7136\u540e\u5c06\u6bcf\u7ec4\u7684\u4e8c\u8fdb\u5236\u6570\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5341\u516d\u8fdb\u5236\u6570\u3002\u56e0\u4e3a\u5341\u516d\u8fdb\u5236\u662f\u4ee54\u4f4d\u4e8c\u8fdb\u5236\u4e3a\u57fa\u7840\u7684\uff0c\u6240\u4ee5\u8fd9\u4e2a\u8fc7\u7a0b\u975e\u5e38\u76f4\u63a5\u3002 \u6b65\u9aa4\uff1a \u4ece\u53f3\u5230\u5de6\uff0c\u5c06\u4e8c\u8fdb\u5236\u6570\u6bcf4\u4f4d\u5206\u4e3a\u4e00\u7ec4\u3002\u5982\u679c\u4e0d\u8db34\u4f4d\uff0c\u5219\u5728\u5de6\u4fa7\u8865\u96f6\u3002 \u5c06\u6bcf\u7ec4\u4e8c\u8fdb\u5236\u6570\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5341\u516d\u8fdb\u5236\u6570\u3002 \u5c06\u8f6c\u6362\u540e\u7684\u5341\u516d\u8fdb\u5236\u6570\u8fde\u63a5\u8d77\u6765\uff0c\u5f97\u5230\u6700\u7ec8\u7ed3\u679c\u3002 \u793a\u4f8b\uff1a\u5c06\u4e8c\u8fdb\u5236 110111101 \u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236 \u6b65\u9aa4\uff1a \u5c06 110111101 \u5206\u4e3a 1101 \u548c 1110 \uff0c\u4e0d\u8db34\u4f4d\u7684\u5de6\u4fa7\u8865\u96f6\uff1a 0110 1110 1101 \u5c06\u6bcf\u7ec4\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236\uff1a - 0110 \u8f6c\u6362\u4e3a 6 - 1110 \u8f6c\u6362\u4e3a E - 1101 \u8f6c\u6362\u4e3a D \u5c06\u8fd9\u4e9b\u8f6c\u6362\u7ed3\u679c\u8fde\u63a5\u8d77\u6765\uff1a 6ED \u7ed3\u679c\uff1a 110111101 (\u4e8c\u8fdb\u5236) = 6ED (\u5341\u516d\u8fdb\u5236) \u4ee3\u7801\u5b9e\u73b0\u90e8\u5206\u6211\u4eec\u73b0\u5728\u5148\u4e0d\u9700\u8981\u6df1\u5165\u4e86\u89e3\uff0c\u56e0\u4e3a\u6d89\u53ca\u5230\u5176\u4ed6\u7684\u4e00\u4e9b\u51fd\u6570\u548c\u5e93\u7684\u4f7f\u7528\uff0c\u4e00\u822c\u505a\u6cd5\u8fd8\u662f\u5148\u5c06\u4e8c\u8fdb\u5236\u8f6c\u5341\u8fdb\u5236\uff0c\u518d\u5c06\u5341\u8fdb\u5236\u8f6c\u5341\u516d\u8fdb\u5236\u3002\u5f53\u524d\u6211\u4eec\u4e3b\u8981\u4e13\u6ce8\u4e8e\u7406\u89e3\u624b\u52a8\u65b9\u6cd5\uff0c\u8fd9\u6837\u53ef\u4ee5\u5e2e\u52a9\u66f4\u597d\u5730\u638c\u63e1\u8fdb\u5236\u8f6c\u6362\u7684\u57fa\u7840\u6982\u5ff5\u3002 2.6 \u8fdb\u5236\u4f8b\u9898\u8bb2\u89e3 2.6.1 LC504. \u4e03\u8fdb\u5236\u6570 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570 num \uff0c\u8fd4\u56de\u5b83\u7684 7 \u8fdb\u5236\u8868\u793a\u5b57\u7b26\u4e32\u3002 \u601d\u8def\u5206\u6790 \u5c06\u4e00\u4e2a\u6574\u6570\u8f6c\u6362\u4e3a7\u8fdb\u5236\u672c\u8d28\u4e0a\u548c\u8f6c\u6362\u4e3a\u4efb\u4f55\u5176\u4ed6\u8fdb\u5236\u7684\u601d\u8def\u4e00\u81f4\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0d\u65ad\u5730\u53d6\u6a21\uff08 % \uff09\u548c\u9664\u6cd5\uff08 / \uff09\u64cd\u4f5c\u6765\u9010\u4f4d\u83b7\u53d67\u8fdb\u5236\u7684\u5404\u4f4d\u6570\u5b57\uff0c\u6700\u540e\u5c06\u5176\u53cd\u8f6c\u5373\u53ef\u5f97\u5230\u6700\u7ec8\u7684\u7ed3\u679c\u3002 \u5904\u7406\u8d1f\u6570 \uff1a \u5982\u679c\u8f93\u5165 num \u662f\u8d1f\u6570\uff0c\u5148\u53d6\u5b83\u7684\u7edd\u5bf9\u503c\u8fdb\u884c\u8ba1\u7b97\uff0c\u6700\u540e\u5728\u7ed3\u679c\u524d\u6dfb\u52a0\u8d1f\u53f7\u3002 \u5904\u7406 0 \u7684\u7279\u6b8a\u60c5\u51b5 \uff1a \u5982\u679c num == 0 \uff0c\u76f4\u63a5\u8fd4\u56de \"0\" \u3002 \u53d6\u6a21\u6cd5\u6784\u5efa7\u8fdb\u5236 \uff1a \u6211\u4eec\u4e0d\u65ad\u5c06 num \u9664\u4ee5 7\uff0c\u53d6\u51fa\u4f59\u6570\u4f5c\u4e3a\u5f53\u524d\u4f4d\u76847\u8fdb\u5236\u6570\u5b57\uff0c\u5c06\u5176\u52a0\u5165\u5230\u7ed3\u679c\u5b57\u7b26\u4e32\u4e2d\u3002\u7136\u540e\u5c06 num \u66f4\u65b0\u4e3a num / 7 \uff0c\u76f4\u5230 num \u53d8\u4e3a 0 \u4e3a\u6b62\u3002 \u53cd\u8f6c\u5b57\u7b26\u4e32 \uff1a \u56e0\u4e3a\u6211\u4eec\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\u8ba1\u7b97\uff0c\u6240\u4ee5\u6700\u7ec8\u9700\u8981\u5c06\u5b57\u7b26\u4e32\u53cd\u8f6c\u3002 \u53c2\u8003\u89e3\u7b54 class Solution: def convertToBase7(self, num: int) -> str: initial_num = num # \u4fdd\u5b58\u521d\u59cb\u503c # \u5982\u679c\u662f\u8d1f\u6570\uff0c\u53d6\u7edd\u5bf9\u503c\u8fdb\u884c\u8ba1\u7b97 if num < 0: num = -num # \u7279\u6b8a\u60c5\u51b5\uff1anum \u4e3a 0\uff0c\u76f4\u63a5\u8fd4\u56de \"0\" if num == 0: return \"0\" # \u6784\u5efa 7 \u8fdb\u5236 ans = [] while num > 0: ans.append(str(num % 7)) # \u5c06\u6bcf\u4e00\u4f4d\u7684 7 \u8fdb\u5236\u6570\u5b57\u52a0\u5165\u5230\u5217\u8868 num //= 7 # \u9664\u4ee5 7\uff0c\u8fdb\u884c\u4e0b\u4e00\u4f4d\u7684\u8ba1\u7b97 # \u5982\u679c\u521d\u59cb\u503c\u662f\u8d1f\u6570\uff0c\u6dfb\u52a0\u8d1f\u53f7 if initial_num < 0: ans.append('-') # \u6700\u540e\u53cd\u8f6c\u5e76\u62fc\u63a5\u5217\u8868\u4e3a\u5b57\u7b26\u4e32 return ''.join(ans[::-1]) initial_num = num \uff1a\u4fdd\u7559\u539f\u59cb\u7684 num \u503c\uff0c\u7528\u4e8e\u540e\u7eed\u5224\u65ad\u662f\u5426\u9700\u8981\u6dfb\u52a0\u8d1f\u53f7\u3002 \u5904\u7406\u8d1f\u6570 \uff1a\u5982\u679c num \u4e3a\u8d1f\u6570\uff0c\u5148\u53d6\u7edd\u5bf9\u503c\uff0c\u8ba1\u7b97\u5b8c\u540e\u518d\u5728\u7ed3\u679c\u524d\u52a0\u4e0a '-' \u3002 \u5904\u74060\u7684\u60c5\u51b5 \uff1a\u5982\u679c num \u4e3a 0\uff0c\u76f4\u63a5\u8fd4\u56de \"0\" \u3002 \u53d6\u6a21\u548c\u9664\u6cd5 \uff1a\u901a\u8fc7 num % 7 \u83b7\u53d6\u5f53\u524d\u4f4d\u76847\u8fdb\u5236\u6570\u5b57\uff0c\u5e76\u5c06\u5176\u52a0\u5165\u5230\u7ed3\u679c\u5b57\u7b26\u4e32\u4e2d\uff1b\u7136\u540e\u901a\u8fc7 num /= 7 \u8fdb\u884c\u4e0b\u4e00\u4f4d\u7684\u8ba1\u7b97\u3002 \u53cd\u8f6c\u5b57\u7b26\u4e32 \uff1a\u7531\u4e8e\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\u6784\u5efa\u5b57\u7b26\u4e32\uff0c\u6700\u540e\u9700\u8981\u53cd\u8f6c\u5f97\u5230\u6b63\u786e\u7684\u987a\u5e8f\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u7ecf\u8fc7\u6240\u6709\u5904\u7406\u540e\uff0c\u8fd4\u56de\u7ed3\u679c\u5b57\u7b26\u4e32\u3002 2.7 \u8fdb\u5236\u4e3e\u4e00\u53cd\u4e09 2.7.1 LC168. excel\u8868\u5217\u540d\u79f0 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u8fd4\u56de\u5b83\u5728 Excel \u8868\u4e2d\u5bf9\u5e94\u7684\u5217\u6807\u9898\u3002Excel \u5217\u662f\u4ee5 A-Z \u7684\u65b9\u5f0f\u6392\u5217\u7684\uff0c\u4f8b\u5982\uff1a 1 -> A 2 -> B 3 -> C ... 26 -> Z 27 -> AA 28 -> AB ... \u601d\u8def\u5206\u6790 \u8fd9\u662f\u4e00\u4e2a\u5178\u578b\u7684\u8fdb\u5236\u8f6c\u6362\u95ee\u9898\u3002\u9700\u8981\u5c06\u6570\u5b57\u8f6c\u6362\u6210\u4ee5 A-Z \u4e3a\u57fa\u7840\u768426\u8fdb\u5236\u8868\u793a\u6cd5\uff0c\u7c7b\u4f3c\u4e8e\u5341\u8fdb\u5236\u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236\u6216\u5341\u516d\u8fdb\u5236\u3002\u7531\u4e8e Excel \u5217\u7f16\u53f7\u4ece 1 \u5f00\u59cb\uff0c\u800c\u4e0d\u662f\u4ece 0 \u5f00\u59cb\uff0c\u6240\u4ee5\u5728\u8f6c\u6362\u65f6\u9700\u8981\u4e00\u4e9b\u989d\u5916\u7684\u8c03\u6574\u3002 \u4ece 1 \u5f00\u59cb\u768426\u8fdb\u5236\uff1a \u6211\u4eec\u53ef\u4ee5\u5c06 A-Z \u5bf9\u5e94\u7684\u6570\u5b57\u770b\u4f5c\u662f\u4e00\u4e2a\u57fa\u4e8e26\u7684\u8fdb\u5236\u7cfb\u7edf\u3002 \u4f46\u4e0e\u5e38\u89c1\u8fdb\u5236\u4e0d\u540c\u7684\u662f\uff0cExcel \u5217\u7f16\u53f7\u662f\u4ece 1 \u5f00\u59cb\u7684\uff0c\u800c\u4e0d\u662f\u4ece 0 \u5f00\u59cb\uff0c\u56e0\u6b64\u5728\u6bcf\u6b21\u53d6\u4f59\u65f6\u9700\u8981\u505a\u4e00\u4e9b\u8c03\u6574\uff1a\u6bcf\u6b21\u5c06 columnNumber \u51cf\u53bb 1\u3002 \u5904\u7406\u903b\u8f91\uff1a \u4e0d\u65ad\u5c06 columnNumber \u51cf\u53bb1\uff0c\u5e76\u8ba1\u7b97\u51fa\u5bf9\u5e94\u7684\u5b57\u6bcd\u3002 \u6bcf\u6b21\u901a\u8fc7 columnNumber % 26 \u5f97\u5230\u4e00\u4e2a\u5b57\u6bcd\uff0c\u5c06\u5176\u52a0\u5165\u7ed3\u679c\u5b57\u7b26\u4e32\u4e2d\u3002 \u5c06 columnNumber \u9664\u4ee526\uff0c\u7ee7\u7eed\u5904\u7406\u4e0b\u4e00\u4e2a\u6570\u5b57\uff0c\u76f4\u5230 columnNumber \u4e3a 0\u3002 \u53cd\u8f6c\u5b57\u7b26\u4e32\uff1a \u7531\u4e8e\u6211\u4eec\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\u6784\u9020\u5b57\u7b26\u4e32\uff0c\u56e0\u6b64\u6700\u540e\u9700\u8981\u5c06\u7ed3\u679c\u5b57\u7b26\u4e32\u53cd\u8f6c\u3002 \u53c2\u8003\u89e3\u7b54 class Solution: def convertToTitle(self, columnNumber: int) -> str: result = [] # \u5904\u7406\u8fdb\u5236\u8f6c\u6362 while columnNumber > 0: # \u56e0\u4e3a\u662f\u4ece 1 \u5f00\u59cb\u7684\u5217\uff0c\u6240\u4ee5\u9700\u8981\u5148\u51cf 1 columnNumber -= 1 # \u8ba1\u7b97\u5f53\u524d\u4f4d\u5bf9\u5e94\u7684\u5b57\u6bcd temp = columnNumber % 26 result.append(chr(temp + ord('A'))) # \u51cf\u5c11\u5217\u53f7 columnNumber //= 26 # \u53cd\u8f6c\u7ed3\u679c return ''.join(result[::-1]) \u4ee3\u7801\u8bb2\u89e3 columnNumber -= 1 \uff1a\u5148\u5c06\u5217\u53f7\u51cf 1\uff0c\u4ee5\u4fbf\u5c06\u95ee\u9898\u8f6c\u6362\u4e3a\u4ee5 0 \u4e3a\u57fa\u51c6\u7684 26 \u8fdb\u5236\u3002 columnNumber % 26 \uff1a\u8ba1\u7b97\u5f53\u524d\u7684\u5217\u5bf9\u5e94\u7684\u5b57\u6bcd\u7f16\u53f7\uff080 \u5230 25 \u5bf9\u5e94 A \u5230 Z \uff09\u3002 result.append(chr(temp + ord('A'))) \uff1a\u5c06\u7f16\u53f7\u8f6c\u6362\u4e3a\u5b57\u6bcd\u5e76\u6dfb\u52a0\u5230\u7ed3\u679c\u5b57\u7b26\u4e32\u4e2d\u3002 columnNumber //= 26 \uff1a\u5c06\u5217\u53f7\u9664\u4ee5 26\uff0c\u5904\u7406\u4e0b\u4e00\u4f4d\u3002 \u5b57\u7b26\u4e32\u53cd\u8f6c \uff1a\u56e0\u4e3a\u5b57\u6bcd\u662f\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\u8ba1\u7b97\u7684\uff0c\u56e0\u6b64\u9700\u8981\u5728\u6700\u540e\u53cd\u8f6c\u5b57\u7b26\u4e32\u3002 2.7.2 LC728. \u81ea\u9664\u6570 \u95ee\u9898\u63cf\u8ff0 \u81ea\u9664\u6570\u662f\u6307\u4e00\u4e2a\u6574\u6570\uff0c\u5b83\u7684\u6bcf\u4e00\u4f4d\u6570\u5b57\u90fd\u80fd\u6574\u9664\u8fd9\u4e2a\u6570\u672c\u8eab\u3002\u7ed9\u5b9a\u4e00\u4e2a\u8303\u56f4 [left, right] \uff0c\u8fd4\u56de\u8be5\u8303\u56f4\u5185\u6240\u6709\u7684\u81ea\u9664\u6570\u3002 \u4e00\u4e2a\u81ea\u9664\u6570\u5fc5\u987b\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a \u8be5\u6570\u4e0d\u80fd\u5305\u542b\u6570\u5b57 0 \u3002 \u8be5\u6570\u80fd\u88ab\u5b83\u7684\u6bcf\u4e00\u4f4d\u6570\u5b57\u6574\u9664\u3002 \u601d\u8def\u5206\u6790 \u9010\u4f4d\u68c0\u67e5 \uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u6570\u5b57\uff0c\u5c06\u5176\u6bcf\u4e00\u4f4d\u63d0\u53d6\u51fa\u6765\uff0c\u68c0\u67e5\u8be5\u4f4d\u662f\u5426\u4e3a 0\uff0c\u5e76\u4e14\u80fd\u5426\u6574\u9664\u539f\u6570\u5b57\u3002 \u904d\u5386\u8303\u56f4 \uff1a\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u8303\u56f4 [left, right] \uff0c\u9010\u4e00\u68c0\u67e5\u6bcf\u4e2a\u6570\u5b57\u662f\u5426\u662f\u81ea\u9664\u6570\uff0c\u5982\u679c\u662f\uff0c\u5c06\u5176\u52a0\u5165\u7ed3\u679c\u5217\u8868\u4e2d\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u8fd4\u56de\u5728 [left, right] \u8303\u56f4\u5185\u6240\u6709\u81ea\u9664\u6570\u7684\u5217\u8868\u3002 \u53c2\u8003\u89e3\u7b54 class Solution: def selfDividingNumbers(self, left: int, right: int) -> List[int]: def isSelfDividing(num: int) -> bool: x = num while x: x, d = divmod(x, 10) if d == 0 or num % d: return False return True return [i for i in range(left, right + 1) if isSelfDividing(i)] divmod(x, 10) : \u7528\u4e8e\u540c\u65f6\u83b7\u5f97\u5546\u548c\u4f59\u6570\uff0c\u6bd4 x // 10 \u548c x % 10 \u66f4\u7b80\u6d01\u3002 \u904d\u5386\u8303\u56f4 \uff1a\u5728 selfDividingNumbers \u51fd\u6570\u4e2d\uff0c\u904d\u5386\u8303\u56f4 [left, right] \uff0c\u4f7f\u7528 isSelfDividing \u51fd\u6570\u5224\u65ad\u6bcf\u4e2a\u6570\u662f\u5426\u662f\u81ea\u9664\u6570\uff0c\u5982\u679c\u662f\u5219\u5c06\u5176\u52a0\u5165\u7ed3\u679c\u5217\u8868\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u6700\u7ec8\u8fd4\u56de [left, right] \u8303\u56f4\u5185\u6240\u6709\u81ea\u9664\u6570\u7684\u5217\u8868\u3002 2.7.3 LC693. \u4ea4\u66ff\u4f4d\u4e8c\u8fdb\u5236\u6570 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570 n \uff0c\u68c0\u67e5\u5176\u4e8c\u8fdb\u5236\u8868\u793a\u662f\u5426\u4e3a\u4ea4\u66ff\u4f4d\u4e8c\u8fdb\u5236\u6570\uff0c\u4ea4\u66ff\u4f4d\u4e8c\u8fdb\u5236\u6570\u7684\u5b9a\u4e49\u662f\u5176\u76f8\u90bb\u7684\u4e24\u4e2a\u4f4d\u59cb\u7ec8\u4e0d\u540c\uff0c\u5373\u4e8c\u8fdb\u5236\u4e2d 0 \u548c 1 \u4ea4\u66ff\u51fa\u73b0\u3002 \u601d\u8def\u5206\u6790 \u9010\u4f4d\u68c0\u67e5 \uff1a\u901a\u8fc7\u4e0d\u65ad\u5c06 n \u53f3\u79fb\uff0c\u5e76\u63d0\u53d6\u5176\u5f53\u524d\u7684\u6700\u540e\u4e00\u4f4d\uff0c\u68c0\u67e5\u662f\u5426\u76f8\u90bb\u7684\u4e24\u4f4d\u76f8\u540c\u3002 \u7ec8\u6b62\u6761\u4ef6 \uff1a\u5f53\u67d0\u4e00\u4f4d\u548c\u5176\u76f8\u90bb\u7684\u4e0a\u4e00\u4f4d\u76f8\u540c\u65f6\uff0c\u76f4\u63a5\u8fd4\u56de False \u3002 \u5168\u90e8\u68c0\u67e5\u901a\u8fc7 \uff1a\u5982\u679c\u6240\u6709\u76f8\u90bb\u7684\u4f4d\u90fd\u4e0d\u540c\uff0c\u5219\u8fd4\u56de True \u3002 \u53c2\u8003\u89e3\u7b54 class Solution: def hasAlternatingBits(self, n: int) -> bool: now = n % 2 # \u63d0\u53d6\u5f53\u524d\u4f4d while n > 0: n //= 2 # \u53f3\u79fb\uff0c\u53bb\u6389\u5f53\u524d\u4f4d next_bit = n % 2 # \u63d0\u53d6\u4e0b\u4e00\u4f4d if next_bit == now: return False # \u5982\u679c\u76f8\u90bb\u7684\u4e24\u4f4d\u76f8\u540c\uff0c\u8fd4\u56de False now = next_bit # \u66f4\u65b0\u5f53\u524d\u4f4d\u4e3a\u4e0b\u4e00\u4f4d return True # \u5168\u90e8\u4f4d\u90fd\u4ea4\u66ff\uff0c\u8fd4\u56de True \u4ee3\u7801\u8bb2\u89e3 now = n % 2 \uff1a\u63d0\u53d6\u5f53\u524d\u6700\u4f4e\u4f4d\u3002 n //= 2\uff1a\u53f3\u79fb n\uff0c\u53bb\u6389\u5df2\u7ecf\u68c0\u67e5\u7684\u6700\u4f4e\u4f4d\u3002 next_bit = n % 2\uff1a\u63d0\u53d6\u53f3\u79fb\u540e\u7684\u4e0b\u4e00\u4f4d\u3002 \u76f8\u90bb\u4f4d\u6bd4\u8f83 \uff1a\u5982\u679c next \u548c now \u76f8\u7b49\uff0c\u5219\u8bf4\u660e\u76f8\u90bb\u7684\u4e24\u4f4d\u76f8\u540c\uff0c\u8fd4\u56de False\u3002 \u68c0\u67e5\u901a\u8fc7 \uff1a\u5982\u679c\u6240\u6709\u4f4d\u90fd\u4e0d\u540c\uff0c\u8fd4\u56de True \uff0c\u8868\u793a n \u662f\u4ea4\u66ff\u4f4d\u4e8c\u8fdb\u5236\u6570\u3002 3. \u8bfe\u540e\u7ec3\u4e60 ASCII \u76f8\u5173\u95ee\u9898 \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC405 \u6570\u5b57\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236\u6570 \u5c06\u4e00\u4e2a\u6574\u6570\u8f6c\u6362\u4e3a\u5176 16 \u8fdb\u5236\u8868\u793a\u3002 LC806 \u5199\u5b57\u7b26\u4e32\u9700\u8981\u7684\u884c\u6570 \u7ed9\u5b9a\u82e5\u5e72\u884c\u5b57\u7b26\u4e32\uff0c\u8ba1\u7b97\u5199\u5165\u6240\u9700\u7684\u884c\u6570\u3002 LC2309 \u95f4\u8ddd\u5927\u5c0f\u5199\u7684\u6700\u597d\u82f1\u6587\u5b57\u6bcd \u627e\u5230\u5305\u542b\u5927\u5199\u548c\u5c0f\u5199\u5b57\u6bcd\u7684\u6700\u5927\u82f1\u6587\u5b57\u6bcd\u3002 LC383 \u8d4e\u91d1\u4fe1 \u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u662f\u5426\u80fd\u7531\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u6784\u6210\u3002 LC389 \u627e\u4e0d\u540c \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u627e\u51fa\u4e00\u4e2a\u5728\u5176\u4e2d\u591a\u51fa\u7684\u5b57\u7b26\u3002 \u8fdb\u5236\u8f6c\u6362\u76f8\u5173\u95ee\u9898 \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC868 \u4e8c\u8fdb\u5236\u95f4\u8ddd \u627e\u5230\u4e8c\u8fdb\u5236\u6570\u4e2d\u6700\u5927\u7684 0 \u548c 1 \u95f4\u7684\u8ddd\u79bb\u3002 LC1317 \u5c06\u6574\u6570\u8f6c\u6362\u4e3a\u4e24\u4e2a\u65e0\u96f6\u6574\u6570\u7684\u548c \u5c06\u4e00\u4e2a\u6574\u6570\u8f6c\u6362\u4e3a\u4e24\u4e2a\u975e\u96f6\u6574\u6570\u4e4b\u548c\u3002 LC1281 \u6574\u6570\u7684\u5404\u4f4d\u79ef\u548c\u4e4b\u5dee \u8fd4\u56de\u4e00\u4e2a\u6574\u6570\u5404\u4f4d\u6570\u5b57\u4e58\u79ef\u4e0e\u548c\u7684\u5dee\u503c\u3002 LC67 \u4e8c\u8fdb\u5236\u6c42\u548c \u7ed9\u5b9a\u4e24\u4e2a\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\u5b83\u4eec\u7684\u548c\uff08\u4ee5\u4e8c\u8fdb\u5236\u8868\u793a\uff09\u3002","title":"Lesson 7 Ascii \u8f6c\u6362\u4e0e\u8fdb\u5236\u8f6c\u6362"},{"location":"lesson7/Lesson7%20Python/#lesson-7-ascii","text":"","title":"Lesson 7 Ascii \u8f6c\u6362\u4e0e\u8fdb\u5236\u8f6c\u6362"},{"location":"lesson7/Lesson7%20Python/#_1","text":"\u7406\u89e3 ASCII 1.1 \u4ec0\u4e48\u662f ASCII 1.2 ASCII \u7684\u5e94\u7528 1.3 ASCII \u4f8b\u9898\u8bb2\u89e3 1.3.1 LC1309 - \u89e3\u7801\u5b57\u6bcd\u5230\u6574\u6570\u6620\u5c04 1.4 ASCII \u4e3e\u4e00\u53cd\u4e09 1.4.1 LC387 - \u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u552f\u4e00\u5b57\u7b26 1.4.2 LC171 - Excel \u8868\u5217\u5e8f\u53f7 1.4.3 LC804 - \u552f\u4e00\u6469\u65af\u5bc6\u7801\u8bcd \u8fdb\u5236\u8f6c\u6362 2.1 \u6570\u5b57\u8fdb\u5236\u6982\u8ff0 2.2 \u5341\u8fdb\u5236\u5230\u4e8c\u8fdb\u5236\u7684\u8f6c\u6362 2.3 \u4e8c\u8fdb\u5236\u5230\u5341\u8fdb\u5236\u7684\u8f6c\u6362 2.4 \u5341\u8fdb\u5236\u5230\u5341\u516d\u8fdb\u5236\u7684\u8f6c\u6362 2.5 \u4e8c\u8fdb\u5236\u5230\u5341\u516d\u8fdb\u5236\u7684\u8f6c\u6362 2.6 \u8fdb\u5236 \u4f8b\u9898\u8bb2\u89e3 2.6.1 LC504 - \u4e03\u8fdb\u5236\u6570 2.7 \u8fdb\u5236 \u4e3e\u4e00\u53cd\u4e09 2.7.1 LC168 - Excel \u8868\u5217\u540d\u79f0 2.7.2 LC728 - \u81ea\u9664\u6570 2.7.3 LC693 - \u4ea4\u66ff\u4f4d\u4e8c\u8fdb\u5236\u6570 \u8bfe\u540e\u7ec3\u4e60 \u5728\u672c\u8bfe\u4e2d\uff0c\u6211\u4eec\u5c06\u63a2\u8ba8\u5b57\u7b26\u5982\u4f55\u901a\u8fc7 ASCII \u503c\u5b58\u50a8\u548c\u5904\u7406\uff0c\u5e76\u5b66\u4e60\u5982\u4f55\u5728\u4e0d\u540c\u7684\u8fdb\u5236\uff08\u5982\u4e8c\u8fdb\u5236\u3001\u516b\u8fdb\u5236\u3001\u5341\u8fdb\u5236\u548c\u5341\u516d\u8fdb\u5236\uff09\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\u3002","title":"\u76ee\u5f55"},{"location":"lesson7/Lesson7%20Python/#1-ascii","text":"","title":"1. \u7406\u89e3 ASCII"},{"location":"lesson7/Lesson7%20Python/#11-ascii","text":"ASCII\uff08American Standard Code for Information Interchange\uff0c\u7f8e\u56fd\u4fe1\u606f\u4ea4\u6362\u6807\u51c6\u4ee3\u7801\uff09\u662f\u4e00\u79cd\u5b57\u7b26\u7f16\u7801\u6807\u51c6\uff0c\u5b83\u4f7f\u7528\u6570\u503c\u6765\u8868\u793a\u5b57\u7b26\u3002\u6bcf\u4e2a\u5b57\u7b26\uff08\u5982\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u7b26\u53f7\u7b49\uff09\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u7684 ASCII \u4ee3\u7801\uff0c\u901a\u5e38\u8303\u56f4\u4ece 0 \u5230 127\u3002 \u8fd9\u4e9b\u503c\u53ef\u4ee5\u7528\u4e8e\u5b57\u7b26\u4e0e\u6570\u5b57\u4e4b\u95f4\u7684\u8f6c\u6362\u3002\u4f8b\u5982\uff0c\u5c06\u5b57\u7b26 '0' \u5230 '9' \u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u6574\u6570\uff0c\u6216\u53cd\u5411\u64cd\u4f5c\u3002","title":"1.1 \u4ec0\u4e48\u662f ASCII\uff1f"},{"location":"lesson7/Lesson7%20Python/#ascii","text":"\u5b57\u7b26 ASCII \u503c \u4e8c\u8fdb\u5236 \u5341\u516d\u8fdb\u5236 'A' 65 01000001 0x41 'a' 97 01100001 0x61 '0' 48 00110000 0x30 ' '\uff08\u7a7a\u683c\uff09 32 00100000 0x20 \u5b8c\u6574ASCII\u8868\u683c\uff1ahttps://www.ascii-code.com/","title":"\u793a\u4f8b ASCII \u8868"},{"location":"lesson7/Lesson7%20Python/#12-ascii","text":"\u5728 Python \u4e2d\uff0c\u6bcf\u4e2a\u5b57\u7b26\u90fd\u4ee5\u5176\u5bf9\u5e94\u7684 ASCII \u503c\u5f62\u5f0f\u5b58\u50a8\u4e3a\u6574\u6570\u3002\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5c06\u5b57\u7b26\u89c6\u4e3a\u6574\u6570\u6765\u8f7b\u677e\u5730\u64cd\u4f5c\u5b83\u4eec\u3002 \u901a\u8fc7ASCII\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u5b57\u7b26\u8fdb\u884c\u52a0\u51cf\u8fd0\u7b97\uff0c\u751a\u81f3\u662f\u8f6c\u6362\u3002","title":"1.2 ASCII \u7684\u5e94\u7528"},{"location":"lesson7/Lesson7%20Python/#ord0-ord0","text":"","title":"\u4f7f\u7528+ord(\u20180\u2019)\u548c-ord(\u20180\u2019)\u8fdb\u884c\u8f6c\u6362"},{"location":"lesson7/Lesson7%20Python/#-ord0","text":"\u901a\u8fc7\u5c06\u5b57\u7b26\u51cf\u53bb ord('0') \uff0c\u53ef\u4ee5\u5f97\u5230\u5bf9\u5e94\u7684\u6574\u6570\u503c\u3002\u6bd4\u5982 ord('3') - ord('0') \u7684\u7ed3\u679c\u662f 3 \u3002 \u793a\u4f8b\uff1a\u5b57\u7b26\u5230\u6574\u6570\u7684\u8f6c\u6362 digit = '5' # '5' \u7684 ASCII \u503c\u662f 53 num = ord(digit) - ord('0') # '5' - '0' = 5 print(f\"\u5b57\u7b26 {digit} \u8f6c\u6362\u4e3a\u6574\u6570\u662f {num}\") \u8f93\u51fa\uff1a \u5b57\u7b26 5 \u8f6c\u6362\u4e3a\u6574\u6570\u662f 5","title":"-ord('0')\uff1a\u5b57\u7b26\u5230\u6574\u6570\u7684\u8f6c\u6362"},{"location":"lesson7/Lesson7%20Python/#ord0","text":"\u901a\u8fc7\u5c06\u6574\u6570\u52a0\u4e0a ord('0') \uff0c\u53ef\u4ee5\u5f97\u5230\u5bf9\u5e94\u7684\u5b57\u7b26\u3002\u6bd4\u5982 5 + ord('0') \u7684\u7ed3\u679c\u662f\u5b57\u7b26 '5' \u3002 \u793a\u4f8b\uff1a\u6574\u6570\u5230\u5b57\u7b26\u7684\u8f6c\u6362 num = 7 digit = chr(num + ord('0')) # 7 + '0' = '7' print(f\"\u6574\u6570 {num} \u8f6c\u6362\u4e3a\u5b57\u7b26\u662f {digit}\") \u8f93\u51fa\uff1a \u6574\u6570 7 \u8f6c\u6362\u4e3a\u5b57\u7b26\u662f 7","title":"+ord('0')\uff1a\u6574\u6570\u5230\u5b57\u7b26\u7684\u8f6c\u6362"},{"location":"lesson7/Lesson7%20Python/#orda-orda","text":"\u901a\u8fc7\u5728\u5b57\u7b26\u4e0a\u52a0\u4e0a\u6216\u51cf\u53bb\u5b57\u7b26 ord('A') \uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5b57\u7b26\u4e0e\u5b57\u6bcd\u8868\u7684\u4f4d\u7f6e\u5173\u8054\u8d77\u6765\u3002\u4f8b\u5982\uff0c\u5c06\u5b57\u7b26 'C' \u51cf\u53bb 'A' \u53ef\u4ee5\u5f97\u5230 'C' \u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\uff08\u4ece0\u5f00\u59cb\u8ba1\u6570\uff09\u3002\u8fd9\u5bf9\u4e8e\u5b9e\u73b0\u7b80\u5355\u7684\u5b57\u6bcd\u7f16\u7801\u6216\u89e3\u7801\u975e\u5e38\u6709\u7528\u3002","title":"\u4f7f\u7528+ord(\u2018A\u2019)\u548c-ord(\u2018A\u2019)\u8fdb\u884c\u8f6c\u6362"},{"location":"lesson7/Lesson7%20Python/#-orda","text":"\u901a\u8fc7\u5c06\u5b57\u7b26\u51cf\u53bb ord('A') \uff0c\u53ef\u4ee5\u5f97\u5230\u5b57\u7b26\u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\uff08\u4ece0\u5f00\u59cb\uff09\u3002\u6bd4\u5982 ord('C') - ord('A') \u7684\u7ed3\u679c\u662f 2 \u3002 \u793a\u4f8b\uff1a\u5b57\u7b26\u5230\u5b57\u6bcd\u8868\u4f4d\u7f6e\u7684\u8f6c\u6362 letter = 'C' # 'C' \u7684 ASCII \u503c\u662f 67 position = ord(letter) - ord('A') # 'C' - 'A' = 2 print(f\"\u5b57\u7b26 {letter} \u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\u662f {position}\") \u8f93\u51fa\uff1a \u5b57\u7b26 C \u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\u662f 2","title":"-ord('A')\uff1a\u5b57\u7b26\u5230\u5b57\u6bcd\u8868\u4f4d\u7f6e\u7684\u8f6c\u6362"},{"location":"lesson7/Lesson7%20Python/#orda","text":"\u901a\u8fc7\u5c06\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\u52a0\u4e0a ord('A') \uff0c\u53ef\u4ee5\u5f97\u5230\u5bf9\u5e94\u7684\u5b57\u7b26\u3002\u6bd4\u5982 2 + ord('A') \u7684\u7ed3\u679c\u662f\u5b57\u7b26 'C' \u3002 \u793a\u4f8b\uff1a\u5b57\u6bcd\u8868\u4f4d\u7f6e\u5230\u5b57\u7b26\u7684\u8f6c\u6362 position = 2 letter = chr(position + ord('A')) # 2 + 'A' = 'C' print(f\"\u5b57\u6bcd\u8868\u4e2d\u4f4d\u7f6e {position} \u5bf9\u5e94\u7684\u5b57\u7b26\u662f {letter}\") \u8f93\u51fa\uff1a \u5b57\u6bcd\u8868\u4e2d\u4f4d\u7f6e 2 \u5bf9\u5e94\u7684\u5b57\u7b26\u662f C","title":"+ord('A')\uff1a\u5b57\u6bcd\u8868\u4f4d\u7f6e\u5230\u5b57\u7b26\u7684\u8f6c\u6362"},{"location":"lesson7/Lesson7%20Python/#ord0-ord0orda-orda","text":"\u901a\u8fc7\u7ed3\u5408\u4f7f\u7528\u8fd9\u4e9b\u64cd\u4f5c\u7b26\uff0c\u6211\u4eec\u53ef\u4ee5\u7075\u6d3b\u5730\u5728\u5b57\u7b26\u3001\u6570\u5b57\u548c\u5b57\u6bcd\u8868\u4f4d\u7f6e\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u6bcf\u4e2a\u6570\u5b57\u5b57\u7b26\u8f6c\u6362\u4e3a\u6574\u6570\uff0c\u7136\u540e\u8fdb\u884c\u7b80\u5355\u7684\u8fd0\u7b97\uff0c\u518d\u5c06\u7ed3\u679c\u8f6c\u6362\u56de\u5b57\u7b26\uff1b\u6216\u8005\u5c06\u5b57\u6bcd\u5b57\u7b26\u8f6c\u6362\u4e3a\u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\uff0c\u5e76\u8fdb\u884c\u4e00\u4e9b\u52a0\u5bc6\u64cd\u4f5c\u3002 \u793a\u4f8b\uff1a\u5904\u7406\u5b57\u7b26\u4e32\u4e2d\u7684\u6570\u5b57\u548c\u5b57\u6bcd str_input = \"A3C7\" sum_num = 0 for ch in str_input: if '0' <= ch <= '9': sum_num += (ord(ch) - ord('0')) # \u5c06\u6570\u5b57\u5b57\u7b26\u8f6c\u6362\u4e3a\u6574\u6570\u5e76\u6c42\u548c elif 'A' <= ch <= 'Z': pos = ord(ch) - ord('A') # \u5c06\u5b57\u6bcd\u5b57\u7b26\u8f6c\u6362\u4e3a\u5b57\u6bcd\u8868\u4f4d\u7f6e print(f\"{ch} \u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\u662f: {pos}\") print(f\"\u5b57\u7b26\u4e32 {str_input} \u4e2d\u6570\u5b57\u5b57\u7b26\u7684\u548c\u662f: {sum_num}\") \u8f93\u51fa\uff1a A \u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\u662f: 0 C \u5728\u5b57\u6bcd\u8868\u4e2d\u7684\u4f4d\u7f6e\u662f: 2 \u5b57\u7b26\u4e32 A3C7 \u4e2d\u6570\u5b57\u5b57\u7b26\u7684\u548c\u662f: 10","title":"\u7efc\u5408\u8fd0\u7528 +ord(\u20180\u2019)\u548c -ord(\u20180\u2019)\u4ee5\u53ca+ord(\u2018A\u2019)\u548c-ord(\u2018A\u2019)"},{"location":"lesson7/Lesson7%20Python/#13-ascii","text":"","title":"1.3 ASCII\u4f8b\u9898\u8bb2\u89e3"},{"location":"lesson7/Lesson7%20Python/#131-lc1309","text":"","title":"1.3.1 LC1309: \u89e3\u7801\u5b57\u6bcd\u5230\u6574\u6570\u6620\u5c04"},{"location":"lesson7/Lesson7%20Python/#_2","text":"\u7ed9\u5b9a\u4e00\u4e2a\u52a0\u5bc6\u5b57\u7b26\u4e32 s \uff0c\u5b83\u7531\u6570\u5b57 '0' \u5230 '9' \u3001 '#' \u548c\u5b57\u6bcd\u7ec4\u6210\u3002\u6211\u4eec\u6309\u7167\u4e0b\u8ff0\u89c4\u5219\u89e3\u7801\uff1a \u5b57\u7b26\uff08 '1' - '9' \uff09\u8868\u793a\u6620\u5c04\u5230\u5c0f\u5199\u5b57\u6bcd\uff08 'a' - 'i' \uff09\u3002 \u5b57\u7b26\uff08 '10#' - '26#' \uff09\u8868\u793a\u6620\u5c04\u5230\u5c0f\u5199\u5b57\u6bcd\uff08 'j' - 'z' \uff09\u3002 \u8fd4\u56de\u5b57\u7b26\u4e32 s \u89e3\u7801\u540e\u7684\u7ed3\u679c\u3002 \u6ce8\u610f\uff1a \u8f93\u5165\u53ea\u5305\u542b\u6570\u5b57\u3001\u5b57\u7b26 '#' \u548c\u5c0f\u5199\u5b57\u6bcd\u3002 \u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u8303\u56f4\u662f [1, 1000] \u3002","title":"\u9898\u76ee\u63cf\u8ff0\uff1a"},{"location":"lesson7/Lesson7%20Python/#_3","text":"\u8f93\u5165\uff1as = \"10#11#12\" \u8f93\u51fa\uff1a\"jkab\"","title":"\u793a\u4f8b\uff1a"},{"location":"lesson7/Lesson7%20Python/#_4","text":"\u51c6\u5907\u4e00\u4e2a\u5217\u8868 mapping \u6765\u5b58\u50a8\u5b57\u6bcd a \u5230 z \u7684\u6620\u5c04\u3002 \u904d\u5386\u5b57\u7b26\u4e32 s \uff1a \u5982\u679c\u5f53\u524d\u5b57\u7b26\u662f\u6570\u5b57\u4e14\u540e\u9762\u6709 '#' \uff0c\u5c31\u5c06\u5f53\u524d\u7684\u6570\u5b57\u548c\u4e0b\u4e00\u4e2a\u6570\u5b57\u62fc\u63a5\u6210\u4e24\u4f4d\u6570\u5b57\uff0c\u7136\u540e\u5c06\u5176\u8f6c\u6362\u4e3a\u5b57\u6bcd\u3002 \u5982\u679c\u5f53\u524d\u5b57\u7b26\u662f\u5355\u72ec\u7684\u6570\u5b57\uff0c\u5219\u76f4\u63a5\u8f6c\u6362\u4e3a\u5b57\u6bcd\u3002 \u6784\u5efa\u89e3\u5bc6\u540e\u7684\u5b57\u7b26\u4e32\u3002","title":"\u63d0\u793a"},{"location":"lesson7/Lesson7%20Python/#_5","text":"class Solution: def freqAlphabets(self, s: str) -> str: # \u7528\u4e00\u4e2a\u5217\u8868\u5b58\u50a8\u5b57\u6bcd a-z \u7684\u6620\u5c04 mapping = [chr(i + ord('a')) for i in range(26)] result = [] n = len(s) i = 0 while i < n: if i + 2 < n and s[i + 2] == '#': # \u68c0\u67e5\u662f\u5426\u662f '10#' \u5230 '26#' num = int(s[i:i + 2]) # \u8ba1\u7b97\u4e24\u4f4d\u6570 result.append(mapping[num - 1]) # \u5c06\u5176\u6620\u5c04\u4e3a\u5b57\u6bcd i += 3 # \u8df3\u8fc7\u6570\u5b57\u548c '#' else: # \u5355\u4e2a\u6570\u5b57 '1' \u5230 '9' num = int(s[i]) # \u8f6c\u6362\u6210\u6570\u5b57 result.append(mapping[num - 1]) # \u6620\u5c04\u4e3a\u5b57\u6bcd i += 1 return ''.join(result) # \u5c06\u5217\u8868\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32 \u6784\u5efa\u6620\u5c04\u8868 \uff1amapping = [chr(i + ord('a')) for i in range(26)]\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a mapping \u7684\u5217\u8868\uff0c\u5b83\u5305\u542b\u4e86\u4ece 'a' \u5230 'z' \u7684\u6240\u6709\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u3002\u8fd9\u662f\u901a\u8fc7\u5217\u8868\u63a8\u5bfc\u5f0f\u548c chr \u51fd\u6570\u5b9e\u73b0\u7684\uff0c ord('a') \u8fd4\u56de\u5b57\u7b26 'a' \u7684ASCII\u503c\uff0c\u7136\u540e chr(i + ord('a')) \u8fd4\u56de\u4ece 'a' \u5f00\u59cb\u7684\u7b2c i \u4e2a\u5b57\u6bcd\u3002 \u904d\u5386\u5b57\u7b26\u4e32 \uff1a\u5faa\u73af\u904d\u5386\u52a0\u5bc6\u5b57\u7b26\u4e32 s \u3002 \u5982\u679c\u5f53\u524d\u5b57\u7b26\u540e\u9762\u4e24\u4e2a\u5b57\u7b26\u6784\u6210\u4e00\u4e2a\u6709\u6548\u7684 \"#\" \u5e8f\u5217\uff0c\u63d0\u53d6\u8be5\u5e8f\u5217\uff0c\u8ba1\u7b97\u5bf9\u5e94\u7684\u6570\u5b57\u5e76\u6620\u5c04\u4e3a\u5b57\u6bcd\u3002 \u5982\u679c\u662f\u5355\u4e2a\u6570\u5b57\uff0c\u5219\u76f4\u63a5\u6620\u5c04\u4e3a\u76f8\u5e94\u7684\u5b57\u6bcd\u3002 \u7ed3\u679c\u6784\u5efa \uff1a\u5c06\u89e3\u5bc6\u540e\u7684\u5b57\u7b26\u62fc\u63a5\u5230\u7ed3\u679c\u5b57\u7b26\u4e32\u4e2d\u3002","title":"\u53c2\u8003\u7b54\u6848"},{"location":"lesson7/Lesson7%20Python/#14-ascii","text":"","title":"1.4 ASCII\u4e3e\u4e00\u53cd\u4e09"},{"location":"lesson7/Lesson7%20Python/#141-lc387","text":"","title":"1.4.1 LC387. \u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u552f\u4e00\u5b57\u7b26"},{"location":"lesson7/Lesson7%20Python/#_6","text":"\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u51fa\u73b0\u7684\u5b57\u7b26\uff0c\u5e76\u8fd4\u56de\u5b83\u7684\u7d22\u5f15\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de -1 \u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson7/Lesson7%20Python/#_7","text":"\u901a\u8fc7 \u5217\u8868 \u6765\u5b9e\u73b0\u5b57\u7b26\u9891\u7387\u7edf\u8ba1\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u5927\u5c0f\u4e3a 26 \u7684\u5217\u8868\u6765\u5b58\u50a8\u6bcf\u4e2a\u5b57\u6bcd\u51fa\u73b0\u7684\u6b21\u6570\u3002 \u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a \u5b57\u7b26\u9891\u7387\u7edf\u8ba1 \uff1a\u4f7f\u7528\u4e00\u4e2a\u5927\u5c0f\u4e3a 26 \u7684\u5217\u8868\u6765\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u6bcd\u7684\u51fa\u73b0\u6b21\u6570\u3002\u901a\u8fc7 ord(s[i]) - ord('a') \u53ef\u4ee5\u786e\u5b9a\u5b57\u6bcd\u5728\u5217\u8868\u4e2d\u7684\u7d22\u5f15\u4f4d\u7f6e\u3002 \u904d\u5386\u5b57\u7b26\u4e32 \uff1a\u5148\u904d\u5386\u4e00\u6b21\u5b57\u7b26\u4e32\uff0c\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\u3002 \u627e\u5230\u7b2c\u4e00\u4e2a\u552f\u4e00\u5b57\u7b26 \uff1a\u518d\u6b21\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u6839\u636e\u7edf\u8ba1\u7ed3\u679c\u627e\u5230\u7b2c\u4e00\u4e2a\u51fa\u73b0\u6b21\u6570\u4e3a 1 \u7684\u5b57\u7b26\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson7/Lesson7%20Python/#_8","text":"class Solution: def firstUniqChar(self, s: str) -> int: # \u5b9a\u4e49\u5927\u5c0f\u4e3a26\u7684\u5217\u8868\uff0c\u8bb0\u5f55\u6bcf\u4e2a\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570 count = [0] * 26 # \u7b2c\u4e00\u6b21\u904d\u5386\uff1a\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26\u7684\u9891\u7387 for char in s: count[ord(char) - ord('a')] += 1 # \u7b2c\u4e8c\u6b21\u904d\u5386\uff1a\u627e\u5230\u7b2c\u4e00\u4e2a\u51fa\u73b0\u6b21\u6570\u4e3a1\u7684\u5b57\u7b26 for i, char in enumerate(s): if count[ord(char) - ord('a')] == 1: return i # \u8fd4\u56de\u7b2c\u4e00\u4e2a\u4e0d\u91cd\u590d\u5b57\u7b26\u7684\u7d22\u5f15 return -1 # \u6ca1\u6709\u627e\u5230\u4e0d\u91cd\u590d\u7684\u5b57\u7b26\uff0c\u8fd4\u56de-1","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson7/Lesson7%20Python/#_9","text":"count = [0] * 26 \uff1a\u521d\u59cb\u5316\u4e00\u4e2a\u957f\u5ea6\u4e3a26\u7684\u5217\u8868 count \uff0c\u7528\u4e8e\u8bb0\u5f55\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u6bcf\u4e2a\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570\u3002\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u521d\u59cb\u5316\u4e3a0\u3002 \u7b2c\u4e00\u6b21\u904d\u5386\u5b57\u7b26\u4e32 \uff1a\u5728\u7b2c\u4e00\u6b21\u904d\u5386\u4e2d\uff0c\u4f7f\u7528 ord(char) - ord('a') \u8ba1\u7b97\u5b83\u7684\u7d22\u5f15\uff08\u5176\u4e2d 'a' \u662f\u5b57\u6bcd\u8868\u4e2d\u7684\u8d77\u59cb\u5b57\u6bcd\uff09\uff0c\u7136\u540e\u5728 count \u5217\u8868\u4e2d\u5bf9\u5e94\u7684\u7d22\u5f15\u4f4d\u7f6e\u589e\u52a01\uff0c\u4ee5\u6b64\u6765\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26\u51fa\u73b0\u7684\u6b21\u6570\u3002 \u7b2c\u4e8c\u6b21\u904d\u5386\u5b57\u7b26\u4e32 \uff1a\u901a\u8fc7\u7b2c\u4e8c\u6b21\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u627e\u51fa\u7b2c\u4e00\u4e2a\u51fa\u73b0\u6b21\u6570\u4e3a 1 \u7684\u5b57\u7b26\uff0c\u5e76\u8fd4\u56de\u8be5\u5b57\u7b26\u7684\u7d22\u5f15\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u5982\u679c\u6ca1\u6709\u627e\u5230\u552f\u4e00\u5b57\u7b26\uff0c\u5219\u8fd4\u56de -1 \u3002","title":"\u4ee3\u7801\u8bb2\u89e3"},{"location":"lesson7/Lesson7%20Python/#142-lc171-excel","text":"","title":"1.4.2 LC171. Excel\u8868\u5217\u5e8f\u53f7"},{"location":"lesson7/Lesson7%20Python/#_10","text":"\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 columnTitle \uff0c\u8868\u793a Excel \u8868\u683c\u4e2d\u7684\u5217\u540d\u3002\u8bf7\u5c06\u5176\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5217\u5e8f\u53f7\u3002 \u4f8b\u5982\uff1a A -> 1 B -> 2 C -> 3 ... Z -> 26 AA -> 27 AB -> 28 ...","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson7/Lesson7%20Python/#_11","text":"\u901a\u8fc7 \u8fdb\u5236\u8f6c\u6362 \u7684\u65b9\u6cd5\uff0c\u5c06 Excel \u5217\u540d\u770b\u4f5c\u4e00\u4e2a\u4ee5 26 \u4e3a\u57fa\u6570\u7684\u6570\u5b57\u7cfb\u7edf\uff0c\u6bcf\u4e2a\u5b57\u6bcd\u4ee3\u8868\u4e00\u4e2a\u6570\u5b57\u3002 A \u5230 Z \u5206\u522b\u4ee3\u8868 1 \u5230 26\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5217\u540d\u8f6c\u6362\u6210\u76f8\u5e94\u7684\u6570\u5b57\u3002 \u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a \u5b57\u7b26\u8f6c\u6362\u4e3a\u6570\u5b57 \uff1a\u6bcf\u4e2a\u5b57\u7b26\u4ece A \u5230 Z \u5bf9\u5e94\u7684\u503c\u4e3a 1 \u5230 26 \uff0c\u53ef\u4ee5\u901a\u8fc7 columnTitle[i] - ord('A') + 1 \u5f97\u5230\u5176\u5bf9\u5e94\u7684\u6570\u503c\u3002 \u8fdb\u5236\u8f6c\u6362 \uff1a\u5c06\u5217\u540d\u770b\u4f5c\u662f 26 \u8fdb\u5236\u6570\uff0c\u4ece\u53f3\u5230\u5de6\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u5c06\u6bcf\u4e2a\u5b57\u7b26\u8f6c\u6362\u6210\u6570\u5b57\u5e76\u4e58\u4ee5 26 \u7684\u5e42\u6b21\u7d2f\u52a0\u5230\u7ed3\u679c\u4e2d\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u6700\u7ec8\u7684\u7d2f\u52a0\u7ed3\u679c\u5373\u4e3a Excel \u8868\u683c\u5217\u540d\u5bf9\u5e94\u7684\u5217\u5e8f\u53f7\u3002 class Solution: def titleToNumber(self, columnTitle: str) -> int: result = 0 pow_num = 0 # \u4ece\u53f3\u5230\u5de6\u904d\u5386\u5217\u540d for i in range(len(columnTitle) - 1, -1, -1): # \u5c06\u5b57\u7b26\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u6570\u503c extract_char = ord(columnTitle[i]) - ord('A') + 1 # \u8ba1\u7b97 26 \u7684\u5e42\u6b21\uff0c\u5e76\u7d2f\u52a0\u5230\u7ed3\u679c\u4e2d result += extract_char * (26 ** pow_num) pow_num += 1 return result","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson7/Lesson7%20Python/#_12","text":"extract_char = ord(columnTitle[i]) - ord('A') + 1 \uff1a\u5c06\u5b57\u6bcd A-Z \u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684 1-26 \u6570\u5b57\u3002 \u8fdb\u5236\u8f6c\u6362 \uff1a\u6bcf\u4e2a\u5b57\u7b26\u7684\u4f4d\u7f6e\u5bf9\u5e94 26 \u7684\u5e42\u6b21\uff0c\u6700\u53f3\u8fb9\u7684\u5b57\u7b26\u4e58\u4ee5 26^0 \uff0c\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u4e58\u4ee5 26^1 \uff0c\u4f9d\u6b21\u7c7b\u63a8\u3002 result += extract_char * (26 ** pow_num) \uff1a\u5c06\u6bcf\u4e2a\u5b57\u7b26\u5bf9\u5e94\u7684\u503c\u4e58\u4ee5 26 \u7684\u5e42\u6b21\uff0c\u5e76\u7d2f\u52a0\u5230\u7ed3\u679c\u4e2d\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u6700\u7ec8\u7ed3\u679c\u662f\u5217\u540d\u5bf9\u5e94\u7684\u5217\u5e8f\u53f7\u3002","title":"\u4ee3\u7801\u8bb2\u89e3"},{"location":"lesson7/Lesson7%20Python/#143-lc804","text":"","title":"1.4.3 LC804. \u552f\u4e00\u6469\u65af\u5bc6\u7801\u8bcd"},{"location":"lesson7/Lesson7%20Python/#_13","text":"\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4 words \uff0c\u5176\u4e2d\u6bcf\u4e2a\u5355\u8bcd\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u3002\u6bcf\u4e2a\u5b57\u6bcd\u53ef\u4ee5\u7528\u6469\u65af\u5bc6\u7801\u8868\u793a\uff0c\u4f8b\u5982\uff1a 'a' -> \".-\" 'b' -> \"-...\" 'c' -> \"-.-.\" ... \u4f60\u9700\u8981\u5c06\u6bcf\u4e2a\u5355\u8bcd\u8f6c\u6362\u4e3a\u6469\u65af\u5bc6\u7801\u8868\u793a\uff0c\u5e76\u8fd4\u56de\u552f\u4e00\u6469\u65af\u5bc6\u7801\u8bcd\u7684\u4e2a\u6570\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson7/Lesson7%20Python/#_14","text":"\u6469\u65af\u5bc6\u7801\u6620\u5c04 \uff1a\u6bcf\u4e2a\u5b57\u6bcd\u5bf9\u5e94\u4e00\u4e2a\u56fa\u5b9a\u7684\u6469\u65af\u5bc6\u7801\uff0c\u53ef\u4ee5\u7528\u6570\u7ec4\u6765\u8868\u793a\u6bcf\u4e2a\u5b57\u6bcd\u7684\u6469\u65af\u5bc6\u7801\u3002 \u9010\u5b57\u8f6c\u6362 \uff1a\u904d\u5386\u6bcf\u4e2a\u5355\u8bcd\uff0c\u5c06\u5176\u8f6c\u6362\u4e3a\u6469\u65af\u5bc6\u7801\u7ec4\u5408\u3002 \u552f\u4e00\u6027\u68c0\u67e5 \uff1a\u901a\u8fc7\u5411\u91cf\u5b58\u50a8\u5df2\u8f6c\u6362\u7684\u6469\u65af\u5bc6\u7801\uff0c\u5e76\u68c0\u67e5\u6bcf\u4e2a\u8f6c\u6362\u662f\u5426\u662f\u552f\u4e00\u7684\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u6700\u7ec8\u8fd4\u56de\u552f\u4e00\u6469\u65af\u5bc6\u7801\u7684\u6570\u91cf\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson7/Lesson7%20Python/#_15","text":"class Solution: def uniqueMorseRepresentations(self, words: list[str]) -> int: # \u7528\u6570\u7ec4\u6765\u5b58\u50a8\u5b57\u6bcd\u5230\u6469\u65af\u5bc6\u7801\u7684\u6620\u5c04 morse_code = [\".-\", \"-...\", \"-.-.\", \"-..\", \".\", \"..-.\", \"--.\", \"....\", \"..\", \".---\", \"-.-\", \".-..\", \"--\", \"-.\", \"---\", \".--.\", \"--.-\", \".-.\", \"...\", \"-\", \"..-\", \"...-\", \".--\", \"-..-\", \"-.--\", \"--..\"] # \u4f7f\u7528\u96c6\u5408\u6765\u5b58\u50a8\u552f\u4e00\u7684\u6469\u65af\u5bc6\u7801\u8868\u793a result = set() # \u904d\u5386\u6bcf\u4e2a\u5355\u8bcd for word in words: combination = \"\" # \u5c06\u5355\u8bcd\u8f6c\u6362\u4e3a\u6469\u65af\u5bc6\u7801\u8868\u793a for char in word: combination += morse_code[ord(char) - ord('a')] # \u901a\u8fc7 'a' \u7684 ASCII \u503c\u627e\u5230\u5bf9\u5e94\u7684\u6469\u65af\u5bc6\u7801 # \u5c06\u552f\u4e00\u7684\u6469\u65af\u5bc6\u7801\u8868\u793a\u52a0\u5165\u96c6\u5408 result.add(combination) return len(result)","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson7/Lesson7%20Python/#_16","text":"\u6469\u65af\u5bc6\u7801\u6620\u5c04 \uff1a\u7528\u957f\u5ea6\u4e3a 26 \u7684\u6570\u7ec4 morse_code \u6765\u5b58\u50a8\u5b57\u6bcd 'a' \u5230 'z' \u5bf9\u5e94\u7684\u6469\u65af\u5bc6\u7801\u8868\u793a\u3002 \u5355\u8bcd\u8f6c\u6362 \uff1a\u901a\u8fc7\u904d\u5386\u5355\u8bcd\u7684\u6bcf\u4e2a\u5b57\u7b26\uff0c\u6839\u636e\u5b57\u7b26\u7684 ASCII \u503c\u627e\u5230\u5bf9\u5e94\u7684\u6469\u65af\u5bc6\u7801\u5e76\u5c06\u5176\u7ec4\u5408\u8d77\u6765\u3002 \u68c0\u67e5\u552f\u4e00\u6027 \uff1a\u901a\u8fc7\u96c6\u5408set\uff08\uff09\u7684\u65b9\u5f0f\u786e\u4fdd\u5f53\u524d\u6469\u65af\u5bc6\u7801\u7ec4\u5408\u5728 result \u4e2d\u7684\u552f\u4e00\u6027\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u8fd4\u56de\u5b58\u50a8\u552f\u4e00\u6469\u65af\u5bc6\u7801\u7ec4\u5408\u7684\u5411\u91cf result \u7684\u5927\u5c0f\uff0c\u5373\u552f\u4e00\u6469\u65af\u5bc6\u7801\u7684\u6570\u91cf\u3002","title":"\u4ee3\u7801\u8bb2\u89e3"},{"location":"lesson7/Lesson7%20Python/#2","text":"","title":"2. \u8fdb\u5236\u8f6c\u6362"},{"location":"lesson7/Lesson7%20Python/#21","text":"\u4e8c\u8fdb\u5236\uff08Base 2\uff09\uff1a \u4f7f\u7528\u6570\u5b57 0 \u548c 1\u3002\u4f8b\u5982\uff1a 1010 \uff08\u4e8c\u8fdb\u5236\uff09 = 10 \uff08\u5341\u8fdb\u5236\uff09\u3002 \u516b\u8fdb\u5236\uff08Base 8\uff09\uff1a \u4f7f\u7528\u6570\u5b57 0 \u5230 7\u3002\u4f8b\u5982\uff1a 12 \uff08\u516b\u8fdb\u5236\uff09 = 10 \uff08\u5341\u8fdb\u5236\uff09\u3002 \u5341\u8fdb\u5236\uff08Base 10\uff09\uff1a \u6807\u51c6\u6570\u5b57\u7cfb\u7edf\u3002\u4f8b\u5982\uff1a 10 \uff08\u5341\u8fdb\u5236\uff09\u3002 \u5341\u516d\u8fdb\u5236\uff08Base 16\uff09\uff1a \u4f7f\u7528\u6570\u5b57 0-9 \u548c\u5b57\u6bcd A-F\u3002\u4f8b\u5982\uff1a A \uff08\u5341\u516d\u8fdb\u5236\uff09= 10 \uff08\u5341\u8fdb\u5236\uff09\u3002 \u4ee5\u4e0b\u8868\u683c\u5c55\u793a\u4e86\u5341\u8fdb\u5236\u6570\u5b57\u4ece1\u523010\u7684\u4e8c\u8fdb\u5236\u3001\u516b\u8fdb\u5236\u548c\u5341\u516d\u8fdb\u5236\u8868\u793a: \u5341\u8fdb\u5236 (Decimal) \u4e8c\u8fdb\u5236 (Binary) \u516b\u8fdb\u5236 (Octal) \u5341\u516d\u8fdb\u5236 (Hexadecimal) 1 1 1 1 2 10 2 2 3 11 3 3 4 100 4 4 5 101 5 5 6 110 6 6 7 111 7 7 8 1000 10 8 9 1001 11 9 10 1010 12 A","title":"2.1 \u6570\u5b57\u8fdb\u5236\u6982\u8ff0"},{"location":"lesson7/Lesson7%20Python/#22","text":"","title":"2.2 \u5341\u8fdb\u5236\u5230\u4e8c\u8fdb\u5236\u7684\u8f6c\u6362"},{"location":"lesson7/Lesson7%20Python/#_17","text":"\u5c06\u5341\u8fdb\u5236\u6570\u9664\u4ee5 2\u3002 \u8bb0\u5f55\u4f59\u6570\u3002 \u7528\u5546\u7ee7\u7eed\u9664\u4ee5 2\uff0c\u76f4\u5230\u5546\u4e3a 0\u3002 \u4e8c\u8fdb\u5236\u6570\u5373\u4e3a\u9006\u5e8f\u8bfb\u53d6\u7684\u4f59\u6570\u5e8f\u5217\u3002","title":"\u624b\u52a8\u65b9\u6cd5\uff1a\u4f7f\u7528\u77ed\u9664\u6cd5"},{"location":"lesson7/Lesson7%20Python/#13","text":"13 / 2 = 6 \u4f59 1 6 / 2 = 3 \u4f59 0 3 / 2 = 1 \u4f59 1 1 / 2 = 0 \u4f59 1 \u7ed3\u679c\uff1a 13 (\u5341\u8fdb\u5236) = 1101 (\u4e8c\u8fdb\u5236)","title":"\u793a\u4f8b\uff1a\u5c06 13 \u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236"},{"location":"lesson7/Lesson7%20Python/#python","text":"def decimal_to_binary(num): ans = \"\" while num > 0: ans += str(num % 2) num = num // 2 return ans[::-1] # \u9006\u5e8f\u8f93\u51fa num = int(input(\"Enter a number: \")) binary_representation = decimal_to_binary(num) print(binary_representation) \u4ee3\u7801\u89e3\u91ca\uff1a ans += str(num % 2)\uff1a\u4f7f\u7528 num % 2 \u8ba1\u7b97\u5f53\u524d\u4f4d\u7684\u4e8c\u8fdb\u5236\u503c\uff080 \u6216 1\uff09\uff0c\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\uff0c\u6dfb\u52a0\u5230 ans \u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u3002 num = num // 2\uff1a\u4f7f\u7528\u6574\u6570\u9664\u6cd5 // \u66f4\u65b0 num \u4e3a\u5f53\u524d\u7684\u5546\uff0c\u4ee5\u4fbf\u5728\u4e0b\u4e00\u6b21\u8fed\u4ee3\u4e2d\u7ee7\u7eed\u8ba1\u7b97\u4e0b\u4e00\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u3002 return ans[::-1]\uff1a\u7531\u4e8e\u8ba1\u7b97\u5f97\u5230\u7684\u4e8c\u8fdb\u5236\u4f4d\u662f\u9006\u5e8f\u7684\uff08\u6700\u4f4e\u4f4d\u5728\u524d\uff0c\u6700\u9ad8\u4f4d\u5728\u540e\uff09\uff0c\u4f7f\u7528\u5207\u7247 [::-1] \u5c06\u5b57\u7b26\u4e32\u9006\u5e8f\uff0c\u4ee5\u5f97\u5230\u6b63\u786e\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u3002","title":"\u7528 Python\u5b9e\u73b0\u5341\u8fdb\u5236\u5230\u4e8c\u8fdb\u5236\u7684\u8f6c\u6362"},{"location":"lesson7/Lesson7%20Python/#23","text":"","title":"2.3 \u4e8c\u8fdb\u5236\u5230\u5341\u8fdb\u5236\u7684\u8f6c\u6362"},{"location":"lesson7/Lesson7%20Python/#_18","text":"\u5c06\u6bcf\u4e2a\u4e8c\u8fdb\u5236\u4f4d\u4e58\u4ee5 2 \u7684\u76f8\u5e94\u6b21\u65b9\uff08\u4ece\u53f3\u5f80\u5de6\uff0c\u4f4d\u7f6e\u4ece 0 \u5f00\u59cb\uff09\u3002 \u5c06\u6240\u6709\u7ed3\u679c\u76f8\u52a0\u3002","title":"\u624b\u52a8\u65b9\u6cd5\uff1a"},{"location":"lesson7/Lesson7%20Python/#1101","text":"1 * 2^3 + 1 * 2^2 + 0 * 2^1 + 1 * 2^0 = 8 + 4 + 0 + 1 = 13 \u7ed3\u679c\uff1a 1101 (\u4e8c\u8fdb\u5236) = 13 (\u5341\u8fdb\u5236)","title":"\u793a\u4f8b\uff1a\u5c06 1101 \u8f6c\u6362\u4e3a\u5341\u8fdb\u5236"},{"location":"lesson7/Lesson7%20Python/#python_1","text":"def binary_to_decimal(binary_str): ans = 0 for char in binary_str: ans = ans * 2 + int(char) return ans binary_str = input(\"Enter a number with base of 2: \") decimal_value = binary_to_decimal(binary_str) print(decimal_value) ans = ans * 2 + int(char)\uff1a\u5728\u6bcf\u6b21\u8fed\u4ee3\u4e2d\uff0c\u5c06\u5f53\u524d\u7ed3\u679c ans \u4e58\u4ee5 2\uff08\u4e8c\u8fdb\u5236\u7684\u57fa\u6570\uff09\uff0c\u7136\u540e\u52a0\u4e0a\u5f53\u524d\u5b57\u7b26\u4ee3\u8868\u7684\u6570\u503c\uff08 int(char) \u5c06\u5b57\u7b26 '0' \u6216 '1' \u8f6c\u6362\u4e3a\u6574\u6570 0 \u6216 1\uff09\u3002\u8fd9\u6837\uff0c\u6bcf\u6b21\u8fed\u4ee3\u90fd\u4f1a\u6b63\u786e\u5730\u5c06\u4e8c\u8fdb\u5236\u4f4d\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5341\u8fdb\u5236\u503c\u3002 \u8fd9\u4e2a\u8fc7\u7a0b\u6a21\u62df\u4e86\u624b\u52a8\u8ba1\u7b97\u7684\u8fc7\u7a0b\uff0c\u6bcf\u6b21\u4e58\u4ee5 2 \u76f8\u5f53\u4e8e\u5728\u5341\u8fdb\u5236\u4e2d\u5c06\u4f4d\u6570\u8fdb\u4e00\u4f4d\uff0c\u7136\u540e\u52a0\u4e0a\u5f53\u524d\u7684\u4e8c\u8fdb\u5236\u4f4d\u3002","title":"\u7528 Python\u5b9e\u73b0\u4e8c\u8fdb\u5236\u5230\u5341\u8fdb\u5236\u7684\u8f6c\u6362"},{"location":"lesson7/Lesson7%20Python/#24","text":"","title":"2.4 \u5341\u8fdb\u5236\u5230\u5341\u516d\u8fdb\u5236\u7684\u8f6c\u6362"},{"location":"lesson7/Lesson7%20Python/#_19","text":"\u5c06\u5341\u8fdb\u5236\u6570\u9664\u4ee5 16\u3002 \u8bb0\u5f55\u4f59\u6570\uff0c\u5982\u679c\u4f59\u6570\u5927\u4e8e 9\uff0c\u5219\u5c06\u5176\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5341\u516d\u8fdb\u5236\u5b57\u7b26\uff08A-F\uff09\u3002 \u7528\u5546\u7ee7\u7eed\u9664\u4ee5 16\uff0c\u76f4\u5230\u5546\u4e3a 0\u3002 \u5341\u516d\u8fdb\u5236\u6570\u5373\u4e3a\u9006\u5e8f\u8bfb\u53d6\u7684\u4f59\u6570\u5e8f\u5217\u3002","title":"\u624b\u52a8\u65b9\u6cd5\uff1a"},{"location":"lesson7/Lesson7%20Python/#479","text":"479 / 16 = 29 \u4f59 F 29 / 16 = 1 \u4f59 D 1 / 16 = 0 \u4f59 1 \u7ed3\u679c\uff1a 479 (\u5341\u8fdb\u5236) = 1DF (\u5341\u516d\u8fdb\u5236)","title":"\u793a\u4f8b\uff1a\u5c06 479 \u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236"},{"location":"lesson7/Lesson7%20Python/#python_2","text":"def dec_to_hex(num): result = \"\" while num != 0: remainder = num % 16 if remainder >= 10: result += chr(remainder - 10 + ord('a')) else: result += str(remainder) num = num // 16 return result[::-1] # \u9006\u5e8f\u8f93\u51fa # \u4e3b\u7a0b\u5e8f print(dec_to_hex(479)) remainder = num % 16\uff1a\u4f7f\u7528 num % 16 \u8ba1\u7b97\u5f53\u524d\u4f4d\u7684\u4f59\u6570\uff080-15\uff09\uff0c\u8fd9\u4e2a\u4f59\u6570\u5c31\u662f\u5f53\u524d\u4f4d\u7684\u5341\u516d\u8fdb\u5236\u503c\u3002 result += chr(remainder - 10 + ord('a'))\uff1a\u5982\u679c\u4f59\u6570\u5927\u4e8e\u7b49\u4e8e10\uff08\u5373A-F\uff09\uff0c\u4f7f\u7528 chr(remainder - 10 + ord('a')) \u5c06\u4f59\u6570\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5341\u516d\u8fdb\u5236\u5b57\u7b26\uff08'a' \u5230 'f'\uff09\u3002 result += str(remainder)\uff1a\u5982\u679c\u4f59\u6570\u5c0f\u4e8e10\uff0c\u76f4\u63a5\u5c06\u4f59\u6570\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\uff0c\u5e76\u6dfb\u52a0\u5230 result \u7684\u672b\u5c3e\u3002 return result[::-1]\uff1a\u8ba1\u7b97\u5f97\u5230\u7684\u5341\u516d\u8fdb\u5236\u4f4d\u662f\u9006\u5e8f\u7684\uff08\u6700\u4f4e\u4f4d\u5728\u524d\uff0c\u6700\u9ad8\u4f4d\u5728\u540e\uff09\uff0c\u4f7f\u7528\u5207\u7247 [::-1] \u5c06\u5b57\u7b26\u4e32\u9006\u5e8f\uff0c\u4ee5\u5f97\u5230\u6b63\u786e\u7684\u5341\u516d\u8fdb\u5236\u8868\u793a\u3002","title":"\u793a\u4f8b\uff1a\u7528 Python \u5b9e\u73b0\u5341\u8fdb\u5236\u5230\u5341\u516d\u8fdb\u5236\u7684\u8f6c\u6362"},{"location":"lesson7/Lesson7%20Python/#25","text":"","title":"2.5 \u4e8c\u8fdb\u5236\u5230\u5341\u516d\u8fdb\u5236\u7684\u8f6c\u6362"},{"location":"lesson7/Lesson7%20Python/#_20","text":"\u4e8c\u8fdb\u5236\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236\u7684\u65b9\u6cd5\u662f\u5c06\u4e8c\u8fdb\u5236\u6570\u6bcf4\u4f4d\u5206\u4e3a\u4e00\u7ec4\uff0c\u7136\u540e\u5c06\u6bcf\u7ec4\u7684\u4e8c\u8fdb\u5236\u6570\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5341\u516d\u8fdb\u5236\u6570\u3002\u56e0\u4e3a\u5341\u516d\u8fdb\u5236\u662f\u4ee54\u4f4d\u4e8c\u8fdb\u5236\u4e3a\u57fa\u7840\u7684\uff0c\u6240\u4ee5\u8fd9\u4e2a\u8fc7\u7a0b\u975e\u5e38\u76f4\u63a5\u3002","title":"\u624b\u52a8\u65b9\u6cd5\uff1a"},{"location":"lesson7/Lesson7%20Python/#_21","text":"\u4ece\u53f3\u5230\u5de6\uff0c\u5c06\u4e8c\u8fdb\u5236\u6570\u6bcf4\u4f4d\u5206\u4e3a\u4e00\u7ec4\u3002\u5982\u679c\u4e0d\u8db34\u4f4d\uff0c\u5219\u5728\u5de6\u4fa7\u8865\u96f6\u3002 \u5c06\u6bcf\u7ec4\u4e8c\u8fdb\u5236\u6570\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u5341\u516d\u8fdb\u5236\u6570\u3002 \u5c06\u8f6c\u6362\u540e\u7684\u5341\u516d\u8fdb\u5236\u6570\u8fde\u63a5\u8d77\u6765\uff0c\u5f97\u5230\u6700\u7ec8\u7ed3\u679c\u3002","title":"\u6b65\u9aa4\uff1a"},{"location":"lesson7/Lesson7%20Python/#110111101","text":"\u6b65\u9aa4\uff1a \u5c06 110111101 \u5206\u4e3a 1101 \u548c 1110 \uff0c\u4e0d\u8db34\u4f4d\u7684\u5de6\u4fa7\u8865\u96f6\uff1a 0110 1110 1101 \u5c06\u6bcf\u7ec4\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236\uff1a - 0110 \u8f6c\u6362\u4e3a 6 - 1110 \u8f6c\u6362\u4e3a E - 1101 \u8f6c\u6362\u4e3a D \u5c06\u8fd9\u4e9b\u8f6c\u6362\u7ed3\u679c\u8fde\u63a5\u8d77\u6765\uff1a 6ED \u7ed3\u679c\uff1a 110111101 (\u4e8c\u8fdb\u5236) = 6ED (\u5341\u516d\u8fdb\u5236) \u4ee3\u7801\u5b9e\u73b0\u90e8\u5206\u6211\u4eec\u73b0\u5728\u5148\u4e0d\u9700\u8981\u6df1\u5165\u4e86\u89e3\uff0c\u56e0\u4e3a\u6d89\u53ca\u5230\u5176\u4ed6\u7684\u4e00\u4e9b\u51fd\u6570\u548c\u5e93\u7684\u4f7f\u7528\uff0c\u4e00\u822c\u505a\u6cd5\u8fd8\u662f\u5148\u5c06\u4e8c\u8fdb\u5236\u8f6c\u5341\u8fdb\u5236\uff0c\u518d\u5c06\u5341\u8fdb\u5236\u8f6c\u5341\u516d\u8fdb\u5236\u3002\u5f53\u524d\u6211\u4eec\u4e3b\u8981\u4e13\u6ce8\u4e8e\u7406\u89e3\u624b\u52a8\u65b9\u6cd5\uff0c\u8fd9\u6837\u53ef\u4ee5\u5e2e\u52a9\u66f4\u597d\u5730\u638c\u63e1\u8fdb\u5236\u8f6c\u6362\u7684\u57fa\u7840\u6982\u5ff5\u3002","title":"\u793a\u4f8b\uff1a\u5c06\u4e8c\u8fdb\u5236110111101\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236"},{"location":"lesson7/Lesson7%20Python/#26","text":"","title":"2.6 \u8fdb\u5236\u4f8b\u9898\u8bb2\u89e3"},{"location":"lesson7/Lesson7%20Python/#261-lc504","text":"","title":"2.6.1 LC504. \u4e03\u8fdb\u5236\u6570"},{"location":"lesson7/Lesson7%20Python/#_22","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570 num \uff0c\u8fd4\u56de\u5b83\u7684 7 \u8fdb\u5236\u8868\u793a\u5b57\u7b26\u4e32\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson7/Lesson7%20Python/#_23","text":"\u5c06\u4e00\u4e2a\u6574\u6570\u8f6c\u6362\u4e3a7\u8fdb\u5236\u672c\u8d28\u4e0a\u548c\u8f6c\u6362\u4e3a\u4efb\u4f55\u5176\u4ed6\u8fdb\u5236\u7684\u601d\u8def\u4e00\u81f4\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0d\u65ad\u5730\u53d6\u6a21\uff08 % \uff09\u548c\u9664\u6cd5\uff08 / \uff09\u64cd\u4f5c\u6765\u9010\u4f4d\u83b7\u53d67\u8fdb\u5236\u7684\u5404\u4f4d\u6570\u5b57\uff0c\u6700\u540e\u5c06\u5176\u53cd\u8f6c\u5373\u53ef\u5f97\u5230\u6700\u7ec8\u7684\u7ed3\u679c\u3002 \u5904\u7406\u8d1f\u6570 \uff1a \u5982\u679c\u8f93\u5165 num \u662f\u8d1f\u6570\uff0c\u5148\u53d6\u5b83\u7684\u7edd\u5bf9\u503c\u8fdb\u884c\u8ba1\u7b97\uff0c\u6700\u540e\u5728\u7ed3\u679c\u524d\u6dfb\u52a0\u8d1f\u53f7\u3002 \u5904\u7406 0 \u7684\u7279\u6b8a\u60c5\u51b5 \uff1a \u5982\u679c num == 0 \uff0c\u76f4\u63a5\u8fd4\u56de \"0\" \u3002 \u53d6\u6a21\u6cd5\u6784\u5efa7\u8fdb\u5236 \uff1a \u6211\u4eec\u4e0d\u65ad\u5c06 num \u9664\u4ee5 7\uff0c\u53d6\u51fa\u4f59\u6570\u4f5c\u4e3a\u5f53\u524d\u4f4d\u76847\u8fdb\u5236\u6570\u5b57\uff0c\u5c06\u5176\u52a0\u5165\u5230\u7ed3\u679c\u5b57\u7b26\u4e32\u4e2d\u3002\u7136\u540e\u5c06 num \u66f4\u65b0\u4e3a num / 7 \uff0c\u76f4\u5230 num \u53d8\u4e3a 0 \u4e3a\u6b62\u3002 \u53cd\u8f6c\u5b57\u7b26\u4e32 \uff1a \u56e0\u4e3a\u6211\u4eec\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\u8ba1\u7b97\uff0c\u6240\u4ee5\u6700\u7ec8\u9700\u8981\u5c06\u5b57\u7b26\u4e32\u53cd\u8f6c\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson7/Lesson7%20Python/#_24","text":"class Solution: def convertToBase7(self, num: int) -> str: initial_num = num # \u4fdd\u5b58\u521d\u59cb\u503c # \u5982\u679c\u662f\u8d1f\u6570\uff0c\u53d6\u7edd\u5bf9\u503c\u8fdb\u884c\u8ba1\u7b97 if num < 0: num = -num # \u7279\u6b8a\u60c5\u51b5\uff1anum \u4e3a 0\uff0c\u76f4\u63a5\u8fd4\u56de \"0\" if num == 0: return \"0\" # \u6784\u5efa 7 \u8fdb\u5236 ans = [] while num > 0: ans.append(str(num % 7)) # \u5c06\u6bcf\u4e00\u4f4d\u7684 7 \u8fdb\u5236\u6570\u5b57\u52a0\u5165\u5230\u5217\u8868 num //= 7 # \u9664\u4ee5 7\uff0c\u8fdb\u884c\u4e0b\u4e00\u4f4d\u7684\u8ba1\u7b97 # \u5982\u679c\u521d\u59cb\u503c\u662f\u8d1f\u6570\uff0c\u6dfb\u52a0\u8d1f\u53f7 if initial_num < 0: ans.append('-') # \u6700\u540e\u53cd\u8f6c\u5e76\u62fc\u63a5\u5217\u8868\u4e3a\u5b57\u7b26\u4e32 return ''.join(ans[::-1]) initial_num = num \uff1a\u4fdd\u7559\u539f\u59cb\u7684 num \u503c\uff0c\u7528\u4e8e\u540e\u7eed\u5224\u65ad\u662f\u5426\u9700\u8981\u6dfb\u52a0\u8d1f\u53f7\u3002 \u5904\u7406\u8d1f\u6570 \uff1a\u5982\u679c num \u4e3a\u8d1f\u6570\uff0c\u5148\u53d6\u7edd\u5bf9\u503c\uff0c\u8ba1\u7b97\u5b8c\u540e\u518d\u5728\u7ed3\u679c\u524d\u52a0\u4e0a '-' \u3002 \u5904\u74060\u7684\u60c5\u51b5 \uff1a\u5982\u679c num \u4e3a 0\uff0c\u76f4\u63a5\u8fd4\u56de \"0\" \u3002 \u53d6\u6a21\u548c\u9664\u6cd5 \uff1a\u901a\u8fc7 num % 7 \u83b7\u53d6\u5f53\u524d\u4f4d\u76847\u8fdb\u5236\u6570\u5b57\uff0c\u5e76\u5c06\u5176\u52a0\u5165\u5230\u7ed3\u679c\u5b57\u7b26\u4e32\u4e2d\uff1b\u7136\u540e\u901a\u8fc7 num /= 7 \u8fdb\u884c\u4e0b\u4e00\u4f4d\u7684\u8ba1\u7b97\u3002 \u53cd\u8f6c\u5b57\u7b26\u4e32 \uff1a\u7531\u4e8e\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\u6784\u5efa\u5b57\u7b26\u4e32\uff0c\u6700\u540e\u9700\u8981\u53cd\u8f6c\u5f97\u5230\u6b63\u786e\u7684\u987a\u5e8f\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u7ecf\u8fc7\u6240\u6709\u5904\u7406\u540e\uff0c\u8fd4\u56de\u7ed3\u679c\u5b57\u7b26\u4e32\u3002","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson7/Lesson7%20Python/#27","text":"","title":"2.7 \u8fdb\u5236\u4e3e\u4e00\u53cd\u4e09"},{"location":"lesson7/Lesson7%20Python/#271-lc168-excel","text":"","title":"2.7.1 LC168. excel\u8868\u5217\u540d\u79f0"},{"location":"lesson7/Lesson7%20Python/#_25","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u8fd4\u56de\u5b83\u5728 Excel \u8868\u4e2d\u5bf9\u5e94\u7684\u5217\u6807\u9898\u3002Excel \u5217\u662f\u4ee5 A-Z \u7684\u65b9\u5f0f\u6392\u5217\u7684\uff0c\u4f8b\u5982\uff1a 1 -> A 2 -> B 3 -> C ... 26 -> Z 27 -> AA 28 -> AB ...","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson7/Lesson7%20Python/#_26","text":"\u8fd9\u662f\u4e00\u4e2a\u5178\u578b\u7684\u8fdb\u5236\u8f6c\u6362\u95ee\u9898\u3002\u9700\u8981\u5c06\u6570\u5b57\u8f6c\u6362\u6210\u4ee5 A-Z \u4e3a\u57fa\u7840\u768426\u8fdb\u5236\u8868\u793a\u6cd5\uff0c\u7c7b\u4f3c\u4e8e\u5341\u8fdb\u5236\u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236\u6216\u5341\u516d\u8fdb\u5236\u3002\u7531\u4e8e Excel \u5217\u7f16\u53f7\u4ece 1 \u5f00\u59cb\uff0c\u800c\u4e0d\u662f\u4ece 0 \u5f00\u59cb\uff0c\u6240\u4ee5\u5728\u8f6c\u6362\u65f6\u9700\u8981\u4e00\u4e9b\u989d\u5916\u7684\u8c03\u6574\u3002 \u4ece 1 \u5f00\u59cb\u768426\u8fdb\u5236\uff1a \u6211\u4eec\u53ef\u4ee5\u5c06 A-Z \u5bf9\u5e94\u7684\u6570\u5b57\u770b\u4f5c\u662f\u4e00\u4e2a\u57fa\u4e8e26\u7684\u8fdb\u5236\u7cfb\u7edf\u3002 \u4f46\u4e0e\u5e38\u89c1\u8fdb\u5236\u4e0d\u540c\u7684\u662f\uff0cExcel \u5217\u7f16\u53f7\u662f\u4ece 1 \u5f00\u59cb\u7684\uff0c\u800c\u4e0d\u662f\u4ece 0 \u5f00\u59cb\uff0c\u56e0\u6b64\u5728\u6bcf\u6b21\u53d6\u4f59\u65f6\u9700\u8981\u505a\u4e00\u4e9b\u8c03\u6574\uff1a\u6bcf\u6b21\u5c06 columnNumber \u51cf\u53bb 1\u3002 \u5904\u7406\u903b\u8f91\uff1a \u4e0d\u65ad\u5c06 columnNumber \u51cf\u53bb1\uff0c\u5e76\u8ba1\u7b97\u51fa\u5bf9\u5e94\u7684\u5b57\u6bcd\u3002 \u6bcf\u6b21\u901a\u8fc7 columnNumber % 26 \u5f97\u5230\u4e00\u4e2a\u5b57\u6bcd\uff0c\u5c06\u5176\u52a0\u5165\u7ed3\u679c\u5b57\u7b26\u4e32\u4e2d\u3002 \u5c06 columnNumber \u9664\u4ee526\uff0c\u7ee7\u7eed\u5904\u7406\u4e0b\u4e00\u4e2a\u6570\u5b57\uff0c\u76f4\u5230 columnNumber \u4e3a 0\u3002 \u53cd\u8f6c\u5b57\u7b26\u4e32\uff1a \u7531\u4e8e\u6211\u4eec\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\u6784\u9020\u5b57\u7b26\u4e32\uff0c\u56e0\u6b64\u6700\u540e\u9700\u8981\u5c06\u7ed3\u679c\u5b57\u7b26\u4e32\u53cd\u8f6c\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson7/Lesson7%20Python/#_27","text":"class Solution: def convertToTitle(self, columnNumber: int) -> str: result = [] # \u5904\u7406\u8fdb\u5236\u8f6c\u6362 while columnNumber > 0: # \u56e0\u4e3a\u662f\u4ece 1 \u5f00\u59cb\u7684\u5217\uff0c\u6240\u4ee5\u9700\u8981\u5148\u51cf 1 columnNumber -= 1 # \u8ba1\u7b97\u5f53\u524d\u4f4d\u5bf9\u5e94\u7684\u5b57\u6bcd temp = columnNumber % 26 result.append(chr(temp + ord('A'))) # \u51cf\u5c11\u5217\u53f7 columnNumber //= 26 # \u53cd\u8f6c\u7ed3\u679c return ''.join(result[::-1])","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson7/Lesson7%20Python/#_28","text":"columnNumber -= 1 \uff1a\u5148\u5c06\u5217\u53f7\u51cf 1\uff0c\u4ee5\u4fbf\u5c06\u95ee\u9898\u8f6c\u6362\u4e3a\u4ee5 0 \u4e3a\u57fa\u51c6\u7684 26 \u8fdb\u5236\u3002 columnNumber % 26 \uff1a\u8ba1\u7b97\u5f53\u524d\u7684\u5217\u5bf9\u5e94\u7684\u5b57\u6bcd\u7f16\u53f7\uff080 \u5230 25 \u5bf9\u5e94 A \u5230 Z \uff09\u3002 result.append(chr(temp + ord('A'))) \uff1a\u5c06\u7f16\u53f7\u8f6c\u6362\u4e3a\u5b57\u6bcd\u5e76\u6dfb\u52a0\u5230\u7ed3\u679c\u5b57\u7b26\u4e32\u4e2d\u3002 columnNumber //= 26 \uff1a\u5c06\u5217\u53f7\u9664\u4ee5 26\uff0c\u5904\u7406\u4e0b\u4e00\u4f4d\u3002 \u5b57\u7b26\u4e32\u53cd\u8f6c \uff1a\u56e0\u4e3a\u5b57\u6bcd\u662f\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\u8ba1\u7b97\u7684\uff0c\u56e0\u6b64\u9700\u8981\u5728\u6700\u540e\u53cd\u8f6c\u5b57\u7b26\u4e32\u3002","title":"\u4ee3\u7801\u8bb2\u89e3"},{"location":"lesson7/Lesson7%20Python/#272-lc728","text":"","title":"2.7.2 LC728. \u81ea\u9664\u6570"},{"location":"lesson7/Lesson7%20Python/#_29","text":"\u81ea\u9664\u6570\u662f\u6307\u4e00\u4e2a\u6574\u6570\uff0c\u5b83\u7684\u6bcf\u4e00\u4f4d\u6570\u5b57\u90fd\u80fd\u6574\u9664\u8fd9\u4e2a\u6570\u672c\u8eab\u3002\u7ed9\u5b9a\u4e00\u4e2a\u8303\u56f4 [left, right] \uff0c\u8fd4\u56de\u8be5\u8303\u56f4\u5185\u6240\u6709\u7684\u81ea\u9664\u6570\u3002 \u4e00\u4e2a\u81ea\u9664\u6570\u5fc5\u987b\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a \u8be5\u6570\u4e0d\u80fd\u5305\u542b\u6570\u5b57 0 \u3002 \u8be5\u6570\u80fd\u88ab\u5b83\u7684\u6bcf\u4e00\u4f4d\u6570\u5b57\u6574\u9664\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson7/Lesson7%20Python/#_30","text":"\u9010\u4f4d\u68c0\u67e5 \uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u6570\u5b57\uff0c\u5c06\u5176\u6bcf\u4e00\u4f4d\u63d0\u53d6\u51fa\u6765\uff0c\u68c0\u67e5\u8be5\u4f4d\u662f\u5426\u4e3a 0\uff0c\u5e76\u4e14\u80fd\u5426\u6574\u9664\u539f\u6570\u5b57\u3002 \u904d\u5386\u8303\u56f4 \uff1a\u5bf9\u4e8e\u7ed9\u5b9a\u7684\u8303\u56f4 [left, right] \uff0c\u9010\u4e00\u68c0\u67e5\u6bcf\u4e2a\u6570\u5b57\u662f\u5426\u662f\u81ea\u9664\u6570\uff0c\u5982\u679c\u662f\uff0c\u5c06\u5176\u52a0\u5165\u7ed3\u679c\u5217\u8868\u4e2d\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u8fd4\u56de\u5728 [left, right] \u8303\u56f4\u5185\u6240\u6709\u81ea\u9664\u6570\u7684\u5217\u8868\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson7/Lesson7%20Python/#_31","text":"class Solution: def selfDividingNumbers(self, left: int, right: int) -> List[int]: def isSelfDividing(num: int) -> bool: x = num while x: x, d = divmod(x, 10) if d == 0 or num % d: return False return True return [i for i in range(left, right + 1) if isSelfDividing(i)] divmod(x, 10) : \u7528\u4e8e\u540c\u65f6\u83b7\u5f97\u5546\u548c\u4f59\u6570\uff0c\u6bd4 x // 10 \u548c x % 10 \u66f4\u7b80\u6d01\u3002 \u904d\u5386\u8303\u56f4 \uff1a\u5728 selfDividingNumbers \u51fd\u6570\u4e2d\uff0c\u904d\u5386\u8303\u56f4 [left, right] \uff0c\u4f7f\u7528 isSelfDividing \u51fd\u6570\u5224\u65ad\u6bcf\u4e2a\u6570\u662f\u5426\u662f\u81ea\u9664\u6570\uff0c\u5982\u679c\u662f\u5219\u5c06\u5176\u52a0\u5165\u7ed3\u679c\u5217\u8868\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u6700\u7ec8\u8fd4\u56de [left, right] \u8303\u56f4\u5185\u6240\u6709\u81ea\u9664\u6570\u7684\u5217\u8868\u3002","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson7/Lesson7%20Python/#273-lc693","text":"","title":"2.7.3 LC693. \u4ea4\u66ff\u4f4d\u4e8c\u8fdb\u5236\u6570"},{"location":"lesson7/Lesson7%20Python/#_32","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570 n \uff0c\u68c0\u67e5\u5176\u4e8c\u8fdb\u5236\u8868\u793a\u662f\u5426\u4e3a\u4ea4\u66ff\u4f4d\u4e8c\u8fdb\u5236\u6570\uff0c\u4ea4\u66ff\u4f4d\u4e8c\u8fdb\u5236\u6570\u7684\u5b9a\u4e49\u662f\u5176\u76f8\u90bb\u7684\u4e24\u4e2a\u4f4d\u59cb\u7ec8\u4e0d\u540c\uff0c\u5373\u4e8c\u8fdb\u5236\u4e2d 0 \u548c 1 \u4ea4\u66ff\u51fa\u73b0\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson7/Lesson7%20Python/#_33","text":"\u9010\u4f4d\u68c0\u67e5 \uff1a\u901a\u8fc7\u4e0d\u65ad\u5c06 n \u53f3\u79fb\uff0c\u5e76\u63d0\u53d6\u5176\u5f53\u524d\u7684\u6700\u540e\u4e00\u4f4d\uff0c\u68c0\u67e5\u662f\u5426\u76f8\u90bb\u7684\u4e24\u4f4d\u76f8\u540c\u3002 \u7ec8\u6b62\u6761\u4ef6 \uff1a\u5f53\u67d0\u4e00\u4f4d\u548c\u5176\u76f8\u90bb\u7684\u4e0a\u4e00\u4f4d\u76f8\u540c\u65f6\uff0c\u76f4\u63a5\u8fd4\u56de False \u3002 \u5168\u90e8\u68c0\u67e5\u901a\u8fc7 \uff1a\u5982\u679c\u6240\u6709\u76f8\u90bb\u7684\u4f4d\u90fd\u4e0d\u540c\uff0c\u5219\u8fd4\u56de True \u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson7/Lesson7%20Python/#_34","text":"class Solution: def hasAlternatingBits(self, n: int) -> bool: now = n % 2 # \u63d0\u53d6\u5f53\u524d\u4f4d while n > 0: n //= 2 # \u53f3\u79fb\uff0c\u53bb\u6389\u5f53\u524d\u4f4d next_bit = n % 2 # \u63d0\u53d6\u4e0b\u4e00\u4f4d if next_bit == now: return False # \u5982\u679c\u76f8\u90bb\u7684\u4e24\u4f4d\u76f8\u540c\uff0c\u8fd4\u56de False now = next_bit # \u66f4\u65b0\u5f53\u524d\u4f4d\u4e3a\u4e0b\u4e00\u4f4d return True # \u5168\u90e8\u4f4d\u90fd\u4ea4\u66ff\uff0c\u8fd4\u56de True","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson7/Lesson7%20Python/#_35","text":"now = n % 2 \uff1a\u63d0\u53d6\u5f53\u524d\u6700\u4f4e\u4f4d\u3002 n //= 2\uff1a\u53f3\u79fb n\uff0c\u53bb\u6389\u5df2\u7ecf\u68c0\u67e5\u7684\u6700\u4f4e\u4f4d\u3002 next_bit = n % 2\uff1a\u63d0\u53d6\u53f3\u79fb\u540e\u7684\u4e0b\u4e00\u4f4d\u3002 \u76f8\u90bb\u4f4d\u6bd4\u8f83 \uff1a\u5982\u679c next \u548c now \u76f8\u7b49\uff0c\u5219\u8bf4\u660e\u76f8\u90bb\u7684\u4e24\u4f4d\u76f8\u540c\uff0c\u8fd4\u56de False\u3002 \u68c0\u67e5\u901a\u8fc7 \uff1a\u5982\u679c\u6240\u6709\u4f4d\u90fd\u4e0d\u540c\uff0c\u8fd4\u56de True \uff0c\u8868\u793a n \u662f\u4ea4\u66ff\u4f4d\u4e8c\u8fdb\u5236\u6570\u3002","title":"\u4ee3\u7801\u8bb2\u89e3"},{"location":"lesson7/Lesson7%20Python/#3","text":"","title":"3. \u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson7/Lesson7%20Python/#ascii_1","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC405 \u6570\u5b57\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236\u6570 \u5c06\u4e00\u4e2a\u6574\u6570\u8f6c\u6362\u4e3a\u5176 16 \u8fdb\u5236\u8868\u793a\u3002 LC806 \u5199\u5b57\u7b26\u4e32\u9700\u8981\u7684\u884c\u6570 \u7ed9\u5b9a\u82e5\u5e72\u884c\u5b57\u7b26\u4e32\uff0c\u8ba1\u7b97\u5199\u5165\u6240\u9700\u7684\u884c\u6570\u3002 LC2309 \u95f4\u8ddd\u5927\u5c0f\u5199\u7684\u6700\u597d\u82f1\u6587\u5b57\u6bcd \u627e\u5230\u5305\u542b\u5927\u5199\u548c\u5c0f\u5199\u5b57\u6bcd\u7684\u6700\u5927\u82f1\u6587\u5b57\u6bcd\u3002 LC383 \u8d4e\u91d1\u4fe1 \u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u662f\u5426\u80fd\u7531\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u6784\u6210\u3002 LC389 \u627e\u4e0d\u540c \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u627e\u51fa\u4e00\u4e2a\u5728\u5176\u4e2d\u591a\u51fa\u7684\u5b57\u7b26\u3002","title":"ASCII \u76f8\u5173\u95ee\u9898"},{"location":"lesson7/Lesson7%20Python/#_36","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC868 \u4e8c\u8fdb\u5236\u95f4\u8ddd \u627e\u5230\u4e8c\u8fdb\u5236\u6570\u4e2d\u6700\u5927\u7684 0 \u548c 1 \u95f4\u7684\u8ddd\u79bb\u3002 LC1317 \u5c06\u6574\u6570\u8f6c\u6362\u4e3a\u4e24\u4e2a\u65e0\u96f6\u6574\u6570\u7684\u548c \u5c06\u4e00\u4e2a\u6574\u6570\u8f6c\u6362\u4e3a\u4e24\u4e2a\u975e\u96f6\u6574\u6570\u4e4b\u548c\u3002 LC1281 \u6574\u6570\u7684\u5404\u4f4d\u79ef\u548c\u4e4b\u5dee \u8fd4\u56de\u4e00\u4e2a\u6574\u6570\u5404\u4f4d\u6570\u5b57\u4e58\u79ef\u4e0e\u548c\u7684\u5dee\u503c\u3002 LC67 \u4e8c\u8fdb\u5236\u6c42\u548c \u7ed9\u5b9a\u4e24\u4e2a\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\u5b83\u4eec\u7684\u548c\uff08\u4ee5\u4e8c\u8fdb\u5236\u8868\u793a\uff09\u3002","title":"\u8fdb\u5236\u8f6c\u6362\u76f8\u5173\u95ee\u9898"},{"location":"lesson8/Lesson8%20C%2B%2B/","text":"Lesson8 \u5b57\u7b26\u4e32\u5faa\u73af+\u5207\u7247/\u5b57\u7b26\u4e32\u6570\u5b66\u8fd0\u7b97\u4e13\u9898 \u76ee\u5f55 \u5b57\u7b26\u4e32\u5faa\u73af+\u5207\u7247 LC14 \u6700\u957f\u516c\u5171\u524d\u7f00 LC125 \u9a8c\u8bc1\u56de\u6587\u4e32 LC459 \u91cd\u590d\u7684\u5b50\u5b57\u7b26\u4e32 LC796 \u65cb\u8f6c\u5b57\u7b26\u4e32 LC28 \u67e5\u627e\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5339\u914d\u9879\u7d22\u5f15 \u5b57\u7b26\u4e32\u6570\u5b66\u8fd0\u7b97 LC415 \u5b57\u7b26\u4e32\u76f8\u52a0 LC7 \u6574\u6570\u53cd\u8f6c LC67 \u4e8c\u8fdb\u5236\u6c42\u548c LC989 \u6570\u7ec4\u5f62\u5f0f\u7684\u6574\u6570\u52a0\u6cd5 \u8bfe\u540e\u7ec3\u4e60 1. \u5b57\u7b26\u4e32\u5faa\u73af+\u5207\u7247 \u4f8b\u9898\u8bb2\u89e3 LC14 \u6700\u957f\u516c\u5171\u524d\u7f00 \u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u67e5\u627e\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u3002 \u5982\u679c\u4e0d\u5b58\u5728\u516c\u5171\u524d\u7f00\uff0c\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32 \"\"\u3002 \u9898\u76ee\u5206\u6790 \u8981\u627e\u5230\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\uff0c\u6211\u4eec\u53ef\u4ee5\u4f9d\u6b21\u6bd4\u8f83\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7684\u5b57\u7b26\uff0c\u76f4\u5230\u627e\u5230\u4e0d\u5339\u914d\u7684\u4f4d\u7f6e\u4e3a\u6b62\u3002\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u591a\u79cd\u65b9\u6cd5\u89e3\u51b3\uff0c\u6bd4\u5982\u7eb5\u5411\u626b\u63cf\u3001\u6a2a\u5411\u626b\u63cf\u3001\u5206\u6cbb\u6cd5\u3001\u4e8c\u5206\u67e5\u627e\u7b49\u3002\u6211\u4eec\u8fd9\u91cc\u91c7\u7528\u4e00\u79cd\u8f83\u4e3a\u76f4\u89c2\u7684\u6a2a\u5411\u626b\u63cf\u6cd5\u3002 \u601d\u8def \u8fb9\u754c\u60c5\u51b5 : \u5982\u679c\u5b57\u7b26\u4e32\u6570\u7ec4\u4e3a\u7a7a\uff0c\u76f4\u63a5\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002 \u5982\u679c\u5b57\u7b26\u4e32\u6570\u7ec4\u53ea\u6709\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u6700\u957f\u516c\u5171\u524d\u7f00\u5c31\u662f\u8fd9\u4e2a\u5b57\u7b26\u4e32\u672c\u8eab\u3002 \u4ece\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u5f00\u59cb : \u5047\u8bbe\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u6700\u957f\u516c\u5171\u524d\u7f00\uff0c\u63a5\u4e0b\u6765\u9010\u4e00\u4e0e\u6570\u7ec4\u4e2d\u7684\u5176\u4ed6\u5b57\u7b26\u4e32\u8fdb\u884c\u6bd4\u8f83\u3002 \u6bcf\u6b21\u6bd4\u8f83\u65f6\uff0c\u9010\u5b57\u7b26\u5730\u8fdb\u884c\u6bd4\u8f83\uff0c\u76f4\u5230\u627e\u5230\u4e0d\u5339\u914d\u7684\u5b57\u7b26\u6216\u6bd4\u8f83\u5b8c\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u6240\u6709\u5b57\u7b26\u3002 \u66f4\u65b0\u5f53\u524d\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u4e3a\u5339\u914d\u7684\u90e8\u5206\u3002 \u8fd4\u56de\u7ed3\u679c : \u6700\u540e\u8fd4\u56de\u5339\u914d\u540e\u7684\u516c\u5171\u524d\u7f00\uff0c\u5982\u679c\u6ca1\u6709\u5339\u914d\u5230\u4efb\u4f55\u524d\u7f00\uff0c\u5219\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002 \u53c2\u8003\u89e3\u7b54 class Solution { public: string longestCommonPrefix(vector<string>& strs) { if (strs.empty()) return \"\"; string prefix = strs[0]; // \u521d\u59cb\u5316\u6700\u957f\u516c\u5171\u524d\u7f00\u4e3a\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32 // \u4f9d\u6b21\u4e0e\u5176\u4ed6\u5b57\u7b26\u4e32\u8fdb\u884c\u6bd4\u8f83 for (int i = 1; i < strs.size(); ++i) { while (strs[i].find(prefix) != 0) { // \u5f53\u524d\u524d\u7f00\u4e0e\u4e0b\u4e00\u4e2a\u5b57\u7b26\u4e32\u8fdb\u884c\u6bd4\u8f83 prefix = prefix.substr(0, prefix.length() - 1); // \u4e0d\u65ad\u7f29\u77ed\u524d\u7f00 if (prefix.empty()){ return \"\"; // \u5982\u679c\u524d\u7f00\u4e3a\u7a7a\uff0c\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32 } } } return prefix; } }; LC125. \u9a8c\u8bc1\u56de\u6587\u4e32 \u95ee\u9898\u63cf\u8ff0 \u5982\u679c\u5728\u5c06\u6240\u6709\u5927\u5199\u5b57\u7b26\u8f6c\u6362\u4e3a\u5c0f\u5199\u5b57\u7b26\u3001\u5e76\u79fb\u9664\u6240\u6709\u975e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\u4e4b\u540e\uff0c\u77ed\u8bed\u6b63\u7740\u8bfb\u548c\u53cd\u7740\u8bfb\u90fd\u4e00\u6837\u3002\u5219\u53ef\u4ee5\u8ba4\u4e3a\u8be5\u77ed\u8bed\u662f\u4e00\u4e2a\u56de\u6587\u4e32\u3002 \u5b57\u6bcd\u548c\u6570\u5b57\u90fd\u5c5e\u4e8e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\u3002 \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u5982\u679c\u5b83\u662f\u56de\u6587\u4e32\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002 \u9898\u76ee\u5206\u6790 \u56de\u6587\u4e32\u7684\u5224\u65ad\u8981\u6c42\u5ffd\u7565\u5927\u5c0f\u5199\u3001\u53bb\u9664\u975e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\u3002\u56e0\u6b64\u9700\u8981\u5148\u8fdb\u884c\u5b57\u7b26\u8fc7\u6ee4\uff0c\u7136\u540e\u5224\u65ad\u5904\u7406\u540e\u7684\u5b57\u7b26\u4e32\u662f\u5426\u6b63\u7740\u8bfb\u548c\u53cd\u7740\u8bfb\u90fd\u76f8\u540c\u3002 \u601d\u8def 1. \u5b57\u7b26\u8fc7\u6ee4 \u4f7f\u7528\u904d\u5386\u7684\u65b9\u5f0f\u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u975e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\u8fc7\u6ee4\u6389\uff0c\u5e76\u4e14\u5c06\u5b57\u6bcd\u7edf\u4e00\u8f6c\u6362\u4e3a\u5c0f\u5199\uff0c\u4ee5\u4fbf\u540e\u7eed\u6bd4\u8f83\u3002 2. \u53cd\u8f6c\u5224\u65ad \u901a\u8fc7\u76f4\u63a5\u53cd\u8f6c\u5904\u7406\u540e\u7684\u5b57\u7b26\u4e32\uff0c\u6bd4\u8f83\u539f\u5b57\u7b26\u4e32\u4e0e\u5176\u53cd\u8f6c\u540e\u7684\u7248\u672c\u662f\u5426\u76f8\u7b49\uff0c\u5982\u679c\u76f8\u7b49\u5219\u662f\u56de\u6587\u4e32\u3002 \u5177\u4f53\u6b65\u9aa4 \u904d\u5386\u8fc7\u6ee4 \uff1a\u521b\u5efa\u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32 filteredString \uff0c\u904d\u5386\u8f93\u5165\u5b57\u7b26\u4e32 s \uff0c\u53ea\u4fdd\u7559\u5b57\u6bcd\u548c\u6570\u5b57\u5b57\u7b26\uff0c\u5e76\u4e14\u5c06\u5b57\u6bcd\u7edf\u4e00\u8f6c\u6362\u4e3a\u5c0f\u5199\u3002 \u53cd\u8f6c\u6bd4\u8f83 \uff1a\u5c06 filteredString \u53cd\u8f6c\uff0c\u6bd4\u8f83\u53cd\u8f6c\u540e\u7684\u5b57\u7b26\u4e32\u4e0e\u539f\u5b57\u7b26\u4e32\u662f\u5426\u76f8\u540c\u3002\u5982\u679c\u76f8\u540c\uff0c\u5219\u8fd4\u56de true \uff0c\u5426\u5219\u8fd4\u56de false \u3002 \u53c2\u8003\u89e3\u7b54 class Solution { public: bool isPalindrome(string s) { string filteredString = \"\"; // \u904d\u5386\u5b57\u7b26\u4e32\uff0c\u4fdd\u7559\u5b57\u6bcd\u548c\u6570\u5b57\u5b57\u7b26\uff0c\u5e76\u5c06\u5b57\u6bcd\u8f6c\u6362\u4e3a\u5c0f\u5199 for (char c : s) { if (isalnum(c)) { filteredString += tolower(c); // \u5c06\u5b57\u6bcd\u8f6c\u4e3a\u5c0f\u5199 } } // \u521b\u5efa\u4e00\u4e2a\u53cd\u8f6c\u540e\u7684\u5b57\u7b26\u4e32 string reversedString = filteredString; reverse(reversedString.begin(), reversedString.end()); // \u5224\u65ad\u539f\u59cb\u8fc7\u6ee4\u540e\u7684\u5b57\u7b26\u4e32\u4e0e\u53cd\u8f6c\u540e\u7684\u5b57\u7b26\u4e32\u662f\u5426\u76f8\u540c return filteredString == reversedString; } }; \u4ee3\u7801\u8be6\u89e3 isalnum(c) \uff1a\u8be5\u51fd\u6570\u68c0\u67e5\u5b57\u7b26 c \u662f\u5426\u4e3a\u5b57\u6bcd\u6216\u6570\u5b57\u3002\u5982\u679c c \u662f\u5b57\u6bcd\u6216\u6570\u5b57\uff0c\u8fd4\u56de true \uff0c\u5426\u5219\u8fd4\u56de false \u3002\u901a\u8fc7\u6b64\u51fd\u6570\uff0c\u53ef\u4ee5\u8fc7\u6ee4\u6389\u7a7a\u683c\u3001\u6807\u70b9\u7b26\u53f7\u7b49\u65e0\u5173\u5b57\u7b26\u3002 tolower(c) \uff1a\u8be5\u51fd\u6570\u5c06\u5b57\u6bcd c \u8f6c\u6362\u4e3a\u5c0f\u5199\u3002\u8fd9\u6837\u80fd\u591f\u786e\u4fdd\u5728\u5224\u65ad\u56de\u6587\u65f6\u5ffd\u7565\u5927\u5c0f\u5199\u5dee\u5f02\u3002 reverse(reversedString.begin(), reversedString.end()) \uff1a reverse \u51fd\u6570\u53ef\u4ee5\u5c06\u5b57\u7b26\u4e32\u7684\u987a\u5e8f\u53cd\u8f6c\uff0c\u4ece\u800c\u5b9e\u73b0\u6b63\u5e8f\u4e0e\u9006\u5e8f\u6bd4\u8f83\u3002 \u6bd4\u8f83 filteredString == reversedString \uff1a\u901a\u8fc7\u6bd4\u8f83\u539f\u5b57\u7b26\u4e32\u4e0e\u5176\u53cd\u8f6c\u540e\u7684\u7248\u672c\uff0c\u5224\u65ad\u662f\u5426\u4e3a\u56de\u6587\u4e32\u3002\u5982\u679c\u4e24\u8005\u76f8\u7b49\uff0c\u5219\u8bf4\u660e\u8be5\u5b57\u7b26\u4e32\u662f\u56de\u6587\u4e32\u3002 \u4e3e\u4e00\u53cd\u4e09 LC459. \u91cd\u590d\u7684\u5b50\u5b57\u7b26\u4e32 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u7684\u5b57\u7b26\u4e32 s \uff0c\u68c0\u67e5\u662f\u5426\u53ef\u4ee5\u901a\u8fc7\u7531\u5b83\u7684\u4e00\u4e2a\u5b50\u4e32\u91cd\u590d\u591a\u6b21\u6784\u6210\u3002\u5982\u679c\u5b58\u5728\u8fd9\u6837\u7684\u5b50\u4e32\uff0c\u5219\u8fd4\u56de true \uff0c\u5426\u5219\u8fd4\u56de false \u3002 \u89e3\u9898\u601d\u8def \u8981\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u7531\u91cd\u590d\u7684\u5b50\u4e32\u6784\u6210\uff0c\u53ef\u4ee5\u9010\u6b65\u68c0\u67e5\u53ef\u80fd\u7684\u5b50\u4e32\uff0c\u5e76\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a \u68c0\u67e5\u5b50\u4e32\u662f\u5426\u80fd\u6574\u9664\u5b57\u7b26\u4e32\u7684\u957f\u5ea6 \uff1a \u5982\u679c\u5b57\u7b26\u4e32\u957f\u5ea6 n \u53ef\u4ee5\u88ab\u67d0\u4e2a\u5b50\u4e32\u957f\u5ea6 i \u6574\u9664\uff0c\u8bf4\u660e\u8fd9\u4e2a\u5b50\u4e32\u6709\u53ef\u80fd\u662f\u7ec4\u6210\u6574\u4e2a\u5b57\u7b26\u4e32\u7684\u91cd\u590d\u5355\u5143\uff0c\u56e0\u6b64\u53ef\u4ee5\u8fdb\u4e00\u6b65\u68c0\u67e5\u3002 \u6784\u9020\u4e00\u4e2a\u7531\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\u65b0\u5b57\u7b26\u4e32 \uff1a \u5bf9\u4e8e\u6bcf\u79cd\u7b26\u5408\u6761\u4ef6\u7684\u5b50\u4e32\uff0c\u6784\u9020\u4e00\u4e2a\u65b0\u5b57\u7b26\u4e32\uff0c\u8fd9\u4e2a\u65b0\u5b57\u7b26\u4e32\u7531\u8be5\u5b50\u4e32\u91cd\u590d\u591a\u6b21\u5f97\u5230\uff0c\u7136\u540e\u5224\u65ad\u8fd9\u4e2a\u65b0\u5b57\u7b26\u4e32\u662f\u5426\u7b49\u4e8e\u539f\u59cb\u5b57\u7b26\u4e32\u3002 \u53c2\u8003\u89e3\u7b54 class Solution { public: bool repeatedSubstringPattern(string s) { int n = s.length(); for (int i = 1; i <= n / 2; ++i) { // \u68c0\u67e5\u5b50\u4e32\u957f\u5ea6 i \u662f\u5426\u80fd\u6574\u9664\u5b57\u7b26\u4e32\u957f\u5ea6 n if (n % i == 0) { string substring = s.substr(0, i); // \u63d0\u53d6\u957f\u5ea6\u4e3a i \u7684\u5b50\u4e32 string repeated = \"\"; // \u7528\u6765\u6784\u9020\u65b0\u5b57\u7b26\u4e32 for (int j = 0; j < n / i; ++j) { repeated += substring; // \u5c06\u5b50\u4e32\u91cd\u590d\u62fc\u63a5 } // \u5982\u679c\u62fc\u63a5\u540e\u7684\u5b57\u7b26\u4e32\u4e0e\u539f\u5b57\u7b26\u4e32\u76f8\u540c\uff0c\u8fd4\u56de true if (repeated == s) { return true; } } } return false; // \u6ca1\u6709\u627e\u5230\u5408\u9002\u7684\u5b50\u4e32\uff0c\u8fd4\u56de false } }; \u8be6\u7ec6\u8bb2\u89e3 s.substr(0, i) : substr \u51fd\u6570\u7528\u4e8e\u4ece\u7d22\u5f15 0 \u5f00\u59cb\u63d0\u53d6\u4e00\u4e2a\u957f\u5ea6\u4e3a i \u7684\u5b50\u4e32\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u5b57\u7b26\u4e32 abcdef \uff0c\u5f53 i = 2 \u65f6\uff0c s.substr(0, 2) \u8fd4\u56de \"ab\" \u3002 if (n % i == 0) : \u8fd9\u6bb5\u4ee3\u7801\u68c0\u67e5\u5f53\u524d\u5b50\u4e32\u7684\u957f\u5ea6 i \u662f\u5426\u80fd\u6574\u9664\u5b57\u7b26\u4e32 s \u7684\u603b\u957f\u5ea6 n \u3002\u5982\u679c\u4e0d\u80fd\u6574\u9664\uff0c\u8bf4\u660e\u8be5\u5b50\u4e32\u4e0d\u53ef\u80fd\u662f\u6784\u6210\u5b57\u7b26\u4e32\u7684\u91cd\u590d\u5355\u5143\uff0c\u8df3\u8fc7\u68c0\u67e5\u3002 repeated += substring : \u8be5\u6b65\u9aa4\u901a\u8fc7\u5c06\u63d0\u53d6\u7684\u5b50\u4e32\u4e0d\u65ad\u62fc\u63a5\uff0c\u6784\u9020\u4e00\u4e2a\u4e0e\u539f\u5b57\u7b26\u4e32\u7b49\u957f\u7684\u65b0\u5b57\u7b26\u4e32\u3002\u5982\u679c\u5b50\u4e32\u957f\u5ea6\u4e3a i \uff0c\u5e76\u4e14 s \u7684\u957f\u5ea6\u4e3a n \uff0c\u5c31\u4f1a\u5c06\u5b50\u4e32\u91cd\u590d n / i \u6b21\uff0c\u4ee5\u751f\u6210\u957f\u5ea6\u7b49\u4e8e n \u7684\u5b57\u7b26\u4e32\u3002 \u6bd4\u8f83\u751f\u6210\u7684\u5b57\u7b26\u4e32\u4e0e\u539f\u5b57\u7b26\u4e32 : \u6784\u9020\u7684\u5b57\u7b26\u4e32 repeated \u548c\u539f\u5b57\u7b26\u4e32 s \u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u4e8c\u8005\u76f8\u7b49\uff0c\u8bf4\u660e\u5b57\u7b26\u4e32 s \u662f\u7531\u8be5\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\uff0c\u8fd4\u56de true \u3002 \u5faa\u73af\u7ed3\u675f\u540e\u7684\u8fd4\u56de : \u5982\u679c\u904d\u5386\u5b8c\u6240\u6709\u53ef\u80fd\u7684\u5b50\u4e32\u90fd\u6ca1\u627e\u5230\u5408\u9002\u7684\u5b50\u4e32\uff0c\u8bf4\u660e\u5b57\u7b26\u4e32 s \u4e0d\u80fd\u901a\u8fc7\u91cd\u590d\u67d0\u4e2a\u5b50\u4e32\u6784\u6210\uff0c\u8fd4\u56de false \u3002 \u66f4\u9ad8\u6548\u7684\u89e3\u6cd5 \u53ef\u4ee5\u5229\u7528\u5b57\u7b26\u4e32\u7684\u7279\u6027\u6765\u8fdb\u4e00\u6b65\u4f18\u5316\uff1a \u5c06\u5b57\u7b26\u4e32 s \u81ea\u8eab\u62fc\u63a5\u4e00\u904d\uff0c\u5f97\u5230 s + s \u3002 \u53bb\u6389\u5f00\u5934\u548c\u7ed3\u5c3e\u7684\u5b57\u7b26\uff0c\u68c0\u67e5 s \u662f\u5426\u5728\u65b0\u7684\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u3002 \u5982\u679c\u51fa\u73b0\uff0c\u8bf4\u660e s \u53ef\u4ee5\u7531\u67d0\u4e2a\u5b50\u4e32\u6784\u6210\u3002 \u4f18\u5316\u793a\u4f8b\u4ee3\u7801 class Solution { public: bool repeatedSubstringPattern(string s) { string doubled = s + s; // \u5c06\u5b57\u7b26\u4e32\u62fc\u63a5 string subString = doubled.substr(1, doubled.size() - 2); // \u53bb\u6389\u9996\u5c3e\u5b57\u7b26 return subString.find(s) != string::npos; // \u68c0\u67e5\u662f\u5426\u5305\u542b\u539f\u5b57\u7b26\u4e32 } }; \u8bc1\u660e\uff1a\u5b57\u7b26\u4e32\u62fc\u63a5\u540e\u6390\u5934\u53bb\u5c3e\u53ef\u4ee5\u7528\u4e8e\u5224\u65ad\u91cd\u590d\u7684\u5b50\u5b57\u7b26\u4e32 \u8865\u5145\uff1a\u4ec0\u4e48\u662f\u524d\u7f00\u548c\u540e\u7f00\uff1f \u524d\u7f00\uff08Prefix\uff09 \uff1a\u4ece\u5b57\u7b26\u4e32\u7684 \u5f00\u5934 \u5f00\u59cb\u7684\u8fde\u7eed\u5b57\u7b26\u5b50\u4e32\u3002\u4f8b\u5982\uff0c\u5b57\u7b26\u4e32 \"abcde\" \u7684\u524d\u7f00\u6709\uff1a \u524d\u7f00 1\uff1a \"a\" \u524d\u7f00 2\uff1a \"ab\" \u524d\u7f00 3\uff1a \"abc\" \u524d\u7f00 4\uff1a \"abcd\" \u524d\u7f00 5\uff1a \"abcde\" \uff08\u6574\u4e2a\u5b57\u7b26\u4e32\u672c\u8eab\u4e5f\u662f\u4e00\u4e2a\u524d\u7f00\uff09 \u540e\u7f00\uff08Suffix\uff09 \uff1a\u4ece\u5b57\u7b26\u4e32\u7684 \u7ed3\u5c3e \u5f00\u59cb\u7684\u8fde\u7eed\u5b57\u7b26\u5b50\u4e32\u3002\u4f8b\u5982\uff0c\u5b57\u7b26\u4e32 \"abcde\" \u7684\u540e\u7f00\u6709\uff1a \u540e\u7f00 1\uff1a \"e\" \u540e\u7f00 2\uff1a \"de\" \u540e\u7f00 3\uff1a \"cde\" \u540e\u7f00 4\uff1a \"bcde\" \u540e\u7f00 5\uff1a \"abcde\" \uff08\u6574\u4e2a\u5b57\u7b26\u4e32\u672c\u8eab\u4e5f\u662f\u4e00\u4e2a\u540e\u7f00\uff09 \u5145\u5206\u5fc5\u8981\u6027\u8bc1\u660e \u4e3a\u4e86\u8bc1\u660e\u7ed9\u5b9a\u5b57\u7b26\u4e32 s \u662f\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\u5145\u5206\u5fc5\u8981\u6027\uff0c\u6211\u4eec\u9700\u8981\u4ece\u4e24\u4e2a\u65b9\u5411\u6765\u8fdb\u884c\u8bc1\u660e\uff1a \u5145\u5206\u6027 \uff1a\u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u4e32 s \u662f\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\uff0c\u90a3\u4e48\u5728\u62fc\u63a5\u540e\u7684\u5b57\u7b26\u4e32 s + s \u4e2d\uff0c\u6390\u5934\u53bb\u5c3e\u540e\uff0c\u4e00\u5b9a\u80fd\u518d\u6b21\u627e\u5230 s \u3002 \u5fc5\u8981\u6027 \uff1a\u5982\u679c\u5728\u6390\u5934\u53bb\u5c3e\u7684 s + s \u4e2d\u627e\u5230\u4e86 s \uff0c\u90a3\u4e48 s \u4e00\u5b9a\u662f\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\u3002 1. \u5145\u5206\u6027 \u5047\u8bbe \uff1a\u8bbe\u5b57\u7b26\u4e32 s \u662f\u7531\u4e00\u4e2a\u8f83\u77ed\u7684\u5b50\u4e32 p \u91cd\u590d\u591a\u6b21\u6784\u6210\u7684\uff0c\u5373 s = p + p + ... + p \uff08\u5047\u8bbe p \u91cd\u590d k \u6b21\uff09\u3002 \u4e3e\u4f8b \uff1a\u6bd4\u5982 s = \"abab\" \uff0c\u8fd9\u662f\u7531 p = \"ab\" \u91cd\u590d\u4e24\u6b21\u6784\u6210\u7684\u3002 \u62fc\u63a5 s + s \uff1a\u6211\u4eec\u5c06 s \u62fc\u63a5\u5f97\u5230 s + s \uff0c\u4f8b\u5982\uff1a s + s = \"abababab\" \u6390\u5934\u53bb\u5c3e\uff0c\u53bb\u6389\u9996\u5c3e\u5b57\u7b26\uff0c\u5f97\u5230 new_s = (s + s).substr(1, (s+s).length() - 1) \uff0c\u5bf9\u4e8e\u4e0a\u9762\u7684\u4f8b\u5b50\uff1a new_s = \"bababa\" \u5bfb\u627e s \u5728 new_s \u4e2d\u7684\u51fa\u73b0 \uff1a\u7531\u4e8e s \u662f\u7531\u5b50\u4e32 p \u591a\u6b21\u91cd\u590d\uff08\u81f3\u5c11\u4e24\u6b21\uff09\u6784\u6210\u7684\uff0c s + s \u5c31\u4f1a\u91cd\u590d\u81f3\u5c11 4 \u6b21 p \uff0c\u6390\u5934\u53bb\u5c3e\u540e\uff0c\u91cd\u590d\u81f3\u5c11 2 \u6b21 p \uff0c\u524d\u7f00\u548c\u540e\u7f00\u5fc5\u7136\u6709\u91cd\u53e0\uff0c\u4e00\u5b9a\u80fd\u518d\u6b21\u627e\u5230 s \u3002 new_s = \"bababa\" ^^^^ (\u8fd9\u91cc\u627e\u5230 \"abab\") \u5145\u5206\u6027\u8bc1\u6bd5\u3002 2. \u5fc5\u8981\u6027 \u5047\u8bbe \uff1a\u6211\u4eec\u5df2\u7ecf\u5728\u53bb\u6389\u9996\u5c3e\u5b57\u7b26\u7684 s + s \u4e2d\u518d\u6b21\u627e\u5230\u4e86 s \u3002\u73b0\u5728\u6211\u4eec\u9700\u8981\u8bc1\u660e\uff0c s \u4e00\u5b9a\u662f\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\u3002 \u6784\u9020 new_s \uff1a\u9996\u5148\uff0c\u6784\u9020 new_s \uff0c\u5176\u7b49\u4ef7\u64cd\u4f5c\u662f new_s = (s + s).substr(1, (s+s).length() - 1) \u3002\u5047\u8bbe\u5b57\u7b26\u4e32 s \u5728 new_s \u4e2d\u5339\u914d\u7684\u4f4d\u7f6e\u4ece i \u5f00\u59cb\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u627e\u5230\u4e86\u4e00\u4e2a\u504f\u79fb\u91cf i \uff0c\u4f7f\u5f97 s.substr(i) + s.substr(0, i) \u548c s \u5b8c\u5168\u76f8\u540c\u3002\u8fd9\u610f\u5473\u7740\uff1a s.substr(i) + s.substr(0, i) == s; \u4e5f\u5c31\u662f\u8bf4\uff0c s \u7684\u67d0\u4e2a \u540e\u7f00 \u4e0e\u5b83\u7684\u67d0\u4e2a \u524d\u7f00 \u91cd\u53e0\u5339\u914d\u3002 \u4e3e\u4f8b\u8bf4\u660e \uff1a s + s = \"abababab\" \u53bb\u6389\u9996\u5c3e\u5b57\u7b26\u540e\u5f97\u5230\uff1anew_s = \"bababa\" s \u7684\u524d\u7f00\u6709\uff1a 'a', 'ab', 'aba', 'abab' s \u7684\u540e\u7f00\u6709\uff1a 'b', 'ab', 'bab', 'abab' \u53ef\u4ee5\u53d1\u73b0\uff0c s = \"abab\" \u5728 \"bababa\" \u4e2d\u786e\u5b9e\u518d\u6b21\u51fa\u73b0\uff0c\u4e14\u5339\u914d\u53d1\u751f\u5728\u4ea4\u754c\u5904\uff08\u504f\u79fb\u91cf\u4e3a1\uff09\uff0c\u8fd9\u65f6 s \u7684\u524d\u7f00\u548c\u540e\u7f00\u51fa\u73b0\u4e86\u91cd\u5408\u3002 \u8fd9\u79cd\u73b0\u8c61\u8bf4\u660e s \u7684\u524d\u7f00\u548c\u540e\u7f00\u5b58\u5728\u4ea4\u66ff\u91cd\u53e0\uff0c\u8868\u660e s \u5177\u6709\u5468\u671f\u6027\uff0c\u610f\u5473\u7740 s \u662f\u7531\u4e00\u4e2a\u8f83\u77ed\u7684\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c s \u7684\u524d\u7f00\u548c\u540e\u7f00\u6709\u67d0\u79cd\u91cd\u53e0\uff0c\u5f62\u6210\u4e86\u5468\u671f\u6027\uff0c\u90a3\u4e48 s \u5c31\u53ef\u4ee5\u901a\u8fc7\u91cd\u590d\u67d0\u4e2a\u5b50\u4e32\u6784\u6210\u3002 \u5fc5\u8981\u6027\u8bc1\u6bd5\u3002 \u603b\u7ed3\uff1a \u6211\u4eec\u5df2\u7ecf\u8bc1\u660e\u4e86\uff1a \u5145\u5206\u6027 \uff1a\u5982\u679c s \u662f\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\uff0c\u90a3\u4e48\u5728 s + s \u4e2d\u6390\u5934\u53bb\u5c3e\u540e\uff0c\u4e00\u5b9a\u80fd\u591f\u518d\u6b21\u627e\u5230 s \u3002\u8fd9\u662f\u56e0\u4e3a\u91cd\u590d\u5b50\u4e32\u4f1a\u4f7f\u5f97\u524d\u7f00\u548c\u540e\u7f00\u6709\u91cd\u53e0\u3002 \u5fc5\u8981\u6027 \uff1a\u5982\u679c\u5728\u6390\u5934\u53bb\u5c3e\u7684 s + s \u4e2d\u627e\u5230\u4e86 s \uff0c\u90a3\u4e48 s \u4e00\u5b9a\u662f\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\u3002\u8fd9\u662f\u56e0\u4e3a\u53ea\u6709\u5f53 s \u5177\u6709\u5468\u671f\u6027\u65f6\uff0c\u5b83\u7684\u524d\u7f00\u548c\u540e\u7f00\u624d\u4f1a\u4ea4\u66ff\u91cd\u53e0\uff0c\u5f62\u6210\u5339\u914d\u3002 \u56e0\u6b64\uff0c\u62fc\u63a5 s + s \u5e76\u53bb\u6389\u9996\u5c3e\u5b57\u7b26\u540e\u80fd\u5426\u518d\u6b21\u627e\u5230 s \uff0c\u53ef\u4ee5\u7528\u6765\u5224\u65ad s \u662f\u5426\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u3002 \u8865\u5145\u6750\u6599\uff1a \u5145\u5206\u6027\u53ca\u5fc5\u8981\u6027\u8bc1\u660e Leetcode\u5b98\u65b9\u9898\u89e3\u8bc1\u660e LC796 \u65cb\u8f6c\u5b57\u7b26\u4e32 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 s \u548c goal \uff0c\u5982\u679c\u901a\u8fc7\u82e5\u5e72\u6b21\u65cb\u8f6c\u64cd\u4f5c\u4e4b\u540e\uff0c s \u80fd\u53d8\u6210 goal \uff0c\u5219\u8fd4\u56de true \uff0c\u5426\u5219\u8fd4\u56de false \u3002 \u65cb\u8f6c\u64cd\u4f5c\u662f\u5c06\u5b57\u7b26\u4e32\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u79fb\u52a8\u5230\u6700\u540e\u4e00\u4f4d\u3002\u4f8b\u5982\uff0c\u5b57\u7b26\u4e32 \"abcde\" \u7ecf\u8fc7\u4e00\u6b21\u65cb\u8f6c\u53d8\u4e3a \"bcdea\" \u3002 \u89e3\u9898\u601d\u8def \u7406\u89e3\u65cb\u8f6c \uff1a \u65cb\u8f6c\u64cd\u4f5c\u662f\u5c06\u5b57\u7b26\u4e32\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u79fb\u52a8\u5230\u6700\u540e\u4e00\u4f4d\u3002 \u4f8b\u5982\uff0c\u5b57\u7b26\u4e32 \"abcde\" \u7ecf\u8fc7\u4e00\u6b21\u65cb\u8f6c\u53d8\u4e3a \"bcdea\" \uff0c\u518d\u7ecf\u8fc7\u4e00\u6b21\u65cb\u8f6c\u53d8\u4e3a \"cdeab\" \uff0c\u5982\u6b64\u7c7b\u63a8\u3002 \u5b57\u7b26\u4e32\u65cb\u8f6c\u7684\u7279\u6027 \uff1a \u5982\u679c\u5c06\u5b57\u7b26\u4e32 s \u62fc\u63a5\u6210 s + s \uff0c\u8fd9\u4e2a\u65b0\u5b57\u7b26\u4e32\u5c06\u5305\u542b s \u6240\u6709\u53ef\u80fd\u7684\u65cb\u8f6c\u5f62\u5f0f\u3002 \u4f8b\u5982\uff0c s = \"abcde\" \u62fc\u63a5\u540e\u53d8\u4e3a \"abcdeabcde\" \uff0c\u5b83\u5305\u542b\u4e86\u6240\u6709\u65cb\u8f6c\u5f62\u5f0f\uff1a \"abcde\" , \"bcdea\" , \"cdeab\" , \"deabc\" , \"eabcd\" \u3002 \u5224\u65ad goal \u662f\u5426\u662f s + s \u7684\u5b50\u4e32 \uff1a \u6211\u4eec\u53ef\u4ee5\u904d\u5386 s + s \uff0c\u622a\u53d6\u4e0e s \u76f8\u540c\u957f\u5ea6\u7684\u5b50\u4e32\uff0c\u5e76\u68c0\u67e5\u5b83\u662f\u5426\u7b49\u4e8e goal \u3002 \u793a\u4f8b\u4ee3\u7801 class Solution { public: bool rotateString(string s, string goal) { string double_s = s + s; // \u904d\u5386 double_s \u4e2d\u7684\u6bcf\u4e2a\u5b50\u4e32\uff0c\u68c0\u67e5\u662f\u5426\u7b49\u4e8e goal for (int i = 0; i < s.length(); i++) { if (double_s.substr(i, s.length()) == goal) { return true; } } return false; } }; \u4ee3\u7801\u8bb2\u89e3 double_s = s + s \uff1a\u5c06\u5b57\u7b26\u4e32 s \u81ea\u8eab\u62fc\u63a5\uff0c\u5f62\u6210\u4e00\u4e2a\u65b0\u5b57\u7b26\u4e32 double_s \uff0c\u5176\u957f\u5ea6\u4e3a 2 * s.length() \u3002 \u904d\u5386 double_s \uff1a \u5728 double_s \u4e2d\uff0c\u9010\u4e2a\u63d0\u53d6\u957f\u5ea6\u4e3a s.length() \u7684\u5b50\u4e32\uff0c\u4f7f\u7528 substr(i, s.length()) \u51fd\u6570\u4ece\u7d22\u5f15 i \u5904\u5f00\u59cb\u622a\u53d6\u4e0e s \u76f8\u540c\u957f\u5ea6\u7684\u5b50\u4e32\u3002 \u6bd4\u8f83\u5b50\u4e32\u548c goal \uff1a \u5982\u679c\u67d0\u4e2a\u5b50\u4e32\u7b49\u4e8e goal \uff0c\u5219\u8fd4\u56de true \uff0c\u8868\u793a s \u901a\u8fc7\u65cb\u8f6c\u53ef\u4ee5\u53d8\u4e3a goal \u3002 \u8fd4\u56de false \uff1a \u5982\u679c\u904d\u5386\u5b8c\u6240\u6709\u53ef\u80fd\u7684\u5b50\u4e32\u90fd\u6ca1\u6709\u5339\u914d\uff0c\u5219\u8fd4\u56de false \u3002 LC28 \u67e5\u627e\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5339\u914d\u9879\u7d22\u5f15 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 haystack \u548c needle \uff0c\u4f60\u9700\u8981\u5728 haystack \u5b57\u7b26\u4e32\u4e2d\u627e\u51fa needle \u5b57\u7b26\u4e32\u51fa\u73b0\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\uff08\u4ece 0 \u5f00\u59cb\uff09\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de -1 \u3002 \u601d\u8def\u5206\u6790 \u5982\u679c needle \u4e3a\u7a7a\u5b57\u7b26\u4e32\uff0c\u76f4\u63a5\u8fd4\u56de 0 \u3002 \u904d\u5386 haystack \uff0c\u4ece\u6bcf\u4e2a\u7d22\u5f15\u4f4d\u7f6e\u68c0\u67e5\u662f\u5426\u4e0e needle \u5339\u914d\u3002 \u5982\u679c\u5339\u914d\u6210\u529f\uff0c\u8fd4\u56de\u8be5\u7d22\u5f15\uff0c\u5426\u5219\u7ee7\u7eed\u904d\u5386\u3002 \u5982\u679c\u904d\u5386\u7ed3\u675f\u540e\u672a\u627e\u5230\uff0c\u8fd4\u56de -1 \u3002 \u53c2\u8003\u89e3\u7b54 class Solution { public: int strStr(string haystack, string needle) { // \u5982\u679c needle \u4e3a\u7a7a\u5b57\u7b26\u4e32\uff0c\u76f4\u63a5\u8fd4\u56de 0 if (needle.empty()) { return 0; } // \u83b7\u53d6\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6 int n = haystack.length(); int m = needle.length(); // \u904d\u5386 haystack\uff0c\u76f4\u5230\u5269\u4f59\u7684\u90e8\u5206\u957f\u5ea6\u5c0f\u4e8e needle \u957f\u5ea6 for (int i = 0; i <= n - m; i++) { // \u6bd4\u8f83\u4ece i \u5f00\u59cb\u7684\u5b50\u4e32\u662f\u5426\u7b49\u4e8e needle if (haystack.substr(i, m) == needle) { return i; } } // \u5982\u679c\u904d\u5386\u7ed3\u675f\u540e\u6ca1\u6709\u627e\u5230\uff0c\u8fd4\u56de -1 return -1; } }; 2. \u5b57\u7b26\u4e32\u6570\u5b66\u8fd0\u7b97 \u5b57\u7b26\u4e32\u6570\u5b66\u6a21\u62df\u7684\u57fa\u672c\u89e3\u9898\u601d\u8def\u4e3b\u8981\u6d89\u53ca\u5982\u4f55\u901a\u8fc7\u9010\u6b65\u64cd\u4f5c\u548c\u7b80\u5355\u7684\u6570\u5b66\u8fd0\u7b97\uff0c\u5904\u7406\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u6570\u5b57\u8ba1\u7b97\u3002 \u57fa\u672c\u6982\u5ff5 \u5b57\u7b26\u8f6c\u6570\u5b57 \uff1a \u5b57\u7b26\u4e32\u4e2d\u7684\u6570\u5b57\u662f\u4ee5\u5b57\u7b26\u7684\u5f62\u5f0f\u5b58\u5728\u7684\uff0c\u4f8b\u5982\u5b57\u7b26 '0' \u5230 '9' \u3002 \u53ef\u4ee5\u901a\u8fc7 char - '0' \u5c06\u5b57\u7b26\u8f6c\u4e3a\u5bf9\u5e94\u7684\u6570\u5b57\u3002\u4f8b\u5982\uff0c '5' - '0' \u7684\u7ed3\u679c\u4e3a 5 \u3002 \u8fdb\u4f4d\u5904\u7406 \uff1a \u5728\u8fdb\u884c\u52a0\u6cd5\u8fd0\u7b97\u65f6\uff0c\u5982\u679c\u67d0\u4e00\u4f4d\u7684\u548c\u5927\u4e8e\u6216\u7b49\u4e8e 10 \uff0c\u5219\u9700\u8981\u5904\u7406\u8fdb\u4f4d\uff08carry\uff09\uff0c\u5c06 1 \u52a0\u5230\u4e0b\u4e00\u4f4d\u7684\u8ba1\u7b97\u4e2d\u3002 \u8fdb\u4f4d\u7684\u8ba1\u7b97\u53ef\u4ee5\u901a\u8fc7 carry = sum / 10 \u6765\u5b9e\u73b0\uff0c\u800c\u5f53\u524d\u4f4d\u7684\u7ed3\u679c\u5219\u662f sum % 10 \u3002 \u9006\u5e8f\u8ba1\u7b97 \uff1a \u7531\u4e8e\u52a0\u6cd5\u4ece\u4e2a\u4f4d\u5f00\u59cb\u8fdb\u884c\uff0c\u56e0\u6b64\u6211\u4eec\u901a\u5e38\u4ece\u5b57\u7b26\u4e32\u7684\u53f3\u8fb9\u5f00\u59cb\u52a0\u6cd5\uff0c\u9010\u4f4d\u5411\u5de6\u3002 \u4e3a\u4e86\u5904\u7406\u8fdb\u4f4d\u4ee5\u53ca\u6784\u9020\u7ed3\u679c\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u5bb9\u5668\uff08\u5982 string \u6216 vector \uff09\u5b58\u50a8\u8ba1\u7b97\u7ed3\u679c\uff0c\u6700\u540e\u5c06\u5176\u9006\u5e8f\u6392\u5217\u4ee5\u5f97\u5230\u6b63\u786e\u7684\u7b54\u6848\u3002 \u4f8b\u9898\u8bb2\u89e3 LC415 \u5b57\u7b26\u4e32\u76f8\u52a0 \u9898\u76ee\u63cf\u8ff0 \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u975e\u8d1f\u6574\u6570 num1 \u548c num2 \uff0c\u8ba1\u7b97\u5b83\u4eec\u7684\u548c\uff0c\u5e76\u8fd4\u56de\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u7ed3\u679c\u3002\u4f60\u4e0d\u80fd\u4f7f\u7528\u4efb\u4f55\u5185\u5efa\u7684\u5927\u6574\u6570\u5e93\uff08\u5982 BigInteger \uff09\uff0c\u4e5f\u4e0d\u80fd\u76f4\u63a5\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6574\u6570\u5f62\u5f0f\u3002 \u9898\u76ee\u5206\u6790 \u8981\u8ba1\u7b97\u4e24\u4e2a\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u975e\u8d1f\u6574\u6570 num1 \u548c num2 \u7684\u548c\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c\u4e3a\u5b57\u7b26\u4e32\u5f62\u5f0f\uff0c\u6211\u4eec\u9700\u8981\u624b\u52a8\u6a21\u62df\u52a0\u6cd5\u7684\u8fc7\u7a0b\uff0c\u7c7b\u4f3c\u4e8e\u5728\u7eb8\u4e0a\u8fdb\u884c\u52a0\u6cd5\u8ba1\u7b97\u3002\u4e0b\u9762\u662f\u8be6\u7ec6\u7684\u89e3\u9898\u601d\u8def\u548c\u6b65\u9aa4\u3002 \u89e3\u9898\u601d\u8def \u4ece\u53f3\u5411\u5de6\u904d\u5386 \uff1a \u7531\u4e8e\u52a0\u6cd5\u662f\u4ece\u4e2a\u4f4d\u5f00\u59cb\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4ece\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u53f3\u7aef\u9010\u4f4d\u8fdb\u884c\u52a0\u6cd5\u3002 \u9010\u4f4d\u76f8\u52a0 \uff1a \u5bf9\u4e8e num1 \u548c num2 \u4e2d\u7684\u6bcf\u4e00\u4f4d\uff0c\u5148\u5c06\u5b57\u7b26\u8f6c\u5316\u4e3a\u6570\u5b57\u8fdb\u884c\u52a0\u6cd5\u64cd\u4f5c\u3002\u6bcf\u4f4d\u52a0\u6cd5\u64cd\u4f5c\u8fd8\u9700\u8981\u8003\u8651\u8fdb\u4f4d\uff08carry\uff09\u7684\u5f71\u54cd\u3002 \u5904\u7406\u4e0d\u540c\u957f\u5ea6\u7684\u5b57\u7b26\u4e32 \uff1a \u5982\u679c\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e0d\u540c\uff0c\u5728\u904d\u5386\u65f6\u5904\u7406\u8f83\u77ed\u5b57\u7b26\u4e32\u65f6\uff0c\u5c06\u7f3a\u5931\u4f4d\u9ed8\u8ba4\u4e3a 0\u3002 \u5904\u7406\u6700\u540e\u7684\u8fdb\u4f4d \uff1a \u5982\u679c\u904d\u5386\u7ed3\u675f\u540e\u8fdb\u4f4d\u4e0d\u4e3a 0\uff0c\u9700\u8981\u5c06\u8fdb\u4f4d\u52a0\u5230\u6700\u7ec8\u7ed3\u679c\u4e2d\u3002 \u7ed3\u679c\u62fc\u63a5\u4e0e\u53cd\u8f6c \uff1a \u56e0\u4e3a\u6211\u4eec\u662f\u4ece\u53f3\u5411\u5de6\u8fdb\u884c\u8ba1\u7b97\uff0c\u6700\u540e\u9700\u8981\u5c06\u7ed3\u679c\u53cd\u8f6c\u540e\u8fd4\u56de\u3002 \u53c2\u8003\u89e3\u7b54 class Solution { public: string addStrings(string num1, string num2) { int num1_index = num1.length() - 1; int num2_index = num2.length() - 1; string result = \"\"; int carry = 0; // \u4ece\u53f3\u5230\u5de6\u9010\u4f4d\u76f8\u52a0 while (num1_index >= 0 || num2_index >= 0) { int total = carry; carry = 0; // \u52a0\u4e0a num1 \u7684\u5f53\u524d\u4f4d if (num1_index >= 0) { total += num1[num1_index] - '0'; num1_index--; } // \u52a0\u4e0a num2 \u7684\u5f53\u524d\u4f4d if (num2_index >= 0) { total += num2[num2_index] - '0'; num2_index--; } // \u5224\u65ad\u662f\u5426\u6709\u8fdb\u4f4d if (total >= 10) { carry = 1; } // \u5f53\u524d\u4f4d\u7ed3\u679c\u6dfb\u52a0\u5230\u5b57\u7b26\u4e32 result.push_back(total % 10 + '0'); } // \u5982\u679c\u6700\u540e\u8fd8\u6709\u8fdb\u4f4d\uff0c\u6dfb\u52a0\u5230\u7ed3\u679c\u4e2d if (carry == 1) { result.push_back(carry + '0'); } // \u7ed3\u679c\u662f\u53cd\u5411\u62fc\u63a5\u7684\uff0c\u9700\u8981\u53cd\u8f6c reverse(result.begin(), result.end()); return result; } }; \u4ee3\u7801\u8bb2\u89e3 num1_index \u548c num2_index \uff1a\u7528\u6765\u8ffd\u8e2a\u4e24\u4e2a\u5b57\u7b26\u4e32 num1 \u548c num2 \u7684\u5f53\u524d\u4f4d\u3002\u5b83\u4eec\u4ece\u5b57\u7b26\u4e32\u7684\u6700\u540e\u4e00\u4f4d\u5f00\u59cb\uff0c\u9010\u6e10\u5411\u524d\u79fb\u52a8\u3002 carry \uff1a\u7528\u4e8e\u5904\u7406\u8fdb\u4f4d\u3002\u5f53\u67d0\u4e00\u4f4d\u76f8\u52a0\u7684\u7ed3\u679c\u5927\u4e8e\u7b49\u4e8e 10 \u65f6\uff0c carry \u8bbe\u7f6e\u4e3a 1\u3002 while (num1_index >= 0 || num2_index >= 0) \uff1a\u5faa\u73af\u904d\u5386\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u6bcf\u4e00\u4f4d\uff0c\u76f4\u5230\u6240\u6709\u4f4d\u90fd\u88ab\u5904\u7406\u5b8c\u3002 result.push_back(total % 10 + '0') \uff1a\u5c06\u5f53\u524d\u4f4d\u7684\u8ba1\u7b97\u7ed3\u679c\u6dfb\u52a0\u5230\u7ed3\u679c\u5b57\u7b26\u4e32\u4e2d\u3002 \u53cd\u8f6c\u7ed3\u679c \uff1a\u7531\u4e8e\u7ed3\u679c\u5b57\u7b26\u4e32\u662f\u4ece\u4f4e\u4f4d\u5230\u9ad8\u4f4d\u751f\u6210\u7684\uff0c\u6240\u4ee5\u6700\u540e\u8981\u4f7f\u7528 reverse \u5c06\u5176\u53cd\u8f6c\u3002 LC7 \u6574\u6570\u53cd\u8f6c \u9898\u76ee\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a 32 \u4f4d\u6709\u7b26\u53f7\u6574\u6570 x \uff0c\u8fd4\u56de\u5176\u6570\u5b57\u90e8\u5206\u53cd\u8f6c\u540e\u7684\u7ed3\u679c\u3002\u5982\u679c\u53cd\u8f6c\u540e\u7684\u6574\u6570\u6ea2\u51fa\uff08\u8d85\u51fa 32 \u4f4d\u6574\u6570\u8303\u56f4 [-2^31, 2^31 - 1] \uff09\uff0c\u5219\u8fd4\u56de 0 \u3002 \u89e3\u9898\u601d\u8def \u5904\u7406\u6570\u5b57\u7684\u6bcf\u4e00\u4f4d \uff1a \u6211\u4eec\u4ece\u6574\u6570 x \u7684\u6700\u540e\u4e00\u4f4d\u5f00\u59cb\u9010\u4f4d\u63d0\u53d6\u6570\u5b57\uff0c\u5e76\u5c06\u5176\u52a0\u5165\u5230\u53cd\u8f6c\u540e\u7684\u7ed3\u679c\u4e2d\u3002\u901a\u8fc7 x % 10 \u83b7\u53d6\u5f53\u524d\u7684\u6700\u540e\u4e00\u4f4d\uff0c\u5e76\u4f7f\u7528 x / 10 \u79fb\u9664\u6700\u540e\u4e00\u4f4d\u3002 \u53cd\u8f6c\u6784\u5efa \uff1a \u6bcf\u6b21\u63d0\u53d6\u4e00\u4f4d\u6570\u5b57\u540e\uff0c\u5c06\u5176\u52a0\u5230\u7ed3\u679c\u7684\u672b\u5c3e\uff0c\u5373\u5c06\u5f53\u524d\u7684 result \u4e58\u4ee5 10 \u5e76\u52a0\u4e0a\u63d0\u53d6\u7684\u6570\u5b57\uff0c\u4ece\u800c\u9010\u6b65\u6784\u5efa\u53cd\u8f6c\u540e\u7684\u7ed3\u679c\u3002 \u6ea2\u51fa\u68c0\u67e5 \uff1a \u5728\u6bcf\u6b21\u5c06\u6570\u5b57\u52a0\u5165 result \u4e4b\u524d\uff0c\u9700\u8981\u68c0\u67e5 result \u662f\u5426\u4f1a\u8d85\u8fc7 32 \u4f4d\u6574\u6570\u7684\u6700\u5927\u6216\u6700\u5c0f\u8303\u56f4\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5982\u679c result \u5927\u4e8e INT_MAX / 10 \u6216 result \u7b49\u4e8e INT_MAX / 10 \u4e14\u5f53\u524d\u6570\u5b57\u5927\u4e8e 7\uff0c\u5219\u7ed3\u679c\u4f1a\u6ea2\u51fa\uff0c\u76f4\u63a5\u8fd4\u56de 0\u3002\u540c\u6837\u7684\u89c4\u5219\u9002\u7528\u4e8e\u6700\u5c0f\u503c INT_MIN \u3002 \u8fd4\u56de\u7ed3\u679c \uff1a \u5f53\u6240\u6709\u7684\u4f4d\u90fd\u5904\u7406\u5b8c\u6bd5\u540e\uff0c\u8fd4\u56de\u53cd\u8f6c\u540e\u7684 result \u3002\u5982\u679c x \u539f\u672c\u662f\u8d1f\u6570\uff0c\u53cd\u8f6c\u540e\u7ed3\u679c\u4ecd\u7136\u662f\u8d1f\u6570\u3002\u5982\u679c\u6709\u6ea2\u51fa\uff0c\u5219\u8fd4\u56de 0\u3002 \u6ea2\u51fa\u6761\u4ef6\u8bf4\u660e INT_MAX = 2147483647 \uff0c\u6700\u540e\u4e00\u4f4d\u662f 7\u3002 INT_MIN = -2147483648 \uff0c\u6700\u540e\u4e00\u4f4d\u662f -8\u3002 \u53c2\u8003\u89e3\u7b54 class Solution { public: int reverse(int x) { int result = 0; while (x != 0) { int digit = x % 10; // \u68c0\u67e5\u662f\u5426\u4f1a\u6ea2\u51fa\uff1a\u5982\u679c result \u8d85\u8fc7\u4e86\u8fb9\u754c\uff0c\u8fd4\u56de 0 if (result > INT_MAX / 10 || (result == INT_MAX / 10 && digit > 7)) { return 0; } if (result < INT_MIN / 10 || (result == INT_MIN / 10 && digit < -8)) { return 0; } // \u6784\u5efa\u53cd\u8f6c\u540e\u7684\u7ed3\u679c result = result * 10 + digit; // \u79fb\u9664 x \u7684\u6700\u540e\u4e00\u4f4d x /= 10; } return result; } }; \u4ee3\u7801\u8bb2\u89e3 while (x != 0) \uff1a\u8fd9\u4e2a\u5faa\u73af\u4f1a\u5904\u7406\u8f93\u5165\u6574\u6570 x \u7684\u6bcf\u4e00\u4f4d\u6570\u5b57\uff0c\u76f4\u5230 x \u53d8\u4e3a 0 \u4e3a\u6b62\u3002\u6bcf\u6b21\u5faa\u73af\uff0c\u90fd\u4f1a\u63d0\u53d6 x \u7684\u6700\u540e\u4e00\u4f4d\u6570\u5b57\u5e76\u5c06\u5176\u6dfb\u52a0\u5230\u7ed3\u679c\u4e2d\u3002 \u6ea2\u51fa\u68c0\u67e5 \uff1a\u5728\u66f4\u65b0 result \u4e4b\u524d\uff0c\u68c0\u67e5\u662f\u5426\u53ef\u80fd\u53d1\u751f\u6ea2\u51fa\u3002\u5177\u4f53\u662f\u901a\u8fc7\u6bd4\u8f83 result \u548c INT_MAX / 10 \u6216 INT_MIN / 10 \u6765\u5224\u65ad\u3002\u5982\u679c result \u8d85\u8fc7\u4e86 32 \u4f4d\u6574\u6570\u7684\u8303\u56f4 (\u5373\u5927\u4e8e INT_MAX \u6216\u5c0f\u4e8e INT_MIN )\uff0c\u5219\u8fd4\u56de 0 \u4ee5\u907f\u514d\u6ea2\u51fa\u3002 digit = x % 10 \uff1a\u8fd9\u4e00\u884c\u4ee3\u7801\u4ece x \u4e2d\u63d0\u53d6\u6700\u540e\u4e00\u4f4d\u6570\u5b57\uff08\u4e2a\u4f4d\u6570\uff09\u3002\u4f8b\u5982\uff0c\u5982\u679c x = 123 \uff0c digit \u4f1a\u7b49\u4e8e 3 \u3002 result = result * 10 + digit \uff1a\u8fd9\u4e00\u6b65\u7528\u4e8e\u6784\u5efa\u53cd\u8f6c\u540e\u7684\u7ed3\u679c\uff0c\u5c06\u4e4b\u524d\u7684 result \u4e58\u4ee5 10 \u5e76\u52a0\u4e0a\u63d0\u53d6\u7684 digit \uff0c\u76f8\u5f53\u4e8e\u5c06\u65b0\u7684\u6570\u5b57\u8ffd\u52a0\u5230\u7ed3\u679c\u7684\u672b\u5c3e\u3002 x /= 10 \uff1a\u901a\u8fc7\u5c06 x \u9664\u4ee5 10 \u6765\u79fb\u9664\u6700\u540e\u4e00\u4f4d\u6570\u5b57\uff0c\u51c6\u5907\u5904\u7406\u4e0b\u4e00\u4e2a\u6570\u5b57\u3002\u8fd9\u6837\u4e0b\u4e00\u6b21\u5faa\u73af\u5c31\u4f1a\u5904\u7406\u5269\u4f59\u7684\u6570\u5b57\u3002 \u4e3e\u4e00\u53cd\u4e09 LC67 \u4e8c\u8fdb\u5236\u6c42\u548c \u9898\u76ee\u63cf\u8ff0 \u7ed9\u5b9a\u4e24\u4e2a\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32 a \u548c b \uff0c\u8fd4\u56de\u5b83\u4eec\u7684\u548c\uff08\u4ee5\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\uff09\u3002 \u89e3\u9898\u601d\u8def \u4ece\u53f3\u5230\u5de6\u904d\u5386 \uff1a \u7531\u4e8e\u4e8c\u8fdb\u5236\u52a0\u6cd5\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4ece\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u53f3\u7aef\u9010\u4f4d\u8fdb\u884c\u76f8\u52a0\u3002 \u9010\u4f4d\u76f8\u52a0\u5e76\u5904\u7406\u8fdb\u4f4d \uff1a \u4f7f\u7528\u4e24\u4e2a\u6307\u9488\u5206\u522b\u6307\u5411\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u540e\u4e00\u4f4d\uff0c\u6bcf\u4e00\u4f4d\u76f8\u52a0\u65f6\u8fd8\u9700\u8981\u8003\u8651\u8fdb\u4f4d\uff08carry\uff09\u3002 \u5904\u7406\u4e0d\u540c\u957f\u5ea6\u7684\u5b57\u7b26\u4e32 \uff1a \u5982\u679c\u4e24\u4e2a\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u540c\uff0c\u8f83\u77ed\u7684\u5b57\u7b26\u4e32\u53ef\u80fd\u5728\u67d0\u4e9b\u4f4d\u7f6e\u7f3a\u5931\uff0c\u9700\u8981\u5728\u5904\u7406\u65f6\u5c06\u8fd9\u4e9b\u4f4d\u7f6e\u7684\u503c\u89c6\u4e3a 0 \u3002 \u5904\u7406\u6700\u540e\u7684\u8fdb\u4f4d \uff1a \u5982\u679c\u904d\u5386\u7ed3\u675f\u65f6\u4ecd\u6709\u8fdb\u4f4d\uff0c\u5219\u9700\u8981\u5c06\u8fdb\u4f4d\u6dfb\u52a0\u5230\u7ed3\u679c\u4e2d\u3002 \u62fc\u63a5\u548c\u53cd\u8f6c\u7ed3\u679c \uff1a \u56e0\u4e3a\u52a0\u6cd5\u662f\u4ece\u53f3\u5411\u5de6\u8fdb\u884c\u7684\uff0c\u56e0\u6b64\u6700\u7ec8\u7ed3\u679c\u9700\u8981\u53cd\u8f6c\u3002 \u53c2\u8003\u89e3\u7b54 class Solution { public: string addBinary(string a, string b) { int a_index = a.length() - 1; int b_index = b.length() - 1; int sum = 0; int carry = 0; string result = \"\"; // \u4ece\u53f3\u5411\u5de6\u9010\u4f4d\u76f8\u52a0 while (a_index >= 0 || b_index >= 0) { sum = carry; // \u521d\u59cb\u5316 sum \u4e3a carry carry = 0; // \u91cd\u7f6e carry // \u53d6 a \u7684\u5f53\u524d\u4f4d if (a_index >= 0) { sum += a[a_index] - '0'; a_index--; } // \u53d6 b \u7684\u5f53\u524d\u4f4d if (b_index >= 0) { sum += b[b_index] - '0'; b_index--; } // \u8ba1\u7b97\u662f\u5426\u9700\u8981\u8fdb\u4f4d if (sum >= 2) { carry = 1; } // \u5f53\u524d\u4f4d\u7684\u7ed3\u679c\u6dfb\u52a0\u5230\u5b57\u7b26\u4e32 result.push_back(sum % 2 + '0'); } // \u5982\u679c\u6709\u5269\u4f59\u7684\u8fdb\u4f4d\uff0c\u6dfb\u52a0\u5230\u7ed3\u679c\u4e2d if (carry == 1) { result.push_back(carry + '0'); } // \u7ed3\u679c\u662f\u4ece\u53f3\u5230\u5de6\u6784\u5efa\u7684\uff0c\u6700\u540e\u9700\u8981\u53cd\u8f6c reverse(result.begin(), result.end()); return result; } }; \u4ee3\u7801\u8bb2\u89e3 while (a_index >= 0 || b_index >= 0) \uff1a\u4f7f\u7528\u4e24\u4e2a\u6307\u9488\u4ece\u53f3\u5411\u5de6\u904d\u5386\u5b57\u7b26\u4e32 a \u548c b \u3002\u53ea\u8981\u6709\u4e00\u4e2a\u5b57\u7b26\u4e32\u672a\u904d\u5386\u5b8c\uff0c\u6216\u8005\u8fd8\u6709\u8fdb\u4f4d\uff0c\u5c31\u7ee7\u7eed\u5faa\u73af\u3002 \u5904\u7406\u5f53\u524d\u4f4d\u7684\u76f8\u52a0 \uff1a \u5982\u679c a \u8fd8\u6709\u672a\u5904\u7406\u7684\u4f4d\uff0c\u5c31\u5c06\u8be5\u4f4d\u7684\u503c\u52a0\u5230 sum \u4e2d\u3002\u540c\u6837\u7684\u64cd\u4f5c\u9002\u7528\u4e8e b \u3002 \u5904\u7406\u6bcf\u4e00\u4f4d\u65f6\uff0c\u68c0\u67e5\u662f\u5426\u9700\u8981\u8fdb\u4f4d\uff08 sum >= 2 \uff09\uff0c\u5982\u679c\u9700\u8981\uff0c\u5219\u5c06 carry \u8bbe\u7f6e\u4e3a 1 \u3002 \u5904\u7406\u8fdb\u4f4d \uff1a \u5728\u6bcf\u6b21\u76f8\u52a0\u540e\uff0c\u66f4\u65b0 carry \u5e76\u5c06\u7ed3\u679c\u7684\u5f53\u524d\u4f4d\uff08 sum % 2 \uff09\u6dfb\u52a0\u5230\u7ed3\u679c\u5b57\u7b26\u4e32\u4e2d\u3002 \u6700\u540e\u7684\u8fdb\u4f4d\u5904\u7406 \uff1a \u5982\u679c\u6240\u6709\u4f4d\u5904\u7406\u5b8c\u6bd5\u540e\u4ecd\u6709\u8fdb\u4f4d\uff08 carry == 1 \uff09\uff0c\u5219\u5c06 1 \u6dfb\u52a0\u5230\u7ed3\u679c\u5b57\u7b26\u4e32\u4e2d\u3002 \u53cd\u8f6c\u7ed3\u679c \uff1a \u56e0\u4e3a\u52a0\u6cd5\u662f\u4ece\u53f3\u5411\u5de6\u8fdb\u884c\u7684\uff0c\u6240\u4ee5\u7ed3\u679c\u9700\u8981\u5728\u6700\u540e\u8fdb\u884c\u53cd\u8f6c\u3002 LC989 \u6570\u7ec4\u5f62\u5f0f\u7684\u6574\u6570\u52a0\u6cd5 \u9898\u76ee\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u7684\u6570\u7ec4\u5f62\u5f0f num \u548c\u4e00\u4e2a\u6574\u6570 k \uff0c\u5c06\u8fd9\u4e24\u4e2a\u6570\u76f8\u52a0\u5e76\u8fd4\u56de\u5b83\u4eec\u7684\u548c\uff0c\u7ed3\u679c\u4ee5\u6570\u7ec4\u5f62\u5f0f\u8fd4\u56de\u3002 num \u662f\u4ece\u5de6\u5230\u53f3\u6309\u4f4d\u6392\u5217\u7684\u6574\u6570\u3002 \u89e3\u9898\u601d\u8def \u4ece\u53f3\u5230\u5de6\u8fdb\u884c\u52a0\u6cd5 \uff1a \u4ece\u6570\u7ec4 num \u7684\u6700\u540e\u4e00\u4f4d\uff08\u6700\u4f4e\u4f4d\uff09\u5f00\u59cb\uff0c\u4e0e k \u7684\u5bf9\u5e94\u4f4d\u76f8\u52a0\u3002 \u5904\u7406\u8fdb\u4f4d \uff1a \u6bcf\u6b21\u76f8\u52a0\u53ef\u80fd\u4ea7\u751f\u8fdb\u4f4d\uff0c\u8fdb\u4f4d\u4f1a\u5f71\u54cd\u4e0b\u4e00\u6b21\u7684\u8ba1\u7b97\u3002 \u904d\u5386\u7ed3\u675f\u540e\u5904\u7406\u5269\u4f59\u8fdb\u4f4d \uff1a \u5982\u679c\u904d\u5386 num \u5b8c\u6bd5\uff0c k \u8fd8\u6709\u672a\u5904\u7406\u7684\u4f4d\uff0c\u6216\u8005\u6700\u540e\u4e00\u6b21\u76f8\u52a0\u4ea7\u751f\u8fdb\u4f4d\uff0c\u9700\u8981\u5c06\u8fd9\u4e9b\u5269\u4f59\u4f4d\u5904\u7406\u5b8c\u3002 \u7ed3\u679c\u6784\u5efa \uff1a \u56e0\u4e3a\u52a0\u6cd5\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u8ba1\u7b97\u7ed3\u679c\u5b58\u5165\u4e00\u4e2a\u5411\u91cf output \uff0c\u6700\u540e\u53cd\u8f6c\u8be5\u5411\u91cf\u5f97\u5230\u6b63\u786e\u7684\u987a\u5e8f\u3002 \u53c2\u8003\u89e3\u7b54 #include <vector> #include <algorithm> using namespace std; class Solution { public: vector<int> addToArrayForm(vector<int>& num, int k) { int num_index = num.size() - 1; vector<int> output; int carry = 0; // \u4ece\u6570\u7ec4\u6700\u540e\u4e00\u4f4d\u548ck\u7684\u672b\u4f4d\u5f00\u59cb\u9010\u4f4d\u76f8\u52a0 while (num_index >= 0 || k > 0) { int total = carry; // \u521d\u59cb\u5316 total \u4e3a carry carry = 0; // \u91cd\u7f6e carry // \u5904\u7406 num \u7684\u5f53\u524d\u4f4d if (num_index >= 0) { total += num[num_index]; num_index--; } // \u5904\u7406 k \u7684\u5f53\u524d\u4f4d if (k > 0) { total += k % 10; k /= 10; } // \u5224\u65ad\u662f\u5426\u6709\u8fdb\u4f4d if (total >= 10) { carry = 1; } // \u5c06\u5f53\u524d\u4f4d\u7ed3\u679c\u6dfb\u52a0\u5230\u8f93\u51fa output.push_back(total % 10); } // \u5982\u679c\u6709\u5269\u4f59\u7684\u8fdb\u4f4d if (carry == 1) { output.push_back(carry); } // \u7531\u4e8e\u6211\u4eec\u662f\u4ece\u4f4e\u4f4d\u5f00\u59cb\u6784\u5efa\u7ed3\u679c\uff0c\u6700\u7ec8\u9700\u8981\u53cd\u8f6c reverse(output.begin(), output.end()); return output; } }; \u4ee3\u7801\u8bb2\u89e3 while (num_index >= 0 || k > 0) \uff1a\u4ece\u6570\u7ec4 num \u548c\u6574\u6570 k \u7684\u672b\u4f4d\u5f00\u59cb\uff0c\u9010\u4f4d\u76f8\u52a0\uff0c\u76f4\u5230\u5904\u7406\u5b8c\u6240\u6709\u4f4d\u3002 \u5904\u7406 num \u548c k \u5f53\u524d\u4f4d \uff1a \u5bf9\u4e8e\u6570\u7ec4 num \u7684\u5f53\u524d\u4f4d\uff0c\u5c06\u5176\u4e0e k \u7684\u5f53\u524d\u4f4d\u76f8\u52a0\u3002\u5982\u679c num \u6216 k \u5df2\u7ecf\u6ca1\u6709\u5269\u4f59\u4f4d\uff0c\u5219\u5c06\u5176\u89c6\u4e3a 0\u3002 \u8fdb\u4f4d\u5904\u7406 \uff1a \u5982\u679c\u76f8\u52a0\u7684\u603b\u548c total \u5927\u4e8e\u7b49\u4e8e 10\uff0c\u5219\u9700\u8981\u5c06 carry \u7f6e\u4e3a 1\uff0c\u5e76\u4e14\u5728\u4e0b\u6b21\u5faa\u73af\u4e2d\u8003\u8651\u8fdb\u4f4d\u3002 \u5c06\u7ed3\u679c\u6dfb\u52a0\u5230 output \uff1a \u6bcf\u6b21\u76f8\u52a0\u7684\u7ed3\u679c\u5b58\u50a8\u5728 output \u4e2d\uff0c\u7531\u4e8e\u6211\u4eec\u4ece\u4f4e\u4f4d\u5f00\u59cb\u76f8\u52a0\uff0c\u56e0\u6b64\u7ed3\u679c\u9700\u8981\u5728\u6700\u540e\u8fdb\u884c\u53cd\u8f6c\u3002 \u8bfe\u540e\u7ec3\u4e60 \u5b57\u7b26\u4e32\u5faa\u73af+\u5207\u7247 \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC 1002 \u627e\u5230\u5171\u540c\u5b57\u7b26 \u627e\u5230\u7ed9\u5b9a\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\u6240\u6709\u5b57\u7b26\u4e32\u7684\u5171\u540c\u5b57\u7b26\u3002 LC 541 \u53cd\u8f6c\u5b57\u7b26\u4e32 II \u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u6307\u5b9a\u90e8\u5206\uff0c\u6bcf\u9694\u4e00\u4e2a\u6307\u5b9a\u957f\u5ea6\u53cd\u8f6c\u4e00\u6b21\u3002 LC 771 \u73e0\u5b9d\u4e0e\u77f3\u5934 \u8ba1\u7b97\u5728\u77f3\u5934\u4e2d\u6709\u591a\u5c11\u4e2a\u73e0\u5b9d\u5b57\u7b26\u3002 LC 844 \u56de\u9000\u5b57\u7b26\u4e32\u6bd4\u8f83 \u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u8003\u8651\u5230\u56de\u9000\u5b57\u7b26\uff08\u2018#\u2019\uff09\u7684\u5f71\u54cd\u3002 LC 925 \u957f\u6309\u952e\u5165\u7684\u540d\u5b57 \u68c0\u67e5\u4e00\u4e2a\u540d\u5b57\u662f\u5426\u53ef\u4ee5\u901a\u8fc7\u957f\u6309\u53e6\u4e00\u4e2a\u540d\u5b57\u7684\u5b57\u7b26\u6765\u5b9e\u73b0\u3002 \u5b57\u7b26\u4e32\u6570\u5b66\u8fd0\u7b97 \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC 2243 \u8ba1\u7b97\u5b57\u7b26\u4e32\u4e2d\u7684\u6570\u5b57\u548c \u8ba1\u7b97\u5b57\u7b26\u4e32\u4e2d\u6240\u6709\u6570\u5b57\u5b57\u7b26\u7684\u603b\u548c\u3002 LC 66 \u52a0\u4e00 \u5728\u6570\u7ec4\u5f62\u5f0f\u7684\u6570\u5b57\u4e0a\u52a0\u4e00\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c\u7684\u6570\u7ec4\u5f62\u5f0f\u3002","title":"Lesson8 \u5b57\u7b26\u4e32\u5faa\u73af+\u5207\u7247/\u5b57\u7b26\u4e32\u6570\u5b66\u8fd0\u7b97\u4e13\u9898"},{"location":"lesson8/Lesson8%20C%2B%2B/#lesson8","text":"","title":"Lesson8 \u5b57\u7b26\u4e32\u5faa\u73af+\u5207\u7247/\u5b57\u7b26\u4e32\u6570\u5b66\u8fd0\u7b97\u4e13\u9898"},{"location":"lesson8/Lesson8%20C%2B%2B/#_1","text":"\u5b57\u7b26\u4e32\u5faa\u73af+\u5207\u7247 LC14 \u6700\u957f\u516c\u5171\u524d\u7f00 LC125 \u9a8c\u8bc1\u56de\u6587\u4e32 LC459 \u91cd\u590d\u7684\u5b50\u5b57\u7b26\u4e32 LC796 \u65cb\u8f6c\u5b57\u7b26\u4e32 LC28 \u67e5\u627e\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5339\u914d\u9879\u7d22\u5f15 \u5b57\u7b26\u4e32\u6570\u5b66\u8fd0\u7b97 LC415 \u5b57\u7b26\u4e32\u76f8\u52a0 LC7 \u6574\u6570\u53cd\u8f6c LC67 \u4e8c\u8fdb\u5236\u6c42\u548c LC989 \u6570\u7ec4\u5f62\u5f0f\u7684\u6574\u6570\u52a0\u6cd5 \u8bfe\u540e\u7ec3\u4e60","title":"\u76ee\u5f55"},{"location":"lesson8/Lesson8%20C%2B%2B/#1","text":"","title":"1. \u5b57\u7b26\u4e32\u5faa\u73af+\u5207\u7247"},{"location":"lesson8/Lesson8%20C%2B%2B/#_2","text":"","title":"\u4f8b\u9898\u8bb2\u89e3"},{"location":"lesson8/Lesson8%20C%2B%2B/#lc14","text":"\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u67e5\u627e\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u3002 \u5982\u679c\u4e0d\u5b58\u5728\u516c\u5171\u524d\u7f00\uff0c\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32 \"\"\u3002","title":"LC14 \u6700\u957f\u516c\u5171\u524d\u7f00"},{"location":"lesson8/Lesson8%20C%2B%2B/#_3","text":"\u8981\u627e\u5230\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\uff0c\u6211\u4eec\u53ef\u4ee5\u4f9d\u6b21\u6bd4\u8f83\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7684\u5b57\u7b26\uff0c\u76f4\u5230\u627e\u5230\u4e0d\u5339\u914d\u7684\u4f4d\u7f6e\u4e3a\u6b62\u3002\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u591a\u79cd\u65b9\u6cd5\u89e3\u51b3\uff0c\u6bd4\u5982\u7eb5\u5411\u626b\u63cf\u3001\u6a2a\u5411\u626b\u63cf\u3001\u5206\u6cbb\u6cd5\u3001\u4e8c\u5206\u67e5\u627e\u7b49\u3002\u6211\u4eec\u8fd9\u91cc\u91c7\u7528\u4e00\u79cd\u8f83\u4e3a\u76f4\u89c2\u7684\u6a2a\u5411\u626b\u63cf\u6cd5\u3002","title":"\u9898\u76ee\u5206\u6790"},{"location":"lesson8/Lesson8%20C%2B%2B/#_4","text":"\u8fb9\u754c\u60c5\u51b5 : \u5982\u679c\u5b57\u7b26\u4e32\u6570\u7ec4\u4e3a\u7a7a\uff0c\u76f4\u63a5\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002 \u5982\u679c\u5b57\u7b26\u4e32\u6570\u7ec4\u53ea\u6709\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u6700\u957f\u516c\u5171\u524d\u7f00\u5c31\u662f\u8fd9\u4e2a\u5b57\u7b26\u4e32\u672c\u8eab\u3002 \u4ece\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u5f00\u59cb : \u5047\u8bbe\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u6700\u957f\u516c\u5171\u524d\u7f00\uff0c\u63a5\u4e0b\u6765\u9010\u4e00\u4e0e\u6570\u7ec4\u4e2d\u7684\u5176\u4ed6\u5b57\u7b26\u4e32\u8fdb\u884c\u6bd4\u8f83\u3002 \u6bcf\u6b21\u6bd4\u8f83\u65f6\uff0c\u9010\u5b57\u7b26\u5730\u8fdb\u884c\u6bd4\u8f83\uff0c\u76f4\u5230\u627e\u5230\u4e0d\u5339\u914d\u7684\u5b57\u7b26\u6216\u6bd4\u8f83\u5b8c\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u6240\u6709\u5b57\u7b26\u3002 \u66f4\u65b0\u5f53\u524d\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u4e3a\u5339\u914d\u7684\u90e8\u5206\u3002 \u8fd4\u56de\u7ed3\u679c : \u6700\u540e\u8fd4\u56de\u5339\u914d\u540e\u7684\u516c\u5171\u524d\u7f00\uff0c\u5982\u679c\u6ca1\u6709\u5339\u914d\u5230\u4efb\u4f55\u524d\u7f00\uff0c\u5219\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002","title":"\u601d\u8def"},{"location":"lesson8/Lesson8%20C%2B%2B/#_5","text":"class Solution { public: string longestCommonPrefix(vector<string>& strs) { if (strs.empty()) return \"\"; string prefix = strs[0]; // \u521d\u59cb\u5316\u6700\u957f\u516c\u5171\u524d\u7f00\u4e3a\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32 // \u4f9d\u6b21\u4e0e\u5176\u4ed6\u5b57\u7b26\u4e32\u8fdb\u884c\u6bd4\u8f83 for (int i = 1; i < strs.size(); ++i) { while (strs[i].find(prefix) != 0) { // \u5f53\u524d\u524d\u7f00\u4e0e\u4e0b\u4e00\u4e2a\u5b57\u7b26\u4e32\u8fdb\u884c\u6bd4\u8f83 prefix = prefix.substr(0, prefix.length() - 1); // \u4e0d\u65ad\u7f29\u77ed\u524d\u7f00 if (prefix.empty()){ return \"\"; // \u5982\u679c\u524d\u7f00\u4e3a\u7a7a\uff0c\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32 } } } return prefix; } };","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson8/Lesson8%20C%2B%2B/#lc125","text":"","title":"LC125. \u9a8c\u8bc1\u56de\u6587\u4e32"},{"location":"lesson8/Lesson8%20C%2B%2B/#_6","text":"\u5982\u679c\u5728\u5c06\u6240\u6709\u5927\u5199\u5b57\u7b26\u8f6c\u6362\u4e3a\u5c0f\u5199\u5b57\u7b26\u3001\u5e76\u79fb\u9664\u6240\u6709\u975e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\u4e4b\u540e\uff0c\u77ed\u8bed\u6b63\u7740\u8bfb\u548c\u53cd\u7740\u8bfb\u90fd\u4e00\u6837\u3002\u5219\u53ef\u4ee5\u8ba4\u4e3a\u8be5\u77ed\u8bed\u662f\u4e00\u4e2a\u56de\u6587\u4e32\u3002 \u5b57\u6bcd\u548c\u6570\u5b57\u90fd\u5c5e\u4e8e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\u3002 \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u5982\u679c\u5b83\u662f\u56de\u6587\u4e32\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson8/Lesson8%20C%2B%2B/#_7","text":"\u56de\u6587\u4e32\u7684\u5224\u65ad\u8981\u6c42\u5ffd\u7565\u5927\u5c0f\u5199\u3001\u53bb\u9664\u975e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\u3002\u56e0\u6b64\u9700\u8981\u5148\u8fdb\u884c\u5b57\u7b26\u8fc7\u6ee4\uff0c\u7136\u540e\u5224\u65ad\u5904\u7406\u540e\u7684\u5b57\u7b26\u4e32\u662f\u5426\u6b63\u7740\u8bfb\u548c\u53cd\u7740\u8bfb\u90fd\u76f8\u540c\u3002","title":"\u9898\u76ee\u5206\u6790"},{"location":"lesson8/Lesson8%20C%2B%2B/#_8","text":"1. \u5b57\u7b26\u8fc7\u6ee4 \u4f7f\u7528\u904d\u5386\u7684\u65b9\u5f0f\u5c06\u5b57\u7b26\u4e32\u4e2d\u7684\u975e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\u8fc7\u6ee4\u6389\uff0c\u5e76\u4e14\u5c06\u5b57\u6bcd\u7edf\u4e00\u8f6c\u6362\u4e3a\u5c0f\u5199\uff0c\u4ee5\u4fbf\u540e\u7eed\u6bd4\u8f83\u3002 2. \u53cd\u8f6c\u5224\u65ad \u901a\u8fc7\u76f4\u63a5\u53cd\u8f6c\u5904\u7406\u540e\u7684\u5b57\u7b26\u4e32\uff0c\u6bd4\u8f83\u539f\u5b57\u7b26\u4e32\u4e0e\u5176\u53cd\u8f6c\u540e\u7684\u7248\u672c\u662f\u5426\u76f8\u7b49\uff0c\u5982\u679c\u76f8\u7b49\u5219\u662f\u56de\u6587\u4e32\u3002","title":"\u601d\u8def"},{"location":"lesson8/Lesson8%20C%2B%2B/#_9","text":"\u904d\u5386\u8fc7\u6ee4 \uff1a\u521b\u5efa\u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32 filteredString \uff0c\u904d\u5386\u8f93\u5165\u5b57\u7b26\u4e32 s \uff0c\u53ea\u4fdd\u7559\u5b57\u6bcd\u548c\u6570\u5b57\u5b57\u7b26\uff0c\u5e76\u4e14\u5c06\u5b57\u6bcd\u7edf\u4e00\u8f6c\u6362\u4e3a\u5c0f\u5199\u3002 \u53cd\u8f6c\u6bd4\u8f83 \uff1a\u5c06 filteredString \u53cd\u8f6c\uff0c\u6bd4\u8f83\u53cd\u8f6c\u540e\u7684\u5b57\u7b26\u4e32\u4e0e\u539f\u5b57\u7b26\u4e32\u662f\u5426\u76f8\u540c\u3002\u5982\u679c\u76f8\u540c\uff0c\u5219\u8fd4\u56de true \uff0c\u5426\u5219\u8fd4\u56de false \u3002","title":"\u5177\u4f53\u6b65\u9aa4"},{"location":"lesson8/Lesson8%20C%2B%2B/#_10","text":"class Solution { public: bool isPalindrome(string s) { string filteredString = \"\"; // \u904d\u5386\u5b57\u7b26\u4e32\uff0c\u4fdd\u7559\u5b57\u6bcd\u548c\u6570\u5b57\u5b57\u7b26\uff0c\u5e76\u5c06\u5b57\u6bcd\u8f6c\u6362\u4e3a\u5c0f\u5199 for (char c : s) { if (isalnum(c)) { filteredString += tolower(c); // \u5c06\u5b57\u6bcd\u8f6c\u4e3a\u5c0f\u5199 } } // \u521b\u5efa\u4e00\u4e2a\u53cd\u8f6c\u540e\u7684\u5b57\u7b26\u4e32 string reversedString = filteredString; reverse(reversedString.begin(), reversedString.end()); // \u5224\u65ad\u539f\u59cb\u8fc7\u6ee4\u540e\u7684\u5b57\u7b26\u4e32\u4e0e\u53cd\u8f6c\u540e\u7684\u5b57\u7b26\u4e32\u662f\u5426\u76f8\u540c return filteredString == reversedString; } };","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson8/Lesson8%20C%2B%2B/#_11","text":"isalnum(c) \uff1a\u8be5\u51fd\u6570\u68c0\u67e5\u5b57\u7b26 c \u662f\u5426\u4e3a\u5b57\u6bcd\u6216\u6570\u5b57\u3002\u5982\u679c c \u662f\u5b57\u6bcd\u6216\u6570\u5b57\uff0c\u8fd4\u56de true \uff0c\u5426\u5219\u8fd4\u56de false \u3002\u901a\u8fc7\u6b64\u51fd\u6570\uff0c\u53ef\u4ee5\u8fc7\u6ee4\u6389\u7a7a\u683c\u3001\u6807\u70b9\u7b26\u53f7\u7b49\u65e0\u5173\u5b57\u7b26\u3002 tolower(c) \uff1a\u8be5\u51fd\u6570\u5c06\u5b57\u6bcd c \u8f6c\u6362\u4e3a\u5c0f\u5199\u3002\u8fd9\u6837\u80fd\u591f\u786e\u4fdd\u5728\u5224\u65ad\u56de\u6587\u65f6\u5ffd\u7565\u5927\u5c0f\u5199\u5dee\u5f02\u3002 reverse(reversedString.begin(), reversedString.end()) \uff1a reverse \u51fd\u6570\u53ef\u4ee5\u5c06\u5b57\u7b26\u4e32\u7684\u987a\u5e8f\u53cd\u8f6c\uff0c\u4ece\u800c\u5b9e\u73b0\u6b63\u5e8f\u4e0e\u9006\u5e8f\u6bd4\u8f83\u3002 \u6bd4\u8f83 filteredString == reversedString \uff1a\u901a\u8fc7\u6bd4\u8f83\u539f\u5b57\u7b26\u4e32\u4e0e\u5176\u53cd\u8f6c\u540e\u7684\u7248\u672c\uff0c\u5224\u65ad\u662f\u5426\u4e3a\u56de\u6587\u4e32\u3002\u5982\u679c\u4e24\u8005\u76f8\u7b49\uff0c\u5219\u8bf4\u660e\u8be5\u5b57\u7b26\u4e32\u662f\u56de\u6587\u4e32\u3002","title":"\u4ee3\u7801\u8be6\u89e3"},{"location":"lesson8/Lesson8%20C%2B%2B/#_12","text":"","title":"\u4e3e\u4e00\u53cd\u4e09"},{"location":"lesson8/Lesson8%20C%2B%2B/#lc459","text":"","title":"LC459. \u91cd\u590d\u7684\u5b50\u5b57\u7b26\u4e32"},{"location":"lesson8/Lesson8%20C%2B%2B/#_13","text":"\u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u7684\u5b57\u7b26\u4e32 s \uff0c\u68c0\u67e5\u662f\u5426\u53ef\u4ee5\u901a\u8fc7\u7531\u5b83\u7684\u4e00\u4e2a\u5b50\u4e32\u91cd\u590d\u591a\u6b21\u6784\u6210\u3002\u5982\u679c\u5b58\u5728\u8fd9\u6837\u7684\u5b50\u4e32\uff0c\u5219\u8fd4\u56de true \uff0c\u5426\u5219\u8fd4\u56de false \u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson8/Lesson8%20C%2B%2B/#_14","text":"\u8981\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u7531\u91cd\u590d\u7684\u5b50\u4e32\u6784\u6210\uff0c\u53ef\u4ee5\u9010\u6b65\u68c0\u67e5\u53ef\u80fd\u7684\u5b50\u4e32\uff0c\u5e76\u8fdb\u884c\u5982\u4e0b\u64cd\u4f5c\uff1a \u68c0\u67e5\u5b50\u4e32\u662f\u5426\u80fd\u6574\u9664\u5b57\u7b26\u4e32\u7684\u957f\u5ea6 \uff1a \u5982\u679c\u5b57\u7b26\u4e32\u957f\u5ea6 n \u53ef\u4ee5\u88ab\u67d0\u4e2a\u5b50\u4e32\u957f\u5ea6 i \u6574\u9664\uff0c\u8bf4\u660e\u8fd9\u4e2a\u5b50\u4e32\u6709\u53ef\u80fd\u662f\u7ec4\u6210\u6574\u4e2a\u5b57\u7b26\u4e32\u7684\u91cd\u590d\u5355\u5143\uff0c\u56e0\u6b64\u53ef\u4ee5\u8fdb\u4e00\u6b65\u68c0\u67e5\u3002 \u6784\u9020\u4e00\u4e2a\u7531\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\u65b0\u5b57\u7b26\u4e32 \uff1a \u5bf9\u4e8e\u6bcf\u79cd\u7b26\u5408\u6761\u4ef6\u7684\u5b50\u4e32\uff0c\u6784\u9020\u4e00\u4e2a\u65b0\u5b57\u7b26\u4e32\uff0c\u8fd9\u4e2a\u65b0\u5b57\u7b26\u4e32\u7531\u8be5\u5b50\u4e32\u91cd\u590d\u591a\u6b21\u5f97\u5230\uff0c\u7136\u540e\u5224\u65ad\u8fd9\u4e2a\u65b0\u5b57\u7b26\u4e32\u662f\u5426\u7b49\u4e8e\u539f\u59cb\u5b57\u7b26\u4e32\u3002","title":"\u89e3\u9898\u601d\u8def"},{"location":"lesson8/Lesson8%20C%2B%2B/#_15","text":"class Solution { public: bool repeatedSubstringPattern(string s) { int n = s.length(); for (int i = 1; i <= n / 2; ++i) { // \u68c0\u67e5\u5b50\u4e32\u957f\u5ea6 i \u662f\u5426\u80fd\u6574\u9664\u5b57\u7b26\u4e32\u957f\u5ea6 n if (n % i == 0) { string substring = s.substr(0, i); // \u63d0\u53d6\u957f\u5ea6\u4e3a i \u7684\u5b50\u4e32 string repeated = \"\"; // \u7528\u6765\u6784\u9020\u65b0\u5b57\u7b26\u4e32 for (int j = 0; j < n / i; ++j) { repeated += substring; // \u5c06\u5b50\u4e32\u91cd\u590d\u62fc\u63a5 } // \u5982\u679c\u62fc\u63a5\u540e\u7684\u5b57\u7b26\u4e32\u4e0e\u539f\u5b57\u7b26\u4e32\u76f8\u540c\uff0c\u8fd4\u56de true if (repeated == s) { return true; } } } return false; // \u6ca1\u6709\u627e\u5230\u5408\u9002\u7684\u5b50\u4e32\uff0c\u8fd4\u56de false } };","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson8/Lesson8%20C%2B%2B/#_16","text":"s.substr(0, i) : substr \u51fd\u6570\u7528\u4e8e\u4ece\u7d22\u5f15 0 \u5f00\u59cb\u63d0\u53d6\u4e00\u4e2a\u957f\u5ea6\u4e3a i \u7684\u5b50\u4e32\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u5b57\u7b26\u4e32 abcdef \uff0c\u5f53 i = 2 \u65f6\uff0c s.substr(0, 2) \u8fd4\u56de \"ab\" \u3002 if (n % i == 0) : \u8fd9\u6bb5\u4ee3\u7801\u68c0\u67e5\u5f53\u524d\u5b50\u4e32\u7684\u957f\u5ea6 i \u662f\u5426\u80fd\u6574\u9664\u5b57\u7b26\u4e32 s \u7684\u603b\u957f\u5ea6 n \u3002\u5982\u679c\u4e0d\u80fd\u6574\u9664\uff0c\u8bf4\u660e\u8be5\u5b50\u4e32\u4e0d\u53ef\u80fd\u662f\u6784\u6210\u5b57\u7b26\u4e32\u7684\u91cd\u590d\u5355\u5143\uff0c\u8df3\u8fc7\u68c0\u67e5\u3002 repeated += substring : \u8be5\u6b65\u9aa4\u901a\u8fc7\u5c06\u63d0\u53d6\u7684\u5b50\u4e32\u4e0d\u65ad\u62fc\u63a5\uff0c\u6784\u9020\u4e00\u4e2a\u4e0e\u539f\u5b57\u7b26\u4e32\u7b49\u957f\u7684\u65b0\u5b57\u7b26\u4e32\u3002\u5982\u679c\u5b50\u4e32\u957f\u5ea6\u4e3a i \uff0c\u5e76\u4e14 s \u7684\u957f\u5ea6\u4e3a n \uff0c\u5c31\u4f1a\u5c06\u5b50\u4e32\u91cd\u590d n / i \u6b21\uff0c\u4ee5\u751f\u6210\u957f\u5ea6\u7b49\u4e8e n \u7684\u5b57\u7b26\u4e32\u3002 \u6bd4\u8f83\u751f\u6210\u7684\u5b57\u7b26\u4e32\u4e0e\u539f\u5b57\u7b26\u4e32 : \u6784\u9020\u7684\u5b57\u7b26\u4e32 repeated \u548c\u539f\u5b57\u7b26\u4e32 s \u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u4e8c\u8005\u76f8\u7b49\uff0c\u8bf4\u660e\u5b57\u7b26\u4e32 s \u662f\u7531\u8be5\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\uff0c\u8fd4\u56de true \u3002 \u5faa\u73af\u7ed3\u675f\u540e\u7684\u8fd4\u56de : \u5982\u679c\u904d\u5386\u5b8c\u6240\u6709\u53ef\u80fd\u7684\u5b50\u4e32\u90fd\u6ca1\u627e\u5230\u5408\u9002\u7684\u5b50\u4e32\uff0c\u8bf4\u660e\u5b57\u7b26\u4e32 s \u4e0d\u80fd\u901a\u8fc7\u91cd\u590d\u67d0\u4e2a\u5b50\u4e32\u6784\u6210\uff0c\u8fd4\u56de false \u3002","title":"\u8be6\u7ec6\u8bb2\u89e3"},{"location":"lesson8/Lesson8%20C%2B%2B/#_17","text":"\u53ef\u4ee5\u5229\u7528\u5b57\u7b26\u4e32\u7684\u7279\u6027\u6765\u8fdb\u4e00\u6b65\u4f18\u5316\uff1a \u5c06\u5b57\u7b26\u4e32 s \u81ea\u8eab\u62fc\u63a5\u4e00\u904d\uff0c\u5f97\u5230 s + s \u3002 \u53bb\u6389\u5f00\u5934\u548c\u7ed3\u5c3e\u7684\u5b57\u7b26\uff0c\u68c0\u67e5 s \u662f\u5426\u5728\u65b0\u7684\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u3002 \u5982\u679c\u51fa\u73b0\uff0c\u8bf4\u660e s \u53ef\u4ee5\u7531\u67d0\u4e2a\u5b50\u4e32\u6784\u6210\u3002","title":"\u66f4\u9ad8\u6548\u7684\u89e3\u6cd5"},{"location":"lesson8/Lesson8%20C%2B%2B/#_18","text":"class Solution { public: bool repeatedSubstringPattern(string s) { string doubled = s + s; // \u5c06\u5b57\u7b26\u4e32\u62fc\u63a5 string subString = doubled.substr(1, doubled.size() - 2); // \u53bb\u6389\u9996\u5c3e\u5b57\u7b26 return subString.find(s) != string::npos; // \u68c0\u67e5\u662f\u5426\u5305\u542b\u539f\u5b57\u7b26\u4e32 } };","title":"\u4f18\u5316\u793a\u4f8b\u4ee3\u7801"},{"location":"lesson8/Lesson8%20C%2B%2B/#_19","text":"","title":"\u8bc1\u660e\uff1a\u5b57\u7b26\u4e32\u62fc\u63a5\u540e\u6390\u5934\u53bb\u5c3e\u53ef\u4ee5\u7528\u4e8e\u5224\u65ad\u91cd\u590d\u7684\u5b50\u5b57\u7b26\u4e32"},{"location":"lesson8/Lesson8%20C%2B%2B/#_20","text":"\u524d\u7f00\uff08Prefix\uff09 \uff1a\u4ece\u5b57\u7b26\u4e32\u7684 \u5f00\u5934 \u5f00\u59cb\u7684\u8fde\u7eed\u5b57\u7b26\u5b50\u4e32\u3002\u4f8b\u5982\uff0c\u5b57\u7b26\u4e32 \"abcde\" \u7684\u524d\u7f00\u6709\uff1a \u524d\u7f00 1\uff1a \"a\" \u524d\u7f00 2\uff1a \"ab\" \u524d\u7f00 3\uff1a \"abc\" \u524d\u7f00 4\uff1a \"abcd\" \u524d\u7f00 5\uff1a \"abcde\" \uff08\u6574\u4e2a\u5b57\u7b26\u4e32\u672c\u8eab\u4e5f\u662f\u4e00\u4e2a\u524d\u7f00\uff09 \u540e\u7f00\uff08Suffix\uff09 \uff1a\u4ece\u5b57\u7b26\u4e32\u7684 \u7ed3\u5c3e \u5f00\u59cb\u7684\u8fde\u7eed\u5b57\u7b26\u5b50\u4e32\u3002\u4f8b\u5982\uff0c\u5b57\u7b26\u4e32 \"abcde\" \u7684\u540e\u7f00\u6709\uff1a \u540e\u7f00 1\uff1a \"e\" \u540e\u7f00 2\uff1a \"de\" \u540e\u7f00 3\uff1a \"cde\" \u540e\u7f00 4\uff1a \"bcde\" \u540e\u7f00 5\uff1a \"abcde\" \uff08\u6574\u4e2a\u5b57\u7b26\u4e32\u672c\u8eab\u4e5f\u662f\u4e00\u4e2a\u540e\u7f00\uff09","title":"\u8865\u5145\uff1a\u4ec0\u4e48\u662f\u524d\u7f00\u548c\u540e\u7f00\uff1f"},{"location":"lesson8/Lesson8%20C%2B%2B/#_21","text":"\u4e3a\u4e86\u8bc1\u660e\u7ed9\u5b9a\u5b57\u7b26\u4e32 s \u662f\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\u5145\u5206\u5fc5\u8981\u6027\uff0c\u6211\u4eec\u9700\u8981\u4ece\u4e24\u4e2a\u65b9\u5411\u6765\u8fdb\u884c\u8bc1\u660e\uff1a \u5145\u5206\u6027 \uff1a\u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u4e32 s \u662f\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\uff0c\u90a3\u4e48\u5728\u62fc\u63a5\u540e\u7684\u5b57\u7b26\u4e32 s + s \u4e2d\uff0c\u6390\u5934\u53bb\u5c3e\u540e\uff0c\u4e00\u5b9a\u80fd\u518d\u6b21\u627e\u5230 s \u3002 \u5fc5\u8981\u6027 \uff1a\u5982\u679c\u5728\u6390\u5934\u53bb\u5c3e\u7684 s + s \u4e2d\u627e\u5230\u4e86 s \uff0c\u90a3\u4e48 s \u4e00\u5b9a\u662f\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\u3002","title":"\u5145\u5206\u5fc5\u8981\u6027\u8bc1\u660e"},{"location":"lesson8/Lesson8%20C%2B%2B/#1_1","text":"\u5047\u8bbe \uff1a\u8bbe\u5b57\u7b26\u4e32 s \u662f\u7531\u4e00\u4e2a\u8f83\u77ed\u7684\u5b50\u4e32 p \u91cd\u590d\u591a\u6b21\u6784\u6210\u7684\uff0c\u5373 s = p + p + ... + p \uff08\u5047\u8bbe p \u91cd\u590d k \u6b21\uff09\u3002 \u4e3e\u4f8b \uff1a\u6bd4\u5982 s = \"abab\" \uff0c\u8fd9\u662f\u7531 p = \"ab\" \u91cd\u590d\u4e24\u6b21\u6784\u6210\u7684\u3002 \u62fc\u63a5 s + s \uff1a\u6211\u4eec\u5c06 s \u62fc\u63a5\u5f97\u5230 s + s \uff0c\u4f8b\u5982\uff1a s + s = \"abababab\" \u6390\u5934\u53bb\u5c3e\uff0c\u53bb\u6389\u9996\u5c3e\u5b57\u7b26\uff0c\u5f97\u5230 new_s = (s + s).substr(1, (s+s).length() - 1) \uff0c\u5bf9\u4e8e\u4e0a\u9762\u7684\u4f8b\u5b50\uff1a new_s = \"bababa\" \u5bfb\u627e s \u5728 new_s \u4e2d\u7684\u51fa\u73b0 \uff1a\u7531\u4e8e s \u662f\u7531\u5b50\u4e32 p \u591a\u6b21\u91cd\u590d\uff08\u81f3\u5c11\u4e24\u6b21\uff09\u6784\u6210\u7684\uff0c s + s \u5c31\u4f1a\u91cd\u590d\u81f3\u5c11 4 \u6b21 p \uff0c\u6390\u5934\u53bb\u5c3e\u540e\uff0c\u91cd\u590d\u81f3\u5c11 2 \u6b21 p \uff0c\u524d\u7f00\u548c\u540e\u7f00\u5fc5\u7136\u6709\u91cd\u53e0\uff0c\u4e00\u5b9a\u80fd\u518d\u6b21\u627e\u5230 s \u3002 new_s = \"bababa\" ^^^^ (\u8fd9\u91cc\u627e\u5230 \"abab\") \u5145\u5206\u6027\u8bc1\u6bd5\u3002","title":"1. \u5145\u5206\u6027"},{"location":"lesson8/Lesson8%20C%2B%2B/#2","text":"\u5047\u8bbe \uff1a\u6211\u4eec\u5df2\u7ecf\u5728\u53bb\u6389\u9996\u5c3e\u5b57\u7b26\u7684 s + s \u4e2d\u518d\u6b21\u627e\u5230\u4e86 s \u3002\u73b0\u5728\u6211\u4eec\u9700\u8981\u8bc1\u660e\uff0c s \u4e00\u5b9a\u662f\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\u3002 \u6784\u9020 new_s \uff1a\u9996\u5148\uff0c\u6784\u9020 new_s \uff0c\u5176\u7b49\u4ef7\u64cd\u4f5c\u662f new_s = (s + s).substr(1, (s+s).length() - 1) \u3002\u5047\u8bbe\u5b57\u7b26\u4e32 s \u5728 new_s \u4e2d\u5339\u914d\u7684\u4f4d\u7f6e\u4ece i \u5f00\u59cb\uff0c\u4e5f\u5c31\u662f\u8bf4\u6211\u4eec\u627e\u5230\u4e86\u4e00\u4e2a\u504f\u79fb\u91cf i \uff0c\u4f7f\u5f97 s.substr(i) + s.substr(0, i) \u548c s \u5b8c\u5168\u76f8\u540c\u3002\u8fd9\u610f\u5473\u7740\uff1a s.substr(i) + s.substr(0, i) == s; \u4e5f\u5c31\u662f\u8bf4\uff0c s \u7684\u67d0\u4e2a \u540e\u7f00 \u4e0e\u5b83\u7684\u67d0\u4e2a \u524d\u7f00 \u91cd\u53e0\u5339\u914d\u3002 \u4e3e\u4f8b\u8bf4\u660e \uff1a s + s = \"abababab\" \u53bb\u6389\u9996\u5c3e\u5b57\u7b26\u540e\u5f97\u5230\uff1anew_s = \"bababa\" s \u7684\u524d\u7f00\u6709\uff1a 'a', 'ab', 'aba', 'abab' s \u7684\u540e\u7f00\u6709\uff1a 'b', 'ab', 'bab', 'abab' \u53ef\u4ee5\u53d1\u73b0\uff0c s = \"abab\" \u5728 \"bababa\" \u4e2d\u786e\u5b9e\u518d\u6b21\u51fa\u73b0\uff0c\u4e14\u5339\u914d\u53d1\u751f\u5728\u4ea4\u754c\u5904\uff08\u504f\u79fb\u91cf\u4e3a1\uff09\uff0c\u8fd9\u65f6 s \u7684\u524d\u7f00\u548c\u540e\u7f00\u51fa\u73b0\u4e86\u91cd\u5408\u3002 \u8fd9\u79cd\u73b0\u8c61\u8bf4\u660e s \u7684\u524d\u7f00\u548c\u540e\u7f00\u5b58\u5728\u4ea4\u66ff\u91cd\u53e0\uff0c\u8868\u660e s \u5177\u6709\u5468\u671f\u6027\uff0c\u610f\u5473\u7740 s \u662f\u7531\u4e00\u4e2a\u8f83\u77ed\u7684\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c s \u7684\u524d\u7f00\u548c\u540e\u7f00\u6709\u67d0\u79cd\u91cd\u53e0\uff0c\u5f62\u6210\u4e86\u5468\u671f\u6027\uff0c\u90a3\u4e48 s \u5c31\u53ef\u4ee5\u901a\u8fc7\u91cd\u590d\u67d0\u4e2a\u5b50\u4e32\u6784\u6210\u3002 \u5fc5\u8981\u6027\u8bc1\u6bd5\u3002","title":"2. \u5fc5\u8981\u6027"},{"location":"lesson8/Lesson8%20C%2B%2B/#_22","text":"\u6211\u4eec\u5df2\u7ecf\u8bc1\u660e\u4e86\uff1a \u5145\u5206\u6027 \uff1a\u5982\u679c s \u662f\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\uff0c\u90a3\u4e48\u5728 s + s \u4e2d\u6390\u5934\u53bb\u5c3e\u540e\uff0c\u4e00\u5b9a\u80fd\u591f\u518d\u6b21\u627e\u5230 s \u3002\u8fd9\u662f\u56e0\u4e3a\u91cd\u590d\u5b50\u4e32\u4f1a\u4f7f\u5f97\u524d\u7f00\u548c\u540e\u7f00\u6709\u91cd\u53e0\u3002 \u5fc5\u8981\u6027 \uff1a\u5982\u679c\u5728\u6390\u5934\u53bb\u5c3e\u7684 s + s \u4e2d\u627e\u5230\u4e86 s \uff0c\u90a3\u4e48 s \u4e00\u5b9a\u662f\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\u3002\u8fd9\u662f\u56e0\u4e3a\u53ea\u6709\u5f53 s \u5177\u6709\u5468\u671f\u6027\u65f6\uff0c\u5b83\u7684\u524d\u7f00\u548c\u540e\u7f00\u624d\u4f1a\u4ea4\u66ff\u91cd\u53e0\uff0c\u5f62\u6210\u5339\u914d\u3002 \u56e0\u6b64\uff0c\u62fc\u63a5 s + s \u5e76\u53bb\u6389\u9996\u5c3e\u5b57\u7b26\u540e\u80fd\u5426\u518d\u6b21\u627e\u5230 s \uff0c\u53ef\u4ee5\u7528\u6765\u5224\u65ad s \u662f\u5426\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u3002","title":"\u603b\u7ed3\uff1a"},{"location":"lesson8/Lesson8%20C%2B%2B/#_23","text":"\u5145\u5206\u6027\u53ca\u5fc5\u8981\u6027\u8bc1\u660e Leetcode\u5b98\u65b9\u9898\u89e3\u8bc1\u660e","title":"\u8865\u5145\u6750\u6599\uff1a"},{"location":"lesson8/Lesson8%20C%2B%2B/#lc796","text":"","title":"LC796 \u65cb\u8f6c\u5b57\u7b26\u4e32"},{"location":"lesson8/Lesson8%20C%2B%2B/#_24","text":"\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 s \u548c goal \uff0c\u5982\u679c\u901a\u8fc7\u82e5\u5e72\u6b21\u65cb\u8f6c\u64cd\u4f5c\u4e4b\u540e\uff0c s \u80fd\u53d8\u6210 goal \uff0c\u5219\u8fd4\u56de true \uff0c\u5426\u5219\u8fd4\u56de false \u3002 \u65cb\u8f6c\u64cd\u4f5c\u662f\u5c06\u5b57\u7b26\u4e32\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u79fb\u52a8\u5230\u6700\u540e\u4e00\u4f4d\u3002\u4f8b\u5982\uff0c\u5b57\u7b26\u4e32 \"abcde\" \u7ecf\u8fc7\u4e00\u6b21\u65cb\u8f6c\u53d8\u4e3a \"bcdea\" \u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson8/Lesson8%20C%2B%2B/#_25","text":"\u7406\u89e3\u65cb\u8f6c \uff1a \u65cb\u8f6c\u64cd\u4f5c\u662f\u5c06\u5b57\u7b26\u4e32\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u79fb\u52a8\u5230\u6700\u540e\u4e00\u4f4d\u3002 \u4f8b\u5982\uff0c\u5b57\u7b26\u4e32 \"abcde\" \u7ecf\u8fc7\u4e00\u6b21\u65cb\u8f6c\u53d8\u4e3a \"bcdea\" \uff0c\u518d\u7ecf\u8fc7\u4e00\u6b21\u65cb\u8f6c\u53d8\u4e3a \"cdeab\" \uff0c\u5982\u6b64\u7c7b\u63a8\u3002 \u5b57\u7b26\u4e32\u65cb\u8f6c\u7684\u7279\u6027 \uff1a \u5982\u679c\u5c06\u5b57\u7b26\u4e32 s \u62fc\u63a5\u6210 s + s \uff0c\u8fd9\u4e2a\u65b0\u5b57\u7b26\u4e32\u5c06\u5305\u542b s \u6240\u6709\u53ef\u80fd\u7684\u65cb\u8f6c\u5f62\u5f0f\u3002 \u4f8b\u5982\uff0c s = \"abcde\" \u62fc\u63a5\u540e\u53d8\u4e3a \"abcdeabcde\" \uff0c\u5b83\u5305\u542b\u4e86\u6240\u6709\u65cb\u8f6c\u5f62\u5f0f\uff1a \"abcde\" , \"bcdea\" , \"cdeab\" , \"deabc\" , \"eabcd\" \u3002 \u5224\u65ad goal \u662f\u5426\u662f s + s \u7684\u5b50\u4e32 \uff1a \u6211\u4eec\u53ef\u4ee5\u904d\u5386 s + s \uff0c\u622a\u53d6\u4e0e s \u76f8\u540c\u957f\u5ea6\u7684\u5b50\u4e32\uff0c\u5e76\u68c0\u67e5\u5b83\u662f\u5426\u7b49\u4e8e goal \u3002","title":"\u89e3\u9898\u601d\u8def"},{"location":"lesson8/Lesson8%20C%2B%2B/#_26","text":"class Solution { public: bool rotateString(string s, string goal) { string double_s = s + s; // \u904d\u5386 double_s \u4e2d\u7684\u6bcf\u4e2a\u5b50\u4e32\uff0c\u68c0\u67e5\u662f\u5426\u7b49\u4e8e goal for (int i = 0; i < s.length(); i++) { if (double_s.substr(i, s.length()) == goal) { return true; } } return false; } };","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"lesson8/Lesson8%20C%2B%2B/#_27","text":"double_s = s + s \uff1a\u5c06\u5b57\u7b26\u4e32 s \u81ea\u8eab\u62fc\u63a5\uff0c\u5f62\u6210\u4e00\u4e2a\u65b0\u5b57\u7b26\u4e32 double_s \uff0c\u5176\u957f\u5ea6\u4e3a 2 * s.length() \u3002 \u904d\u5386 double_s \uff1a \u5728 double_s \u4e2d\uff0c\u9010\u4e2a\u63d0\u53d6\u957f\u5ea6\u4e3a s.length() \u7684\u5b50\u4e32\uff0c\u4f7f\u7528 substr(i, s.length()) \u51fd\u6570\u4ece\u7d22\u5f15 i \u5904\u5f00\u59cb\u622a\u53d6\u4e0e s \u76f8\u540c\u957f\u5ea6\u7684\u5b50\u4e32\u3002 \u6bd4\u8f83\u5b50\u4e32\u548c goal \uff1a \u5982\u679c\u67d0\u4e2a\u5b50\u4e32\u7b49\u4e8e goal \uff0c\u5219\u8fd4\u56de true \uff0c\u8868\u793a s \u901a\u8fc7\u65cb\u8f6c\u53ef\u4ee5\u53d8\u4e3a goal \u3002 \u8fd4\u56de false \uff1a \u5982\u679c\u904d\u5386\u5b8c\u6240\u6709\u53ef\u80fd\u7684\u5b50\u4e32\u90fd\u6ca1\u6709\u5339\u914d\uff0c\u5219\u8fd4\u56de false \u3002","title":"\u4ee3\u7801\u8bb2\u89e3"},{"location":"lesson8/Lesson8%20C%2B%2B/#lc28","text":"","title":"LC28 \u67e5\u627e\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5339\u914d\u9879\u7d22\u5f15"},{"location":"lesson8/Lesson8%20C%2B%2B/#_28","text":"\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 haystack \u548c needle \uff0c\u4f60\u9700\u8981\u5728 haystack \u5b57\u7b26\u4e32\u4e2d\u627e\u51fa needle \u5b57\u7b26\u4e32\u51fa\u73b0\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\uff08\u4ece 0 \u5f00\u59cb\uff09\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de -1 \u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson8/Lesson8%20C%2B%2B/#_29","text":"\u5982\u679c needle \u4e3a\u7a7a\u5b57\u7b26\u4e32\uff0c\u76f4\u63a5\u8fd4\u56de 0 \u3002 \u904d\u5386 haystack \uff0c\u4ece\u6bcf\u4e2a\u7d22\u5f15\u4f4d\u7f6e\u68c0\u67e5\u662f\u5426\u4e0e needle \u5339\u914d\u3002 \u5982\u679c\u5339\u914d\u6210\u529f\uff0c\u8fd4\u56de\u8be5\u7d22\u5f15\uff0c\u5426\u5219\u7ee7\u7eed\u904d\u5386\u3002 \u5982\u679c\u904d\u5386\u7ed3\u675f\u540e\u672a\u627e\u5230\uff0c\u8fd4\u56de -1 \u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson8/Lesson8%20C%2B%2B/#_30","text":"class Solution { public: int strStr(string haystack, string needle) { // \u5982\u679c needle \u4e3a\u7a7a\u5b57\u7b26\u4e32\uff0c\u76f4\u63a5\u8fd4\u56de 0 if (needle.empty()) { return 0; } // \u83b7\u53d6\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6 int n = haystack.length(); int m = needle.length(); // \u904d\u5386 haystack\uff0c\u76f4\u5230\u5269\u4f59\u7684\u90e8\u5206\u957f\u5ea6\u5c0f\u4e8e needle \u957f\u5ea6 for (int i = 0; i <= n - m; i++) { // \u6bd4\u8f83\u4ece i \u5f00\u59cb\u7684\u5b50\u4e32\u662f\u5426\u7b49\u4e8e needle if (haystack.substr(i, m) == needle) { return i; } } // \u5982\u679c\u904d\u5386\u7ed3\u675f\u540e\u6ca1\u6709\u627e\u5230\uff0c\u8fd4\u56de -1 return -1; } };","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson8/Lesson8%20C%2B%2B/#2_1","text":"\u5b57\u7b26\u4e32\u6570\u5b66\u6a21\u62df\u7684\u57fa\u672c\u89e3\u9898\u601d\u8def\u4e3b\u8981\u6d89\u53ca\u5982\u4f55\u901a\u8fc7\u9010\u6b65\u64cd\u4f5c\u548c\u7b80\u5355\u7684\u6570\u5b66\u8fd0\u7b97\uff0c\u5904\u7406\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u6570\u5b57\u8ba1\u7b97\u3002","title":"2. \u5b57\u7b26\u4e32\u6570\u5b66\u8fd0\u7b97"},{"location":"lesson8/Lesson8%20C%2B%2B/#_31","text":"\u5b57\u7b26\u8f6c\u6570\u5b57 \uff1a \u5b57\u7b26\u4e32\u4e2d\u7684\u6570\u5b57\u662f\u4ee5\u5b57\u7b26\u7684\u5f62\u5f0f\u5b58\u5728\u7684\uff0c\u4f8b\u5982\u5b57\u7b26 '0' \u5230 '9' \u3002 \u53ef\u4ee5\u901a\u8fc7 char - '0' \u5c06\u5b57\u7b26\u8f6c\u4e3a\u5bf9\u5e94\u7684\u6570\u5b57\u3002\u4f8b\u5982\uff0c '5' - '0' \u7684\u7ed3\u679c\u4e3a 5 \u3002 \u8fdb\u4f4d\u5904\u7406 \uff1a \u5728\u8fdb\u884c\u52a0\u6cd5\u8fd0\u7b97\u65f6\uff0c\u5982\u679c\u67d0\u4e00\u4f4d\u7684\u548c\u5927\u4e8e\u6216\u7b49\u4e8e 10 \uff0c\u5219\u9700\u8981\u5904\u7406\u8fdb\u4f4d\uff08carry\uff09\uff0c\u5c06 1 \u52a0\u5230\u4e0b\u4e00\u4f4d\u7684\u8ba1\u7b97\u4e2d\u3002 \u8fdb\u4f4d\u7684\u8ba1\u7b97\u53ef\u4ee5\u901a\u8fc7 carry = sum / 10 \u6765\u5b9e\u73b0\uff0c\u800c\u5f53\u524d\u4f4d\u7684\u7ed3\u679c\u5219\u662f sum % 10 \u3002 \u9006\u5e8f\u8ba1\u7b97 \uff1a \u7531\u4e8e\u52a0\u6cd5\u4ece\u4e2a\u4f4d\u5f00\u59cb\u8fdb\u884c\uff0c\u56e0\u6b64\u6211\u4eec\u901a\u5e38\u4ece\u5b57\u7b26\u4e32\u7684\u53f3\u8fb9\u5f00\u59cb\u52a0\u6cd5\uff0c\u9010\u4f4d\u5411\u5de6\u3002 \u4e3a\u4e86\u5904\u7406\u8fdb\u4f4d\u4ee5\u53ca\u6784\u9020\u7ed3\u679c\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u5bb9\u5668\uff08\u5982 string \u6216 vector \uff09\u5b58\u50a8\u8ba1\u7b97\u7ed3\u679c\uff0c\u6700\u540e\u5c06\u5176\u9006\u5e8f\u6392\u5217\u4ee5\u5f97\u5230\u6b63\u786e\u7684\u7b54\u6848\u3002","title":"\u57fa\u672c\u6982\u5ff5"},{"location":"lesson8/Lesson8%20C%2B%2B/#_32","text":"","title":"\u4f8b\u9898\u8bb2\u89e3"},{"location":"lesson8/Lesson8%20C%2B%2B/#lc415","text":"","title":"LC415 \u5b57\u7b26\u4e32\u76f8\u52a0"},{"location":"lesson8/Lesson8%20C%2B%2B/#_33","text":"\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u975e\u8d1f\u6574\u6570 num1 \u548c num2 \uff0c\u8ba1\u7b97\u5b83\u4eec\u7684\u548c\uff0c\u5e76\u8fd4\u56de\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u7ed3\u679c\u3002\u4f60\u4e0d\u80fd\u4f7f\u7528\u4efb\u4f55\u5185\u5efa\u7684\u5927\u6574\u6570\u5e93\uff08\u5982 BigInteger \uff09\uff0c\u4e5f\u4e0d\u80fd\u76f4\u63a5\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6574\u6570\u5f62\u5f0f\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"lesson8/Lesson8%20C%2B%2B/#_34","text":"\u8981\u8ba1\u7b97\u4e24\u4e2a\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u975e\u8d1f\u6574\u6570 num1 \u548c num2 \u7684\u548c\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c\u4e3a\u5b57\u7b26\u4e32\u5f62\u5f0f\uff0c\u6211\u4eec\u9700\u8981\u624b\u52a8\u6a21\u62df\u52a0\u6cd5\u7684\u8fc7\u7a0b\uff0c\u7c7b\u4f3c\u4e8e\u5728\u7eb8\u4e0a\u8fdb\u884c\u52a0\u6cd5\u8ba1\u7b97\u3002\u4e0b\u9762\u662f\u8be6\u7ec6\u7684\u89e3\u9898\u601d\u8def\u548c\u6b65\u9aa4\u3002","title":"\u9898\u76ee\u5206\u6790"},{"location":"lesson8/Lesson8%20C%2B%2B/#_35","text":"\u4ece\u53f3\u5411\u5de6\u904d\u5386 \uff1a \u7531\u4e8e\u52a0\u6cd5\u662f\u4ece\u4e2a\u4f4d\u5f00\u59cb\u7684\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4ece\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u53f3\u7aef\u9010\u4f4d\u8fdb\u884c\u52a0\u6cd5\u3002 \u9010\u4f4d\u76f8\u52a0 \uff1a \u5bf9\u4e8e num1 \u548c num2 \u4e2d\u7684\u6bcf\u4e00\u4f4d\uff0c\u5148\u5c06\u5b57\u7b26\u8f6c\u5316\u4e3a\u6570\u5b57\u8fdb\u884c\u52a0\u6cd5\u64cd\u4f5c\u3002\u6bcf\u4f4d\u52a0\u6cd5\u64cd\u4f5c\u8fd8\u9700\u8981\u8003\u8651\u8fdb\u4f4d\uff08carry\uff09\u7684\u5f71\u54cd\u3002 \u5904\u7406\u4e0d\u540c\u957f\u5ea6\u7684\u5b57\u7b26\u4e32 \uff1a \u5982\u679c\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e0d\u540c\uff0c\u5728\u904d\u5386\u65f6\u5904\u7406\u8f83\u77ed\u5b57\u7b26\u4e32\u65f6\uff0c\u5c06\u7f3a\u5931\u4f4d\u9ed8\u8ba4\u4e3a 0\u3002 \u5904\u7406\u6700\u540e\u7684\u8fdb\u4f4d \uff1a \u5982\u679c\u904d\u5386\u7ed3\u675f\u540e\u8fdb\u4f4d\u4e0d\u4e3a 0\uff0c\u9700\u8981\u5c06\u8fdb\u4f4d\u52a0\u5230\u6700\u7ec8\u7ed3\u679c\u4e2d\u3002 \u7ed3\u679c\u62fc\u63a5\u4e0e\u53cd\u8f6c \uff1a \u56e0\u4e3a\u6211\u4eec\u662f\u4ece\u53f3\u5411\u5de6\u8fdb\u884c\u8ba1\u7b97\uff0c\u6700\u540e\u9700\u8981\u5c06\u7ed3\u679c\u53cd\u8f6c\u540e\u8fd4\u56de\u3002","title":"\u89e3\u9898\u601d\u8def"},{"location":"lesson8/Lesson8%20C%2B%2B/#_36","text":"class Solution { public: string addStrings(string num1, string num2) { int num1_index = num1.length() - 1; int num2_index = num2.length() - 1; string result = \"\"; int carry = 0; // \u4ece\u53f3\u5230\u5de6\u9010\u4f4d\u76f8\u52a0 while (num1_index >= 0 || num2_index >= 0) { int total = carry; carry = 0; // \u52a0\u4e0a num1 \u7684\u5f53\u524d\u4f4d if (num1_index >= 0) { total += num1[num1_index] - '0'; num1_index--; } // \u52a0\u4e0a num2 \u7684\u5f53\u524d\u4f4d if (num2_index >= 0) { total += num2[num2_index] - '0'; num2_index--; } // \u5224\u65ad\u662f\u5426\u6709\u8fdb\u4f4d if (total >= 10) { carry = 1; } // \u5f53\u524d\u4f4d\u7ed3\u679c\u6dfb\u52a0\u5230\u5b57\u7b26\u4e32 result.push_back(total % 10 + '0'); } // \u5982\u679c\u6700\u540e\u8fd8\u6709\u8fdb\u4f4d\uff0c\u6dfb\u52a0\u5230\u7ed3\u679c\u4e2d if (carry == 1) { result.push_back(carry + '0'); } // \u7ed3\u679c\u662f\u53cd\u5411\u62fc\u63a5\u7684\uff0c\u9700\u8981\u53cd\u8f6c reverse(result.begin(), result.end()); return result; } };","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson8/Lesson8%20C%2B%2B/#_37","text":"num1_index \u548c num2_index \uff1a\u7528\u6765\u8ffd\u8e2a\u4e24\u4e2a\u5b57\u7b26\u4e32 num1 \u548c num2 \u7684\u5f53\u524d\u4f4d\u3002\u5b83\u4eec\u4ece\u5b57\u7b26\u4e32\u7684\u6700\u540e\u4e00\u4f4d\u5f00\u59cb\uff0c\u9010\u6e10\u5411\u524d\u79fb\u52a8\u3002 carry \uff1a\u7528\u4e8e\u5904\u7406\u8fdb\u4f4d\u3002\u5f53\u67d0\u4e00\u4f4d\u76f8\u52a0\u7684\u7ed3\u679c\u5927\u4e8e\u7b49\u4e8e 10 \u65f6\uff0c carry \u8bbe\u7f6e\u4e3a 1\u3002 while (num1_index >= 0 || num2_index >= 0) \uff1a\u5faa\u73af\u904d\u5386\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u6bcf\u4e00\u4f4d\uff0c\u76f4\u5230\u6240\u6709\u4f4d\u90fd\u88ab\u5904\u7406\u5b8c\u3002 result.push_back(total % 10 + '0') \uff1a\u5c06\u5f53\u524d\u4f4d\u7684\u8ba1\u7b97\u7ed3\u679c\u6dfb\u52a0\u5230\u7ed3\u679c\u5b57\u7b26\u4e32\u4e2d\u3002 \u53cd\u8f6c\u7ed3\u679c \uff1a\u7531\u4e8e\u7ed3\u679c\u5b57\u7b26\u4e32\u662f\u4ece\u4f4e\u4f4d\u5230\u9ad8\u4f4d\u751f\u6210\u7684\uff0c\u6240\u4ee5\u6700\u540e\u8981\u4f7f\u7528 reverse \u5c06\u5176\u53cd\u8f6c\u3002","title":"\u4ee3\u7801\u8bb2\u89e3"},{"location":"lesson8/Lesson8%20C%2B%2B/#lc7","text":"","title":"LC7 \u6574\u6570\u53cd\u8f6c"},{"location":"lesson8/Lesson8%20C%2B%2B/#_38","text":"\u7ed9\u5b9a\u4e00\u4e2a 32 \u4f4d\u6709\u7b26\u53f7\u6574\u6570 x \uff0c\u8fd4\u56de\u5176\u6570\u5b57\u90e8\u5206\u53cd\u8f6c\u540e\u7684\u7ed3\u679c\u3002\u5982\u679c\u53cd\u8f6c\u540e\u7684\u6574\u6570\u6ea2\u51fa\uff08\u8d85\u51fa 32 \u4f4d\u6574\u6570\u8303\u56f4 [-2^31, 2^31 - 1] \uff09\uff0c\u5219\u8fd4\u56de 0 \u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"lesson8/Lesson8%20C%2B%2B/#_39","text":"\u5904\u7406\u6570\u5b57\u7684\u6bcf\u4e00\u4f4d \uff1a \u6211\u4eec\u4ece\u6574\u6570 x \u7684\u6700\u540e\u4e00\u4f4d\u5f00\u59cb\u9010\u4f4d\u63d0\u53d6\u6570\u5b57\uff0c\u5e76\u5c06\u5176\u52a0\u5165\u5230\u53cd\u8f6c\u540e\u7684\u7ed3\u679c\u4e2d\u3002\u901a\u8fc7 x % 10 \u83b7\u53d6\u5f53\u524d\u7684\u6700\u540e\u4e00\u4f4d\uff0c\u5e76\u4f7f\u7528 x / 10 \u79fb\u9664\u6700\u540e\u4e00\u4f4d\u3002 \u53cd\u8f6c\u6784\u5efa \uff1a \u6bcf\u6b21\u63d0\u53d6\u4e00\u4f4d\u6570\u5b57\u540e\uff0c\u5c06\u5176\u52a0\u5230\u7ed3\u679c\u7684\u672b\u5c3e\uff0c\u5373\u5c06\u5f53\u524d\u7684 result \u4e58\u4ee5 10 \u5e76\u52a0\u4e0a\u63d0\u53d6\u7684\u6570\u5b57\uff0c\u4ece\u800c\u9010\u6b65\u6784\u5efa\u53cd\u8f6c\u540e\u7684\u7ed3\u679c\u3002 \u6ea2\u51fa\u68c0\u67e5 \uff1a \u5728\u6bcf\u6b21\u5c06\u6570\u5b57\u52a0\u5165 result \u4e4b\u524d\uff0c\u9700\u8981\u68c0\u67e5 result \u662f\u5426\u4f1a\u8d85\u8fc7 32 \u4f4d\u6574\u6570\u7684\u6700\u5927\u6216\u6700\u5c0f\u8303\u56f4\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5982\u679c result \u5927\u4e8e INT_MAX / 10 \u6216 result \u7b49\u4e8e INT_MAX / 10 \u4e14\u5f53\u524d\u6570\u5b57\u5927\u4e8e 7\uff0c\u5219\u7ed3\u679c\u4f1a\u6ea2\u51fa\uff0c\u76f4\u63a5\u8fd4\u56de 0\u3002\u540c\u6837\u7684\u89c4\u5219\u9002\u7528\u4e8e\u6700\u5c0f\u503c INT_MIN \u3002 \u8fd4\u56de\u7ed3\u679c \uff1a \u5f53\u6240\u6709\u7684\u4f4d\u90fd\u5904\u7406\u5b8c\u6bd5\u540e\uff0c\u8fd4\u56de\u53cd\u8f6c\u540e\u7684 result \u3002\u5982\u679c x \u539f\u672c\u662f\u8d1f\u6570\uff0c\u53cd\u8f6c\u540e\u7ed3\u679c\u4ecd\u7136\u662f\u8d1f\u6570\u3002\u5982\u679c\u6709\u6ea2\u51fa\uff0c\u5219\u8fd4\u56de 0\u3002","title":"\u89e3\u9898\u601d\u8def"},{"location":"lesson8/Lesson8%20C%2B%2B/#_40","text":"INT_MAX = 2147483647 \uff0c\u6700\u540e\u4e00\u4f4d\u662f 7\u3002 INT_MIN = -2147483648 \uff0c\u6700\u540e\u4e00\u4f4d\u662f -8\u3002","title":"\u6ea2\u51fa\u6761\u4ef6\u8bf4\u660e"},{"location":"lesson8/Lesson8%20C%2B%2B/#_41","text":"class Solution { public: int reverse(int x) { int result = 0; while (x != 0) { int digit = x % 10; // \u68c0\u67e5\u662f\u5426\u4f1a\u6ea2\u51fa\uff1a\u5982\u679c result \u8d85\u8fc7\u4e86\u8fb9\u754c\uff0c\u8fd4\u56de 0 if (result > INT_MAX / 10 || (result == INT_MAX / 10 && digit > 7)) { return 0; } if (result < INT_MIN / 10 || (result == INT_MIN / 10 && digit < -8)) { return 0; } // \u6784\u5efa\u53cd\u8f6c\u540e\u7684\u7ed3\u679c result = result * 10 + digit; // \u79fb\u9664 x \u7684\u6700\u540e\u4e00\u4f4d x /= 10; } return result; } };","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson8/Lesson8%20C%2B%2B/#_42","text":"while (x != 0) \uff1a\u8fd9\u4e2a\u5faa\u73af\u4f1a\u5904\u7406\u8f93\u5165\u6574\u6570 x \u7684\u6bcf\u4e00\u4f4d\u6570\u5b57\uff0c\u76f4\u5230 x \u53d8\u4e3a 0 \u4e3a\u6b62\u3002\u6bcf\u6b21\u5faa\u73af\uff0c\u90fd\u4f1a\u63d0\u53d6 x \u7684\u6700\u540e\u4e00\u4f4d\u6570\u5b57\u5e76\u5c06\u5176\u6dfb\u52a0\u5230\u7ed3\u679c\u4e2d\u3002 \u6ea2\u51fa\u68c0\u67e5 \uff1a\u5728\u66f4\u65b0 result \u4e4b\u524d\uff0c\u68c0\u67e5\u662f\u5426\u53ef\u80fd\u53d1\u751f\u6ea2\u51fa\u3002\u5177\u4f53\u662f\u901a\u8fc7\u6bd4\u8f83 result \u548c INT_MAX / 10 \u6216 INT_MIN / 10 \u6765\u5224\u65ad\u3002\u5982\u679c result \u8d85\u8fc7\u4e86 32 \u4f4d\u6574\u6570\u7684\u8303\u56f4 (\u5373\u5927\u4e8e INT_MAX \u6216\u5c0f\u4e8e INT_MIN )\uff0c\u5219\u8fd4\u56de 0 \u4ee5\u907f\u514d\u6ea2\u51fa\u3002 digit = x % 10 \uff1a\u8fd9\u4e00\u884c\u4ee3\u7801\u4ece x \u4e2d\u63d0\u53d6\u6700\u540e\u4e00\u4f4d\u6570\u5b57\uff08\u4e2a\u4f4d\u6570\uff09\u3002\u4f8b\u5982\uff0c\u5982\u679c x = 123 \uff0c digit \u4f1a\u7b49\u4e8e 3 \u3002 result = result * 10 + digit \uff1a\u8fd9\u4e00\u6b65\u7528\u4e8e\u6784\u5efa\u53cd\u8f6c\u540e\u7684\u7ed3\u679c\uff0c\u5c06\u4e4b\u524d\u7684 result \u4e58\u4ee5 10 \u5e76\u52a0\u4e0a\u63d0\u53d6\u7684 digit \uff0c\u76f8\u5f53\u4e8e\u5c06\u65b0\u7684\u6570\u5b57\u8ffd\u52a0\u5230\u7ed3\u679c\u7684\u672b\u5c3e\u3002 x /= 10 \uff1a\u901a\u8fc7\u5c06 x \u9664\u4ee5 10 \u6765\u79fb\u9664\u6700\u540e\u4e00\u4f4d\u6570\u5b57\uff0c\u51c6\u5907\u5904\u7406\u4e0b\u4e00\u4e2a\u6570\u5b57\u3002\u8fd9\u6837\u4e0b\u4e00\u6b21\u5faa\u73af\u5c31\u4f1a\u5904\u7406\u5269\u4f59\u7684\u6570\u5b57\u3002","title":"\u4ee3\u7801\u8bb2\u89e3"},{"location":"lesson8/Lesson8%20C%2B%2B/#_43","text":"","title":"\u4e3e\u4e00\u53cd\u4e09"},{"location":"lesson8/Lesson8%20C%2B%2B/#lc67","text":"","title":"LC67 \u4e8c\u8fdb\u5236\u6c42\u548c"},{"location":"lesson8/Lesson8%20C%2B%2B/#_44","text":"\u7ed9\u5b9a\u4e24\u4e2a\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32 a \u548c b \uff0c\u8fd4\u56de\u5b83\u4eec\u7684\u548c\uff08\u4ee5\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\uff09\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"lesson8/Lesson8%20C%2B%2B/#_45","text":"\u4ece\u53f3\u5230\u5de6\u904d\u5386 \uff1a \u7531\u4e8e\u4e8c\u8fdb\u5236\u52a0\u6cd5\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4ece\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u53f3\u7aef\u9010\u4f4d\u8fdb\u884c\u76f8\u52a0\u3002 \u9010\u4f4d\u76f8\u52a0\u5e76\u5904\u7406\u8fdb\u4f4d \uff1a \u4f7f\u7528\u4e24\u4e2a\u6307\u9488\u5206\u522b\u6307\u5411\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u6700\u540e\u4e00\u4f4d\uff0c\u6bcf\u4e00\u4f4d\u76f8\u52a0\u65f6\u8fd8\u9700\u8981\u8003\u8651\u8fdb\u4f4d\uff08carry\uff09\u3002 \u5904\u7406\u4e0d\u540c\u957f\u5ea6\u7684\u5b57\u7b26\u4e32 \uff1a \u5982\u679c\u4e24\u4e2a\u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u540c\uff0c\u8f83\u77ed\u7684\u5b57\u7b26\u4e32\u53ef\u80fd\u5728\u67d0\u4e9b\u4f4d\u7f6e\u7f3a\u5931\uff0c\u9700\u8981\u5728\u5904\u7406\u65f6\u5c06\u8fd9\u4e9b\u4f4d\u7f6e\u7684\u503c\u89c6\u4e3a 0 \u3002 \u5904\u7406\u6700\u540e\u7684\u8fdb\u4f4d \uff1a \u5982\u679c\u904d\u5386\u7ed3\u675f\u65f6\u4ecd\u6709\u8fdb\u4f4d\uff0c\u5219\u9700\u8981\u5c06\u8fdb\u4f4d\u6dfb\u52a0\u5230\u7ed3\u679c\u4e2d\u3002 \u62fc\u63a5\u548c\u53cd\u8f6c\u7ed3\u679c \uff1a \u56e0\u4e3a\u52a0\u6cd5\u662f\u4ece\u53f3\u5411\u5de6\u8fdb\u884c\u7684\uff0c\u56e0\u6b64\u6700\u7ec8\u7ed3\u679c\u9700\u8981\u53cd\u8f6c\u3002","title":"\u89e3\u9898\u601d\u8def"},{"location":"lesson8/Lesson8%20C%2B%2B/#_46","text":"class Solution { public: string addBinary(string a, string b) { int a_index = a.length() - 1; int b_index = b.length() - 1; int sum = 0; int carry = 0; string result = \"\"; // \u4ece\u53f3\u5411\u5de6\u9010\u4f4d\u76f8\u52a0 while (a_index >= 0 || b_index >= 0) { sum = carry; // \u521d\u59cb\u5316 sum \u4e3a carry carry = 0; // \u91cd\u7f6e carry // \u53d6 a \u7684\u5f53\u524d\u4f4d if (a_index >= 0) { sum += a[a_index] - '0'; a_index--; } // \u53d6 b \u7684\u5f53\u524d\u4f4d if (b_index >= 0) { sum += b[b_index] - '0'; b_index--; } // \u8ba1\u7b97\u662f\u5426\u9700\u8981\u8fdb\u4f4d if (sum >= 2) { carry = 1; } // \u5f53\u524d\u4f4d\u7684\u7ed3\u679c\u6dfb\u52a0\u5230\u5b57\u7b26\u4e32 result.push_back(sum % 2 + '0'); } // \u5982\u679c\u6709\u5269\u4f59\u7684\u8fdb\u4f4d\uff0c\u6dfb\u52a0\u5230\u7ed3\u679c\u4e2d if (carry == 1) { result.push_back(carry + '0'); } // \u7ed3\u679c\u662f\u4ece\u53f3\u5230\u5de6\u6784\u5efa\u7684\uff0c\u6700\u540e\u9700\u8981\u53cd\u8f6c reverse(result.begin(), result.end()); return result; } };","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson8/Lesson8%20C%2B%2B/#_47","text":"while (a_index >= 0 || b_index >= 0) \uff1a\u4f7f\u7528\u4e24\u4e2a\u6307\u9488\u4ece\u53f3\u5411\u5de6\u904d\u5386\u5b57\u7b26\u4e32 a \u548c b \u3002\u53ea\u8981\u6709\u4e00\u4e2a\u5b57\u7b26\u4e32\u672a\u904d\u5386\u5b8c\uff0c\u6216\u8005\u8fd8\u6709\u8fdb\u4f4d\uff0c\u5c31\u7ee7\u7eed\u5faa\u73af\u3002 \u5904\u7406\u5f53\u524d\u4f4d\u7684\u76f8\u52a0 \uff1a \u5982\u679c a \u8fd8\u6709\u672a\u5904\u7406\u7684\u4f4d\uff0c\u5c31\u5c06\u8be5\u4f4d\u7684\u503c\u52a0\u5230 sum \u4e2d\u3002\u540c\u6837\u7684\u64cd\u4f5c\u9002\u7528\u4e8e b \u3002 \u5904\u7406\u6bcf\u4e00\u4f4d\u65f6\uff0c\u68c0\u67e5\u662f\u5426\u9700\u8981\u8fdb\u4f4d\uff08 sum >= 2 \uff09\uff0c\u5982\u679c\u9700\u8981\uff0c\u5219\u5c06 carry \u8bbe\u7f6e\u4e3a 1 \u3002 \u5904\u7406\u8fdb\u4f4d \uff1a \u5728\u6bcf\u6b21\u76f8\u52a0\u540e\uff0c\u66f4\u65b0 carry \u5e76\u5c06\u7ed3\u679c\u7684\u5f53\u524d\u4f4d\uff08 sum % 2 \uff09\u6dfb\u52a0\u5230\u7ed3\u679c\u5b57\u7b26\u4e32\u4e2d\u3002 \u6700\u540e\u7684\u8fdb\u4f4d\u5904\u7406 \uff1a \u5982\u679c\u6240\u6709\u4f4d\u5904\u7406\u5b8c\u6bd5\u540e\u4ecd\u6709\u8fdb\u4f4d\uff08 carry == 1 \uff09\uff0c\u5219\u5c06 1 \u6dfb\u52a0\u5230\u7ed3\u679c\u5b57\u7b26\u4e32\u4e2d\u3002 \u53cd\u8f6c\u7ed3\u679c \uff1a \u56e0\u4e3a\u52a0\u6cd5\u662f\u4ece\u53f3\u5411\u5de6\u8fdb\u884c\u7684\uff0c\u6240\u4ee5\u7ed3\u679c\u9700\u8981\u5728\u6700\u540e\u8fdb\u884c\u53cd\u8f6c\u3002","title":"\u4ee3\u7801\u8bb2\u89e3"},{"location":"lesson8/Lesson8%20C%2B%2B/#lc989","text":"","title":"LC989 \u6570\u7ec4\u5f62\u5f0f\u7684\u6574\u6570\u52a0\u6cd5"},{"location":"lesson8/Lesson8%20C%2B%2B/#_48","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u7684\u6570\u7ec4\u5f62\u5f0f num \u548c\u4e00\u4e2a\u6574\u6570 k \uff0c\u5c06\u8fd9\u4e24\u4e2a\u6570\u76f8\u52a0\u5e76\u8fd4\u56de\u5b83\u4eec\u7684\u548c\uff0c\u7ed3\u679c\u4ee5\u6570\u7ec4\u5f62\u5f0f\u8fd4\u56de\u3002 num \u662f\u4ece\u5de6\u5230\u53f3\u6309\u4f4d\u6392\u5217\u7684\u6574\u6570\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"lesson8/Lesson8%20C%2B%2B/#_49","text":"\u4ece\u53f3\u5230\u5de6\u8fdb\u884c\u52a0\u6cd5 \uff1a \u4ece\u6570\u7ec4 num \u7684\u6700\u540e\u4e00\u4f4d\uff08\u6700\u4f4e\u4f4d\uff09\u5f00\u59cb\uff0c\u4e0e k \u7684\u5bf9\u5e94\u4f4d\u76f8\u52a0\u3002 \u5904\u7406\u8fdb\u4f4d \uff1a \u6bcf\u6b21\u76f8\u52a0\u53ef\u80fd\u4ea7\u751f\u8fdb\u4f4d\uff0c\u8fdb\u4f4d\u4f1a\u5f71\u54cd\u4e0b\u4e00\u6b21\u7684\u8ba1\u7b97\u3002 \u904d\u5386\u7ed3\u675f\u540e\u5904\u7406\u5269\u4f59\u8fdb\u4f4d \uff1a \u5982\u679c\u904d\u5386 num \u5b8c\u6bd5\uff0c k \u8fd8\u6709\u672a\u5904\u7406\u7684\u4f4d\uff0c\u6216\u8005\u6700\u540e\u4e00\u6b21\u76f8\u52a0\u4ea7\u751f\u8fdb\u4f4d\uff0c\u9700\u8981\u5c06\u8fd9\u4e9b\u5269\u4f59\u4f4d\u5904\u7406\u5b8c\u3002 \u7ed3\u679c\u6784\u5efa \uff1a \u56e0\u4e3a\u52a0\u6cd5\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\uff0c\u6240\u4ee5\u6211\u4eec\u5c06\u8ba1\u7b97\u7ed3\u679c\u5b58\u5165\u4e00\u4e2a\u5411\u91cf output \uff0c\u6700\u540e\u53cd\u8f6c\u8be5\u5411\u91cf\u5f97\u5230\u6b63\u786e\u7684\u987a\u5e8f\u3002","title":"\u89e3\u9898\u601d\u8def"},{"location":"lesson8/Lesson8%20C%2B%2B/#_50","text":"#include <vector> #include <algorithm> using namespace std; class Solution { public: vector<int> addToArrayForm(vector<int>& num, int k) { int num_index = num.size() - 1; vector<int> output; int carry = 0; // \u4ece\u6570\u7ec4\u6700\u540e\u4e00\u4f4d\u548ck\u7684\u672b\u4f4d\u5f00\u59cb\u9010\u4f4d\u76f8\u52a0 while (num_index >= 0 || k > 0) { int total = carry; // \u521d\u59cb\u5316 total \u4e3a carry carry = 0; // \u91cd\u7f6e carry // \u5904\u7406 num \u7684\u5f53\u524d\u4f4d if (num_index >= 0) { total += num[num_index]; num_index--; } // \u5904\u7406 k \u7684\u5f53\u524d\u4f4d if (k > 0) { total += k % 10; k /= 10; } // \u5224\u65ad\u662f\u5426\u6709\u8fdb\u4f4d if (total >= 10) { carry = 1; } // \u5c06\u5f53\u524d\u4f4d\u7ed3\u679c\u6dfb\u52a0\u5230\u8f93\u51fa output.push_back(total % 10); } // \u5982\u679c\u6709\u5269\u4f59\u7684\u8fdb\u4f4d if (carry == 1) { output.push_back(carry); } // \u7531\u4e8e\u6211\u4eec\u662f\u4ece\u4f4e\u4f4d\u5f00\u59cb\u6784\u5efa\u7ed3\u679c\uff0c\u6700\u7ec8\u9700\u8981\u53cd\u8f6c reverse(output.begin(), output.end()); return output; } };","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson8/Lesson8%20C%2B%2B/#_51","text":"while (num_index >= 0 || k > 0) \uff1a\u4ece\u6570\u7ec4 num \u548c\u6574\u6570 k \u7684\u672b\u4f4d\u5f00\u59cb\uff0c\u9010\u4f4d\u76f8\u52a0\uff0c\u76f4\u5230\u5904\u7406\u5b8c\u6240\u6709\u4f4d\u3002 \u5904\u7406 num \u548c k \u5f53\u524d\u4f4d \uff1a \u5bf9\u4e8e\u6570\u7ec4 num \u7684\u5f53\u524d\u4f4d\uff0c\u5c06\u5176\u4e0e k \u7684\u5f53\u524d\u4f4d\u76f8\u52a0\u3002\u5982\u679c num \u6216 k \u5df2\u7ecf\u6ca1\u6709\u5269\u4f59\u4f4d\uff0c\u5219\u5c06\u5176\u89c6\u4e3a 0\u3002 \u8fdb\u4f4d\u5904\u7406 \uff1a \u5982\u679c\u76f8\u52a0\u7684\u603b\u548c total \u5927\u4e8e\u7b49\u4e8e 10\uff0c\u5219\u9700\u8981\u5c06 carry \u7f6e\u4e3a 1\uff0c\u5e76\u4e14\u5728\u4e0b\u6b21\u5faa\u73af\u4e2d\u8003\u8651\u8fdb\u4f4d\u3002 \u5c06\u7ed3\u679c\u6dfb\u52a0\u5230 output \uff1a \u6bcf\u6b21\u76f8\u52a0\u7684\u7ed3\u679c\u5b58\u50a8\u5728 output \u4e2d\uff0c\u7531\u4e8e\u6211\u4eec\u4ece\u4f4e\u4f4d\u5f00\u59cb\u76f8\u52a0\uff0c\u56e0\u6b64\u7ed3\u679c\u9700\u8981\u5728\u6700\u540e\u8fdb\u884c\u53cd\u8f6c\u3002","title":"\u4ee3\u7801\u8bb2\u89e3"},{"location":"lesson8/Lesson8%20C%2B%2B/#_52","text":"","title":"\u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson8/Lesson8%20C%2B%2B/#_53","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC 1002 \u627e\u5230\u5171\u540c\u5b57\u7b26 \u627e\u5230\u7ed9\u5b9a\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\u6240\u6709\u5b57\u7b26\u4e32\u7684\u5171\u540c\u5b57\u7b26\u3002 LC 541 \u53cd\u8f6c\u5b57\u7b26\u4e32 II \u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u6307\u5b9a\u90e8\u5206\uff0c\u6bcf\u9694\u4e00\u4e2a\u6307\u5b9a\u957f\u5ea6\u53cd\u8f6c\u4e00\u6b21\u3002 LC 771 \u73e0\u5b9d\u4e0e\u77f3\u5934 \u8ba1\u7b97\u5728\u77f3\u5934\u4e2d\u6709\u591a\u5c11\u4e2a\u73e0\u5b9d\u5b57\u7b26\u3002 LC 844 \u56de\u9000\u5b57\u7b26\u4e32\u6bd4\u8f83 \u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u8003\u8651\u5230\u56de\u9000\u5b57\u7b26\uff08\u2018#\u2019\uff09\u7684\u5f71\u54cd\u3002 LC 925 \u957f\u6309\u952e\u5165\u7684\u540d\u5b57 \u68c0\u67e5\u4e00\u4e2a\u540d\u5b57\u662f\u5426\u53ef\u4ee5\u901a\u8fc7\u957f\u6309\u53e6\u4e00\u4e2a\u540d\u5b57\u7684\u5b57\u7b26\u6765\u5b9e\u73b0\u3002","title":"\u5b57\u7b26\u4e32\u5faa\u73af+\u5207\u7247"},{"location":"lesson8/Lesson8%20C%2B%2B/#_54","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC 2243 \u8ba1\u7b97\u5b57\u7b26\u4e32\u4e2d\u7684\u6570\u5b57\u548c \u8ba1\u7b97\u5b57\u7b26\u4e32\u4e2d\u6240\u6709\u6570\u5b57\u5b57\u7b26\u7684\u603b\u548c\u3002 LC 66 \u52a0\u4e00 \u5728\u6570\u7ec4\u5f62\u5f0f\u7684\u6570\u5b57\u4e0a\u52a0\u4e00\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c\u7684\u6570\u7ec4\u5f62\u5f0f\u3002","title":"\u5b57\u7b26\u4e32\u6570\u5b66\u8fd0\u7b97"},{"location":"lesson8/Lesson8%20Java/","text":"Lesson8 \u5b57\u7b26\u4e32\u5faa\u73af+\u5207\u7247/\u5b57\u7b26\u4e32\u6570\u5b66\u8fd0\u7b97\u4e13\u9898 \u76ee\u5f55 \u5b57\u7b26\u4e32\u5faa\u73af+\u5207\u7247 LC14 \u6700\u957f\u516c\u5171\u524d\u7f00 LC125 \u9a8c\u8bc1\u56de\u6587\u4e32 LC459 \u91cd\u590d\u7684\u5b50\u5b57\u7b26\u4e32 LC796 \u65cb\u8f6c\u5b57\u7b26\u4e32 LC28 \u67e5\u627e\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5339\u914d\u9879\u7d22\u5f15 \u5b57\u7b26\u4e32\u6570\u5b66\u8fd0\u7b97 LC415 \u5b57\u7b26\u4e32\u76f8\u52a0 LC7 \u6574\u6570\u53cd\u8f6c LC67 \u4e8c\u8fdb\u5236\u6c42\u548c LC989 \u6570\u7ec4\u5f62\u5f0f\u7684\u6574\u6570\u52a0\u6cd5 \u8bfe\u540e\u7ec3\u4e60 1. \u5b57\u7b26\u4e32\u5faa\u73af+\u5207\u7247 \u4f8b\u9898\u8bb2\u89e3 LC14 \u6700\u957f\u516c\u5171\u524d\u7f00 \u9898\u76ee\u63cf\u8ff0 \u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u67e5\u627e\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u3002 \u5982\u679c\u4e0d\u5b58\u5728\u516c\u5171\u524d\u7f00\uff0c\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32 \"\"\u3002 \u9898\u76ee\u5206\u6790 \u8981\u627e\u5230\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\uff0c\u6211\u4eec\u53ef\u4ee5\u4f9d\u6b21\u6bd4\u8f83\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7684\u5b57\u7b26\uff0c\u76f4\u5230\u627e\u5230\u4e0d\u5339\u914d\u7684\u4f4d\u7f6e\u4e3a\u6b62\u3002\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u591a\u79cd\u65b9\u6cd5\u89e3\u51b3\uff0c\u6bd4\u5982\u7eb5\u5411\u626b\u63cf\u3001\u6a2a\u5411\u626b\u63cf\u3001\u5206\u6cbb\u6cd5\u3001\u4e8c\u5206\u67e5\u627e\u7b49\u3002\u6211\u4eec\u8fd9\u91cc\u91c7\u7528\u4e00\u79cd\u8f83\u4e3a\u76f4\u89c2\u7684\u6a2a\u5411\u626b\u63cf\u6cd5\u3002 \u601d\u8def \u8fb9\u754c\u60c5\u51b5 : \u5982\u679c\u5b57\u7b26\u4e32\u6570\u7ec4\u4e3a\u7a7a\uff0c\u76f4\u63a5\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002 \u5982\u679c\u5b57\u7b26\u4e32\u6570\u7ec4\u53ea\u6709\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u6700\u957f\u516c\u5171\u524d\u7f00\u5c31\u662f\u8fd9\u4e2a\u5b57\u7b26\u4e32\u672c\u8eab\u3002 \u4ece\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u5f00\u59cb : \u5047\u8bbe\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u6700\u957f\u516c\u5171\u524d\u7f00\uff0c\u63a5\u4e0b\u6765\u9010\u4e00\u4e0e\u6570\u7ec4\u4e2d\u7684\u5176\u4ed6\u5b57\u7b26\u4e32\u8fdb\u884c\u6bd4\u8f83\u3002 \u6bcf\u6b21\u6bd4\u8f83\u65f6\uff0c\u9010\u5b57\u7b26\u5730\u8fdb\u884c\u6bd4\u8f83\uff0c\u76f4\u5230\u627e\u5230\u4e0d\u5339\u914d\u7684\u5b57\u7b26\u6216\u6bd4\u8f83\u5b8c\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u6240\u6709\u5b57\u7b26\u3002 \u66f4\u65b0\u5f53\u524d\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u4e3a\u5339\u914d\u7684\u90e8\u5206\u3002 \u8fd4\u56de\u7ed3\u679c : \u6700\u540e\u8fd4\u56de\u5339\u914d\u540e\u7684\u516c\u5171\u524d\u7f00\uff0c\u5982\u679c\u6ca1\u6709\u5339\u914d\u5230\u4efb\u4f55\u524d\u7f00\uff0c\u5219\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002 \u53c2\u8003\u89e3\u7b54 class Solution { public String longestCommonPrefix(String[] strs) { // \u8fb9\u754c\u60c5\u51b5\u5904\u7406 if (strs == null || strs.length == 0) { return \"\"; } // \u521d\u59cb\u5316\u6700\u957f\u516c\u5171\u524d\u7f00\u4e3a\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32 String prefix = strs[0]; // \u4f9d\u6b21\u4e0e\u5176\u4ed6\u5b57\u7b26\u4e32\u6bd4\u8f83 for (int i = 1; i < strs.length; i++) { // \u5f53\u524d\u524d\u7f00\u4e0e\u4e0b\u4e00\u4e2a\u5b57\u7b26\u4e32\u6bd4\u8f83 while (strs[i].indexOf(prefix) != 0) { // \u7f29\u77ed\u524d\u7f00\u957f\u5ea6 prefix = prefix.substring(0, prefix.length() - 1); // \u5982\u679c\u524d\u7f00\u4e3a\u7a7a\uff0c\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32 if (prefix.isEmpty()) { return \"\"; } } } return prefix; } } LC125 \u9a8c\u8bc1\u56de\u6587\u4e32 \u9898\u76ee\u63cf\u8ff0 \u5982\u679c\u5728\u5c06\u6240\u6709\u5927\u5199\u5b57\u7b26\u8f6c\u6362\u4e3a\u5c0f\u5199\u5b57\u7b26\u3001\u5e76\u79fb\u9664\u6240\u6709\u975e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\u4e4b\u540e\uff0c\u77ed\u8bed\u6b63\u7740\u8bfb\u548c\u53cd\u7740\u8bfb\u90fd\u4e00\u6837\u3002\u5219\u53ef\u4ee5\u8ba4\u4e3a\u8be5\u77ed\u8bed\u662f\u4e00\u4e2a \u56de\u6587\u4e32 \u3002 \u5b57\u6bcd\u548c\u6570\u5b57\u90fd\u5c5e\u4e8e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\u3002 \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s\uff0c\u5982\u679c\u5b83\u662f\u56de\u6587\u4e32\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002 \u9898\u76ee\u5206\u6790 \u6211\u4eec\u9700\u8981\u7edf\u8ba1\u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd\u4e2a\u6570\uff0c\u5355\u8bcd\u662f\u7531\u8fde\u7eed\u7684\u975e\u7a7a\u683c\u5b57\u7b26\u7ec4\u6210\u7684\u3002\u7a7a\u683c\u53ef\u4ee5\u7528\u6765\u5206\u9694\u5355\u8bcd\u3002\u9898\u76ee\u4fdd\u8bc1\u5b57\u7b26\u4e32\u4e2d\u6ca1\u6709\u4e0d\u53ef\u6253\u5370\u5b57\u7b26\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u5904\u7406\u7279\u6b8a\u5b57\u7b26\u3002 \u601d\u8def \u5bf9\u5b57\u7b26\u4e32 s \u8fdb\u884c\u4e00\u6b21\u904d\u5386\uff0c\u5e76\u5c06\u5176\u4e2d\u7684\u5b57\u6bcd\u548c\u6570\u5b57\u5b57\u7b26\u8fdb\u884c\u4fdd\u7559\uff0c\u653e\u5728\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32 sgood \u4e2d\u3002\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad sgood \u662f\u5426\u662f\u4e00\u4e2a\u666e\u901a\u7684\u56de\u6587\u4e32\u5373\u53ef\u3002 \u53ef\u4ee5\u4f7f\u7528\u8bed\u8a00\u4e2d\u7684\u5b57\u7b26\u4e32\u7ffb\u8f6c API \u5f97\u5230 sgood \u7684\u9006\u5e8f\u5b57\u7b26\u4e32 sgood_rev\uff0c\u53ea\u8981\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u540c\uff0c\u90a3\u4e48 sgood \u5c31\u662f\u56de\u6587\u4e32\u3002 \u53c2\u8003\u89e3\u7b54 class Solution { public boolean isPalindrome(String s) { StringBuilder sgood = new StringBuilder(); // \u7528\u4e8e\u5b58\u50a8\u6709\u6548\u5b57\u7b26 int length = s.length(); // \u904d\u5386\u8f93\u5165\u5b57\u7b26\u4e32 for (int i = 0; i < length; i++) { char ch = s.charAt(i); // \u83b7\u53d6\u5f53\u524d\u5b57\u7b26 // \u5224\u65ad\u662f\u5426\u4e3a\u5b57\u6bcd\u6216\u6570\u5b57 if (Character.isLetterOrDigit(ch)) { sgood.append(Character.toLowerCase(ch)); // \u8f6c\u4e3a\u5c0f\u5199\u5e76\u6dfb\u52a0\u5230\u6709\u6548\u5b57\u7b26\u4e2d } } // \u521b\u5efa\u53cd\u8f6c\u540e\u7684\u6709\u6548\u5b57\u7b26\u5b57\u7b26\u4e32 StringBuilder sgood_rev = new StringBuilder(sgood).reverse(); // \u4f7f\u7528 contentEquals \u65b9\u6cd5\u6bd4\u8f83\u6709\u6548\u5b57\u7b26\u548c\u53cd\u8f6c\u5b57\u7b26 return sgood.contentEquals(sgood_rev); } } \u4e3e\u4e00\u53cd\u4e09 LC459 \u91cd\u590d\u7684\u5b50\u5b57\u7b26\u4e32 \u9898\u76ee\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u7684\u5b57\u7b26\u4e32 s \uff0c\u68c0\u67e5\u662f\u5426\u53ef\u4ee5\u901a\u8fc7\u7531\u5b83\u7684\u4e00\u4e2a\u5b50\u4e32\u91cd\u590d\u591a\u6b21\u6784\u6210\u3002 \u89e3\u9898\u601d\u8def \u904d\u5386\u53ef\u80fd\u7684\u5b50\u4e32\u957f\u5ea6 \uff1a \u4ece 1 \u5f00\u59cb\u904d\u5386\u5230\u5b57\u7b26\u4e32\u957f\u5ea6\u7684\u4e00\u534a\uff0c\u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u80fd\u901a\u8fc7\u91cd\u590d\u67d0\u4e2a\u5b50\u4e32\u6784\u6210\u3002 \u5224\u65ad\u662f\u5426\u53ef\u4ee5\u6574\u9664 \uff1a \u901a\u8fc7\u68c0\u67e5 len % i == 0 \uff0c\u5224\u65ad\u5f53\u524d\u5b50\u4e32\u7684\u957f\u5ea6 i \u662f\u5426\u53ef\u4ee5\u6574\u9664\u6574\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002\u5982\u679c\u53ef\u4ee5\u6574\u9664\uff0c\u90a3\u4e48 s.length() \u5fc5\u987b\u662f\u5b50\u4e32\u957f\u5ea6\u7684\u500d\u6570\u3002 \u6784\u5efa\u65b0\u5b57\u7b26\u4e32 \uff1a \u53d6\u51fa\u5f53\u524d\u7684\u5b50\u4e32 substring \uff0c\u7136\u540e\u901a\u8fc7 StringBuilder \u5c06\u8be5\u5b50\u4e32\u91cd\u590d (len / i) \u6b21\u6784\u9020\u51fa\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32\u3002 \u6bd4\u8f83 \uff1a \u5982\u679c\u65b0\u6784\u5efa\u7684\u5b57\u7b26\u4e32\u4e0e\u539f\u5b57\u7b26\u4e32 s \u76f8\u540c\uff0c\u5219\u8fd4\u56de true \uff0c\u8868\u793a s \u662f\u901a\u8fc7\u8be5\u5b50\u4e32\u7684\u91cd\u590d\u6784\u6210\u7684\u3002 \u65f6\u95f4\u590d\u6742\u5ea6 \uff1a \u6700\u574f\u60c5\u51b5\u4e0b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n^2) \uff0c\u56e0\u4e3a\u5916\u5c42\u5faa\u73af\u8981\u6267\u884c n / 2 \u6b21\uff0c\u4e14\u6bcf\u6b21\u9700\u8981\u6784\u5efa\u548c\u6bd4\u8f83\u5b57\u7b26\u4e32\u3002 \u793a\u4f8b\u4ee3\u7801 class Solution { public static repeatedSubstringPattern(String s) { int n = s.length(); // \u904d\u5386\u53ef\u80fd\u7684\u5b50\u4e32\u957f\u5ea6 for (int i = 1; i <= n / 2; i++) { // \u68c0\u67e5\u662f\u5426\u53ef\u4ee5\u6574\u9664 if (n % i == 0) { String substring = s.substring(0, i); // \u6784\u9020\u7531\u5b50\u4e32\u91cd\u590d\u7684\u5b57\u7b26\u4e32 StringBuilder repeated = new StringBuilder(); for (int j = 0; j < n / i; j++) { repeated.append(substring); } // \u6bd4\u8f83\u6784\u9020\u7684\u5b57\u7b26\u4e32\u4e0e\u539f\u5b57\u7b26\u4e32 if (repeated.toString().equals(s)) { return true; } } } return false; } } \u66f4\u9ad8\u6548\u7684\u89e3\u6cd5 \u53ef\u4ee5\u5229\u7528\u5b57\u7b26\u4e32\u7684\u7279\u6027\u6765\u8fdb\u4e00\u6b65\u4f18\u5316\uff1a \u5c06\u5b57\u7b26\u4e32 s \u81ea\u8eab\u62fc\u63a5\u4e00\u904d\uff0c\u5f97\u5230 s + s \u3002 \u53bb\u6389\u5f00\u5934\u548c\u7ed3\u5c3e\u7684\u5b57\u7b26\uff0c\u68c0\u67e5 s \u662f\u5426\u5728\u65b0\u7684\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u3002 \u5982\u679c\u51fa\u73b0\uff0c\u8bf4\u660e s \u53ef\u4ee5\u7531\u67d0\u4e2a\u5b50\u4e32\u6784\u6210\u3002 \u4f18\u5316\u793a\u4f8b\u4ee3\u7801 class Solution { public boolean repeatedSubstringPattern(String s) { String doubled = s + s; // \u5c06\u5b57\u7b26\u4e32\u62fc\u63a5 String subString = doubled.substring(1, doubled.length() - 1); // \u53bb\u6389\u9996\u5c3e\u5b57\u7b26 return subString.contains(s); // \u68c0\u67e5\u662f\u5426\u5305\u542b\u539f\u5b57\u7b26\u4e32 } } \u8bc1\u660e\uff1a\u5b57\u7b26\u4e32\u62fc\u63a5\u540e\u6390\u5934\u53bb\u5c3e\u53ef\u4ee5\u7528\u4e8e\u5224\u65ad\u91cd\u590d\u7684\u5b50\u5b57\u7b26\u4e32 \u8865\u5145\uff1a\u4ec0\u4e48\u662f\u524d\u7f00\u548c\u540e\u7f00\uff1f \u524d\u7f00\uff08Prefix\uff09 \uff1a\u4ece\u5b57\u7b26\u4e32\u7684 \u5f00\u5934 \u5f00\u59cb\u7684\u8fde\u7eed\u5b57\u7b26\u5b50\u4e32\u3002\u4f8b\u5982\uff0c\u5b57\u7b26\u4e32 \"abcde\" \u7684\u524d\u7f00\u6709\uff1a \u524d\u7f00 1\uff1a \"a\" \u524d\u7f00 2\uff1a \"ab\" \u524d\u7f00 3\uff1a \"abc\" \u524d\u7f00 4\uff1a \"abcd\" \u524d\u7f00 5\uff1a \"abcde\" \uff08\u6574\u4e2a\u5b57\u7b26\u4e32\u672c\u8eab\u4e5f\u662f\u4e00\u4e2a\u524d\u7f00\uff09 \u540e\u7f00\uff08Suffix\uff09 \uff1a\u4ece\u5b57\u7b26\u4e32\u7684 \u7ed3\u5c3e \u5f00\u59cb\u7684\u8fde\u7eed\u5b57\u7b26\u5b50\u4e32\u3002\u4f8b\u5982\uff0c\u5b57\u7b26\u4e32 \"abcde\" \u7684\u540e\u7f00\u6709\uff1a \u540e\u7f00 1\uff1a \"e\" \u540e\u7f00 2\uff1a \"de\" \u540e\u7f00 3\uff1a \"cde\" \u540e\u7f00 4\uff1a \"bcde\" \u540e\u7f00 5\uff1a \"abcde\" \uff08\u6574\u4e2a\u5b57\u7b26\u4e32\u672c\u8eab\u4e5f\u662f\u4e00\u4e2a\u540e\u7f00\uff09 \u5145\u5206\u5fc5\u8981\u6027\u8bc1\u660e \u4e3a\u4e86\u8bc1\u660e\u7ed9\u5b9a\u5b57\u7b26\u4e32 s \u662f\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\u5145\u5206\u5fc5\u8981\u6027\uff0c\u6211\u4eec\u9700\u8981\u4ece\u4e24\u4e2a\u65b9\u5411\u6765\u8fdb\u884c\u8bc1\u660e\uff1a \u5145\u5206\u6027 \uff1a\u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u4e32 s \u662f\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\uff0c\u90a3\u4e48\u5728\u62fc\u63a5\u540e\u7684\u5b57\u7b26\u4e32 s + s \u4e2d\uff0c\u6390\u5934\u53bb\u5c3e\u540e\uff0c\u4e00\u5b9a\u80fd\u518d\u6b21\u627e\u5230 s \u3002 \u5fc5\u8981\u6027 \uff1a\u5982\u679c\u5728\u6390\u5934\u53bb\u5c3e\u7684 s + s \u4e2d\u627e\u5230\u4e86 s \uff0c\u90a3\u4e48 s \u4e00\u5b9a\u662f\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\u3002 1. \u5145\u5206\u6027 \u5047\u8bbe \uff1a\u8bbe\u5b57\u7b26\u4e32 s \u662f\u7531\u4e00\u4e2a\u8f83\u77ed\u7684\u5b50\u4e32 p \u91cd\u590d\u591a\u6b21\u6784\u6210\u7684\uff0c\u5373 s = p + p + ... + p \uff08\u5047\u8bbe p \u91cd\u590d k \u6b21\uff09\u3002 \u4e3e\u4f8b \uff1a\u6bd4\u5982 s = \"abab\" \uff0c\u8fd9\u662f\u7531 p = \"ab\" \u91cd\u590d\u4e24\u6b21\u6784\u6210\u7684\u3002 \u62fc\u63a5 s + s \uff1a\u6211\u4eec\u5c06 s \u62fc\u63a5\u5f97\u5230 s + s \uff0c\u4f8b\u5982\uff1a s + s = \"abababab\" \u63a5\u7740\uff0c\u6390\u5934\u53bb\u5c3e\uff0c\u53bb\u6389\u9996\u5c3e\u5b57\u7b26\uff0c\u5f97\u5230 new_s = (s + s).substring(1, (s + s).length() - 1) \uff0c\u5bf9\u4e8e\u4e0a\u9762\u7684\u4f8b\u5b50\uff1a new_s = \"bababa\" \u5bfb\u627e s \u5728 new_s \u4e2d\u7684\u51fa\u73b0 \uff1a\u7531\u4e8e s \u662f\u7531\u5b50\u4e32 p \u591a\u6b21\u91cd\u590d\uff08\u81f3\u5c11\u4e24\u6b21\uff09\u6784\u6210\u7684\uff0c s + s \u5c31\u4f1a\u91cd\u590d\u81f3\u5c11 4 \u6b21 p \uff0c\u6390\u5934\u53bb\u5c3e\u540e\uff0c\u91cd\u590d\u81f3\u5c11 2 \u6b21 p \uff0c\u524d\u7f00\u548c\u540e\u7f00\u5fc5\u7136\u6709\u91cd\u53e0\uff0c\u4e00\u5b9a\u80fd\u518d\u6b21\u627e\u5230 s \u3002 new_s = \"bababa\" ^^^^ (\u8fd9\u91cc\u627e\u5230 \"abab\") \u5145\u5206\u6027\u8bc1\u6bd5\u3002 2. \u5fc5\u8981\u6027 \u5047\u8bbe \uff1a\u6211\u4eec\u5df2\u7ecf\u5728\u53bb\u6389\u9996\u5c3e\u5b57\u7b26\u7684 s + s \u4e2d\u518d\u6b21\u627e\u5230\u4e86 s \u3002\u73b0\u5728\u6211\u4eec\u9700\u8981\u8bc1\u660e\uff0c s \u4e00\u5b9a\u662f\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\u3002 \u6784\u9020 new_s \uff1a\u9996\u5148\uff0c\u6784\u9020 new_s = (s + s).substring(1, (s + s).length() - 1) \uff0c\u5047\u8bbe s \u5728 new_s \u4e2d\u5339\u914d\u7684\u4f4d\u7f6e\u662f\u4ece i \u5f00\u59cb\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u627e\u5230\u4e86\u4e00\u4e2a\u504f\u79fb\u91cf i \uff0c\u4f7f\u5f97 s.substring(i) + s.substring(0, i) \u548c s \u5b8c\u5168\u76f8\u540c\uff0c\u8fd9\u610f\u5473\u7740\uff1a s == s.substring(i) + s.substring(0, i); \u4e5f\u5c31\u662f\u8bf4\uff0c s \u7684\u67d0\u4e2a \u540e\u7f00 \u4e0e\u5b83\u7684\u67d0\u4e2a \u524d\u7f00 \u91cd\u53e0\u5339\u914d\u3002 \u4e3e\u4f8b\u8bf4\u660e \uff1a s + s = \"abababab\" \u53bb\u6389\u9996\u5c3e\u5b57\u7b26\u540e\u5f97\u5230\uff1anew_s = \"bababa\" s \u7684\u524d\u7f00\u6709\uff1a 'a', 'ab', 'aba', 'abab' s \u7684\u540e\u7f00\u6709\uff1a 'b', 'ab', 'bab', 'abab' \u53ef\u4ee5\u53d1\u73b0\uff0c s = \"abab\" \u5728 \"bababa\" \u4e2d\u786e\u5b9e\u518d\u6b21\u51fa\u73b0\uff0c\u4e14\u5339\u914d\u53d1\u751f\u5728\u4ea4\u754c\u5904\uff08\u504f\u79fb\u91cf\u4e3a1\uff09\uff0c\u8fd9\u65f6 s \u7684\u524d\u7f00\u548c\u540e\u7f00\u51fa\u73b0\u4e86\u91cd\u5408\u3002 \u8fd9\u79cd\u73b0\u8c61\u8bf4\u660e s \u7684\u524d\u7f00\u548c\u540e\u7f00\u5b58\u5728\u4ea4\u66ff\u91cd\u53e0\uff0c\u8868\u660e s \u5177\u6709\u5468\u671f\u6027\uff0c\u610f\u5473\u7740 s \u662f\u7531\u4e00\u4e2a\u8f83\u77ed\u7684\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c s \u7684\u524d\u7f00\u548c\u540e\u7f00\u6709\u67d0\u79cd\u91cd\u53e0\uff0c\u5f62\u6210\u4e86\u5468\u671f\u6027\uff0c\u90a3\u4e48 s \u5c31\u53ef\u4ee5\u901a\u8fc7\u91cd\u590d\u67d0\u4e2a\u5b50\u4e32\u6784\u6210\u3002 \u5fc5\u8981\u6027\u8bc1\u6bd5\u3002 \u603b\u7ed3\uff1a \u6211\u4eec\u5df2\u7ecf\u8bc1\u660e\u4e86\uff1a \u5145\u5206\u6027 \uff1a\u5982\u679c s \u662f\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\uff0c\u90a3\u4e48\u5728 s + s \u4e2d\u6390\u5934\u53bb\u5c3e\u540e\uff0c\u4e00\u5b9a\u80fd\u591f\u518d\u6b21\u627e\u5230 s \u3002\u8fd9\u662f\u56e0\u4e3a\u91cd\u590d\u5b50\u4e32\u4f1a\u4f7f\u5f97\u524d\u7f00\u548c\u540e\u7f00\u6709\u91cd\u53e0\u3002 \u5fc5\u8981\u6027 \uff1a\u5982\u679c\u5728\u6390\u5934\u53bb\u5c3e\u7684 s + s \u4e2d\u627e\u5230\u4e86 s \uff0c\u90a3\u4e48 s \u4e00\u5b9a\u662f\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\u3002\u8fd9\u662f\u56e0\u4e3a\u53ea\u6709\u5f53 s \u5177\u6709\u5468\u671f\u6027\u65f6\uff0c\u5b83\u7684\u524d\u7f00\u548c\u540e\u7f00\u624d\u4f1a\u4ea4\u66ff\u91cd\u53e0\uff0c\u5f62\u6210\u5339\u914d\u3002 \u56e0\u6b64\uff0c\u62fc\u63a5 s + s \u5e76\u53bb\u6389\u9996\u5c3e\u5b57\u7b26\u540e\u80fd\u5426\u518d\u6b21\u627e\u5230 s \uff0c\u53ef\u4ee5\u7528\u6765\u5224\u65ad s \u662f\u5426\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u3002 \u8865\u5145\u6750\u6599\uff1a \u5145\u5206\u6027\u53ca\u5fc5\u8981\u6027\u8bc1\u660e Leetcode\u5b98\u65b9\u9898\u89e3\u8bc1\u660e LC796 \u65cb\u8f6c\u5b57\u7b26\u4e32 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32, s \u548c goal \u3002\u5982\u679c\u5728\u82e5\u5e72\u6b21\u65cb\u8f6c\u64cd\u4f5c\u4e4b\u540e\uff0c s \u80fd\u53d8\u6210 goal \uff0c\u90a3\u4e48\u8fd4\u56de true \u3002 s \u7684 \u65cb\u8f6c\u64cd\u4f5c \u5c31\u662f\u5c06 s \u6700\u5de6\u8fb9\u7684\u5b57\u7b26\u79fb\u52a8\u5230\u6700\u53f3\u8fb9\u3002 \u4f8b\u5982, \u82e5 s = 'abcde'\uff0c\u5728\u65cb\u8f6c\u4e00\u6b21\u4e4b\u540e\u7ed3\u679c\u5c31\u662f'bcdea' \u3002 \u8981\u5224\u65ad\u5b57\u7b26\u4e32 s \u662f\u5426\u53ef\u4ee5\u901a\u8fc7\u82e5\u5e72\u6b21\u65cb\u8f6c\u64cd\u4f5c\u53d8\u6210\u5b57\u7b26\u4e32 goal \uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u4ee5\u4e0b\u601d\u8def\u8fdb\u884c\u89e3\u51b3\uff1a \u89e3\u9898\u601d\u8def \u5b57\u7b26\u4e32\u65cb\u8f6c\u7684\u7279\u6027 \uff1a \u5982\u679c\u6211\u4eec\u5c06\u5b57\u7b26\u4e32 s \u8fdb\u884c\u4e24\u6b21\u62fc\u63a5\uff0c\u5f97\u5230 s + s \uff0c\u8fd9\u4e2a\u65b0\u5b57\u7b26\u4e32\u5305\u542b\u4e86\u6240\u6709\u53ef\u80fd\u7684\u65cb\u8f6c\u5f62\u5f0f\u3002 \u4f8b\u5982\uff1a \u5bf9\u4e8e s = \"abcde\" \uff0c\u62fc\u63a5\u540e s + s = \"abcdeabcde\" \uff0c\u5176\u4e2d\u5305\u542b\u4e86 \"abcde\" \u7684\u6240\u6709\u65cb\u8f6c\u5f62\u5f0f\uff0c\u5982 \"abcde\" \u3001 \"bcdea\" \u3001 \"cdeab\" \u3001 \"deabc\" \u548c \"eabcd\" \u3002 \u5224\u65ad goal \u662f\u5426\u5728 s + s \u4e2d \uff1a \u53ea\u9700\u68c0\u67e5 goal \u662f\u5426\u662f s + s \u7684\u5b50\u4e32\u3002 \u5982\u679c goal \u662f s + s \u7684\u5b50\u4e32\uff0c\u5219\u8fd4\u56de true \uff0c\u5426\u5219\u8fd4\u56de false \u3002 \u793a\u4f8b\u4ee3\u7801 class Solution { public boolean rotateString(String s, String goal) { // \u68c0\u67e5\u957f\u5ea6\u662f\u5426\u76f8\u7b49 if (s.length() != goal.length()) { return false; } // \u62fc\u63a5\u5b57\u7b26\u4e32 String doubled = s + s; // \u68c0\u67e5 goal \u662f\u5426\u4e3a doubled \u7684\u5b50\u4e32 return doubled.contains(goal); } } \u7b80\u6d01\u5199\u6cd5 class Solution { public boolean rotateString(String s, String goal) { return s.length() == goal.length() && (s + s).contains(goal); } } LC28 \u67e5\u627e\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5339\u914d\u9879\u7d22\u5f15 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 haystack \u548c needle \uff0c\u4f60\u9700\u8981\u5728 haystack \u5b57\u7b26\u4e32\u4e2d\u627e\u51fa needle \u5b57\u7b26\u4e32\u51fa\u73b0\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\uff08\u4ece 0 \u5f00\u59cb\uff09\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de -1 \u3002 \u601d\u8def\u5206\u6790 \u5982\u679c needle \u4e3a\u7a7a\u5b57\u7b26\u4e32\uff0c\u76f4\u63a5\u8fd4\u56de 0 \u3002 \u904d\u5386 haystack \uff0c\u4ece\u6bcf\u4e2a\u7d22\u5f15\u4f4d\u7f6e\u68c0\u67e5\u662f\u5426\u4e0e needle \u5339\u914d\u3002 \u5982\u679c\u5339\u914d\u6210\u529f\uff0c\u8fd4\u56de\u8be5\u7d22\u5f15\uff0c\u5426\u5219\u7ee7\u7eed\u904d\u5386\u3002 \u5982\u679c\u904d\u5386\u7ed3\u675f\u540e\u672a\u627e\u5230\uff0c\u8fd4\u56de -1 \u3002 \u53c2\u8003\u89e3\u7b54 class Solution { public int strStr(String haystack, String needle) { // \u5982\u679cneedle\u4e3a\u7a7a\u5b57\u7b26\u4e32\uff0c\u76f4\u63a5\u8fd4\u56de0 if (needle.isEmpty()) { return 0; } // \u83b7\u53d6\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6 int n = haystack.length(); int m = needle.length(); // \u904d\u5386haystack\uff0c\u76f4\u5230\u5269\u4f59\u7684\u90e8\u5206\u957f\u5ea6\u5c0f\u4e8eneedle\u957f\u5ea6 for (int i = 0; i <= n - m; i++) { // \u6bd4\u8f83\u4ecei\u5f00\u59cb\u7684\u5b50\u4e32\u662f\u5426\u7b49\u4e8eneedle if (haystack.substring(i, i + m).equals(needle)) { return i; } } // \u5982\u679c\u904d\u5386\u7ed3\u675f\u540e\u6ca1\u6709\u627e\u5230\uff0c\u8fd4\u56de-1 return -1; } } 2. \u5b57\u7b26\u4e32\u6570\u5b66\u8fd0\u7b97 \u5b57\u7b26\u4e32\u6570\u5b66\u6a21\u62df\u7684\u57fa\u672c\u89e3\u9898\u601d\u8def\u4e3b\u8981\u6d89\u53ca\u5982\u4f55\u901a\u8fc7\u9010\u6b65\u64cd\u4f5c\u548c\u7b80\u5355\u7684\u6570\u5b66\u8fd0\u7b97\uff0c\u5904\u7406\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u6570\u5b57\u8ba1\u7b97\u3002 \u57fa\u672c\u6982\u5ff5 \u5b57\u7b26\u8f6c\u6570\u5b57 \uff1a \u5b57\u7b26\u4e32\u4e2d\u7684\u6570\u5b57\u662f\u4ee5\u5b57\u7b26\u7684\u5f62\u5f0f\u5b58\u5728\u7684\uff0c\u4f8b\u5982\u5b57\u7b26 '0' \u5230 '9' \u3002 \u53ef\u4ee5\u901a\u8fc7 char - '0' \u5c06\u5b57\u7b26\u8f6c\u4e3a\u5bf9\u5e94\u7684\u6570\u5b57\u3002\u4f8b\u5982\uff0c '5' - '0' \u7684\u7ed3\u679c\u4e3a 5 \u3002 \u8fdb\u4f4d\u5904\u7406 \uff1a \u5728\u8fdb\u884c\u52a0\u6cd5\u8fd0\u7b97\u65f6\uff0c\u5982\u679c\u67d0\u4e00\u4f4d\u7684\u548c\u5927\u4e8e\u6216\u7b49\u4e8e 10 \uff0c\u5219\u9700\u8981\u5904\u7406\u8fdb\u4f4d\uff08carry\uff09\uff0c\u5c06 1 \u52a0\u5230\u4e0b\u4e00\u4f4d\u7684\u8ba1\u7b97\u4e2d\u3002 \u8fdb\u4f4d\u7684\u8ba1\u7b97\u53ef\u4ee5\u901a\u8fc7 carry = sum / 10 \u6765\u5b9e\u73b0\uff0c\u800c\u5f53\u524d\u4f4d\u7684\u7ed3\u679c\u5219\u662f sum % 10 \u3002 \u9006\u5e8f\u8ba1\u7b97 \uff1a \u5b57\u7b26\u4e32\u901a\u5e38\u4ece\u53f3\u5230\u5de6\u8fdb\u884c\u52a0\u6cd5\uff0c\u56e0\u4e3a\u6211\u4eec\u4ece\u4e2a\u4f4d\u5f00\u59cb\u3002\u5904\u7406\u5b8c\u6700\u540e\u4e00\u4f4d\u540e\uff0c\u7ee7\u7eed\u5904\u7406\u5341\u4f4d\u3001\u767e\u4f4d\u7b49\u3002 \u4e3a\u4e86\u65b9\u4fbf\u5b58\u50a8\u7ed3\u679c\uff0c\u901a\u5e38\u4f1a\u4f7f\u7528 StringBuilder \u9010\u4f4d\u6dfb\u52a0\uff0c\u6700\u540e\u518d\u53cd\u8f6c\u5b57\u7b26\u4e32\u4ee5\u83b7\u5f97\u6b63\u786e\u7684\u987a\u5e8f\u3002 \u4f8b\u9898\u8bb2\u89e3 LC415 \u5b57\u7b26\u4e32\u76f8\u52a0 \u9898\u76ee\u63cf\u8ff0 \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u975e\u8d1f\u6574\u6570 num1 \u548c num2 \uff0c\u8ba1\u7b97\u5b83\u4eec\u7684\u548c\u5e76\u540c\u6837\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u8fd4\u56de\u3002 \u4f60\u4e0d\u80fd\u4f7f\u7528\u4efb\u4f55\u5167\u5efa\u7684\u7528\u4e8e\u5904\u7406\u5927\u6574\u6570\u7684\u5e93\uff08\u6bd4\u5982 BigInteger\uff09\uff0c\u4e5f\u4e0d\u80fd\u76f4\u63a5\u5c06\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6574\u6570\u5f62\u5f0f\u3002 \u9898\u76ee\u5206\u6790 \u8981\u8ba1\u7b97\u4e24\u4e2a\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u975e\u8d1f\u6574\u6570 num1 \u548c num2 \u7684\u548c\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c\u4e3a\u5b57\u7b26\u4e32\u5f62\u5f0f\uff0c\u6211\u4eec\u9700\u8981\u624b\u52a8\u6a21\u62df\u52a0\u6cd5\u7684\u8fc7\u7a0b\uff0c\u7c7b\u4f3c\u4e8e\u5728\u7eb8\u4e0a\u8fdb\u884c\u52a0\u6cd5\u8ba1\u7b97\u3002\u4e0b\u9762\u662f\u8be6\u7ec6\u7684\u89e3\u9898\u601d\u8def\u548c\u6b65\u9aa4\u3002 \u89e3\u9898\u601d\u8def \u4ece\u53f3\u5230\u5de6\u904d\u5386 \uff1a \u52a0\u6cd5\u901a\u5e38\u662f\u4ece\u4e2a\u4f4d\u5f00\u59cb\u8ba1\u7b97\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4ece\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u5f00\u59cb\u904d\u5386\u3002 \u9010\u4f4d\u76f8\u52a0 \uff1a \u5bf9\u4e8e num1 \u548c num2 \u4e2d\u7684\u6bcf\u4e00\u4f4d\uff0c\u5206\u522b\u5c06\u5b83\u4eec\u8f6c\u5316\u4e3a\u6570\u5b57\uff0c\u8fdb\u884c\u52a0\u6cd5\u64cd\u4f5c\u3002 \u9700\u8981\u8003\u8651\u8fdb\u4f4d\uff08carry\uff09\u7684\u5f71\u54cd\uff0c\u5373\u5982\u679c\u67d0\u4e00\u4f4d\u7684\u548c\u5927\u4e8e\u6216\u7b49\u4e8e 10\uff0c\u5219\u9700\u8981\u5c06 1 \u8fdb\u4f4d\u5230\u4e0b\u4e00\u4f4d\u3002 \u5904\u7406\u4e0d\u540c\u957f\u5ea6\u7684\u5b57\u7b26\u4e32 \uff1a \u5728\u8fdb\u884c\u52a0\u6cd5\u65f6\uff0c\u5982\u679c\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e0d\u540c\uff0c\u6211\u4eec\u9700\u8981\u786e\u4fdd\u4ece\u6700\u53f3\u8fb9\u5f00\u59cb\u6dfb\u52a0\u4e0a\u77ed\u5b57\u7b26\u4e32\u7684\u7f3a\u5931\u90e8\u5206\u3002 \u4f8b\u5982\uff0c\u5bf9\u4e8e num1 \u957f\u5ea6\u4e3a 5 \u548c num2 \u957f\u5ea6\u4e3a 3 \u7684\u60c5\u51b5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u8ba1\u7b97\u65f6\u8003\u8651 num2 \u7684\u524d\u4e09\u4f4d\u3002 \u5904\u7406\u6700\u540e\u7684\u8fdb\u4f4d \uff1a \u5982\u679c\u904d\u5386\u7ed3\u675f\u540e\u8fd8\u6709\u8fdb\u4f4d\uff08carry\uff09\u672a\u5904\u7406\uff0c\u9700\u8981\u5c06\u5176\u6dfb\u52a0\u5230\u7ed3\u679c\u4e2d\u3002 \u7ed3\u679c\u62fc\u63a5 \uff1a \u7531\u4e8e\u6211\u4eec\u662f\u4ece\u540e\u5411\u524d\u8ba1\u7b97\u7684\uff0c\u56e0\u6b64\u6700\u7ec8\u7684\u7ed3\u679c\u9700\u8981\u53cd\u8f6c\u4e00\u4e0b\u3002 \u793a\u4f8b\u4ee3\u7801 public class Solution{ public static String addStrings(String num1, String num2) { StringBuilder result = new StringBuilder(); int carry = 0; // \u8fdb\u4f4d int i = num1.length() - 1; // num1 \u7684\u6700\u540e\u4e00\u4f4d\u7d22\u5f15 int j = num2.length() - 1; // num2 \u7684\u6700\u540e\u4e00\u4f4d\u7d22\u5f15 // \u5faa\u73af\u76f4\u5230 num1 \u548c num2 \u90fd\u904d\u5386\u5b8c while (i >= 0 || j >= 0 || carry > 0) { int sum = carry; // \u4ece\u8fdb\u4f4d\u5f00\u59cb if (i >= 0) { sum += num1.charAt(i) - '0'; // \u5c06\u5b57\u7b26\u8f6c\u4e3a\u6570\u5b57 i--; // \u79fb\u52a8\u5230\u4e0a\u4e00\u4f4d } if (j >= 0) { sum += num2.charAt(j) - '0'; // \u5c06\u5b57\u7b26\u8f6c\u4e3a\u6570\u5b57 j--; // \u79fb\u52a8\u5230\u4e0a\u4e00\u4f4d } result.append(sum % 10); // \u5f53\u524d\u4f4d\u7684\u7ed3\u679c carry = sum / 10; // \u66f4\u65b0\u8fdb\u4f4d } return result.reverse().toString(); // \u53cd\u8f6c\u7ed3\u679c\u5e76\u8fd4\u56de } } LC7 \u6574\u6570\u53cd\u8f6c \u9898\u76ee\u63cf\u8ff0 \u7ed9\u4f60\u4e00\u4e2a 32 \u4f4d\u7684\u6709\u7b26\u53f7\u6574\u6570 x \uff0c\u8fd4\u56de\u5c06 x \u4e2d\u7684\u6570\u5b57\u90e8\u5206\u53cd\u8f6c\u540e\u7684\u7ed3\u679c\u3002 \u89e3\u9898\u601d\u8def \u53d6\u51fa\u6700\u540e\u4e00\u4f4d\u6570\u5b57 \uff1a digit = x % 10 \u7528\u4e8e\u63d0\u53d6 x \u7684\u6700\u540e\u4e00\u4f4d\u6570\u5b57\u3002 \u66f4\u65b0\u7ed3\u679c \uff1a result = result * 10 + digit \u5c06\u6570\u5b57\u52a0\u5165\u5230 result \u4e2d\uff0c\u9010\u6b65\u6784\u5efa\u53cd\u8f6c\u540e\u7684\u6574\u6570\u3002 \u79fb\u9664\u6700\u540e\u4e00\u4f4d\u6570\u5b57 \uff1a x /= 10 \u7528\u4e8e\u53bb\u9664 x \u7684\u6700\u540e\u4e00\u4f4d\u6570\u5b57\u3002 \u6ea2\u51fa\u68c0\u67e5 \uff1a \u5f53 result > Integer.MAX_VALUE / 10 \u65f6\uff0c\u82e5\u7ee7\u7eed\u6dfb\u52a0\u4e00\u4f4d\u6570\u5b57\uff0c\u53cd\u8f6c\u7ed3\u679c\u5c06\u8d85\u8fc7 Integer.MAX_VALUE \u3002 \u5f53 result == Integer.MAX_VALUE / 10 \u65f6\uff0c\u6700\u540e\u4e00\u4f4d\u6570\u5b57 digit \u5fc5\u987b\u5c0f\u4e8e\u7b49\u4e8e 7\uff08\u5373\u6700\u5927\u503c\u7684\u6700\u540e\u4e00\u4f4d\uff09\u3002 \u7c7b\u4f3c\u5730\uff0c\u5904\u7406\u8d1f\u6570\u65f6\u4e5f\u8981\u68c0\u67e5\u6700\u5c0f\u503c Integer.MIN_VALUE \uff0c\u5e76\u786e\u4fdd digit \u5c0f\u4e8e\u7b49\u4e8e -8\uff08\u6700\u5c0f\u503c\u7684\u6700\u540e\u4e00\u4f4d\uff09\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u5982\u679c\u6ca1\u6709\u6ea2\u51fa\uff0c\u5219\u8fd4\u56de\u53cd\u8f6c\u540e\u7684\u6574\u6570\uff1b\u5982\u679c\u6ea2\u51fa\u5219\u8fd4\u56de 0\u3002 \u6ea2\u51fa\u6761\u4ef6\u8bf4\u660e Integer.MAX_VALUE = 2147483647 \uff0c\u6700\u540e\u4e00\u4f4d\u662f 7\u3002 Integer.MIN_VALUE = -2147483648 \uff0c\u6700\u540e\u4e00\u4f4d\u662f -8\u3002 \u53c2\u8003\u89e3\u7b54 class Solution { public int reverse(int x) { int result = 0; while (x != 0) { int digit = x % 10; // \u68c0\u67e5\u662f\u5426\u4f1a\u6ea2\u51fa\uff1a\u5982\u679c result \u8d85\u8fc7\u4e86\u8fb9\u754c\uff0c\u8fd4\u56de 0 if (result > Integer.MAX_VALUE / 10 || (result == Integer.MAX_VALUE / 10 && digit > 7)) { return 0; } if (result < Integer.MIN_VALUE / 10 || (result == Integer.MIN_VALUE / 10 && digit < -8)) { return 0; } // \u6784\u5efa\u53cd\u8f6c\u540e\u7684\u7ed3\u679c result = result * 10 + digit; // \u79fb\u9664 x \u7684\u6700\u540e\u4e00\u4f4d x /= 10; } return result; } } \u4e3e\u4e00\u53cd\u4e09 LC67 \u4e8c\u8fdb\u5236\u6c42\u548c \u9898\u76ee\u63cf\u8ff0 \u7ed9\u4f60\u4e24\u4e2a\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32 a \u548c b \uff0c\u4ee5\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\u8fd4\u56de\u5b83\u4eec\u7684\u548c\u3002 \u89e3\u9898\u601d\u8def \u4ece\u53f3\u5230\u5de6\u904d\u5386 \uff1a \u7531\u4e8e\u4e8c\u8fdb\u5236\u52a0\u6cd5\u662f\u4ece\u6700\u53f3\u4fa7\u7684\u4f4d\uff08\u6700\u4f4e\u4f4d\uff09\u5f00\u59cb\u7684\uff0c\u6211\u4eec\u9700\u8981\u4ece\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u5f00\u59cb\u5904\u7406\u3002 \u9010\u4f4d\u76f8\u52a0 \uff1a \u4f7f\u7528\u4e24\u4e2a\u6307\u9488\u5206\u522b\u6307\u5411\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\uff08\u5373\u6700\u540e\u4e00\u4f4d\uff09\u3002 \u9010\u4f4d\u76f8\u52a0\u5e76\u5904\u7406\u8fdb\u4f4d\uff08carry\uff09\u3002 \u5904\u7406\u4e0d\u540c\u957f\u5ea6\u7684\u5b57\u7b26\u4e32 \uff1a \u5982\u679c\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e0d\u540c\uff0c\u77ed\u7684\u5b57\u7b26\u4e32\u5728\u8ba1\u7b97\u65f6\u4f1a\u7f3a\u5931\u90e8\u5206\u4f4d\u3002\u9700\u8981\u5728\u5904\u7406\u8fc7\u7a0b\u4e2d\u68c0\u67e5\u662f\u5426\u5df2\u7ecf\u8d85\u51fa\u67d0\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002 \u5904\u7406\u6700\u540e\u7684\u8fdb\u4f4d \uff1a \u5982\u679c\u904d\u5386\u7ed3\u675f\u540e\u4ecd\u7136\u6709\u8fdb\u4f4d\uff08carry\uff09\uff0c\u9700\u8981\u5c06\u5176\u6dfb\u52a0\u5230\u7ed3\u679c\u4e2d\u3002 \u62fc\u63a5\u548c\u53cd\u8f6c\u7ed3\u679c \uff1a \u7531\u4e8e\u6211\u4eec\u662f\u4ece\u540e\u5411\u524d\u8ba1\u7b97\u7684\uff0c\u56e0\u6b64\u9700\u8981\u5728\u6700\u540e\u53cd\u8f6c\u7ed3\u679c\u5b57\u7b26\u4e32\u3002 \u793a\u4f8b\u4ee3\u7801 public class Solution { public String addBinary(String a, String b) { StringBuilder result = new StringBuilder(); int carry = 0; // \u8fdb\u4f4d int i = a.length() - 1; // a \u7684\u6700\u540e\u4e00\u4f4d\u7d22\u5f15 int j = b.length() - 1; // b \u7684\u6700\u540e\u4e00\u4f4d\u7d22\u5f15 // \u5faa\u73af\u76f4\u5230 a \u548c b \u90fd\u904d\u5386\u5b8c while (i >= 0 || j >= 0 || carry > 0) { // \u8ba1\u7b97\u5f53\u524d\u4f4d\u7684\u548c if (i >= 0) { carry += a.charAt(i--) - '0'; // \u53d6 a \u7684\u5f53\u524d\u4f4d\u5e76\u8f6c\u4e3a\u6570\u5b57 } if (j >= 0) { carry += b.charAt(j--) - '0'; // \u53d6 b \u7684\u5f53\u524d\u4f4d\u5e76\u8f6c\u4e3a\u6570\u5b57 } // \u5c06\u5f53\u524d\u4f4d\u7684\u7ed3\u679c\u6dfb\u52a0\u5230\u7ed3\u679c\u4e2d result.append(carry % 2); // \u5f53\u524d\u4f4d\u7ed3\u679c carry /= 2; // \u66f4\u65b0\u8fdb\u4f4d } return result.reverse().toString(); // \u53cd\u8f6c\u7ed3\u679c\u5e76\u8fd4\u56de } } LC989 \u6570\u7ec4\u5f62\u5f0f\u7684\u6574\u6570\u52a0\u6cd5 \u9898\u76ee\u63cf\u8ff0 \u6574\u6570\u7684\u6570\u7ec4\u5f62\u5f0f num \u662f\u6309\u7167\u4ece\u5de6\u5230\u53f3\u7684\u987a\u5e8f\u8868\u793a\u5176\u6570\u5b57\u7684\u6570\u7ec4\u3002 \u4f8b\u5982\uff0c\u5bf9\u4e8e num = 1321 \uff0c\u6570\u7ec4\u5f62\u5f0f\u662f [1,3,2,1] \u3002 \u7ed9\u5b9a num \uff0c\u6574\u6570\u7684\u6570\u7ec4\u5f62\u5f0f\uff0c\u548c\u6574\u6570 k \uff0c\u8fd4\u56de \u6574\u6570 num + k \u7684\u6570\u7ec4\u5f62\u5f0f\u3002 \u89e3\u9898\u601d\u8def \u4ece\u53f3\u5230\u5de6\u8fdb\u884c\u52a0\u6cd5 \uff1a \u4ece\u6570\u7ec4 num \u7684\u6700\u540e\u4e00\u4f4d\uff08\u6700\u4f4e\u4f4d\uff09\u5f00\u59cb\u52a0\uff0c\u9010\u4f4d\u5904\u7406\u3002 \u5904\u7406\u8fdb\u4f4d \uff1a \u6bcf\u4e00\u4f4d\u7684\u548c\u53ef\u80fd\u4f1a\u4ea7\u751f\u4e00\u4e2a\u8fdb\u4f4d\uff0c\u6211\u4eec\u9700\u8981\u8bb0\u5f55\u8fd9\u4e2a\u8fdb\u4f4d\u5e76\u5728\u4e0b\u4e00\u4f4d\u7684\u52a0\u6cd5\u4e2d\u4f7f\u7528\u3002 \u904d\u5386\u7ed3\u675f\u540e\u7684\u5904\u7406 \uff1a \u5982\u679c\u5728\u904d\u5386\u7ed3\u675f\u65f6\u4ecd\u6709\u8fdb\u4f4d\uff0c\u9700\u8981\u5c06\u8fdb\u4f4d\u6dfb\u52a0\u5230\u7ed3\u679c\u4e2d\u3002 \u7ed3\u679c\u6784\u5efa \uff1a \u5c06\u8ba1\u7b97\u7684\u7ed3\u679c\u5b58\u50a8\u5728\u4e00\u4e2a\u5217\u8868\u4e2d\uff0c\u6700\u540e\u9700\u8981\u53cd\u8f6c\u8fd9\u4e2a\u5217\u8868\uff0c\u56e0\u4e3a\u6211\u4eec\u662f\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\u8ba1\u7b97\u7684\u3002 \u793a\u4f8b\u4ee3\u7801 import java.util.ArrayList; public class Solution { public ArrayList<Integer> addToArrayForm(int[] num, int k) { ArrayList<Integer> result = new ArrayList<>(); int carry = 0; // \u521d\u59cb\u5316\u8fdb\u4f4d int n = num.length; // \u6570\u7ec4\u957f\u5ea6 // \u4ece\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4f4d\u5f00\u59cb\u5904\u7406 for (int i = n - 1; i >= 0; i--) { int sum = num[i] + (k % 10) + carry; // \u5f53\u524d\u4f4d\u7684\u548c result.add(sum % 10); // \u5f53\u524d\u4f4d\u7ed3\u679c carry = sum / 10; // \u66f4\u65b0\u8fdb\u4f4d k /= 10; // \u79fb\u52a8\u5230 k \u7684\u4e0b\u4e00\u4f4d } // \u5904\u7406 k \u53ef\u80fd\u8fd8\u6709\u7684\u5269\u4f59\u4f4d while (k > 0 || carry > 0) { int sum = (k % 10) + carry; // \u5f53\u524d\u4f4d\u7684\u548c result.add(sum % 10); // \u5f53\u524d\u4f4d\u7ed3\u679c carry = sum / 10; // \u66f4\u65b0\u8fdb\u4f4d k /= 10; // \u79fb\u52a8\u5230 k \u7684\u4e0b\u4e00\u4f4d } // \u7531\u4e8e\u6211\u4eec\u662f\u4ece\u540e\u5411\u524d\u6784\u5efa\u7684\u7ed3\u679c\uff0c\u9700\u8981\u53cd\u8f6c ArrayList<Integer> finalResult = new ArrayList<>(); for (int j = result.size() - 1; j >= 0; j--) { finalResult.add(result.get(j)); } return finalResult; } } \u8bfe\u540e\u7ec3\u4e60 \u5b57\u7b26\u4e32\u5faa\u73af+\u5207\u7247 \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC 1002 \u627e\u5230\u5171\u540c\u5b57\u7b26 \u627e\u5230\u7ed9\u5b9a\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\u6240\u6709\u5b57\u7b26\u4e32\u7684\u5171\u540c\u5b57\u7b26\u3002 LC 541 \u53cd\u8f6c\u5b57\u7b26\u4e32 II \u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u6307\u5b9a\u90e8\u5206\uff0c\u6bcf\u9694\u4e00\u4e2a\u6307\u5b9a\u957f\u5ea6\u53cd\u8f6c\u4e00\u6b21\u3002 LC 771 \u73e0\u5b9d\u4e0e\u77f3\u5934 \u8ba1\u7b97\u5728\u77f3\u5934\u4e2d\u6709\u591a\u5c11\u4e2a\u73e0\u5b9d\u5b57\u7b26\u3002 LC 844 \u56de\u9000\u5b57\u7b26\u4e32\u6bd4\u8f83 \u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u8003\u8651\u5230\u56de\u9000\u5b57\u7b26\uff08\u2018#\u2019\uff09\u7684\u5f71\u54cd\u3002 LC 925 \u957f\u6309\u952e\u5165\u7684\u540d\u5b57 \u68c0\u67e5\u4e00\u4e2a\u540d\u5b57\u662f\u5426\u53ef\u4ee5\u901a\u8fc7\u957f\u6309\u53e6\u4e00\u4e2a\u540d\u5b57\u7684\u5b57\u7b26\u6765\u5b9e\u73b0\u3002 \u5b57\u7b26\u4e32\u6570\u5b66\u8fd0\u7b97 \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC 2243 \u8ba1\u7b97\u5b57\u7b26\u4e32\u4e2d\u7684\u6570\u5b57\u548c \u8ba1\u7b97\u5b57\u7b26\u4e32\u4e2d\u6240\u6709\u6570\u5b57\u5b57\u7b26\u7684\u603b\u548c\u3002 LC 66 \u52a0\u4e00 \u5728\u6570\u7ec4\u5f62\u5f0f\u7684\u6570\u5b57\u4e0a\u52a0\u4e00\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c\u7684\u6570\u7ec4\u5f62\u5f0f\u3002","title":"Lesson8 \u5b57\u7b26\u4e32\u5faa\u73af+\u5207\u7247/\u5b57\u7b26\u4e32\u6570\u5b66\u8fd0\u7b97\u4e13\u9898"},{"location":"lesson8/Lesson8%20Java/#lesson8","text":"","title":"Lesson8 \u5b57\u7b26\u4e32\u5faa\u73af+\u5207\u7247/\u5b57\u7b26\u4e32\u6570\u5b66\u8fd0\u7b97\u4e13\u9898"},{"location":"lesson8/Lesson8%20Java/#_1","text":"\u5b57\u7b26\u4e32\u5faa\u73af+\u5207\u7247 LC14 \u6700\u957f\u516c\u5171\u524d\u7f00 LC125 \u9a8c\u8bc1\u56de\u6587\u4e32 LC459 \u91cd\u590d\u7684\u5b50\u5b57\u7b26\u4e32 LC796 \u65cb\u8f6c\u5b57\u7b26\u4e32 LC28 \u67e5\u627e\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5339\u914d\u9879\u7d22\u5f15 \u5b57\u7b26\u4e32\u6570\u5b66\u8fd0\u7b97 LC415 \u5b57\u7b26\u4e32\u76f8\u52a0 LC7 \u6574\u6570\u53cd\u8f6c LC67 \u4e8c\u8fdb\u5236\u6c42\u548c LC989 \u6570\u7ec4\u5f62\u5f0f\u7684\u6574\u6570\u52a0\u6cd5 \u8bfe\u540e\u7ec3\u4e60","title":"\u76ee\u5f55"},{"location":"lesson8/Lesson8%20Java/#1","text":"","title":"1. \u5b57\u7b26\u4e32\u5faa\u73af+\u5207\u7247"},{"location":"lesson8/Lesson8%20Java/#_2","text":"","title":"\u4f8b\u9898\u8bb2\u89e3"},{"location":"lesson8/Lesson8%20Java/#lc14","text":"","title":"LC14 \u6700\u957f\u516c\u5171\u524d\u7f00"},{"location":"lesson8/Lesson8%20Java/#_3","text":"\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u67e5\u627e\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u3002 \u5982\u679c\u4e0d\u5b58\u5728\u516c\u5171\u524d\u7f00\uff0c\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32 \"\"\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"lesson8/Lesson8%20Java/#_4","text":"\u8981\u627e\u5230\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\uff0c\u6211\u4eec\u53ef\u4ee5\u4f9d\u6b21\u6bd4\u8f83\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7684\u5b57\u7b26\uff0c\u76f4\u5230\u627e\u5230\u4e0d\u5339\u914d\u7684\u4f4d\u7f6e\u4e3a\u6b62\u3002\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u591a\u79cd\u65b9\u6cd5\u89e3\u51b3\uff0c\u6bd4\u5982\u7eb5\u5411\u626b\u63cf\u3001\u6a2a\u5411\u626b\u63cf\u3001\u5206\u6cbb\u6cd5\u3001\u4e8c\u5206\u67e5\u627e\u7b49\u3002\u6211\u4eec\u8fd9\u91cc\u91c7\u7528\u4e00\u79cd\u8f83\u4e3a\u76f4\u89c2\u7684\u6a2a\u5411\u626b\u63cf\u6cd5\u3002","title":"\u9898\u76ee\u5206\u6790"},{"location":"lesson8/Lesson8%20Java/#_5","text":"\u8fb9\u754c\u60c5\u51b5 : \u5982\u679c\u5b57\u7b26\u4e32\u6570\u7ec4\u4e3a\u7a7a\uff0c\u76f4\u63a5\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002 \u5982\u679c\u5b57\u7b26\u4e32\u6570\u7ec4\u53ea\u6709\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u6700\u957f\u516c\u5171\u524d\u7f00\u5c31\u662f\u8fd9\u4e2a\u5b57\u7b26\u4e32\u672c\u8eab\u3002 \u4ece\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u5f00\u59cb : \u5047\u8bbe\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u6700\u957f\u516c\u5171\u524d\u7f00\uff0c\u63a5\u4e0b\u6765\u9010\u4e00\u4e0e\u6570\u7ec4\u4e2d\u7684\u5176\u4ed6\u5b57\u7b26\u4e32\u8fdb\u884c\u6bd4\u8f83\u3002 \u6bcf\u6b21\u6bd4\u8f83\u65f6\uff0c\u9010\u5b57\u7b26\u5730\u8fdb\u884c\u6bd4\u8f83\uff0c\u76f4\u5230\u627e\u5230\u4e0d\u5339\u914d\u7684\u5b57\u7b26\u6216\u6bd4\u8f83\u5b8c\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u6240\u6709\u5b57\u7b26\u3002 \u66f4\u65b0\u5f53\u524d\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u4e3a\u5339\u914d\u7684\u90e8\u5206\u3002 \u8fd4\u56de\u7ed3\u679c : \u6700\u540e\u8fd4\u56de\u5339\u914d\u540e\u7684\u516c\u5171\u524d\u7f00\uff0c\u5982\u679c\u6ca1\u6709\u5339\u914d\u5230\u4efb\u4f55\u524d\u7f00\uff0c\u5219\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002","title":"\u601d\u8def"},{"location":"lesson8/Lesson8%20Java/#_6","text":"class Solution { public String longestCommonPrefix(String[] strs) { // \u8fb9\u754c\u60c5\u51b5\u5904\u7406 if (strs == null || strs.length == 0) { return \"\"; } // \u521d\u59cb\u5316\u6700\u957f\u516c\u5171\u524d\u7f00\u4e3a\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32 String prefix = strs[0]; // \u4f9d\u6b21\u4e0e\u5176\u4ed6\u5b57\u7b26\u4e32\u6bd4\u8f83 for (int i = 1; i < strs.length; i++) { // \u5f53\u524d\u524d\u7f00\u4e0e\u4e0b\u4e00\u4e2a\u5b57\u7b26\u4e32\u6bd4\u8f83 while (strs[i].indexOf(prefix) != 0) { // \u7f29\u77ed\u524d\u7f00\u957f\u5ea6 prefix = prefix.substring(0, prefix.length() - 1); // \u5982\u679c\u524d\u7f00\u4e3a\u7a7a\uff0c\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32 if (prefix.isEmpty()) { return \"\"; } } } return prefix; } }","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson8/Lesson8%20Java/#lc125","text":"","title":"LC125 \u9a8c\u8bc1\u56de\u6587\u4e32"},{"location":"lesson8/Lesson8%20Java/#_7","text":"\u5982\u679c\u5728\u5c06\u6240\u6709\u5927\u5199\u5b57\u7b26\u8f6c\u6362\u4e3a\u5c0f\u5199\u5b57\u7b26\u3001\u5e76\u79fb\u9664\u6240\u6709\u975e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\u4e4b\u540e\uff0c\u77ed\u8bed\u6b63\u7740\u8bfb\u548c\u53cd\u7740\u8bfb\u90fd\u4e00\u6837\u3002\u5219\u53ef\u4ee5\u8ba4\u4e3a\u8be5\u77ed\u8bed\u662f\u4e00\u4e2a \u56de\u6587\u4e32 \u3002 \u5b57\u6bcd\u548c\u6570\u5b57\u90fd\u5c5e\u4e8e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\u3002 \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s\uff0c\u5982\u679c\u5b83\u662f\u56de\u6587\u4e32\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"lesson8/Lesson8%20Java/#_8","text":"\u6211\u4eec\u9700\u8981\u7edf\u8ba1\u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd\u4e2a\u6570\uff0c\u5355\u8bcd\u662f\u7531\u8fde\u7eed\u7684\u975e\u7a7a\u683c\u5b57\u7b26\u7ec4\u6210\u7684\u3002\u7a7a\u683c\u53ef\u4ee5\u7528\u6765\u5206\u9694\u5355\u8bcd\u3002\u9898\u76ee\u4fdd\u8bc1\u5b57\u7b26\u4e32\u4e2d\u6ca1\u6709\u4e0d\u53ef\u6253\u5370\u5b57\u7b26\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u5904\u7406\u7279\u6b8a\u5b57\u7b26\u3002","title":"\u9898\u76ee\u5206\u6790"},{"location":"lesson8/Lesson8%20Java/#_9","text":"\u5bf9\u5b57\u7b26\u4e32 s \u8fdb\u884c\u4e00\u6b21\u904d\u5386\uff0c\u5e76\u5c06\u5176\u4e2d\u7684\u5b57\u6bcd\u548c\u6570\u5b57\u5b57\u7b26\u8fdb\u884c\u4fdd\u7559\uff0c\u653e\u5728\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32 sgood \u4e2d\u3002\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad sgood \u662f\u5426\u662f\u4e00\u4e2a\u666e\u901a\u7684\u56de\u6587\u4e32\u5373\u53ef\u3002 \u53ef\u4ee5\u4f7f\u7528\u8bed\u8a00\u4e2d\u7684\u5b57\u7b26\u4e32\u7ffb\u8f6c API \u5f97\u5230 sgood \u7684\u9006\u5e8f\u5b57\u7b26\u4e32 sgood_rev\uff0c\u53ea\u8981\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u540c\uff0c\u90a3\u4e48 sgood \u5c31\u662f\u56de\u6587\u4e32\u3002","title":"\u601d\u8def"},{"location":"lesson8/Lesson8%20Java/#_10","text":"class Solution { public boolean isPalindrome(String s) { StringBuilder sgood = new StringBuilder(); // \u7528\u4e8e\u5b58\u50a8\u6709\u6548\u5b57\u7b26 int length = s.length(); // \u904d\u5386\u8f93\u5165\u5b57\u7b26\u4e32 for (int i = 0; i < length; i++) { char ch = s.charAt(i); // \u83b7\u53d6\u5f53\u524d\u5b57\u7b26 // \u5224\u65ad\u662f\u5426\u4e3a\u5b57\u6bcd\u6216\u6570\u5b57 if (Character.isLetterOrDigit(ch)) { sgood.append(Character.toLowerCase(ch)); // \u8f6c\u4e3a\u5c0f\u5199\u5e76\u6dfb\u52a0\u5230\u6709\u6548\u5b57\u7b26\u4e2d } } // \u521b\u5efa\u53cd\u8f6c\u540e\u7684\u6709\u6548\u5b57\u7b26\u5b57\u7b26\u4e32 StringBuilder sgood_rev = new StringBuilder(sgood).reverse(); // \u4f7f\u7528 contentEquals \u65b9\u6cd5\u6bd4\u8f83\u6709\u6548\u5b57\u7b26\u548c\u53cd\u8f6c\u5b57\u7b26 return sgood.contentEquals(sgood_rev); } }","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson8/Lesson8%20Java/#_11","text":"","title":"\u4e3e\u4e00\u53cd\u4e09"},{"location":"lesson8/Lesson8%20Java/#lc459","text":"","title":"LC459 \u91cd\u590d\u7684\u5b50\u5b57\u7b26\u4e32"},{"location":"lesson8/Lesson8%20Java/#_12","text":"\u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u7684\u5b57\u7b26\u4e32 s \uff0c\u68c0\u67e5\u662f\u5426\u53ef\u4ee5\u901a\u8fc7\u7531\u5b83\u7684\u4e00\u4e2a\u5b50\u4e32\u91cd\u590d\u591a\u6b21\u6784\u6210\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"lesson8/Lesson8%20Java/#_13","text":"\u904d\u5386\u53ef\u80fd\u7684\u5b50\u4e32\u957f\u5ea6 \uff1a \u4ece 1 \u5f00\u59cb\u904d\u5386\u5230\u5b57\u7b26\u4e32\u957f\u5ea6\u7684\u4e00\u534a\uff0c\u68c0\u67e5\u5b57\u7b26\u4e32\u662f\u5426\u80fd\u901a\u8fc7\u91cd\u590d\u67d0\u4e2a\u5b50\u4e32\u6784\u6210\u3002 \u5224\u65ad\u662f\u5426\u53ef\u4ee5\u6574\u9664 \uff1a \u901a\u8fc7\u68c0\u67e5 len % i == 0 \uff0c\u5224\u65ad\u5f53\u524d\u5b50\u4e32\u7684\u957f\u5ea6 i \u662f\u5426\u53ef\u4ee5\u6574\u9664\u6574\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002\u5982\u679c\u53ef\u4ee5\u6574\u9664\uff0c\u90a3\u4e48 s.length() \u5fc5\u987b\u662f\u5b50\u4e32\u957f\u5ea6\u7684\u500d\u6570\u3002 \u6784\u5efa\u65b0\u5b57\u7b26\u4e32 \uff1a \u53d6\u51fa\u5f53\u524d\u7684\u5b50\u4e32 substring \uff0c\u7136\u540e\u901a\u8fc7 StringBuilder \u5c06\u8be5\u5b50\u4e32\u91cd\u590d (len / i) \u6b21\u6784\u9020\u51fa\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32\u3002 \u6bd4\u8f83 \uff1a \u5982\u679c\u65b0\u6784\u5efa\u7684\u5b57\u7b26\u4e32\u4e0e\u539f\u5b57\u7b26\u4e32 s \u76f8\u540c\uff0c\u5219\u8fd4\u56de true \uff0c\u8868\u793a s \u662f\u901a\u8fc7\u8be5\u5b50\u4e32\u7684\u91cd\u590d\u6784\u6210\u7684\u3002 \u65f6\u95f4\u590d\u6742\u5ea6 \uff1a \u6700\u574f\u60c5\u51b5\u4e0b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n^2) \uff0c\u56e0\u4e3a\u5916\u5c42\u5faa\u73af\u8981\u6267\u884c n / 2 \u6b21\uff0c\u4e14\u6bcf\u6b21\u9700\u8981\u6784\u5efa\u548c\u6bd4\u8f83\u5b57\u7b26\u4e32\u3002","title":"\u89e3\u9898\u601d\u8def"},{"location":"lesson8/Lesson8%20Java/#_14","text":"class Solution { public static repeatedSubstringPattern(String s) { int n = s.length(); // \u904d\u5386\u53ef\u80fd\u7684\u5b50\u4e32\u957f\u5ea6 for (int i = 1; i <= n / 2; i++) { // \u68c0\u67e5\u662f\u5426\u53ef\u4ee5\u6574\u9664 if (n % i == 0) { String substring = s.substring(0, i); // \u6784\u9020\u7531\u5b50\u4e32\u91cd\u590d\u7684\u5b57\u7b26\u4e32 StringBuilder repeated = new StringBuilder(); for (int j = 0; j < n / i; j++) { repeated.append(substring); } // \u6bd4\u8f83\u6784\u9020\u7684\u5b57\u7b26\u4e32\u4e0e\u539f\u5b57\u7b26\u4e32 if (repeated.toString().equals(s)) { return true; } } } return false; } }","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"lesson8/Lesson8%20Java/#_15","text":"\u53ef\u4ee5\u5229\u7528\u5b57\u7b26\u4e32\u7684\u7279\u6027\u6765\u8fdb\u4e00\u6b65\u4f18\u5316\uff1a \u5c06\u5b57\u7b26\u4e32 s \u81ea\u8eab\u62fc\u63a5\u4e00\u904d\uff0c\u5f97\u5230 s + s \u3002 \u53bb\u6389\u5f00\u5934\u548c\u7ed3\u5c3e\u7684\u5b57\u7b26\uff0c\u68c0\u67e5 s \u662f\u5426\u5728\u65b0\u7684\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u3002 \u5982\u679c\u51fa\u73b0\uff0c\u8bf4\u660e s \u53ef\u4ee5\u7531\u67d0\u4e2a\u5b50\u4e32\u6784\u6210\u3002","title":"\u66f4\u9ad8\u6548\u7684\u89e3\u6cd5"},{"location":"lesson8/Lesson8%20Java/#_16","text":"class Solution { public boolean repeatedSubstringPattern(String s) { String doubled = s + s; // \u5c06\u5b57\u7b26\u4e32\u62fc\u63a5 String subString = doubled.substring(1, doubled.length() - 1); // \u53bb\u6389\u9996\u5c3e\u5b57\u7b26 return subString.contains(s); // \u68c0\u67e5\u662f\u5426\u5305\u542b\u539f\u5b57\u7b26\u4e32 } }","title":"\u4f18\u5316\u793a\u4f8b\u4ee3\u7801"},{"location":"lesson8/Lesson8%20Java/#_17","text":"","title":"\u8bc1\u660e\uff1a\u5b57\u7b26\u4e32\u62fc\u63a5\u540e\u6390\u5934\u53bb\u5c3e\u53ef\u4ee5\u7528\u4e8e\u5224\u65ad\u91cd\u590d\u7684\u5b50\u5b57\u7b26\u4e32"},{"location":"lesson8/Lesson8%20Java/#_18","text":"\u524d\u7f00\uff08Prefix\uff09 \uff1a\u4ece\u5b57\u7b26\u4e32\u7684 \u5f00\u5934 \u5f00\u59cb\u7684\u8fde\u7eed\u5b57\u7b26\u5b50\u4e32\u3002\u4f8b\u5982\uff0c\u5b57\u7b26\u4e32 \"abcde\" \u7684\u524d\u7f00\u6709\uff1a \u524d\u7f00 1\uff1a \"a\" \u524d\u7f00 2\uff1a \"ab\" \u524d\u7f00 3\uff1a \"abc\" \u524d\u7f00 4\uff1a \"abcd\" \u524d\u7f00 5\uff1a \"abcde\" \uff08\u6574\u4e2a\u5b57\u7b26\u4e32\u672c\u8eab\u4e5f\u662f\u4e00\u4e2a\u524d\u7f00\uff09 \u540e\u7f00\uff08Suffix\uff09 \uff1a\u4ece\u5b57\u7b26\u4e32\u7684 \u7ed3\u5c3e \u5f00\u59cb\u7684\u8fde\u7eed\u5b57\u7b26\u5b50\u4e32\u3002\u4f8b\u5982\uff0c\u5b57\u7b26\u4e32 \"abcde\" \u7684\u540e\u7f00\u6709\uff1a \u540e\u7f00 1\uff1a \"e\" \u540e\u7f00 2\uff1a \"de\" \u540e\u7f00 3\uff1a \"cde\" \u540e\u7f00 4\uff1a \"bcde\" \u540e\u7f00 5\uff1a \"abcde\" \uff08\u6574\u4e2a\u5b57\u7b26\u4e32\u672c\u8eab\u4e5f\u662f\u4e00\u4e2a\u540e\u7f00\uff09","title":"\u8865\u5145\uff1a\u4ec0\u4e48\u662f\u524d\u7f00\u548c\u540e\u7f00\uff1f"},{"location":"lesson8/Lesson8%20Java/#_19","text":"\u4e3a\u4e86\u8bc1\u660e\u7ed9\u5b9a\u5b57\u7b26\u4e32 s \u662f\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\u5145\u5206\u5fc5\u8981\u6027\uff0c\u6211\u4eec\u9700\u8981\u4ece\u4e24\u4e2a\u65b9\u5411\u6765\u8fdb\u884c\u8bc1\u660e\uff1a \u5145\u5206\u6027 \uff1a\u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u4e32 s \u662f\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\uff0c\u90a3\u4e48\u5728\u62fc\u63a5\u540e\u7684\u5b57\u7b26\u4e32 s + s \u4e2d\uff0c\u6390\u5934\u53bb\u5c3e\u540e\uff0c\u4e00\u5b9a\u80fd\u518d\u6b21\u627e\u5230 s \u3002 \u5fc5\u8981\u6027 \uff1a\u5982\u679c\u5728\u6390\u5934\u53bb\u5c3e\u7684 s + s \u4e2d\u627e\u5230\u4e86 s \uff0c\u90a3\u4e48 s \u4e00\u5b9a\u662f\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\u3002","title":"\u5145\u5206\u5fc5\u8981\u6027\u8bc1\u660e"},{"location":"lesson8/Lesson8%20Java/#1_1","text":"\u5047\u8bbe \uff1a\u8bbe\u5b57\u7b26\u4e32 s \u662f\u7531\u4e00\u4e2a\u8f83\u77ed\u7684\u5b50\u4e32 p \u91cd\u590d\u591a\u6b21\u6784\u6210\u7684\uff0c\u5373 s = p + p + ... + p \uff08\u5047\u8bbe p \u91cd\u590d k \u6b21\uff09\u3002 \u4e3e\u4f8b \uff1a\u6bd4\u5982 s = \"abab\" \uff0c\u8fd9\u662f\u7531 p = \"ab\" \u91cd\u590d\u4e24\u6b21\u6784\u6210\u7684\u3002 \u62fc\u63a5 s + s \uff1a\u6211\u4eec\u5c06 s \u62fc\u63a5\u5f97\u5230 s + s \uff0c\u4f8b\u5982\uff1a s + s = \"abababab\" \u63a5\u7740\uff0c\u6390\u5934\u53bb\u5c3e\uff0c\u53bb\u6389\u9996\u5c3e\u5b57\u7b26\uff0c\u5f97\u5230 new_s = (s + s).substring(1, (s + s).length() - 1) \uff0c\u5bf9\u4e8e\u4e0a\u9762\u7684\u4f8b\u5b50\uff1a new_s = \"bababa\" \u5bfb\u627e s \u5728 new_s \u4e2d\u7684\u51fa\u73b0 \uff1a\u7531\u4e8e s \u662f\u7531\u5b50\u4e32 p \u591a\u6b21\u91cd\u590d\uff08\u81f3\u5c11\u4e24\u6b21\uff09\u6784\u6210\u7684\uff0c s + s \u5c31\u4f1a\u91cd\u590d\u81f3\u5c11 4 \u6b21 p \uff0c\u6390\u5934\u53bb\u5c3e\u540e\uff0c\u91cd\u590d\u81f3\u5c11 2 \u6b21 p \uff0c\u524d\u7f00\u548c\u540e\u7f00\u5fc5\u7136\u6709\u91cd\u53e0\uff0c\u4e00\u5b9a\u80fd\u518d\u6b21\u627e\u5230 s \u3002 new_s = \"bababa\" ^^^^ (\u8fd9\u91cc\u627e\u5230 \"abab\") \u5145\u5206\u6027\u8bc1\u6bd5\u3002","title":"1. \u5145\u5206\u6027"},{"location":"lesson8/Lesson8%20Java/#2","text":"\u5047\u8bbe \uff1a\u6211\u4eec\u5df2\u7ecf\u5728\u53bb\u6389\u9996\u5c3e\u5b57\u7b26\u7684 s + s \u4e2d\u518d\u6b21\u627e\u5230\u4e86 s \u3002\u73b0\u5728\u6211\u4eec\u9700\u8981\u8bc1\u660e\uff0c s \u4e00\u5b9a\u662f\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\u3002 \u6784\u9020 new_s \uff1a\u9996\u5148\uff0c\u6784\u9020 new_s = (s + s).substring(1, (s + s).length() - 1) \uff0c\u5047\u8bbe s \u5728 new_s \u4e2d\u5339\u914d\u7684\u4f4d\u7f6e\u662f\u4ece i \u5f00\u59cb\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u627e\u5230\u4e86\u4e00\u4e2a\u504f\u79fb\u91cf i \uff0c\u4f7f\u5f97 s.substring(i) + s.substring(0, i) \u548c s \u5b8c\u5168\u76f8\u540c\uff0c\u8fd9\u610f\u5473\u7740\uff1a s == s.substring(i) + s.substring(0, i); \u4e5f\u5c31\u662f\u8bf4\uff0c s \u7684\u67d0\u4e2a \u540e\u7f00 \u4e0e\u5b83\u7684\u67d0\u4e2a \u524d\u7f00 \u91cd\u53e0\u5339\u914d\u3002 \u4e3e\u4f8b\u8bf4\u660e \uff1a s + s = \"abababab\" \u53bb\u6389\u9996\u5c3e\u5b57\u7b26\u540e\u5f97\u5230\uff1anew_s = \"bababa\" s \u7684\u524d\u7f00\u6709\uff1a 'a', 'ab', 'aba', 'abab' s \u7684\u540e\u7f00\u6709\uff1a 'b', 'ab', 'bab', 'abab' \u53ef\u4ee5\u53d1\u73b0\uff0c s = \"abab\" \u5728 \"bababa\" \u4e2d\u786e\u5b9e\u518d\u6b21\u51fa\u73b0\uff0c\u4e14\u5339\u914d\u53d1\u751f\u5728\u4ea4\u754c\u5904\uff08\u504f\u79fb\u91cf\u4e3a1\uff09\uff0c\u8fd9\u65f6 s \u7684\u524d\u7f00\u548c\u540e\u7f00\u51fa\u73b0\u4e86\u91cd\u5408\u3002 \u8fd9\u79cd\u73b0\u8c61\u8bf4\u660e s \u7684\u524d\u7f00\u548c\u540e\u7f00\u5b58\u5728\u4ea4\u66ff\u91cd\u53e0\uff0c\u8868\u660e s \u5177\u6709\u5468\u671f\u6027\uff0c\u610f\u5473\u7740 s \u662f\u7531\u4e00\u4e2a\u8f83\u77ed\u7684\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c s \u7684\u524d\u7f00\u548c\u540e\u7f00\u6709\u67d0\u79cd\u91cd\u53e0\uff0c\u5f62\u6210\u4e86\u5468\u671f\u6027\uff0c\u90a3\u4e48 s \u5c31\u53ef\u4ee5\u901a\u8fc7\u91cd\u590d\u67d0\u4e2a\u5b50\u4e32\u6784\u6210\u3002 \u5fc5\u8981\u6027\u8bc1\u6bd5\u3002","title":"2. \u5fc5\u8981\u6027"},{"location":"lesson8/Lesson8%20Java/#_20","text":"\u6211\u4eec\u5df2\u7ecf\u8bc1\u660e\u4e86\uff1a \u5145\u5206\u6027 \uff1a\u5982\u679c s \u662f\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\uff0c\u90a3\u4e48\u5728 s + s \u4e2d\u6390\u5934\u53bb\u5c3e\u540e\uff0c\u4e00\u5b9a\u80fd\u591f\u518d\u6b21\u627e\u5230 s \u3002\u8fd9\u662f\u56e0\u4e3a\u91cd\u590d\u5b50\u4e32\u4f1a\u4f7f\u5f97\u524d\u7f00\u548c\u540e\u7f00\u6709\u91cd\u53e0\u3002 \u5fc5\u8981\u6027 \uff1a\u5982\u679c\u5728\u6390\u5934\u53bb\u5c3e\u7684 s + s \u4e2d\u627e\u5230\u4e86 s \uff0c\u90a3\u4e48 s \u4e00\u5b9a\u662f\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\u3002\u8fd9\u662f\u56e0\u4e3a\u53ea\u6709\u5f53 s \u5177\u6709\u5468\u671f\u6027\u65f6\uff0c\u5b83\u7684\u524d\u7f00\u548c\u540e\u7f00\u624d\u4f1a\u4ea4\u66ff\u91cd\u53e0\uff0c\u5f62\u6210\u5339\u914d\u3002 \u56e0\u6b64\uff0c\u62fc\u63a5 s + s \u5e76\u53bb\u6389\u9996\u5c3e\u5b57\u7b26\u540e\u80fd\u5426\u518d\u6b21\u627e\u5230 s \uff0c\u53ef\u4ee5\u7528\u6765\u5224\u65ad s \u662f\u5426\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u3002","title":"\u603b\u7ed3\uff1a"},{"location":"lesson8/Lesson8%20Java/#_21","text":"\u5145\u5206\u6027\u53ca\u5fc5\u8981\u6027\u8bc1\u660e Leetcode\u5b98\u65b9\u9898\u89e3\u8bc1\u660e","title":"\u8865\u5145\u6750\u6599\uff1a"},{"location":"lesson8/Lesson8%20Java/#lc796","text":"","title":"LC796 \u65cb\u8f6c\u5b57\u7b26\u4e32"},{"location":"lesson8/Lesson8%20Java/#_22","text":"\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32, s \u548c goal \u3002\u5982\u679c\u5728\u82e5\u5e72\u6b21\u65cb\u8f6c\u64cd\u4f5c\u4e4b\u540e\uff0c s \u80fd\u53d8\u6210 goal \uff0c\u90a3\u4e48\u8fd4\u56de true \u3002 s \u7684 \u65cb\u8f6c\u64cd\u4f5c \u5c31\u662f\u5c06 s \u6700\u5de6\u8fb9\u7684\u5b57\u7b26\u79fb\u52a8\u5230\u6700\u53f3\u8fb9\u3002 \u4f8b\u5982, \u82e5 s = 'abcde'\uff0c\u5728\u65cb\u8f6c\u4e00\u6b21\u4e4b\u540e\u7ed3\u679c\u5c31\u662f'bcdea' \u3002 \u8981\u5224\u65ad\u5b57\u7b26\u4e32 s \u662f\u5426\u53ef\u4ee5\u901a\u8fc7\u82e5\u5e72\u6b21\u65cb\u8f6c\u64cd\u4f5c\u53d8\u6210\u5b57\u7b26\u4e32 goal \uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u4ee5\u4e0b\u601d\u8def\u8fdb\u884c\u89e3\u51b3\uff1a","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson8/Lesson8%20Java/#_23","text":"\u5b57\u7b26\u4e32\u65cb\u8f6c\u7684\u7279\u6027 \uff1a \u5982\u679c\u6211\u4eec\u5c06\u5b57\u7b26\u4e32 s \u8fdb\u884c\u4e24\u6b21\u62fc\u63a5\uff0c\u5f97\u5230 s + s \uff0c\u8fd9\u4e2a\u65b0\u5b57\u7b26\u4e32\u5305\u542b\u4e86\u6240\u6709\u53ef\u80fd\u7684\u65cb\u8f6c\u5f62\u5f0f\u3002 \u4f8b\u5982\uff1a \u5bf9\u4e8e s = \"abcde\" \uff0c\u62fc\u63a5\u540e s + s = \"abcdeabcde\" \uff0c\u5176\u4e2d\u5305\u542b\u4e86 \"abcde\" \u7684\u6240\u6709\u65cb\u8f6c\u5f62\u5f0f\uff0c\u5982 \"abcde\" \u3001 \"bcdea\" \u3001 \"cdeab\" \u3001 \"deabc\" \u548c \"eabcd\" \u3002 \u5224\u65ad goal \u662f\u5426\u5728 s + s \u4e2d \uff1a \u53ea\u9700\u68c0\u67e5 goal \u662f\u5426\u662f s + s \u7684\u5b50\u4e32\u3002 \u5982\u679c goal \u662f s + s \u7684\u5b50\u4e32\uff0c\u5219\u8fd4\u56de true \uff0c\u5426\u5219\u8fd4\u56de false \u3002","title":"\u89e3\u9898\u601d\u8def"},{"location":"lesson8/Lesson8%20Java/#_24","text":"class Solution { public boolean rotateString(String s, String goal) { // \u68c0\u67e5\u957f\u5ea6\u662f\u5426\u76f8\u7b49 if (s.length() != goal.length()) { return false; } // \u62fc\u63a5\u5b57\u7b26\u4e32 String doubled = s + s; // \u68c0\u67e5 goal \u662f\u5426\u4e3a doubled \u7684\u5b50\u4e32 return doubled.contains(goal); } }","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"lesson8/Lesson8%20Java/#_25","text":"class Solution { public boolean rotateString(String s, String goal) { return s.length() == goal.length() && (s + s).contains(goal); } }","title":"\u7b80\u6d01\u5199\u6cd5"},{"location":"lesson8/Lesson8%20Java/#lc28","text":"","title":"LC28 \u67e5\u627e\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5339\u914d\u9879\u7d22\u5f15"},{"location":"lesson8/Lesson8%20Java/#_26","text":"\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 haystack \u548c needle \uff0c\u4f60\u9700\u8981\u5728 haystack \u5b57\u7b26\u4e32\u4e2d\u627e\u51fa needle \u5b57\u7b26\u4e32\u51fa\u73b0\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\uff08\u4ece 0 \u5f00\u59cb\uff09\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de -1 \u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson8/Lesson8%20Java/#_27","text":"\u5982\u679c needle \u4e3a\u7a7a\u5b57\u7b26\u4e32\uff0c\u76f4\u63a5\u8fd4\u56de 0 \u3002 \u904d\u5386 haystack \uff0c\u4ece\u6bcf\u4e2a\u7d22\u5f15\u4f4d\u7f6e\u68c0\u67e5\u662f\u5426\u4e0e needle \u5339\u914d\u3002 \u5982\u679c\u5339\u914d\u6210\u529f\uff0c\u8fd4\u56de\u8be5\u7d22\u5f15\uff0c\u5426\u5219\u7ee7\u7eed\u904d\u5386\u3002 \u5982\u679c\u904d\u5386\u7ed3\u675f\u540e\u672a\u627e\u5230\uff0c\u8fd4\u56de -1 \u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson8/Lesson8%20Java/#_28","text":"class Solution { public int strStr(String haystack, String needle) { // \u5982\u679cneedle\u4e3a\u7a7a\u5b57\u7b26\u4e32\uff0c\u76f4\u63a5\u8fd4\u56de0 if (needle.isEmpty()) { return 0; } // \u83b7\u53d6\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6 int n = haystack.length(); int m = needle.length(); // \u904d\u5386haystack\uff0c\u76f4\u5230\u5269\u4f59\u7684\u90e8\u5206\u957f\u5ea6\u5c0f\u4e8eneedle\u957f\u5ea6 for (int i = 0; i <= n - m; i++) { // \u6bd4\u8f83\u4ecei\u5f00\u59cb\u7684\u5b50\u4e32\u662f\u5426\u7b49\u4e8eneedle if (haystack.substring(i, i + m).equals(needle)) { return i; } } // \u5982\u679c\u904d\u5386\u7ed3\u675f\u540e\u6ca1\u6709\u627e\u5230\uff0c\u8fd4\u56de-1 return -1; } }","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson8/Lesson8%20Java/#2_1","text":"\u5b57\u7b26\u4e32\u6570\u5b66\u6a21\u62df\u7684\u57fa\u672c\u89e3\u9898\u601d\u8def\u4e3b\u8981\u6d89\u53ca\u5982\u4f55\u901a\u8fc7\u9010\u6b65\u64cd\u4f5c\u548c\u7b80\u5355\u7684\u6570\u5b66\u8fd0\u7b97\uff0c\u5904\u7406\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u6570\u5b57\u8ba1\u7b97\u3002","title":"2. \u5b57\u7b26\u4e32\u6570\u5b66\u8fd0\u7b97"},{"location":"lesson8/Lesson8%20Java/#_29","text":"\u5b57\u7b26\u8f6c\u6570\u5b57 \uff1a \u5b57\u7b26\u4e32\u4e2d\u7684\u6570\u5b57\u662f\u4ee5\u5b57\u7b26\u7684\u5f62\u5f0f\u5b58\u5728\u7684\uff0c\u4f8b\u5982\u5b57\u7b26 '0' \u5230 '9' \u3002 \u53ef\u4ee5\u901a\u8fc7 char - '0' \u5c06\u5b57\u7b26\u8f6c\u4e3a\u5bf9\u5e94\u7684\u6570\u5b57\u3002\u4f8b\u5982\uff0c '5' - '0' \u7684\u7ed3\u679c\u4e3a 5 \u3002 \u8fdb\u4f4d\u5904\u7406 \uff1a \u5728\u8fdb\u884c\u52a0\u6cd5\u8fd0\u7b97\u65f6\uff0c\u5982\u679c\u67d0\u4e00\u4f4d\u7684\u548c\u5927\u4e8e\u6216\u7b49\u4e8e 10 \uff0c\u5219\u9700\u8981\u5904\u7406\u8fdb\u4f4d\uff08carry\uff09\uff0c\u5c06 1 \u52a0\u5230\u4e0b\u4e00\u4f4d\u7684\u8ba1\u7b97\u4e2d\u3002 \u8fdb\u4f4d\u7684\u8ba1\u7b97\u53ef\u4ee5\u901a\u8fc7 carry = sum / 10 \u6765\u5b9e\u73b0\uff0c\u800c\u5f53\u524d\u4f4d\u7684\u7ed3\u679c\u5219\u662f sum % 10 \u3002 \u9006\u5e8f\u8ba1\u7b97 \uff1a \u5b57\u7b26\u4e32\u901a\u5e38\u4ece\u53f3\u5230\u5de6\u8fdb\u884c\u52a0\u6cd5\uff0c\u56e0\u4e3a\u6211\u4eec\u4ece\u4e2a\u4f4d\u5f00\u59cb\u3002\u5904\u7406\u5b8c\u6700\u540e\u4e00\u4f4d\u540e\uff0c\u7ee7\u7eed\u5904\u7406\u5341\u4f4d\u3001\u767e\u4f4d\u7b49\u3002 \u4e3a\u4e86\u65b9\u4fbf\u5b58\u50a8\u7ed3\u679c\uff0c\u901a\u5e38\u4f1a\u4f7f\u7528 StringBuilder \u9010\u4f4d\u6dfb\u52a0\uff0c\u6700\u540e\u518d\u53cd\u8f6c\u5b57\u7b26\u4e32\u4ee5\u83b7\u5f97\u6b63\u786e\u7684\u987a\u5e8f\u3002","title":"\u57fa\u672c\u6982\u5ff5"},{"location":"lesson8/Lesson8%20Java/#_30","text":"","title":"\u4f8b\u9898\u8bb2\u89e3"},{"location":"lesson8/Lesson8%20Java/#lc415","text":"","title":"LC415 \u5b57\u7b26\u4e32\u76f8\u52a0"},{"location":"lesson8/Lesson8%20Java/#_31","text":"\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u975e\u8d1f\u6574\u6570 num1 \u548c num2 \uff0c\u8ba1\u7b97\u5b83\u4eec\u7684\u548c\u5e76\u540c\u6837\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u8fd4\u56de\u3002 \u4f60\u4e0d\u80fd\u4f7f\u7528\u4efb\u4f55\u5167\u5efa\u7684\u7528\u4e8e\u5904\u7406\u5927\u6574\u6570\u7684\u5e93\uff08\u6bd4\u5982 BigInteger\uff09\uff0c\u4e5f\u4e0d\u80fd\u76f4\u63a5\u5c06\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6574\u6570\u5f62\u5f0f\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"lesson8/Lesson8%20Java/#_32","text":"\u8981\u8ba1\u7b97\u4e24\u4e2a\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u975e\u8d1f\u6574\u6570 num1 \u548c num2 \u7684\u548c\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c\u4e3a\u5b57\u7b26\u4e32\u5f62\u5f0f\uff0c\u6211\u4eec\u9700\u8981\u624b\u52a8\u6a21\u62df\u52a0\u6cd5\u7684\u8fc7\u7a0b\uff0c\u7c7b\u4f3c\u4e8e\u5728\u7eb8\u4e0a\u8fdb\u884c\u52a0\u6cd5\u8ba1\u7b97\u3002\u4e0b\u9762\u662f\u8be6\u7ec6\u7684\u89e3\u9898\u601d\u8def\u548c\u6b65\u9aa4\u3002","title":"\u9898\u76ee\u5206\u6790"},{"location":"lesson8/Lesson8%20Java/#_33","text":"\u4ece\u53f3\u5230\u5de6\u904d\u5386 \uff1a \u52a0\u6cd5\u901a\u5e38\u662f\u4ece\u4e2a\u4f4d\u5f00\u59cb\u8ba1\u7b97\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4ece\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u5f00\u59cb\u904d\u5386\u3002 \u9010\u4f4d\u76f8\u52a0 \uff1a \u5bf9\u4e8e num1 \u548c num2 \u4e2d\u7684\u6bcf\u4e00\u4f4d\uff0c\u5206\u522b\u5c06\u5b83\u4eec\u8f6c\u5316\u4e3a\u6570\u5b57\uff0c\u8fdb\u884c\u52a0\u6cd5\u64cd\u4f5c\u3002 \u9700\u8981\u8003\u8651\u8fdb\u4f4d\uff08carry\uff09\u7684\u5f71\u54cd\uff0c\u5373\u5982\u679c\u67d0\u4e00\u4f4d\u7684\u548c\u5927\u4e8e\u6216\u7b49\u4e8e 10\uff0c\u5219\u9700\u8981\u5c06 1 \u8fdb\u4f4d\u5230\u4e0b\u4e00\u4f4d\u3002 \u5904\u7406\u4e0d\u540c\u957f\u5ea6\u7684\u5b57\u7b26\u4e32 \uff1a \u5728\u8fdb\u884c\u52a0\u6cd5\u65f6\uff0c\u5982\u679c\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e0d\u540c\uff0c\u6211\u4eec\u9700\u8981\u786e\u4fdd\u4ece\u6700\u53f3\u8fb9\u5f00\u59cb\u6dfb\u52a0\u4e0a\u77ed\u5b57\u7b26\u4e32\u7684\u7f3a\u5931\u90e8\u5206\u3002 \u4f8b\u5982\uff0c\u5bf9\u4e8e num1 \u957f\u5ea6\u4e3a 5 \u548c num2 \u957f\u5ea6\u4e3a 3 \u7684\u60c5\u51b5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u8ba1\u7b97\u65f6\u8003\u8651 num2 \u7684\u524d\u4e09\u4f4d\u3002 \u5904\u7406\u6700\u540e\u7684\u8fdb\u4f4d \uff1a \u5982\u679c\u904d\u5386\u7ed3\u675f\u540e\u8fd8\u6709\u8fdb\u4f4d\uff08carry\uff09\u672a\u5904\u7406\uff0c\u9700\u8981\u5c06\u5176\u6dfb\u52a0\u5230\u7ed3\u679c\u4e2d\u3002 \u7ed3\u679c\u62fc\u63a5 \uff1a \u7531\u4e8e\u6211\u4eec\u662f\u4ece\u540e\u5411\u524d\u8ba1\u7b97\u7684\uff0c\u56e0\u6b64\u6700\u7ec8\u7684\u7ed3\u679c\u9700\u8981\u53cd\u8f6c\u4e00\u4e0b\u3002","title":"\u89e3\u9898\u601d\u8def"},{"location":"lesson8/Lesson8%20Java/#_34","text":"public class Solution{ public static String addStrings(String num1, String num2) { StringBuilder result = new StringBuilder(); int carry = 0; // \u8fdb\u4f4d int i = num1.length() - 1; // num1 \u7684\u6700\u540e\u4e00\u4f4d\u7d22\u5f15 int j = num2.length() - 1; // num2 \u7684\u6700\u540e\u4e00\u4f4d\u7d22\u5f15 // \u5faa\u73af\u76f4\u5230 num1 \u548c num2 \u90fd\u904d\u5386\u5b8c while (i >= 0 || j >= 0 || carry > 0) { int sum = carry; // \u4ece\u8fdb\u4f4d\u5f00\u59cb if (i >= 0) { sum += num1.charAt(i) - '0'; // \u5c06\u5b57\u7b26\u8f6c\u4e3a\u6570\u5b57 i--; // \u79fb\u52a8\u5230\u4e0a\u4e00\u4f4d } if (j >= 0) { sum += num2.charAt(j) - '0'; // \u5c06\u5b57\u7b26\u8f6c\u4e3a\u6570\u5b57 j--; // \u79fb\u52a8\u5230\u4e0a\u4e00\u4f4d } result.append(sum % 10); // \u5f53\u524d\u4f4d\u7684\u7ed3\u679c carry = sum / 10; // \u66f4\u65b0\u8fdb\u4f4d } return result.reverse().toString(); // \u53cd\u8f6c\u7ed3\u679c\u5e76\u8fd4\u56de } }","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"lesson8/Lesson8%20Java/#lc7","text":"","title":"LC7 \u6574\u6570\u53cd\u8f6c"},{"location":"lesson8/Lesson8%20Java/#_35","text":"\u7ed9\u4f60\u4e00\u4e2a 32 \u4f4d\u7684\u6709\u7b26\u53f7\u6574\u6570 x \uff0c\u8fd4\u56de\u5c06 x \u4e2d\u7684\u6570\u5b57\u90e8\u5206\u53cd\u8f6c\u540e\u7684\u7ed3\u679c\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"lesson8/Lesson8%20Java/#_36","text":"\u53d6\u51fa\u6700\u540e\u4e00\u4f4d\u6570\u5b57 \uff1a digit = x % 10 \u7528\u4e8e\u63d0\u53d6 x \u7684\u6700\u540e\u4e00\u4f4d\u6570\u5b57\u3002 \u66f4\u65b0\u7ed3\u679c \uff1a result = result * 10 + digit \u5c06\u6570\u5b57\u52a0\u5165\u5230 result \u4e2d\uff0c\u9010\u6b65\u6784\u5efa\u53cd\u8f6c\u540e\u7684\u6574\u6570\u3002 \u79fb\u9664\u6700\u540e\u4e00\u4f4d\u6570\u5b57 \uff1a x /= 10 \u7528\u4e8e\u53bb\u9664 x \u7684\u6700\u540e\u4e00\u4f4d\u6570\u5b57\u3002 \u6ea2\u51fa\u68c0\u67e5 \uff1a \u5f53 result > Integer.MAX_VALUE / 10 \u65f6\uff0c\u82e5\u7ee7\u7eed\u6dfb\u52a0\u4e00\u4f4d\u6570\u5b57\uff0c\u53cd\u8f6c\u7ed3\u679c\u5c06\u8d85\u8fc7 Integer.MAX_VALUE \u3002 \u5f53 result == Integer.MAX_VALUE / 10 \u65f6\uff0c\u6700\u540e\u4e00\u4f4d\u6570\u5b57 digit \u5fc5\u987b\u5c0f\u4e8e\u7b49\u4e8e 7\uff08\u5373\u6700\u5927\u503c\u7684\u6700\u540e\u4e00\u4f4d\uff09\u3002 \u7c7b\u4f3c\u5730\uff0c\u5904\u7406\u8d1f\u6570\u65f6\u4e5f\u8981\u68c0\u67e5\u6700\u5c0f\u503c Integer.MIN_VALUE \uff0c\u5e76\u786e\u4fdd digit \u5c0f\u4e8e\u7b49\u4e8e -8\uff08\u6700\u5c0f\u503c\u7684\u6700\u540e\u4e00\u4f4d\uff09\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a\u5982\u679c\u6ca1\u6709\u6ea2\u51fa\uff0c\u5219\u8fd4\u56de\u53cd\u8f6c\u540e\u7684\u6574\u6570\uff1b\u5982\u679c\u6ea2\u51fa\u5219\u8fd4\u56de 0\u3002","title":"\u89e3\u9898\u601d\u8def"},{"location":"lesson8/Lesson8%20Java/#_37","text":"Integer.MAX_VALUE = 2147483647 \uff0c\u6700\u540e\u4e00\u4f4d\u662f 7\u3002 Integer.MIN_VALUE = -2147483648 \uff0c\u6700\u540e\u4e00\u4f4d\u662f -8\u3002","title":"\u6ea2\u51fa\u6761\u4ef6\u8bf4\u660e"},{"location":"lesson8/Lesson8%20Java/#_38","text":"class Solution { public int reverse(int x) { int result = 0; while (x != 0) { int digit = x % 10; // \u68c0\u67e5\u662f\u5426\u4f1a\u6ea2\u51fa\uff1a\u5982\u679c result \u8d85\u8fc7\u4e86\u8fb9\u754c\uff0c\u8fd4\u56de 0 if (result > Integer.MAX_VALUE / 10 || (result == Integer.MAX_VALUE / 10 && digit > 7)) { return 0; } if (result < Integer.MIN_VALUE / 10 || (result == Integer.MIN_VALUE / 10 && digit < -8)) { return 0; } // \u6784\u5efa\u53cd\u8f6c\u540e\u7684\u7ed3\u679c result = result * 10 + digit; // \u79fb\u9664 x \u7684\u6700\u540e\u4e00\u4f4d x /= 10; } return result; } }","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson8/Lesson8%20Java/#_39","text":"","title":"\u4e3e\u4e00\u53cd\u4e09"},{"location":"lesson8/Lesson8%20Java/#lc67","text":"","title":"LC67 \u4e8c\u8fdb\u5236\u6c42\u548c"},{"location":"lesson8/Lesson8%20Java/#_40","text":"\u7ed9\u4f60\u4e24\u4e2a\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32 a \u548c b \uff0c\u4ee5\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\u8fd4\u56de\u5b83\u4eec\u7684\u548c\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"lesson8/Lesson8%20Java/#_41","text":"\u4ece\u53f3\u5230\u5de6\u904d\u5386 \uff1a \u7531\u4e8e\u4e8c\u8fdb\u5236\u52a0\u6cd5\u662f\u4ece\u6700\u53f3\u4fa7\u7684\u4f4d\uff08\u6700\u4f4e\u4f4d\uff09\u5f00\u59cb\u7684\uff0c\u6211\u4eec\u9700\u8981\u4ece\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u5f00\u59cb\u5904\u7406\u3002 \u9010\u4f4d\u76f8\u52a0 \uff1a \u4f7f\u7528\u4e24\u4e2a\u6307\u9488\u5206\u522b\u6307\u5411\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\uff08\u5373\u6700\u540e\u4e00\u4f4d\uff09\u3002 \u9010\u4f4d\u76f8\u52a0\u5e76\u5904\u7406\u8fdb\u4f4d\uff08carry\uff09\u3002 \u5904\u7406\u4e0d\u540c\u957f\u5ea6\u7684\u5b57\u7b26\u4e32 \uff1a \u5982\u679c\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e0d\u540c\uff0c\u77ed\u7684\u5b57\u7b26\u4e32\u5728\u8ba1\u7b97\u65f6\u4f1a\u7f3a\u5931\u90e8\u5206\u4f4d\u3002\u9700\u8981\u5728\u5904\u7406\u8fc7\u7a0b\u4e2d\u68c0\u67e5\u662f\u5426\u5df2\u7ecf\u8d85\u51fa\u67d0\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002 \u5904\u7406\u6700\u540e\u7684\u8fdb\u4f4d \uff1a \u5982\u679c\u904d\u5386\u7ed3\u675f\u540e\u4ecd\u7136\u6709\u8fdb\u4f4d\uff08carry\uff09\uff0c\u9700\u8981\u5c06\u5176\u6dfb\u52a0\u5230\u7ed3\u679c\u4e2d\u3002 \u62fc\u63a5\u548c\u53cd\u8f6c\u7ed3\u679c \uff1a \u7531\u4e8e\u6211\u4eec\u662f\u4ece\u540e\u5411\u524d\u8ba1\u7b97\u7684\uff0c\u56e0\u6b64\u9700\u8981\u5728\u6700\u540e\u53cd\u8f6c\u7ed3\u679c\u5b57\u7b26\u4e32\u3002","title":"\u89e3\u9898\u601d\u8def"},{"location":"lesson8/Lesson8%20Java/#_42","text":"public class Solution { public String addBinary(String a, String b) { StringBuilder result = new StringBuilder(); int carry = 0; // \u8fdb\u4f4d int i = a.length() - 1; // a \u7684\u6700\u540e\u4e00\u4f4d\u7d22\u5f15 int j = b.length() - 1; // b \u7684\u6700\u540e\u4e00\u4f4d\u7d22\u5f15 // \u5faa\u73af\u76f4\u5230 a \u548c b \u90fd\u904d\u5386\u5b8c while (i >= 0 || j >= 0 || carry > 0) { // \u8ba1\u7b97\u5f53\u524d\u4f4d\u7684\u548c if (i >= 0) { carry += a.charAt(i--) - '0'; // \u53d6 a \u7684\u5f53\u524d\u4f4d\u5e76\u8f6c\u4e3a\u6570\u5b57 } if (j >= 0) { carry += b.charAt(j--) - '0'; // \u53d6 b \u7684\u5f53\u524d\u4f4d\u5e76\u8f6c\u4e3a\u6570\u5b57 } // \u5c06\u5f53\u524d\u4f4d\u7684\u7ed3\u679c\u6dfb\u52a0\u5230\u7ed3\u679c\u4e2d result.append(carry % 2); // \u5f53\u524d\u4f4d\u7ed3\u679c carry /= 2; // \u66f4\u65b0\u8fdb\u4f4d } return result.reverse().toString(); // \u53cd\u8f6c\u7ed3\u679c\u5e76\u8fd4\u56de } }","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"lesson8/Lesson8%20Java/#lc989","text":"","title":"LC989 \u6570\u7ec4\u5f62\u5f0f\u7684\u6574\u6570\u52a0\u6cd5"},{"location":"lesson8/Lesson8%20Java/#_43","text":"\u6574\u6570\u7684\u6570\u7ec4\u5f62\u5f0f num \u662f\u6309\u7167\u4ece\u5de6\u5230\u53f3\u7684\u987a\u5e8f\u8868\u793a\u5176\u6570\u5b57\u7684\u6570\u7ec4\u3002 \u4f8b\u5982\uff0c\u5bf9\u4e8e num = 1321 \uff0c\u6570\u7ec4\u5f62\u5f0f\u662f [1,3,2,1] \u3002 \u7ed9\u5b9a num \uff0c\u6574\u6570\u7684\u6570\u7ec4\u5f62\u5f0f\uff0c\u548c\u6574\u6570 k \uff0c\u8fd4\u56de \u6574\u6570 num + k \u7684\u6570\u7ec4\u5f62\u5f0f\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"lesson8/Lesson8%20Java/#_44","text":"\u4ece\u53f3\u5230\u5de6\u8fdb\u884c\u52a0\u6cd5 \uff1a \u4ece\u6570\u7ec4 num \u7684\u6700\u540e\u4e00\u4f4d\uff08\u6700\u4f4e\u4f4d\uff09\u5f00\u59cb\u52a0\uff0c\u9010\u4f4d\u5904\u7406\u3002 \u5904\u7406\u8fdb\u4f4d \uff1a \u6bcf\u4e00\u4f4d\u7684\u548c\u53ef\u80fd\u4f1a\u4ea7\u751f\u4e00\u4e2a\u8fdb\u4f4d\uff0c\u6211\u4eec\u9700\u8981\u8bb0\u5f55\u8fd9\u4e2a\u8fdb\u4f4d\u5e76\u5728\u4e0b\u4e00\u4f4d\u7684\u52a0\u6cd5\u4e2d\u4f7f\u7528\u3002 \u904d\u5386\u7ed3\u675f\u540e\u7684\u5904\u7406 \uff1a \u5982\u679c\u5728\u904d\u5386\u7ed3\u675f\u65f6\u4ecd\u6709\u8fdb\u4f4d\uff0c\u9700\u8981\u5c06\u8fdb\u4f4d\u6dfb\u52a0\u5230\u7ed3\u679c\u4e2d\u3002 \u7ed3\u679c\u6784\u5efa \uff1a \u5c06\u8ba1\u7b97\u7684\u7ed3\u679c\u5b58\u50a8\u5728\u4e00\u4e2a\u5217\u8868\u4e2d\uff0c\u6700\u540e\u9700\u8981\u53cd\u8f6c\u8fd9\u4e2a\u5217\u8868\uff0c\u56e0\u4e3a\u6211\u4eec\u662f\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\u8ba1\u7b97\u7684\u3002","title":"\u89e3\u9898\u601d\u8def"},{"location":"lesson8/Lesson8%20Java/#_45","text":"import java.util.ArrayList; public class Solution { public ArrayList<Integer> addToArrayForm(int[] num, int k) { ArrayList<Integer> result = new ArrayList<>(); int carry = 0; // \u521d\u59cb\u5316\u8fdb\u4f4d int n = num.length; // \u6570\u7ec4\u957f\u5ea6 // \u4ece\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4f4d\u5f00\u59cb\u5904\u7406 for (int i = n - 1; i >= 0; i--) { int sum = num[i] + (k % 10) + carry; // \u5f53\u524d\u4f4d\u7684\u548c result.add(sum % 10); // \u5f53\u524d\u4f4d\u7ed3\u679c carry = sum / 10; // \u66f4\u65b0\u8fdb\u4f4d k /= 10; // \u79fb\u52a8\u5230 k \u7684\u4e0b\u4e00\u4f4d } // \u5904\u7406 k \u53ef\u80fd\u8fd8\u6709\u7684\u5269\u4f59\u4f4d while (k > 0 || carry > 0) { int sum = (k % 10) + carry; // \u5f53\u524d\u4f4d\u7684\u548c result.add(sum % 10); // \u5f53\u524d\u4f4d\u7ed3\u679c carry = sum / 10; // \u66f4\u65b0\u8fdb\u4f4d k /= 10; // \u79fb\u52a8\u5230 k \u7684\u4e0b\u4e00\u4f4d } // \u7531\u4e8e\u6211\u4eec\u662f\u4ece\u540e\u5411\u524d\u6784\u5efa\u7684\u7ed3\u679c\uff0c\u9700\u8981\u53cd\u8f6c ArrayList<Integer> finalResult = new ArrayList<>(); for (int j = result.size() - 1; j >= 0; j--) { finalResult.add(result.get(j)); } return finalResult; } }","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"lesson8/Lesson8%20Java/#_46","text":"","title":"\u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson8/Lesson8%20Java/#_47","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC 1002 \u627e\u5230\u5171\u540c\u5b57\u7b26 \u627e\u5230\u7ed9\u5b9a\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\u6240\u6709\u5b57\u7b26\u4e32\u7684\u5171\u540c\u5b57\u7b26\u3002 LC 541 \u53cd\u8f6c\u5b57\u7b26\u4e32 II \u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u6307\u5b9a\u90e8\u5206\uff0c\u6bcf\u9694\u4e00\u4e2a\u6307\u5b9a\u957f\u5ea6\u53cd\u8f6c\u4e00\u6b21\u3002 LC 771 \u73e0\u5b9d\u4e0e\u77f3\u5934 \u8ba1\u7b97\u5728\u77f3\u5934\u4e2d\u6709\u591a\u5c11\u4e2a\u73e0\u5b9d\u5b57\u7b26\u3002 LC 844 \u56de\u9000\u5b57\u7b26\u4e32\u6bd4\u8f83 \u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u8003\u8651\u5230\u56de\u9000\u5b57\u7b26\uff08\u2018#\u2019\uff09\u7684\u5f71\u54cd\u3002 LC 925 \u957f\u6309\u952e\u5165\u7684\u540d\u5b57 \u68c0\u67e5\u4e00\u4e2a\u540d\u5b57\u662f\u5426\u53ef\u4ee5\u901a\u8fc7\u957f\u6309\u53e6\u4e00\u4e2a\u540d\u5b57\u7684\u5b57\u7b26\u6765\u5b9e\u73b0\u3002","title":"\u5b57\u7b26\u4e32\u5faa\u73af+\u5207\u7247"},{"location":"lesson8/Lesson8%20Java/#_48","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC 2243 \u8ba1\u7b97\u5b57\u7b26\u4e32\u4e2d\u7684\u6570\u5b57\u548c \u8ba1\u7b97\u5b57\u7b26\u4e32\u4e2d\u6240\u6709\u6570\u5b57\u5b57\u7b26\u7684\u603b\u548c\u3002 LC 66 \u52a0\u4e00 \u5728\u6570\u7ec4\u5f62\u5f0f\u7684\u6570\u5b57\u4e0a\u52a0\u4e00\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c\u7684\u6570\u7ec4\u5f62\u5f0f\u3002","title":"\u5b57\u7b26\u4e32\u6570\u5b66\u8fd0\u7b97"},{"location":"lesson8/Lesson8%20Python/","text":"Lesson8 \u5b57\u7b26\u4e32\u5faa\u73af+\u5207\u7247/\u5b57\u7b26\u4e32\u6570\u5b66\u8fd0\u7b97\u4e13\u9898 \u76ee\u5f55 \u5b57\u7b26\u4e32\u5faa\u73af+\u5207\u7247 LC14 \u6700\u957f\u516c\u5171\u524d\u7f00 LC125 \u9a8c\u8bc1\u56de\u6587\u4e32 LC459 \u91cd\u590d\u7684\u5b50\u5b57\u7b26\u4e32 LC796 \u65cb\u8f6c\u5b57\u7b26\u4e32 LC28 \u67e5\u627e\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5339\u914d\u9879\u7d22\u5f15 \u5b57\u7b26\u4e32\u6570\u5b66\u8fd0\u7b97 LC415 \u5b57\u7b26\u4e32\u76f8\u52a0 LC7 \u6574\u6570\u53cd\u8f6c LC67 \u4e8c\u8fdb\u5236\u6c42\u548c LC989 \u6570\u7ec4\u5f62\u5f0f\u7684\u6574\u6570\u52a0\u6cd5 \u8bfe\u540e\u7ec3\u4e60 1 \u5b57\u7b26\u4e32\u5faa\u73af+\u5207\u7247 \u4f8b\u9898\u8bb2\u89e3 LC14 \u6700\u957f\u516c\u5171\u524d\u7f00 \u9898\u76ee\u63cf\u8ff0 \u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u67e5\u627e\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u3002 \u5982\u679c\u4e0d\u5b58\u5728\u516c\u5171\u524d\u7f00\uff0c\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32 \"\"\u3002 \u9898\u76ee\u5206\u6790 \u8981\u627e\u5230\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\uff0c\u6211\u4eec\u53ef\u4ee5\u4f9d\u6b21\u6bd4\u8f83\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7684\u5b57\u7b26\uff0c\u76f4\u5230\u627e\u5230\u4e0d\u5339\u914d\u7684\u4f4d\u7f6e\u4e3a\u6b62\u3002\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u591a\u79cd\u65b9\u6cd5\u89e3\u51b3\uff0c\u6bd4\u5982\u7eb5\u5411\u626b\u63cf\u3001\u6a2a\u5411\u626b\u63cf\u3001\u5206\u6cbb\u6cd5\u3001\u4e8c\u5206\u67e5\u627e\u7b49\u3002\u6211\u4eec\u8fd9\u91cc\u91c7\u7528\u4e00\u79cd\u8f83\u4e3a\u76f4\u89c2\u7684\u6a2a\u5411\u626b\u63cf\u6cd5\u3002 \u89e3\u9898\u601d\u8def \u8fb9\u754c\u60c5\u51b5 : \u5982\u679c\u5b57\u7b26\u4e32\u6570\u7ec4\u4e3a\u7a7a\uff0c\u76f4\u63a5\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002 \u5982\u679c\u5b57\u7b26\u4e32\u6570\u7ec4\u53ea\u6709\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u6700\u957f\u516c\u5171\u524d\u7f00\u5c31\u662f\u8fd9\u4e2a\u5b57\u7b26\u4e32\u672c\u8eab\u3002 \u4ece\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u5f00\u59cb : \u5047\u8bbe\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u6700\u957f\u516c\u5171\u524d\u7f00\uff0c\u63a5\u4e0b\u6765\u9010\u4e00\u4e0e\u6570\u7ec4\u4e2d\u7684\u5176\u4ed6\u5b57\u7b26\u4e32\u8fdb\u884c\u6bd4\u8f83\u3002 \u6bcf\u6b21\u6bd4\u8f83\u65f6\uff0c\u9010\u5b57\u7b26\u5730\u8fdb\u884c\u6bd4\u8f83\uff0c\u76f4\u5230\u627e\u5230\u4e0d\u5339\u914d\u7684\u5b57\u7b26\u6216\u6bd4\u8f83\u5b8c\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u6240\u6709\u5b57\u7b26\u3002 \u66f4\u65b0\u5f53\u524d\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u4e3a\u5339\u914d\u7684\u90e8\u5206\u3002 \u8fd4\u56de\u7ed3\u679c : \u6700\u540e\u8fd4\u56de\u5339\u914d\u540e\u7684\u516c\u5171\u524d\u7f00\uff0c\u5982\u679c\u6ca1\u6709\u5339\u914d\u5230\u4efb\u4f55\u524d\u7f00\uff0c\u5219\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002 \u793a\u4f8b\u4ee3\u7801 class Solution: def longestCommonPrefix(self, strs: List[str]) -> str: # \u8fb9\u754c\u60c5\u51b5\u5904\u7406 if not strs: return \"\" # \u521d\u59cb\u5316\u6700\u957f\u516c\u5171\u524d\u7f00\u4e3a\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32 prefix = strs[0] # \u4f9d\u6b21\u4e0e\u5176\u4ed6\u5b57\u7b26\u4e32\u6bd4\u8f83 for i in range(1, len(strs)): # \u5f53\u524d\u524d\u7f00\u4e0e\u4e0b\u4e00\u4e2a\u5b57\u7b26\u4e32\u6bd4\u8f83 while strs[i].find(prefix) != 0: # \u7f29\u77ed\u524d\u7f00\u957f\u5ea6 prefix = prefix[:len(prefix) - 1] # \u5982\u679c\u524d\u7f00\u4e3a\u7a7a\uff0c\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32 if not prefix: return \"\" return prefix LC125. \u9a8c\u8bc1\u56de\u6587\u4e32 \u95ee\u9898\u63cf\u8ff0 \u5982\u679c\u5728\u5c06\u6240\u6709\u5927\u5199\u5b57\u7b26\u8f6c\u6362\u4e3a\u5c0f\u5199\u5b57\u7b26\u3001\u5e76\u79fb\u9664\u6240\u6709\u975e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\u4e4b\u540e\uff0c\u77ed\u8bed\u6b63\u7740\u8bfb\u548c\u53cd\u7740\u8bfb\u90fd\u4e00\u6837\u3002\u5219\u53ef\u4ee5\u8ba4\u4e3a\u8be5\u77ed\u8bed\u662f\u4e00\u4e2a\u56de\u6587\u4e32\u3002 \u5b57\u6bcd\u548c\u6570\u5b57\u90fd\u5c5e\u4e8e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\u3002 \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32s\uff0c\u5982\u679c\u5b83\u662f\u56de\u6587\u4e32 \uff0c\u8fd4\u56deTrue\uff1b\u5426\u5219\uff0c\u8fd4\u56deFalse \u3002 \u9898\u76ee\u5206\u6790 \u6211\u4eec\u9700\u8981\u7edf\u8ba1\u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd\u4e2a\u6570\uff0c\u5355\u8bcd\u662f\u7531\u8fde\u7eed\u7684\u975e\u7a7a\u683c\u5b57\u7b26\u7ec4\u6210\u7684\u3002\u7a7a\u683c\u53ef\u4ee5\u7528\u6765\u5206\u9694\u5355\u8bcd\u3002\u9898\u76ee\u4fdd\u8bc1\u5b57\u7b26\u4e32\u4e2d\u6ca1\u6709\u4e0d\u53ef\u6253\u5370\u5b57\u7b26\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u5904\u7406\u7279\u6b8a\u5b57\u7b26\u3002 \u89e3\u9898\u601d\u8def \u5bf9\u5b57\u7b26\u4e32 s \u8fdb\u884c\u4e00\u6b21\u904d\u5386\uff0c\u5e76\u5c06\u5176\u4e2d\u7684\u5b57\u6bcd\u548c\u6570\u5b57\u5b57\u7b26\u8fdb\u884c\u4fdd\u7559\uff0c\u653e\u5728\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32 sgood \u4e2d\u3002\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad sgood \u662f\u5426\u662f\u4e00\u4e2a\u666e\u901a\u7684\u56de\u6587\u4e32\u5373\u53ef\u3002 \u53ef\u4ee5\u4f7f\u7528\u8bed\u8a00\u4e2d\u7684\u5b57\u7b26\u4e32\u7ffb\u8f6c API \u5f97\u5230 sgood \u7684\u9006\u5e8f\u5b57\u7b26\u4e32 sgood_rev\uff0c\u53ea\u8981\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u540c\uff0c\u90a3\u4e48 sgood \u5c31\u662f\u56de\u6587\u4e32\u3002 \u793a\u4f8b\u4ee3\u7801 class Solution: def isPalindrome(self, s: str) -> bool: sgood = [] # \u7528\u4e8e\u5b58\u50a8\u6709\u6548\u5b57\u7b26 for ch in s: if ch.isalnum(): # \u5224\u65ad\u662f\u5426\u4e3a\u5b57\u6bcd\u6216\u6570\u5b57 sgood.append(ch.lower()) # \u8f6c\u4e3a\u5c0f\u5199\u5e76\u6dfb\u52a0\u5230\u6709\u6548\u5b57\u7b26\u4e2d # \u521b\u5efa\u53cd\u8f6c\u540e\u7684\u6709\u6548\u5b57\u7b26\u5b57\u7b26\u4e32 sgood_rev = sgood[::-1] # \u53cd\u8f6c\u5217\u8868 # \u6bd4\u8f83\u6709\u6548\u5b57\u7b26\u548c\u53cd\u8f6c\u5b57\u7b26\u662f\u5426\u76f8\u540c return sgood == sgood_rev \u4e3e\u4e00\u53cd\u4e09 LC459. \u91cd\u590d\u7684\u5b50\u5b57\u7b26\u4e32 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u7684\u5b57\u7b26\u4e32 s \uff0c\u68c0\u67e5\u662f\u5426\u53ef\u4ee5\u901a\u8fc7\u7531\u5b83\u7684\u4e00\u4e2a\u5b50\u4e32\u91cd\u590d\u591a\u6b21\u6784\u6210\u3002 \u89e3\u9898\u601d\u8def \u7406\u89e3\u91cd\u590d\u6784\u6210\uff1a \u5982\u679c\u5b57\u7b26\u4e32 s \u53ef\u4ee5\u901a\u8fc7\u91cd\u590d\u67d0\u4e2a\u5b50\u4e32\u591a\u6b21\u6784\u6210\uff0c\u8bf4\u660e s \u7684\u957f\u5ea6\u5e94\u8be5\u662f\u8fd9\u4e2a\u5b50\u4e32\u7684\u957f\u5ea6\u7684\u6574\u6570\u500d\u3002 \u4f8b\u5982\uff0c\u5b57\u7b26\u4e32 \"abab\" \u53ef\u4ee5\u89c6\u4e3a\u5b50\u4e32 \"ab\" \u91cd\u590d\u4e24\u6b21\uff0c\u957f\u5ea6\u4e3a 4 \u7684\u5b57\u7b26\u4e32\u53ef\u7531\u957f\u5ea6\u4e3a 2 \u7684\u5b50\u4e32\u6784\u6210\u3002 \u627e\u5230\u53ef\u80fd\u7684\u5b50\u4e32\u957f\u5ea6\uff1a \u5047\u8bbe\u5b50\u4e32\u7684\u957f\u5ea6\u4e3a n \uff0c\u5219\u53ef\u80fd\u7684\u957f\u5ea6\u53ef\u4ee5\u662f 1 \u5230 len(s) // 2 \u3002\u56e0\u4e3a\u4e00\u4e2a\u5b50\u4e32\u91cd\u590d\u540e\uff0c\u6574\u4f53\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e0d\u53ef\u80fd\u8d85\u8fc7 len(s) \u3002 \u68c0\u67e5\u91cd\u590d\uff1a \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u53ef\u80fd\u7684\u5b50\u4e32\u957f\u5ea6 i \uff0c\u68c0\u67e5 len(s) \u662f\u5426\u80fd\u591f\u88ab i \u6574\u9664\uff08\u5373 len(s) % i == 0 \uff09\u3002 \u5982\u679c\u80fd\u6574\u9664\uff0c\u90a3\u4e48\u53d6\u51fa\u5b50\u4e32 s[0:i] \uff0c\u5e76\u901a\u8fc7\u5c06\u5176\u91cd\u590d len(s) // i \u6b21\u6765\u6784\u9020\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u4e0e\u539f\u5b57\u7b26\u4e32 s \u8fdb\u884c\u6bd4\u8f83\u3002 \u590d\u6742\u5ea6\u5206\u6790\uff1a \u5728\u6700\u574f\u7684\u60c5\u51b5\u4e0b\uff0c\u5916\u5c42\u5faa\u73af\u9700\u8981\u68c0\u67e5 len(s) // 2 \u6b21\uff0c\u6bcf\u6b21\u6bd4\u8f83\u7684\u590d\u6742\u5ea6\u4e3a O(n) \u3002\u6240\u4ee5\u603b\u4f53\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n^2) \uff0c\u5bf9\u4e8e n \u8f83\u5927\u65f6\u53ef\u80fd\u4f1a\u6709\u6027\u80fd\u95ee\u9898\u3002 \u793a\u4f8b\u4ee3\u7801 class Solution: def repeatedSubstringPattern(self, s: str) -> bool: n = len(s) # \u904d\u5386\u53ef\u80fd\u7684\u5b50\u4e32\u957f\u5ea6 for i in range(1, n // 2 + 1): # \u68c0\u67e5\u662f\u5426\u53ef\u4ee5\u6574\u9664 if n % i == 0: substring = s[:i] # \u6784\u9020\u7531\u5b50\u4e32\u91cd\u590d\u7684\u5b57\u7b26\u4e32 repeated = substring * (n // i) # \u6bd4\u8f83\u6784\u9020\u7684\u5b57\u7b26\u4e32\u4e0e\u539f\u5b57\u7b26\u4e32 if repeated == s: return True return False \u66f4\u9ad8\u6548\u7684\u89e3\u6cd5 \u53ef\u4ee5\u5229\u7528\u5b57\u7b26\u4e32\u7684\u7279\u6027\u6765\u8fdb\u4e00\u6b65\u4f18\u5316\uff1a \u5c06\u5b57\u7b26\u4e32 s \u81ea\u8eab\u62fc\u63a5\u4e00\u904d\uff0c\u5f97\u5230 s + s \u3002 \u53bb\u6389\u5f00\u5934\u548c\u7ed3\u5c3e\u7684\u5b57\u7b26\uff0c\u68c0\u67e5 s \u662f\u5426\u5728\u65b0\u7684\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u3002 \u5982\u679c\u51fa\u73b0\uff0c\u8bf4\u660e s \u53ef\u4ee5\u7531\u67d0\u4e2a\u5b50\u4e32\u6784\u6210\u3002 \u4f18\u5316\u793a\u4f8b\u4ee3\u7801 class Solution: def repeatedSubstringPattern(self, s: str) -> bool: doubled = s + s # \u5c06\u5b57\u7b26\u4e32\u62fc\u63a5 sub_string = doubled[1:-1] # \u53bb\u6389\u9996\u5c3e\u5b57\u7b26 return s in sub_string # \u68c0\u67e5\u662f\u5426\u5305\u542b\u539f\u5b57\u7b26\u4e32 \u8bc1\u660e\uff1a\u5b57\u7b26\u4e32\u62fc\u63a5\u540e\u6390\u5934\u53bb\u5c3e\u53ef\u4ee5\u7528\u4e8e\u5224\u65ad\u91cd\u590d\u7684\u5b50\u5b57\u7b26\u4e32 \u8865\u5145\uff1a\u4ec0\u4e48\u662f\u524d\u7f00\u548c\u540e\u7f00\uff1f \u524d\u7f00\uff08Prefix\uff09 \uff1a\u4ece\u5b57\u7b26\u4e32\u7684 \u5f00\u5934 \u5f00\u59cb\u7684\u8fde\u7eed\u5b57\u7b26\u5b50\u4e32\u3002\u4f8b\u5982\uff0c\u5b57\u7b26\u4e32 \"abcde\" \u7684\u524d\u7f00\u6709\uff1a \u524d\u7f00 1\uff1a \"a\" \u524d\u7f00 2\uff1a \"ab\" \u524d\u7f00 3\uff1a \"abc\" \u524d\u7f00 4\uff1a \"abcd\" \u524d\u7f00 5\uff1a \"abcde\" \uff08\u6574\u4e2a\u5b57\u7b26\u4e32\u672c\u8eab\u4e5f\u662f\u4e00\u4e2a\u524d\u7f00\uff09 \u540e\u7f00\uff08Suffix\uff09 \uff1a\u4ece\u5b57\u7b26\u4e32\u7684 \u7ed3\u5c3e \u5f00\u59cb\u7684\u8fde\u7eed\u5b57\u7b26\u5b50\u4e32\u3002\u4f8b\u5982\uff0c\u5b57\u7b26\u4e32 \"abcde\" \u7684\u540e\u7f00\u6709\uff1a \u540e\u7f00 1\uff1a \"e\" \u540e\u7f00 2\uff1a \"de\" \u540e\u7f00 3\uff1a \"cde\" \u540e\u7f00 4\uff1a \"bcde\" \u540e\u7f00 5\uff1a \"abcde\" \uff08\u6574\u4e2a\u5b57\u7b26\u4e32\u672c\u8eab\u4e5f\u662f\u4e00\u4e2a\u540e\u7f00\uff09 \u5145\u5206\u5fc5\u8981\u6027\u8bc1\u660e \u4e3a\u4e86\u8bc1\u660e\u7ed9\u5b9a\u5b57\u7b26\u4e32 s \u662f\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\u5145\u5206\u5fc5\u8981\u6027\uff0c\u6211\u4eec\u9700\u8981\u4ece\u4e24\u4e2a\u65b9\u5411\u6765\u8fdb\u884c\u8bc1\u660e\uff1a \u5145\u5206\u6027 \uff1a\u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u4e32 s \u662f\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\uff0c\u90a3\u4e48\u5728\u62fc\u63a5\u540e\u7684\u5b57\u7b26\u4e32 s + s \u4e2d\uff0c\u6390\u5934\u53bb\u5c3e\u540e\uff0c\u4e00\u5b9a\u80fd\u518d\u6b21\u627e\u5230 s \u3002 \u5fc5\u8981\u6027 \uff1a\u5982\u679c\u5728\u6390\u5934\u53bb\u5c3e\u7684 s + s \u4e2d\u627e\u5230\u4e86 s \uff0c\u90a3\u4e48 s \u4e00\u5b9a\u662f\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\u3002 1. \u5145\u5206\u6027 \u5047\u8bbe \uff1a\u8bbe\u5b57\u7b26\u4e32 s \u662f\u7531\u4e00\u4e2a\u8f83\u77ed\u7684\u5b50\u4e32 p \u91cd\u590d\u591a\u6b21\u6784\u6210\u7684\uff0c\u5373 s = p + p + ... + p \uff08\u5047\u8bbe p \u91cd\u590d k \u6b21\uff09\u3002 \u4e3e\u4f8b \uff1a\u6bd4\u5982 s = \"abab\" \uff0c\u8fd9\u662f\u7531 p = \"ab\" \u91cd\u590d\u4e24\u6b21\u6784\u6210\u7684\u3002 \u62fc\u63a5 s + s \uff1a\u6211\u4eec\u5c06 s \u62fc\u63a5\u5f97\u5230 s + s \uff0c\u4f8b\u5982\uff1a s = \"abab\" s_plus = s + s # \"abab\" + \"abab\" = \"abababab\" \u63a5\u7740\uff0c\u6390\u5934\u53bb\u5c3e\uff0c\u53bb\u6389\u9996\u5c3e\u5b57\u7b26\uff0c\u5f97\u5230 new_s = (s + s)[1:-1] \uff0c\u5bf9\u4e8e\u4e0a\u9762\u7684\u4f8b\u5b50\uff1a new_s = s_plus[1:-1] # \u53bb\u6389\u9996\u5c3e\u5b57\u7b26 # new_s = \"abababab\"[1:-1] = \"bababa\" \u5bfb\u627e s \u5728 new_s \u4e2d\u7684\u51fa\u73b0 \uff1a\u7531\u4e8e s \u662f\u7531\u5b50\u4e32 p \u591a\u6b21\u91cd\u590d\uff08\u81f3\u5c11\u4e24\u6b21\uff09\u6784\u6210\u7684\uff0c s + s \u5c31\u4f1a\u91cd\u590d\u81f3\u5c11 4 \u6b21 p \uff0c\u6390\u5934\u53bb\u5c3e\u540e\uff0c\u91cd\u590d\u81f3\u5c11 2 \u6b21 p \uff0c\u524d\u7f00\u548c\u540e\u7f00\u5fc5\u7136\u6709\u91cd\u53e0\uff0c\u4e00\u5b9a\u80fd\u518d\u6b21\u627e\u5230 s \u3002 new_s = \"bababa\" \u2193\u2193\u2193\u2193 \"abab\" # \u8fd9\u91cc\u518d\u6b21\u51fa\u73b0\u4e86 s \u5145\u5206\u6027\u8bc1\u6bd5\u3002 2. \u5fc5\u8981\u6027 \u5047\u8bbe \uff1a\u6211\u4eec\u5df2\u7ecf\u5728\u53bb\u6389\u9996\u5c3e\u5b57\u7b26\u7684 s + s \u4e2d\u518d\u6b21\u627e\u5230\u4e86 s \u3002\u73b0\u5728\u6211\u4eec\u9700\u8981\u8bc1\u660e\uff0c s \u4e00\u5b9a\u662f\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\u3002 \u6784\u9020 new_s \uff1a\u9996\u5148\uff0c\u6784\u9020 s_plus = s + s new_s = s_plus[1:-1] # \u53bb\u6389\u9996\u5c3e\u5b57\u7b26 \u5047\u8bbe s \u5728 new_s \u4e2d\u5339\u914d\u7684\u4f4d\u7f6e\u662f\u4ece\u7d22\u5f15 i \u5f00\u59cb\uff0c\u8fd9\u610f\u5473\u7740\uff1a new_s[i:i+len(s)] == s \u7531\u4e8e new_s \u662f s + s \u53bb\u6389\u9996\u5c3e\u5b57\u7b26\u5f97\u5230\u7684\uff0c\u5373\uff1a new_s = s_plus[1:-1] = (s + s)[1:-1] \u6240\u4ee5\uff1a new_s = s[1:] + s[:-1] \u56e0\u6b64\uff0c new_s \u662f\u7531 s \u7684\u540e\u7f00\u548c\u524d\u7f00\u62fc\u63a5\u800c\u6210\u3002 \u6839\u636e\u5339\u914d\u6761\u4ef6 \uff1a s == new_s[i:i+len(s)] \u5373\uff1a s == (s[1:] + s[:-1])[i:i+len(s)] \u8fd9\u8868\u660e s \u53ef\u4ee5\u901a\u8fc7\u81ea\u8eab\u7684\u4e00\u4e2a\u540e\u7f00\u548c\u524d\u7f00\u62fc\u63a5\u5f97\u5230\uff0c\u8bf4\u660e s \u5b58\u5728\u5468\u671f\u6027\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c s \u662f\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\u3002 \u4e3e\u4f8b\u8bf4\u660e \uff1a s = \"abab\" s_plus = s + s # \"abababab\" new_s = s_plus[1:-1] # \"bababa\" s \u7684\u524d\u7f00\u6709\uff1a 'a', 'ab', 'aba', 'abab' s \u7684\u540e\u7f00\u6709\uff1a 'b', 'ab', 'bab', 'abab' \u53ef\u4ee5\u53d1\u73b0\uff0c\u5728 new_s \u4e2d\uff0c s \u518d\u6b21\u51fa\u73b0\uff1a new_s[1:1+4] == \"abab\" # \"bababa\"[1:5] == \"abab\" \u8fd9\u8bf4\u660e\uff1a s \u7684\u540e\u7f00 \"bab\" \u4e0e\u524d\u7f00 \"ab\" \u91cd\u53e0\u62fc\u63a5\uff0c\u5f62\u6210\u4e86\u5468\u671f\u6027\u3002 \u56e0\u6b64\uff0c s \u662f\u7531 \"ab\" \u91cd\u590d\u6784\u6210\u7684\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c s \u7684\u524d\u7f00\u548c\u540e\u7f00\u6709\u67d0\u79cd\u91cd\u53e0\uff0c\u5f62\u6210\u4e86\u5468\u671f\u6027\uff0c\u90a3\u4e48 s \u5c31\u53ef\u4ee5\u901a\u8fc7\u91cd\u590d\u67d0\u4e2a\u5b50\u4e32\u6784\u6210\u3002 \u5fc5\u8981\u6027\u8bc1\u6bd5\u3002 \u603b\u7ed3\uff1a \u6211\u4eec\u5df2\u7ecf\u8bc1\u660e\u4e86\uff1a \u5145\u5206\u6027 \uff1a\u5982\u679c s \u662f\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\uff0c\u90a3\u4e48\u5728 s + s \u4e2d\u6390\u5934\u53bb\u5c3e\u540e\uff0c\u4e00\u5b9a\u80fd\u591f\u518d\u6b21\u627e\u5230 s \u3002\u8fd9\u662f\u56e0\u4e3a\u91cd\u590d\u5b50\u4e32\u4f1a\u4f7f\u5f97\u524d\u7f00\u548c\u540e\u7f00\u6709\u91cd\u53e0\u3002 \u5fc5\u8981\u6027 \uff1a\u5982\u679c\u5728\u6390\u5934\u53bb\u5c3e\u7684 s + s \u4e2d\u627e\u5230\u4e86 s \uff0c\u90a3\u4e48 s \u4e00\u5b9a\u662f\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\u3002\u8fd9\u662f\u56e0\u4e3a\u53ea\u6709\u5f53 s \u5177\u6709\u5468\u671f\u6027\u65f6\uff0c\u5b83\u7684\u524d\u7f00\u548c\u540e\u7f00\u624d\u4f1a\u4ea4\u66ff\u91cd\u53e0\uff0c\u5f62\u6210\u5339\u914d\u3002 \u56e0\u6b64\uff0c\u62fc\u63a5 s + s \u5e76\u53bb\u6389\u9996\u5c3e\u5b57\u7b26\u540e\u80fd\u5426\u518d\u6b21\u627e\u5230 s \uff0c\u53ef\u4ee5\u7528\u6765\u5224\u65ad s \u662f\u5426\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u3002 \u8865\u5145\u6750\u6599\uff1a \u5145\u5206\u6027\u53ca\u5fc5\u8981\u6027\u8bc1\u660e Leetcode\u5b98\u65b9\u9898\u89e3\u8bc1\u660e LC796 \u65cb\u8f6c\u5b57\u7b26\u4e32 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32, s \u548c goal\u3002\u5982\u679c\u5728\u82e5\u5e72\u6b21\u65cb\u8f6c\u64cd\u4f5c\u4e4b\u540e\uff0cs \u80fd\u53d8\u6210 goal \uff0c\u90a3\u4e48\u8fd4\u56de true \u3002 s \u7684 \u65cb\u8f6c\u64cd\u4f5c \u5c31\u662f\u5c06 s \u6700\u5de6\u8fb9\u7684\u5b57\u7b26\u79fb\u52a8\u5230\u6700\u53f3\u8fb9\u3002 \u4f8b\u5982, \u82e5 s = 'abcde'\uff0c\u5728\u65cb\u8f6c\u4e00\u6b21\u4e4b\u540e\u7ed3\u679c\u5c31\u662f'bcdea' \u3002 \u8981\u5224\u65ad\u5b57\u7b26\u4e32 s \u662f\u5426\u53ef\u4ee5\u901a\u8fc7\u82e5\u5e72\u6b21\u65cb\u8f6c\u64cd\u4f5c\u53d8\u6210\u5b57\u7b26\u4e32 goal \uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u4ee5\u4e0b\u601d\u8def\u8fdb\u884c\u89e3\u51b3\uff1a \u89e3\u9898\u601d\u8def \u7406\u89e3\u65cb\u8f6c \uff1a \u65cb\u8f6c\u64cd\u4f5c\u662f\u5c06\u5b57\u7b26\u4e32\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u79fb\u52a8\u5230\u6700\u540e\u4e00\u4f4d\u3002 \u4f8b\u5982\uff0c\u5b57\u7b26\u4e32 \"abcde\" \u7ecf\u8fc7\u4e00\u6b21\u65cb\u8f6c\u53d8\u4e3a \"bcdea\" \uff0c\u518d\u7ecf\u8fc7\u4e00\u6b21\u65cb\u8f6c\u53d8\u4e3a \"cdeab\" \uff0c\u5982\u6b64\u7c7b\u63a8\u3002 \u5b57\u7b26\u4e32\u65cb\u8f6c\u7684\u7279\u6027 \uff1a \u5982\u679c\u6211\u4eec\u5c06\u5b57\u7b26\u4e32 s \u8fdb\u884c\u4e24\u6b21\u62fc\u63a5\uff0c\u5f97\u5230 s + s \uff0c\u8fd9\u4e2a\u65b0\u5b57\u7b26\u4e32\u5305\u542b\u4e86\u6240\u6709\u53ef\u80fd\u7684\u65cb\u8f6c\u5f62\u5f0f\u3002 \u4f8b\u5982\uff1a \u5bf9\u4e8e s = \"abcde\" \uff0c\u62fc\u63a5\u540e s + s = \"abcdeabcde\" \uff0c\u5176\u4e2d\u5305\u542b\u4e86 \"abcde\" \u7684\u6240\u6709\u65cb\u8f6c\u5f62\u5f0f\uff0c\u5982 \"abcde\" \u3001 \"bcdea\" \u3001 \"cdeab\" \u3001 \"deabc\" \u548c \"eabcd\" \u3002 \u5224\u65ad goal \u662f\u5426\u5728 s + s \u4e2d \uff1a \u53ea\u9700\u68c0\u67e5 goal \u662f\u5426\u662f s + s \u7684\u5b50\u4e32\u3002 \u5982\u679c goal \u662f s + s \u7684\u5b50\u4e32\uff0c\u5219\u8fd4\u56de True \uff0c\u5426\u5219\u8fd4\u56de False \u3002 \u793a\u4f8b\u4ee3\u7801 class Solution: def rotateString(self, s: str, goal: str) -> bool: # \u68c0\u67e5\u957f\u5ea6\u662f\u5426\u76f8\u7b49 if len(s) != len(goal): return False # \u62fc\u63a5\u5b57\u7b26\u4e32 doubled = s + s # \u68c0\u67e5 goal \u662f\u5426\u4e3a doubled \u7684\u5b50\u4e32 return goal in doubled \u7b80\u6d01\u5199\u6cd5 class Solution: def rotateString(self, s: str, goal: str) -> bool: return len(s) == len(goal) and goal in (s + s) LC28 \u67e5\u627e\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5339\u914d\u9879\u7d22\u5f15 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 haystack \u548c needle \uff0c\u4f60\u9700\u8981\u5728 haystack \u5b57\u7b26\u4e32\u4e2d\u627e\u51fa needle \u5b57\u7b26\u4e32\u51fa\u73b0\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\uff08\u4ece 0 \u5f00\u59cb\uff09\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de -1 \u3002 \u601d\u8def\u5206\u6790 \u5982\u679c needle \u4e3a\u7a7a\u5b57\u7b26\u4e32\uff0c\u76f4\u63a5\u8fd4\u56de 0 \u3002 \u904d\u5386 haystack \uff0c\u4ece\u6bcf\u4e2a\u7d22\u5f15\u4f4d\u7f6e\u68c0\u67e5\u662f\u5426\u4e0e needle \u5339\u914d\u3002 \u5982\u679c\u5339\u914d\u6210\u529f\uff0c\u8fd4\u56de\u8be5\u7d22\u5f15\uff0c\u5426\u5219\u7ee7\u7eed\u904d\u5386\u3002 \u5982\u679c\u904d\u5386\u7ed3\u675f\u540e\u672a\u627e\u5230\uff0c\u8fd4\u56de -1 \u3002 \u53c2\u8003\u89e3\u7b54 class Solution: def strStr(self, haystack: str, needle: str) -> int: # \u5982\u679cneedle\u4e3a\u7a7a\u5b57\u7b26\u4e32\uff0c\u76f4\u63a5\u8fd4\u56de0 if not needle: return 0 # \u83b7\u53d6\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6 n = len(haystack) m = len(needle) # \u904d\u5386haystack\uff0c\u76f4\u5230\u5269\u4f59\u7684\u90e8\u5206\u957f\u5ea6\u5c0f\u4e8eneedle\u957f\u5ea6 for i in range(n - m + 1): # \u6bd4\u8f83\u4ecei\u5f00\u59cb\u7684\u5b50\u4e32\u662f\u5426\u7b49\u4e8eneedle if haystack[i:i + m] == needle: return i # \u5982\u679c\u904d\u5386\u7ed3\u675f\u540e\u6ca1\u6709\u627e\u5230\uff0c\u8fd4\u56de-1 return -1 2 \u5b57\u7b26\u4e32\u6570\u5b66\u8fd0\u7b97 \u5b57\u7b26\u4e32\u6570\u5b66\u6a21\u62df\u7684\u57fa\u672c\u89e3\u9898\u601d\u8def\u4e3b\u8981\u6d89\u53ca\u5982\u4f55\u901a\u8fc7\u9010\u6b65\u64cd\u4f5c\u548c\u7b80\u5355\u7684\u6570\u5b66\u8fd0\u7b97\uff0c\u5904\u7406\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u6570\u5b57\u8ba1\u7b97\u3002 \u57fa\u672c\u6982\u5ff5 \u5b57\u7b26\u8f6c\u6570\u5b57 \uff1a \u5b57\u7b26\u4e32\u4e2d\u7684\u6570\u5b57\u662f\u4ee5\u5b57\u7b26\u7684\u5f62\u5f0f\u5b58\u5728\u7684\uff0c\u4f8b\u5982\u5b57\u7b26 '0' \u5230 '9' \u3002 \u53ef\u4ee5\u901a\u8fc7 ord(char) - ord('0') \u5c06\u5b57\u7b26\u8f6c\u4e3a\u5bf9\u5e94\u7684\u6570\u5b57\u3002\u4f8b\u5982\uff0c ord('5') - ord('0') \u7684\u7ed3\u679c\u4e3a 5 \u3002 \u8fdb\u4f4d\u5904\u7406 \uff1a \u5728\u8fdb\u884c\u52a0\u6cd5\u8fd0\u7b97\u65f6\uff0c\u5982\u679c\u67d0\u4e00\u4f4d\u7684\u548c\u5927\u4e8e\u6216\u7b49\u4e8e 10 \uff0c\u5219\u9700\u8981\u5904\u7406\u8fdb\u4f4d\uff08carry\uff09\uff0c\u5c06 1 \u52a0\u5230\u4e0b\u4e00\u4f4d\u7684\u8ba1\u7b97\u4e2d\u3002 \u8fdb\u4f4d\u7684\u8ba1\u7b97\u53ef\u4ee5\u901a\u8fc7 carry = sum // 10 \u6765\u5b9e\u73b0\uff0c\u800c\u5f53\u524d\u4f4d\u7684\u7ed3\u679c\u5219\u662f sum % 10 \u3002 \u9006\u5e8f\u8ba1\u7b97 \uff1a \u5b57\u7b26\u4e32\u901a\u5e38\u4ece\u53f3\u5230\u5de6\u8fdb\u884c\u52a0\u6cd5\uff0c\u56e0\u4e3a\u6211\u4eec\u4ece\u4e2a\u4f4d\u5f00\u59cb\u3002\u5904\u7406\u5b8c\u6700\u540e\u4e00\u4f4d\u540e\uff0c\u7ee7\u7eed\u5904\u7406\u5341\u4f4d\u3001\u767e\u4f4d\u7b49\u3002 \u4e3a\u4e86\u65b9\u4fbf\u5b58\u50a8\u7ed3\u679c\uff0c\u901a\u5e38\u4f1a\u4f7f\u7528\u5217\u8868\u9010\u4f4d\u6dfb\u52a0\uff0c\u6700\u540e\u901a\u8fc7 ''.join(list) \u4ee5\u83b7\u5f97\u6b63\u786e\u7684\u987a\u5e8f\u7684\u5b57\u7b26\u4e32\u3002 \u4f8b\u9898\u8bb2\u89e3 LC415 \u5b57\u7b26\u4e32\u76f8\u52a0 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u975e\u8d1f\u6574\u6570 num1 \u548cnum2 \uff0c\u8ba1\u7b97\u5b83\u4eec\u7684\u548c\u5e76\u540c\u6837\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u8fd4\u56de\u3002 \u4f60\u4e0d\u80fd\u4f7f\u7528\u4efb\u4f55\u5167\u5efa\u7684\u7528\u4e8e\u5904\u7406\u5927\u6574\u6570\u7684\u5e93\uff08\u6bd4\u5982 BigInteger\uff09\uff0c \u4e5f\u4e0d\u80fd\u76f4\u63a5\u5c06\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6574\u6570\u5f62\u5f0f\u3002 \u9898\u76ee\u5206\u6790 \u8981\u8ba1\u7b97\u4e24\u4e2a\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u975e\u8d1f\u6574\u6570 num1 \u548c num2 \u7684\u548c\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c\u4e3a\u5b57\u7b26\u4e32\u5f62\u5f0f\uff0c\u6211\u4eec\u9700\u8981\u624b\u52a8\u6a21\u62df\u52a0\u6cd5\u7684\u8fc7\u7a0b\uff0c\u7c7b\u4f3c\u4e8e\u5728\u7eb8\u4e0a\u8fdb\u884c\u52a0\u6cd5\u8ba1\u7b97\u3002\u4e0b\u9762\u662f\u8be6\u7ec6\u7684\u89e3\u9898\u601d\u8def\u548c\u6b65\u9aa4\u3002 \u89e3\u9898\u601d\u8def \u4ece\u53f3\u5230\u5de6\u904d\u5386 \uff1a \u52a0\u6cd5\u901a\u5e38\u662f\u4ece\u4e2a\u4f4d\u5f00\u59cb\u8ba1\u7b97\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4ece\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u5f00\u59cb\u904d\u5386\u3002 \u9010\u4f4d\u76f8\u52a0 \uff1a \u5bf9\u4e8e num1 \u548c num2 \u4e2d\u7684\u6bcf\u4e00\u4f4d\uff0c\u5206\u522b\u5c06\u5b83\u4eec\u8f6c\u5316\u4e3a\u6570\u5b57\uff0c\u8fdb\u884c\u52a0\u6cd5\u64cd\u4f5c\u3002 \u9700\u8981\u8003\u8651\u8fdb\u4f4d\uff08carry\uff09\u7684\u5f71\u54cd\uff0c\u5373\u5982\u679c\u67d0\u4e00\u4f4d\u7684\u548c\u5927\u4e8e\u6216\u7b49\u4e8e 10\uff0c\u5219\u9700\u8981\u5c06 1 \u8fdb\u4f4d\u5230\u4e0b\u4e00\u4f4d\u3002 \u5904\u7406\u4e0d\u540c\u957f\u5ea6\u7684\u5b57\u7b26\u4e32 \uff1a \u5728\u8fdb\u884c\u52a0\u6cd5\u65f6\uff0c\u5982\u679c\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e0d\u540c\uff0c\u6211\u4eec\u9700\u8981\u786e\u4fdd\u4ece\u6700\u53f3\u8fb9\u5f00\u59cb\u6dfb\u52a0\u4e0a\u77ed\u5b57\u7b26\u4e32\u7684\u7f3a\u5931\u90e8\u5206\u3002 \u4f8b\u5982\uff0c\u5bf9\u4e8e num1 \u957f\u5ea6\u4e3a 5 \u548c num2 \u957f\u5ea6\u4e3a 3 \u7684\u60c5\u51b5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u8ba1\u7b97\u65f6\u8003\u8651 num2 \u7684\u524d\u4e09\u4f4d\u3002 \u5904\u7406\u6700\u540e\u7684\u8fdb\u4f4d \uff1a \u5982\u679c\u904d\u5386\u7ed3\u675f\u540e\u8fd8\u6709\u8fdb\u4f4d\uff08carry\uff09\u672a\u5904\u7406\uff0c\u9700\u8981\u5c06\u5176\u6dfb\u52a0\u5230\u7ed3\u679c\u4e2d\u3002 \u7ed3\u679c\u62fc\u63a5 \uff1a \u7531\u4e8e\u6211\u4eec\u662f\u4ece\u540e\u5411\u524d\u8ba1\u7b97\u7684\uff0c\u56e0\u6b64\u6700\u7ec8\u7684\u7ed3\u679c\u9700\u8981\u53cd\u8f6c\u4e00\u4e0b\u3002 \u793a\u4f8b\u4ee3\u7801 class Solution: def addStrings(self, num1: str, num2: str) -> str: result = [] # \u4f7f\u7528\u5217\u8868\u5b58\u50a8\u7ed3\u679c carry = 0 # \u8fdb\u4f4d i, j = len(num1) - 1, len(num2) - 1 # num1 \u548c num2 \u7684\u6700\u540e\u4e00\u4f4d\u7d22\u5f15 # \u5faa\u73af\u76f4\u5230 num1 \u548c num2 \u90fd\u904d\u5386\u5b8c while i >= 0 or j >= 0 or carry > 0: sum = carry # \u4ece\u8fdb\u4f4d\u5f00\u59cb if i >= 0: sum += int(num1[i]) i -= 1 # \u79fb\u52a8\u5230\u4e0a\u4e00\u4f4d if j >= 0: sum += int(num2[j]) j -= 1 # \u79fb\u52a8\u5230\u4e0a\u4e00\u4f4d result.append(str(sum % 10)) # \u5f53\u524d\u4f4d\u7684\u7ed3\u679c carry = sum // 10 # \u66f4\u65b0\u8fdb\u4f4d return ''.join(result[::-1]) # \u53cd\u8f6c\u7ed3\u679c\u5e76\u8fd4\u56de LC7 \u6574\u6570\u53cd\u8f6c \u95ee\u9898\u63cf\u8ff0 \u7ed9\u4f60\u4e00\u4e2a 32 \u4f4d\u7684\u6709\u7b26\u53f7\u6574\u6570 x \uff0c\u8fd4\u56de\u5c06 x \u4e2d\u7684\u6570\u5b57\u90e8\u5206\u53cd\u8f6c\u540e\u7684\u7ed3\u679c\u3002 \u5982\u679c\u53cd\u8f6c\u540e\u6574\u6570\u8d85\u8fc7 32 \u4f4d\u7684\u6709\u7b26\u53f7\u6574\u6570\u7684\u8303\u56f4 [-2^31, 2^31 - 1] \uff0c\u5c31\u8fd4\u56de 0\u3002 \u5047\u8bbe\u73af\u5883\u4e0d\u5141\u8bb8\u5b58\u50a8 64 \u4f4d\u6574\u6570\uff08\u6709\u7b26\u53f7\u6216\u65e0\u7b26\u53f7\uff09\u3002 \u89e3\u9898\u601d\u8def \u6211\u4eec\u9700\u8981\u9010\u4f4d\u53cd\u8f6c\u6574\u6570 x \uff0c\u5e76\u5728\u8fc7\u7a0b\u4e2d\u68c0\u67e5\u662f\u5426\u4f1a\u53d1\u751f\u6ea2\u51fa\u3002\u4ee5\u4e0b\u662f\u5177\u4f53\u6b65\u9aa4\uff1a \u521d\u59cb\u5316\u53d8\u91cf \uff1a result = 0 \uff1a\u7528\u4e8e\u5b58\u50a8\u53cd\u8f6c\u540e\u7684\u7ed3\u679c\u3002 sign = -1 if x < 0 else 1 \uff1a\u8bb0\u5f55 x \u7684\u7b26\u53f7\uff0c\u8d1f\u6570\u4e3a -1 \uff0c\u975e\u8d1f\u6570\u4e3a 1 \u3002 x = abs(x) \uff1a\u5bf9 x \u53d6\u7edd\u5bf9\u503c\uff0c\u65b9\u4fbf\u540e\u7eed\u5904\u7406\u3002 \u5b9a\u4e49\u6574\u6570\u8303\u56f4 \uff1a INT_MAX = 2**31 - 1 \uff1a32 \u4f4d\u6709\u7b26\u53f7\u6574\u6570\u7684\u6700\u5927\u503c\uff0c\u5373 2147483647 \u3002 INT_MIN = -2**31 \uff1a32 \u4f4d\u6709\u7b26\u53f7\u6574\u6570\u7684\u6700\u5c0f\u503c\uff0c\u5373 -2147483648 \u3002 \u5faa\u73af\u53cd\u8f6c\u6570\u5b57 \uff1a \u5f53 x \u4e0d\u7b49\u4e8e 0 \u65f6\uff0c\u91cd\u590d\u4ee5\u4e0b\u6b65\u9aa4\uff1a \u63d0\u53d6\u6700\u540e\u4e00\u4f4d\u6570\u5b57\uff1a digit = x % 10 \u3002 \u79fb\u9664\u6700\u540e\u4e00\u4f4d\u6570\u5b57\uff1a x = x // 10 \u3002 4. \u4f18\u5316\u540e\u7684\u6ea2\u51fa\u68c0\u67e5 \uff1a \u5728\u5c06 digit \u52a0\u5165 result \u4e4b\u524d\uff0c\u68c0\u67e5\u662f\u5426\u4f1a\u6ea2\u51fa\u3002 \u5982\u679c result > INT_MAX // 10 \uff0c\u5219\u4e58\u4ee5 10 \u540e\u4e00\u5b9a\u4f1a\u6ea2\u51fa\uff0c\u8fd4\u56de 0 \u5982\u679c result == INT_MAX // 10 \uff0c\u9700\u8981\u6839\u636e digit \u8fdb\u4e00\u6b65\u5224\u65ad\uff1a \u5982\u679c digit > INT_MAX % 10 \uff08\u5373 7 \uff09\uff0c\u5219\u4f1a\u6ea2\u51fa\uff0c\u8fd4\u56de 0 \u3002 5. \u66f4\u65b0\u7ed3\u679c \uff1a \u5c06\u63d0\u53d6\u7684\u6570\u5b57\u52a0\u5165\u7ed3\u679c\u4e2d\uff1a result = result * 10 + digit \u3002 6. \u6062\u590d\u7b26\u53f7\u5e76\u8fd4\u56de\u7ed3\u679c \uff1a \u8fd4\u56de\u6700\u7ec8\u7ed3\u679c\uff1a return result * sign \u3002 \u793a\u4f8b\u4ee3\u7801 class Solution: def reverse(self, x: int) -> int: INT_MAX = 2**31 - 1 # 2147483647 INT_MIN = -2**31 # -2147483648 sign = -1 if x < 0 else 1 # \u8bb0\u5f55\u7b26\u53f7 x = abs(x) result = 0 while x != 0: digit = x % 10 x = x // 10 # \u6ea2\u51fa\u68c0\u67e5 if result > INT_MAX // 10 or (result == INT_MAX // 10 and digit > INT_MAX % 10): return 0 result = result * 10 + digit return sign * result \u6ea2\u51fa\u68c0\u67e5\u6761\u4ef6\u8bf4\u660e \u6761\u4ef6\u4e00 \uff1a result > INT_MAX // 10 \u5982\u679c result \u5927\u4e8e 214748364 \uff0c\u90a3\u4e48\u4e0b\u4e00\u6b21 result * 10 \u540e\u4e00\u5b9a\u4f1a\u8d85\u8fc7 2147483640 \uff0c\u52a0\u4e0a\u4efb\u4f55 digit \u90fd\u4f1a\u6ea2\u51fa\u3002 \u6761\u4ef6\u4e8c \uff1a result == INT_MAX // 10 and digit > INT_MAX % 10 \u5982\u679c result \u7b49\u4e8e 214748364 \uff0c\u9700\u8981\u68c0\u67e5 digit \u662f\u5426\u5927\u4e8e 7 \uff08 INT_MAX % 10 \uff09\u3002 \u56e0\u4e3a INT_MAX \u7684\u4e2a\u4f4d\u662f 7 \uff0c\u5982\u679c digit > 7 \uff0c\u5219\u53cd\u8f6c\u540e\u4f1a\u8d85\u8fc7 INT_MAX \uff0c\u53d1\u751f\u6ea2\u51fa\u3002 \u4e3e\u4e00\u53cd\u4e09 LC67 \u4e8c\u8fdb\u5236\u6c42\u548c \u95ee\u9898\u63cf\u8ff0 \u7ed9\u4f60\u4e24\u4e2a\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32 a \u548c b \uff0c\u4ee5\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\u8fd4\u56de\u5b83\u4eec\u7684\u548c\u3002 \u89e3\u9898\u601d\u8def \u4ece\u53f3\u5230\u5de6\u904d\u5386 \uff1a \u7531\u4e8e\u4e8c\u8fdb\u5236\u52a0\u6cd5\u662f\u4ece\u6700\u53f3\u4fa7\u7684\u4f4d\uff08\u6700\u4f4e\u4f4d\uff09\u5f00\u59cb\u7684\uff0c\u6211\u4eec\u9700\u8981\u4ece\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u5f00\u59cb\u5904\u7406\u3002 \u9010\u4f4d\u76f8\u52a0 \uff1a \u4f7f\u7528\u4e24\u4e2a\u6307\u9488\u5206\u522b\u6307\u5411\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\uff08\u5373\u6700\u540e\u4e00\u4f4d\uff09\u3002 \u9010\u4f4d\u76f8\u52a0\u5e76\u5904\u7406\u8fdb\u4f4d\uff08carry\uff09\u3002 \u5904\u7406\u4e0d\u540c\u957f\u5ea6\u7684\u5b57\u7b26\u4e32 \uff1a \u5982\u679c\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e0d\u540c\uff0c\u77ed\u7684\u5b57\u7b26\u4e32\u5728\u8ba1\u7b97\u65f6\u4f1a\u7f3a\u5931\u90e8\u5206\u4f4d\u3002\u9700\u8981\u5728\u5904\u7406\u8fc7\u7a0b\u4e2d\u68c0\u67e5\u662f\u5426\u5df2\u7ecf\u8d85\u51fa\u67d0\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002 \u5904\u7406\u6700\u540e\u7684\u8fdb\u4f4d \uff1a \u5982\u679c\u904d\u5386\u7ed3\u675f\u540e\u4ecd\u7136\u6709\u8fdb\u4f4d\uff08carry\uff09\uff0c\u9700\u8981\u5c06\u5176\u6dfb\u52a0\u5230\u7ed3\u679c\u4e2d\u3002 \u62fc\u63a5\u548c\u53cd\u8f6c\u7ed3\u679c \uff1a \u7531\u4e8e\u6211\u4eec\u662f\u4ece\u540e\u5411\u524d\u8ba1\u7b97\u7684\uff0c\u56e0\u6b64\u9700\u8981\u5728\u6700\u540e\u53cd\u8f6c\u7ed3\u679c\u5b57\u7b26\u4e32\u3002 \u793a\u4f8b\u4ee3\u7801 class Solution: def addBinary(self, a: str, b: str) -> str: result = [] # \u4f7f\u7528\u5217\u8868\u5b58\u50a8\u7ed3\u679c carry = 0 # \u8fdb\u4f4d i, j = len(a) - 1, len(b) - 1 # a \u548c b \u7684\u6700\u540e\u4e00\u4f4d\u7d22\u5f15 # \u5faa\u73af\u76f4\u5230 a \u548c b \u90fd\u904d\u5386\u5b8c while i >= 0 or j >= 0 or carry > 0: # \u8ba1\u7b97\u5f53\u524d\u4f4d\u7684\u548c if i >= 0: carry += int(a[i]) # \u53d6 a \u7684\u5f53\u524d\u4f4d\u5e76\u8f6c\u4e3a\u6570\u5b57 i -= 1 if j >= 0: carry += int(b[j]) # \u53d6 b \u7684\u5f53\u524d\u4f4d\u5e76\u8f6c\u4e3a\u6570\u5b57 j -= 1 # \u5c06\u5f53\u524d\u4f4d\u7684\u7ed3\u679c\u6dfb\u52a0\u5230\u7ed3\u679c\u4e2d result.append(str(carry % 2)) # \u5f53\u524d\u4f4d\u7ed3\u679c carry //= 2 # \u66f4\u65b0\u8fdb\u4f4d return ''.join(result[::-1]) # \u53cd\u8f6c\u7ed3\u679c\u5e76\u8fd4\u56de LC989 \u6570\u7ec4\u5f62\u5f0f\u7684\u6574\u6570\u52a0\u6cd5 \u95ee\u9898\u63cf\u8ff0 \u6574\u6570\u7684\u6570\u7ec4\u5f62\u5f0f num \u662f\u6309\u7167\u4ece\u5de6\u5230\u53f3\u7684\u987a\u5e8f\u8868\u793a\u5176\u6570\u5b57\u7684\u6570\u7ec4\u3002 \u4f8b\u5982\uff0c\u5bf9\u4e8e num = 1321 \uff0c\u6570\u7ec4\u5f62\u5f0f\u662f [1,3,2,1] \u3002 \u7ed9\u5b9a num \uff0c\u6574\u6570\u7684\u6570\u7ec4\u5f62\u5f0f\uff0c\u548c\u6574\u6570 k \uff0c\u8fd4\u56de \u6574\u6570 num + k \u7684\u6570\u7ec4\u5f62\u5f0f\u3002 \u89e3\u9898\u601d\u8def \u4ece\u53f3\u5230\u5de6\u8fdb\u884c\u52a0\u6cd5 \uff1a \u4ece\u6570\u7ec4 num \u7684\u6700\u540e\u4e00\u4f4d\uff08\u6700\u4f4e\u4f4d\uff09\u5f00\u59cb\u52a0\uff0c\u9010\u4f4d\u5904\u7406\u3002 \u5904\u7406\u8fdb\u4f4d \uff1a \u6bcf\u4e00\u4f4d\u7684\u548c\u53ef\u80fd\u4f1a\u4ea7\u751f\u4e00\u4e2a\u8fdb\u4f4d\uff0c\u6211\u4eec\u9700\u8981\u8bb0\u5f55\u8fd9\u4e2a\u8fdb\u4f4d\u5e76\u5728\u4e0b\u4e00\u4f4d\u7684\u52a0\u6cd5\u4e2d\u4f7f\u7528\u3002 \u904d\u5386\u7ed3\u675f\u540e\u7684\u5904\u7406 \uff1a \u5982\u679c\u5728\u904d\u5386\u7ed3\u675f\u65f6\u4ecd\u6709\u8fdb\u4f4d\uff0c\u9700\u8981\u5c06\u8fdb\u4f4d\u6dfb\u52a0\u5230\u7ed3\u679c\u4e2d\u3002 \u7ed3\u679c\u6784\u5efa \uff1a \u5c06\u8ba1\u7b97\u7684\u7ed3\u679c\u5b58\u50a8\u5728\u4e00\u4e2a\u5217\u8868\u4e2d\uff0c\u6700\u540e\u9700\u8981\u53cd\u8f6c\u8fd9\u4e2a\u5217\u8868\uff0c\u56e0\u4e3a\u6211\u4eec\u662f\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\u8ba1\u7b97\u7684\u3002 \u793a\u4f8b\u4ee3\u7801 class Solution: def addToArrayForm(self, num: List[int], k: int) -> List[int]: result = [] # \u7528\u4e8e\u5b58\u653e\u7ed3\u679c\u7684\u5217\u8868 carry = 0 # \u521d\u59cb\u5316\u8fdb\u4f4d n = len(num) # \u6570\u7ec4\u957f\u5ea6 # \u4ece\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4f4d\u5f00\u59cb\u5904\u7406 for i in range(n - 1, -1, -1): sum = num[i] + (k % 10) + carry # \u5f53\u524d\u4f4d\u7684\u548c result.append(sum % 10) # \u5f53\u524d\u4f4d\u7ed3\u679c carry = sum // 10 # \u66f4\u65b0\u8fdb\u4f4d k //= 10 # \u79fb\u52a8\u5230 k \u7684\u4e0b\u4e00\u4f4d # \u5904\u7406 k \u53ef\u80fd\u8fd8\u6709\u7684\u5269\u4f59\u4f4d while k > 0 or carry > 0: sum = (k % 10) + carry # \u5f53\u524d\u4f4d\u7684\u548c result.append(sum % 10) # \u5f53\u524d\u4f4d\u7ed3\u679c carry = sum // 10 # \u66f4\u65b0\u8fdb\u4f4d k //= 10 # \u79fb\u52a8\u5230 k \u7684\u4e0b\u4e00\u4f4d # \u7531\u4e8e\u6211\u4eec\u662f\u4ece\u540e\u5411\u524d\u6784\u5efa\u7684\u7ed3\u679c\uff0c\u9700\u8981\u53cd\u8f6c return result[::-1] # \u53cd\u8f6c\u7ed3\u679c\u5e76\u8fd4\u56de \u8bfe\u540e\u7ec3\u4e60 \u5b57\u7b26\u4e32\u5faa\u73af+\u5207\u7247 \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC 1002 \u627e\u5230\u5171\u540c\u5b57\u7b26 \u627e\u5230\u7ed9\u5b9a\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\u6240\u6709\u5b57\u7b26\u4e32\u7684\u5171\u540c\u5b57\u7b26\u3002 LC 541 \u53cd\u8f6c\u5b57\u7b26\u4e32 II \u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u6307\u5b9a\u90e8\u5206\uff0c\u6bcf\u9694\u4e00\u4e2a\u6307\u5b9a\u957f\u5ea6\u53cd\u8f6c\u4e00\u6b21\u3002 LC 771 \u73e0\u5b9d\u4e0e\u77f3\u5934 \u8ba1\u7b97\u5728\u77f3\u5934\u4e2d\u6709\u591a\u5c11\u4e2a\u73e0\u5b9d\u5b57\u7b26\u3002 LC 844 \u56de\u9000\u5b57\u7b26\u4e32\u6bd4\u8f83 \u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u8003\u8651\u5230\u56de\u9000\u5b57\u7b26\uff08\u2018#\u2019\uff09\u7684\u5f71\u54cd\u3002 LC 925 \u957f\u6309\u952e\u5165\u7684\u540d\u5b57 \u68c0\u67e5\u4e00\u4e2a\u540d\u5b57\u662f\u5426\u53ef\u4ee5\u901a\u8fc7\u957f\u6309\u53e6\u4e00\u4e2a\u540d\u5b57\u7684\u5b57\u7b26\u6765\u5b9e\u73b0\u3002 \u5b57\u7b26\u4e32\u6570\u5b66\u8fd0\u7b97 \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC 2243 \u8ba1\u7b97\u5b57\u7b26\u4e32\u4e2d\u7684\u6570\u5b57\u548c \u8ba1\u7b97\u5b57\u7b26\u4e32\u4e2d\u6240\u6709\u6570\u5b57\u5b57\u7b26\u7684\u603b\u548c\u3002 LC 66 \u52a0\u4e00 \u5728\u6570\u7ec4\u5f62\u5f0f\u7684\u6570\u5b57\u4e0a\u52a0\u4e00\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c\u7684\u6570\u7ec4\u5f62\u5f0f\u3002","title":"Lesson8 \u5b57\u7b26\u4e32\u5faa\u73af+\u5207\u7247/\u5b57\u7b26\u4e32\u6570\u5b66\u8fd0\u7b97\u4e13\u9898"},{"location":"lesson8/Lesson8%20Python/#lesson8","text":"","title":"Lesson8 \u5b57\u7b26\u4e32\u5faa\u73af+\u5207\u7247/\u5b57\u7b26\u4e32\u6570\u5b66\u8fd0\u7b97\u4e13\u9898"},{"location":"lesson8/Lesson8%20Python/#_1","text":"\u5b57\u7b26\u4e32\u5faa\u73af+\u5207\u7247 LC14 \u6700\u957f\u516c\u5171\u524d\u7f00 LC125 \u9a8c\u8bc1\u56de\u6587\u4e32 LC459 \u91cd\u590d\u7684\u5b50\u5b57\u7b26\u4e32 LC796 \u65cb\u8f6c\u5b57\u7b26\u4e32 LC28 \u67e5\u627e\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5339\u914d\u9879\u7d22\u5f15 \u5b57\u7b26\u4e32\u6570\u5b66\u8fd0\u7b97 LC415 \u5b57\u7b26\u4e32\u76f8\u52a0 LC7 \u6574\u6570\u53cd\u8f6c LC67 \u4e8c\u8fdb\u5236\u6c42\u548c LC989 \u6570\u7ec4\u5f62\u5f0f\u7684\u6574\u6570\u52a0\u6cd5 \u8bfe\u540e\u7ec3\u4e60","title":"\u76ee\u5f55"},{"location":"lesson8/Lesson8%20Python/#1","text":"","title":"1 \u5b57\u7b26\u4e32\u5faa\u73af+\u5207\u7247"},{"location":"lesson8/Lesson8%20Python/#_2","text":"","title":"\u4f8b\u9898\u8bb2\u89e3"},{"location":"lesson8/Lesson8%20Python/#lc14","text":"","title":"LC14 \u6700\u957f\u516c\u5171\u524d\u7f00"},{"location":"lesson8/Lesson8%20Python/#_3","text":"\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u67e5\u627e\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u3002 \u5982\u679c\u4e0d\u5b58\u5728\u516c\u5171\u524d\u7f00\uff0c\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32 \"\"\u3002","title":"\u9898\u76ee\u63cf\u8ff0"},{"location":"lesson8/Lesson8%20Python/#_4","text":"\u8981\u627e\u5230\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\uff0c\u6211\u4eec\u53ef\u4ee5\u4f9d\u6b21\u6bd4\u8f83\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7684\u5b57\u7b26\uff0c\u76f4\u5230\u627e\u5230\u4e0d\u5339\u914d\u7684\u4f4d\u7f6e\u4e3a\u6b62\u3002\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u591a\u79cd\u65b9\u6cd5\u89e3\u51b3\uff0c\u6bd4\u5982\u7eb5\u5411\u626b\u63cf\u3001\u6a2a\u5411\u626b\u63cf\u3001\u5206\u6cbb\u6cd5\u3001\u4e8c\u5206\u67e5\u627e\u7b49\u3002\u6211\u4eec\u8fd9\u91cc\u91c7\u7528\u4e00\u79cd\u8f83\u4e3a\u76f4\u89c2\u7684\u6a2a\u5411\u626b\u63cf\u6cd5\u3002","title":"\u9898\u76ee\u5206\u6790"},{"location":"lesson8/Lesson8%20Python/#_5","text":"\u8fb9\u754c\u60c5\u51b5 : \u5982\u679c\u5b57\u7b26\u4e32\u6570\u7ec4\u4e3a\u7a7a\uff0c\u76f4\u63a5\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002 \u5982\u679c\u5b57\u7b26\u4e32\u6570\u7ec4\u53ea\u6709\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u90a3\u4e48\u6700\u957f\u516c\u5171\u524d\u7f00\u5c31\u662f\u8fd9\u4e2a\u5b57\u7b26\u4e32\u672c\u8eab\u3002 \u4ece\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u5f00\u59cb : \u5047\u8bbe\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f\u6700\u957f\u516c\u5171\u524d\u7f00\uff0c\u63a5\u4e0b\u6765\u9010\u4e00\u4e0e\u6570\u7ec4\u4e2d\u7684\u5176\u4ed6\u5b57\u7b26\u4e32\u8fdb\u884c\u6bd4\u8f83\u3002 \u6bcf\u6b21\u6bd4\u8f83\u65f6\uff0c\u9010\u5b57\u7b26\u5730\u8fdb\u884c\u6bd4\u8f83\uff0c\u76f4\u5230\u627e\u5230\u4e0d\u5339\u914d\u7684\u5b57\u7b26\u6216\u6bd4\u8f83\u5b8c\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u6240\u6709\u5b57\u7b26\u3002 \u66f4\u65b0\u5f53\u524d\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u4e3a\u5339\u914d\u7684\u90e8\u5206\u3002 \u8fd4\u56de\u7ed3\u679c : \u6700\u540e\u8fd4\u56de\u5339\u914d\u540e\u7684\u516c\u5171\u524d\u7f00\uff0c\u5982\u679c\u6ca1\u6709\u5339\u914d\u5230\u4efb\u4f55\u524d\u7f00\uff0c\u5219\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002","title":"\u89e3\u9898\u601d\u8def"},{"location":"lesson8/Lesson8%20Python/#_6","text":"class Solution: def longestCommonPrefix(self, strs: List[str]) -> str: # \u8fb9\u754c\u60c5\u51b5\u5904\u7406 if not strs: return \"\" # \u521d\u59cb\u5316\u6700\u957f\u516c\u5171\u524d\u7f00\u4e3a\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32 prefix = strs[0] # \u4f9d\u6b21\u4e0e\u5176\u4ed6\u5b57\u7b26\u4e32\u6bd4\u8f83 for i in range(1, len(strs)): # \u5f53\u524d\u524d\u7f00\u4e0e\u4e0b\u4e00\u4e2a\u5b57\u7b26\u4e32\u6bd4\u8f83 while strs[i].find(prefix) != 0: # \u7f29\u77ed\u524d\u7f00\u957f\u5ea6 prefix = prefix[:len(prefix) - 1] # \u5982\u679c\u524d\u7f00\u4e3a\u7a7a\uff0c\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32 if not prefix: return \"\" return prefix","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"lesson8/Lesson8%20Python/#lc125","text":"","title":"LC125. \u9a8c\u8bc1\u56de\u6587\u4e32"},{"location":"lesson8/Lesson8%20Python/#_7","text":"\u5982\u679c\u5728\u5c06\u6240\u6709\u5927\u5199\u5b57\u7b26\u8f6c\u6362\u4e3a\u5c0f\u5199\u5b57\u7b26\u3001\u5e76\u79fb\u9664\u6240\u6709\u975e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\u4e4b\u540e\uff0c\u77ed\u8bed\u6b63\u7740\u8bfb\u548c\u53cd\u7740\u8bfb\u90fd\u4e00\u6837\u3002\u5219\u53ef\u4ee5\u8ba4\u4e3a\u8be5\u77ed\u8bed\u662f\u4e00\u4e2a\u56de\u6587\u4e32\u3002 \u5b57\u6bcd\u548c\u6570\u5b57\u90fd\u5c5e\u4e8e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\u3002 \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32s\uff0c\u5982\u679c\u5b83\u662f\u56de\u6587\u4e32 \uff0c\u8fd4\u56deTrue\uff1b\u5426\u5219\uff0c\u8fd4\u56deFalse \u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson8/Lesson8%20Python/#_8","text":"\u6211\u4eec\u9700\u8981\u7edf\u8ba1\u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd\u4e2a\u6570\uff0c\u5355\u8bcd\u662f\u7531\u8fde\u7eed\u7684\u975e\u7a7a\u683c\u5b57\u7b26\u7ec4\u6210\u7684\u3002\u7a7a\u683c\u53ef\u4ee5\u7528\u6765\u5206\u9694\u5355\u8bcd\u3002\u9898\u76ee\u4fdd\u8bc1\u5b57\u7b26\u4e32\u4e2d\u6ca1\u6709\u4e0d\u53ef\u6253\u5370\u5b57\u7b26\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u5904\u7406\u7279\u6b8a\u5b57\u7b26\u3002","title":"\u9898\u76ee\u5206\u6790"},{"location":"lesson8/Lesson8%20Python/#_9","text":"\u5bf9\u5b57\u7b26\u4e32 s \u8fdb\u884c\u4e00\u6b21\u904d\u5386\uff0c\u5e76\u5c06\u5176\u4e2d\u7684\u5b57\u6bcd\u548c\u6570\u5b57\u5b57\u7b26\u8fdb\u884c\u4fdd\u7559\uff0c\u653e\u5728\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32 sgood \u4e2d\u3002\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad sgood \u662f\u5426\u662f\u4e00\u4e2a\u666e\u901a\u7684\u56de\u6587\u4e32\u5373\u53ef\u3002 \u53ef\u4ee5\u4f7f\u7528\u8bed\u8a00\u4e2d\u7684\u5b57\u7b26\u4e32\u7ffb\u8f6c API \u5f97\u5230 sgood \u7684\u9006\u5e8f\u5b57\u7b26\u4e32 sgood_rev\uff0c\u53ea\u8981\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u540c\uff0c\u90a3\u4e48 sgood \u5c31\u662f\u56de\u6587\u4e32\u3002","title":"\u89e3\u9898\u601d\u8def"},{"location":"lesson8/Lesson8%20Python/#_10","text":"class Solution: def isPalindrome(self, s: str) -> bool: sgood = [] # \u7528\u4e8e\u5b58\u50a8\u6709\u6548\u5b57\u7b26 for ch in s: if ch.isalnum(): # \u5224\u65ad\u662f\u5426\u4e3a\u5b57\u6bcd\u6216\u6570\u5b57 sgood.append(ch.lower()) # \u8f6c\u4e3a\u5c0f\u5199\u5e76\u6dfb\u52a0\u5230\u6709\u6548\u5b57\u7b26\u4e2d # \u521b\u5efa\u53cd\u8f6c\u540e\u7684\u6709\u6548\u5b57\u7b26\u5b57\u7b26\u4e32 sgood_rev = sgood[::-1] # \u53cd\u8f6c\u5217\u8868 # \u6bd4\u8f83\u6709\u6548\u5b57\u7b26\u548c\u53cd\u8f6c\u5b57\u7b26\u662f\u5426\u76f8\u540c return sgood == sgood_rev","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"lesson8/Lesson8%20Python/#_11","text":"","title":"\u4e3e\u4e00\u53cd\u4e09"},{"location":"lesson8/Lesson8%20Python/#lc459","text":"","title":"LC459. \u91cd\u590d\u7684\u5b50\u5b57\u7b26\u4e32"},{"location":"lesson8/Lesson8%20Python/#_12","text":"\u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u7684\u5b57\u7b26\u4e32 s \uff0c\u68c0\u67e5\u662f\u5426\u53ef\u4ee5\u901a\u8fc7\u7531\u5b83\u7684\u4e00\u4e2a\u5b50\u4e32\u91cd\u590d\u591a\u6b21\u6784\u6210\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson8/Lesson8%20Python/#_13","text":"\u7406\u89e3\u91cd\u590d\u6784\u6210\uff1a \u5982\u679c\u5b57\u7b26\u4e32 s \u53ef\u4ee5\u901a\u8fc7\u91cd\u590d\u67d0\u4e2a\u5b50\u4e32\u591a\u6b21\u6784\u6210\uff0c\u8bf4\u660e s \u7684\u957f\u5ea6\u5e94\u8be5\u662f\u8fd9\u4e2a\u5b50\u4e32\u7684\u957f\u5ea6\u7684\u6574\u6570\u500d\u3002 \u4f8b\u5982\uff0c\u5b57\u7b26\u4e32 \"abab\" \u53ef\u4ee5\u89c6\u4e3a\u5b50\u4e32 \"ab\" \u91cd\u590d\u4e24\u6b21\uff0c\u957f\u5ea6\u4e3a 4 \u7684\u5b57\u7b26\u4e32\u53ef\u7531\u957f\u5ea6\u4e3a 2 \u7684\u5b50\u4e32\u6784\u6210\u3002 \u627e\u5230\u53ef\u80fd\u7684\u5b50\u4e32\u957f\u5ea6\uff1a \u5047\u8bbe\u5b50\u4e32\u7684\u957f\u5ea6\u4e3a n \uff0c\u5219\u53ef\u80fd\u7684\u957f\u5ea6\u53ef\u4ee5\u662f 1 \u5230 len(s) // 2 \u3002\u56e0\u4e3a\u4e00\u4e2a\u5b50\u4e32\u91cd\u590d\u540e\uff0c\u6574\u4f53\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e0d\u53ef\u80fd\u8d85\u8fc7 len(s) \u3002 \u68c0\u67e5\u91cd\u590d\uff1a \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u53ef\u80fd\u7684\u5b50\u4e32\u957f\u5ea6 i \uff0c\u68c0\u67e5 len(s) \u662f\u5426\u80fd\u591f\u88ab i \u6574\u9664\uff08\u5373 len(s) % i == 0 \uff09\u3002 \u5982\u679c\u80fd\u6574\u9664\uff0c\u90a3\u4e48\u53d6\u51fa\u5b50\u4e32 s[0:i] \uff0c\u5e76\u901a\u8fc7\u5c06\u5176\u91cd\u590d len(s) // i \u6b21\u6765\u6784\u9020\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u4e0e\u539f\u5b57\u7b26\u4e32 s \u8fdb\u884c\u6bd4\u8f83\u3002 \u590d\u6742\u5ea6\u5206\u6790\uff1a \u5728\u6700\u574f\u7684\u60c5\u51b5\u4e0b\uff0c\u5916\u5c42\u5faa\u73af\u9700\u8981\u68c0\u67e5 len(s) // 2 \u6b21\uff0c\u6bcf\u6b21\u6bd4\u8f83\u7684\u590d\u6742\u5ea6\u4e3a O(n) \u3002\u6240\u4ee5\u603b\u4f53\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n^2) \uff0c\u5bf9\u4e8e n \u8f83\u5927\u65f6\u53ef\u80fd\u4f1a\u6709\u6027\u80fd\u95ee\u9898\u3002","title":"\u89e3\u9898\u601d\u8def"},{"location":"lesson8/Lesson8%20Python/#_14","text":"class Solution: def repeatedSubstringPattern(self, s: str) -> bool: n = len(s) # \u904d\u5386\u53ef\u80fd\u7684\u5b50\u4e32\u957f\u5ea6 for i in range(1, n // 2 + 1): # \u68c0\u67e5\u662f\u5426\u53ef\u4ee5\u6574\u9664 if n % i == 0: substring = s[:i] # \u6784\u9020\u7531\u5b50\u4e32\u91cd\u590d\u7684\u5b57\u7b26\u4e32 repeated = substring * (n // i) # \u6bd4\u8f83\u6784\u9020\u7684\u5b57\u7b26\u4e32\u4e0e\u539f\u5b57\u7b26\u4e32 if repeated == s: return True return False","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"lesson8/Lesson8%20Python/#_15","text":"\u53ef\u4ee5\u5229\u7528\u5b57\u7b26\u4e32\u7684\u7279\u6027\u6765\u8fdb\u4e00\u6b65\u4f18\u5316\uff1a \u5c06\u5b57\u7b26\u4e32 s \u81ea\u8eab\u62fc\u63a5\u4e00\u904d\uff0c\u5f97\u5230 s + s \u3002 \u53bb\u6389\u5f00\u5934\u548c\u7ed3\u5c3e\u7684\u5b57\u7b26\uff0c\u68c0\u67e5 s \u662f\u5426\u5728\u65b0\u7684\u5b57\u7b26\u4e32\u4e2d\u51fa\u73b0\u3002 \u5982\u679c\u51fa\u73b0\uff0c\u8bf4\u660e s \u53ef\u4ee5\u7531\u67d0\u4e2a\u5b50\u4e32\u6784\u6210\u3002","title":"\u66f4\u9ad8\u6548\u7684\u89e3\u6cd5"},{"location":"lesson8/Lesson8%20Python/#_16","text":"class Solution: def repeatedSubstringPattern(self, s: str) -> bool: doubled = s + s # \u5c06\u5b57\u7b26\u4e32\u62fc\u63a5 sub_string = doubled[1:-1] # \u53bb\u6389\u9996\u5c3e\u5b57\u7b26 return s in sub_string # \u68c0\u67e5\u662f\u5426\u5305\u542b\u539f\u5b57\u7b26\u4e32","title":"\u4f18\u5316\u793a\u4f8b\u4ee3\u7801"},{"location":"lesson8/Lesson8%20Python/#_17","text":"","title":"\u8bc1\u660e\uff1a\u5b57\u7b26\u4e32\u62fc\u63a5\u540e\u6390\u5934\u53bb\u5c3e\u53ef\u4ee5\u7528\u4e8e\u5224\u65ad\u91cd\u590d\u7684\u5b50\u5b57\u7b26\u4e32"},{"location":"lesson8/Lesson8%20Python/#_18","text":"\u524d\u7f00\uff08Prefix\uff09 \uff1a\u4ece\u5b57\u7b26\u4e32\u7684 \u5f00\u5934 \u5f00\u59cb\u7684\u8fde\u7eed\u5b57\u7b26\u5b50\u4e32\u3002\u4f8b\u5982\uff0c\u5b57\u7b26\u4e32 \"abcde\" \u7684\u524d\u7f00\u6709\uff1a \u524d\u7f00 1\uff1a \"a\" \u524d\u7f00 2\uff1a \"ab\" \u524d\u7f00 3\uff1a \"abc\" \u524d\u7f00 4\uff1a \"abcd\" \u524d\u7f00 5\uff1a \"abcde\" \uff08\u6574\u4e2a\u5b57\u7b26\u4e32\u672c\u8eab\u4e5f\u662f\u4e00\u4e2a\u524d\u7f00\uff09 \u540e\u7f00\uff08Suffix\uff09 \uff1a\u4ece\u5b57\u7b26\u4e32\u7684 \u7ed3\u5c3e \u5f00\u59cb\u7684\u8fde\u7eed\u5b57\u7b26\u5b50\u4e32\u3002\u4f8b\u5982\uff0c\u5b57\u7b26\u4e32 \"abcde\" \u7684\u540e\u7f00\u6709\uff1a \u540e\u7f00 1\uff1a \"e\" \u540e\u7f00 2\uff1a \"de\" \u540e\u7f00 3\uff1a \"cde\" \u540e\u7f00 4\uff1a \"bcde\" \u540e\u7f00 5\uff1a \"abcde\" \uff08\u6574\u4e2a\u5b57\u7b26\u4e32\u672c\u8eab\u4e5f\u662f\u4e00\u4e2a\u540e\u7f00\uff09","title":"\u8865\u5145\uff1a\u4ec0\u4e48\u662f\u524d\u7f00\u548c\u540e\u7f00\uff1f"},{"location":"lesson8/Lesson8%20Python/#_19","text":"\u4e3a\u4e86\u8bc1\u660e\u7ed9\u5b9a\u5b57\u7b26\u4e32 s \u662f\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\u5145\u5206\u5fc5\u8981\u6027\uff0c\u6211\u4eec\u9700\u8981\u4ece\u4e24\u4e2a\u65b9\u5411\u6765\u8fdb\u884c\u8bc1\u660e\uff1a \u5145\u5206\u6027 \uff1a\u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u4e32 s \u662f\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\uff0c\u90a3\u4e48\u5728\u62fc\u63a5\u540e\u7684\u5b57\u7b26\u4e32 s + s \u4e2d\uff0c\u6390\u5934\u53bb\u5c3e\u540e\uff0c\u4e00\u5b9a\u80fd\u518d\u6b21\u627e\u5230 s \u3002 \u5fc5\u8981\u6027 \uff1a\u5982\u679c\u5728\u6390\u5934\u53bb\u5c3e\u7684 s + s \u4e2d\u627e\u5230\u4e86 s \uff0c\u90a3\u4e48 s \u4e00\u5b9a\u662f\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\u3002","title":"\u5145\u5206\u5fc5\u8981\u6027\u8bc1\u660e"},{"location":"lesson8/Lesson8%20Python/#1_1","text":"\u5047\u8bbe \uff1a\u8bbe\u5b57\u7b26\u4e32 s \u662f\u7531\u4e00\u4e2a\u8f83\u77ed\u7684\u5b50\u4e32 p \u91cd\u590d\u591a\u6b21\u6784\u6210\u7684\uff0c\u5373 s = p + p + ... + p \uff08\u5047\u8bbe p \u91cd\u590d k \u6b21\uff09\u3002 \u4e3e\u4f8b \uff1a\u6bd4\u5982 s = \"abab\" \uff0c\u8fd9\u662f\u7531 p = \"ab\" \u91cd\u590d\u4e24\u6b21\u6784\u6210\u7684\u3002 \u62fc\u63a5 s + s \uff1a\u6211\u4eec\u5c06 s \u62fc\u63a5\u5f97\u5230 s + s \uff0c\u4f8b\u5982\uff1a s = \"abab\" s_plus = s + s # \"abab\" + \"abab\" = \"abababab\" \u63a5\u7740\uff0c\u6390\u5934\u53bb\u5c3e\uff0c\u53bb\u6389\u9996\u5c3e\u5b57\u7b26\uff0c\u5f97\u5230 new_s = (s + s)[1:-1] \uff0c\u5bf9\u4e8e\u4e0a\u9762\u7684\u4f8b\u5b50\uff1a new_s = s_plus[1:-1] # \u53bb\u6389\u9996\u5c3e\u5b57\u7b26 # new_s = \"abababab\"[1:-1] = \"bababa\" \u5bfb\u627e s \u5728 new_s \u4e2d\u7684\u51fa\u73b0 \uff1a\u7531\u4e8e s \u662f\u7531\u5b50\u4e32 p \u591a\u6b21\u91cd\u590d\uff08\u81f3\u5c11\u4e24\u6b21\uff09\u6784\u6210\u7684\uff0c s + s \u5c31\u4f1a\u91cd\u590d\u81f3\u5c11 4 \u6b21 p \uff0c\u6390\u5934\u53bb\u5c3e\u540e\uff0c\u91cd\u590d\u81f3\u5c11 2 \u6b21 p \uff0c\u524d\u7f00\u548c\u540e\u7f00\u5fc5\u7136\u6709\u91cd\u53e0\uff0c\u4e00\u5b9a\u80fd\u518d\u6b21\u627e\u5230 s \u3002 new_s = \"bababa\" \u2193\u2193\u2193\u2193 \"abab\" # \u8fd9\u91cc\u518d\u6b21\u51fa\u73b0\u4e86 s \u5145\u5206\u6027\u8bc1\u6bd5\u3002","title":"1. \u5145\u5206\u6027"},{"location":"lesson8/Lesson8%20Python/#2","text":"\u5047\u8bbe \uff1a\u6211\u4eec\u5df2\u7ecf\u5728\u53bb\u6389\u9996\u5c3e\u5b57\u7b26\u7684 s + s \u4e2d\u518d\u6b21\u627e\u5230\u4e86 s \u3002\u73b0\u5728\u6211\u4eec\u9700\u8981\u8bc1\u660e\uff0c s \u4e00\u5b9a\u662f\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\u3002 \u6784\u9020 new_s \uff1a\u9996\u5148\uff0c\u6784\u9020 s_plus = s + s new_s = s_plus[1:-1] # \u53bb\u6389\u9996\u5c3e\u5b57\u7b26 \u5047\u8bbe s \u5728 new_s \u4e2d\u5339\u914d\u7684\u4f4d\u7f6e\u662f\u4ece\u7d22\u5f15 i \u5f00\u59cb\uff0c\u8fd9\u610f\u5473\u7740\uff1a new_s[i:i+len(s)] == s \u7531\u4e8e new_s \u662f s + s \u53bb\u6389\u9996\u5c3e\u5b57\u7b26\u5f97\u5230\u7684\uff0c\u5373\uff1a new_s = s_plus[1:-1] = (s + s)[1:-1] \u6240\u4ee5\uff1a new_s = s[1:] + s[:-1] \u56e0\u6b64\uff0c new_s \u662f\u7531 s \u7684\u540e\u7f00\u548c\u524d\u7f00\u62fc\u63a5\u800c\u6210\u3002 \u6839\u636e\u5339\u914d\u6761\u4ef6 \uff1a s == new_s[i:i+len(s)] \u5373\uff1a s == (s[1:] + s[:-1])[i:i+len(s)] \u8fd9\u8868\u660e s \u53ef\u4ee5\u901a\u8fc7\u81ea\u8eab\u7684\u4e00\u4e2a\u540e\u7f00\u548c\u524d\u7f00\u62fc\u63a5\u5f97\u5230\uff0c\u8bf4\u660e s \u5b58\u5728\u5468\u671f\u6027\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c s \u662f\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\u3002 \u4e3e\u4f8b\u8bf4\u660e \uff1a s = \"abab\" s_plus = s + s # \"abababab\" new_s = s_plus[1:-1] # \"bababa\" s \u7684\u524d\u7f00\u6709\uff1a 'a', 'ab', 'aba', 'abab' s \u7684\u540e\u7f00\u6709\uff1a 'b', 'ab', 'bab', 'abab' \u53ef\u4ee5\u53d1\u73b0\uff0c\u5728 new_s \u4e2d\uff0c s \u518d\u6b21\u51fa\u73b0\uff1a new_s[1:1+4] == \"abab\" # \"bababa\"[1:5] == \"abab\" \u8fd9\u8bf4\u660e\uff1a s \u7684\u540e\u7f00 \"bab\" \u4e0e\u524d\u7f00 \"ab\" \u91cd\u53e0\u62fc\u63a5\uff0c\u5f62\u6210\u4e86\u5468\u671f\u6027\u3002 \u56e0\u6b64\uff0c s \u662f\u7531 \"ab\" \u91cd\u590d\u6784\u6210\u7684\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c s \u7684\u524d\u7f00\u548c\u540e\u7f00\u6709\u67d0\u79cd\u91cd\u53e0\uff0c\u5f62\u6210\u4e86\u5468\u671f\u6027\uff0c\u90a3\u4e48 s \u5c31\u53ef\u4ee5\u901a\u8fc7\u91cd\u590d\u67d0\u4e2a\u5b50\u4e32\u6784\u6210\u3002 \u5fc5\u8981\u6027\u8bc1\u6bd5\u3002","title":"2. \u5fc5\u8981\u6027"},{"location":"lesson8/Lesson8%20Python/#_20","text":"\u6211\u4eec\u5df2\u7ecf\u8bc1\u660e\u4e86\uff1a \u5145\u5206\u6027 \uff1a\u5982\u679c s \u662f\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\uff0c\u90a3\u4e48\u5728 s + s \u4e2d\u6390\u5934\u53bb\u5c3e\u540e\uff0c\u4e00\u5b9a\u80fd\u591f\u518d\u6b21\u627e\u5230 s \u3002\u8fd9\u662f\u56e0\u4e3a\u91cd\u590d\u5b50\u4e32\u4f1a\u4f7f\u5f97\u524d\u7f00\u548c\u540e\u7f00\u6709\u91cd\u53e0\u3002 \u5fc5\u8981\u6027 \uff1a\u5982\u679c\u5728\u6390\u5934\u53bb\u5c3e\u7684 s + s \u4e2d\u627e\u5230\u4e86 s \uff0c\u90a3\u4e48 s \u4e00\u5b9a\u662f\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u7684\u3002\u8fd9\u662f\u56e0\u4e3a\u53ea\u6709\u5f53 s \u5177\u6709\u5468\u671f\u6027\u65f6\uff0c\u5b83\u7684\u524d\u7f00\u548c\u540e\u7f00\u624d\u4f1a\u4ea4\u66ff\u91cd\u53e0\uff0c\u5f62\u6210\u5339\u914d\u3002 \u56e0\u6b64\uff0c\u62fc\u63a5 s + s \u5e76\u53bb\u6389\u9996\u5c3e\u5b57\u7b26\u540e\u80fd\u5426\u518d\u6b21\u627e\u5230 s \uff0c\u53ef\u4ee5\u7528\u6765\u5224\u65ad s \u662f\u5426\u7531\u67d0\u4e2a\u5b50\u4e32\u91cd\u590d\u6784\u6210\u3002","title":"\u603b\u7ed3\uff1a"},{"location":"lesson8/Lesson8%20Python/#_21","text":"\u5145\u5206\u6027\u53ca\u5fc5\u8981\u6027\u8bc1\u660e Leetcode\u5b98\u65b9\u9898\u89e3\u8bc1\u660e","title":"\u8865\u5145\u6750\u6599\uff1a"},{"location":"lesson8/Lesson8%20Python/#lc796","text":"","title":"LC796 \u65cb\u8f6c\u5b57\u7b26\u4e32"},{"location":"lesson8/Lesson8%20Python/#_22","text":"\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32, s \u548c goal\u3002\u5982\u679c\u5728\u82e5\u5e72\u6b21\u65cb\u8f6c\u64cd\u4f5c\u4e4b\u540e\uff0cs \u80fd\u53d8\u6210 goal \uff0c\u90a3\u4e48\u8fd4\u56de true \u3002 s \u7684 \u65cb\u8f6c\u64cd\u4f5c \u5c31\u662f\u5c06 s \u6700\u5de6\u8fb9\u7684\u5b57\u7b26\u79fb\u52a8\u5230\u6700\u53f3\u8fb9\u3002 \u4f8b\u5982, \u82e5 s = 'abcde'\uff0c\u5728\u65cb\u8f6c\u4e00\u6b21\u4e4b\u540e\u7ed3\u679c\u5c31\u662f'bcdea' \u3002 \u8981\u5224\u65ad\u5b57\u7b26\u4e32 s \u662f\u5426\u53ef\u4ee5\u901a\u8fc7\u82e5\u5e72\u6b21\u65cb\u8f6c\u64cd\u4f5c\u53d8\u6210\u5b57\u7b26\u4e32 goal \uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u4ee5\u4e0b\u601d\u8def\u8fdb\u884c\u89e3\u51b3\uff1a","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson8/Lesson8%20Python/#_23","text":"\u7406\u89e3\u65cb\u8f6c \uff1a \u65cb\u8f6c\u64cd\u4f5c\u662f\u5c06\u5b57\u7b26\u4e32\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u79fb\u52a8\u5230\u6700\u540e\u4e00\u4f4d\u3002 \u4f8b\u5982\uff0c\u5b57\u7b26\u4e32 \"abcde\" \u7ecf\u8fc7\u4e00\u6b21\u65cb\u8f6c\u53d8\u4e3a \"bcdea\" \uff0c\u518d\u7ecf\u8fc7\u4e00\u6b21\u65cb\u8f6c\u53d8\u4e3a \"cdeab\" \uff0c\u5982\u6b64\u7c7b\u63a8\u3002 \u5b57\u7b26\u4e32\u65cb\u8f6c\u7684\u7279\u6027 \uff1a \u5982\u679c\u6211\u4eec\u5c06\u5b57\u7b26\u4e32 s \u8fdb\u884c\u4e24\u6b21\u62fc\u63a5\uff0c\u5f97\u5230 s + s \uff0c\u8fd9\u4e2a\u65b0\u5b57\u7b26\u4e32\u5305\u542b\u4e86\u6240\u6709\u53ef\u80fd\u7684\u65cb\u8f6c\u5f62\u5f0f\u3002 \u4f8b\u5982\uff1a \u5bf9\u4e8e s = \"abcde\" \uff0c\u62fc\u63a5\u540e s + s = \"abcdeabcde\" \uff0c\u5176\u4e2d\u5305\u542b\u4e86 \"abcde\" \u7684\u6240\u6709\u65cb\u8f6c\u5f62\u5f0f\uff0c\u5982 \"abcde\" \u3001 \"bcdea\" \u3001 \"cdeab\" \u3001 \"deabc\" \u548c \"eabcd\" \u3002 \u5224\u65ad goal \u662f\u5426\u5728 s + s \u4e2d \uff1a \u53ea\u9700\u68c0\u67e5 goal \u662f\u5426\u662f s + s \u7684\u5b50\u4e32\u3002 \u5982\u679c goal \u662f s + s \u7684\u5b50\u4e32\uff0c\u5219\u8fd4\u56de True \uff0c\u5426\u5219\u8fd4\u56de False \u3002","title":"\u89e3\u9898\u601d\u8def"},{"location":"lesson8/Lesson8%20Python/#_24","text":"class Solution: def rotateString(self, s: str, goal: str) -> bool: # \u68c0\u67e5\u957f\u5ea6\u662f\u5426\u76f8\u7b49 if len(s) != len(goal): return False # \u62fc\u63a5\u5b57\u7b26\u4e32 doubled = s + s # \u68c0\u67e5 goal \u662f\u5426\u4e3a doubled \u7684\u5b50\u4e32 return goal in doubled","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"lesson8/Lesson8%20Python/#_25","text":"class Solution: def rotateString(self, s: str, goal: str) -> bool: return len(s) == len(goal) and goal in (s + s)","title":"\u7b80\u6d01\u5199\u6cd5"},{"location":"lesson8/Lesson8%20Python/#lc28","text":"","title":"LC28 \u67e5\u627e\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5339\u914d\u9879\u7d22\u5f15"},{"location":"lesson8/Lesson8%20Python/#_26","text":"\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 haystack \u548c needle \uff0c\u4f60\u9700\u8981\u5728 haystack \u5b57\u7b26\u4e32\u4e2d\u627e\u51fa needle \u5b57\u7b26\u4e32\u51fa\u73b0\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\uff08\u4ece 0 \u5f00\u59cb\uff09\u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de -1 \u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson8/Lesson8%20Python/#_27","text":"\u5982\u679c needle \u4e3a\u7a7a\u5b57\u7b26\u4e32\uff0c\u76f4\u63a5\u8fd4\u56de 0 \u3002 \u904d\u5386 haystack \uff0c\u4ece\u6bcf\u4e2a\u7d22\u5f15\u4f4d\u7f6e\u68c0\u67e5\u662f\u5426\u4e0e needle \u5339\u914d\u3002 \u5982\u679c\u5339\u914d\u6210\u529f\uff0c\u8fd4\u56de\u8be5\u7d22\u5f15\uff0c\u5426\u5219\u7ee7\u7eed\u904d\u5386\u3002 \u5982\u679c\u904d\u5386\u7ed3\u675f\u540e\u672a\u627e\u5230\uff0c\u8fd4\u56de -1 \u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson8/Lesson8%20Python/#_28","text":"class Solution: def strStr(self, haystack: str, needle: str) -> int: # \u5982\u679cneedle\u4e3a\u7a7a\u5b57\u7b26\u4e32\uff0c\u76f4\u63a5\u8fd4\u56de0 if not needle: return 0 # \u83b7\u53d6\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6 n = len(haystack) m = len(needle) # \u904d\u5386haystack\uff0c\u76f4\u5230\u5269\u4f59\u7684\u90e8\u5206\u957f\u5ea6\u5c0f\u4e8eneedle\u957f\u5ea6 for i in range(n - m + 1): # \u6bd4\u8f83\u4ecei\u5f00\u59cb\u7684\u5b50\u4e32\u662f\u5426\u7b49\u4e8eneedle if haystack[i:i + m] == needle: return i # \u5982\u679c\u904d\u5386\u7ed3\u675f\u540e\u6ca1\u6709\u627e\u5230\uff0c\u8fd4\u56de-1 return -1","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson8/Lesson8%20Python/#2_1","text":"\u5b57\u7b26\u4e32\u6570\u5b66\u6a21\u62df\u7684\u57fa\u672c\u89e3\u9898\u601d\u8def\u4e3b\u8981\u6d89\u53ca\u5982\u4f55\u901a\u8fc7\u9010\u6b65\u64cd\u4f5c\u548c\u7b80\u5355\u7684\u6570\u5b66\u8fd0\u7b97\uff0c\u5904\u7406\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u6570\u5b57\u8ba1\u7b97\u3002","title":"2 \u5b57\u7b26\u4e32\u6570\u5b66\u8fd0\u7b97"},{"location":"lesson8/Lesson8%20Python/#_29","text":"\u5b57\u7b26\u8f6c\u6570\u5b57 \uff1a \u5b57\u7b26\u4e32\u4e2d\u7684\u6570\u5b57\u662f\u4ee5\u5b57\u7b26\u7684\u5f62\u5f0f\u5b58\u5728\u7684\uff0c\u4f8b\u5982\u5b57\u7b26 '0' \u5230 '9' \u3002 \u53ef\u4ee5\u901a\u8fc7 ord(char) - ord('0') \u5c06\u5b57\u7b26\u8f6c\u4e3a\u5bf9\u5e94\u7684\u6570\u5b57\u3002\u4f8b\u5982\uff0c ord('5') - ord('0') \u7684\u7ed3\u679c\u4e3a 5 \u3002 \u8fdb\u4f4d\u5904\u7406 \uff1a \u5728\u8fdb\u884c\u52a0\u6cd5\u8fd0\u7b97\u65f6\uff0c\u5982\u679c\u67d0\u4e00\u4f4d\u7684\u548c\u5927\u4e8e\u6216\u7b49\u4e8e 10 \uff0c\u5219\u9700\u8981\u5904\u7406\u8fdb\u4f4d\uff08carry\uff09\uff0c\u5c06 1 \u52a0\u5230\u4e0b\u4e00\u4f4d\u7684\u8ba1\u7b97\u4e2d\u3002 \u8fdb\u4f4d\u7684\u8ba1\u7b97\u53ef\u4ee5\u901a\u8fc7 carry = sum // 10 \u6765\u5b9e\u73b0\uff0c\u800c\u5f53\u524d\u4f4d\u7684\u7ed3\u679c\u5219\u662f sum % 10 \u3002 \u9006\u5e8f\u8ba1\u7b97 \uff1a \u5b57\u7b26\u4e32\u901a\u5e38\u4ece\u53f3\u5230\u5de6\u8fdb\u884c\u52a0\u6cd5\uff0c\u56e0\u4e3a\u6211\u4eec\u4ece\u4e2a\u4f4d\u5f00\u59cb\u3002\u5904\u7406\u5b8c\u6700\u540e\u4e00\u4f4d\u540e\uff0c\u7ee7\u7eed\u5904\u7406\u5341\u4f4d\u3001\u767e\u4f4d\u7b49\u3002 \u4e3a\u4e86\u65b9\u4fbf\u5b58\u50a8\u7ed3\u679c\uff0c\u901a\u5e38\u4f1a\u4f7f\u7528\u5217\u8868\u9010\u4f4d\u6dfb\u52a0\uff0c\u6700\u540e\u901a\u8fc7 ''.join(list) \u4ee5\u83b7\u5f97\u6b63\u786e\u7684\u987a\u5e8f\u7684\u5b57\u7b26\u4e32\u3002","title":"\u57fa\u672c\u6982\u5ff5"},{"location":"lesson8/Lesson8%20Python/#_30","text":"","title":"\u4f8b\u9898\u8bb2\u89e3"},{"location":"lesson8/Lesson8%20Python/#lc415","text":"","title":"LC415 \u5b57\u7b26\u4e32\u76f8\u52a0"},{"location":"lesson8/Lesson8%20Python/#_31","text":"\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u975e\u8d1f\u6574\u6570 num1 \u548cnum2 \uff0c\u8ba1\u7b97\u5b83\u4eec\u7684\u548c\u5e76\u540c\u6837\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u8fd4\u56de\u3002 \u4f60\u4e0d\u80fd\u4f7f\u7528\u4efb\u4f55\u5167\u5efa\u7684\u7528\u4e8e\u5904\u7406\u5927\u6574\u6570\u7684\u5e93\uff08\u6bd4\u5982 BigInteger\uff09\uff0c \u4e5f\u4e0d\u80fd\u76f4\u63a5\u5c06\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u6574\u6570\u5f62\u5f0f\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson8/Lesson8%20Python/#_32","text":"\u8981\u8ba1\u7b97\u4e24\u4e2a\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u975e\u8d1f\u6574\u6570 num1 \u548c num2 \u7684\u548c\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c\u4e3a\u5b57\u7b26\u4e32\u5f62\u5f0f\uff0c\u6211\u4eec\u9700\u8981\u624b\u52a8\u6a21\u62df\u52a0\u6cd5\u7684\u8fc7\u7a0b\uff0c\u7c7b\u4f3c\u4e8e\u5728\u7eb8\u4e0a\u8fdb\u884c\u52a0\u6cd5\u8ba1\u7b97\u3002\u4e0b\u9762\u662f\u8be6\u7ec6\u7684\u89e3\u9898\u601d\u8def\u548c\u6b65\u9aa4\u3002","title":"\u9898\u76ee\u5206\u6790"},{"location":"lesson8/Lesson8%20Python/#_33","text":"\u4ece\u53f3\u5230\u5de6\u904d\u5386 \uff1a \u52a0\u6cd5\u901a\u5e38\u662f\u4ece\u4e2a\u4f4d\u5f00\u59cb\u8ba1\u7b97\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4ece\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u5f00\u59cb\u904d\u5386\u3002 \u9010\u4f4d\u76f8\u52a0 \uff1a \u5bf9\u4e8e num1 \u548c num2 \u4e2d\u7684\u6bcf\u4e00\u4f4d\uff0c\u5206\u522b\u5c06\u5b83\u4eec\u8f6c\u5316\u4e3a\u6570\u5b57\uff0c\u8fdb\u884c\u52a0\u6cd5\u64cd\u4f5c\u3002 \u9700\u8981\u8003\u8651\u8fdb\u4f4d\uff08carry\uff09\u7684\u5f71\u54cd\uff0c\u5373\u5982\u679c\u67d0\u4e00\u4f4d\u7684\u548c\u5927\u4e8e\u6216\u7b49\u4e8e 10\uff0c\u5219\u9700\u8981\u5c06 1 \u8fdb\u4f4d\u5230\u4e0b\u4e00\u4f4d\u3002 \u5904\u7406\u4e0d\u540c\u957f\u5ea6\u7684\u5b57\u7b26\u4e32 \uff1a \u5728\u8fdb\u884c\u52a0\u6cd5\u65f6\uff0c\u5982\u679c\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e0d\u540c\uff0c\u6211\u4eec\u9700\u8981\u786e\u4fdd\u4ece\u6700\u53f3\u8fb9\u5f00\u59cb\u6dfb\u52a0\u4e0a\u77ed\u5b57\u7b26\u4e32\u7684\u7f3a\u5931\u90e8\u5206\u3002 \u4f8b\u5982\uff0c\u5bf9\u4e8e num1 \u957f\u5ea6\u4e3a 5 \u548c num2 \u957f\u5ea6\u4e3a 3 \u7684\u60c5\u51b5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5728\u8ba1\u7b97\u65f6\u8003\u8651 num2 \u7684\u524d\u4e09\u4f4d\u3002 \u5904\u7406\u6700\u540e\u7684\u8fdb\u4f4d \uff1a \u5982\u679c\u904d\u5386\u7ed3\u675f\u540e\u8fd8\u6709\u8fdb\u4f4d\uff08carry\uff09\u672a\u5904\u7406\uff0c\u9700\u8981\u5c06\u5176\u6dfb\u52a0\u5230\u7ed3\u679c\u4e2d\u3002 \u7ed3\u679c\u62fc\u63a5 \uff1a \u7531\u4e8e\u6211\u4eec\u662f\u4ece\u540e\u5411\u524d\u8ba1\u7b97\u7684\uff0c\u56e0\u6b64\u6700\u7ec8\u7684\u7ed3\u679c\u9700\u8981\u53cd\u8f6c\u4e00\u4e0b\u3002","title":"\u89e3\u9898\u601d\u8def"},{"location":"lesson8/Lesson8%20Python/#_34","text":"class Solution: def addStrings(self, num1: str, num2: str) -> str: result = [] # \u4f7f\u7528\u5217\u8868\u5b58\u50a8\u7ed3\u679c carry = 0 # \u8fdb\u4f4d i, j = len(num1) - 1, len(num2) - 1 # num1 \u548c num2 \u7684\u6700\u540e\u4e00\u4f4d\u7d22\u5f15 # \u5faa\u73af\u76f4\u5230 num1 \u548c num2 \u90fd\u904d\u5386\u5b8c while i >= 0 or j >= 0 or carry > 0: sum = carry # \u4ece\u8fdb\u4f4d\u5f00\u59cb if i >= 0: sum += int(num1[i]) i -= 1 # \u79fb\u52a8\u5230\u4e0a\u4e00\u4f4d if j >= 0: sum += int(num2[j]) j -= 1 # \u79fb\u52a8\u5230\u4e0a\u4e00\u4f4d result.append(str(sum % 10)) # \u5f53\u524d\u4f4d\u7684\u7ed3\u679c carry = sum // 10 # \u66f4\u65b0\u8fdb\u4f4d return ''.join(result[::-1]) # \u53cd\u8f6c\u7ed3\u679c\u5e76\u8fd4\u56de","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"lesson8/Lesson8%20Python/#lc7","text":"","title":"LC7 \u6574\u6570\u53cd\u8f6c"},{"location":"lesson8/Lesson8%20Python/#_35","text":"\u7ed9\u4f60\u4e00\u4e2a 32 \u4f4d\u7684\u6709\u7b26\u53f7\u6574\u6570 x \uff0c\u8fd4\u56de\u5c06 x \u4e2d\u7684\u6570\u5b57\u90e8\u5206\u53cd\u8f6c\u540e\u7684\u7ed3\u679c\u3002 \u5982\u679c\u53cd\u8f6c\u540e\u6574\u6570\u8d85\u8fc7 32 \u4f4d\u7684\u6709\u7b26\u53f7\u6574\u6570\u7684\u8303\u56f4 [-2^31, 2^31 - 1] \uff0c\u5c31\u8fd4\u56de 0\u3002 \u5047\u8bbe\u73af\u5883\u4e0d\u5141\u8bb8\u5b58\u50a8 64 \u4f4d\u6574\u6570\uff08\u6709\u7b26\u53f7\u6216\u65e0\u7b26\u53f7\uff09\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson8/Lesson8%20Python/#_36","text":"\u6211\u4eec\u9700\u8981\u9010\u4f4d\u53cd\u8f6c\u6574\u6570 x \uff0c\u5e76\u5728\u8fc7\u7a0b\u4e2d\u68c0\u67e5\u662f\u5426\u4f1a\u53d1\u751f\u6ea2\u51fa\u3002\u4ee5\u4e0b\u662f\u5177\u4f53\u6b65\u9aa4\uff1a \u521d\u59cb\u5316\u53d8\u91cf \uff1a result = 0 \uff1a\u7528\u4e8e\u5b58\u50a8\u53cd\u8f6c\u540e\u7684\u7ed3\u679c\u3002 sign = -1 if x < 0 else 1 \uff1a\u8bb0\u5f55 x \u7684\u7b26\u53f7\uff0c\u8d1f\u6570\u4e3a -1 \uff0c\u975e\u8d1f\u6570\u4e3a 1 \u3002 x = abs(x) \uff1a\u5bf9 x \u53d6\u7edd\u5bf9\u503c\uff0c\u65b9\u4fbf\u540e\u7eed\u5904\u7406\u3002 \u5b9a\u4e49\u6574\u6570\u8303\u56f4 \uff1a INT_MAX = 2**31 - 1 \uff1a32 \u4f4d\u6709\u7b26\u53f7\u6574\u6570\u7684\u6700\u5927\u503c\uff0c\u5373 2147483647 \u3002 INT_MIN = -2**31 \uff1a32 \u4f4d\u6709\u7b26\u53f7\u6574\u6570\u7684\u6700\u5c0f\u503c\uff0c\u5373 -2147483648 \u3002 \u5faa\u73af\u53cd\u8f6c\u6570\u5b57 \uff1a \u5f53 x \u4e0d\u7b49\u4e8e 0 \u65f6\uff0c\u91cd\u590d\u4ee5\u4e0b\u6b65\u9aa4\uff1a \u63d0\u53d6\u6700\u540e\u4e00\u4f4d\u6570\u5b57\uff1a digit = x % 10 \u3002 \u79fb\u9664\u6700\u540e\u4e00\u4f4d\u6570\u5b57\uff1a x = x // 10 \u3002 4. \u4f18\u5316\u540e\u7684\u6ea2\u51fa\u68c0\u67e5 \uff1a \u5728\u5c06 digit \u52a0\u5165 result \u4e4b\u524d\uff0c\u68c0\u67e5\u662f\u5426\u4f1a\u6ea2\u51fa\u3002 \u5982\u679c result > INT_MAX // 10 \uff0c\u5219\u4e58\u4ee5 10 \u540e\u4e00\u5b9a\u4f1a\u6ea2\u51fa\uff0c\u8fd4\u56de 0 \u5982\u679c result == INT_MAX // 10 \uff0c\u9700\u8981\u6839\u636e digit \u8fdb\u4e00\u6b65\u5224\u65ad\uff1a \u5982\u679c digit > INT_MAX % 10 \uff08\u5373 7 \uff09\uff0c\u5219\u4f1a\u6ea2\u51fa\uff0c\u8fd4\u56de 0 \u3002 5. \u66f4\u65b0\u7ed3\u679c \uff1a \u5c06\u63d0\u53d6\u7684\u6570\u5b57\u52a0\u5165\u7ed3\u679c\u4e2d\uff1a result = result * 10 + digit \u3002 6. \u6062\u590d\u7b26\u53f7\u5e76\u8fd4\u56de\u7ed3\u679c \uff1a \u8fd4\u56de\u6700\u7ec8\u7ed3\u679c\uff1a return result * sign \u3002","title":"\u89e3\u9898\u601d\u8def"},{"location":"lesson8/Lesson8%20Python/#_37","text":"class Solution: def reverse(self, x: int) -> int: INT_MAX = 2**31 - 1 # 2147483647 INT_MIN = -2**31 # -2147483648 sign = -1 if x < 0 else 1 # \u8bb0\u5f55\u7b26\u53f7 x = abs(x) result = 0 while x != 0: digit = x % 10 x = x // 10 # \u6ea2\u51fa\u68c0\u67e5 if result > INT_MAX // 10 or (result == INT_MAX // 10 and digit > INT_MAX % 10): return 0 result = result * 10 + digit return sign * result","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"lesson8/Lesson8%20Python/#_38","text":"\u6761\u4ef6\u4e00 \uff1a result > INT_MAX // 10 \u5982\u679c result \u5927\u4e8e 214748364 \uff0c\u90a3\u4e48\u4e0b\u4e00\u6b21 result * 10 \u540e\u4e00\u5b9a\u4f1a\u8d85\u8fc7 2147483640 \uff0c\u52a0\u4e0a\u4efb\u4f55 digit \u90fd\u4f1a\u6ea2\u51fa\u3002 \u6761\u4ef6\u4e8c \uff1a result == INT_MAX // 10 and digit > INT_MAX % 10 \u5982\u679c result \u7b49\u4e8e 214748364 \uff0c\u9700\u8981\u68c0\u67e5 digit \u662f\u5426\u5927\u4e8e 7 \uff08 INT_MAX % 10 \uff09\u3002 \u56e0\u4e3a INT_MAX \u7684\u4e2a\u4f4d\u662f 7 \uff0c\u5982\u679c digit > 7 \uff0c\u5219\u53cd\u8f6c\u540e\u4f1a\u8d85\u8fc7 INT_MAX \uff0c\u53d1\u751f\u6ea2\u51fa\u3002","title":"\u6ea2\u51fa\u68c0\u67e5\u6761\u4ef6\u8bf4\u660e"},{"location":"lesson8/Lesson8%20Python/#_39","text":"","title":"\u4e3e\u4e00\u53cd\u4e09"},{"location":"lesson8/Lesson8%20Python/#lc67","text":"","title":"LC67 \u4e8c\u8fdb\u5236\u6c42\u548c"},{"location":"lesson8/Lesson8%20Python/#_40","text":"\u7ed9\u4f60\u4e24\u4e2a\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32 a \u548c b \uff0c\u4ee5\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\u8fd4\u56de\u5b83\u4eec\u7684\u548c\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson8/Lesson8%20Python/#_41","text":"\u4ece\u53f3\u5230\u5de6\u904d\u5386 \uff1a \u7531\u4e8e\u4e8c\u8fdb\u5236\u52a0\u6cd5\u662f\u4ece\u6700\u53f3\u4fa7\u7684\u4f4d\uff08\u6700\u4f4e\u4f4d\uff09\u5f00\u59cb\u7684\uff0c\u6211\u4eec\u9700\u8981\u4ece\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u5f00\u59cb\u5904\u7406\u3002 \u9010\u4f4d\u76f8\u52a0 \uff1a \u4f7f\u7528\u4e24\u4e2a\u6307\u9488\u5206\u522b\u6307\u5411\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\uff08\u5373\u6700\u540e\u4e00\u4f4d\uff09\u3002 \u9010\u4f4d\u76f8\u52a0\u5e76\u5904\u7406\u8fdb\u4f4d\uff08carry\uff09\u3002 \u5904\u7406\u4e0d\u540c\u957f\u5ea6\u7684\u5b57\u7b26\u4e32 \uff1a \u5982\u679c\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e0d\u540c\uff0c\u77ed\u7684\u5b57\u7b26\u4e32\u5728\u8ba1\u7b97\u65f6\u4f1a\u7f3a\u5931\u90e8\u5206\u4f4d\u3002\u9700\u8981\u5728\u5904\u7406\u8fc7\u7a0b\u4e2d\u68c0\u67e5\u662f\u5426\u5df2\u7ecf\u8d85\u51fa\u67d0\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002 \u5904\u7406\u6700\u540e\u7684\u8fdb\u4f4d \uff1a \u5982\u679c\u904d\u5386\u7ed3\u675f\u540e\u4ecd\u7136\u6709\u8fdb\u4f4d\uff08carry\uff09\uff0c\u9700\u8981\u5c06\u5176\u6dfb\u52a0\u5230\u7ed3\u679c\u4e2d\u3002 \u62fc\u63a5\u548c\u53cd\u8f6c\u7ed3\u679c \uff1a \u7531\u4e8e\u6211\u4eec\u662f\u4ece\u540e\u5411\u524d\u8ba1\u7b97\u7684\uff0c\u56e0\u6b64\u9700\u8981\u5728\u6700\u540e\u53cd\u8f6c\u7ed3\u679c\u5b57\u7b26\u4e32\u3002","title":"\u89e3\u9898\u601d\u8def"},{"location":"lesson8/Lesson8%20Python/#_42","text":"class Solution: def addBinary(self, a: str, b: str) -> str: result = [] # \u4f7f\u7528\u5217\u8868\u5b58\u50a8\u7ed3\u679c carry = 0 # \u8fdb\u4f4d i, j = len(a) - 1, len(b) - 1 # a \u548c b \u7684\u6700\u540e\u4e00\u4f4d\u7d22\u5f15 # \u5faa\u73af\u76f4\u5230 a \u548c b \u90fd\u904d\u5386\u5b8c while i >= 0 or j >= 0 or carry > 0: # \u8ba1\u7b97\u5f53\u524d\u4f4d\u7684\u548c if i >= 0: carry += int(a[i]) # \u53d6 a \u7684\u5f53\u524d\u4f4d\u5e76\u8f6c\u4e3a\u6570\u5b57 i -= 1 if j >= 0: carry += int(b[j]) # \u53d6 b \u7684\u5f53\u524d\u4f4d\u5e76\u8f6c\u4e3a\u6570\u5b57 j -= 1 # \u5c06\u5f53\u524d\u4f4d\u7684\u7ed3\u679c\u6dfb\u52a0\u5230\u7ed3\u679c\u4e2d result.append(str(carry % 2)) # \u5f53\u524d\u4f4d\u7ed3\u679c carry //= 2 # \u66f4\u65b0\u8fdb\u4f4d return ''.join(result[::-1]) # \u53cd\u8f6c\u7ed3\u679c\u5e76\u8fd4\u56de","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"lesson8/Lesson8%20Python/#lc989","text":"","title":"LC989 \u6570\u7ec4\u5f62\u5f0f\u7684\u6574\u6570\u52a0\u6cd5"},{"location":"lesson8/Lesson8%20Python/#_43","text":"\u6574\u6570\u7684\u6570\u7ec4\u5f62\u5f0f num \u662f\u6309\u7167\u4ece\u5de6\u5230\u53f3\u7684\u987a\u5e8f\u8868\u793a\u5176\u6570\u5b57\u7684\u6570\u7ec4\u3002 \u4f8b\u5982\uff0c\u5bf9\u4e8e num = 1321 \uff0c\u6570\u7ec4\u5f62\u5f0f\u662f [1,3,2,1] \u3002 \u7ed9\u5b9a num \uff0c\u6574\u6570\u7684\u6570\u7ec4\u5f62\u5f0f\uff0c\u548c\u6574\u6570 k \uff0c\u8fd4\u56de \u6574\u6570 num + k \u7684\u6570\u7ec4\u5f62\u5f0f\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson8/Lesson8%20Python/#_44","text":"\u4ece\u53f3\u5230\u5de6\u8fdb\u884c\u52a0\u6cd5 \uff1a \u4ece\u6570\u7ec4 num \u7684\u6700\u540e\u4e00\u4f4d\uff08\u6700\u4f4e\u4f4d\uff09\u5f00\u59cb\u52a0\uff0c\u9010\u4f4d\u5904\u7406\u3002 \u5904\u7406\u8fdb\u4f4d \uff1a \u6bcf\u4e00\u4f4d\u7684\u548c\u53ef\u80fd\u4f1a\u4ea7\u751f\u4e00\u4e2a\u8fdb\u4f4d\uff0c\u6211\u4eec\u9700\u8981\u8bb0\u5f55\u8fd9\u4e2a\u8fdb\u4f4d\u5e76\u5728\u4e0b\u4e00\u4f4d\u7684\u52a0\u6cd5\u4e2d\u4f7f\u7528\u3002 \u904d\u5386\u7ed3\u675f\u540e\u7684\u5904\u7406 \uff1a \u5982\u679c\u5728\u904d\u5386\u7ed3\u675f\u65f6\u4ecd\u6709\u8fdb\u4f4d\uff0c\u9700\u8981\u5c06\u8fdb\u4f4d\u6dfb\u52a0\u5230\u7ed3\u679c\u4e2d\u3002 \u7ed3\u679c\u6784\u5efa \uff1a \u5c06\u8ba1\u7b97\u7684\u7ed3\u679c\u5b58\u50a8\u5728\u4e00\u4e2a\u5217\u8868\u4e2d\uff0c\u6700\u540e\u9700\u8981\u53cd\u8f6c\u8fd9\u4e2a\u5217\u8868\uff0c\u56e0\u4e3a\u6211\u4eec\u662f\u4ece\u6700\u4f4e\u4f4d\u5f00\u59cb\u8ba1\u7b97\u7684\u3002","title":"\u89e3\u9898\u601d\u8def"},{"location":"lesson8/Lesson8%20Python/#_45","text":"class Solution: def addToArrayForm(self, num: List[int], k: int) -> List[int]: result = [] # \u7528\u4e8e\u5b58\u653e\u7ed3\u679c\u7684\u5217\u8868 carry = 0 # \u521d\u59cb\u5316\u8fdb\u4f4d n = len(num) # \u6570\u7ec4\u957f\u5ea6 # \u4ece\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4f4d\u5f00\u59cb\u5904\u7406 for i in range(n - 1, -1, -1): sum = num[i] + (k % 10) + carry # \u5f53\u524d\u4f4d\u7684\u548c result.append(sum % 10) # \u5f53\u524d\u4f4d\u7ed3\u679c carry = sum // 10 # \u66f4\u65b0\u8fdb\u4f4d k //= 10 # \u79fb\u52a8\u5230 k \u7684\u4e0b\u4e00\u4f4d # \u5904\u7406 k \u53ef\u80fd\u8fd8\u6709\u7684\u5269\u4f59\u4f4d while k > 0 or carry > 0: sum = (k % 10) + carry # \u5f53\u524d\u4f4d\u7684\u548c result.append(sum % 10) # \u5f53\u524d\u4f4d\u7ed3\u679c carry = sum // 10 # \u66f4\u65b0\u8fdb\u4f4d k //= 10 # \u79fb\u52a8\u5230 k \u7684\u4e0b\u4e00\u4f4d # \u7531\u4e8e\u6211\u4eec\u662f\u4ece\u540e\u5411\u524d\u6784\u5efa\u7684\u7ed3\u679c\uff0c\u9700\u8981\u53cd\u8f6c return result[::-1] # \u53cd\u8f6c\u7ed3\u679c\u5e76\u8fd4\u56de","title":"\u793a\u4f8b\u4ee3\u7801"},{"location":"lesson8/Lesson8%20Python/#_46","text":"","title":"\u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson8/Lesson8%20Python/#_47","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC 1002 \u627e\u5230\u5171\u540c\u5b57\u7b26 \u627e\u5230\u7ed9\u5b9a\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\u6240\u6709\u5b57\u7b26\u4e32\u7684\u5171\u540c\u5b57\u7b26\u3002 LC 541 \u53cd\u8f6c\u5b57\u7b26\u4e32 II \u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u6307\u5b9a\u90e8\u5206\uff0c\u6bcf\u9694\u4e00\u4e2a\u6307\u5b9a\u957f\u5ea6\u53cd\u8f6c\u4e00\u6b21\u3002 LC 771 \u73e0\u5b9d\u4e0e\u77f3\u5934 \u8ba1\u7b97\u5728\u77f3\u5934\u4e2d\u6709\u591a\u5c11\u4e2a\u73e0\u5b9d\u5b57\u7b26\u3002 LC 844 \u56de\u9000\u5b57\u7b26\u4e32\u6bd4\u8f83 \u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u8003\u8651\u5230\u56de\u9000\u5b57\u7b26\uff08\u2018#\u2019\uff09\u7684\u5f71\u54cd\u3002 LC 925 \u957f\u6309\u952e\u5165\u7684\u540d\u5b57 \u68c0\u67e5\u4e00\u4e2a\u540d\u5b57\u662f\u5426\u53ef\u4ee5\u901a\u8fc7\u957f\u6309\u53e6\u4e00\u4e2a\u540d\u5b57\u7684\u5b57\u7b26\u6765\u5b9e\u73b0\u3002","title":"\u5b57\u7b26\u4e32\u5faa\u73af+\u5207\u7247"},{"location":"lesson8/Lesson8%20Python/#_48","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC 2243 \u8ba1\u7b97\u5b57\u7b26\u4e32\u4e2d\u7684\u6570\u5b57\u548c \u8ba1\u7b97\u5b57\u7b26\u4e32\u4e2d\u6240\u6709\u6570\u5b57\u5b57\u7b26\u7684\u603b\u548c\u3002 LC 66 \u52a0\u4e00 \u5728\u6570\u7ec4\u5f62\u5f0f\u7684\u6570\u5b57\u4e0a\u52a0\u4e00\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c\u7684\u6570\u7ec4\u5f62\u5f0f\u3002","title":"\u5b57\u7b26\u4e32\u6570\u5b66\u8fd0\u7b97"},{"location":"lesson9/Lesson9%20C%2B%2B/","text":"Lesson9 \u5b57\u7b26\u4e32\u53cc\u6307\u9488\u7b97\u6cd5\u4e13\u9898 \u76ee\u5f55 \u5bf9\u649e\u6307\u9488 1.1 \u5bf9\u649e\u6307\u9488\u89e3\u9898\u6b65\u9aa4 1.2 \u5bf9\u649e\u6307\u9488\u4f2a\u4ee3\u7801\u6a21\u7248 1.3 \u5bf9\u649e\u6307\u9488\u9002\u7528\u8303\u56f4 \u4f8b\u9898\u8bb2\u89e3 LC 344 \u53cd\u8f6c\u5b57\u7b26\u4e32 LC 125 \u9a8c\u8bc1\u56de\u6587\u4e32 \u4e3e\u4e00\u53cd\u4e09 LC 345 \u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5143\u97f3\u5b57\u6bcd LC 917 \u4ec5\u4ec5\u53cd\u8f6c\u5b57\u6bcd LC 680 \u9a8c\u8bc1\u56de\u6587\u4e32 \u8bfe\u540e\u7ec3\u4e60 \u53cc\u6307\u9488\uff08Two Pointers\uff09 \uff1a\u6307\u7684\u662f\u5728\u904d\u5386\u5143\u7d20\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u662f\u4f7f\u7528\u5355\u4e2a\u6307\u9488\u8fdb\u884c\u8bbf\u95ee\uff0c\u800c\u662f\u4f7f\u7528\u4e24\u4e2a\u6307\u9488\u8fdb\u884c\u8bbf\u95ee\uff0c\u4ece\u800c\u8fbe\u5230\u76f8\u5e94\u7684\u76ee\u7684\u3002\u5982\u679c\u4e24\u4e2a\u6307\u9488\u65b9\u5411\u76f8\u53cd\uff0c\u5219\u79f0\u4e3a\u300c\u5bf9\u649e\u6307\u9488\u300d\u3002\u5982\u679c\u4e24\u4e2a\u6307\u9488\u65b9\u5411\u76f8\u540c\uff0c\u5219\u79f0\u4e3a\u300c\u5feb\u6162\u6307\u9488\u300d\u3002\u5982\u679c\u4e24\u4e2a\u6307\u9488\u5206\u522b\u5c5e\u4e8e\u4e0d\u540c\u7684\u6570\u7ec4 / \u94fe\u8868\uff0c\u5219\u79f0\u4e3a\u300c\u5206\u79bb\u53cc\u6307\u9488\u300d\uff1b\u672c\u7ae0\u4ec5\u9488\u5bf9\u5b57\u7b26\u4e32\u5bf9\u649e\u6307\u9488\u8fdb\u884c\u4ecb\u7ecd\u548c\u9898\u76ee\u5206\u6790\u3002 1. \u5bf9\u649e\u6307\u9488 \u5bf9\u649e\u6307\u9488\uff1a\u6307\u7684\u662f\u4e24\u4e2a\u6307\u9488left\u3001right\u5206\u522b\u6307\u5411\u5e8f\u5217\u7b2c\u4e00\u4e2a\u5143\u7d20\u548c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u7136\u540eleft\u6307\u9488\u4e0d\u65ad\u9012\u589e\uff0cright\u4e0d\u65ad\u9012\u51cf\uff0c\u76f4\u5230\u4e24\u4e2a\u6307\u9488\u7684\u503c\u76f8\u649e\uff08\u5373 left== right\uff09\uff0c\u6216\u8005\u6ee1\u8db3\u5176\u4ed6\u8981\u6c42\u7684\u7279\u6b8a\u6761\u4ef6\u4e3a\u6b62\u3002 1.1 \u5bf9\u649e\u6307\u9488\u89e3\u9898\u6b65\u9aa4 \u4f7f\u7528\u4e24\u4e2a\u6307\u9488left\uff0cright\u3002left\u6307\u5411\u5e8f\u5217\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u5373\uff1a left=0 \uff0cright\u6307\u5411\u5e8f\u5217\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5373\uff1a right=nums.length()-1 \u3002 \u5728\u5faa\u73af\u4f53\u4e2d\u5c06\u5de6\u53f3\u6307\u9488\u76f8\u5411\u79fb\u52a8\uff0c\u5f53\u6ee1\u8db3\u4e00\u5b9a\u6761\u4ef6\u65f6\uff0c\u5c06\u5de6\u6307\u9488\u53f3\u79fb\uff0c left+=1 \u3002\u5f53\u6ee1\u8db3\u53e6\u5916\u4e00\u5b9a\u6761\u4ef6\u65f6\uff0c\u5c06\u53f3\u6307\u9488\u5de6\u79fb\uff0c right-=1 \u3002 \u76f4\u5230\u4e24\u6307\u9488\u76f8\u649e\uff08\u5373 left==right \uff09\uff0c\u6216\u8005\u6ee1\u8db3\u5176\u4ed6\u8981\u6c42\u7684\u7279\u6b8a\u6761\u4ef6\u65f6\uff0c\u8df3\u51fa\u5faa\u73af\u4f53\u3002 1.2 \u5bf9\u649e\u6307\u9488\u4f2a\u4ee3\u7801\u6a21\u7248 int left = 0; int right = len(nums) - 1; while (left < right) { if (\u6ee1\u8db3\u67d0\u4e9b\u6761\u4ef6) { return \u7b26\u5408\u6761\u4ef6\u7684\u503c; } if (\u6761\u4ef61) { left++; // \u79fb\u52a8\u5de6\u6307\u9488 } else { right--; // \u79fb\u52a8\u53f3\u6307\u9488 } } return -1; // \u5982\u679c\u6ca1\u627e\u5230\uff0c\u8fd4\u56de\u6807\u8bb0\u503c 1.3 \u5bf9\u649e\u6307\u9488\u9002\u7528\u8303\u56f4 \u5bf9\u649e\u6307\u9488\u4e00\u822c\u7528\u6765\u89e3\u51b3\u6709\u5e8f\u6570\u7ec4\u6216\u8005\u5b57\u7b26\u4e32\u95ee\u9898\uff1a \u67e5\u627e\u6709\u5e8f\u6570\u7ec4\u4e2d\u6ee1\u8db3\u67d0\u4e9b\u7ea6\u675f\u6761\u4ef6\u7684\u4e00\u7ec4\u5143\u7d20\u95ee\u9898\uff1a\u6bd4\u5982\u4e8c\u5206\u67e5\u627e\u3001\u6570\u5b57\u4e4b\u548c\u7b49\u95ee\u9898\u3002 \u5b57\u7b26\u4e32\u53cd\u8f6c\u95ee\u9898\uff1a\u53cd\u8f6c\u5b57\u7b26\u4e32\u3001\u56de\u6587\u6570\u3001\u98a0\u5012\u4e8c\u8fdb\u5236\u7b49\u95ee\u9898\u3002 2. \u4f8b\u9898\u8bb2\u89e3 LC 344 \u53cd\u8f6c\u5b57\u7b26\u4e32 \u95ee\u9898\u63cf\u8ff0 \u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5176\u4f5c\u7528\u662f\u5c06\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u53cd\u8f6c\u8fc7\u6765\u3002\u8f93\u5165\u5b57\u7b26\u4e32\u4ee5\u5b57\u7b26\u6570\u7ec4 s \u7684\u5f62\u5f0f\u7ed9\u51fa\u3002 \u4e0d\u8981\u7ed9\u53e6\u5916\u7684\u6570\u7ec4\u5206\u914d\u989d\u5916\u7684\u7a7a\u95f4\uff0c\u4f60\u5fc5\u987b \u539f\u5730 \u4fee\u6539\u8f93\u5165\u6570\u7ec4 \u3001\u4f7f\u7528 O(1) \u7684\u989d\u5916\u7a7a\u95f4\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u3002 \u9898\u76ee\u5206\u6790 \u5bf9\u4e8e\u957f\u5ea6\u4e3a N \u7684\u5b57\u7b26\u6570\u7ec4\uff0c\u53cd\u8f6c\u7684\u8fc7\u7a0b\u5c31\u662f\u5c06\u524d\u540e\u7684\u5b57\u7b26\u4ea4\u6362\uff0c\u76f4\u5230\u4e24\u7aef\u7684\u6307\u9488\u76f8\u9047\u4e3a\u6b62\u3002\u5177\u4f53\u6765\u8bf4\uff1a \u53cc\u6307\u9488\u6cd5\uff1a \u521d\u59cb\u5316\u4e24\u4e2a\u6307\u9488\uff0c start \u6307\u5411\u5b57\u7b26\u4e32\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\uff0c end \u6307\u5411\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u3002 \u5f53 start < end \u65f6\uff0c\u4ea4\u6362\u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u7684\u5b57\u7b26\uff0c\u7136\u540e start \u6307\u9488\u53f3\u79fb\uff0c end \u6307\u9488\u5de6\u79fb\uff0c\u76f4\u5230\u4e24\u4e2a\u6307\u9488\u76f8\u9047\u6216\u4ea4\u9519\u3002 \u601d\u8def \u53cc\u6307\u9488\u601d\u8def\uff1a \u5c06 start \u8bbe\u7f6e\u4e3a 0\uff0c end \u8bbe\u7f6e\u4e3a s.size() - 1 \u3002 \u5f53 start \u5c0f\u4e8e end \u65f6\uff0c\u4ea4\u6362 s[start] \u548c s[end] \uff0c\u7136\u540e\u5206\u522b\u79fb\u52a8\u4e24\u4e2a\u6307\u9488\u3002 \u5f53 start >= end \u65f6\uff0c\u8bf4\u660e\u5b57\u7b26\u4e32\u5df2\u7ecf\u53cd\u8f6c\u5b8c\u6210\u3002 \u53c2\u8003\u89e3\u7b54 class Solution { public: void reverseString(vector<char>& s) { int start = 0; int end = s.size() - 1; while (start < end) { swap(s[start], s[end]); // \u4ea4\u6362 start \u548c end \u4f4d\u7f6e\u7684\u5b57\u7b26 start++; end--; } } }; \u8981\u70b9\u8bf4\u660e\uff1a \u53cc\u6307\u9488\u6cd5\uff1a \u4f7f\u7528 start \u548c end \u4e24\u4e2a\u6307\u9488\u4ece\u5b57\u7b26\u4e32\u7684\u4e24\u7aef\u5411\u4e2d\u95f4\u79fb\u52a8\uff0c\u5e76\u4ea4\u6362\u76f8\u5e94\u4f4d\u7f6e\u7684\u5b57\u7b26\u3002 \u539f\u5730\u4fee\u6539\uff1a \u5728\u7ed9\u5b9a\u7684 vector<char>& \u4e2d\u76f4\u63a5\u8fdb\u884c\u64cd\u4f5c\uff0c\u6ca1\u6709\u4f7f\u7528\u989d\u5916\u7684\u7a7a\u95f4\u3002 LC 125 \u9a8c\u8bc1\u56de\u6587\u4e32 \u95ee\u9898\u63cf\u8ff0 \u5982\u679c\u5728\u5c06\u6240\u6709\u5927\u5199\u5b57\u7b26\u8f6c\u6362\u4e3a\u5c0f\u5199\u5b57\u7b26\uff0c\u5e76\u79fb\u9664\u6240\u6709\u975e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\u540e\uff0c\u4e00\u4e2a\u77ed\u8bed\u6b63\u7740\u8bfb\u548c\u53cd\u7740\u8bfb\u90fd\u4e00\u6837\uff0c\u5219\u53ef\u4ee5\u8ba4\u4e3a\u8be5\u77ed\u8bed\u662f\u4e00\u4e2a \u56de\u6587\u4e32 \u3002 \u5b57\u6bcd\u548c\u6570\u5b57\u5c5e\u4e8e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\u3002 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u5982\u679c\u5b83\u662f \u56de\u6587\u4e32 \uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002 \u63d0\u793a \u5ffd\u7565\u5b57\u7b26\u4e32\u4e2d\u7684\u7a7a\u683c\u3001\u6807\u70b9\u7b26\u53f7\u7b49\u975e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\uff0c\u5e76\u4e14\u5224\u65ad\u65f6\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u3002 \u53ef\u4ee5\u4f7f\u7528\u53cc\u6307\u9488\u4ece\u4e24\u7aef\u5411\u4e2d\u95f4\u79fb\u52a8\uff0c\u9010\u5b57\u7b26\u68c0\u67e5\u662f\u5426\u76f8\u7b49\u3002 \u601d\u8def\u5206\u6790 \u8fc7\u6ee4\u975e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\uff1a \u4f7f\u7528 isalnum \u51fd\u6570\u6765\u68c0\u67e5\u5b57\u7b26\u662f\u5426\u4e3a\u5b57\u6bcd\u6216\u6570\u5b57\u3002 \u8df3\u8fc7\u4e0d\u5c5e\u4e8e\u5b57\u6bcd\u6570\u5b57\u7684\u5b57\u7b26\u3002 \u53cc\u6307\u9488\u6cd5\uff1a \u4f7f\u7528\u4e24\u4e2a\u6307\u9488\uff0c\u4e00\u4e2a\u6307\u5411\u5b57\u7b26\u4e32\u7684\u5f00\u5934\uff0c\u53e6\u4e00\u4e2a\u6307\u5411\u5b57\u7b26\u4e32\u7684\u7ed3\u5c3e\u3002 \u4ece\u4e24\u7aef\u5f00\u59cb\u5411\u4e2d\u95f4\u79fb\u52a8\uff0c\u9010\u4e2a\u6bd4\u8f83\u6709\u6548\u7684\u5b57\u7b26\u3002 \u5ffd\u7565\u5927\u5c0f\u5199\uff1a \u4f7f\u7528 tolower \u6216 toupper \u51fd\u6570\u6765\u5ffd\u7565\u5927\u5c0f\u5199\u5dee\u5f02\u3002 \u53c2\u8003\u89e3\u7b54 class Solution { public: bool isPalindrome(string s) { int start = 0; int end = s.length() - 1; while (start < end) { // \u79fb\u52a8 start \u6307\u9488\u8df3\u8fc7\u975e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26 if (!isalnum(s[start])) { start++; continue; } // \u79fb\u52a8 end \u6307\u9488\u8df3\u8fc7\u975e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26 if (!isalnum(s[end])) { end--; continue; } // \u5ffd\u7565\u5927\u5c0f\u5199\u6bd4\u8f83\u5b57\u7b26 if (tolower(s[start]) != tolower(s[end])) { return false; } start++; end--; } return true; } }; \u5207\u7247\u6cd5 \u53ef\u4ee5\u901a\u8fc7\u9884\u5904\u7406\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u53ea\u5305\u542b\u5b57\u6bcd\u548c\u6570\u5b57\u7684\u5c0f\u5199\u5f62\u5f0f\uff0c\u7136\u540e\u5224\u65ad\u8fd9\u4e2a\u5904\u7406\u540e\u7684\u5b57\u7b26\u4e32\u662f\u5426\u662f\u56de\u6587\u3002 class Solution { public: bool isPalindrome(string s) { string sgood; for (char c : s) { if (isalnum(c)) { sgood += tolower(c); } } // \u68c0\u67e5 sgood \u662f\u5426\u662f\u56de\u6587 int start = 0, end = sgood.length() - 1; while (start < end) { if (sgood[start] != sgood[end]) { return false; } start++; end--; } return true; } }; \u8981\u70b9\u8bf4\u660e\uff1a - \u4f7f\u7528 isalnum \u5224\u65ad\u662f\u5426\u662f\u5b57\u6bcd\u6216\u6570\u5b57\u3002 - \u4f7f\u7528 tolower \u5c06\u5b57\u7b26\u8f6c\u6362\u4e3a\u5c0f\u5199\u8fdb\u884c\u6bd4\u8f83\u3002 - \u91c7\u7528\u53cc\u6307\u9488\u6cd5\uff0c\u76f4\u63a5\u5bf9\u539f\u5b57\u7b26\u4e32\u8fdb\u884c\u5224\u65ad\uff0c\u7b26\u5408\u7a7a\u95f4\u590d\u6742\u5ea6\u8981\u6c42\u3002 3. \u4e3e\u4e00\u53cd\u4e09 LC 345 \u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5143\u97f3\u5b57\u6bcd \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u8bf7\u4ec5\u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709\u5143\u97f3\u5b57\u6bcd\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c\u5b57\u7b26\u4e32\u3002 \u5143\u97f3\u5b57\u6bcd \u5305\u62ec 'a' \u3001 'e' \u3001 'i' \u3001 'o' \u3001 'u' \uff0c\u5e76\u4e14\u5927\u5c0f\u5199\u5b57\u6bcd\u5747\u89c6\u4e3a\u5143\u97f3\u5b57\u6bcd\u3002 \u63d0\u793a \u4f60\u9700\u8981\u5728\u539f\u5730\u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5143\u97f3\u5b57\u6bcd\uff0c\u540c\u65f6\u4fdd\u6301\u5176\u4ed6\u5b57\u7b26\u7684\u4f4d\u7f6e\u4e0d\u53d8\u3002 \u6ce8\u610f\u5904\u7406\u5927\u5c0f\u5199\u4e0d\u654f\u611f\u7684\u5143\u97f3\u5b57\u7b26\u3002 \u601d\u8def\u5206\u6790 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 \u53cc\u6307\u9488\u6cd5 \u5bf9\u5b57\u7b26\u4e32\u4e2d\u7684\u5143\u97f3\u5b57\u6bcd\u8fdb\u884c\u53cd\u8f6c\u3002\u601d\u8def\u5982\u4e0b\uff1a \u521d\u59cb\u5316\u4e24\u4e2a\u6307\u9488 \uff1a \u4e00\u4e2a\u6307\u9488 start \u6307\u5411\u5b57\u7b26\u4e32\u7684\u9996\u4f4d\uff0c\u53e6\u4e00\u4e2a\u6307\u9488 end \u6307\u5411\u5b57\u7b26\u4e32\u7684\u672b\u4f4d\u3002 \u5143\u97f3\u5b57\u6bcd\u7684\u68c0\u67e5 \uff1a \u5982\u679c start \u548c end \u6240\u6307\u5b57\u7b26\u90fd\u662f\u5143\u97f3\u5b57\u6bcd\uff0c\u5219\u4ea4\u6362\u5b83\u4eec\uff0c\u5e76\u5c06 start \u5411\u53f3\u79fb\uff0c end \u5411\u5de6\u79fb\u3002 \u5982\u679c start \u6307\u5411\u7684\u5b57\u7b26\u4e0d\u662f\u5143\u97f3\u5b57\u6bcd\uff0c\u5219\u5411\u53f3\u79fb\u3002 \u5982\u679c end \u6307\u5411\u7684\u5b57\u7b26\u4e0d\u662f\u5143\u97f3\u5b57\u6bcd\uff0c\u5219\u5411\u5de6\u79fb\u3002 \u7ee7\u7eed\u68c0\u67e5\u76f4\u5230 start >= end \u3002 \u53c2\u8003\u89e3\u7b54 class Solution { public: string reverseVowels(string s) { string vowels = \"aeiouAEIOU\"; int start = 0; int end = s.length() - 1; while (start < end) { // \u7528 while \u5faa\u73af\u627e\u5230\u6700\u8fd1\u7684\u5143\u97f3\u5b57\u6bcd while (start < end && vowels.find(s[start]) == string::npos) { start++; } while (start < end && vowels.find(s[end]) == string::npos) { end--; } // \u4ea4\u6362\u5143\u97f3\u5b57\u6bcd if (start < end) { swap(s[start], s[end]); start++; end--; } } return s; } }; \u8bf4\u660e vowels.find(s[start]) != string::npos \uff1a\u7528\u4e8e\u68c0\u67e5\u5b57\u7b26 s[start] \u662f\u5426\u5728 vowels \u5b57\u7b26\u4e32\u4e2d\uff0c\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u5143\u97f3\u5b57\u6bcd\u3002 swap(s[start], s[end]) \uff1a\u4ea4\u6362\u4e24\u4e2a\u5143\u97f3\u5b57\u7b26\u3002 \u53cc\u6307\u9488\u7684\u79fb\u52a8\u903b\u8f91\u786e\u4fdd\u53ea\u6709\u5143\u97f3\u5b57\u6bcd\u88ab\u53cd\u8f6c\uff0c\u5176\u4ed6\u5b57\u7b26\u4fdd\u6301\u539f\u4f4d\u7f6e\u4e0d\u53d8\u3002 LC 917 \u4ec5\u4ec5\u53cd\u8f6c\u5b57\u6bcd \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u6839\u636e\u4e0b\u8ff0\u89c4\u5219\u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u6bcd\uff1a \u6240\u6709\u975e\u82f1\u6587\u5b57\u6bcd\u4fdd\u7559\u5728\u539f\u6709\u4f4d\u7f6e\u3002 \u6240\u6709\u82f1\u6587\u5b57\u6bcd\uff08\u5c0f\u5199\u6216\u5927\u5199\uff09\u7684\u987a\u5e8f\u8fdb\u884c\u53cd\u8f6c\u3002 \u8fd4\u56de\u53cd\u8f6c\u540e\u7684\u5b57\u7b26\u4e32 s \u3002 \u63d0\u793a \u4f60\u53ea\u9700\u8981\u53cd\u8f6c\u5b57\u6bcd\uff0c\u975e\u5b57\u6bcd\u5b57\u7b26\u7684\u4f4d\u7f6e\u4fdd\u6301\u4e0d\u53d8\u3002 \u4f7f\u7528\u53cc\u6307\u9488\u6cd5\u53ef\u4ee5\u9ad8\u6548\u5730\u904d\u5386\u548c\u4ea4\u6362\u5b57\u6bcd\u3002 \u601d\u8def\u5206\u6790 \u4f7f\u7528 \u53cc\u6307\u9488\u6cd5 \u6765\u5904\u7406\u5b57\u6bcd\u53cd\u8f6c\u3002\u5177\u4f53\u601d\u8def\u5982\u4e0b\uff1a \u53cc\u6307\u9488\u521d\u59cb\u5316 \uff1a \u6307\u9488 left \u4ece\u5b57\u7b26\u4e32\u5de6\u4fa7\u5f00\u59cb\uff0c\u6307\u9488 right \u4ece\u5b57\u7b26\u4e32\u53f3\u4fa7\u5f00\u59cb\u3002 \u5bfb\u627e\u5b57\u6bcd\u5e76\u4ea4\u6362 \uff1a left \u5411\u53f3\u79fb\u52a8\uff0c\u8df3\u8fc7\u975e\u5b57\u6bcd\u5b57\u7b26\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u5b57\u6bcd\u3002 right \u5411\u5de6\u79fb\u52a8\uff0c\u8df3\u8fc7\u975e\u5b57\u6bcd\u5b57\u7b26\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u5b57\u6bcd\u3002 \u5f53 left < right \u65f6\uff0c\u4ea4\u6362\u8fd9\u4e24\u4e2a\u5b57\u6bcd\u7684\u4f4d\u7f6e\uff0c\u7ee7\u7eed\u79fb\u52a8\u6307\u9488\u3002 \u505c\u6b62\u6761\u4ef6 \uff1a \u5f53 left >= right \u65f6\uff0c\u8868\u793a\u6240\u6709\u5b57\u6bcd\u90fd\u5df2\u53cd\u8f6c\uff0c\u9000\u51fa\u5faa\u73af\u3002 \u53c2\u8003\u89e3\u7b54 class Solution { public: string reverseOnlyLetters(string s) { int left = 0; int right = s.length() - 1; while (left < right) { // \u8df3\u8fc7\u5de6\u8fb9\u7684\u975e\u5b57\u6bcd\u5b57\u7b26 while (left < right && !isalpha(s[left])) { left++; } // \u8df3\u8fc7\u53f3\u8fb9\u7684\u975e\u5b57\u6bcd\u5b57\u7b26 while (left < right && !isalpha(s[right])) { right--; } // \u4ea4\u6362\u5b57\u6bcd if (left < right) { swap(s[left], s[right]); left++; right--; } } return s; } }; \u89e3\u91ca isalpha(s[left]) \uff1a\u68c0\u67e5\u5b57\u7b26\u662f\u5426\u662f\u5b57\u6bcd\uff0c\u8df3\u8fc7\u975e\u5b57\u6bcd\u5b57\u7b26\u3002 swap(s[left], s[right]) \uff1a\u4ea4\u6362 left \u548c right \u4f4d\u7f6e\u7684\u5b57\u6bcd\u3002 \u53cc\u6307\u9488\u4ece\u4e24\u7aef\u5411\u4e2d\u95f4\u79fb\u52a8\uff0c\u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u6bcd\uff0c\u975e\u5b57\u6bcd\u5b57\u7b26\u4e0d\u53d7\u5f71\u54cd\u3002 LC 680 \u9a8c\u8bc1\u56de\u6587\u4e32 \u95ee\u9898\u63cf\u8ff0 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c \u6700\u591a \u53ef\u4ee5\u5220\u9664\u5176\u4e2d\u7684\u4e00\u4e2a\u5b57\u7b26\u3002\u8bf7\u5224\u65ad\u5220\u9664\u4e00\u4e2a\u5b57\u7b26\u540e\uff0c\u5b57\u7b26\u4e32\u662f\u5426\u80fd\u6210\u4e3a\u56de\u6587\u4e32\u3002\u5982\u679c\u80fd\u6210\u4e3a\u56de\u6587\u4e32\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002 \u63d0\u793a \u9700\u8981\u8003\u8651\u5728\u5220\u9664\u6700\u591a\u4e00\u4e2a\u5b57\u7b26\u7684\u60c5\u51b5\u4e0b\uff0c\u5b57\u7b26\u4e32\u80fd\u5426\u6210\u4e3a\u56de\u6587\u3002 \u4f7f\u7528 \u53cc\u6307\u9488\u6cd5 \uff0c\u5728\u9047\u5230\u4e0d\u5339\u914d\u7684\u5b57\u7b26\u65f6\uff0c\u5c1d\u8bd5\u5220\u9664\u5de6\u8fb9\u6216\u53f3\u8fb9\u7684\u4e00\u4e2a\u5b57\u7b26\uff0c\u5e76\u68c0\u67e5\u5269\u4f59\u90e8\u5206\u662f\u5426\u4e3a\u56de\u6587\u3002 \u601d\u8def\u5206\u6790 \u53cc\u6307\u9488\u6cd5 \uff1a \u4ece\u5b57\u7b26\u4e32\u7684\u4e24\u7aef\u4f7f\u7528\u4e24\u4e2a\u6307\u9488 start \u548c end \uff0c\u9010\u5b57\u7b26\u5411\u4e2d\u95f4\u79fb\u52a8\uff0c\u68c0\u67e5\u662f\u5426\u662f\u56de\u6587\u3002 \u5904\u7406\u4e0d\u5339\u914d\u5b57\u7b26 \uff1a \u5f53 s[start] \u548c s[end] \u4e0d\u76f8\u7b49\u65f6\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u8df3\u8fc7\u4e00\u4e2a\u5b57\u7b26\uff08\u5220\u9664\uff09\uff0c\u5e76\u5224\u65ad\u5269\u4e0b\u7684\u5b57\u7b26\u4e32\u662f\u5426\u662f\u56de\u6587\u3002 \u53ef\u4ee5\u9009\u62e9\u5220\u9664\u5de6\u8fb9\u7684\u5b57\u7b26\uff08\u5373 start+1 \u5230 end \u7684\u5b50\u4e32\uff09\u6216\u53f3\u8fb9\u7684\u5b57\u7b26\uff08\u5373 start \u5230 end-1 \u7684\u5b50\u4e32\uff09\u6765\u7ee7\u7eed\u9a8c\u8bc1\u3002 \u8f85\u52a9\u51fd\u6570 helper \uff1a \u7528\u4e8e\u5224\u65ad\u7ed9\u5b9a\u5b50\u4e32\u662f\u5426\u662f\u56de\u6587\u4e32\u3002 \u53c2\u8003\u89e3\u7b54 class Solution { public: // \u8f85\u52a9\u51fd\u6570\uff0c\u5224\u65ad\u5b50\u4e32\u662f\u5426\u4e3a\u56de\u6587 bool helper(string s, int start, int end) { while (start < end) { if (s[start] != s[end]) { return false; } start++; end--; } return true; } bool validPalindrome(string s) { int start = 0; int end = s.length() - 1; while (start < end) { // \u5f53\u9047\u5230\u4e0d\u5339\u914d\u7684\u5b57\u7b26\u65f6\uff0c\u5c1d\u8bd5\u8df3\u8fc7\u4e00\u4e2a\u5b57\u7b26 if (s[start] != s[end]) { // \u5c1d\u8bd5\u8df3\u8fc7\u5de6\u8fb9\u5b57\u7b26\u6216\u53f3\u8fb9\u5b57\u7b26\u540e\uff0c\u68c0\u67e5\u662f\u5426\u4e3a\u56de\u6587 return helper(s, start + 1, end) || helper(s, start, end - 1); } start++; end--; } return true; } }; \u8bf4\u660e helper \u51fd\u6570 \uff1a\u7528\u4e8e\u5224\u65ad\u5b57\u7b26\u4e32 s \u4e2d\u4ece start \u5230 end \u662f\u5426\u4e3a\u56de\u6587\u3002 \u4e3b\u51fd\u6570 validPalindrome \uff1a\u4f7f\u7528\u53cc\u6307\u9488\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u9047\u5230\u4e0d\u5339\u914d\u65f6\uff0c\u5206\u522b\u5c1d\u8bd5\u8df3\u8fc7\u5de6\u8fb9\u6216\u53f3\u8fb9\u7684\u5b57\u7b26\uff0c\u5e76\u8c03\u7528 helper \u5224\u65ad\u5269\u4f59\u90e8\u5206\u662f\u5426\u4e3a\u56de\u6587\u3002 \u5982\u679c\u5728\u4e0d\u5220\u9664\u5b57\u7b26\u7684\u60c5\u51b5\u4e0b\uff0c\u5b57\u7b26\u4e32\u5df2\u7ecf\u662f\u56de\u6587\uff0c\u5219\u76f4\u63a5\u8fd4\u56de true \u3002 \u8bfe\u540e\u7ec3\u4e60 \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC151 \u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u9010\u5b57\u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd\uff0c\u53bb\u9664\u591a\u4f59\u7a7a\u683c\u3002 LC392 \u5224\u65ad\u5b50\u5e8f\u5217 \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 s \u548c t\uff0c\u5224\u65ad s \u662f\u5426\u662f t \u7684\u5b50\u5e8f\u5217\u3002 LC541 \u53cd\u8f6c\u5b57\u7b26\u4e32 II \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6309\u7167\u6bcf\u9694 k \u4e2a\u5b57\u7b26\u53cd\u8f6c\u524d k \u4e2a\u5b57\u7b26\u3002 LC1332 \u5220\u9664\u56de\u6587\u5b50\u5e8f\u5217 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5220\u9664\u56de\u6587\u5b50\u5e8f\u5217\u7684\u6700\u5c11\u6b65\u9aa4\u6570\u3002","title":"Lesson9 \u5b57\u7b26\u4e32\u53cc\u6307\u9488\u7b97\u6cd5\u4e13\u9898"},{"location":"lesson9/Lesson9%20C%2B%2B/#lesson9","text":"","title":"Lesson9 \u5b57\u7b26\u4e32\u53cc\u6307\u9488\u7b97\u6cd5\u4e13\u9898"},{"location":"lesson9/Lesson9%20C%2B%2B/#_1","text":"\u5bf9\u649e\u6307\u9488 1.1 \u5bf9\u649e\u6307\u9488\u89e3\u9898\u6b65\u9aa4 1.2 \u5bf9\u649e\u6307\u9488\u4f2a\u4ee3\u7801\u6a21\u7248 1.3 \u5bf9\u649e\u6307\u9488\u9002\u7528\u8303\u56f4 \u4f8b\u9898\u8bb2\u89e3 LC 344 \u53cd\u8f6c\u5b57\u7b26\u4e32 LC 125 \u9a8c\u8bc1\u56de\u6587\u4e32 \u4e3e\u4e00\u53cd\u4e09 LC 345 \u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5143\u97f3\u5b57\u6bcd LC 917 \u4ec5\u4ec5\u53cd\u8f6c\u5b57\u6bcd LC 680 \u9a8c\u8bc1\u56de\u6587\u4e32 \u8bfe\u540e\u7ec3\u4e60 \u53cc\u6307\u9488\uff08Two Pointers\uff09 \uff1a\u6307\u7684\u662f\u5728\u904d\u5386\u5143\u7d20\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u662f\u4f7f\u7528\u5355\u4e2a\u6307\u9488\u8fdb\u884c\u8bbf\u95ee\uff0c\u800c\u662f\u4f7f\u7528\u4e24\u4e2a\u6307\u9488\u8fdb\u884c\u8bbf\u95ee\uff0c\u4ece\u800c\u8fbe\u5230\u76f8\u5e94\u7684\u76ee\u7684\u3002\u5982\u679c\u4e24\u4e2a\u6307\u9488\u65b9\u5411\u76f8\u53cd\uff0c\u5219\u79f0\u4e3a\u300c\u5bf9\u649e\u6307\u9488\u300d\u3002\u5982\u679c\u4e24\u4e2a\u6307\u9488\u65b9\u5411\u76f8\u540c\uff0c\u5219\u79f0\u4e3a\u300c\u5feb\u6162\u6307\u9488\u300d\u3002\u5982\u679c\u4e24\u4e2a\u6307\u9488\u5206\u522b\u5c5e\u4e8e\u4e0d\u540c\u7684\u6570\u7ec4 / \u94fe\u8868\uff0c\u5219\u79f0\u4e3a\u300c\u5206\u79bb\u53cc\u6307\u9488\u300d\uff1b\u672c\u7ae0\u4ec5\u9488\u5bf9\u5b57\u7b26\u4e32\u5bf9\u649e\u6307\u9488\u8fdb\u884c\u4ecb\u7ecd\u548c\u9898\u76ee\u5206\u6790\u3002","title":"\u76ee\u5f55"},{"location":"lesson9/Lesson9%20C%2B%2B/#1","text":"\u5bf9\u649e\u6307\u9488\uff1a\u6307\u7684\u662f\u4e24\u4e2a\u6307\u9488left\u3001right\u5206\u522b\u6307\u5411\u5e8f\u5217\u7b2c\u4e00\u4e2a\u5143\u7d20\u548c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u7136\u540eleft\u6307\u9488\u4e0d\u65ad\u9012\u589e\uff0cright\u4e0d\u65ad\u9012\u51cf\uff0c\u76f4\u5230\u4e24\u4e2a\u6307\u9488\u7684\u503c\u76f8\u649e\uff08\u5373 left== right\uff09\uff0c\u6216\u8005\u6ee1\u8db3\u5176\u4ed6\u8981\u6c42\u7684\u7279\u6b8a\u6761\u4ef6\u4e3a\u6b62\u3002","title":"1. \u5bf9\u649e\u6307\u9488"},{"location":"lesson9/Lesson9%20C%2B%2B/#11","text":"\u4f7f\u7528\u4e24\u4e2a\u6307\u9488left\uff0cright\u3002left\u6307\u5411\u5e8f\u5217\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u5373\uff1a left=0 \uff0cright\u6307\u5411\u5e8f\u5217\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5373\uff1a right=nums.length()-1 \u3002 \u5728\u5faa\u73af\u4f53\u4e2d\u5c06\u5de6\u53f3\u6307\u9488\u76f8\u5411\u79fb\u52a8\uff0c\u5f53\u6ee1\u8db3\u4e00\u5b9a\u6761\u4ef6\u65f6\uff0c\u5c06\u5de6\u6307\u9488\u53f3\u79fb\uff0c left+=1 \u3002\u5f53\u6ee1\u8db3\u53e6\u5916\u4e00\u5b9a\u6761\u4ef6\u65f6\uff0c\u5c06\u53f3\u6307\u9488\u5de6\u79fb\uff0c right-=1 \u3002 \u76f4\u5230\u4e24\u6307\u9488\u76f8\u649e\uff08\u5373 left==right \uff09\uff0c\u6216\u8005\u6ee1\u8db3\u5176\u4ed6\u8981\u6c42\u7684\u7279\u6b8a\u6761\u4ef6\u65f6\uff0c\u8df3\u51fa\u5faa\u73af\u4f53\u3002","title":"1.1 \u5bf9\u649e\u6307\u9488\u89e3\u9898\u6b65\u9aa4"},{"location":"lesson9/Lesson9%20C%2B%2B/#12","text":"int left = 0; int right = len(nums) - 1; while (left < right) { if (\u6ee1\u8db3\u67d0\u4e9b\u6761\u4ef6) { return \u7b26\u5408\u6761\u4ef6\u7684\u503c; } if (\u6761\u4ef61) { left++; // \u79fb\u52a8\u5de6\u6307\u9488 } else { right--; // \u79fb\u52a8\u53f3\u6307\u9488 } } return -1; // \u5982\u679c\u6ca1\u627e\u5230\uff0c\u8fd4\u56de\u6807\u8bb0\u503c","title":"1.2 \u5bf9\u649e\u6307\u9488\u4f2a\u4ee3\u7801\u6a21\u7248"},{"location":"lesson9/Lesson9%20C%2B%2B/#13","text":"\u5bf9\u649e\u6307\u9488\u4e00\u822c\u7528\u6765\u89e3\u51b3\u6709\u5e8f\u6570\u7ec4\u6216\u8005\u5b57\u7b26\u4e32\u95ee\u9898\uff1a \u67e5\u627e\u6709\u5e8f\u6570\u7ec4\u4e2d\u6ee1\u8db3\u67d0\u4e9b\u7ea6\u675f\u6761\u4ef6\u7684\u4e00\u7ec4\u5143\u7d20\u95ee\u9898\uff1a\u6bd4\u5982\u4e8c\u5206\u67e5\u627e\u3001\u6570\u5b57\u4e4b\u548c\u7b49\u95ee\u9898\u3002 \u5b57\u7b26\u4e32\u53cd\u8f6c\u95ee\u9898\uff1a\u53cd\u8f6c\u5b57\u7b26\u4e32\u3001\u56de\u6587\u6570\u3001\u98a0\u5012\u4e8c\u8fdb\u5236\u7b49\u95ee\u9898\u3002","title":"1.3 \u5bf9\u649e\u6307\u9488\u9002\u7528\u8303\u56f4"},{"location":"lesson9/Lesson9%20C%2B%2B/#2","text":"","title":"2. \u4f8b\u9898\u8bb2\u89e3"},{"location":"lesson9/Lesson9%20C%2B%2B/#lc-344","text":"","title":"LC 344 \u53cd\u8f6c\u5b57\u7b26\u4e32"},{"location":"lesson9/Lesson9%20C%2B%2B/#_2","text":"\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5176\u4f5c\u7528\u662f\u5c06\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u53cd\u8f6c\u8fc7\u6765\u3002\u8f93\u5165\u5b57\u7b26\u4e32\u4ee5\u5b57\u7b26\u6570\u7ec4 s \u7684\u5f62\u5f0f\u7ed9\u51fa\u3002 \u4e0d\u8981\u7ed9\u53e6\u5916\u7684\u6570\u7ec4\u5206\u914d\u989d\u5916\u7684\u7a7a\u95f4\uff0c\u4f60\u5fc5\u987b \u539f\u5730 \u4fee\u6539\u8f93\u5165\u6570\u7ec4 \u3001\u4f7f\u7528 O(1) \u7684\u989d\u5916\u7a7a\u95f4\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson9/Lesson9%20C%2B%2B/#_3","text":"\u5bf9\u4e8e\u957f\u5ea6\u4e3a N \u7684\u5b57\u7b26\u6570\u7ec4\uff0c\u53cd\u8f6c\u7684\u8fc7\u7a0b\u5c31\u662f\u5c06\u524d\u540e\u7684\u5b57\u7b26\u4ea4\u6362\uff0c\u76f4\u5230\u4e24\u7aef\u7684\u6307\u9488\u76f8\u9047\u4e3a\u6b62\u3002\u5177\u4f53\u6765\u8bf4\uff1a \u53cc\u6307\u9488\u6cd5\uff1a \u521d\u59cb\u5316\u4e24\u4e2a\u6307\u9488\uff0c start \u6307\u5411\u5b57\u7b26\u4e32\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\uff0c end \u6307\u5411\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u3002 \u5f53 start < end \u65f6\uff0c\u4ea4\u6362\u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u7684\u5b57\u7b26\uff0c\u7136\u540e start \u6307\u9488\u53f3\u79fb\uff0c end \u6307\u9488\u5de6\u79fb\uff0c\u76f4\u5230\u4e24\u4e2a\u6307\u9488\u76f8\u9047\u6216\u4ea4\u9519\u3002","title":"\u9898\u76ee\u5206\u6790"},{"location":"lesson9/Lesson9%20C%2B%2B/#_4","text":"\u53cc\u6307\u9488\u601d\u8def\uff1a \u5c06 start \u8bbe\u7f6e\u4e3a 0\uff0c end \u8bbe\u7f6e\u4e3a s.size() - 1 \u3002 \u5f53 start \u5c0f\u4e8e end \u65f6\uff0c\u4ea4\u6362 s[start] \u548c s[end] \uff0c\u7136\u540e\u5206\u522b\u79fb\u52a8\u4e24\u4e2a\u6307\u9488\u3002 \u5f53 start >= end \u65f6\uff0c\u8bf4\u660e\u5b57\u7b26\u4e32\u5df2\u7ecf\u53cd\u8f6c\u5b8c\u6210\u3002","title":"\u601d\u8def"},{"location":"lesson9/Lesson9%20C%2B%2B/#_5","text":"class Solution { public: void reverseString(vector<char>& s) { int start = 0; int end = s.size() - 1; while (start < end) { swap(s[start], s[end]); // \u4ea4\u6362 start \u548c end \u4f4d\u7f6e\u7684\u5b57\u7b26 start++; end--; } } }; \u8981\u70b9\u8bf4\u660e\uff1a \u53cc\u6307\u9488\u6cd5\uff1a \u4f7f\u7528 start \u548c end \u4e24\u4e2a\u6307\u9488\u4ece\u5b57\u7b26\u4e32\u7684\u4e24\u7aef\u5411\u4e2d\u95f4\u79fb\u52a8\uff0c\u5e76\u4ea4\u6362\u76f8\u5e94\u4f4d\u7f6e\u7684\u5b57\u7b26\u3002 \u539f\u5730\u4fee\u6539\uff1a \u5728\u7ed9\u5b9a\u7684 vector<char>& \u4e2d\u76f4\u63a5\u8fdb\u884c\u64cd\u4f5c\uff0c\u6ca1\u6709\u4f7f\u7528\u989d\u5916\u7684\u7a7a\u95f4\u3002","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson9/Lesson9%20C%2B%2B/#lc-125","text":"","title":"LC 125 \u9a8c\u8bc1\u56de\u6587\u4e32"},{"location":"lesson9/Lesson9%20C%2B%2B/#_6","text":"\u5982\u679c\u5728\u5c06\u6240\u6709\u5927\u5199\u5b57\u7b26\u8f6c\u6362\u4e3a\u5c0f\u5199\u5b57\u7b26\uff0c\u5e76\u79fb\u9664\u6240\u6709\u975e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\u540e\uff0c\u4e00\u4e2a\u77ed\u8bed\u6b63\u7740\u8bfb\u548c\u53cd\u7740\u8bfb\u90fd\u4e00\u6837\uff0c\u5219\u53ef\u4ee5\u8ba4\u4e3a\u8be5\u77ed\u8bed\u662f\u4e00\u4e2a \u56de\u6587\u4e32 \u3002 \u5b57\u6bcd\u548c\u6570\u5b57\u5c5e\u4e8e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\u3002 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u5982\u679c\u5b83\u662f \u56de\u6587\u4e32 \uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson9/Lesson9%20C%2B%2B/#_7","text":"\u5ffd\u7565\u5b57\u7b26\u4e32\u4e2d\u7684\u7a7a\u683c\u3001\u6807\u70b9\u7b26\u53f7\u7b49\u975e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\uff0c\u5e76\u4e14\u5224\u65ad\u65f6\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u3002 \u53ef\u4ee5\u4f7f\u7528\u53cc\u6307\u9488\u4ece\u4e24\u7aef\u5411\u4e2d\u95f4\u79fb\u52a8\uff0c\u9010\u5b57\u7b26\u68c0\u67e5\u662f\u5426\u76f8\u7b49\u3002","title":"\u63d0\u793a"},{"location":"lesson9/Lesson9%20C%2B%2B/#_8","text":"\u8fc7\u6ee4\u975e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\uff1a \u4f7f\u7528 isalnum \u51fd\u6570\u6765\u68c0\u67e5\u5b57\u7b26\u662f\u5426\u4e3a\u5b57\u6bcd\u6216\u6570\u5b57\u3002 \u8df3\u8fc7\u4e0d\u5c5e\u4e8e\u5b57\u6bcd\u6570\u5b57\u7684\u5b57\u7b26\u3002 \u53cc\u6307\u9488\u6cd5\uff1a \u4f7f\u7528\u4e24\u4e2a\u6307\u9488\uff0c\u4e00\u4e2a\u6307\u5411\u5b57\u7b26\u4e32\u7684\u5f00\u5934\uff0c\u53e6\u4e00\u4e2a\u6307\u5411\u5b57\u7b26\u4e32\u7684\u7ed3\u5c3e\u3002 \u4ece\u4e24\u7aef\u5f00\u59cb\u5411\u4e2d\u95f4\u79fb\u52a8\uff0c\u9010\u4e2a\u6bd4\u8f83\u6709\u6548\u7684\u5b57\u7b26\u3002 \u5ffd\u7565\u5927\u5c0f\u5199\uff1a \u4f7f\u7528 tolower \u6216 toupper \u51fd\u6570\u6765\u5ffd\u7565\u5927\u5c0f\u5199\u5dee\u5f02\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson9/Lesson9%20C%2B%2B/#_9","text":"class Solution { public: bool isPalindrome(string s) { int start = 0; int end = s.length() - 1; while (start < end) { // \u79fb\u52a8 start \u6307\u9488\u8df3\u8fc7\u975e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26 if (!isalnum(s[start])) { start++; continue; } // \u79fb\u52a8 end \u6307\u9488\u8df3\u8fc7\u975e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26 if (!isalnum(s[end])) { end--; continue; } // \u5ffd\u7565\u5927\u5c0f\u5199\u6bd4\u8f83\u5b57\u7b26 if (tolower(s[start]) != tolower(s[end])) { return false; } start++; end--; } return true; } };","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson9/Lesson9%20C%2B%2B/#_10","text":"\u53ef\u4ee5\u901a\u8fc7\u9884\u5904\u7406\u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u53ea\u5305\u542b\u5b57\u6bcd\u548c\u6570\u5b57\u7684\u5c0f\u5199\u5f62\u5f0f\uff0c\u7136\u540e\u5224\u65ad\u8fd9\u4e2a\u5904\u7406\u540e\u7684\u5b57\u7b26\u4e32\u662f\u5426\u662f\u56de\u6587\u3002 class Solution { public: bool isPalindrome(string s) { string sgood; for (char c : s) { if (isalnum(c)) { sgood += tolower(c); } } // \u68c0\u67e5 sgood \u662f\u5426\u662f\u56de\u6587 int start = 0, end = sgood.length() - 1; while (start < end) { if (sgood[start] != sgood[end]) { return false; } start++; end--; } return true; } }; \u8981\u70b9\u8bf4\u660e\uff1a - \u4f7f\u7528 isalnum \u5224\u65ad\u662f\u5426\u662f\u5b57\u6bcd\u6216\u6570\u5b57\u3002 - \u4f7f\u7528 tolower \u5c06\u5b57\u7b26\u8f6c\u6362\u4e3a\u5c0f\u5199\u8fdb\u884c\u6bd4\u8f83\u3002 - \u91c7\u7528\u53cc\u6307\u9488\u6cd5\uff0c\u76f4\u63a5\u5bf9\u539f\u5b57\u7b26\u4e32\u8fdb\u884c\u5224\u65ad\uff0c\u7b26\u5408\u7a7a\u95f4\u590d\u6742\u5ea6\u8981\u6c42\u3002","title":"\u5207\u7247\u6cd5"},{"location":"lesson9/Lesson9%20C%2B%2B/#3","text":"","title":"3. \u4e3e\u4e00\u53cd\u4e09"},{"location":"lesson9/Lesson9%20C%2B%2B/#lc-345","text":"","title":"LC 345 \u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5143\u97f3\u5b57\u6bcd"},{"location":"lesson9/Lesson9%20C%2B%2B/#_11","text":"\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u8bf7\u4ec5\u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709\u5143\u97f3\u5b57\u6bcd\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c\u5b57\u7b26\u4e32\u3002 \u5143\u97f3\u5b57\u6bcd \u5305\u62ec 'a' \u3001 'e' \u3001 'i' \u3001 'o' \u3001 'u' \uff0c\u5e76\u4e14\u5927\u5c0f\u5199\u5b57\u6bcd\u5747\u89c6\u4e3a\u5143\u97f3\u5b57\u6bcd\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson9/Lesson9%20C%2B%2B/#_12","text":"\u4f60\u9700\u8981\u5728\u539f\u5730\u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5143\u97f3\u5b57\u6bcd\uff0c\u540c\u65f6\u4fdd\u6301\u5176\u4ed6\u5b57\u7b26\u7684\u4f4d\u7f6e\u4e0d\u53d8\u3002 \u6ce8\u610f\u5904\u7406\u5927\u5c0f\u5199\u4e0d\u654f\u611f\u7684\u5143\u97f3\u5b57\u7b26\u3002","title":"\u63d0\u793a"},{"location":"lesson9/Lesson9%20C%2B%2B/#_13","text":"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 \u53cc\u6307\u9488\u6cd5 \u5bf9\u5b57\u7b26\u4e32\u4e2d\u7684\u5143\u97f3\u5b57\u6bcd\u8fdb\u884c\u53cd\u8f6c\u3002\u601d\u8def\u5982\u4e0b\uff1a \u521d\u59cb\u5316\u4e24\u4e2a\u6307\u9488 \uff1a \u4e00\u4e2a\u6307\u9488 start \u6307\u5411\u5b57\u7b26\u4e32\u7684\u9996\u4f4d\uff0c\u53e6\u4e00\u4e2a\u6307\u9488 end \u6307\u5411\u5b57\u7b26\u4e32\u7684\u672b\u4f4d\u3002 \u5143\u97f3\u5b57\u6bcd\u7684\u68c0\u67e5 \uff1a \u5982\u679c start \u548c end \u6240\u6307\u5b57\u7b26\u90fd\u662f\u5143\u97f3\u5b57\u6bcd\uff0c\u5219\u4ea4\u6362\u5b83\u4eec\uff0c\u5e76\u5c06 start \u5411\u53f3\u79fb\uff0c end \u5411\u5de6\u79fb\u3002 \u5982\u679c start \u6307\u5411\u7684\u5b57\u7b26\u4e0d\u662f\u5143\u97f3\u5b57\u6bcd\uff0c\u5219\u5411\u53f3\u79fb\u3002 \u5982\u679c end \u6307\u5411\u7684\u5b57\u7b26\u4e0d\u662f\u5143\u97f3\u5b57\u6bcd\uff0c\u5219\u5411\u5de6\u79fb\u3002 \u7ee7\u7eed\u68c0\u67e5\u76f4\u5230 start >= end \u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson9/Lesson9%20C%2B%2B/#_14","text":"class Solution { public: string reverseVowels(string s) { string vowels = \"aeiouAEIOU\"; int start = 0; int end = s.length() - 1; while (start < end) { // \u7528 while \u5faa\u73af\u627e\u5230\u6700\u8fd1\u7684\u5143\u97f3\u5b57\u6bcd while (start < end && vowels.find(s[start]) == string::npos) { start++; } while (start < end && vowels.find(s[end]) == string::npos) { end--; } // \u4ea4\u6362\u5143\u97f3\u5b57\u6bcd if (start < end) { swap(s[start], s[end]); start++; end--; } } return s; } };","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson9/Lesson9%20C%2B%2B/#_15","text":"vowels.find(s[start]) != string::npos \uff1a\u7528\u4e8e\u68c0\u67e5\u5b57\u7b26 s[start] \u662f\u5426\u5728 vowels \u5b57\u7b26\u4e32\u4e2d\uff0c\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u5143\u97f3\u5b57\u6bcd\u3002 swap(s[start], s[end]) \uff1a\u4ea4\u6362\u4e24\u4e2a\u5143\u97f3\u5b57\u7b26\u3002 \u53cc\u6307\u9488\u7684\u79fb\u52a8\u903b\u8f91\u786e\u4fdd\u53ea\u6709\u5143\u97f3\u5b57\u6bcd\u88ab\u53cd\u8f6c\uff0c\u5176\u4ed6\u5b57\u7b26\u4fdd\u6301\u539f\u4f4d\u7f6e\u4e0d\u53d8\u3002","title":"\u8bf4\u660e"},{"location":"lesson9/Lesson9%20C%2B%2B/#lc-917","text":"","title":"LC 917 \u4ec5\u4ec5\u53cd\u8f6c\u5b57\u6bcd"},{"location":"lesson9/Lesson9%20C%2B%2B/#_16","text":"\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u6839\u636e\u4e0b\u8ff0\u89c4\u5219\u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u6bcd\uff1a \u6240\u6709\u975e\u82f1\u6587\u5b57\u6bcd\u4fdd\u7559\u5728\u539f\u6709\u4f4d\u7f6e\u3002 \u6240\u6709\u82f1\u6587\u5b57\u6bcd\uff08\u5c0f\u5199\u6216\u5927\u5199\uff09\u7684\u987a\u5e8f\u8fdb\u884c\u53cd\u8f6c\u3002 \u8fd4\u56de\u53cd\u8f6c\u540e\u7684\u5b57\u7b26\u4e32 s \u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson9/Lesson9%20C%2B%2B/#_17","text":"\u4f60\u53ea\u9700\u8981\u53cd\u8f6c\u5b57\u6bcd\uff0c\u975e\u5b57\u6bcd\u5b57\u7b26\u7684\u4f4d\u7f6e\u4fdd\u6301\u4e0d\u53d8\u3002 \u4f7f\u7528\u53cc\u6307\u9488\u6cd5\u53ef\u4ee5\u9ad8\u6548\u5730\u904d\u5386\u548c\u4ea4\u6362\u5b57\u6bcd\u3002","title":"\u63d0\u793a"},{"location":"lesson9/Lesson9%20C%2B%2B/#_18","text":"\u4f7f\u7528 \u53cc\u6307\u9488\u6cd5 \u6765\u5904\u7406\u5b57\u6bcd\u53cd\u8f6c\u3002\u5177\u4f53\u601d\u8def\u5982\u4e0b\uff1a \u53cc\u6307\u9488\u521d\u59cb\u5316 \uff1a \u6307\u9488 left \u4ece\u5b57\u7b26\u4e32\u5de6\u4fa7\u5f00\u59cb\uff0c\u6307\u9488 right \u4ece\u5b57\u7b26\u4e32\u53f3\u4fa7\u5f00\u59cb\u3002 \u5bfb\u627e\u5b57\u6bcd\u5e76\u4ea4\u6362 \uff1a left \u5411\u53f3\u79fb\u52a8\uff0c\u8df3\u8fc7\u975e\u5b57\u6bcd\u5b57\u7b26\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u5b57\u6bcd\u3002 right \u5411\u5de6\u79fb\u52a8\uff0c\u8df3\u8fc7\u975e\u5b57\u6bcd\u5b57\u7b26\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u5b57\u6bcd\u3002 \u5f53 left < right \u65f6\uff0c\u4ea4\u6362\u8fd9\u4e24\u4e2a\u5b57\u6bcd\u7684\u4f4d\u7f6e\uff0c\u7ee7\u7eed\u79fb\u52a8\u6307\u9488\u3002 \u505c\u6b62\u6761\u4ef6 \uff1a \u5f53 left >= right \u65f6\uff0c\u8868\u793a\u6240\u6709\u5b57\u6bcd\u90fd\u5df2\u53cd\u8f6c\uff0c\u9000\u51fa\u5faa\u73af\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson9/Lesson9%20C%2B%2B/#_19","text":"class Solution { public: string reverseOnlyLetters(string s) { int left = 0; int right = s.length() - 1; while (left < right) { // \u8df3\u8fc7\u5de6\u8fb9\u7684\u975e\u5b57\u6bcd\u5b57\u7b26 while (left < right && !isalpha(s[left])) { left++; } // \u8df3\u8fc7\u53f3\u8fb9\u7684\u975e\u5b57\u6bcd\u5b57\u7b26 while (left < right && !isalpha(s[right])) { right--; } // \u4ea4\u6362\u5b57\u6bcd if (left < right) { swap(s[left], s[right]); left++; right--; } } return s; } };","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson9/Lesson9%20C%2B%2B/#_20","text":"isalpha(s[left]) \uff1a\u68c0\u67e5\u5b57\u7b26\u662f\u5426\u662f\u5b57\u6bcd\uff0c\u8df3\u8fc7\u975e\u5b57\u6bcd\u5b57\u7b26\u3002 swap(s[left], s[right]) \uff1a\u4ea4\u6362 left \u548c right \u4f4d\u7f6e\u7684\u5b57\u6bcd\u3002 \u53cc\u6307\u9488\u4ece\u4e24\u7aef\u5411\u4e2d\u95f4\u79fb\u52a8\uff0c\u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u6bcd\uff0c\u975e\u5b57\u6bcd\u5b57\u7b26\u4e0d\u53d7\u5f71\u54cd\u3002","title":"\u89e3\u91ca"},{"location":"lesson9/Lesson9%20C%2B%2B/#lc-680","text":"","title":"LC 680 \u9a8c\u8bc1\u56de\u6587\u4e32"},{"location":"lesson9/Lesson9%20C%2B%2B/#_21","text":"\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c \u6700\u591a \u53ef\u4ee5\u5220\u9664\u5176\u4e2d\u7684\u4e00\u4e2a\u5b57\u7b26\u3002\u8bf7\u5224\u65ad\u5220\u9664\u4e00\u4e2a\u5b57\u7b26\u540e\uff0c\u5b57\u7b26\u4e32\u662f\u5426\u80fd\u6210\u4e3a\u56de\u6587\u4e32\u3002\u5982\u679c\u80fd\u6210\u4e3a\u56de\u6587\u4e32\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson9/Lesson9%20C%2B%2B/#_22","text":"\u9700\u8981\u8003\u8651\u5728\u5220\u9664\u6700\u591a\u4e00\u4e2a\u5b57\u7b26\u7684\u60c5\u51b5\u4e0b\uff0c\u5b57\u7b26\u4e32\u80fd\u5426\u6210\u4e3a\u56de\u6587\u3002 \u4f7f\u7528 \u53cc\u6307\u9488\u6cd5 \uff0c\u5728\u9047\u5230\u4e0d\u5339\u914d\u7684\u5b57\u7b26\u65f6\uff0c\u5c1d\u8bd5\u5220\u9664\u5de6\u8fb9\u6216\u53f3\u8fb9\u7684\u4e00\u4e2a\u5b57\u7b26\uff0c\u5e76\u68c0\u67e5\u5269\u4f59\u90e8\u5206\u662f\u5426\u4e3a\u56de\u6587\u3002","title":"\u63d0\u793a"},{"location":"lesson9/Lesson9%20C%2B%2B/#_23","text":"\u53cc\u6307\u9488\u6cd5 \uff1a \u4ece\u5b57\u7b26\u4e32\u7684\u4e24\u7aef\u4f7f\u7528\u4e24\u4e2a\u6307\u9488 start \u548c end \uff0c\u9010\u5b57\u7b26\u5411\u4e2d\u95f4\u79fb\u52a8\uff0c\u68c0\u67e5\u662f\u5426\u662f\u56de\u6587\u3002 \u5904\u7406\u4e0d\u5339\u914d\u5b57\u7b26 \uff1a \u5f53 s[start] \u548c s[end] \u4e0d\u76f8\u7b49\u65f6\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u8df3\u8fc7\u4e00\u4e2a\u5b57\u7b26\uff08\u5220\u9664\uff09\uff0c\u5e76\u5224\u65ad\u5269\u4e0b\u7684\u5b57\u7b26\u4e32\u662f\u5426\u662f\u56de\u6587\u3002 \u53ef\u4ee5\u9009\u62e9\u5220\u9664\u5de6\u8fb9\u7684\u5b57\u7b26\uff08\u5373 start+1 \u5230 end \u7684\u5b50\u4e32\uff09\u6216\u53f3\u8fb9\u7684\u5b57\u7b26\uff08\u5373 start \u5230 end-1 \u7684\u5b50\u4e32\uff09\u6765\u7ee7\u7eed\u9a8c\u8bc1\u3002 \u8f85\u52a9\u51fd\u6570 helper \uff1a \u7528\u4e8e\u5224\u65ad\u7ed9\u5b9a\u5b50\u4e32\u662f\u5426\u662f\u56de\u6587\u4e32\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson9/Lesson9%20C%2B%2B/#_24","text":"class Solution { public: // \u8f85\u52a9\u51fd\u6570\uff0c\u5224\u65ad\u5b50\u4e32\u662f\u5426\u4e3a\u56de\u6587 bool helper(string s, int start, int end) { while (start < end) { if (s[start] != s[end]) { return false; } start++; end--; } return true; } bool validPalindrome(string s) { int start = 0; int end = s.length() - 1; while (start < end) { // \u5f53\u9047\u5230\u4e0d\u5339\u914d\u7684\u5b57\u7b26\u65f6\uff0c\u5c1d\u8bd5\u8df3\u8fc7\u4e00\u4e2a\u5b57\u7b26 if (s[start] != s[end]) { // \u5c1d\u8bd5\u8df3\u8fc7\u5de6\u8fb9\u5b57\u7b26\u6216\u53f3\u8fb9\u5b57\u7b26\u540e\uff0c\u68c0\u67e5\u662f\u5426\u4e3a\u56de\u6587 return helper(s, start + 1, end) || helper(s, start, end - 1); } start++; end--; } return true; } };","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson9/Lesson9%20C%2B%2B/#_25","text":"helper \u51fd\u6570 \uff1a\u7528\u4e8e\u5224\u65ad\u5b57\u7b26\u4e32 s \u4e2d\u4ece start \u5230 end \u662f\u5426\u4e3a\u56de\u6587\u3002 \u4e3b\u51fd\u6570 validPalindrome \uff1a\u4f7f\u7528\u53cc\u6307\u9488\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u9047\u5230\u4e0d\u5339\u914d\u65f6\uff0c\u5206\u522b\u5c1d\u8bd5\u8df3\u8fc7\u5de6\u8fb9\u6216\u53f3\u8fb9\u7684\u5b57\u7b26\uff0c\u5e76\u8c03\u7528 helper \u5224\u65ad\u5269\u4f59\u90e8\u5206\u662f\u5426\u4e3a\u56de\u6587\u3002 \u5982\u679c\u5728\u4e0d\u5220\u9664\u5b57\u7b26\u7684\u60c5\u51b5\u4e0b\uff0c\u5b57\u7b26\u4e32\u5df2\u7ecf\u662f\u56de\u6587\uff0c\u5219\u76f4\u63a5\u8fd4\u56de true \u3002","title":"\u8bf4\u660e"},{"location":"lesson9/Lesson9%20C%2B%2B/#_26","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC151 \u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u9010\u5b57\u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd\uff0c\u53bb\u9664\u591a\u4f59\u7a7a\u683c\u3002 LC392 \u5224\u65ad\u5b50\u5e8f\u5217 \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 s \u548c t\uff0c\u5224\u65ad s \u662f\u5426\u662f t \u7684\u5b50\u5e8f\u5217\u3002 LC541 \u53cd\u8f6c\u5b57\u7b26\u4e32 II \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6309\u7167\u6bcf\u9694 k \u4e2a\u5b57\u7b26\u53cd\u8f6c\u524d k \u4e2a\u5b57\u7b26\u3002 LC1332 \u5220\u9664\u56de\u6587\u5b50\u5e8f\u5217 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5220\u9664\u56de\u6587\u5b50\u5e8f\u5217\u7684\u6700\u5c11\u6b65\u9aa4\u6570\u3002","title":"\u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson9/Lesson9%20Java/","text":"Lesson9 \u5b57\u7b26\u4e32\u53cc\u6307\u9488\u7b97\u6cd5\u4e13\u9898 \u76ee\u5f55 \u53cc\u6307\u9488\u6982\u8ff0 \u5bf9\u649e\u6307\u9488\u89e3\u9898\u6b65\u9aa4 \u5bf9\u649e\u6307\u9488\u4f2a\u4ee3\u7801\u6a21\u7248 \u5bf9\u649e\u6307\u9488\u9002\u7528\u8303\u56f4 \u4f8b\u9898\u8bb2\u89e3 LC 344 \u53cd\u8f6c\u5b57\u7b26\u4e32 LC 125 \u9a8c\u8bc1\u56de\u6587\u4e32 \u4e3e\u4e00\u53cd\u4e09 LC 345 \u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5143\u97f3\u5b57\u6bcd LC 917 \u4ec5\u4ec5\u53cd\u8f6c\u5b57\u6bcd LC 680 \u9a8c\u8bc1\u56de\u6587\u4e32 II \u8bfe\u540e\u7ec3\u4e60 \u53cc\u6307\u9488\uff08Two Pointers\uff09 \uff1a\u6307\u7684\u662f\u5728\u904d\u5386\u5143\u7d20\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u662f\u4f7f\u7528\u5355\u4e2a\u6307\u9488\u8fdb\u884c\u8bbf\u95ee\uff0c\u800c\u662f\u4f7f\u7528\u4e24\u4e2a\u6307\u9488\u8fdb\u884c\u8bbf\u95ee\uff0c\u4ece\u800c\u8fbe\u5230\u76f8\u5e94\u7684\u76ee\u7684\u3002\u5982\u679c\u4e24\u4e2a\u6307\u9488\u65b9\u5411\u76f8\u53cd\uff0c\u5219\u79f0\u4e3a\u300c\u5bf9\u649e\u6307\u9488\u300d\u3002\u5982\u679c\u4e24\u4e2a\u6307\u9488\u65b9\u5411\u76f8\u540c\uff0c\u5219\u79f0\u4e3a\u300c\u5feb\u6162\u6307\u9488\u300d\u3002\u5982\u679c\u4e24\u4e2a\u6307\u9488\u5206\u522b\u5c5e\u4e8e\u4e0d\u540c\u7684\u6570\u7ec4 / \u94fe\u8868\uff0c\u5219\u79f0\u4e3a\u300c\u5206\u79bb\u53cc\u6307\u9488\u300d\uff1b\u672c\u7ae0\u4ec5\u9488\u5bf9\u5b57\u7b26\u4e32\u5bf9\u649e\u6307\u9488\u8fdb\u884c\u4ecb\u7ecd\u548c\u9898\u76ee\u5206\u6790\u3002 1 \u5bf9\u649e\u6307\u9488 \u5bf9\u649e\u6307\u9488\uff1a\u6307\u7684\u662f\u4e24\u4e2a\u6307\u9488left\u3001right\u5206\u522b\u6307\u5411\u5e8f\u5217\u7b2c\u4e00\u4e2a\u5143\u7d20\u548c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u7136\u540eleft\u6307\u9488\u4e0d\u65ad\u9012\u589e\uff0cright\u4e0d\u65ad\u9012\u51cf\uff0c\u76f4\u5230\u4e24\u4e2a\u6307\u9488\u7684\u503c\u76f8\u649e\uff08\u5373 left== right\uff09\uff0c\u6216\u8005\u6ee1\u8db3\u5176\u4ed6\u8981\u6c42\u7684\u7279\u6b8a\u6761\u4ef6\u4e3a\u6b62\u3002 1.1 \u5bf9\u649e\u6307\u9488\u89e3\u9898\u6b65\u9aa4 \u4f7f\u7528\u4e24\u4e2a\u6307\u9488left\uff0cright\u3002left\u6307\u5411\u5e8f\u5217\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u5373\uff1a left=0 \uff0cright\u6307\u5411\u5e8f\u5217\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5373\uff1a right=len(nums)-1 \u3002 \u5728\u5faa\u73af\u4f53\u4e2d\u5c06\u5de6\u53f3\u6307\u9488\u76f8\u5411\u79fb\u52a8\uff0c\u5f53\u6ee1\u8db3\u4e00\u5b9a\u6761\u4ef6\u65f6\uff0c\u5c06\u5de6\u6307\u9488\u53f3\u79fb\uff0c left+=1 \u3002\u5f53\u6ee1\u8db3\u53e6\u5916\u4e00\u5b9a\u6761\u4ef6\u65f6\uff0c\u5c06\u53f3\u6307\u9488\u5de6\u79fb\uff0c right-=1 \u3002 \u76f4\u5230\u4e24\u6307\u9488\u76f8\u649e\uff08\u5373 left==right \uff09\uff0c\u6216\u8005\u6ee1\u8db3\u5176\u4ed6\u8981\u6c42\u7684\u7279\u6b8a\u6761\u4ef6\u65f6\uff0c\u8df3\u51fa\u5faa\u73af\u4f53\u3002 1.2 \u5bf9\u649e\u6307\u9488\u4f2a\u4ee3\u7801\u6a21\u7248 left, right = 0, len(nums) - 1 while left < right: if \u6ee1\u8db3\u8981\u6c42\u7684\u7279\u6b8a\u6761\u4ef6: return \u7b26\u5408\u6761\u4ef6\u7684\u503c elif \u4e00\u5b9a\u6761\u4ef6 1: left += 1 elif \u4e00\u5b9a\u6761\u4ef6 2: right -= 1 return \u6ca1\u627e\u5230 \u6216 \u627e\u5230\u5bf9\u5e94\u503c 1.3 \u5bf9\u649e\u6307\u9488\u9002\u7528\u8303\u56f4 \u5bf9\u649e\u6307\u9488\u4e00\u822c\u7528\u6765\u89e3\u51b3\u6709\u5e8f\u6570\u7ec4\u6216\u8005\u5b57\u7b26\u4e32\u95ee\u9898\uff1a \u67e5\u627e\u6709\u5e8f\u6570\u7ec4\u4e2d\u6ee1\u8db3\u67d0\u4e9b\u7ea6\u675f\u6761\u4ef6\u7684\u4e00\u7ec4\u5143\u7d20\u95ee\u9898\uff1a\u6bd4\u5982\u4e8c\u5206\u67e5\u627e\u3001\u6570\u5b57\u4e4b\u548c\u7b49\u95ee\u9898\u3002 \u5b57\u7b26\u4e32\u53cd\u8f6c\u95ee\u9898\uff1a\u53cd\u8f6c\u5b57\u7b26\u4e32\u3001\u56de\u6587\u6570\u3001\u98a0\u5012\u4e8c\u8fdb\u5236\u7b49\u95ee\u9898\u3002 2 \u4f8b\u9898\u8bb2\u89e3 2.1 LC 344 \u53cd\u8f6c\u5b57\u7b26\u4e32 \u95ee\u9898\u63cf\u8ff0 \u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5176\u4f5c\u7528\u662f\u5c06\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u53cd\u8f6c\u8fc7\u6765\u3002\u8f93\u5165\u5b57\u7b26\u4e32\u4ee5\u5b57\u7b26\u6570\u7ec4 s \u7684\u5f62\u5f0f\u7ed9\u51fa\u3002\u4e0d\u8981\u7ed9\u53e6\u5916\u7684\u6570\u7ec4\u5206\u914d\u989d\u5916\u7684\u7a7a\u95f4\uff0c\u4f60\u5fc5\u987b\u539f\u5730\u4fee\u6539\u8f93\u5165\u6570\u7ec4\u3002 \u601d\u8def\u5206\u6790 \u5bf9\u4e8e\u957f\u5ea6\u4e3a N \u7684\u5f85\u88ab\u53cd\u8f6c\u7684\u5b57\u7b26\u6570\u7ec4\uff0c\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u53cd\u8f6c\u524d\u540e\u4e0b\u6807\u7684\u53d8\u5316\u3002\u53cd\u8f6c\u524d\u5b57\u7b26\u6570\u7ec4\u4e3a s[0] s[1] s[2] ... s[N - 1] \uff0c\u53cd\u8f6c\u540e\u4e3a s[N - 1] s[N - 2] ... s[0] \u3002\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u53cc\u6307\u9488\u7684\u65b9\u5f0f\uff0c\u5de6\u6307\u9488\u4ece\u5f00\u59cb\u4f4d\u7f6e\uff0c\u53f3\u6307\u9488\u4ece\u7ed3\u675f\u4f4d\u7f6e\u5f00\u59cb\uff0c\u9010\u6b65\u4ea4\u6362\u5b57\u7b26\u3002 \u53c2\u8003\u89e3\u7b54 1 \u53cc\u6307\u9488\u89e3\u6cd5 class Solution { public void reverseString(char[] s) { int left = 0; // \u5de6\u6307\u9488 int right = s.length - 1; // \u53f3\u6307\u9488 while (left < right) { // \u4ea4\u6362\u5de6\u53f3\u6307\u9488\u7684\u5b57\u7b26 char temp = s[left]; s[left] = s[right]; s[right] = temp; // \u79fb\u52a8\u6307\u9488 left++; right--; } } } \u4ee3\u7801\u8bf4\u660e \u521d\u59cb\u5316\u6307\u9488 \uff1a left \u6307\u9488\u6307\u5411\u5b57\u7b26\u6570\u7ec4\u7684\u9996\u5143\u7d20\uff0c right \u6307\u9488\u6307\u5411\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u3002 \u4ea4\u6362\u5b57\u7b26 \uff1a \u5728 while \u5faa\u73af\u4e2d\uff0c\u5f53 left \u5c0f\u4e8e right \u65f6\uff0c\u4ea4\u6362 s[left] \u548c s[right] \u7684\u5b57\u7b26\u3002 \u6307\u9488\u79fb\u52a8 \uff1a \u4ea4\u6362\u540e\uff0c left \u6307\u9488\u5411\u53f3\u79fb\u52a8\uff08 left++ \uff09\uff0c right \u6307\u9488\u5411\u5de6\u79fb\u52a8\uff08 right-- \uff09\u3002 \u7ed3\u675f\u6761\u4ef6 \uff1a \u5f53 left \u5927\u4e8e\u6216\u7b49\u4e8e right \u65f6\uff0c\u53cd\u8f6c\u7ed3\u675f\uff0c\u76f4\u63a5\u8fd4\u56de\u3002 \u5728 Java \u4e2d\uff0c\u6807\u51c6\u7684 String \u7c7b\u6ca1\u6709\u63d0\u4f9b reverse() \u65b9\u6cd5\u6765\u76f4\u63a5\u53cd\u8f6c\u5b57\u7b26\u4e32\uff0c\u4f46\u4f60\u53ef\u4ee5\u4f7f\u7528 StringBuilder \u7c7b\u7684 reverse() \u65b9\u6cd5\u6765\u5b9e\u73b0\u8fd9\u4e00\u529f\u80fd\u3002 StringBuilder \u662f\u4e00\u4e2a\u53ef\u53d8\u7684\u5b57\u7b26\u5e8f\u5217\uff0c\u9002\u5408\u7528\u4e8e\u5b57\u7b26\u4e32\u7684\u4fee\u6539\u548c\u64cd\u4f5c\u3002 \u53c2\u8003\u89e3\u7b54 2 \u4f7f\u7528 StringBuilder \u7684 reverse() \u65b9\u6cd5 class Solution { public void reverseString(char[] s) { // \u5c06\u5b57\u7b26\u6570\u7ec4\u8f6c\u6362\u4e3a StringBuilder StringBuilder sb = new StringBuilder(); sb.append(s); // \u53cd\u8f6c StringBuilder \u4e2d\u7684\u5185\u5bb9 sb.reverse(); // \u5c06\u53cd\u8f6c\u540e\u7684\u5185\u5bb9\u590d\u5236\u56de\u5b57\u7b26\u6570\u7ec4 for (int i = 0; i < s.length; i++) { s[i] = sb.charAt(i); } } } \u6ce8\u610f\u4e8b\u9879 \u4f7f\u7528 StringBuilder \u7684 reverse() \u65b9\u6cd5\u867d\u7136\u7b80\u6d01\uff0c\u4f46\u5b83\u5e76\u4e0d\u662f\u539f\u5730\u4fee\u6539\u5b57\u7b26\u6570\u7ec4\uff0c\u800c\u662f\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684 StringBuilder \u5bf9\u8c61\u3002\u56e0\u6b64\uff0c\u5b83\u5e76\u4e0d\u662f\u539f\u5730\u7b97\u6cd5\u3002 \u5982\u679c\u9700\u8981\u539f\u5730\u53cd\u8f6c\u5b57\u7b26\u6570\u7ec4\uff0c\u8bf7\u4f7f\u7528\u524d\u9762\u63d0\u5230\u7684\u53cc\u6307\u9488\u6cd5\uff0c\u800c\u4e0d\u662f StringBuilder \u3002 2.2 LC 125 \u9a8c\u8bc1\u56de\u6587\u4e32 \u95ee\u9898\u63cf\u8ff0 \u5982\u679c\u5728\u5c06\u6240\u6709\u5927\u5199\u5b57\u7b26\u8f6c\u6362\u4e3a\u5c0f\u5199\u5b57\u7b26\u3001\u5e76\u79fb\u9664\u6240\u6709\u975e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\u4e4b\u540e\uff0c\u77ed\u8bed\u6b63\u7740\u8bfb\u548c\u53cd\u7740\u8bfb\u90fd\u4e00\u6837\u3002\u5219\u53ef\u4ee5\u8ba4\u4e3a\u8be5\u77ed\u8bed\u662f\u4e00\u4e2a \u56de\u6587\u4e32 \u3002 \u5b57\u6bcd\u548c\u6570\u5b57\u90fd\u5c5e\u4e8e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\u3002 \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u5982\u679c\u5b83\u662f \u56de\u6587\u4e32 \uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002 \u63d0\u793a \u9700\u8981\u5ffd\u7565\u5b57\u7b26\u4e32\u4e2d\u7684\u7a7a\u683c\u3001\u6807\u70b9\u7b26\u53f7\u7b49\u975e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\uff0c\u5e76\u4e14\u5728\u5224\u65ad\u56de\u6587\u65f6\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u3002 \u53ef\u4ee5\u4f7f\u7528\u53cc\u6307\u9488\u4ece\u4e24\u7aef\u5411\u4e2d\u95f4\u79fb\u52a8\uff0c\u9010\u5b57\u7b26\u68c0\u67e5\u662f\u5426\u76f8\u7b49\u3002 \u601d\u8def\u5206\u6790 \u521d\u59cb\u5316\u53cc\u6307\u9488 left \u6307\u9488 \uff1a\u6307\u5411\u5b57\u7b26\u4e32\u7684\u5f00\u59cb\uff08 s[0] \uff09\u3002 right \u6307\u9488 \uff1a\u6307\u5411\u5b57\u7b26\u4e32\u7684\u7ed3\u675f\uff08 s[length - 1] \uff09\u3002 \u5faa\u73af\u5224\u65ad \u6211\u4eec\u4f1a\u7528\u4e00\u4e2a while \u5faa\u73af\u6765\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u6761\u4ef6\u662f left < right \uff0c\u8868\u793a\u6211\u4eec\u4ecd\u7136\u6ca1\u6709\u78b0\u5230\u5b57\u7b26\u4e32\u7684\u4e2d\u95f4\u3002 \u5b57\u7b26\u8fc7\u6ee4 \u5728\u6bcf\u6b21\u5faa\u73af\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u4fdd\u8bc1 left \u548c right \u6307\u5411\u7684\u90fd\u662f\u6709\u6548\u7684\u5b57\u6bcd\u6216\u6570\u5b57\u5b57\u7b26\uff1a \u5de6\u6307\u9488 \uff1a\u5982\u679c s[left] \u4e0d\u662f\u5b57\u6bcd\u6216\u6570\u5b57\uff0c\u5c31\u5c06 left \u53f3\u79fb\uff08 left++ \uff09\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u6709\u6548\u5b57\u7b26\u6216\u8d8a\u8fc7 right \u3002 \u53f3\u6307\u9488 \uff1a\u5982\u679c s[right] \u4e0d\u662f\u5b57\u6bcd\u6216\u6570\u5b57\uff0c\u540c\u6837\u5c06 right \u5de6\u79fb\uff08 right-- \uff09\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u6709\u6548\u5b57\u7b26\u6216\u8d8a\u8fc7 left \u3002 \u8fd9\u4e2a\u8fc7\u7a0b\u786e\u4fdd\u4e86\u6211\u4eec\u53ea\u5173\u6ce8\u5b57\u6bcd\u548c\u6570\u5b57\uff0c\u5ffd\u7565\u5176\u4ed6\u6240\u6709\u5b57\u7b26\u3002 \u5b57\u7b26\u6bd4\u8f83 \u4e00\u65e6\u4e24\u4e2a\u6307\u9488\u5206\u522b\u6307\u5411\u6709\u6548\u7684\u5b57\u7b26\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8fdb\u884c\u6bd4\u8f83\uff1a \u5c06 s[left] \u548c s[right] \u8f6c\u6362\u4e3a\u5c0f\u5199\u8fdb\u884c\u6bd4\u8f83\uff08\u4f7f\u7528 Character.toLowerCase() \u65b9\u6cd5\uff09\u3002\u5982\u679c\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e0d\u76f8\u7b49\uff0c\u90a3\u4e48\u53ef\u4ee5\u7acb\u5373\u8fd4\u56de false \uff0c\u56e0\u4e3a\u8fd9\u8bf4\u660e\u5b57\u7b26\u4e32\u4e0d\u662f\u56de\u6587\u7684\u3002 \u79fb\u52a8\u6307\u9488 \u5982\u679c\u6bd4\u8f83\u6210\u529f\uff08\u5373 s[left] \u548c s[right] \u76f8\u7b49\uff09\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7ee7\u7eed\u5c06 left \u53f3\u79fb\uff0c right \u5de6\u79fb\uff0c\u7ee7\u7eed\u5411\u4e2d\u95f4\u68c0\u67e5\u3002 \u5b8c\u6210\u5faa\u73af \u5f53 left \u4e0d\u518d\u5c0f\u4e8e right \u65f6\uff0c\u8bf4\u660e\u5df2\u7ecf\u68c0\u67e5\u4e86\u6574\u4e2a\u5b57\u7b26\u4e32\u3002\u5982\u679c\u6ca1\u6709\u53d1\u73b0\u4e0d\u5339\u914d\u7684\u5b57\u7b26\uff0c\u8bf4\u660e\u5b57\u7b26\u4e32\u662f\u4e00\u4e2a\u56de\u6587\u4e32\uff0c\u53ef\u4ee5\u8fd4\u56de true \u3002 \u53c2\u8003\u89e3\u7b54 class Solution { public boolean isPalindrome(String s) { int left = 0; int right = s.length() - 1; while (left < right) { // \u627e\u5230\u5de6\u4fa7\u7684\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26 while (left < right && !Character.isLetterOrDigit(s.charAt(left))) { left++; } // \u627e\u5230\u53f3\u4fa7\u7684\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26 while (left < right && !Character.isLetterOrDigit(s.charAt(right))) { right--; } // \u6bd4\u8f83\u5b57\u7b26\uff0c\u5ffd\u7565\u5927\u5c0f\u5199 if (Character.toLowerCase(s.charAt(left)) != Character.toLowerCase(s.charAt(right))) { return false; } left++; right--; } return true; } } 3 \u4e3e\u4e00\u53cd\u4e09 3.1 LC 345 \u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5143\u97f3\u5b57\u6bcd \u95ee\u9898\u63cf\u8ff0 \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u4ec5\u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709\u5143\u97f3\u5b57\u6bcd\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c\u5b57\u7b26\u4e32\u3002 \u5143\u97f3\u5b57\u6bcd\u5305\u62ec 'a' \u3001 'e' \u3001 'i' \u3001 'o' \u3001 'u' \uff0c\u4e14\u53ef\u80fd\u4ee5\u5927\u5c0f\u5199\u4e24\u79cd\u5f62\u5f0f\u51fa\u73b0\u4e0d\u6b62\u4e00\u6b21\u3002 \u63d0\u793a \u4f60\u9700\u8981\u5728\u539f\u5730\u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5143\u97f3\u5b57\u6bcd\uff0c\u540c\u65f6\u4fdd\u6301\u5176\u4ed6\u5b57\u7b26\u7684\u4f4d\u7f6e\u4e0d\u53d8\u3002 \u6ce8\u610f\u5904\u7406\u5927\u5c0f\u5199\u4e0d\u654f\u611f\u7684\u5143\u97f3\u5b57\u7b26\u3002 \u601d\u8def\u5206\u6790 \u521d\u59cb\u5316\u6307\u9488 \uff1a - \u521b\u5efa\u4e24\u4e2a\u6307\u9488\uff0c l \u548c r \u3002 l \u6307\u5411\u5b57\u7b26\u4e32\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c r \u6307\u5411\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u3002 \u5b9a\u4e49\u5143\u97f3\u5b57\u6bcd\u96c6\u5408 \uff1a \u4f7f\u7528\u4e00\u4e2a\u96c6\u5408 vowels \u5b58\u50a8\u6240\u6709\u7684\u5143\u97f3\u5b57\u6bcd\uff08\u5305\u62ec\u5927\u5c0f\u5199\uff09\u3002\u8fd9\u6837\u53ef\u4ee5\u65b9\u4fbf\u5730\u68c0\u67e5\u5b57\u7b26\u662f\u5426\u4e3a\u5143\u97f3\u3002 \u904d\u5386\u5b57\u7b26\u4e32 \uff1a - \u4f7f\u7528\u4e00\u4e2a while \u5faa\u73af\u6765\u904d\u5386\u5b57\u7b26\u6570\u7ec4\uff0c\u5f53 l < r \u65f6\u7ee7\u7eed\u5faa\u73af\u3002 - \u5728\u5faa\u73af\u5185\u90e8\uff0c\u9996\u5148\u79fb\u52a8\u5de6\u6307\u9488 l \uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u5143\u97f3\u5b57\u6bcd\u3002 - \u7136\u540e\u79fb\u52a8\u53f3\u6307\u9488 r \uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u5143\u97f3\u5b57\u6bcd\u3002 \u4ea4\u6362\u5143\u97f3\u5b57\u6bcd \uff1a - \u4e00\u65e6\u4e24\u4e2a\u6307\u9488\u90fd\u6307\u5411\u5143\u97f3\u5b57\u6bcd\uff0c\u8fdb\u884c\u4ea4\u6362\u3002\u5982\u679c\u6b64\u65f6 l \u4ecd\u7136\u5c0f\u4e8e r \uff0c\u5219\u7ee7\u7eed\u5411\u5185\u79fb\u52a8\u6307\u9488\u3002 \u7ed3\u675f\u5faa\u73af \uff1a - \u5982\u679c l \u4e0d\u518d\u5c0f\u4e8e r \uff0c\u8bf4\u660e\u5df2\u7ecf\u904d\u5386\u5b8c\u6240\u6709\u7684\u5143\u97f3\u5b57\u6bcd\uff0c\u9000\u51fa\u5faa\u73af\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a - \u6700\u540e\uff0c\u5c06\u5b57\u7b26\u6570\u7ec4\u8f6c\u6362\u56de\u5b57\u7b26\u4e32\u5e76\u8fd4\u56de\u3002 \u53c2\u8003\u89e3\u7b54 class Solution { public String reverseVowels(String s) { char[] chars = s.toCharArray(); // \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5b57\u7b26\u6570\u7ec4 int l = 0; // \u5de6\u6307\u9488 int r = chars.length - 1; // \u53f3\u6307\u9488 Set<Character> vowels = new HashSet<>(Arrays.asList('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')); // \u5b58\u50a8\u5143\u97f3\u5b57\u6bcd while (l < r) { // \u79fb\u52a8\u5de6\u6307\u9488\u76f4\u5230\u627e\u5230\u5143\u97f3\u5b57\u6bcd while (l < r && !vowels.contains(chars[l])) { l++; } // \u79fb\u52a8\u53f3\u6307\u9488\u76f4\u5230\u627e\u5230\u5143\u97f3\u5b57\u6bcd while (l < r && !vowels.contains(chars[r])) { r--; } // \u4ea4\u6362\u5143\u97f3\u5b57\u6bcd if (l < r) { char temp = chars[l]; chars[l] = chars[r]; chars[r] = temp; l++; r--; } } return new String(chars); // \u5c06\u5b57\u7b26\u6570\u7ec4\u8f6c\u6362\u56de\u5b57\u7b26\u4e32 } } 3.2 LC 917 \u4ec5\u4ec5\u53cd\u8f6c\u5b57\u6bcd \u95ee\u9898\u63cf\u8ff0 \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u6839\u636e\u4e0b\u8ff0\u89c4\u5219\u53cd\u8f6c\u5b57\u7b26\u4e32\uff1a \u6240\u6709\u975e\u82f1\u6587\u5b57\u6bcd\u4fdd\u7559\u5728\u539f\u6709\u4f4d\u7f6e\u3002 \u6240\u6709\u82f1\u6587\u5b57\u6bcd\uff08\u5c0f\u5199\u6216\u5927\u5199\uff09\u4f4d\u7f6e\u53cd\u8f6c\u3002 \u8fd4\u56de\u53cd\u8f6c\u540e\u7684 s \u3002 \u63d0\u793a \u53ea\u9700\u8981\u53cd\u8f6c\u5b57\u6bcd\uff0c\u5176\u4ed6\u5b57\u7b26\u4fdd\u6301\u4e0d\u53d8\u3002 \u53ef\u4ee5\u4f7f\u7528\u53cc\u6307\u9488\u6cd5\u6765\u904d\u5386\u548c\u4ea4\u6362\u5b57\u6bcd\u3002 \u601d\u8def\u5206\u6790 \u521d\u59cb\u5316\u6307\u9488 \uff1a - \u521b\u5efa\u4e24\u4e2a\u6307\u9488\uff0c l \u548c r \u3002 l \u6307\u5411\u5b57\u7b26\u4e32\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c r \u6307\u5411\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u3002 \u53cc\u6307\u9488\u904d\u5386 \uff1a - \u4f7f\u7528 while \u5faa\u73af\u904d\u5386\u5b57\u7b26\u6570\u7ec4\uff0c\u6761\u4ef6\u662f l < r \u3002 - \u5728\u5faa\u73af\u5185\u90e8\uff1a - \u9996\u5148\uff0c\u79fb\u52a8\u5de6\u6307\u9488 l \uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u5b57\u6bcd\u3002\u4f7f\u7528 Character.isLetter(chars[l]) \u6765\u68c0\u67e5\u5f53\u524d\u5b57\u7b26\u662f\u5426\u4e3a\u5b57\u6bcd\u3002 - \u7136\u540e\uff0c\u79fb\u52a8\u53f3\u6307\u9488 r \uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u5b57\u6bcd\uff0c\u4f7f\u7528\u540c\u6837\u7684\u65b9\u6cd5\u8fdb\u884c\u68c0\u67e5\u3002 \u4ea4\u6362\u5b57\u6bcd \uff1a - \u5f53 l \u548c r \u90fd\u6307\u5411\u5b57\u6bcd\u65f6\uff0c\u4ea4\u6362\u5b83\u4eec\u7684\u503c\u3002 - \u4e4b\u540e\uff0c l \u6307\u9488\u5411\u53f3\u79fb\u52a8\uff0c r \u6307\u9488\u5411\u5de6\u79fb\u52a8\uff0c\u4ee5\u4fbf\u7ee7\u7eed\u67e5\u627e\u4e0b\u4e00\u4e2a\u5b57\u6bcd\u3002 \u7ed3\u675f\u5faa\u73af \uff1a - \u5f53 l \u4e0d\u518d\u5c0f\u4e8e r \u65f6\uff0c\u610f\u5473\u7740\u5df2\u7ecf\u5b8c\u6210\u6240\u6709\u7684\u5b57\u6bcd\u4ea4\u6362\uff0c\u9000\u51fa\u5faa\u73af\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a - \u6700\u540e\uff0c\u5c06\u5b57\u7b26\u6570\u7ec4\u8f6c\u6362\u56de\u5b57\u7b26\u4e32\u5e76\u8fd4\u56de\u3002 \u53c2\u8003\u89e3\u7b54 class Solution { public String reverseOnlyLetters(String s) { char[] chars = s.toCharArray(); // \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5b57\u7b26\u6570\u7ec4 int l = 0; // \u5de6\u6307\u9488 int r = chars.length - 1; // \u53f3\u6307\u9488 while (l < r) { // \u79fb\u52a8\u5de6\u6307\u9488\u76f4\u5230\u627e\u5230\u5b57\u6bcd while (l < r && !Character.isLetter(chars[l])) { l++; } // \u79fb\u52a8\u53f3\u6307\u9488\u76f4\u5230\u627e\u5230\u5b57\u6bcd while (l < r && !Character.isLetter(chars[r])) { r--; } // \u4ea4\u6362\u5b57\u6bcd if (l < r) { char temp = chars[l]; chars[l] = chars[r]; chars[r] = temp; l++; r--; } } return new String(chars); // \u5c06\u5b57\u7b26\u6570\u7ec4\u8f6c\u6362\u56de\u5b57\u7b26\u4e32 } } 3.3 LC 680 \u9a8c\u8bc1\u56de\u6587\u4e32 II \u95ee\u9898\u63cf\u8ff0 \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c \u6700\u591a \u53ef\u4ee5\u4ece\u4e2d\u5220\u9664\u4e00\u4e2a\u5b57\u7b26\u3002 \u8bf7\u4f60\u5224\u65ad s \u662f\u5426\u80fd\u6210\u4e3a\u56de\u6587\u5b57\u7b26\u4e32\uff1a\u5982\u679c\u80fd\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002 \u63d0\u793a \u9700\u8981\u8003\u8651\u6700\u591a\u5220\u9664\u4e00\u4e2a\u5b57\u7b26\u540e\u5b57\u7b26\u4e32\u662f\u5426\u53ef\u4ee5\u6210\u4e3a\u56de\u6587\u3002 \u53ef\u4ee5\u4f7f\u7528\u53cc\u6307\u9488\u6cd5\uff0c\u9047\u5230\u4e0d\u5339\u914d\u65f6\u5c1d\u8bd5\u5220\u9664\u5de6\u8fb9\u6216\u53f3\u8fb9\u7684\u4e00\u4e2a\u5b57\u7b26\u3002 \u601d\u8def\u5206\u6790 \u53cc\u6307\u9488\u521d\u59cb\u5316 \uff1a - \u521b\u5efa\u4e24\u4e2a\u6307\u9488\uff0c l \u548c r \uff0c\u5206\u522b\u6307\u5411\u5b57\u7b26\u4e32\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u3002 \u53cc\u6307\u9488\u904d\u5386 \uff1a - \u4f7f\u7528 while \u5faa\u73af\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u76f4\u5230 l < r \u3002 - \u5728\u5faa\u73af\u4e2d\uff0c\u68c0\u67e5 s.charAt(l) \u548c s.charAt(r) \u662f\u5426\u76f8\u7b49\uff1a - \u5982\u679c\u76f8\u7b49\uff0c\u7ee7\u7eed\u5411\u5185\u79fb\u52a8\u6307\u9488\uff08 l++ \u548c r-- \uff09\u3002 - \u5982\u679c\u4e0d\u76f8\u7b49\uff0c\u8868\u793a\u5b58\u5728\u4e00\u4e2a\u4e0d\u5339\u914d\u7684\u5b57\u7b26\u3002 \u68c0\u67e5\u5220\u9664\u5b57\u7b26\u540e\u7684\u56de\u6587 \uff1a - \u5f53\u53d1\u73b0\u4e0d\u5339\u914d\u65f6\uff0c\u68c0\u67e5\u4e24\u79cd\u60c5\u51b5\uff1a - \u5220\u9664\u5de6\u8fb9\u7684\u5b57\u7b26 \uff1a\u68c0\u67e5\u4ece s[l+1] \u5230 s[r] \u7684\u5b50\u4e32\u662f\u5426\u4e3a\u56de\u6587\u3002 - \u5220\u9664\u53f3\u8fb9\u7684\u5b57\u7b26 \uff1a\u68c0\u67e5\u4ece s[l] \u5230 s[r-1] \u7684\u5b50\u4e32\u662f\u5426\u4e3a\u56de\u6587\u3002 \u56de\u6587\u68c0\u67e5\u903b\u8f91 \uff1a - \u4f7f\u7528 while \u5faa\u73af\u904d\u5386\u6bcf\u79cd\u5b50\u4e32\uff0c\u6bd4\u8f83\u5b57\u7b26\uff0c\u5982\u679c\u53d1\u73b0\u4e0d\u5339\u914d\uff0c\u8fd4\u56de false \u3002 - \u5982\u679c\u80fd\u591f\u6210\u529f\u904d\u5386\u5b8c\u6574\u4e2a\u5b50\u4e32\uff0c\u5219\u8bf4\u660e\u8be5\u5b50\u4e32\u662f\u56de\u6587\uff0c\u8fd4\u56de true \u3002 \u6700\u7ec8\u8fd4\u56de \uff1a - \u5982\u679c\u5728\u539f\u59cb\u5b57\u7b26\u4e32\u7684\u904d\u5386\u4e2d\u6ca1\u6709\u53d1\u73b0\u4e0d\u5339\u914d\u7684\u5b57\u7b26\uff0c\u5219\u8bf4\u660e\u5b57\u7b26\u4e32\u672c\u8eab\u662f\u56de\u6587\uff0c\u8fd4\u56de true \u3002 \u53c2\u8003\u89e3\u7b54 class Solution { public boolean validPalindrome(String s) { // \u9996\u5148\u5224\u65ad\u5b57\u7b26\u4e32\u672c\u8eab\u662f\u5426\u4e3a\u56de\u6587 if (isPalindrome(s, 0, s.length() - 1)) { return true; } int l = 0; int r = s.length() - 1; // \u4f7f\u7528\u53cc\u6307\u9488\u4ece\u4e24\u7aef\u5411\u4e2d\u95f4\u904d\u5386 while (l < r) { if (s.charAt(l) == s.charAt(r)) { l++; r--; } else { // \u5c1d\u8bd5\u5220\u9664\u5de6\u8fb9\u7684\u5b57\u7b26\u6216\u53f3\u8fb9\u7684\u5b57\u7b26 return isPalindrome(s, l + 1, r) || isPalindrome(s, l, r - 1); } } return true; } // \u8f85\u52a9\u51fd\u6570\uff1a\u5224\u65ad\u7ed9\u5b9a\u7684\u5b50\u4e32 s[l:r] \u662f\u5426\u4e3a\u56de\u6587 private boolean isPalindrome(String s, int l, int r) { while (l < r) { if (s.charAt(l) != s.charAt(r)) { return false; } l++; r--; } return true; } } \u8bfe\u540e\u7ec3\u4e60 \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC151 \u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u9010\u5b57\u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd\uff0c\u53bb\u9664\u591a\u4f59\u7a7a\u683c\u3002 LC392 \u5224\u65ad\u5b50\u5e8f\u5217 \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 s \u548c t\uff0c\u5224\u65ad s \u662f\u5426\u662f t \u7684\u5b50\u5e8f\u5217\u3002 LC541 \u53cd\u8f6c\u5b57\u7b26\u4e32 II \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6309\u7167\u6bcf\u9694 k \u4e2a\u5b57\u7b26\u53cd\u8f6c\u524d k \u4e2a\u5b57\u7b26\u3002 LC1332 \u5220\u9664\u56de\u6587\u5b50\u5e8f\u5217 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5220\u9664\u56de\u6587\u5b50\u5e8f\u5217\u7684\u6700\u5c11\u6b65\u9aa4\u6570\u3002","title":"Lesson9 \u5b57\u7b26\u4e32\u53cc\u6307\u9488\u7b97\u6cd5\u4e13\u9898"},{"location":"lesson9/Lesson9%20Java/#lesson9","text":"","title":"Lesson9 \u5b57\u7b26\u4e32\u53cc\u6307\u9488\u7b97\u6cd5\u4e13\u9898"},{"location":"lesson9/Lesson9%20Java/#_1","text":"\u53cc\u6307\u9488\u6982\u8ff0 \u5bf9\u649e\u6307\u9488\u89e3\u9898\u6b65\u9aa4 \u5bf9\u649e\u6307\u9488\u4f2a\u4ee3\u7801\u6a21\u7248 \u5bf9\u649e\u6307\u9488\u9002\u7528\u8303\u56f4 \u4f8b\u9898\u8bb2\u89e3 LC 344 \u53cd\u8f6c\u5b57\u7b26\u4e32 LC 125 \u9a8c\u8bc1\u56de\u6587\u4e32 \u4e3e\u4e00\u53cd\u4e09 LC 345 \u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5143\u97f3\u5b57\u6bcd LC 917 \u4ec5\u4ec5\u53cd\u8f6c\u5b57\u6bcd LC 680 \u9a8c\u8bc1\u56de\u6587\u4e32 II \u8bfe\u540e\u7ec3\u4e60 \u53cc\u6307\u9488\uff08Two Pointers\uff09 \uff1a\u6307\u7684\u662f\u5728\u904d\u5386\u5143\u7d20\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u662f\u4f7f\u7528\u5355\u4e2a\u6307\u9488\u8fdb\u884c\u8bbf\u95ee\uff0c\u800c\u662f\u4f7f\u7528\u4e24\u4e2a\u6307\u9488\u8fdb\u884c\u8bbf\u95ee\uff0c\u4ece\u800c\u8fbe\u5230\u76f8\u5e94\u7684\u76ee\u7684\u3002\u5982\u679c\u4e24\u4e2a\u6307\u9488\u65b9\u5411\u76f8\u53cd\uff0c\u5219\u79f0\u4e3a\u300c\u5bf9\u649e\u6307\u9488\u300d\u3002\u5982\u679c\u4e24\u4e2a\u6307\u9488\u65b9\u5411\u76f8\u540c\uff0c\u5219\u79f0\u4e3a\u300c\u5feb\u6162\u6307\u9488\u300d\u3002\u5982\u679c\u4e24\u4e2a\u6307\u9488\u5206\u522b\u5c5e\u4e8e\u4e0d\u540c\u7684\u6570\u7ec4 / \u94fe\u8868\uff0c\u5219\u79f0\u4e3a\u300c\u5206\u79bb\u53cc\u6307\u9488\u300d\uff1b\u672c\u7ae0\u4ec5\u9488\u5bf9\u5b57\u7b26\u4e32\u5bf9\u649e\u6307\u9488\u8fdb\u884c\u4ecb\u7ecd\u548c\u9898\u76ee\u5206\u6790\u3002","title":"\u76ee\u5f55"},{"location":"lesson9/Lesson9%20Java/#1","text":"\u5bf9\u649e\u6307\u9488\uff1a\u6307\u7684\u662f\u4e24\u4e2a\u6307\u9488left\u3001right\u5206\u522b\u6307\u5411\u5e8f\u5217\u7b2c\u4e00\u4e2a\u5143\u7d20\u548c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u7136\u540eleft\u6307\u9488\u4e0d\u65ad\u9012\u589e\uff0cright\u4e0d\u65ad\u9012\u51cf\uff0c\u76f4\u5230\u4e24\u4e2a\u6307\u9488\u7684\u503c\u76f8\u649e\uff08\u5373 left== right\uff09\uff0c\u6216\u8005\u6ee1\u8db3\u5176\u4ed6\u8981\u6c42\u7684\u7279\u6b8a\u6761\u4ef6\u4e3a\u6b62\u3002","title":"1 \u5bf9\u649e\u6307\u9488"},{"location":"lesson9/Lesson9%20Java/#11","text":"\u4f7f\u7528\u4e24\u4e2a\u6307\u9488left\uff0cright\u3002left\u6307\u5411\u5e8f\u5217\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u5373\uff1a left=0 \uff0cright\u6307\u5411\u5e8f\u5217\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5373\uff1a right=len(nums)-1 \u3002 \u5728\u5faa\u73af\u4f53\u4e2d\u5c06\u5de6\u53f3\u6307\u9488\u76f8\u5411\u79fb\u52a8\uff0c\u5f53\u6ee1\u8db3\u4e00\u5b9a\u6761\u4ef6\u65f6\uff0c\u5c06\u5de6\u6307\u9488\u53f3\u79fb\uff0c left+=1 \u3002\u5f53\u6ee1\u8db3\u53e6\u5916\u4e00\u5b9a\u6761\u4ef6\u65f6\uff0c\u5c06\u53f3\u6307\u9488\u5de6\u79fb\uff0c right-=1 \u3002 \u76f4\u5230\u4e24\u6307\u9488\u76f8\u649e\uff08\u5373 left==right \uff09\uff0c\u6216\u8005\u6ee1\u8db3\u5176\u4ed6\u8981\u6c42\u7684\u7279\u6b8a\u6761\u4ef6\u65f6\uff0c\u8df3\u51fa\u5faa\u73af\u4f53\u3002","title":"1.1 \u5bf9\u649e\u6307\u9488\u89e3\u9898\u6b65\u9aa4"},{"location":"lesson9/Lesson9%20Java/#12","text":"left, right = 0, len(nums) - 1 while left < right: if \u6ee1\u8db3\u8981\u6c42\u7684\u7279\u6b8a\u6761\u4ef6: return \u7b26\u5408\u6761\u4ef6\u7684\u503c elif \u4e00\u5b9a\u6761\u4ef6 1: left += 1 elif \u4e00\u5b9a\u6761\u4ef6 2: right -= 1 return \u6ca1\u627e\u5230 \u6216 \u627e\u5230\u5bf9\u5e94\u503c","title":"1.2 \u5bf9\u649e\u6307\u9488\u4f2a\u4ee3\u7801\u6a21\u7248"},{"location":"lesson9/Lesson9%20Java/#13","text":"\u5bf9\u649e\u6307\u9488\u4e00\u822c\u7528\u6765\u89e3\u51b3\u6709\u5e8f\u6570\u7ec4\u6216\u8005\u5b57\u7b26\u4e32\u95ee\u9898\uff1a \u67e5\u627e\u6709\u5e8f\u6570\u7ec4\u4e2d\u6ee1\u8db3\u67d0\u4e9b\u7ea6\u675f\u6761\u4ef6\u7684\u4e00\u7ec4\u5143\u7d20\u95ee\u9898\uff1a\u6bd4\u5982\u4e8c\u5206\u67e5\u627e\u3001\u6570\u5b57\u4e4b\u548c\u7b49\u95ee\u9898\u3002 \u5b57\u7b26\u4e32\u53cd\u8f6c\u95ee\u9898\uff1a\u53cd\u8f6c\u5b57\u7b26\u4e32\u3001\u56de\u6587\u6570\u3001\u98a0\u5012\u4e8c\u8fdb\u5236\u7b49\u95ee\u9898\u3002","title":"1.3 \u5bf9\u649e\u6307\u9488\u9002\u7528\u8303\u56f4"},{"location":"lesson9/Lesson9%20Java/#2","text":"","title":"2 \u4f8b\u9898\u8bb2\u89e3"},{"location":"lesson9/Lesson9%20Java/#21-lc-344","text":"","title":"2.1 LC 344 \u53cd\u8f6c\u5b57\u7b26\u4e32"},{"location":"lesson9/Lesson9%20Java/#_2","text":"\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5176\u4f5c\u7528\u662f\u5c06\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u53cd\u8f6c\u8fc7\u6765\u3002\u8f93\u5165\u5b57\u7b26\u4e32\u4ee5\u5b57\u7b26\u6570\u7ec4 s \u7684\u5f62\u5f0f\u7ed9\u51fa\u3002\u4e0d\u8981\u7ed9\u53e6\u5916\u7684\u6570\u7ec4\u5206\u914d\u989d\u5916\u7684\u7a7a\u95f4\uff0c\u4f60\u5fc5\u987b\u539f\u5730\u4fee\u6539\u8f93\u5165\u6570\u7ec4\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson9/Lesson9%20Java/#_3","text":"\u5bf9\u4e8e\u957f\u5ea6\u4e3a N \u7684\u5f85\u88ab\u53cd\u8f6c\u7684\u5b57\u7b26\u6570\u7ec4\uff0c\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u53cd\u8f6c\u524d\u540e\u4e0b\u6807\u7684\u53d8\u5316\u3002\u53cd\u8f6c\u524d\u5b57\u7b26\u6570\u7ec4\u4e3a s[0] s[1] s[2] ... s[N - 1] \uff0c\u53cd\u8f6c\u540e\u4e3a s[N - 1] s[N - 2] ... s[0] \u3002\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u53cc\u6307\u9488\u7684\u65b9\u5f0f\uff0c\u5de6\u6307\u9488\u4ece\u5f00\u59cb\u4f4d\u7f6e\uff0c\u53f3\u6307\u9488\u4ece\u7ed3\u675f\u4f4d\u7f6e\u5f00\u59cb\uff0c\u9010\u6b65\u4ea4\u6362\u5b57\u7b26\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson9/Lesson9%20Java/#1_1","text":"class Solution { public void reverseString(char[] s) { int left = 0; // \u5de6\u6307\u9488 int right = s.length - 1; // \u53f3\u6307\u9488 while (left < right) { // \u4ea4\u6362\u5de6\u53f3\u6307\u9488\u7684\u5b57\u7b26 char temp = s[left]; s[left] = s[right]; s[right] = temp; // \u79fb\u52a8\u6307\u9488 left++; right--; } } }","title":"\u53c2\u8003\u89e3\u7b54 1 \u53cc\u6307\u9488\u89e3\u6cd5"},{"location":"lesson9/Lesson9%20Java/#_4","text":"\u521d\u59cb\u5316\u6307\u9488 \uff1a left \u6307\u9488\u6307\u5411\u5b57\u7b26\u6570\u7ec4\u7684\u9996\u5143\u7d20\uff0c right \u6307\u9488\u6307\u5411\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u3002 \u4ea4\u6362\u5b57\u7b26 \uff1a \u5728 while \u5faa\u73af\u4e2d\uff0c\u5f53 left \u5c0f\u4e8e right \u65f6\uff0c\u4ea4\u6362 s[left] \u548c s[right] \u7684\u5b57\u7b26\u3002 \u6307\u9488\u79fb\u52a8 \uff1a \u4ea4\u6362\u540e\uff0c left \u6307\u9488\u5411\u53f3\u79fb\u52a8\uff08 left++ \uff09\uff0c right \u6307\u9488\u5411\u5de6\u79fb\u52a8\uff08 right-- \uff09\u3002 \u7ed3\u675f\u6761\u4ef6 \uff1a \u5f53 left \u5927\u4e8e\u6216\u7b49\u4e8e right \u65f6\uff0c\u53cd\u8f6c\u7ed3\u675f\uff0c\u76f4\u63a5\u8fd4\u56de\u3002 \u5728 Java \u4e2d\uff0c\u6807\u51c6\u7684 String \u7c7b\u6ca1\u6709\u63d0\u4f9b reverse() \u65b9\u6cd5\u6765\u76f4\u63a5\u53cd\u8f6c\u5b57\u7b26\u4e32\uff0c\u4f46\u4f60\u53ef\u4ee5\u4f7f\u7528 StringBuilder \u7c7b\u7684 reverse() \u65b9\u6cd5\u6765\u5b9e\u73b0\u8fd9\u4e00\u529f\u80fd\u3002 StringBuilder \u662f\u4e00\u4e2a\u53ef\u53d8\u7684\u5b57\u7b26\u5e8f\u5217\uff0c\u9002\u5408\u7528\u4e8e\u5b57\u7b26\u4e32\u7684\u4fee\u6539\u548c\u64cd\u4f5c\u3002","title":"\u4ee3\u7801\u8bf4\u660e"},{"location":"lesson9/Lesson9%20Java/#2-stringbuilder-reverse","text":"class Solution { public void reverseString(char[] s) { // \u5c06\u5b57\u7b26\u6570\u7ec4\u8f6c\u6362\u4e3a StringBuilder StringBuilder sb = new StringBuilder(); sb.append(s); // \u53cd\u8f6c StringBuilder \u4e2d\u7684\u5185\u5bb9 sb.reverse(); // \u5c06\u53cd\u8f6c\u540e\u7684\u5185\u5bb9\u590d\u5236\u56de\u5b57\u7b26\u6570\u7ec4 for (int i = 0; i < s.length; i++) { s[i] = sb.charAt(i); } } }","title":"\u53c2\u8003\u89e3\u7b54 2 \u4f7f\u7528 StringBuilder \u7684 reverse() \u65b9\u6cd5"},{"location":"lesson9/Lesson9%20Java/#_5","text":"\u4f7f\u7528 StringBuilder \u7684 reverse() \u65b9\u6cd5\u867d\u7136\u7b80\u6d01\uff0c\u4f46\u5b83\u5e76\u4e0d\u662f\u539f\u5730\u4fee\u6539\u5b57\u7b26\u6570\u7ec4\uff0c\u800c\u662f\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684 StringBuilder \u5bf9\u8c61\u3002\u56e0\u6b64\uff0c\u5b83\u5e76\u4e0d\u662f\u539f\u5730\u7b97\u6cd5\u3002 \u5982\u679c\u9700\u8981\u539f\u5730\u53cd\u8f6c\u5b57\u7b26\u6570\u7ec4\uff0c\u8bf7\u4f7f\u7528\u524d\u9762\u63d0\u5230\u7684\u53cc\u6307\u9488\u6cd5\uff0c\u800c\u4e0d\u662f StringBuilder \u3002","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"lesson9/Lesson9%20Java/#22-lc-125","text":"","title":"2.2 LC 125 \u9a8c\u8bc1\u56de\u6587\u4e32"},{"location":"lesson9/Lesson9%20Java/#_6","text":"\u5982\u679c\u5728\u5c06\u6240\u6709\u5927\u5199\u5b57\u7b26\u8f6c\u6362\u4e3a\u5c0f\u5199\u5b57\u7b26\u3001\u5e76\u79fb\u9664\u6240\u6709\u975e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\u4e4b\u540e\uff0c\u77ed\u8bed\u6b63\u7740\u8bfb\u548c\u53cd\u7740\u8bfb\u90fd\u4e00\u6837\u3002\u5219\u53ef\u4ee5\u8ba4\u4e3a\u8be5\u77ed\u8bed\u662f\u4e00\u4e2a \u56de\u6587\u4e32 \u3002 \u5b57\u6bcd\u548c\u6570\u5b57\u90fd\u5c5e\u4e8e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\u3002 \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u5982\u679c\u5b83\u662f \u56de\u6587\u4e32 \uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson9/Lesson9%20Java/#_7","text":"\u9700\u8981\u5ffd\u7565\u5b57\u7b26\u4e32\u4e2d\u7684\u7a7a\u683c\u3001\u6807\u70b9\u7b26\u53f7\u7b49\u975e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\uff0c\u5e76\u4e14\u5728\u5224\u65ad\u56de\u6587\u65f6\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u3002 \u53ef\u4ee5\u4f7f\u7528\u53cc\u6307\u9488\u4ece\u4e24\u7aef\u5411\u4e2d\u95f4\u79fb\u52a8\uff0c\u9010\u5b57\u7b26\u68c0\u67e5\u662f\u5426\u76f8\u7b49\u3002","title":"\u63d0\u793a"},{"location":"lesson9/Lesson9%20Java/#_8","text":"\u521d\u59cb\u5316\u53cc\u6307\u9488 left \u6307\u9488 \uff1a\u6307\u5411\u5b57\u7b26\u4e32\u7684\u5f00\u59cb\uff08 s[0] \uff09\u3002 right \u6307\u9488 \uff1a\u6307\u5411\u5b57\u7b26\u4e32\u7684\u7ed3\u675f\uff08 s[length - 1] \uff09\u3002 \u5faa\u73af\u5224\u65ad \u6211\u4eec\u4f1a\u7528\u4e00\u4e2a while \u5faa\u73af\u6765\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u6761\u4ef6\u662f left < right \uff0c\u8868\u793a\u6211\u4eec\u4ecd\u7136\u6ca1\u6709\u78b0\u5230\u5b57\u7b26\u4e32\u7684\u4e2d\u95f4\u3002 \u5b57\u7b26\u8fc7\u6ee4 \u5728\u6bcf\u6b21\u5faa\u73af\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u4fdd\u8bc1 left \u548c right \u6307\u5411\u7684\u90fd\u662f\u6709\u6548\u7684\u5b57\u6bcd\u6216\u6570\u5b57\u5b57\u7b26\uff1a \u5de6\u6307\u9488 \uff1a\u5982\u679c s[left] \u4e0d\u662f\u5b57\u6bcd\u6216\u6570\u5b57\uff0c\u5c31\u5c06 left \u53f3\u79fb\uff08 left++ \uff09\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u6709\u6548\u5b57\u7b26\u6216\u8d8a\u8fc7 right \u3002 \u53f3\u6307\u9488 \uff1a\u5982\u679c s[right] \u4e0d\u662f\u5b57\u6bcd\u6216\u6570\u5b57\uff0c\u540c\u6837\u5c06 right \u5de6\u79fb\uff08 right-- \uff09\uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u6709\u6548\u5b57\u7b26\u6216\u8d8a\u8fc7 left \u3002 \u8fd9\u4e2a\u8fc7\u7a0b\u786e\u4fdd\u4e86\u6211\u4eec\u53ea\u5173\u6ce8\u5b57\u6bcd\u548c\u6570\u5b57\uff0c\u5ffd\u7565\u5176\u4ed6\u6240\u6709\u5b57\u7b26\u3002 \u5b57\u7b26\u6bd4\u8f83 \u4e00\u65e6\u4e24\u4e2a\u6307\u9488\u5206\u522b\u6307\u5411\u6709\u6548\u7684\u5b57\u7b26\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8fdb\u884c\u6bd4\u8f83\uff1a \u5c06 s[left] \u548c s[right] \u8f6c\u6362\u4e3a\u5c0f\u5199\u8fdb\u884c\u6bd4\u8f83\uff08\u4f7f\u7528 Character.toLowerCase() \u65b9\u6cd5\uff09\u3002\u5982\u679c\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e0d\u76f8\u7b49\uff0c\u90a3\u4e48\u53ef\u4ee5\u7acb\u5373\u8fd4\u56de false \uff0c\u56e0\u4e3a\u8fd9\u8bf4\u660e\u5b57\u7b26\u4e32\u4e0d\u662f\u56de\u6587\u7684\u3002 \u79fb\u52a8\u6307\u9488 \u5982\u679c\u6bd4\u8f83\u6210\u529f\uff08\u5373 s[left] \u548c s[right] \u76f8\u7b49\uff09\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7ee7\u7eed\u5c06 left \u53f3\u79fb\uff0c right \u5de6\u79fb\uff0c\u7ee7\u7eed\u5411\u4e2d\u95f4\u68c0\u67e5\u3002 \u5b8c\u6210\u5faa\u73af \u5f53 left \u4e0d\u518d\u5c0f\u4e8e right \u65f6\uff0c\u8bf4\u660e\u5df2\u7ecf\u68c0\u67e5\u4e86\u6574\u4e2a\u5b57\u7b26\u4e32\u3002\u5982\u679c\u6ca1\u6709\u53d1\u73b0\u4e0d\u5339\u914d\u7684\u5b57\u7b26\uff0c\u8bf4\u660e\u5b57\u7b26\u4e32\u662f\u4e00\u4e2a\u56de\u6587\u4e32\uff0c\u53ef\u4ee5\u8fd4\u56de true \u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson9/Lesson9%20Java/#_9","text":"class Solution { public boolean isPalindrome(String s) { int left = 0; int right = s.length() - 1; while (left < right) { // \u627e\u5230\u5de6\u4fa7\u7684\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26 while (left < right && !Character.isLetterOrDigit(s.charAt(left))) { left++; } // \u627e\u5230\u53f3\u4fa7\u7684\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26 while (left < right && !Character.isLetterOrDigit(s.charAt(right))) { right--; } // \u6bd4\u8f83\u5b57\u7b26\uff0c\u5ffd\u7565\u5927\u5c0f\u5199 if (Character.toLowerCase(s.charAt(left)) != Character.toLowerCase(s.charAt(right))) { return false; } left++; right--; } return true; } }","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson9/Lesson9%20Java/#3","text":"","title":"3 \u4e3e\u4e00\u53cd\u4e09"},{"location":"lesson9/Lesson9%20Java/#31-lc-345","text":"","title":"3.1 LC 345 \u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5143\u97f3\u5b57\u6bcd"},{"location":"lesson9/Lesson9%20Java/#_10","text":"\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u4ec5\u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709\u5143\u97f3\u5b57\u6bcd\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c\u5b57\u7b26\u4e32\u3002 \u5143\u97f3\u5b57\u6bcd\u5305\u62ec 'a' \u3001 'e' \u3001 'i' \u3001 'o' \u3001 'u' \uff0c\u4e14\u53ef\u80fd\u4ee5\u5927\u5c0f\u5199\u4e24\u79cd\u5f62\u5f0f\u51fa\u73b0\u4e0d\u6b62\u4e00\u6b21\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson9/Lesson9%20Java/#_11","text":"\u4f60\u9700\u8981\u5728\u539f\u5730\u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5143\u97f3\u5b57\u6bcd\uff0c\u540c\u65f6\u4fdd\u6301\u5176\u4ed6\u5b57\u7b26\u7684\u4f4d\u7f6e\u4e0d\u53d8\u3002 \u6ce8\u610f\u5904\u7406\u5927\u5c0f\u5199\u4e0d\u654f\u611f\u7684\u5143\u97f3\u5b57\u7b26\u3002","title":"\u63d0\u793a"},{"location":"lesson9/Lesson9%20Java/#_12","text":"\u521d\u59cb\u5316\u6307\u9488 \uff1a - \u521b\u5efa\u4e24\u4e2a\u6307\u9488\uff0c l \u548c r \u3002 l \u6307\u5411\u5b57\u7b26\u4e32\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c r \u6307\u5411\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u3002 \u5b9a\u4e49\u5143\u97f3\u5b57\u6bcd\u96c6\u5408 \uff1a \u4f7f\u7528\u4e00\u4e2a\u96c6\u5408 vowels \u5b58\u50a8\u6240\u6709\u7684\u5143\u97f3\u5b57\u6bcd\uff08\u5305\u62ec\u5927\u5c0f\u5199\uff09\u3002\u8fd9\u6837\u53ef\u4ee5\u65b9\u4fbf\u5730\u68c0\u67e5\u5b57\u7b26\u662f\u5426\u4e3a\u5143\u97f3\u3002 \u904d\u5386\u5b57\u7b26\u4e32 \uff1a - \u4f7f\u7528\u4e00\u4e2a while \u5faa\u73af\u6765\u904d\u5386\u5b57\u7b26\u6570\u7ec4\uff0c\u5f53 l < r \u65f6\u7ee7\u7eed\u5faa\u73af\u3002 - \u5728\u5faa\u73af\u5185\u90e8\uff0c\u9996\u5148\u79fb\u52a8\u5de6\u6307\u9488 l \uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u5143\u97f3\u5b57\u6bcd\u3002 - \u7136\u540e\u79fb\u52a8\u53f3\u6307\u9488 r \uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u5143\u97f3\u5b57\u6bcd\u3002 \u4ea4\u6362\u5143\u97f3\u5b57\u6bcd \uff1a - \u4e00\u65e6\u4e24\u4e2a\u6307\u9488\u90fd\u6307\u5411\u5143\u97f3\u5b57\u6bcd\uff0c\u8fdb\u884c\u4ea4\u6362\u3002\u5982\u679c\u6b64\u65f6 l \u4ecd\u7136\u5c0f\u4e8e r \uff0c\u5219\u7ee7\u7eed\u5411\u5185\u79fb\u52a8\u6307\u9488\u3002 \u7ed3\u675f\u5faa\u73af \uff1a - \u5982\u679c l \u4e0d\u518d\u5c0f\u4e8e r \uff0c\u8bf4\u660e\u5df2\u7ecf\u904d\u5386\u5b8c\u6240\u6709\u7684\u5143\u97f3\u5b57\u6bcd\uff0c\u9000\u51fa\u5faa\u73af\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a - \u6700\u540e\uff0c\u5c06\u5b57\u7b26\u6570\u7ec4\u8f6c\u6362\u56de\u5b57\u7b26\u4e32\u5e76\u8fd4\u56de\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson9/Lesson9%20Java/#_13","text":"class Solution { public String reverseVowels(String s) { char[] chars = s.toCharArray(); // \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5b57\u7b26\u6570\u7ec4 int l = 0; // \u5de6\u6307\u9488 int r = chars.length - 1; // \u53f3\u6307\u9488 Set<Character> vowels = new HashSet<>(Arrays.asList('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')); // \u5b58\u50a8\u5143\u97f3\u5b57\u6bcd while (l < r) { // \u79fb\u52a8\u5de6\u6307\u9488\u76f4\u5230\u627e\u5230\u5143\u97f3\u5b57\u6bcd while (l < r && !vowels.contains(chars[l])) { l++; } // \u79fb\u52a8\u53f3\u6307\u9488\u76f4\u5230\u627e\u5230\u5143\u97f3\u5b57\u6bcd while (l < r && !vowels.contains(chars[r])) { r--; } // \u4ea4\u6362\u5143\u97f3\u5b57\u6bcd if (l < r) { char temp = chars[l]; chars[l] = chars[r]; chars[r] = temp; l++; r--; } } return new String(chars); // \u5c06\u5b57\u7b26\u6570\u7ec4\u8f6c\u6362\u56de\u5b57\u7b26\u4e32 } }","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson9/Lesson9%20Java/#32-lc-917","text":"","title":"3.2 LC 917 \u4ec5\u4ec5\u53cd\u8f6c\u5b57\u6bcd"},{"location":"lesson9/Lesson9%20Java/#_14","text":"\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u6839\u636e\u4e0b\u8ff0\u89c4\u5219\u53cd\u8f6c\u5b57\u7b26\u4e32\uff1a \u6240\u6709\u975e\u82f1\u6587\u5b57\u6bcd\u4fdd\u7559\u5728\u539f\u6709\u4f4d\u7f6e\u3002 \u6240\u6709\u82f1\u6587\u5b57\u6bcd\uff08\u5c0f\u5199\u6216\u5927\u5199\uff09\u4f4d\u7f6e\u53cd\u8f6c\u3002 \u8fd4\u56de\u53cd\u8f6c\u540e\u7684 s \u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson9/Lesson9%20Java/#_15","text":"\u53ea\u9700\u8981\u53cd\u8f6c\u5b57\u6bcd\uff0c\u5176\u4ed6\u5b57\u7b26\u4fdd\u6301\u4e0d\u53d8\u3002 \u53ef\u4ee5\u4f7f\u7528\u53cc\u6307\u9488\u6cd5\u6765\u904d\u5386\u548c\u4ea4\u6362\u5b57\u6bcd\u3002","title":"\u63d0\u793a"},{"location":"lesson9/Lesson9%20Java/#_16","text":"\u521d\u59cb\u5316\u6307\u9488 \uff1a - \u521b\u5efa\u4e24\u4e2a\u6307\u9488\uff0c l \u548c r \u3002 l \u6307\u5411\u5b57\u7b26\u4e32\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c r \u6307\u5411\u5b57\u7b26\u4e32\u7684\u672b\u5c3e\u3002 \u53cc\u6307\u9488\u904d\u5386 \uff1a - \u4f7f\u7528 while \u5faa\u73af\u904d\u5386\u5b57\u7b26\u6570\u7ec4\uff0c\u6761\u4ef6\u662f l < r \u3002 - \u5728\u5faa\u73af\u5185\u90e8\uff1a - \u9996\u5148\uff0c\u79fb\u52a8\u5de6\u6307\u9488 l \uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u5b57\u6bcd\u3002\u4f7f\u7528 Character.isLetter(chars[l]) \u6765\u68c0\u67e5\u5f53\u524d\u5b57\u7b26\u662f\u5426\u4e3a\u5b57\u6bcd\u3002 - \u7136\u540e\uff0c\u79fb\u52a8\u53f3\u6307\u9488 r \uff0c\u76f4\u5230\u627e\u5230\u4e00\u4e2a\u5b57\u6bcd\uff0c\u4f7f\u7528\u540c\u6837\u7684\u65b9\u6cd5\u8fdb\u884c\u68c0\u67e5\u3002 \u4ea4\u6362\u5b57\u6bcd \uff1a - \u5f53 l \u548c r \u90fd\u6307\u5411\u5b57\u6bcd\u65f6\uff0c\u4ea4\u6362\u5b83\u4eec\u7684\u503c\u3002 - \u4e4b\u540e\uff0c l \u6307\u9488\u5411\u53f3\u79fb\u52a8\uff0c r \u6307\u9488\u5411\u5de6\u79fb\u52a8\uff0c\u4ee5\u4fbf\u7ee7\u7eed\u67e5\u627e\u4e0b\u4e00\u4e2a\u5b57\u6bcd\u3002 \u7ed3\u675f\u5faa\u73af \uff1a - \u5f53 l \u4e0d\u518d\u5c0f\u4e8e r \u65f6\uff0c\u610f\u5473\u7740\u5df2\u7ecf\u5b8c\u6210\u6240\u6709\u7684\u5b57\u6bcd\u4ea4\u6362\uff0c\u9000\u51fa\u5faa\u73af\u3002 \u8fd4\u56de\u7ed3\u679c \uff1a - \u6700\u540e\uff0c\u5c06\u5b57\u7b26\u6570\u7ec4\u8f6c\u6362\u56de\u5b57\u7b26\u4e32\u5e76\u8fd4\u56de\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson9/Lesson9%20Java/#_17","text":"class Solution { public String reverseOnlyLetters(String s) { char[] chars = s.toCharArray(); // \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5b57\u7b26\u6570\u7ec4 int l = 0; // \u5de6\u6307\u9488 int r = chars.length - 1; // \u53f3\u6307\u9488 while (l < r) { // \u79fb\u52a8\u5de6\u6307\u9488\u76f4\u5230\u627e\u5230\u5b57\u6bcd while (l < r && !Character.isLetter(chars[l])) { l++; } // \u79fb\u52a8\u53f3\u6307\u9488\u76f4\u5230\u627e\u5230\u5b57\u6bcd while (l < r && !Character.isLetter(chars[r])) { r--; } // \u4ea4\u6362\u5b57\u6bcd if (l < r) { char temp = chars[l]; chars[l] = chars[r]; chars[r] = temp; l++; r--; } } return new String(chars); // \u5c06\u5b57\u7b26\u6570\u7ec4\u8f6c\u6362\u56de\u5b57\u7b26\u4e32 } }","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson9/Lesson9%20Java/#33-lc-680-ii","text":"","title":"3.3 LC 680 \u9a8c\u8bc1\u56de\u6587\u4e32 II"},{"location":"lesson9/Lesson9%20Java/#_18","text":"\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c \u6700\u591a \u53ef\u4ee5\u4ece\u4e2d\u5220\u9664\u4e00\u4e2a\u5b57\u7b26\u3002 \u8bf7\u4f60\u5224\u65ad s \u662f\u5426\u80fd\u6210\u4e3a\u56de\u6587\u5b57\u7b26\u4e32\uff1a\u5982\u679c\u80fd\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson9/Lesson9%20Java/#_19","text":"\u9700\u8981\u8003\u8651\u6700\u591a\u5220\u9664\u4e00\u4e2a\u5b57\u7b26\u540e\u5b57\u7b26\u4e32\u662f\u5426\u53ef\u4ee5\u6210\u4e3a\u56de\u6587\u3002 \u53ef\u4ee5\u4f7f\u7528\u53cc\u6307\u9488\u6cd5\uff0c\u9047\u5230\u4e0d\u5339\u914d\u65f6\u5c1d\u8bd5\u5220\u9664\u5de6\u8fb9\u6216\u53f3\u8fb9\u7684\u4e00\u4e2a\u5b57\u7b26\u3002","title":"\u63d0\u793a"},{"location":"lesson9/Lesson9%20Java/#_20","text":"\u53cc\u6307\u9488\u521d\u59cb\u5316 \uff1a - \u521b\u5efa\u4e24\u4e2a\u6307\u9488\uff0c l \u548c r \uff0c\u5206\u522b\u6307\u5411\u5b57\u7b26\u4e32\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u3002 \u53cc\u6307\u9488\u904d\u5386 \uff1a - \u4f7f\u7528 while \u5faa\u73af\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u76f4\u5230 l < r \u3002 - \u5728\u5faa\u73af\u4e2d\uff0c\u68c0\u67e5 s.charAt(l) \u548c s.charAt(r) \u662f\u5426\u76f8\u7b49\uff1a - \u5982\u679c\u76f8\u7b49\uff0c\u7ee7\u7eed\u5411\u5185\u79fb\u52a8\u6307\u9488\uff08 l++ \u548c r-- \uff09\u3002 - \u5982\u679c\u4e0d\u76f8\u7b49\uff0c\u8868\u793a\u5b58\u5728\u4e00\u4e2a\u4e0d\u5339\u914d\u7684\u5b57\u7b26\u3002 \u68c0\u67e5\u5220\u9664\u5b57\u7b26\u540e\u7684\u56de\u6587 \uff1a - \u5f53\u53d1\u73b0\u4e0d\u5339\u914d\u65f6\uff0c\u68c0\u67e5\u4e24\u79cd\u60c5\u51b5\uff1a - \u5220\u9664\u5de6\u8fb9\u7684\u5b57\u7b26 \uff1a\u68c0\u67e5\u4ece s[l+1] \u5230 s[r] \u7684\u5b50\u4e32\u662f\u5426\u4e3a\u56de\u6587\u3002 - \u5220\u9664\u53f3\u8fb9\u7684\u5b57\u7b26 \uff1a\u68c0\u67e5\u4ece s[l] \u5230 s[r-1] \u7684\u5b50\u4e32\u662f\u5426\u4e3a\u56de\u6587\u3002 \u56de\u6587\u68c0\u67e5\u903b\u8f91 \uff1a - \u4f7f\u7528 while \u5faa\u73af\u904d\u5386\u6bcf\u79cd\u5b50\u4e32\uff0c\u6bd4\u8f83\u5b57\u7b26\uff0c\u5982\u679c\u53d1\u73b0\u4e0d\u5339\u914d\uff0c\u8fd4\u56de false \u3002 - \u5982\u679c\u80fd\u591f\u6210\u529f\u904d\u5386\u5b8c\u6574\u4e2a\u5b50\u4e32\uff0c\u5219\u8bf4\u660e\u8be5\u5b50\u4e32\u662f\u56de\u6587\uff0c\u8fd4\u56de true \u3002 \u6700\u7ec8\u8fd4\u56de \uff1a - \u5982\u679c\u5728\u539f\u59cb\u5b57\u7b26\u4e32\u7684\u904d\u5386\u4e2d\u6ca1\u6709\u53d1\u73b0\u4e0d\u5339\u914d\u7684\u5b57\u7b26\uff0c\u5219\u8bf4\u660e\u5b57\u7b26\u4e32\u672c\u8eab\u662f\u56de\u6587\uff0c\u8fd4\u56de true \u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson9/Lesson9%20Java/#_21","text":"class Solution { public boolean validPalindrome(String s) { // \u9996\u5148\u5224\u65ad\u5b57\u7b26\u4e32\u672c\u8eab\u662f\u5426\u4e3a\u56de\u6587 if (isPalindrome(s, 0, s.length() - 1)) { return true; } int l = 0; int r = s.length() - 1; // \u4f7f\u7528\u53cc\u6307\u9488\u4ece\u4e24\u7aef\u5411\u4e2d\u95f4\u904d\u5386 while (l < r) { if (s.charAt(l) == s.charAt(r)) { l++; r--; } else { // \u5c1d\u8bd5\u5220\u9664\u5de6\u8fb9\u7684\u5b57\u7b26\u6216\u53f3\u8fb9\u7684\u5b57\u7b26 return isPalindrome(s, l + 1, r) || isPalindrome(s, l, r - 1); } } return true; } // \u8f85\u52a9\u51fd\u6570\uff1a\u5224\u65ad\u7ed9\u5b9a\u7684\u5b50\u4e32 s[l:r] \u662f\u5426\u4e3a\u56de\u6587 private boolean isPalindrome(String s, int l, int r) { while (l < r) { if (s.charAt(l) != s.charAt(r)) { return false; } l++; r--; } return true; } }","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson9/Lesson9%20Java/#_22","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u7b80\u4ecb LC151 \u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u9010\u5b57\u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd\uff0c\u53bb\u9664\u591a\u4f59\u7a7a\u683c\u3002 LC392 \u5224\u65ad\u5b50\u5e8f\u5217 \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 s \u548c t\uff0c\u5224\u65ad s \u662f\u5426\u662f t \u7684\u5b50\u5e8f\u5217\u3002 LC541 \u53cd\u8f6c\u5b57\u7b26\u4e32 II \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u6309\u7167\u6bcf\u9694 k \u4e2a\u5b57\u7b26\u53cd\u8f6c\u524d k \u4e2a\u5b57\u7b26\u3002 LC1332 \u5220\u9664\u56de\u6587\u5b50\u5e8f\u5217 \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5220\u9664\u56de\u6587\u5b50\u5e8f\u5217\u7684\u6700\u5c11\u6b65\u9aa4\u6570\u3002","title":"\u8bfe\u540e\u7ec3\u4e60"},{"location":"lesson9/Lesson9%20Python/","text":"Lesson9 \u5b57\u7b26\u4e32\u53cc\u6307\u9488\u7b97\u6cd5\u4e13\u9898 \u53cc\u6307\u9488\uff08Two Pointers\uff09 \uff1a\u6307\u7684\u662f\u5728\u904d\u5386\u5143\u7d20\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u662f\u4f7f\u7528\u5355\u4e2a\u6307\u9488\u8fdb\u884c\u8bbf\u95ee\uff0c\u800c\u662f\u4f7f\u7528\u4e24\u4e2a\u6307\u9488\u8fdb\u884c\u8bbf\u95ee\uff0c\u4ece\u800c\u8fbe\u5230\u76f8\u5e94\u7684\u76ee\u7684\u3002\u5982\u679c\u4e24\u4e2a\u6307\u9488\u65b9\u5411\u76f8\u53cd\uff0c\u5219\u79f0\u4e3a\u300c\u5bf9\u649e\u6307\u9488\u300d\u3002\u5982\u679c\u4e24\u4e2a\u6307\u9488\u65b9\u5411\u76f8\u540c\uff0c\u5219\u79f0\u4e3a\u300c\u5feb\u6162\u6307\u9488\u300d\u3002\u5982\u679c\u4e24\u4e2a\u6307\u9488\u5206\u522b\u5c5e\u4e8e\u4e0d\u540c\u7684\u6570\u7ec4 / \u94fe\u8868\uff0c\u5219\u79f0\u4e3a\u300c\u5206\u79bb\u53cc\u6307\u9488\u300d\uff1b\u672c\u7ae0\u4ec5\u9488\u5bf9\u5b57\u7b26\u4e32\u5bf9\u649e\u6307\u9488\u8fdb\u884c\u4ecb\u7ecd\u548c\u9898\u76ee\u5206\u6790\u3002 1 \u5bf9\u649e\u6307\u9488 1.1 \u5bf9\u649e\u6307\u9488\u89e3\u9898\u6b65\u9aa4 1.2 \u5bf9\u649e\u6307\u9488\u4f2a\u4ee3\u7801\u6a21\u7248 1.3 \u5bf9\u649e\u6307\u9488\u9002\u7528\u8303\u56f4 2 \u4f8b\u9898\u8bb2\u89e3 2.1 LC 344 \u53cd\u8f6c\u5b57\u7b26\u4e32 2.2 LC 125 \u9a8c\u8bc1\u56de\u6587\u4e32 3 \u4e3e\u4e00\u53cd\u4e09 3.1 LC 345 \u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5143\u97f3\u5b57\u6bcd 3.2 LC 917 \u4ec5\u4ec5\u53cd\u8f6c\u5b57\u6bcd 3.3 LC 680 \u9a8c\u8bc1\u56de\u6587\u4e32 II \u8bfe\u540e\u7ec3\u4e60 1 \u5bf9\u649e\u6307\u9488 \u5bf9\u649e\u6307\u9488\uff1a\u6307\u7684\u662f\u4e24\u4e2a\u6307\u9488left\u3001right\u5206\u522b\u6307\u5411\u5e8f\u5217\u7b2c\u4e00\u4e2a\u5143\u7d20\u548c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u7136\u540eleft\u6307\u9488\u4e0d\u65ad\u9012\u589e\uff0cright\u4e0d\u65ad\u9012\u51cf\uff0c\u76f4\u5230\u4e24\u4e2a\u6307\u9488\u7684\u503c\u76f8\u649e\uff08\u5373 left== right\uff09\uff0c\u6216\u8005\u6ee1\u8db3\u5176\u4ed6\u8981\u6c42\u7684\u7279\u6b8a\u6761\u4ef6\u4e3a\u6b62\u3002 1.1 \u5bf9\u649e\u6307\u9488\u89e3\u9898\u6b65\u9aa4 \u4f7f\u7528\u4e24\u4e2a\u6307\u9488left\uff0cright\u3002left\u6307\u5411\u5e8f\u5217\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u5373\uff1a left=0 \uff0cright\u6307\u5411\u5e8f\u5217\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5373\uff1a right=len(nums)-1 \u3002 \u5728\u5faa\u73af\u4f53\u4e2d\u5c06\u5de6\u53f3\u6307\u9488\u76f8\u5411\u79fb\u52a8\uff0c\u5f53\u6ee1\u8db3\u4e00\u5b9a\u6761\u4ef6\u65f6\uff0c\u5c06\u5de6\u6307\u9488\u53f3\u79fb\uff0c left+=1 \u3002\u5f53\u6ee1\u8db3\u53e6\u5916\u4e00\u5b9a\u6761\u4ef6\u65f6\uff0c\u5c06\u53f3\u6307\u9488\u5de6\u79fb\uff0c right-=1 \u3002 \u76f4\u5230\u4e24\u6307\u9488\u76f8\u649e\uff08\u5373 left==right \uff09\uff0c\u6216\u8005\u6ee1\u8db3\u5176\u4ed6\u8981\u6c42\u7684\u7279\u6b8a\u6761\u4ef6\u65f6\uff0c\u8df3\u51fa\u5faa\u73af\u4f53\u3002 1.2 \u5bf9\u649e\u6307\u9488\u4f2a\u4ee3\u7801\u6a21\u7248 left, right = 0, len(nums) - 1 while left < right: if \u6ee1\u8db3\u8981\u6c42\u7684\u7279\u6b8a\u6761\u4ef6: return \u7b26\u5408\u6761\u4ef6\u7684\u503c elif \u4e00\u5b9a\u6761\u4ef6 1: left += 1 elif \u4e00\u5b9a\u6761\u4ef6 2: right -= 1 return \u6ca1\u627e\u5230 \u6216 \u627e\u5230\u5bf9\u5e94\u503c 1.3 \u5bf9\u649e\u6307\u9488\u9002\u7528\u8303\u56f4 \u5bf9\u649e\u6307\u9488\u4e00\u822c\u7528\u6765\u89e3\u51b3\u6709\u5e8f\u6570\u7ec4\u6216\u8005\u5b57\u7b26\u4e32\u95ee\u9898\uff1a \u67e5\u627e\u6709\u5e8f\u6570\u7ec4\u4e2d\u6ee1\u8db3\u67d0\u4e9b\u7ea6\u675f\u6761\u4ef6\u7684\u4e00\u7ec4\u5143\u7d20\u95ee\u9898\uff1a\u6bd4\u5982\u4e8c\u5206\u67e5\u627e\u3001\u6570\u5b57\u4e4b\u548c\u7b49\u95ee\u9898\u3002 \u5b57\u7b26\u4e32\u53cd\u8f6c\u95ee\u9898\uff1a\u53cd\u8f6c\u5b57\u7b26\u4e32\u3001\u56de\u6587\u6570\u3001\u98a0\u5012\u4e8c\u8fdb\u5236\u7b49\u95ee\u9898\u3002 2 \u4f8b\u9898\u8bb2\u89e3 2.1 LC 344 \u53cd\u8f6c\u5b57\u7b26\u4e32 \u95ee\u9898\u63cf\u8ff0 \u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5176\u4f5c\u7528\u662f\u5c06\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u53cd\u8f6c\u8fc7\u6765\u3002\u8f93\u5165\u5b57\u7b26\u4e32\u4ee5\u5b57\u7b26\u6570\u7ec4 s \u7684\u5f62\u5f0f\u7ed9\u51fa\u3002 \u4e0d\u8981\u7ed9\u53e6\u5916\u7684\u6570\u7ec4\u5206\u914d\u989d\u5916\u7684\u7a7a\u95f4\uff0c\u4f60\u5fc5\u987b \u539f\u5730 \u4fee\u6539\u8f93\u5165\u6570\u7ec4 \u3001\u4f7f\u7528 O(1) \u7684\u989d\u5916\u7a7a\u95f4\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u3002 \u601d\u8def\u5206\u6790 \u5bf9\u4e8e\u957f\u5ea6\u4e3a N \u7684\u5f85\u88ab\u53cd\u8f6c\u7684\u5b57\u7b26\u6570\u7ec4\uff0c\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u53cd\u8f6c\u524d\u540e\u4e0b\u6807\u7684\u53d8\u5316\uff0c\u5047\u8bbe\u53cd\u8f6c\u524d\u5b57\u7b26\u6570\u7ec4\u4e3a s[0] s[1] s[2] ... s[N - 1]\uff0c\u90a3\u4e48\u53cd\u8f6c\u540e\u5b57\u7b26\u6570\u7ec4\u4e3a s[N - 1] s[N - 2] ... s[0]\u3002\u6bd4\u8f83\u53cd\u8f6c\u524d\u540e\u4e0b\u6807\u53d8\u5316\u5f88\u5bb9\u6613\u5f97\u51fa s[i] \u7684\u5b57\u7b26\u4e0e s[N - 1 - i] \u7684\u5b57\u7b26\u53d1\u751f\u4e86\u4ea4\u6362\u7684\u89c4\u5f8b\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u5982\u4e0b\u53cc\u6307\u9488\u7684\u89e3\u6cd5\uff1a \u5c06 left \u6307\u5411\u5b57\u7b26\u6570\u7ec4\u9996\u5143\u7d20\uff0cright \u6307\u5411\u5b57\u7b26\u6570\u7ec4\u5c3e\u5143\u7d20\u3002 \u5f53 left < right\uff1a \u4ea4\u6362 s[left] \u548c s[right]\uff1b left \u6307\u9488\u53f3\u79fb\u4e00\u4f4d\uff0c\u5373 left = left + 1\uff1b right \u6307\u9488\u5de6\u79fb\u4e00\u4f4d\uff0c\u5373 right = right - 1\u3002 \u5f53 left >= right\uff0c\u53cd\u8f6c\u7ed3\u675f\uff0c\u8fd4\u56de\u5b57\u7b26\u6570\u7ec4\u5373\u53ef\u3002 \u63d0\u793a \u5b57\u7b26\u6570\u7ec4\u662f\u53ef\u53d8\u7684\uff0c\u4f46\u4f60\u4e0d\u80fd\u4f7f\u7528\u989d\u5916\u7684\u6570\u7ec4\u7a7a\u95f4\uff0c\u56e0\u6b64\u9700\u8981\u5728\u539f\u5730\u4fee\u6539\u5b57\u7b26\u987a\u5e8f\u3002 \u53c2\u8003\u89e3\u7b541 class Solution(object): def reverseString(self, s): for i in range(len(s)//2): s[i],s[-1-i] = s[-1-i],s[i] return s \u53c2\u8003\u89e3\u7b542 class Solution(object): def reverseString(self, s): i = 0 j = len(s) -1 while i < j: temp = s[i] s[i] = s[j] s[j] = temp i += 1 j -= 1 return s \u8c03\u7528\u51fd\u6570\u6cd5 class Solution(object): def reverseString(self, s): return s.reverse() 2.2 LC 125 \u9a8c\u8bc1\u56de\u6587\u4e32 \u95ee\u9898\u63cf\u8ff0 \u5982\u679c\u5728\u5c06\u6240\u6709\u5927\u5199\u5b57\u7b26\u8f6c\u6362\u4e3a\u5c0f\u5199\u5b57\u7b26\u3001\u5e76\u79fb\u9664\u6240\u6709\u975e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\u4e4b\u540e\uff0c\u77ed\u8bed\u6b63\u7740\u8bfb\u548c\u53cd\u7740\u8bfb\u90fd\u4e00\u6837\u3002\u5219\u53ef\u4ee5\u8ba4\u4e3a\u8be5\u77ed\u8bed\u662f\u4e00\u4e2a \u56de\u6587\u4e32 \u3002 \u5b57\u6bcd\u548c\u6570\u5b57\u90fd\u5c5e\u4e8e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\u3002 \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u5982\u679c\u5b83\u662f \u56de\u6587\u4e32 \uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002 \u63d0\u793a \u9700\u8981\u5ffd\u7565\u5b57\u7b26\u4e32\u4e2d\u7684\u7a7a\u683c\u3001\u6807\u70b9\u7b26\u53f7\u7b49\u975e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\uff0c\u5e76\u4e14\u5728\u5224\u65ad\u56de\u6587\u65f6\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u3002 \u53ef\u4ee5\u4f7f\u7528\u53cc\u6307\u9488\u4ece\u4e24\u7aef\u5411\u4e2d\u95f4\u79fb\u52a8\uff0c\u9010\u5b57\u7b26\u68c0\u67e5\u662f\u5426\u76f8\u7b49\u3002 \u601d\u8def\u5206\u6790 \u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u5bf9\u5b57\u7b26\u4e32 s \u8fdb\u884c\u4e00\u6b21\u904d\u5386\uff0c\u5e76\u5c06\u5176\u4e2d\u7684\u5b57\u6bcd\u548c\u6570\u5b57\u5b57\u7b26\u8fdb\u884c\u4fdd\u7559\uff0c\u653e\u5728\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32 sgood \u4e2d\u3002\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad sgood \u662f\u5426\u662f\u4e00\u4e2a\u666e\u901a\u7684\u56de\u6587\u4e32\u5373\u53ef\u3002\u4f7f\u7528\u53cc\u6307\u9488\uff0c\u4ece\u5b57\u7b26\u4e32\u7684\u4e24\u7aef\u5411\u4e2d\u95f4\u904d\u5386\uff0c\u9010\u4e2a\u6bd4\u8f83\u5bf9\u5e94\u5b57\u7b26\u3002 \u53c2\u8003\u89e3\u7b54 class Solution(object): def isPalindrome(self, s): i, j = 0, len(s)-1 while i < j: while i < j and not s[i].isalnum(): i += 1 while i < j and not s[j].isalnum(): j -= 1 if s[i].lower() != s[j].lower(): return False i += 1 j -= 1 return True \u5207\u7247\u6cd5 class Solution(object): def isPalindrome(self, s): sgood = \"\".join(ch.lower() for ch in s if ch.isalnum()) return sgood == sgood[::-1] 3 \u4e3e\u4e00\u53cd\u4e09 3.1 LC 345 \u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5143\u97f3\u5b57\u6bcd \u95ee\u9898\u63cf\u8ff0 \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u4ec5\u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709\u5143\u97f3\u5b57\u6bcd\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c\u5b57\u7b26\u4e32\u3002 \u5143\u97f3\u5b57\u6bcd\u5305\u62ec 'a' \u3001 'e' \u3001 'i' \u3001 'o' \u3001 'u' \uff0c\u4e14\u53ef\u80fd\u4ee5\u5927\u5c0f\u5199\u4e24\u79cd\u5f62\u5f0f\u51fa\u73b0\u4e0d\u6b62\u4e00\u6b21\u3002 \u63d0\u793a \u4f60\u9700\u8981\u5728\u539f\u5730\u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5143\u97f3\u5b57\u6bcd\uff0c\u540c\u65f6\u4fdd\u6301\u5176\u4ed6\u5b57\u7b26\u7684\u4f4d\u7f6e\u4e0d\u53d8\u3002 \u6ce8\u610f\u5904\u7406\u5927\u5c0f\u5199\u4e0d\u654f\u611f\u7684\u5143\u97f3\u5b57\u7b26\u3002 \u601d\u8def\u5206\u6790 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e24\u4e2a\u6307\u9488 l \u548c r \u5bf9\u5b57\u7b26\u4e32\u76f8\u5411\u5730\u8fdb\u884c\u904d\u5386\u3002 \u6307\u9488 l \u521d\u59cb\u65f6\u6307\u5411\u5b57\u7b26\u4e32 s \u7684\u9996\u4f4d\uff0c\u6307\u9488 r \u521d\u59cb\u65f6\u6307\u5411\u5b57\u7b26\u4e32 s \u7684\u672b\u4f4d\u3002 \u5728\u904d\u5386\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u505c\u5730\u5c06 l \u5411\u53f3\u79fb\u52a8\uff0c\u76f4\u5230 l \u6307\u5411\u4e00\u4e2a\u5143\u97f3\u5b57\u6bcd\uff08\u6216\u8005\u8d85\u51fa\u5b57\u7b26\u4e32\u7684\u8fb9\u754c\u8303\u56f4\uff09\uff1b\u540c\u65f6\uff0c\u4e0d\u505c\u5730\u5c06 r \u5411\u5de6\u79fb\u52a8\uff0c\u76f4\u5230 r \u6307\u5411\u4e00\u4e2a\u5143\u97f3\u5b57\u6bcd\u3002 \u6b64\u65f6\uff0c\u5982\u679c l < r \uff0c\u90a3\u4e48\u4ea4\u6362 l \u548c r \u6307\u5411\u7684\u5143\u97f3\u5b57\u6bcd\uff0c\u5426\u5219\u8bf4\u660e\u6240\u6709\u7684\u5143\u97f3\u5b57\u6bcd\u5747\u5df2\u904d\u5386\u8fc7\uff0c\u5c31\u53ef\u4ee5\u9000\u51fa\u904d\u5386\u7684\u8fc7\u7a0b\u3002 \u53c2\u8003\u89e3\u7b54 class Solution(object): def reverseVowels(self, s): chars = list(s) l, r = 0, len(s) - 1 vowels = set('aeiouAEIOU') while l < r: while l < len(s) and chars[l] not in vowels: l += 1 while r >= 0 and chars[r] not in vowels: r -= 1 if l >= r: break chars[l], chars[r] = chars[r],chars[l] l += 1 r -= 1 return \"\".join(chars) 3.2 LC 917 \u4ec5\u4ec5\u53cd\u8f6c\u5b57\u6bcd \u95ee\u9898\u63cf\u8ff0 \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u6839\u636e\u4e0b\u8ff0\u89c4\u5219\u53cd\u8f6c\u5b57\u7b26\u4e32\uff1a \u6240\u6709\u975e\u82f1\u6587\u5b57\u6bcd\u4fdd\u7559\u5728\u539f\u6709\u4f4d\u7f6e\u3002 \u6240\u6709\u82f1\u6587\u5b57\u6bcd\uff08\u5c0f\u5199\u6216\u5927\u5199\uff09\u4f4d\u7f6e\u53cd\u8f6c\u3002 \u8fd4\u56de\u53cd\u8f6c\u540e\u7684 s \u3002 \u63d0\u793a \u53ea\u9700\u8981\u53cd\u8f6c\u5b57\u6bcd\uff0c\u5176\u4ed6\u5b57\u7b26\u4fdd\u6301\u4e0d\u53d8\u3002 \u53ef\u4ee5\u4f7f\u7528\u53cc\u6307\u9488\u6cd5\u6765\u904d\u5386\u548c\u4ea4\u6362\u5b57\u6bcd\u3002 \u601d\u8def\u5206\u6790 \u4f7f\u7528\u53cc\u6307\u9488\u6cd5\uff1a l \u6307\u9488\u4ece\u5de6\u5411\u53f3\u904d\u5386\uff0c\u5bfb\u627e\u7b2c\u4e00\u4e2a\u5b57\u6bcd\uff1b r \u6307\u9488\u4ece\u53f3\u5411\u5de6\u904d\u5386\uff0c\u5bfb\u627e\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\uff1b \u4ea4\u6362\u8fd9\u4e24\u4e2a\u5b57\u6bcd\u5e76\u79fb\u52a8\u6307\u9488\uff0c\u76f4\u5230 l \u548c r \u76f8\u9047\u3002 \u53c2\u8003\u793a\u4f8b class Solution(object): def reverseOnlyLetters(self, s): l,r = 0, len(s) - 1 slist = list(s) while l < r: while l < r and not s[l].isalpha(): l += 1 while l < r and not s[r].isalpha(): r -= 1 slist[l], slist[r] = slist[r], slist[l] l += 1 r -= 1 return \"\".join(slist) 3.3 LC 680 \u9a8c\u8bc1\u56de\u6587\u4e32 II \u95ee\u9898\u63cf\u8ff0 \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c \u6700\u591a \u53ef\u4ee5\u4ece\u4e2d\u5220\u9664\u4e00\u4e2a\u5b57\u7b26\u3002 \u8bf7\u4f60\u5224\u65ad s \u662f\u5426\u80fd\u6210\u4e3a\u56de\u6587\u5b57\u7b26\u4e32\uff1a\u5982\u679c\u80fd\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002 \u63d0\u793a \u9700\u8981\u8003\u8651\u6700\u591a\u5220\u9664\u4e00\u4e2a\u5b57\u7b26\u540e\u5b57\u7b26\u4e32\u662f\u5426\u53ef\u4ee5\u6210\u4e3a\u56de\u6587\u3002 \u53ef\u4ee5\u4f7f\u7528\u53cc\u6307\u9488\u6cd5\uff0c\u9047\u5230\u4e0d\u5339\u914d\u65f6\u5c1d\u8bd5\u5220\u9664\u5de6\u8fb9\u6216\u53f3\u8fb9\u7684\u4e00\u4e2a\u5b57\u7b26\u3002 \u601d\u8def\u5206\u6790 \u9996\u5148\u8fdb\u884c\u56de\u6587\u4e32\u7684\u9a8c\u8bc1\uff0c\u5982\u679c\u53d1\u73b0\u4e0d\u5339\u914d\u7684\u5b57\u7b26\uff0c\u5c1d\u8bd5\u8df3\u8fc7\u4e00\u4e2a\u5b57\u7b26\u5e76\u7ee7\u7eed\u9a8c\u8bc1\u3002\u5177\u4f53\u65b9\u6cd5\u662f\uff1a \u4f7f\u7528\u53cc\u6307\u9488\uff0c\u5206\u522b\u4ece\u5b57\u7b26\u4e32\u4e24\u7aef\u5411\u4e2d\u95f4\u904d\u5386\u3002 \u4e00\u65e6\u53d1\u73b0\u4e24\u4e2a\u5b57\u7b26\u4e0d\u5339\u914d\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u5220\u9664\u5de6\u8fb9\u6216\u53f3\u8fb9\u7684\u4e00\u4e2a\u5b57\u7b26\uff0c\u518d\u5224\u65ad\u5220\u9664\u540e\u7684\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u56de\u6587\u4e32\u3002 \u53c2\u8003\u89e3\u7b54 class Solution(object): def validPalindrome(self, s): if s == s[::-1]: return True l, r = 0, len(s)-1 while l < r: if s[l] == s[r]: l += 1 r -= 1 else: # \u5c1d\u8bd5\u5220\u9664\u5de6\u8fb9\u6216\u53f3\u8fb9\u7684\u5b57\u7b26\u540e\u68c0\u67e5\u662f\u5426\u662f\u56de\u6587 return s[l+1:r+1] == s[l+1:r+1][::-1] or s[l:r] == s[l:r][::-1] return True \u8bfe\u540e\u7ec3\u4e60 \u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u4e3b\u8981\u8003\u70b9 151 \u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd \u5b57\u7b26\u4e32\u53cd\u8f6c\uff0c\u7a7a\u683c\u5904\u7406 392 \u5224\u65ad\u5b50\u5e8f\u5217 \u5b50\u5e8f\u5217\u5224\u65ad\uff0c\u53cc\u6307\u9488 541 \u53cd\u8f6c\u5b57\u7b26\u4e32 II \u5206\u6bb5\u5b57\u7b26\u4e32\u53cd\u8f6c\uff0c\u8fed\u4ee3\u5904\u7406 1332 \u5220\u9664\u56de\u6587\u5b50\u5e8f\u5217 \u56de\u6587\u5224\u65ad\uff0c\u5b57\u7b26\u4e32\u5220\u9664","title":"Lesson9 \u5b57\u7b26\u4e32\u53cc\u6307\u9488\u7b97\u6cd5\u4e13\u9898"},{"location":"lesson9/Lesson9%20Python/#lesson9","text":"\u53cc\u6307\u9488\uff08Two Pointers\uff09 \uff1a\u6307\u7684\u662f\u5728\u904d\u5386\u5143\u7d20\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u662f\u4f7f\u7528\u5355\u4e2a\u6307\u9488\u8fdb\u884c\u8bbf\u95ee\uff0c\u800c\u662f\u4f7f\u7528\u4e24\u4e2a\u6307\u9488\u8fdb\u884c\u8bbf\u95ee\uff0c\u4ece\u800c\u8fbe\u5230\u76f8\u5e94\u7684\u76ee\u7684\u3002\u5982\u679c\u4e24\u4e2a\u6307\u9488\u65b9\u5411\u76f8\u53cd\uff0c\u5219\u79f0\u4e3a\u300c\u5bf9\u649e\u6307\u9488\u300d\u3002\u5982\u679c\u4e24\u4e2a\u6307\u9488\u65b9\u5411\u76f8\u540c\uff0c\u5219\u79f0\u4e3a\u300c\u5feb\u6162\u6307\u9488\u300d\u3002\u5982\u679c\u4e24\u4e2a\u6307\u9488\u5206\u522b\u5c5e\u4e8e\u4e0d\u540c\u7684\u6570\u7ec4 / \u94fe\u8868\uff0c\u5219\u79f0\u4e3a\u300c\u5206\u79bb\u53cc\u6307\u9488\u300d\uff1b\u672c\u7ae0\u4ec5\u9488\u5bf9\u5b57\u7b26\u4e32\u5bf9\u649e\u6307\u9488\u8fdb\u884c\u4ecb\u7ecd\u548c\u9898\u76ee\u5206\u6790\u3002 1 \u5bf9\u649e\u6307\u9488 1.1 \u5bf9\u649e\u6307\u9488\u89e3\u9898\u6b65\u9aa4 1.2 \u5bf9\u649e\u6307\u9488\u4f2a\u4ee3\u7801\u6a21\u7248 1.3 \u5bf9\u649e\u6307\u9488\u9002\u7528\u8303\u56f4 2 \u4f8b\u9898\u8bb2\u89e3 2.1 LC 344 \u53cd\u8f6c\u5b57\u7b26\u4e32 2.2 LC 125 \u9a8c\u8bc1\u56de\u6587\u4e32 3 \u4e3e\u4e00\u53cd\u4e09 3.1 LC 345 \u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5143\u97f3\u5b57\u6bcd 3.2 LC 917 \u4ec5\u4ec5\u53cd\u8f6c\u5b57\u6bcd 3.3 LC 680 \u9a8c\u8bc1\u56de\u6587\u4e32 II \u8bfe\u540e\u7ec3\u4e60","title":"Lesson9 \u5b57\u7b26\u4e32\u53cc\u6307\u9488\u7b97\u6cd5\u4e13\u9898"},{"location":"lesson9/Lesson9%20Python/#1","text":"\u5bf9\u649e\u6307\u9488\uff1a\u6307\u7684\u662f\u4e24\u4e2a\u6307\u9488left\u3001right\u5206\u522b\u6307\u5411\u5e8f\u5217\u7b2c\u4e00\u4e2a\u5143\u7d20\u548c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u7136\u540eleft\u6307\u9488\u4e0d\u65ad\u9012\u589e\uff0cright\u4e0d\u65ad\u9012\u51cf\uff0c\u76f4\u5230\u4e24\u4e2a\u6307\u9488\u7684\u503c\u76f8\u649e\uff08\u5373 left== right\uff09\uff0c\u6216\u8005\u6ee1\u8db3\u5176\u4ed6\u8981\u6c42\u7684\u7279\u6b8a\u6761\u4ef6\u4e3a\u6b62\u3002","title":"1 \u5bf9\u649e\u6307\u9488"},{"location":"lesson9/Lesson9%20Python/#11","text":"\u4f7f\u7528\u4e24\u4e2a\u6307\u9488left\uff0cright\u3002left\u6307\u5411\u5e8f\u5217\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u5373\uff1a left=0 \uff0cright\u6307\u5411\u5e8f\u5217\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5373\uff1a right=len(nums)-1 \u3002 \u5728\u5faa\u73af\u4f53\u4e2d\u5c06\u5de6\u53f3\u6307\u9488\u76f8\u5411\u79fb\u52a8\uff0c\u5f53\u6ee1\u8db3\u4e00\u5b9a\u6761\u4ef6\u65f6\uff0c\u5c06\u5de6\u6307\u9488\u53f3\u79fb\uff0c left+=1 \u3002\u5f53\u6ee1\u8db3\u53e6\u5916\u4e00\u5b9a\u6761\u4ef6\u65f6\uff0c\u5c06\u53f3\u6307\u9488\u5de6\u79fb\uff0c right-=1 \u3002 \u76f4\u5230\u4e24\u6307\u9488\u76f8\u649e\uff08\u5373 left==right \uff09\uff0c\u6216\u8005\u6ee1\u8db3\u5176\u4ed6\u8981\u6c42\u7684\u7279\u6b8a\u6761\u4ef6\u65f6\uff0c\u8df3\u51fa\u5faa\u73af\u4f53\u3002","title":"1.1 \u5bf9\u649e\u6307\u9488\u89e3\u9898\u6b65\u9aa4"},{"location":"lesson9/Lesson9%20Python/#12","text":"left, right = 0, len(nums) - 1 while left < right: if \u6ee1\u8db3\u8981\u6c42\u7684\u7279\u6b8a\u6761\u4ef6: return \u7b26\u5408\u6761\u4ef6\u7684\u503c elif \u4e00\u5b9a\u6761\u4ef6 1: left += 1 elif \u4e00\u5b9a\u6761\u4ef6 2: right -= 1 return \u6ca1\u627e\u5230 \u6216 \u627e\u5230\u5bf9\u5e94\u503c","title":"1.2 \u5bf9\u649e\u6307\u9488\u4f2a\u4ee3\u7801\u6a21\u7248"},{"location":"lesson9/Lesson9%20Python/#13","text":"\u5bf9\u649e\u6307\u9488\u4e00\u822c\u7528\u6765\u89e3\u51b3\u6709\u5e8f\u6570\u7ec4\u6216\u8005\u5b57\u7b26\u4e32\u95ee\u9898\uff1a \u67e5\u627e\u6709\u5e8f\u6570\u7ec4\u4e2d\u6ee1\u8db3\u67d0\u4e9b\u7ea6\u675f\u6761\u4ef6\u7684\u4e00\u7ec4\u5143\u7d20\u95ee\u9898\uff1a\u6bd4\u5982\u4e8c\u5206\u67e5\u627e\u3001\u6570\u5b57\u4e4b\u548c\u7b49\u95ee\u9898\u3002 \u5b57\u7b26\u4e32\u53cd\u8f6c\u95ee\u9898\uff1a\u53cd\u8f6c\u5b57\u7b26\u4e32\u3001\u56de\u6587\u6570\u3001\u98a0\u5012\u4e8c\u8fdb\u5236\u7b49\u95ee\u9898\u3002","title":"1.3 \u5bf9\u649e\u6307\u9488\u9002\u7528\u8303\u56f4"},{"location":"lesson9/Lesson9%20Python/#2","text":"","title":"2 \u4f8b\u9898\u8bb2\u89e3"},{"location":"lesson9/Lesson9%20Python/#21-lc-344","text":"","title":"2.1 LC 344 \u53cd\u8f6c\u5b57\u7b26\u4e32"},{"location":"lesson9/Lesson9%20Python/#_1","text":"\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u5176\u4f5c\u7528\u662f\u5c06\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u53cd\u8f6c\u8fc7\u6765\u3002\u8f93\u5165\u5b57\u7b26\u4e32\u4ee5\u5b57\u7b26\u6570\u7ec4 s \u7684\u5f62\u5f0f\u7ed9\u51fa\u3002 \u4e0d\u8981\u7ed9\u53e6\u5916\u7684\u6570\u7ec4\u5206\u914d\u989d\u5916\u7684\u7a7a\u95f4\uff0c\u4f60\u5fc5\u987b \u539f\u5730 \u4fee\u6539\u8f93\u5165\u6570\u7ec4 \u3001\u4f7f\u7528 O(1) \u7684\u989d\u5916\u7a7a\u95f4\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson9/Lesson9%20Python/#_2","text":"\u5bf9\u4e8e\u957f\u5ea6\u4e3a N \u7684\u5f85\u88ab\u53cd\u8f6c\u7684\u5b57\u7b26\u6570\u7ec4\uff0c\u6211\u4eec\u53ef\u4ee5\u89c2\u5bdf\u53cd\u8f6c\u524d\u540e\u4e0b\u6807\u7684\u53d8\u5316\uff0c\u5047\u8bbe\u53cd\u8f6c\u524d\u5b57\u7b26\u6570\u7ec4\u4e3a s[0] s[1] s[2] ... s[N - 1]\uff0c\u90a3\u4e48\u53cd\u8f6c\u540e\u5b57\u7b26\u6570\u7ec4\u4e3a s[N - 1] s[N - 2] ... s[0]\u3002\u6bd4\u8f83\u53cd\u8f6c\u524d\u540e\u4e0b\u6807\u53d8\u5316\u5f88\u5bb9\u6613\u5f97\u51fa s[i] \u7684\u5b57\u7b26\u4e0e s[N - 1 - i] \u7684\u5b57\u7b26\u53d1\u751f\u4e86\u4ea4\u6362\u7684\u89c4\u5f8b\uff0c\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\u5982\u4e0b\u53cc\u6307\u9488\u7684\u89e3\u6cd5\uff1a \u5c06 left \u6307\u5411\u5b57\u7b26\u6570\u7ec4\u9996\u5143\u7d20\uff0cright \u6307\u5411\u5b57\u7b26\u6570\u7ec4\u5c3e\u5143\u7d20\u3002 \u5f53 left < right\uff1a \u4ea4\u6362 s[left] \u548c s[right]\uff1b left \u6307\u9488\u53f3\u79fb\u4e00\u4f4d\uff0c\u5373 left = left + 1\uff1b right \u6307\u9488\u5de6\u79fb\u4e00\u4f4d\uff0c\u5373 right = right - 1\u3002 \u5f53 left >= right\uff0c\u53cd\u8f6c\u7ed3\u675f\uff0c\u8fd4\u56de\u5b57\u7b26\u6570\u7ec4\u5373\u53ef\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson9/Lesson9%20Python/#_3","text":"\u5b57\u7b26\u6570\u7ec4\u662f\u53ef\u53d8\u7684\uff0c\u4f46\u4f60\u4e0d\u80fd\u4f7f\u7528\u989d\u5916\u7684\u6570\u7ec4\u7a7a\u95f4\uff0c\u56e0\u6b64\u9700\u8981\u5728\u539f\u5730\u4fee\u6539\u5b57\u7b26\u987a\u5e8f\u3002","title":"\u63d0\u793a"},{"location":"lesson9/Lesson9%20Python/#1_1","text":"class Solution(object): def reverseString(self, s): for i in range(len(s)//2): s[i],s[-1-i] = s[-1-i],s[i] return s","title":"\u53c2\u8003\u89e3\u7b541"},{"location":"lesson9/Lesson9%20Python/#2_1","text":"class Solution(object): def reverseString(self, s): i = 0 j = len(s) -1 while i < j: temp = s[i] s[i] = s[j] s[j] = temp i += 1 j -= 1 return s","title":"\u53c2\u8003\u89e3\u7b542"},{"location":"lesson9/Lesson9%20Python/#_4","text":"class Solution(object): def reverseString(self, s): return s.reverse()","title":"\u8c03\u7528\u51fd\u6570\u6cd5"},{"location":"lesson9/Lesson9%20Python/#22-lc-125","text":"","title":"2.2 LC 125 \u9a8c\u8bc1\u56de\u6587\u4e32"},{"location":"lesson9/Lesson9%20Python/#_5","text":"\u5982\u679c\u5728\u5c06\u6240\u6709\u5927\u5199\u5b57\u7b26\u8f6c\u6362\u4e3a\u5c0f\u5199\u5b57\u7b26\u3001\u5e76\u79fb\u9664\u6240\u6709\u975e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\u4e4b\u540e\uff0c\u77ed\u8bed\u6b63\u7740\u8bfb\u548c\u53cd\u7740\u8bfb\u90fd\u4e00\u6837\u3002\u5219\u53ef\u4ee5\u8ba4\u4e3a\u8be5\u77ed\u8bed\u662f\u4e00\u4e2a \u56de\u6587\u4e32 \u3002 \u5b57\u6bcd\u548c\u6570\u5b57\u90fd\u5c5e\u4e8e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\u3002 \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u5982\u679c\u5b83\u662f \u56de\u6587\u4e32 \uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson9/Lesson9%20Python/#_6","text":"\u9700\u8981\u5ffd\u7565\u5b57\u7b26\u4e32\u4e2d\u7684\u7a7a\u683c\u3001\u6807\u70b9\u7b26\u53f7\u7b49\u975e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\uff0c\u5e76\u4e14\u5728\u5224\u65ad\u56de\u6587\u65f6\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u3002 \u53ef\u4ee5\u4f7f\u7528\u53cc\u6307\u9488\u4ece\u4e24\u7aef\u5411\u4e2d\u95f4\u79fb\u52a8\uff0c\u9010\u5b57\u7b26\u68c0\u67e5\u662f\u5426\u76f8\u7b49\u3002","title":"\u63d0\u793a"},{"location":"lesson9/Lesson9%20Python/#_7","text":"\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u5bf9\u5b57\u7b26\u4e32 s \u8fdb\u884c\u4e00\u6b21\u904d\u5386\uff0c\u5e76\u5c06\u5176\u4e2d\u7684\u5b57\u6bcd\u548c\u6570\u5b57\u5b57\u7b26\u8fdb\u884c\u4fdd\u7559\uff0c\u653e\u5728\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32 sgood \u4e2d\u3002\u8fd9\u6837\u6211\u4eec\u53ea\u9700\u8981\u5224\u65ad sgood \u662f\u5426\u662f\u4e00\u4e2a\u666e\u901a\u7684\u56de\u6587\u4e32\u5373\u53ef\u3002\u4f7f\u7528\u53cc\u6307\u9488\uff0c\u4ece\u5b57\u7b26\u4e32\u7684\u4e24\u7aef\u5411\u4e2d\u95f4\u904d\u5386\uff0c\u9010\u4e2a\u6bd4\u8f83\u5bf9\u5e94\u5b57\u7b26\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson9/Lesson9%20Python/#_8","text":"class Solution(object): def isPalindrome(self, s): i, j = 0, len(s)-1 while i < j: while i < j and not s[i].isalnum(): i += 1 while i < j and not s[j].isalnum(): j -= 1 if s[i].lower() != s[j].lower(): return False i += 1 j -= 1 return True","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson9/Lesson9%20Python/#_9","text":"class Solution(object): def isPalindrome(self, s): sgood = \"\".join(ch.lower() for ch in s if ch.isalnum()) return sgood == sgood[::-1]","title":"\u5207\u7247\u6cd5"},{"location":"lesson9/Lesson9%20Python/#3","text":"","title":"3 \u4e3e\u4e00\u53cd\u4e09"},{"location":"lesson9/Lesson9%20Python/#31-lc-345","text":"","title":"3.1 LC 345 \u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5143\u97f3\u5b57\u6bcd"},{"location":"lesson9/Lesson9%20Python/#_10","text":"\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u4ec5\u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709\u5143\u97f3\u5b57\u6bcd\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c\u5b57\u7b26\u4e32\u3002 \u5143\u97f3\u5b57\u6bcd\u5305\u62ec 'a' \u3001 'e' \u3001 'i' \u3001 'o' \u3001 'u' \uff0c\u4e14\u53ef\u80fd\u4ee5\u5927\u5c0f\u5199\u4e24\u79cd\u5f62\u5f0f\u51fa\u73b0\u4e0d\u6b62\u4e00\u6b21\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson9/Lesson9%20Python/#_11","text":"\u4f60\u9700\u8981\u5728\u539f\u5730\u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5143\u97f3\u5b57\u6bcd\uff0c\u540c\u65f6\u4fdd\u6301\u5176\u4ed6\u5b57\u7b26\u7684\u4f4d\u7f6e\u4e0d\u53d8\u3002 \u6ce8\u610f\u5904\u7406\u5927\u5c0f\u5199\u4e0d\u654f\u611f\u7684\u5143\u97f3\u5b57\u7b26\u3002","title":"\u63d0\u793a"},{"location":"lesson9/Lesson9%20Python/#_12","text":"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e24\u4e2a\u6307\u9488 l \u548c r \u5bf9\u5b57\u7b26\u4e32\u76f8\u5411\u5730\u8fdb\u884c\u904d\u5386\u3002 \u6307\u9488 l \u521d\u59cb\u65f6\u6307\u5411\u5b57\u7b26\u4e32 s \u7684\u9996\u4f4d\uff0c\u6307\u9488 r \u521d\u59cb\u65f6\u6307\u5411\u5b57\u7b26\u4e32 s \u7684\u672b\u4f4d\u3002 \u5728\u904d\u5386\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u505c\u5730\u5c06 l \u5411\u53f3\u79fb\u52a8\uff0c\u76f4\u5230 l \u6307\u5411\u4e00\u4e2a\u5143\u97f3\u5b57\u6bcd\uff08\u6216\u8005\u8d85\u51fa\u5b57\u7b26\u4e32\u7684\u8fb9\u754c\u8303\u56f4\uff09\uff1b\u540c\u65f6\uff0c\u4e0d\u505c\u5730\u5c06 r \u5411\u5de6\u79fb\u52a8\uff0c\u76f4\u5230 r \u6307\u5411\u4e00\u4e2a\u5143\u97f3\u5b57\u6bcd\u3002 \u6b64\u65f6\uff0c\u5982\u679c l < r \uff0c\u90a3\u4e48\u4ea4\u6362 l \u548c r \u6307\u5411\u7684\u5143\u97f3\u5b57\u6bcd\uff0c\u5426\u5219\u8bf4\u660e\u6240\u6709\u7684\u5143\u97f3\u5b57\u6bcd\u5747\u5df2\u904d\u5386\u8fc7\uff0c\u5c31\u53ef\u4ee5\u9000\u51fa\u904d\u5386\u7684\u8fc7\u7a0b\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson9/Lesson9%20Python/#_13","text":"class Solution(object): def reverseVowels(self, s): chars = list(s) l, r = 0, len(s) - 1 vowels = set('aeiouAEIOU') while l < r: while l < len(s) and chars[l] not in vowels: l += 1 while r >= 0 and chars[r] not in vowels: r -= 1 if l >= r: break chars[l], chars[r] = chars[r],chars[l] l += 1 r -= 1 return \"\".join(chars)","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson9/Lesson9%20Python/#32-lc-917","text":"","title":"3.2 LC 917 \u4ec5\u4ec5\u53cd\u8f6c\u5b57\u6bcd"},{"location":"lesson9/Lesson9%20Python/#_14","text":"\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u6839\u636e\u4e0b\u8ff0\u89c4\u5219\u53cd\u8f6c\u5b57\u7b26\u4e32\uff1a \u6240\u6709\u975e\u82f1\u6587\u5b57\u6bcd\u4fdd\u7559\u5728\u539f\u6709\u4f4d\u7f6e\u3002 \u6240\u6709\u82f1\u6587\u5b57\u6bcd\uff08\u5c0f\u5199\u6216\u5927\u5199\uff09\u4f4d\u7f6e\u53cd\u8f6c\u3002 \u8fd4\u56de\u53cd\u8f6c\u540e\u7684 s \u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson9/Lesson9%20Python/#_15","text":"\u53ea\u9700\u8981\u53cd\u8f6c\u5b57\u6bcd\uff0c\u5176\u4ed6\u5b57\u7b26\u4fdd\u6301\u4e0d\u53d8\u3002 \u53ef\u4ee5\u4f7f\u7528\u53cc\u6307\u9488\u6cd5\u6765\u904d\u5386\u548c\u4ea4\u6362\u5b57\u6bcd\u3002","title":"\u63d0\u793a"},{"location":"lesson9/Lesson9%20Python/#_16","text":"\u4f7f\u7528\u53cc\u6307\u9488\u6cd5\uff1a l \u6307\u9488\u4ece\u5de6\u5411\u53f3\u904d\u5386\uff0c\u5bfb\u627e\u7b2c\u4e00\u4e2a\u5b57\u6bcd\uff1b r \u6307\u9488\u4ece\u53f3\u5411\u5de6\u904d\u5386\uff0c\u5bfb\u627e\u6700\u540e\u4e00\u4e2a\u5b57\u6bcd\uff1b \u4ea4\u6362\u8fd9\u4e24\u4e2a\u5b57\u6bcd\u5e76\u79fb\u52a8\u6307\u9488\uff0c\u76f4\u5230 l \u548c r \u76f8\u9047\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson9/Lesson9%20Python/#_17","text":"class Solution(object): def reverseOnlyLetters(self, s): l,r = 0, len(s) - 1 slist = list(s) while l < r: while l < r and not s[l].isalpha(): l += 1 while l < r and not s[r].isalpha(): r -= 1 slist[l], slist[r] = slist[r], slist[l] l += 1 r -= 1 return \"\".join(slist)","title":"\u53c2\u8003\u793a\u4f8b"},{"location":"lesson9/Lesson9%20Python/#33-lc-680-ii","text":"","title":"3.3 LC 680 \u9a8c\u8bc1\u56de\u6587\u4e32 II"},{"location":"lesson9/Lesson9%20Python/#_18","text":"\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c \u6700\u591a \u53ef\u4ee5\u4ece\u4e2d\u5220\u9664\u4e00\u4e2a\u5b57\u7b26\u3002 \u8bf7\u4f60\u5224\u65ad s \u662f\u5426\u80fd\u6210\u4e3a\u56de\u6587\u5b57\u7b26\u4e32\uff1a\u5982\u679c\u80fd\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"lesson9/Lesson9%20Python/#_19","text":"\u9700\u8981\u8003\u8651\u6700\u591a\u5220\u9664\u4e00\u4e2a\u5b57\u7b26\u540e\u5b57\u7b26\u4e32\u662f\u5426\u53ef\u4ee5\u6210\u4e3a\u56de\u6587\u3002 \u53ef\u4ee5\u4f7f\u7528\u53cc\u6307\u9488\u6cd5\uff0c\u9047\u5230\u4e0d\u5339\u914d\u65f6\u5c1d\u8bd5\u5220\u9664\u5de6\u8fb9\u6216\u53f3\u8fb9\u7684\u4e00\u4e2a\u5b57\u7b26\u3002","title":"\u63d0\u793a"},{"location":"lesson9/Lesson9%20Python/#_20","text":"\u9996\u5148\u8fdb\u884c\u56de\u6587\u4e32\u7684\u9a8c\u8bc1\uff0c\u5982\u679c\u53d1\u73b0\u4e0d\u5339\u914d\u7684\u5b57\u7b26\uff0c\u5c1d\u8bd5\u8df3\u8fc7\u4e00\u4e2a\u5b57\u7b26\u5e76\u7ee7\u7eed\u9a8c\u8bc1\u3002\u5177\u4f53\u65b9\u6cd5\u662f\uff1a \u4f7f\u7528\u53cc\u6307\u9488\uff0c\u5206\u522b\u4ece\u5b57\u7b26\u4e32\u4e24\u7aef\u5411\u4e2d\u95f4\u904d\u5386\u3002 \u4e00\u65e6\u53d1\u73b0\u4e24\u4e2a\u5b57\u7b26\u4e0d\u5339\u914d\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u5220\u9664\u5de6\u8fb9\u6216\u53f3\u8fb9\u7684\u4e00\u4e2a\u5b57\u7b26\uff0c\u518d\u5224\u65ad\u5220\u9664\u540e\u7684\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u56de\u6587\u4e32\u3002","title":"\u601d\u8def\u5206\u6790"},{"location":"lesson9/Lesson9%20Python/#_21","text":"class Solution(object): def validPalindrome(self, s): if s == s[::-1]: return True l, r = 0, len(s)-1 while l < r: if s[l] == s[r]: l += 1 r -= 1 else: # \u5c1d\u8bd5\u5220\u9664\u5de6\u8fb9\u6216\u53f3\u8fb9\u7684\u5b57\u7b26\u540e\u68c0\u67e5\u662f\u5426\u662f\u56de\u6587 return s[l+1:r+1] == s[l+1:r+1][::-1] or s[l:r] == s[l:r][::-1] return True","title":"\u53c2\u8003\u89e3\u7b54"},{"location":"lesson9/Lesson9%20Python/#_22","text":"\u9898\u76ee\u7f16\u53f7 \u9898\u76ee\u540d\u79f0 \u4e3b\u8981\u8003\u70b9 151 \u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd \u5b57\u7b26\u4e32\u53cd\u8f6c\uff0c\u7a7a\u683c\u5904\u7406 392 \u5224\u65ad\u5b50\u5e8f\u5217 \u5b50\u5e8f\u5217\u5224\u65ad\uff0c\u53cc\u6307\u9488 541 \u53cd\u8f6c\u5b57\u7b26\u4e32 II \u5206\u6bb5\u5b57\u7b26\u4e32\u53cd\u8f6c\uff0c\u8fed\u4ee3\u5904\u7406 1332 \u5220\u9664\u56de\u6587\u5b50\u5e8f\u5217 \u56de\u6587\u5224\u65ad\uff0c\u5b57\u7b26\u4e32\u5220\u9664","title":"\u8bfe\u540e\u7ec3\u4e60"}]}